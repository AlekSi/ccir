// Code generated by running "go generate". DO NOT EDIT.

// +build ignore

// ----------------------------------------------------------------------------
//      /usr/include/i386-linux-gnu/bits/stat.h
// ----------------------------------------------------------------------------
/* Copyright (C) 1999-2016 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */

// ----------------------------------------------------------------------------
//      /usr/include/i386-linux-gnu/sys/stat.h
// ----------------------------------------------------------------------------
/* Copyright (C) 1991-2016 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */

#define _BITS_STAT_H (1)
#define _STAT_VER_LINUX_OLD (1)
#define _STAT_VER_KERNEL (1)
#define _STAT_VER_SVR4 (2)
#define _STAT_VER_LINUX (3)
#define _MKNOD_VER_LINUX (1)
#define _MKNOD_VER_SVR4 (2)
#define _MKNOD_VER _MKNOD_VER_LINUX
#define _STAT_VER _STAT_VER_LINUX
struct stat {
	__dev_t st_dev;
	unsigned short int __pad1;
	__ino_t st_ino;
	__mode_t st_mode;
	__nlink_t st_nlink;
	__uid_t st_uid;
	__gid_t st_gid;
	__dev_t st_rdev;
	unsigned short int __pad2;
	__off_t st_size;
	__blksize_t st_blksize;
	__blkcnt_t st_blocks;
	__time_t st_atime;
	__syscall_ulong_t st_atimensec;
	__time_t st_mtime;
	__syscall_ulong_t st_mtimensec;
	__time_t st_ctime;
	__syscall_ulong_t st_ctimensec;
	unsigned long int __glibc_reserved4;
	unsigned long int __glibc_reserved5;
};
#define _STATBUF_ST_BLKSIZE
#define _STATBUF_ST_RDEV
#define _STATBUF_ST_NSEC
#define __S_IFMT (61440)
#define __S_IFDIR (16384)
#define __S_IFCHR (8192)
#define __S_IFBLK (24576)
#define __S_IFREG (32768)
#define __S_IFIFO (4096)
#define __S_IFLNK (40960)
#define __S_IFSOCK (49152)
#define __S_TYPEISMQ(buf) ( ( buf ) -> st_mode - ( buf ) -> st_mode )
#define __S_TYPEISSEM(buf) ( ( buf ) -> st_mode - ( buf ) -> st_mode )
#define __S_TYPEISSHM(buf) ( ( buf ) -> st_mode - ( buf ) -> st_mode )
#define __S_ISUID (2048)
#define __S_ISGID (1024)
#define __S_ISVTX (512)
#define __S_IREAD (256)
#define __S_IWRITE (128)
#define __S_IEXEC (64)
#define _SYS_STAT_H (1)
typedef __dev_t dev_t;
#define __dev_t_defined
typedef __gid_t gid_t;
#define __gid_t_defined
typedef __ino_t ino_t;
#define __ino_t_defined
typedef __mode_t mode_t;
#define __mode_t_defined
typedef __nlink_t nlink_t;
#define __nlink_t_defined
typedef __off_t off_t;
#define __off_t_defined
typedef __uid_t uid_t;
#define __uid_t_defined
typedef __blkcnt_t blkcnt_t;
#define __blkcnt_t_defined
typedef __blksize_t blksize_t;
#define __blksize_t_defined
#define S_IFMT __S_IFMT
#define S_IFDIR __S_IFDIR
#define S_IFCHR __S_IFCHR
#define S_IFBLK __S_IFBLK
#define S_IFREG __S_IFREG
#define S_IFIFO __S_IFIFO
#define S_IFLNK __S_IFLNK
#define S_IFSOCK __S_IFSOCK
#define __S_ISTYPE(mode, mask) ( ( ( mode ) & __S_IFMT ) == ( mask ) )
#define S_ISDIR(mode) __S_ISTYPE ( ( mode ) , __S_IFDIR )
#define S_ISCHR(mode) __S_ISTYPE ( ( mode ) , __S_IFCHR )
#define S_ISBLK(mode) __S_ISTYPE ( ( mode ) , __S_IFBLK )
#define S_ISREG(mode) __S_ISTYPE ( ( mode ) , __S_IFREG )
#define S_ISFIFO(mode) __S_ISTYPE ( ( mode ) , __S_IFIFO )
#define S_ISLNK(mode) __S_ISTYPE ( ( mode ) , __S_IFLNK )
#define S_ISSOCK(mode) __S_ISTYPE ( ( mode ) , __S_IFSOCK )
#define S_TYPEISMQ(buf) __S_TYPEISMQ ( buf )
#define S_TYPEISSEM(buf) __S_TYPEISSEM ( buf )
#define S_TYPEISSHM(buf) __S_TYPEISSHM ( buf )
#define S_ISUID __S_ISUID
#define S_ISGID __S_ISGID
#define S_ISVTX __S_ISVTX
#define S_IRUSR __S_IREAD
#define S_IWUSR __S_IWRITE
#define S_IXUSR __S_IEXEC
#define S_IRWXU (448)
#define S_IRGRP (32)
#define S_IWGRP (16)
#define S_IXGRP (8)
#define S_IRWXG (56)
#define S_IROTH (4)
#define S_IWOTH (2)
#define S_IXOTH (1)
#define S_IRWXO (7)
extern int stat(char *__file, struct stat *__buf);
extern int fstat(int __fd, struct stat *__buf);
extern int lstat(char *__file, struct stat *__buf);
extern int chmod(char *__file, __mode_t __mode);
extern int fchmod(int __fd, __mode_t __mode);
extern __mode_t umask(__mode_t __mask);
extern int mkdir(char *__path, __mode_t __mode);
extern int mknod(char *__path, __mode_t __mode, __dev_t __dev);
extern int mkfifo(char *__path, __mode_t __mode);
extern int __fxstat(int __ver, int __fildes, struct stat *__stat_buf);
extern int __xstat(int __ver, char *__filename, struct stat *__stat_buf);
extern int __lxstat(int __ver, char *__filename, struct stat *__stat_buf);
extern int __fxstatat(int __ver, int __fildes, char *__filename, struct stat *__stat_buf, int __flag);
extern int __xmknod(int __ver, char *__path, __mode_t __mode, __dev_t * __dev);
extern int __xmknodat(int __ver, int __fd, char *__path, __mode_t __mode, __dev_t * __dev);
