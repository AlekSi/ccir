// Code generated by running "go generate". DO NOT EDIT.

// +build ignore

// ----------------------------------------------------------------------------
//      /usr/include/stdlib.h
// ----------------------------------------------------------------------------
/* Copyright (C) 1991-2016 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */

#define _STDLIB_H (1)
typedef struct {
	int quot;
	int rem;
} div_t;
typedef struct {
	long int quot;
	long int rem;
} ldiv_t;
#define __ldiv_t_defined (1)
typedef struct {
	long long int quot;
	long long int rem;
} lldiv_t;
#define __lldiv_t_defined (1)
#define RAND_MAX (2147483647)
#define EXIT_FAILURE (1)
#define EXIT_SUCCESS (0)
#define MB_CUR_MAX ( __ctype_get_mb_cur_max ( ) )
extern size_t __ctype_get_mb_cur_max(void);
extern double atof(char *__nptr);
extern int atoi(char *__nptr);
extern long int atol(char *__nptr);
extern long long int atoll(char *__nptr);
extern double strtod(char *__nptr, char **__endptr);
extern float strtof(char *__nptr, char **__endptr);
extern long double strtold(char *__nptr, char **__endptr);
extern long int strtol(char *__nptr, char **__endptr, int __base);
extern unsigned long int strtoul(char *__nptr, char **__endptr, int __base);
extern long long int strtoll(char *__nptr, char **__endptr, int __base);
extern unsigned long long int strtoull(char *__nptr, char **__endptr, int __base);
extern int rand(void);
extern void srand(unsigned int __seed);
#define __malloc_and_calloc_defined
extern void *malloc(size_t __size);
extern void *calloc(size_t __nmemb, size_t __size);
extern void *realloc(void *__ptr, size_t __size);
extern void free(void *__ptr);
extern void abort(void);
extern int atexit(void (*__func) (void));
extern void exit(int __status);
extern void _Exit(int __status);
extern char *getenv(char *__name);
extern int system(char *__command);
#define __COMPAR_FN_T
typedef int (*__compar_fn_t) (void *, void *);
extern void *bsearch(void *__key, void *__base, size_t __nmemb, size_t __size, __compar_fn_t __compar);
extern void qsort(void *__base, size_t __nmemb, size_t __size, __compar_fn_t __compar);
extern int abs(int __x);
extern long int labs(long int __x);
extern long long int llabs(long long int __x);
extern div_t div(int __numer, int __denom);
extern ldiv_t ldiv(long int __numer, long int __denom);
extern lldiv_t lldiv(long long int __numer, long long int __denom);
extern int mblen(char *__s, size_t __n);
extern int mbtowc(wchar_t * __pwc, char *__s, size_t __n);
extern int wctomb(char *__s, wchar_t __wchar);
extern size_t mbstowcs(wchar_t * __pwcs, char *__s, size_t __n);
extern size_t wcstombs(char *__s, wchar_t * __pwcs, size_t __n);
