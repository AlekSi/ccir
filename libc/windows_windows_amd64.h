// Code generated by running "go generate". DO NOT EDIT.

// +build ignore

	typedef unsigned long long size_t ;
typedef long long ssize_t ;
typedef size_t rsize_t ;
typedef long long intptr_t ;
typedef unsigned long long uintptr_t ;
typedef long long ptrdiff_t ;
typedef unsigned short wchar_t ;
typedef unsigned short wint_t ;
typedef unsigned short wctype_t ;
typedef int errno_t ;
typedef long __time32_t ;
typedef long long __time64_t ;
typedef __time64_t time_t ;
struct threadlocaleinfostruct ;
struct threadmbcinfostruct ;
typedef struct threadlocaleinfostruct *pthreadlocinfo ;
typedef struct threadmbcinfostruct *pthreadmbcinfo ;
struct __lc_time_data ;
typedef struct localeinfo_struct {pthreadlocinfo locinfo ;pthreadmbcinfo mbcinfo ;}_locale_tstruct ;
typedef struct localeinfo_struct {pthreadlocinfo locinfo ;pthreadmbcinfo mbcinfo ;}*_locale_t ;

typedef struct tagLC_ID {unsigned short wLanguage ;unsigned short wCountry ;unsigned short wCodePage ;}LC_ID ;
typedef struct tagLC_ID {unsigned short wLanguage ;unsigned short wCountry ;unsigned short wCodePage ;}*LPLC_ID ;

typedef struct threadlocaleinfostruct {int refcount ;unsigned int lc_codepage ;unsigned int lc_collate_cp ;unsigned long lc_handle [6 ];LC_ID lc_id [6 ];struct {char *locale ;wchar_t *wlocale ;int *refcount ;int *wrefcount ;}lc_category [6 ];int lc_clike ;int mb_cur_max ;int *lconv_intl_refcount ;int *lconv_num_refcount ;int *lconv_mon_refcount ;struct lconv *lconv ;int *ctype1_refcount ;unsigned short *ctype1 ;const unsigned short *pctype ;const unsigned char *pclmap ;const unsigned char *pcumap ;struct __lc_time_data *lc_time_curr ;}threadlocinfo ;
// m:\mingw\x86_64-w64-mingw32\include\excpt.h

struct _EXCEPTION_POINTERS ;
struct _EXCEPTION_RECORD ;
struct _CONTEXT ;
unsigned long _exception_code (void );
void *_exception_info (void );
int _abnormal_termination (void );
typedef void (*_PHNDLR )(int );
struct _XCPT_ACTION {unsigned long XcptNum ;int SigNum ;_PHNDLR XcptAction ;};
extern struct _XCPT_ACTION _XcptActTab [];
extern int _XcptActTabCount ;
extern int _XcptActTabSize ;
extern int _First_FPE_Indx ;
extern int _Num_FPE ;
int __CppXcptFilter (unsigned long _ExceptionNum ,struct _EXCEPTION_POINTERS *_ExceptionPtr );
int _XcptFilter (unsigned long _ExceptionNum ,struct _EXCEPTION_POINTERS *_ExceptionPtr );
typedef int (*PEXCEPTION_HANDLER )(struct _EXCEPTION_RECORD *,void *,struct _CONTEXT *,void *);
// m:\mingw\x86_64-w64-mingw32\include\minwindef.h

typedef unsigned long ULONG ;
typedef ULONG *PULONG ;
typedef unsigned short USHORT ;
typedef USHORT *PUSHORT ;
typedef unsigned char UCHAR ;
typedef UCHAR *PUCHAR ;
typedef char *PSZ ;
typedef int WINBOOL ;
typedef int BOOL ;
typedef WINBOOL *PBOOL ;
typedef WINBOOL *LPBOOL ;
typedef unsigned char BYTE ;
typedef unsigned short WORD ;
typedef unsigned long DWORD ;
typedef float FLOAT ;
typedef FLOAT *PFLOAT ;
typedef BYTE *PBYTE ;
typedef BYTE *LPBYTE ;
typedef int *PINT ;
typedef int *LPINT ;
typedef WORD *PWORD ;
typedef WORD *LPWORD ;
typedef long *LPLONG ;
typedef DWORD *PDWORD ;
typedef DWORD *LPDWORD ;
typedef void *LPVOID ;
typedef const void *LPCVOID ;
typedef int INT ;
typedef unsigned int UINT ;
typedef unsigned int *PUINT ;
// m:\mingw\x86_64-w64-mingw32\include\basetsd.h

typedef unsigned long long POINTER_64_INT ;
typedef signed char INT8 ;
typedef signed char *PINT8 ;

typedef signed short INT16 ;
typedef signed short *PINT16 ;

typedef signed int INT32 ;
typedef signed int *PINT32 ;

typedef signed long long INT64 ;
typedef signed long long *PINT64 ;

typedef unsigned char UINT8 ;
typedef unsigned char *PUINT8 ;

typedef unsigned short UINT16 ;
typedef unsigned short *PUINT16 ;

typedef unsigned int UINT32 ;
typedef unsigned int *PUINT32 ;

typedef unsigned long long UINT64 ;
typedef unsigned long long *PUINT64 ;

typedef signed int LONG32 ;
typedef signed int *PLONG32 ;

typedef unsigned int ULONG32 ;
typedef unsigned int *PULONG32 ;

typedef unsigned int DWORD32 ;
typedef unsigned int *PDWORD32 ;

typedef long long INT_PTR ;
typedef long long *PINT_PTR ;

typedef unsigned long long UINT_PTR ;
typedef unsigned long long *PUINT_PTR ;

typedef long long LONG_PTR ;
typedef long long *PLONG_PTR ;

typedef unsigned long long ULONG_PTR ;
typedef unsigned long long *PULONG_PTR ;

typedef long long SHANDLE_PTR ;
typedef unsigned long long HANDLE_PTR ;
typedef unsigned int UHALF_PTR ;
typedef unsigned int *PUHALF_PTR ;

typedef int HALF_PTR ;
typedef int *PHALF_PTR ;

typedef ULONG_PTR SIZE_T ;
typedef ULONG_PTR *PSIZE_T ;

typedef LONG_PTR SSIZE_T ;
typedef LONG_PTR *PSSIZE_T ;

typedef ULONG_PTR DWORD_PTR ;
typedef ULONG_PTR *PDWORD_PTR ;

typedef long long LONG64 ;
typedef long long *PLONG64 ;

typedef unsigned long long ULONG64 ;
typedef unsigned long long *PULONG64 ;

typedef unsigned long long DWORD64 ;
typedef unsigned long long *PDWORD64 ;

typedef ULONG_PTR KAFFINITY ;
typedef KAFFINITY *PKAFFINITY ;
// m:\mingw\x86_64-w64-mingw32\include\winnt.h

typedef void *PVOID ;
typedef void *PVOID64 ;
typedef char CHAR ;
typedef short SHORT ;
typedef long LONG ;
typedef int INT ;
typedef wchar_t WCHAR ;
typedef WCHAR *PWCHAR ;
typedef WCHAR *LPWCH ;
typedef WCHAR *PWCH ;

typedef const WCHAR *LPCWCH ;
typedef const WCHAR *PCWCH ;

typedef WCHAR *NWPSTR ;
typedef WCHAR *LPWSTR ;
typedef WCHAR *PWSTR ;

typedef PWSTR *PZPWSTR ;
typedef const PWSTR *PCZPWSTR ;
typedef WCHAR *LPUWSTR ;
typedef WCHAR *PUWSTR ;

typedef const WCHAR *LPCWSTR ;
typedef const WCHAR *PCWSTR ;

typedef PCWSTR *PZPCWSTR ;
typedef const WCHAR *LPCUWSTR ;
typedef const WCHAR *PCUWSTR ;

typedef WCHAR *PZZWSTR ;
typedef const WCHAR *PCZZWSTR ;
typedef WCHAR *PUZZWSTR ;
typedef const WCHAR *PCUZZWSTR ;
typedef WCHAR *PNZWCH ;
typedef const WCHAR *PCNZWCH ;
typedef WCHAR *PUNZWCH ;
typedef const WCHAR *PCUNZWCH ;
typedef CHAR *PCHAR ;
typedef CHAR *LPCH ;
typedef CHAR *PCH ;

typedef const CHAR *LPCCH ;
typedef const CHAR *PCCH ;

typedef CHAR *NPSTR ;
typedef CHAR *LPSTR ;
typedef CHAR *PSTR ;

typedef PSTR *PZPSTR ;
typedef const PSTR *PCZPSTR ;
typedef const CHAR *LPCSTR ;
typedef const CHAR *PCSTR ;

typedef PCSTR *PZPCSTR ;
typedef CHAR *PZZSTR ;
typedef const CHAR *PCZZSTR ;
typedef CHAR *PNZCH ;
typedef const CHAR *PCNZCH ;
typedef char TCHAR ;
typedef char *PTCHAR ;

typedef unsigned char TBYTE ;
typedef unsigned char *PTBYTE ;

typedef LPSTR LPTCH ;
typedef LPSTR PTCH ;

typedef LPCCH LPCTCH ;
typedef LPCCH PCTCH ;

typedef LPSTR PTSTR ;
typedef LPSTR LPTSTR ;
typedef LPSTR PUTSTR ;
typedef LPSTR LPUTSTR ;

typedef LPCSTR PCTSTR ;
typedef LPCSTR LPCTSTR ;
typedef LPCSTR PCUTSTR ;
typedef LPCSTR LPCUTSTR ;

typedef PZZSTR PZZTSTR ;
typedef PZZSTR PUZZTSTR ;

typedef PCZZSTR PCZZTSTR ;
typedef PCZZSTR PCUZZTSTR ;

typedef PZPSTR PZPTSTR ;
typedef PNZCH PNZTCH ;
typedef PNZCH PUNZTCH ;

typedef PCNZCH PCNZTCH ;
typedef PCNZCH PCUNZTCH ;

typedef SHORT *PSHORT ;
typedef LONG *PLONG ;
typedef struct _GROUP_AFFINITY {KAFFINITY Mask ;WORD Group ;WORD Reserved [3 ];}GROUP_AFFINITY ;
typedef struct _GROUP_AFFINITY {KAFFINITY Mask ;WORD Group ;WORD Reserved [3 ];}*PGROUP_AFFINITY ;

typedef void *HANDLE ;
typedef HANDLE *PHANDLE ;
typedef BYTE FCHAR ;
typedef WORD FSHORT ;
typedef DWORD FLONG ;
typedef LONG HRESULT ;
typedef char CCHAR ;
typedef DWORD LCID ;
typedef PDWORD PLCID ;
typedef WORD LANGID ;
typedef enum {UNSPECIFIED_COMPARTMENT_ID =0 ,DEFAULT_COMPARTMENT_ID }COMPARTMENT_ID ;
typedef enum {UNSPECIFIED_COMPARTMENT_ID =0 ,DEFAULT_COMPARTMENT_ID }*PCOMPARTMENT_ID ;

typedef struct _FLOAT128 {long long LowPart ;long long HighPart ;}FLOAT128 ;
typedef FLOAT128 *PFLOAT128 ;
typedef long long LONGLONG ;
typedef unsigned long long ULONGLONG ;
typedef LONGLONG *PLONGLONG ;
typedef ULONGLONG *PULONGLONG ;
typedef LONGLONG USN ;
typedef union _LARGE_INTEGER {struct {DWORD LowPart ;LONG HighPart ;};struct {DWORD LowPart ;LONG HighPart ;}u ;LONGLONG QuadPart ;}LARGE_INTEGER ;
typedef LARGE_INTEGER *PLARGE_INTEGER ;
typedef union _ULARGE_INTEGER {struct {DWORD LowPart ;DWORD HighPart ;};struct {DWORD LowPart ;DWORD HighPart ;}u ;ULONGLONG QuadPart ;}ULARGE_INTEGER ;
typedef ULARGE_INTEGER *PULARGE_INTEGER ;
typedef struct _LUID {DWORD LowPart ;LONG HighPart ;}LUID ;
typedef struct _LUID {DWORD LowPart ;LONG HighPart ;}*PLUID ;

typedef ULONGLONG DWORDLONG ;
typedef DWORDLONG *PDWORDLONG ;
unsigned char _rotl8 (unsigned char Value ,unsigned char Shift );
unsigned short _rotl16 (unsigned short Value ,unsigned char Shift );
unsigned char _rotr8 (unsigned char Value ,unsigned char Shift );
unsigned short _rotr16 (unsigned short Value ,unsigned char Shift );
unsigned int _rotl (unsigned int Value ,int Shift );
unsigned int _rotr (unsigned int Value ,int Shift );
unsigned long long _rotl64 (unsigned long long Value ,int Shift );
unsigned long long _rotr64 (unsigned long long Value ,int Shift );
typedef BYTE BOOLEAN ;
typedef BOOLEAN *PBOOLEAN ;
typedef struct _LIST_ENTRY {struct _LIST_ENTRY *Flink ;struct _LIST_ENTRY *Blink ;}LIST_ENTRY ;
typedef struct _LIST_ENTRY {struct _LIST_ENTRY *Flink ;struct _LIST_ENTRY *Blink ;}*PLIST_ENTRY ;
typedef struct _LIST_ENTRY {struct _LIST_ENTRY *Flink ;struct _LIST_ENTRY *Blink ;}*PRLIST_ENTRY ;

typedef struct _SINGLE_LIST_ENTRY {struct _SINGLE_LIST_ENTRY *Next ;}SINGLE_LIST_ENTRY ;
typedef struct _SINGLE_LIST_ENTRY {struct _SINGLE_LIST_ENTRY *Next ;}*PSINGLE_LIST_ENTRY ;

typedef struct LIST_ENTRY32 {DWORD Flink ;DWORD Blink ;}LIST_ENTRY32 ;
typedef LIST_ENTRY32 *PLIST_ENTRY32 ;
typedef struct LIST_ENTRY64 {ULONGLONG Flink ;ULONGLONG Blink ;}LIST_ENTRY64 ;
typedef LIST_ENTRY64 *PLIST_ENTRY64 ;
// m:\mingw\x86_64-w64-mingw32\include\guiddef.h

typedef struct _GUID {unsigned long Data1 ;unsigned short Data2 ;unsigned short Data3 ;unsigned char Data4 [8 ];}GUID ;
typedef GUID *LPGUID ;
typedef const GUID *LPCGUID ;
typedef GUID IID ;
typedef IID *LPIID ;
typedef GUID CLSID ;
typedef CLSID *LPCLSID ;
typedef GUID FMTID ;
typedef FMTID *LPFMTID ;
// m:\mingw\x86_64-w64-mingw32\include\string.h

void *_memccpy (void *_Dst ,const void *_Src ,int _Val ,size_t _MaxCount );
void *memchr (const void *_Buf ,int _Val ,size_t _MaxCount );
int _memicmp (const void *_Buf1 ,const void *_Buf2 ,size_t _Size );
int _memicmp_l (const void *_Buf1 ,const void *_Buf2 ,size_t _Size ,_locale_t _Locale );
int memcmp (const void *_Buf1 ,const void *_Buf2 ,size_t _Size );
void *memcpy (void *_Dst ,const void *_Src ,size_t _Size );
errno_t memcpy_s (void *_dest ,size_t _numberOfElements ,const void *_src ,size_t _count );
void *mempcpy (void *_Dst ,const void *_Src ,size_t _Size );
void *memset (void *_Dst ,int _Val ,size_t _Size );
void *memccpy (void *_Dst ,const void *_Src ,int _Val ,size_t _Size );
int memicmp (const void *_Buf1 ,const void *_Buf2 ,size_t _Size );
char *_strset (char *_Str ,int _Val );
char *_strset_l (char *_Str ,int _Val ,_locale_t _Locale );
char *strcpy (char *_Dest ,const char *_Source );
char *strcat (char *_Dest ,const char *_Source );
int strcmp (const char *_Str1 ,const char *_Str2 );
size_t strlen (const char *_Str );
size_t strnlen (const char *_Str ,size_t _MaxCount );
void *memmove (void *_Dst ,const void *_Src ,size_t _Size );
char *_strdup (const char *_Src );
char *strchr (const char *_Str ,int _Val );
int _stricmp (const char *_Str1 ,const char *_Str2 );
int _strcmpi (const char *_Str1 ,const char *_Str2 );
int _stricmp_l (const char *_Str1 ,const char *_Str2 ,_locale_t _Locale );
int strcoll (const char *_Str1 ,const char *_Str2 );
int _strcoll_l (const char *_Str1 ,const char *_Str2 ,_locale_t _Locale );
int _stricoll (const char *_Str1 ,const char *_Str2 );
int _stricoll_l (const char *_Str1 ,const char *_Str2 ,_locale_t _Locale );
int _strncoll (const char *_Str1 ,const char *_Str2 ,size_t _MaxCount );
int _strncoll_l (const char *_Str1 ,const char *_Str2 ,size_t _MaxCount ,_locale_t _Locale );
int _strnicoll (const char *_Str1 ,const char *_Str2 ,size_t _MaxCount );
int _strnicoll_l (const char *_Str1 ,const char *_Str2 ,size_t _MaxCount ,_locale_t _Locale );
size_t strcspn (const char *_Str ,const char *_Control );
char *_strerror (const char *_ErrMsg );
char *strerror (int );
char *_strlwr (char *_String );
char *strlwr_l (char *_String ,_locale_t _Locale );
char *strncat (char *_Dest ,const char *_Source ,size_t _Count );
int strncmp (const char *_Str1 ,const char *_Str2 ,size_t _MaxCount );
int _strnicmp (const char *_Str1 ,const char *_Str2 ,size_t _MaxCount );
int _strnicmp_l (const char *_Str1 ,const char *_Str2 ,size_t _MaxCount ,_locale_t _Locale );
char *strncpy (char *_Dest ,const char *_Source ,size_t _Count );
char *_strnset (char *_Str ,int _Val ,size_t _MaxCount );
char *_strnset_l (char *str ,int c ,size_t count ,_locale_t _Locale );
char *strpbrk (const char *_Str ,const char *_Control );
char *strrchr (const char *_Str ,int _Ch );
char *_strrev (char *_Str );
size_t strspn (const char *_Str ,const char *_Control );
char *strstr (const char *_Str ,const char *_SubStr );
char *strtok (char *_Str ,const char *_Delim );
char *strtok_r (char *_Str ,const char *_Delim ,char **__last );
char *_strupr (char *_String );
char *_strupr_l (char *_String ,_locale_t _Locale );
size_t strxfrm (char *_Dst ,const char *_Src ,size_t _MaxCount );
size_t _strxfrm_l (char *_Dst ,const char *_Src ,size_t _MaxCount ,_locale_t _Locale );
char *strdup (const char *_Src );
int strcmpi (const char *_Str1 ,const char *_Str2 );
int stricmp (const char *_Str1 ,const char *_Str2 );
char *strlwr (char *_Str );
int strnicmp (const char *_Str1 ,const char *_Str ,size_t _MaxCount );
int strncasecmp (const char *,const char *,size_t );
int strcasecmp (const char *,const char *);
char *strnset (char *_Str ,int _Val ,size_t _MaxCount );
char *strrev (char *_Str );
char *strset (char *_Str ,int _Val );
char *strupr (char *_Str );
wchar_t *_wcsdup (const wchar_t *_Str );
wchar_t *wcscat (wchar_t *_Dest ,const wchar_t *_Source );
wchar_t *wcschr (const wchar_t *_Str ,wchar_t _Ch );
int wcscmp (const wchar_t *_Str1 ,const wchar_t *_Str2 );
wchar_t *wcscpy (wchar_t *_Dest ,const wchar_t *_Source );
size_t wcscspn (const wchar_t *_Str ,const wchar_t *_Control );
size_t wcslen (const wchar_t *_Str );
size_t wcsnlen (const wchar_t *_Src ,size_t _MaxCount );
wchar_t *wcsncat (wchar_t *_Dest ,const wchar_t *_Source ,size_t _Count );
int wcsncmp (const wchar_t *_Str1 ,const wchar_t *_Str2 ,size_t _MaxCount );
wchar_t *wcsncpy (wchar_t *_Dest ,const wchar_t *_Source ,size_t _Count );
wchar_t *_wcsncpy_l (wchar_t *_Dest ,const wchar_t *_Source ,size_t _Count ,_locale_t _Locale );
wchar_t *wcspbrk (const wchar_t *_Str ,const wchar_t *_Control );
wchar_t *wcsrchr (const wchar_t *_Str ,wchar_t _Ch );
size_t wcsspn (const wchar_t *_Str ,const wchar_t *_Control );
wchar_t *wcsstr (const wchar_t *_Str ,const wchar_t *_SubStr );
wchar_t *wcstok (wchar_t *_Str ,const wchar_t *_Delim );
wchar_t *_wcserror (int _ErrNum );
wchar_t *__wcserror (const wchar_t *_Str );
int _wcsicmp (const wchar_t *_Str1 ,const wchar_t *_Str2 );
int _wcsicmp_l (const wchar_t *_Str1 ,const wchar_t *_Str2 ,_locale_t _Locale );
int _wcsnicmp (const wchar_t *_Str1 ,const wchar_t *_Str2 ,size_t _MaxCount );
int _wcsnicmp_l (const wchar_t *_Str1 ,const wchar_t *_Str2 ,size_t _MaxCount ,_locale_t _Locale );
wchar_t *_wcsnset (wchar_t *_Str ,wchar_t _Val ,size_t _MaxCount );
wchar_t *_wcsrev (wchar_t *_Str );
wchar_t *_wcsset (wchar_t *_Str ,wchar_t _Val );
wchar_t *_wcslwr (wchar_t *_String );
wchar_t *_wcslwr_l (wchar_t *_String ,_locale_t _Locale );
wchar_t *_wcsupr (wchar_t *_String );
wchar_t *_wcsupr_l (wchar_t *_String ,_locale_t _Locale );
size_t wcsxfrm (wchar_t *_Dst ,const wchar_t *_Src ,size_t _MaxCount );
size_t _wcsxfrm_l (wchar_t *_Dst ,const wchar_t *_Src ,size_t _MaxCount ,_locale_t _Locale );
int wcscoll (const wchar_t *_Str1 ,const wchar_t *_Str2 );
int _wcscoll_l (const wchar_t *_Str1 ,const wchar_t *_Str2 ,_locale_t _Locale );
int _wcsicoll (const wchar_t *_Str1 ,const wchar_t *_Str2 );
int _wcsicoll_l (const wchar_t *_Str1 ,const wchar_t *_Str2 ,_locale_t _Locale );
int _wcsncoll (const wchar_t *_Str1 ,const wchar_t *_Str2 ,size_t _MaxCount );
int _wcsncoll_l (const wchar_t *_Str1 ,const wchar_t *_Str2 ,size_t _MaxCount ,_locale_t _Locale );
int _wcsnicoll (const wchar_t *_Str1 ,const wchar_t *_Str2 ,size_t _MaxCount );
int _wcsnicoll_l (const wchar_t *_Str1 ,const wchar_t *_Str2 ,size_t _MaxCount ,_locale_t _Locale );
wchar_t *wcsdup (const wchar_t *_Str );
int wcsicmp (const wchar_t *_Str1 ,const wchar_t *_Str2 );
int wcsnicmp (const wchar_t *_Str1 ,const wchar_t *_Str2 ,size_t _MaxCount );
wchar_t *wcsnset (wchar_t *_Str ,wchar_t _Val ,size_t _MaxCount );
wchar_t *wcsrev (wchar_t *_Str );
wchar_t *wcsset (wchar_t *_Str ,wchar_t _Val );
wchar_t *wcslwr (wchar_t *_Str );
wchar_t *wcsupr (wchar_t *_Str );
int wcsicoll (const wchar_t *_Str1 ,const wchar_t *_Str2 );
// m:\mingw\x86_64-w64-mingw32\include\winnt.h

typedef struct _OBJECTID {GUID Lineage ;DWORD Uniquifier ;}OBJECTID ;
typedef int EXCEPTION_ROUTINE (struct _EXCEPTION_RECORD *ExceptionRecord ,PVOID EstablisherFrame ,struct _CONTEXT *ContextRecord ,PVOID DispatcherContext );
typedef EXCEPTION_ROUTINE *PEXCEPTION_ROUTINE ;
typedef ULONG_PTR KSPIN_LOCK ;
typedef KSPIN_LOCK *PKSPIN_LOCK ;
typedef struct _M128A {ULONGLONG Low ;LONGLONG High ;}M128A ;
typedef struct _M128A {ULONGLONG Low ;LONGLONG High ;}*PM128A ;

typedef struct _XSAVE_FORMAT {WORD ControlWord ;WORD StatusWord ;BYTE TagWord ;BYTE Reserved1 ;WORD ErrorOpcode ;DWORD ErrorOffset ;WORD ErrorSelector ;WORD Reserved2 ;DWORD DataOffset ;WORD DataSelector ;WORD Reserved3 ;DWORD MxCsr ;DWORD MxCsr_Mask ;M128A FloatRegisters [8 ];M128A XmmRegisters [16 ];BYTE Reserved4 [96 ];}XSAVE_FORMAT ;
typedef struct _XSAVE_FORMAT {WORD ControlWord ;WORD StatusWord ;BYTE TagWord ;BYTE Reserved1 ;WORD ErrorOpcode ;DWORD ErrorOffset ;WORD ErrorSelector ;WORD Reserved2 ;DWORD DataOffset ;WORD DataSelector ;WORD Reserved3 ;DWORD MxCsr ;DWORD MxCsr_Mask ;M128A FloatRegisters [8 ];M128A XmmRegisters [16 ];BYTE Reserved4 [96 ];}*PXSAVE_FORMAT ;

typedef struct _XSAVE_AREA_HEADER {DWORD64 Mask ;DWORD64 Reserved [7 ];}XSAVE_AREA_HEADER ;
typedef struct _XSAVE_AREA_HEADER {DWORD64 Mask ;DWORD64 Reserved [7 ];}*PXSAVE_AREA_HEADER ;

typedef struct _XSAVE_AREA {XSAVE_FORMAT LegacyState ;XSAVE_AREA_HEADER Header ;}XSAVE_AREA ;
typedef struct _XSAVE_AREA {XSAVE_FORMAT LegacyState ;XSAVE_AREA_HEADER Header ;}*PXSAVE_AREA ;

typedef struct _XSTATE_CONTEXT {DWORD64 Mask ;DWORD Length ;DWORD Reserved1 ;PXSAVE_AREA Area ;PVOID Buffer ;}XSTATE_CONTEXT ;
typedef struct _XSTATE_CONTEXT {DWORD64 Mask ;DWORD Length ;DWORD Reserved1 ;PXSAVE_AREA Area ;PVOID Buffer ;}*PXSTATE_CONTEXT ;

typedef struct _SCOPE_TABLE_AMD64 {DWORD Count ;struct {DWORD BeginAddress ;DWORD EndAddress ;DWORD HandlerAddress ;DWORD JumpTarget ;}ScopeRecord [1 ];}SCOPE_TABLE_AMD64 ;
typedef struct _SCOPE_TABLE_AMD64 {DWORD Count ;struct {DWORD BeginAddress ;DWORD EndAddress ;DWORD HandlerAddress ;DWORD JumpTarget ;}ScopeRecord [1 ];}*PSCOPE_TABLE_AMD64 ;

unsigned long __getcallerseflags (void );
DWORD __segmentlimit (DWORD Selector );
LONGLONG __mulh (LONGLONG Multiplier ,LONGLONG Multiplicand );
ULONGLONG __umulh (ULONGLONG Multiplier ,ULONGLONG Multiplicand );
DWORD64 __shiftleft128 (DWORD64 LowPart ,DWORD64 HighPart ,BYTE Shift );
DWORD64 __shiftright128 (DWORD64 LowPart ,DWORD64 HighPart ,BYTE Shift );
LONG64 _mul128 (LONG64 Multiplier ,LONG64 Multiplicand ,LONG64 *HighProduct );
DWORD64 _umul128 (DWORD64 Multiplier ,DWORD64 Multiplicand ,DWORD64 *HighProduct );
LONG64 MultiplyExtract128 (LONG64 Multiplier ,LONG64 Multiplicand ,BYTE Shift );
DWORD64 UnsignedMultiplyExtract128 (DWORD64 Multiplier ,DWORD64 Multiplicand ,BYTE Shift );
typedef struct _XMM_SAVE_AREA32 {WORD ControlWord ;WORD StatusWord ;BYTE TagWord ;BYTE Reserved1 ;WORD ErrorOpcode ;DWORD ErrorOffset ;WORD ErrorSelector ;WORD Reserved2 ;DWORD DataOffset ;WORD DataSelector ;WORD Reserved3 ;DWORD MxCsr ;DWORD MxCsr_Mask ;M128A FloatRegisters [8 ];M128A XmmRegisters [16 ];BYTE Reserved4 [96 ];}XMM_SAVE_AREA32 ;
typedef struct _XMM_SAVE_AREA32 {WORD ControlWord ;WORD StatusWord ;BYTE TagWord ;BYTE Reserved1 ;WORD ErrorOpcode ;DWORD ErrorOffset ;WORD ErrorSelector ;WORD Reserved2 ;DWORD DataOffset ;WORD DataSelector ;WORD Reserved3 ;DWORD MxCsr ;DWORD MxCsr_Mask ;M128A FloatRegisters [8 ];M128A XmmRegisters [16 ];BYTE Reserved4 [96 ];}*PXMM_SAVE_AREA32 ;

typedef struct _CONTEXT {DWORD64 P1Home ;DWORD64 P2Home ;DWORD64 P3Home ;DWORD64 P4Home ;DWORD64 P5Home ;DWORD64 P6Home ;DWORD ContextFlags ;DWORD MxCsr ;WORD SegCs ;WORD SegDs ;WORD SegEs ;WORD SegFs ;WORD SegGs ;WORD SegSs ;DWORD EFlags ;DWORD64 Dr0 ;DWORD64 Dr1 ;DWORD64 Dr2 ;DWORD64 Dr3 ;DWORD64 Dr6 ;DWORD64 Dr7 ;DWORD64 Rax ;DWORD64 Rcx ;DWORD64 Rdx ;DWORD64 Rbx ;DWORD64 Rsp ;DWORD64 Rbp ;DWORD64 Rsi ;DWORD64 Rdi ;DWORD64 R8 ;DWORD64 R9 ;DWORD64 R10 ;DWORD64 R11 ;DWORD64 R12 ;DWORD64 R13 ;DWORD64 R14 ;DWORD64 R15 ;DWORD64 Rip ;union {XMM_SAVE_AREA32 FltSave ;XMM_SAVE_AREA32 FloatSave ;struct {M128A Header [2 ];M128A Legacy [8 ];M128A Xmm0 ;M128A Xmm1 ;M128A Xmm2 ;M128A Xmm3 ;M128A Xmm4 ;M128A Xmm5 ;M128A Xmm6 ;M128A Xmm7 ;M128A Xmm8 ;M128A Xmm9 ;M128A Xmm10 ;M128A Xmm11 ;M128A Xmm12 ;M128A Xmm13 ;M128A Xmm14 ;M128A Xmm15 ;};};M128A VectorRegister [26 ];DWORD64 VectorControl ;DWORD64 DebugControl ;DWORD64 LastBranchToRip ;DWORD64 LastBranchFromRip ;DWORD64 LastExceptionToRip ;DWORD64 LastExceptionFromRip ;}CONTEXT ;
typedef struct _CONTEXT {DWORD64 P1Home ;DWORD64 P2Home ;DWORD64 P3Home ;DWORD64 P4Home ;DWORD64 P5Home ;DWORD64 P6Home ;DWORD ContextFlags ;DWORD MxCsr ;WORD SegCs ;WORD SegDs ;WORD SegEs ;WORD SegFs ;WORD SegGs ;WORD SegSs ;DWORD EFlags ;DWORD64 Dr0 ;DWORD64 Dr1 ;DWORD64 Dr2 ;DWORD64 Dr3 ;DWORD64 Dr6 ;DWORD64 Dr7 ;DWORD64 Rax ;DWORD64 Rcx ;DWORD64 Rdx ;DWORD64 Rbx ;DWORD64 Rsp ;DWORD64 Rbp ;DWORD64 Rsi ;DWORD64 Rdi ;DWORD64 R8 ;DWORD64 R9 ;DWORD64 R10 ;DWORD64 R11 ;DWORD64 R12 ;DWORD64 R13 ;DWORD64 R14 ;DWORD64 R15 ;DWORD64 Rip ;union {XMM_SAVE_AREA32 FltSave ;XMM_SAVE_AREA32 FloatSave ;struct {M128A Header [2 ];M128A Legacy [8 ];M128A Xmm0 ;M128A Xmm1 ;M128A Xmm2 ;M128A Xmm3 ;M128A Xmm4 ;M128A Xmm5 ;M128A Xmm6 ;M128A Xmm7 ;M128A Xmm8 ;M128A Xmm9 ;M128A Xmm10 ;M128A Xmm11 ;M128A Xmm12 ;M128A Xmm13 ;M128A Xmm14 ;M128A Xmm15 ;};};M128A VectorRegister [26 ];DWORD64 VectorControl ;DWORD64 DebugControl ;DWORD64 LastBranchToRip ;DWORD64 LastBranchFromRip ;DWORD64 LastExceptionToRip ;DWORD64 LastExceptionFromRip ;}*PCONTEXT ;

typedef struct _RUNTIME_FUNCTION {DWORD BeginAddress ;DWORD EndAddress ;DWORD UnwindData ;}RUNTIME_FUNCTION ;
typedef struct _RUNTIME_FUNCTION {DWORD BeginAddress ;DWORD EndAddress ;DWORD UnwindData ;}*PRUNTIME_FUNCTION ;

typedef PRUNTIME_FUNCTION (*PGET_RUNTIME_FUNCTION_CALLBACK )(DWORD64 ControlPc ,PVOID Context );
typedef DWORD (*POUT_OF_PROCESS_FUNCTION_TABLE_CALLBACK )(HANDLE Process ,PVOID TableAddress ,PDWORD Entries ,PRUNTIME_FUNCTION *Functions );
typedef struct _LDT_ENTRY {WORD LimitLow ;WORD BaseLow ;union {struct {BYTE BaseMid ;BYTE Flags1 ;BYTE Flags2 ;BYTE BaseHi ;}Bytes ;struct {DWORD BaseMid :8 ;DWORD Type :5 ;DWORD Dpl :2 ;DWORD Pres :1 ;DWORD LimitHi :4 ;DWORD Sys :1 ;DWORD Reserved_0 :1 ;DWORD Default_Big :1 ;DWORD Granularity :1 ;DWORD BaseHi :8 ;}Bits ;}HighWord ;}LDT_ENTRY ;
typedef struct _LDT_ENTRY {WORD LimitLow ;WORD BaseLow ;union {struct {BYTE BaseMid ;BYTE Flags1 ;BYTE Flags2 ;BYTE BaseHi ;}Bytes ;struct {DWORD BaseMid :8 ;DWORD Type :5 ;DWORD Dpl :2 ;DWORD Pres :1 ;DWORD LimitHi :4 ;DWORD Sys :1 ;DWORD Reserved_0 :1 ;DWORD Default_Big :1 ;DWORD Granularity :1 ;DWORD BaseHi :8 ;}Bits ;}HighWord ;}*PLDT_ENTRY ;

typedef struct _EXCEPTION_RECORD {DWORD ExceptionCode ;DWORD ExceptionFlags ;struct _EXCEPTION_RECORD *ExceptionRecord ;PVOID ExceptionAddress ;DWORD NumberParameters ;ULONG_PTR ExceptionInformation [15 ];}EXCEPTION_RECORD ;
typedef EXCEPTION_RECORD *PEXCEPTION_RECORD ;
typedef struct _EXCEPTION_RECORD32 {DWORD ExceptionCode ;DWORD ExceptionFlags ;DWORD ExceptionRecord ;DWORD ExceptionAddress ;DWORD NumberParameters ;DWORD ExceptionInformation [15 ];}EXCEPTION_RECORD32 ;
typedef struct _EXCEPTION_RECORD32 {DWORD ExceptionCode ;DWORD ExceptionFlags ;DWORD ExceptionRecord ;DWORD ExceptionAddress ;DWORD NumberParameters ;DWORD ExceptionInformation [15 ];}*PEXCEPTION_RECORD32 ;

typedef struct _EXCEPTION_RECORD64 {DWORD ExceptionCode ;DWORD ExceptionFlags ;DWORD64 ExceptionRecord ;DWORD64 ExceptionAddress ;DWORD NumberParameters ;DWORD __unusedAlignment ;DWORD64 ExceptionInformation [15 ];}EXCEPTION_RECORD64 ;
typedef struct _EXCEPTION_RECORD64 {DWORD ExceptionCode ;DWORD ExceptionFlags ;DWORD64 ExceptionRecord ;DWORD64 ExceptionAddress ;DWORD NumberParameters ;DWORD __unusedAlignment ;DWORD64 ExceptionInformation [15 ];}*PEXCEPTION_RECORD64 ;

typedef struct _EXCEPTION_POINTERS {PEXCEPTION_RECORD ExceptionRecord ;PCONTEXT ContextRecord ;}EXCEPTION_POINTERS ;
typedef struct _EXCEPTION_POINTERS {PEXCEPTION_RECORD ExceptionRecord ;PCONTEXT ContextRecord ;}*PEXCEPTION_POINTERS ;

typedef struct _UNWIND_HISTORY_TABLE_ENTRY {ULONG64 ImageBase ;PRUNTIME_FUNCTION FunctionEntry ;}UNWIND_HISTORY_TABLE_ENTRY ;
typedef struct _UNWIND_HISTORY_TABLE_ENTRY {ULONG64 ImageBase ;PRUNTIME_FUNCTION FunctionEntry ;}*PUNWIND_HISTORY_TABLE_ENTRY ;

typedef struct _UNWIND_HISTORY_TABLE {ULONG Count ;UCHAR Search ;ULONG64 LowAddress ;ULONG64 HighAddress ;UNWIND_HISTORY_TABLE_ENTRY Entry [12 ];}UNWIND_HISTORY_TABLE ;
typedef struct _UNWIND_HISTORY_TABLE {ULONG Count ;UCHAR Search ;ULONG64 LowAddress ;ULONG64 HighAddress ;UNWIND_HISTORY_TABLE_ENTRY Entry [12 ];}*PUNWIND_HISTORY_TABLE ;

struct _DISPATCHER_CONTEXT ;
typedef struct _DISPATCHER_CONTEXT DISPATCHER_CONTEXT ;
typedef struct _DISPATCHER_CONTEXT *PDISPATCHER_CONTEXT ;
struct _DISPATCHER_CONTEXT {ULONG64 ControlPc ;ULONG64 ImageBase ;PRUNTIME_FUNCTION FunctionEntry ;ULONG64 EstablisherFrame ;ULONG64 TargetIp ;PCONTEXT ContextRecord ;PEXCEPTION_ROUTINE LanguageHandler ;PVOID HandlerData ;PUNWIND_HISTORY_TABLE HistoryTable ;ULONG ScopeIndex ;ULONG Fill0 ;};
typedef struct _KNONVOLATILE_CONTEXT_POINTERS {PM128A FloatingContext [16 ];PULONG64 IntegerContext [16 ];}KNONVOLATILE_CONTEXT_POINTERS ;
typedef struct _KNONVOLATILE_CONTEXT_POINTERS {PM128A FloatingContext [16 ];PULONG64 IntegerContext [16 ];}*PKNONVOLATILE_CONTEXT_POINTERS ;

typedef PVOID PACCESS_TOKEN ;
typedef PVOID PSECURITY_DESCRIPTOR ;
typedef PVOID PSID ;
typedef PVOID PCLAIMS_BLOB ;
typedef DWORD ACCESS_MASK ;
typedef ACCESS_MASK *PACCESS_MASK ;
typedef struct _GENERIC_MAPPING {ACCESS_MASK GenericRead ;ACCESS_MASK GenericWrite ;ACCESS_MASK GenericExecute ;ACCESS_MASK GenericAll ;}GENERIC_MAPPING ;
typedef GENERIC_MAPPING *PGENERIC_MAPPING ;
typedef struct _LUID_AND_ATTRIBUTES {LUID Luid ;DWORD Attributes ;}LUID_AND_ATTRIBUTES ;
typedef struct _LUID_AND_ATTRIBUTES {LUID Luid ;DWORD Attributes ;}*PLUID_AND_ATTRIBUTES ;

typedef LUID_AND_ATTRIBUTES LUID_AND_ATTRIBUTES_ARRAY [1 ];
typedef LUID_AND_ATTRIBUTES_ARRAY *PLUID_AND_ATTRIBUTES_ARRAY ;
typedef struct _SID_IDENTIFIER_AUTHORITY {BYTE Value [6 ];}SID_IDENTIFIER_AUTHORITY ;
typedef struct _SID_IDENTIFIER_AUTHORITY {BYTE Value [6 ];}*PSID_IDENTIFIER_AUTHORITY ;

typedef struct _SID {BYTE Revision ;BYTE SubAuthorityCount ;SID_IDENTIFIER_AUTHORITY IdentifierAuthority ;DWORD SubAuthority [1 ];}SID ;
typedef struct _SID {BYTE Revision ;BYTE SubAuthorityCount ;SID_IDENTIFIER_AUTHORITY IdentifierAuthority ;DWORD SubAuthority [1 ];}*PISID ;

typedef enum _SID_NAME_USE {SidTypeUser =1 ,SidTypeGroup ,SidTypeDomain ,SidTypeAlias ,SidTypeWellKnownGroup ,SidTypeDeletedAccount ,SidTypeInvalid ,SidTypeUnknown ,SidTypeComputer ,SidTypeLabel }SID_NAME_USE ;
typedef enum _SID_NAME_USE *PSID_NAME_USE ;

typedef struct _SID_AND_ATTRIBUTES {PSID Sid ;DWORD Attributes ;}SID_AND_ATTRIBUTES ;
typedef struct _SID_AND_ATTRIBUTES {PSID Sid ;DWORD Attributes ;}*PSID_AND_ATTRIBUTES ;

typedef SID_AND_ATTRIBUTES SID_AND_ATTRIBUTES_ARRAY [1 ];
typedef SID_AND_ATTRIBUTES_ARRAY *PSID_AND_ATTRIBUTES_ARRAY ;
typedef ULONG_PTR SID_HASH_ENTRY ;
typedef ULONG_PTR *PSID_HASH_ENTRY ;

typedef struct _SID_AND_ATTRIBUTES_HASH {DWORD SidCount ;PSID_AND_ATTRIBUTES SidAttr ;SID_HASH_ENTRY Hash [32 ];}SID_AND_ATTRIBUTES_HASH ;
typedef struct _SID_AND_ATTRIBUTES_HASH {DWORD SidCount ;PSID_AND_ATTRIBUTES SidAttr ;SID_HASH_ENTRY Hash [32 ];}*PSID_AND_ATTRIBUTES_HASH ;

typedef enum {WinNullSid =0 ,WinWorldSid =1 ,WinLocalSid =2 ,WinCreatorOwnerSid =3 ,WinCreatorGroupSid =4 ,WinCreatorOwnerServerSid =5 ,WinCreatorGroupServerSid =6 ,WinNtAuthoritySid =7 ,WinDialupSid =8 ,WinNetworkSid =9 ,WinBatchSid =10 ,WinInteractiveSid =11 ,WinServiceSid =12 ,WinAnonymousSid =13 ,WinProxySid =14 ,WinEnterpriseControllersSid =15 ,WinSelfSid =16 ,WinAuthenticatedUserSid =17 ,WinRestrictedCodeSid =18 ,WinTerminalServerSid =19 ,WinRemoteLogonIdSid =20 ,WinLogonIdsSid =21 ,WinLocalSystemSid =22 ,WinLocalServiceSid =23 ,WinNetworkServiceSid =24 ,WinBuiltinDomainSid =25 ,WinBuiltinAdministratorsSid =26 ,WinBuiltinUsersSid =27 ,WinBuiltinGuestsSid =28 ,WinBuiltinPowerUsersSid =29 ,WinBuiltinAccountOperatorsSid =30 ,WinBuiltinSystemOperatorsSid =31 ,WinBuiltinPrintOperatorsSid =32 ,WinBuiltinBackupOperatorsSid =33 ,WinBuiltinReplicatorSid =34 ,WinBuiltinPreWindows2000CompatibleAccessSid =35 ,WinBuiltinRemoteDesktopUsersSid =36 ,WinBuiltinNetworkConfigurationOperatorsSid =37 ,WinAccountAdministratorSid =38 ,WinAccountGuestSid =39 ,WinAccountKrbtgtSid =40 ,WinAccountDomainAdminsSid =41 ,WinAccountDomainUsersSid =42 ,WinAccountDomainGuestsSid =43 ,WinAccountComputersSid =44 ,WinAccountControllersSid =45 ,WinAccountCertAdminsSid =46 ,WinAccountSchemaAdminsSid =47 ,WinAccountEnterpriseAdminsSid =48 ,WinAccountPolicyAdminsSid =49 ,WinAccountRasAndIasServersSid =50 ,WinNTLMAuthenticationSid =51 ,WinDigestAuthenticationSid =52 ,WinSChannelAuthenticationSid =53 ,WinThisOrganizationSid =54 ,WinOtherOrganizationSid =55 ,WinBuiltinIncomingForestTrustBuildersSid =56 ,WinBuiltinPerfMonitoringUsersSid =57 ,WinBuiltinPerfLoggingUsersSid =58 ,WinBuiltinAuthorizationAccessSid =59 ,WinBuiltinTerminalServerLicenseServersSid =60 ,WinBuiltinDCOMUsersSid =61 ,WinBuiltinIUsersSid =62 ,WinIUserSid =63 ,WinBuiltinCryptoOperatorsSid =64 ,WinUntrustedLabelSid =65 ,WinLowLabelSid =66 ,WinMediumLabelSid =67 ,WinHighLabelSid =68 ,WinSystemLabelSid =69 ,WinWriteRestrictedCodeSid =70 ,WinCreatorOwnerRightsSid =71 ,WinCacheablePrincipalsGroupSid =72 ,WinNonCacheablePrincipalsGroupSid =73 ,WinEnterpriseReadonlyControllersSid =74 ,WinAccountReadonlyControllersSid =75 ,WinBuiltinEventLogReadersGroup =76 ,WinNewEnterpriseReadonlyControllersSid =77 ,WinBuiltinCertSvcDComAccessGroup =78 ,WinMediumPlusLabelSid =79 ,WinLocalLogonSid =80 ,WinConsoleLogonSid =81 ,WinThisOrganizationCertificateSid =82 ,WinApplicationPackageAuthoritySid =83 ,WinBuiltinAnyPackageSid =84 ,WinCapabilityInternetClientSid =85 ,WinCapabilityInternetClientServerSid =86 ,WinCapabilityPrivateNetworkClientServerSid =87 ,WinCapabilityPicturesLibrarySid =88 ,WinCapabilityVideosLibrarySid =89 ,WinCapabilityMusicLibrarySid =90 ,WinCapabilityDocumentsLibrarySid =91 ,WinCapabilitySharedUserCertificatesSid =92 ,WinCapabilityEnterpriseAuthenticationSid =93 ,WinCapabilityRemovableStorageSid =94 ,WinBuiltinRDSRemoteAccessServersSid =95 ,WinBuiltinRDSEndpointServersSid =96 ,WinBuiltinRDSManagementServersSid =97 ,WinUserModeDriversSid =98 ,WinBuiltinHyperVAdminsSid =99 ,WinAccountCloneableControllersSid =100 ,WinBuiltinAccessControlAssistanceOperatorsSid =101 ,WinBuiltinRemoteManagementUsersSid =102 ,WinAuthenticationAuthorityAssertedSid =103 ,WinAuthenticationServiceAssertedSid =104 }WELL_KNOWN_SID_TYPE ;
typedef struct _ACL {BYTE AclRevision ;BYTE Sbz1 ;WORD AclSize ;WORD AceCount ;WORD Sbz2 ;}ACL ;
typedef ACL *PACL ;
typedef struct _ACE_HEADER {BYTE AceType ;BYTE AceFlags ;WORD AceSize ;}ACE_HEADER ;
typedef ACE_HEADER *PACE_HEADER ;
typedef struct _ACCESS_ALLOWED_ACE {ACE_HEADER Header ;ACCESS_MASK Mask ;DWORD SidStart ;}ACCESS_ALLOWED_ACE ;
typedef ACCESS_ALLOWED_ACE *PACCESS_ALLOWED_ACE ;
typedef struct _ACCESS_DENIED_ACE {ACE_HEADER Header ;ACCESS_MASK Mask ;DWORD SidStart ;}ACCESS_DENIED_ACE ;
typedef ACCESS_DENIED_ACE *PACCESS_DENIED_ACE ;
typedef struct _SYSTEM_AUDIT_ACE {ACE_HEADER Header ;ACCESS_MASK Mask ;DWORD SidStart ;}SYSTEM_AUDIT_ACE ;
typedef SYSTEM_AUDIT_ACE *PSYSTEM_AUDIT_ACE ;
typedef struct _SYSTEM_ALARM_ACE {ACE_HEADER Header ;ACCESS_MASK Mask ;DWORD SidStart ;}SYSTEM_ALARM_ACE ;
typedef SYSTEM_ALARM_ACE *PSYSTEM_ALARM_ACE ;
typedef struct _SYSTEM_RESOURCE_ATTRIBUTE_ACE {ACE_HEADER Header ;ACCESS_MASK Mask ;DWORD SidStart ;}SYSTEM_RESOURCE_ATTRIBUTE_ACE ;
typedef struct _SYSTEM_RESOURCE_ATTRIBUTE_ACE {ACE_HEADER Header ;ACCESS_MASK Mask ;DWORD SidStart ;}*PSYSTEM_RESOURCE_ATTRIBUTE_ACE ;

typedef struct _SYSTEM_SCOPED_POLICY_ID_ACE {ACE_HEADER Header ;ACCESS_MASK Mask ;DWORD SidStart ;}SYSTEM_SCOPED_POLICY_ID_ACE ;
typedef struct _SYSTEM_SCOPED_POLICY_ID_ACE {ACE_HEADER Header ;ACCESS_MASK Mask ;DWORD SidStart ;}*PSYSTEM_SCOPED_POLICY_ID_ACE ;

typedef struct _SYSTEM_MANDATORY_LABEL_ACE {ACE_HEADER Header ;ACCESS_MASK Mask ;DWORD SidStart ;}SYSTEM_MANDATORY_LABEL_ACE ;
typedef struct _SYSTEM_MANDATORY_LABEL_ACE {ACE_HEADER Header ;ACCESS_MASK Mask ;DWORD SidStart ;}*PSYSTEM_MANDATORY_LABEL_ACE ;

typedef struct _ACCESS_ALLOWED_OBJECT_ACE {ACE_HEADER Header ;ACCESS_MASK Mask ;DWORD Flags ;GUID ObjectType ;GUID InheritedObjectType ;DWORD SidStart ;}ACCESS_ALLOWED_OBJECT_ACE ;
typedef struct _ACCESS_ALLOWED_OBJECT_ACE {ACE_HEADER Header ;ACCESS_MASK Mask ;DWORD Flags ;GUID ObjectType ;GUID InheritedObjectType ;DWORD SidStart ;}*PACCESS_ALLOWED_OBJECT_ACE ;

typedef struct _ACCESS_DENIED_OBJECT_ACE {ACE_HEADER Header ;ACCESS_MASK Mask ;DWORD Flags ;GUID ObjectType ;GUID InheritedObjectType ;DWORD SidStart ;}ACCESS_DENIED_OBJECT_ACE ;
typedef struct _ACCESS_DENIED_OBJECT_ACE {ACE_HEADER Header ;ACCESS_MASK Mask ;DWORD Flags ;GUID ObjectType ;GUID InheritedObjectType ;DWORD SidStart ;}*PACCESS_DENIED_OBJECT_ACE ;

typedef struct _SYSTEM_AUDIT_OBJECT_ACE {ACE_HEADER Header ;ACCESS_MASK Mask ;DWORD Flags ;GUID ObjectType ;GUID InheritedObjectType ;DWORD SidStart ;}SYSTEM_AUDIT_OBJECT_ACE ;
typedef struct _SYSTEM_AUDIT_OBJECT_ACE {ACE_HEADER Header ;ACCESS_MASK Mask ;DWORD Flags ;GUID ObjectType ;GUID InheritedObjectType ;DWORD SidStart ;}*PSYSTEM_AUDIT_OBJECT_ACE ;

typedef struct _SYSTEM_ALARM_OBJECT_ACE {ACE_HEADER Header ;ACCESS_MASK Mask ;DWORD Flags ;GUID ObjectType ;GUID InheritedObjectType ;DWORD SidStart ;}SYSTEM_ALARM_OBJECT_ACE ;
typedef struct _SYSTEM_ALARM_OBJECT_ACE {ACE_HEADER Header ;ACCESS_MASK Mask ;DWORD Flags ;GUID ObjectType ;GUID InheritedObjectType ;DWORD SidStart ;}*PSYSTEM_ALARM_OBJECT_ACE ;

typedef struct _ACCESS_ALLOWED_CALLBACK_ACE {ACE_HEADER Header ;ACCESS_MASK Mask ;DWORD SidStart ;}ACCESS_ALLOWED_CALLBACK_ACE ;
typedef struct _ACCESS_ALLOWED_CALLBACK_ACE {ACE_HEADER Header ;ACCESS_MASK Mask ;DWORD SidStart ;}*PACCESS_ALLOWED_CALLBACK_ACE ;

typedef struct _ACCESS_DENIED_CALLBACK_ACE {ACE_HEADER Header ;ACCESS_MASK Mask ;DWORD SidStart ;}ACCESS_DENIED_CALLBACK_ACE ;
typedef struct _ACCESS_DENIED_CALLBACK_ACE {ACE_HEADER Header ;ACCESS_MASK Mask ;DWORD SidStart ;}*PACCESS_DENIED_CALLBACK_ACE ;

typedef struct _SYSTEM_AUDIT_CALLBACK_ACE {ACE_HEADER Header ;ACCESS_MASK Mask ;DWORD SidStart ;}SYSTEM_AUDIT_CALLBACK_ACE ;
typedef struct _SYSTEM_AUDIT_CALLBACK_ACE {ACE_HEADER Header ;ACCESS_MASK Mask ;DWORD SidStart ;}*PSYSTEM_AUDIT_CALLBACK_ACE ;

typedef struct _SYSTEM_ALARM_CALLBACK_ACE {ACE_HEADER Header ;ACCESS_MASK Mask ;DWORD SidStart ;}SYSTEM_ALARM_CALLBACK_ACE ;
typedef struct _SYSTEM_ALARM_CALLBACK_ACE {ACE_HEADER Header ;ACCESS_MASK Mask ;DWORD SidStart ;}*PSYSTEM_ALARM_CALLBACK_ACE ;

typedef struct _ACCESS_ALLOWED_CALLBACK_OBJECT_ACE {ACE_HEADER Header ;ACCESS_MASK Mask ;DWORD Flags ;GUID ObjectType ;GUID InheritedObjectType ;DWORD SidStart ;}ACCESS_ALLOWED_CALLBACK_OBJECT_ACE ;
typedef struct _ACCESS_ALLOWED_CALLBACK_OBJECT_ACE {ACE_HEADER Header ;ACCESS_MASK Mask ;DWORD Flags ;GUID ObjectType ;GUID InheritedObjectType ;DWORD SidStart ;}*PACCESS_ALLOWED_CALLBACK_OBJECT_ACE ;

typedef struct _ACCESS_DENIED_CALLBACK_OBJECT_ACE {ACE_HEADER Header ;ACCESS_MASK Mask ;DWORD Flags ;GUID ObjectType ;GUID InheritedObjectType ;DWORD SidStart ;}ACCESS_DENIED_CALLBACK_OBJECT_ACE ;
typedef struct _ACCESS_DENIED_CALLBACK_OBJECT_ACE {ACE_HEADER Header ;ACCESS_MASK Mask ;DWORD Flags ;GUID ObjectType ;GUID InheritedObjectType ;DWORD SidStart ;}*PACCESS_DENIED_CALLBACK_OBJECT_ACE ;

typedef struct _SYSTEM_AUDIT_CALLBACK_OBJECT_ACE {ACE_HEADER Header ;ACCESS_MASK Mask ;DWORD Flags ;GUID ObjectType ;GUID InheritedObjectType ;DWORD SidStart ;}SYSTEM_AUDIT_CALLBACK_OBJECT_ACE ;
typedef struct _SYSTEM_AUDIT_CALLBACK_OBJECT_ACE {ACE_HEADER Header ;ACCESS_MASK Mask ;DWORD Flags ;GUID ObjectType ;GUID InheritedObjectType ;DWORD SidStart ;}*PSYSTEM_AUDIT_CALLBACK_OBJECT_ACE ;

typedef struct _SYSTEM_ALARM_CALLBACK_OBJECT_ACE {ACE_HEADER Header ;ACCESS_MASK Mask ;DWORD Flags ;GUID ObjectType ;GUID InheritedObjectType ;DWORD SidStart ;}SYSTEM_ALARM_CALLBACK_OBJECT_ACE ;
typedef struct _SYSTEM_ALARM_CALLBACK_OBJECT_ACE {ACE_HEADER Header ;ACCESS_MASK Mask ;DWORD Flags ;GUID ObjectType ;GUID InheritedObjectType ;DWORD SidStart ;}*PSYSTEM_ALARM_CALLBACK_OBJECT_ACE ;

typedef enum _ACL_INFORMATION_CLASS {AclRevisionInformation =1 ,AclSizeInformation }ACL_INFORMATION_CLASS ;
typedef struct _ACL_REVISION_INFORMATION {DWORD AclRevision ;}ACL_REVISION_INFORMATION ;
typedef ACL_REVISION_INFORMATION *PACL_REVISION_INFORMATION ;
typedef struct _ACL_SIZE_INFORMATION {DWORD AceCount ;DWORD AclBytesInUse ;DWORD AclBytesFree ;}ACL_SIZE_INFORMATION ;
typedef ACL_SIZE_INFORMATION *PACL_SIZE_INFORMATION ;
typedef WORD SECURITY_DESCRIPTOR_CONTROL ;
typedef WORD *PSECURITY_DESCRIPTOR_CONTROL ;

typedef struct _SECURITY_DESCRIPTOR_RELATIVE {BYTE Revision ;BYTE Sbz1 ;SECURITY_DESCRIPTOR_CONTROL Control ;DWORD Owner ;DWORD Group ;DWORD Sacl ;DWORD Dacl ;}SECURITY_DESCRIPTOR_RELATIVE ;
typedef struct _SECURITY_DESCRIPTOR_RELATIVE {BYTE Revision ;BYTE Sbz1 ;SECURITY_DESCRIPTOR_CONTROL Control ;DWORD Owner ;DWORD Group ;DWORD Sacl ;DWORD Dacl ;}*PISECURITY_DESCRIPTOR_RELATIVE ;

typedef struct _SECURITY_DESCRIPTOR {BYTE Revision ;BYTE Sbz1 ;SECURITY_DESCRIPTOR_CONTROL Control ;PSID Owner ;PSID Group ;PACL Sacl ;PACL Dacl ;}SECURITY_DESCRIPTOR ;
typedef struct _SECURITY_DESCRIPTOR {BYTE Revision ;BYTE Sbz1 ;SECURITY_DESCRIPTOR_CONTROL Control ;PSID Owner ;PSID Group ;PACL Sacl ;PACL Dacl ;}*PISECURITY_DESCRIPTOR ;

typedef struct _OBJECT_TYPE_LIST {WORD Level ;WORD Sbz ;GUID *ObjectType ;}OBJECT_TYPE_LIST ;
typedef struct _OBJECT_TYPE_LIST {WORD Level ;WORD Sbz ;GUID *ObjectType ;}*POBJECT_TYPE_LIST ;

typedef enum _AUDIT_EVENT_TYPE {AuditEventObjectAccess ,AuditEventDirectoryServiceAccess }AUDIT_EVENT_TYPE ;
typedef enum _AUDIT_EVENT_TYPE *PAUDIT_EVENT_TYPE ;

typedef struct _PRIVILEGE_SET {DWORD PrivilegeCount ;DWORD Control ;LUID_AND_ATTRIBUTES Privilege [1 ];}PRIVILEGE_SET ;
typedef struct _PRIVILEGE_SET {DWORD PrivilegeCount ;DWORD Control ;LUID_AND_ATTRIBUTES Privilege [1 ];}*PPRIVILEGE_SET ;

typedef enum _ACCESS_REASON_TYPE {AccessReasonNone =0 ,AccessReasonAllowedAce =65536 ,AccessReasonDeniedAce =131072 ,AccessReasonAllowedParentAce =196608 ,AccessReasonDeniedParentAce =262144 ,AccessReasonNotGrantedByCape =327680 ,AccessReasonNotGrantedByParentCape =393216 ,AccessReasonNotGrantedToAppContainer =458752 ,AccessReasonMissingPrivilege =1048576 ,AccessReasonFromPrivilege =2097152 ,AccessReasonIntegrityLevel =3145728 ,AccessReasonOwnership =4194304 ,AccessReasonNullDacl =5242880 ,AccessReasonEmptyDacl =6291456 ,AccessReasonNoSD =7340032 ,AccessReasonNoGrant =8388608 }ACCESS_REASON_TYPE ;
typedef DWORD ACCESS_REASON ;
typedef struct _ACCESS_REASONS {ACCESS_REASON Data [32 ];}ACCESS_REASONS ;
typedef struct _ACCESS_REASONS {ACCESS_REASON Data [32 ];}*PACCESS_REASONS ;

typedef struct _SE_SECURITY_DESCRIPTOR {DWORD Size ;DWORD Flags ;PSECURITY_DESCRIPTOR SecurityDescriptor ;}SE_SECURITY_DESCRIPTOR ;
typedef struct _SE_SECURITY_DESCRIPTOR {DWORD Size ;DWORD Flags ;PSECURITY_DESCRIPTOR SecurityDescriptor ;}*PSE_SECURITY_DESCRIPTOR ;

typedef struct _SE_ACCESS_REQUEST {DWORD Size ;PSE_SECURITY_DESCRIPTOR SeSecurityDescriptor ;ACCESS_MASK DesiredAccess ;ACCESS_MASK PreviouslyGrantedAccess ;PSID PrincipalSelfSid ;PGENERIC_MAPPING GenericMapping ;DWORD ObjectTypeListCount ;POBJECT_TYPE_LIST ObjectTypeList ;}SE_ACCESS_REQUEST ;
typedef struct _SE_ACCESS_REQUEST {DWORD Size ;PSE_SECURITY_DESCRIPTOR SeSecurityDescriptor ;ACCESS_MASK DesiredAccess ;ACCESS_MASK PreviouslyGrantedAccess ;PSID PrincipalSelfSid ;PGENERIC_MAPPING GenericMapping ;DWORD ObjectTypeListCount ;POBJECT_TYPE_LIST ObjectTypeList ;}*PSE_ACCESS_REQUEST ;

typedef struct _SE_ACCESS_REPLY {DWORD Size ;DWORD ResultListCount ;PACCESS_MASK GrantedAccess ;PDWORD AccessStatus ;PACCESS_REASONS AccessReason ;PPRIVILEGE_SET *Privileges ;}SE_ACCESS_REPLY ;
typedef struct _SE_ACCESS_REPLY {DWORD Size ;DWORD ResultListCount ;PACCESS_MASK GrantedAccess ;PDWORD AccessStatus ;PACCESS_REASONS AccessReason ;PPRIVILEGE_SET *Privileges ;}*PSE_ACCESS_REPLY ;

typedef enum _SECURITY_IMPERSONATION_LEVEL {SecurityAnonymous ,SecurityIdentification ,SecurityImpersonation ,SecurityDelegation }SECURITY_IMPERSONATION_LEVEL ;
typedef enum _SECURITY_IMPERSONATION_LEVEL *PSECURITY_IMPERSONATION_LEVEL ;

typedef enum _TOKEN_TYPE {TokenPrimary =1 ,TokenImpersonation }TOKEN_TYPE ;
typedef TOKEN_TYPE *PTOKEN_TYPE ;
typedef enum _TOKEN_ELEVATION_TYPE {TokenElevationTypeDefault =1 ,TokenElevationTypeFull ,TokenElevationTypeLimited }TOKEN_ELEVATION_TYPE ;
typedef enum _TOKEN_ELEVATION_TYPE *PTOKEN_ELEVATION_TYPE ;

typedef enum _TOKEN_INFORMATION_CLASS {TokenUser =1 ,TokenGroups ,TokenPrivileges ,TokenOwner ,TokenPrimaryGroup ,TokenDefaultDacl ,TokenSource ,TokenType ,TokenImpersonationLevel ,TokenStatistics ,TokenRestrictedSids ,TokenSessionId ,TokenGroupsAndPrivileges ,TokenSessionReference ,TokenSandBoxInert ,TokenAuditPolicy ,TokenOrigin ,TokenElevationType ,TokenLinkedToken ,TokenElevation ,TokenHasRestrictions ,TokenAccessInformation ,TokenVirtualizationAllowed ,TokenVirtualizationEnabled ,TokenIntegrityLevel ,TokenUIAccess ,TokenMandatoryPolicy ,TokenLogonSid ,TokenIsAppContainer ,TokenCapabilities ,TokenAppContainerSid ,TokenAppContainerNumber ,TokenUserClaimAttributes ,TokenDeviceClaimAttributes ,TokenRestrictedUserClaimAttributes ,TokenRestrictedDeviceClaimAttributes ,TokenDeviceGroups ,TokenRestrictedDeviceGroups ,TokenSecurityAttributes ,TokenIsRestricted ,MaxTokenInfoClass }TOKEN_INFORMATION_CLASS ;
typedef enum _TOKEN_INFORMATION_CLASS *PTOKEN_INFORMATION_CLASS ;

typedef struct _TOKEN_USER {SID_AND_ATTRIBUTES User ;}TOKEN_USER ;
typedef struct _TOKEN_USER {SID_AND_ATTRIBUTES User ;}*PTOKEN_USER ;

typedef struct _TOKEN_GROUPS {DWORD GroupCount ;SID_AND_ATTRIBUTES Groups [1 ];}TOKEN_GROUPS ;
typedef struct _TOKEN_GROUPS {DWORD GroupCount ;SID_AND_ATTRIBUTES Groups [1 ];}*PTOKEN_GROUPS ;

typedef struct _TOKEN_PRIVILEGES {DWORD PrivilegeCount ;LUID_AND_ATTRIBUTES Privileges [1 ];}TOKEN_PRIVILEGES ;
typedef struct _TOKEN_PRIVILEGES {DWORD PrivilegeCount ;LUID_AND_ATTRIBUTES Privileges [1 ];}*PTOKEN_PRIVILEGES ;

typedef struct _TOKEN_OWNER {PSID Owner ;}TOKEN_OWNER ;
typedef struct _TOKEN_OWNER {PSID Owner ;}*PTOKEN_OWNER ;

typedef struct _TOKEN_PRIMARY_GROUP {PSID PrimaryGroup ;}TOKEN_PRIMARY_GROUP ;
typedef struct _TOKEN_PRIMARY_GROUP {PSID PrimaryGroup ;}*PTOKEN_PRIMARY_GROUP ;

typedef struct _TOKEN_DEFAULT_DACL {PACL DefaultDacl ;}TOKEN_DEFAULT_DACL ;
typedef struct _TOKEN_DEFAULT_DACL {PACL DefaultDacl ;}*PTOKEN_DEFAULT_DACL ;

typedef struct _TOKEN_USER_CLAIMS {PCLAIMS_BLOB UserClaims ;}TOKEN_USER_CLAIMS ;
typedef struct _TOKEN_USER_CLAIMS {PCLAIMS_BLOB UserClaims ;}*PTOKEN_USER_CLAIMS ;

typedef struct _TOKEN_DEVICE_CLAIMS {PCLAIMS_BLOB DeviceClaims ;}TOKEN_DEVICE_CLAIMS ;
typedef struct _TOKEN_DEVICE_CLAIMS {PCLAIMS_BLOB DeviceClaims ;}*PTOKEN_DEVICE_CLAIMS ;

typedef struct _TOKEN_GROUPS_AND_PRIVILEGES {DWORD SidCount ;DWORD SidLength ;PSID_AND_ATTRIBUTES Sids ;DWORD RestrictedSidCount ;DWORD RestrictedSidLength ;PSID_AND_ATTRIBUTES RestrictedSids ;DWORD PrivilegeCount ;DWORD PrivilegeLength ;PLUID_AND_ATTRIBUTES Privileges ;LUID AuthenticationId ;}TOKEN_GROUPS_AND_PRIVILEGES ;
typedef struct _TOKEN_GROUPS_AND_PRIVILEGES {DWORD SidCount ;DWORD SidLength ;PSID_AND_ATTRIBUTES Sids ;DWORD RestrictedSidCount ;DWORD RestrictedSidLength ;PSID_AND_ATTRIBUTES RestrictedSids ;DWORD PrivilegeCount ;DWORD PrivilegeLength ;PLUID_AND_ATTRIBUTES Privileges ;LUID AuthenticationId ;}*PTOKEN_GROUPS_AND_PRIVILEGES ;

typedef struct _TOKEN_LINKED_TOKEN {HANDLE LinkedToken ;}TOKEN_LINKED_TOKEN ;
typedef struct _TOKEN_LINKED_TOKEN {HANDLE LinkedToken ;}*PTOKEN_LINKED_TOKEN ;

typedef struct _TOKEN_ELEVATION {DWORD TokenIsElevated ;}TOKEN_ELEVATION ;
typedef struct _TOKEN_ELEVATION {DWORD TokenIsElevated ;}*PTOKEN_ELEVATION ;

typedef struct _TOKEN_MANDATORY_LABEL {SID_AND_ATTRIBUTES Label ;}TOKEN_MANDATORY_LABEL ;
typedef struct _TOKEN_MANDATORY_LABEL {SID_AND_ATTRIBUTES Label ;}*PTOKEN_MANDATORY_LABEL ;

typedef struct _TOKEN_MANDATORY_POLICY {DWORD Policy ;}TOKEN_MANDATORY_POLICY ;
typedef struct _TOKEN_MANDATORY_POLICY {DWORD Policy ;}*PTOKEN_MANDATORY_POLICY ;

typedef struct _TOKEN_ACCESS_INFORMATION {PSID_AND_ATTRIBUTES_HASH SidHash ;PSID_AND_ATTRIBUTES_HASH RestrictedSidHash ;PTOKEN_PRIVILEGES Privileges ;LUID AuthenticationId ;TOKEN_TYPE TokenType ;SECURITY_IMPERSONATION_LEVEL ImpersonationLevel ;TOKEN_MANDATORY_POLICY MandatoryPolicy ;DWORD Flags ;DWORD AppContainerNumber ;PSID PackageSid ;PSID_AND_ATTRIBUTES_HASH CapabilitiesHash ;}TOKEN_ACCESS_INFORMATION ;
typedef struct _TOKEN_ACCESS_INFORMATION {PSID_AND_ATTRIBUTES_HASH SidHash ;PSID_AND_ATTRIBUTES_HASH RestrictedSidHash ;PTOKEN_PRIVILEGES Privileges ;LUID AuthenticationId ;TOKEN_TYPE TokenType ;SECURITY_IMPERSONATION_LEVEL ImpersonationLevel ;TOKEN_MANDATORY_POLICY MandatoryPolicy ;DWORD Flags ;DWORD AppContainerNumber ;PSID PackageSid ;PSID_AND_ATTRIBUTES_HASH CapabilitiesHash ;}*PTOKEN_ACCESS_INFORMATION ;

typedef struct _TOKEN_AUDIT_POLICY {UCHAR PerUserPolicy [29 ];}TOKEN_AUDIT_POLICY ;
typedef struct _TOKEN_AUDIT_POLICY {UCHAR PerUserPolicy [29 ];}*PTOKEN_AUDIT_POLICY ;

typedef struct _TOKEN_SOURCE {CHAR SourceName [8 ];LUID SourceIdentifier ;}TOKEN_SOURCE ;
typedef struct _TOKEN_SOURCE {CHAR SourceName [8 ];LUID SourceIdentifier ;}*PTOKEN_SOURCE ;

typedef struct _TOKEN_STATISTICS {LUID TokenId ;LUID AuthenticationId ;LARGE_INTEGER ExpirationTime ;TOKEN_TYPE TokenType ;SECURITY_IMPERSONATION_LEVEL ImpersonationLevel ;DWORD DynamicCharged ;DWORD DynamicAvailable ;DWORD GroupCount ;DWORD PrivilegeCount ;LUID ModifiedId ;}TOKEN_STATISTICS ;
typedef struct _TOKEN_STATISTICS {LUID TokenId ;LUID AuthenticationId ;LARGE_INTEGER ExpirationTime ;TOKEN_TYPE TokenType ;SECURITY_IMPERSONATION_LEVEL ImpersonationLevel ;DWORD DynamicCharged ;DWORD DynamicAvailable ;DWORD GroupCount ;DWORD PrivilegeCount ;LUID ModifiedId ;}*PTOKEN_STATISTICS ;

typedef struct _TOKEN_CONTROL {LUID TokenId ;LUID AuthenticationId ;LUID ModifiedId ;TOKEN_SOURCE TokenSource ;}TOKEN_CONTROL ;
typedef struct _TOKEN_CONTROL {LUID TokenId ;LUID AuthenticationId ;LUID ModifiedId ;TOKEN_SOURCE TokenSource ;}*PTOKEN_CONTROL ;

typedef struct _TOKEN_ORIGIN {LUID OriginatingLogonSession ;}TOKEN_ORIGIN ;
typedef struct _TOKEN_ORIGIN {LUID OriginatingLogonSession ;}*PTOKEN_ORIGIN ;

typedef enum _MANDATORY_LEVEL {MandatoryLevelUntrusted =0 ,MandatoryLevelLow ,MandatoryLevelMedium ,MandatoryLevelHigh ,MandatoryLevelSystem ,MandatoryLevelSecureProcess ,MandatoryLevelCount }MANDATORY_LEVEL ;
typedef enum _MANDATORY_LEVEL *PMANDATORY_LEVEL ;

typedef struct _TOKEN_APPCONTAINER_INFORMATION {PSID TokenAppContainer ;}TOKEN_APPCONTAINER_INFORMATION ;
typedef struct _TOKEN_APPCONTAINER_INFORMATION {PSID TokenAppContainer ;}*PTOKEN_APPCONTAINER_INFORMATION ;

typedef struct _CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE {DWORD64 Version ;PWSTR Name ;}CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE ;
typedef struct _CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE {DWORD64 Version ;PWSTR Name ;}*PCLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE ;

typedef struct _CLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE {PVOID pValue ;DWORD ValueLength ;}CLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE ;
typedef struct _CLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE {PVOID pValue ;DWORD ValueLength ;}*PCLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE ;

typedef struct _CLAIM_SECURITY_ATTRIBUTE_V1 {PWSTR Name ;WORD ValueType ;WORD Reserved ;DWORD Flags ;DWORD ValueCount ;union {PLONG64 pInt64 ;PDWORD64 pUint64 ;PWSTR *ppString ;PCLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE pFqbn ;PCLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE pOctetString ;}Values ;}CLAIM_SECURITY_ATTRIBUTE_V1 ;
typedef struct _CLAIM_SECURITY_ATTRIBUTE_V1 {PWSTR Name ;WORD ValueType ;WORD Reserved ;DWORD Flags ;DWORD ValueCount ;union {PLONG64 pInt64 ;PDWORD64 pUint64 ;PWSTR *ppString ;PCLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE pFqbn ;PCLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE pOctetString ;}Values ;}*PCLAIM_SECURITY_ATTRIBUTE_V1 ;

typedef struct _CLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1 {DWORD Name ;WORD ValueType ;WORD Reserved ;DWORD Flags ;DWORD ValueCount ;union {DWORD pInt64 [1 ];DWORD pUint64 [1 ];DWORD ppString [1 ];DWORD pFqbn [1 ];DWORD pOctetString [1 ];}Values ;}CLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1 ;
typedef struct _CLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1 {DWORD Name ;WORD ValueType ;WORD Reserved ;DWORD Flags ;DWORD ValueCount ;union {DWORD pInt64 [1 ];DWORD pUint64 [1 ];DWORD ppString [1 ];DWORD pFqbn [1 ];DWORD pOctetString [1 ];}Values ;}*PCLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1 ;

typedef struct _CLAIM_SECURITY_ATTRIBUTES_INFORMATION {WORD Version ;WORD Reserved ;DWORD AttributeCount ;union {PCLAIM_SECURITY_ATTRIBUTE_V1 pAttributeV1 ;}Attribute ;}CLAIM_SECURITY_ATTRIBUTES_INFORMATION ;
typedef struct _CLAIM_SECURITY_ATTRIBUTES_INFORMATION {WORD Version ;WORD Reserved ;DWORD AttributeCount ;union {PCLAIM_SECURITY_ATTRIBUTE_V1 pAttributeV1 ;}Attribute ;}*PCLAIM_SECURITY_ATTRIBUTES_INFORMATION ;

typedef BOOLEAN SECURITY_CONTEXT_TRACKING_MODE ;
typedef BOOLEAN *PSECURITY_CONTEXT_TRACKING_MODE ;

typedef struct _SECURITY_QUALITY_OF_SERVICE {DWORD Length ;SECURITY_IMPERSONATION_LEVEL ImpersonationLevel ;SECURITY_CONTEXT_TRACKING_MODE ContextTrackingMode ;BOOLEAN EffectiveOnly ;}SECURITY_QUALITY_OF_SERVICE ;
typedef struct _SECURITY_QUALITY_OF_SERVICE {DWORD Length ;SECURITY_IMPERSONATION_LEVEL ImpersonationLevel ;SECURITY_CONTEXT_TRACKING_MODE ContextTrackingMode ;BOOLEAN EffectiveOnly ;}*PSECURITY_QUALITY_OF_SERVICE ;

typedef struct _SE_IMPERSONATION_STATE {PACCESS_TOKEN Token ;BOOLEAN CopyOnOpen ;BOOLEAN EffectiveOnly ;SECURITY_IMPERSONATION_LEVEL Level ;}SE_IMPERSONATION_STATE ;
typedef struct _SE_IMPERSONATION_STATE {PACCESS_TOKEN Token ;BOOLEAN CopyOnOpen ;BOOLEAN EffectiveOnly ;SECURITY_IMPERSONATION_LEVEL Level ;}*PSE_IMPERSONATION_STATE ;

typedef DWORD SECURITY_INFORMATION ;
typedef DWORD *PSECURITY_INFORMATION ;

typedef enum _SE_LEARNING_MODE_DATA_TYPE {SeLearningModeInvalidType =0 ,SeLearningModeSettings ,SeLearningModeMax }SE_LEARNING_MODE_DATA_TYPE ;
typedef struct _SECURITY_CAPABILITIES {PSID AppContainerSid ;PSID_AND_ATTRIBUTES Capabilities ;DWORD CapabilityCount ;DWORD Reserved ;}SECURITY_CAPABILITIES ;
typedef struct _SECURITY_CAPABILITIES {PSID AppContainerSid ;PSID_AND_ATTRIBUTES Capabilities ;DWORD CapabilityCount ;DWORD Reserved ;}*PSECURITY_CAPABILITIES ;
typedef struct _SECURITY_CAPABILITIES {PSID AppContainerSid ;PSID_AND_ATTRIBUTES Capabilities ;DWORD CapabilityCount ;DWORD Reserved ;}*LPSECURITY_CAPABILITIES ;

typedef struct _JOB_SET_ARRAY {HANDLE JobHandle ;DWORD MemberLevel ;DWORD Flags ;}JOB_SET_ARRAY ;
typedef struct _JOB_SET_ARRAY {HANDLE JobHandle ;DWORD MemberLevel ;DWORD Flags ;}*PJOB_SET_ARRAY ;

typedef struct _EXCEPTION_REGISTRATION_RECORD {union {struct _EXCEPTION_REGISTRATION_RECORD *Next ;struct _EXCEPTION_REGISTRATION_RECORD *prev ;};union {PEXCEPTION_ROUTINE Handler ;PEXCEPTION_ROUTINE handler ;};}EXCEPTION_REGISTRATION_RECORD ;
typedef EXCEPTION_REGISTRATION_RECORD *PEXCEPTION_REGISTRATION_RECORD ;
typedef EXCEPTION_REGISTRATION_RECORD EXCEPTION_REGISTRATION ;
typedef PEXCEPTION_REGISTRATION_RECORD PEXCEPTION_REGISTRATION ;
typedef struct _NT_TIB {struct _EXCEPTION_REGISTRATION_RECORD *ExceptionList ;PVOID StackBase ;PVOID StackLimit ;PVOID SubSystemTib ;union {PVOID FiberData ;DWORD Version ;};PVOID ArbitraryUserPointer ;struct _NT_TIB *Self ;}NT_TIB ;
typedef NT_TIB *PNT_TIB ;
typedef struct _NT_TIB32 {DWORD ExceptionList ;DWORD StackBase ;DWORD StackLimit ;DWORD SubSystemTib ;union {DWORD FiberData ;DWORD Version ;};DWORD ArbitraryUserPointer ;DWORD Self ;}NT_TIB32 ;
typedef struct _NT_TIB32 {DWORD ExceptionList ;DWORD StackBase ;DWORD StackLimit ;DWORD SubSystemTib ;union {DWORD FiberData ;DWORD Version ;};DWORD ArbitraryUserPointer ;DWORD Self ;}*PNT_TIB32 ;

typedef struct _NT_TIB64 {DWORD64 ExceptionList ;DWORD64 StackBase ;DWORD64 StackLimit ;DWORD64 SubSystemTib ;union {DWORD64 FiberData ;DWORD Version ;};DWORD64 ArbitraryUserPointer ;DWORD64 Self ;}NT_TIB64 ;
typedef struct _NT_TIB64 {DWORD64 ExceptionList ;DWORD64 StackBase ;DWORD64 StackLimit ;DWORD64 SubSystemTib ;union {DWORD64 FiberData ;DWORD Version ;};DWORD64 ArbitraryUserPointer ;DWORD64 Self ;}*PNT_TIB64 ;

typedef struct _UMS_CREATE_THREAD_ATTRIBUTES {DWORD UmsVersion ;PVOID UmsContext ;PVOID UmsCompletionList ;}UMS_CREATE_THREAD_ATTRIBUTES ;
typedef struct _UMS_CREATE_THREAD_ATTRIBUTES {DWORD UmsVersion ;PVOID UmsContext ;PVOID UmsCompletionList ;}*PUMS_CREATE_THREAD_ATTRIBUTES ;

typedef struct _QUOTA_LIMITS {SIZE_T PagedPoolLimit ;SIZE_T NonPagedPoolLimit ;SIZE_T MinimumWorkingSetSize ;SIZE_T MaximumWorkingSetSize ;SIZE_T PagefileLimit ;LARGE_INTEGER TimeLimit ;}QUOTA_LIMITS ;
typedef struct _QUOTA_LIMITS {SIZE_T PagedPoolLimit ;SIZE_T NonPagedPoolLimit ;SIZE_T MinimumWorkingSetSize ;SIZE_T MaximumWorkingSetSize ;SIZE_T PagefileLimit ;LARGE_INTEGER TimeLimit ;}*PQUOTA_LIMITS ;

typedef union _RATE_QUOTA_LIMIT {DWORD RateData ;struct {DWORD RatePercent :7 ;DWORD Reserved0 :25 ;};}RATE_QUOTA_LIMIT ;
typedef union _RATE_QUOTA_LIMIT {DWORD RateData ;struct {DWORD RatePercent :7 ;DWORD Reserved0 :25 ;};}*PRATE_QUOTA_LIMIT ;

typedef struct _QUOTA_LIMITS_EX {SIZE_T PagedPoolLimit ;SIZE_T NonPagedPoolLimit ;SIZE_T MinimumWorkingSetSize ;SIZE_T MaximumWorkingSetSize ;SIZE_T PagefileLimit ;LARGE_INTEGER TimeLimit ;SIZE_T WorkingSetLimit ;SIZE_T Reserved2 ;SIZE_T Reserved3 ;SIZE_T Reserved4 ;DWORD Flags ;RATE_QUOTA_LIMIT CpuRateLimit ;}QUOTA_LIMITS_EX ;
typedef struct _QUOTA_LIMITS_EX {SIZE_T PagedPoolLimit ;SIZE_T NonPagedPoolLimit ;SIZE_T MinimumWorkingSetSize ;SIZE_T MaximumWorkingSetSize ;SIZE_T PagefileLimit ;LARGE_INTEGER TimeLimit ;SIZE_T WorkingSetLimit ;SIZE_T Reserved2 ;SIZE_T Reserved3 ;SIZE_T Reserved4 ;DWORD Flags ;RATE_QUOTA_LIMIT CpuRateLimit ;}*PQUOTA_LIMITS_EX ;

typedef struct _IO_COUNTERS {ULONGLONG ReadOperationCount ;ULONGLONG WriteOperationCount ;ULONGLONG OtherOperationCount ;ULONGLONG ReadTransferCount ;ULONGLONG WriteTransferCount ;ULONGLONG OtherTransferCount ;}IO_COUNTERS ;
typedef IO_COUNTERS *PIO_COUNTERS ;
typedef enum _HARDWARE_COUNTER_TYPE {PMCCounter ,MaxHardwareCounterType }HARDWARE_COUNTER_TYPE ;
typedef enum _HARDWARE_COUNTER_TYPE *PHARDWARE_COUNTER_TYPE ;

typedef enum _PROCESS_MITIGATION_POLICY {ProcessDEPPolicy ,ProcessASLRPolicy ,ProcessReserved1MitigationPolicy ,ProcessStrictHandleCheckPolicy ,ProcessSystemCallDisablePolicy ,ProcessMitigationOptionsMask ,ProcessExtensionPointDisablePolicy ,MaxProcessMitigationPolicy }PROCESS_MITIGATION_POLICY ;
typedef enum _PROCESS_MITIGATION_POLICY *PPROCESS_MITIGATION_POLICY ;

typedef struct _PROCESS_MITIGATION_ASLR_POLICY {union {DWORD Flags ;struct {DWORD EnableBottomUpRandomization :1 ;DWORD EnableForceRelocateImages :1 ;DWORD EnableHighEntropy :1 ;DWORD DisallowStrippedImages :1 ;DWORD ReservedFlags :28 ;};};}PROCESS_MITIGATION_ASLR_POLICY ;
typedef struct _PROCESS_MITIGATION_ASLR_POLICY {union {DWORD Flags ;struct {DWORD EnableBottomUpRandomization :1 ;DWORD EnableForceRelocateImages :1 ;DWORD EnableHighEntropy :1 ;DWORD DisallowStrippedImages :1 ;DWORD ReservedFlags :28 ;};};}*PPROCESS_MITIGATION_ASLR_POLICY ;

typedef struct _PROCESS_MITIGATION_DEP_POLICY {union {DWORD Flags ;struct {DWORD Enable :1 ;DWORD DisableAtlThunkEmulation :1 ;DWORD ReservedFlags :30 ;};};BOOLEAN Permanent ;}PROCESS_MITIGATION_DEP_POLICY ;
typedef struct _PROCESS_MITIGATION_DEP_POLICY {union {DWORD Flags ;struct {DWORD Enable :1 ;DWORD DisableAtlThunkEmulation :1 ;DWORD ReservedFlags :30 ;};};BOOLEAN Permanent ;}*PPROCESS_MITIGATION_DEP_POLICY ;

typedef struct _PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY {union {DWORD Flags ;struct {DWORD RaiseExceptionOnInvalidHandleReference :1 ;DWORD HandleExceptionsPermanentlyEnabled :1 ;DWORD ReservedFlags :30 ;};};}PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY ;
typedef struct _PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY {union {DWORD Flags ;struct {DWORD RaiseExceptionOnInvalidHandleReference :1 ;DWORD HandleExceptionsPermanentlyEnabled :1 ;DWORD ReservedFlags :30 ;};};}*PPROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY ;

typedef struct _PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY {union {DWORD Flags ;struct {DWORD DisallowWin32kSystemCalls :1 ;DWORD ReservedFlags :31 ;};};}PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY ;
typedef struct _PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY {union {DWORD Flags ;struct {DWORD DisallowWin32kSystemCalls :1 ;DWORD ReservedFlags :31 ;};};}*PPROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY ;

typedef struct _PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY {union {DWORD Flags ;struct {DWORD DisableExtensionPoints :1 ;DWORD ReservedFlags :31 ;};};}PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY ;
typedef struct _PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY {union {DWORD Flags ;struct {DWORD DisableExtensionPoints :1 ;DWORD ReservedFlags :31 ;};};}*PPROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY ;

typedef struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION {LARGE_INTEGER TotalUserTime ;LARGE_INTEGER TotalKernelTime ;LARGE_INTEGER ThisPeriodTotalUserTime ;LARGE_INTEGER ThisPeriodTotalKernelTime ;DWORD TotalPageFaultCount ;DWORD TotalProcesses ;DWORD ActiveProcesses ;DWORD TotalTerminatedProcesses ;}JOBOBJECT_BASIC_ACCOUNTING_INFORMATION ;
typedef struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION {LARGE_INTEGER TotalUserTime ;LARGE_INTEGER TotalKernelTime ;LARGE_INTEGER ThisPeriodTotalUserTime ;LARGE_INTEGER ThisPeriodTotalKernelTime ;DWORD TotalPageFaultCount ;DWORD TotalProcesses ;DWORD ActiveProcesses ;DWORD TotalTerminatedProcesses ;}*PJOBOBJECT_BASIC_ACCOUNTING_INFORMATION ;

typedef struct _JOBOBJECT_BASIC_LIMIT_INFORMATION {LARGE_INTEGER PerProcessUserTimeLimit ;LARGE_INTEGER PerJobUserTimeLimit ;DWORD LimitFlags ;SIZE_T MinimumWorkingSetSize ;SIZE_T MaximumWorkingSetSize ;DWORD ActiveProcessLimit ;ULONG_PTR Affinity ;DWORD PriorityClass ;DWORD SchedulingClass ;}JOBOBJECT_BASIC_LIMIT_INFORMATION ;
typedef struct _JOBOBJECT_BASIC_LIMIT_INFORMATION {LARGE_INTEGER PerProcessUserTimeLimit ;LARGE_INTEGER PerJobUserTimeLimit ;DWORD LimitFlags ;SIZE_T MinimumWorkingSetSize ;SIZE_T MaximumWorkingSetSize ;DWORD ActiveProcessLimit ;ULONG_PTR Affinity ;DWORD PriorityClass ;DWORD SchedulingClass ;}*PJOBOBJECT_BASIC_LIMIT_INFORMATION ;

typedef struct _JOBOBJECT_EXTENDED_LIMIT_INFORMATION {JOBOBJECT_BASIC_LIMIT_INFORMATION BasicLimitInformation ;IO_COUNTERS IoInfo ;SIZE_T ProcessMemoryLimit ;SIZE_T JobMemoryLimit ;SIZE_T PeakProcessMemoryUsed ;SIZE_T PeakJobMemoryUsed ;}JOBOBJECT_EXTENDED_LIMIT_INFORMATION ;
typedef struct _JOBOBJECT_EXTENDED_LIMIT_INFORMATION {JOBOBJECT_BASIC_LIMIT_INFORMATION BasicLimitInformation ;IO_COUNTERS IoInfo ;SIZE_T ProcessMemoryLimit ;SIZE_T JobMemoryLimit ;SIZE_T PeakProcessMemoryUsed ;SIZE_T PeakJobMemoryUsed ;}*PJOBOBJECT_EXTENDED_LIMIT_INFORMATION ;

typedef struct _JOBOBJECT_BASIC_PROCESS_ID_LIST {DWORD NumberOfAssignedProcesses ;DWORD NumberOfProcessIdsInList ;ULONG_PTR ProcessIdList [1 ];}JOBOBJECT_BASIC_PROCESS_ID_LIST ;
typedef struct _JOBOBJECT_BASIC_PROCESS_ID_LIST {DWORD NumberOfAssignedProcesses ;DWORD NumberOfProcessIdsInList ;ULONG_PTR ProcessIdList [1 ];}*PJOBOBJECT_BASIC_PROCESS_ID_LIST ;

typedef struct _JOBOBJECT_BASIC_UI_RESTRICTIONS {DWORD UIRestrictionsClass ;}JOBOBJECT_BASIC_UI_RESTRICTIONS ;
typedef struct _JOBOBJECT_BASIC_UI_RESTRICTIONS {DWORD UIRestrictionsClass ;}*PJOBOBJECT_BASIC_UI_RESTRICTIONS ;

typedef struct _JOBOBJECT_SECURITY_LIMIT_INFORMATION {DWORD SecurityLimitFlags ;HANDLE JobToken ;PTOKEN_GROUPS SidsToDisable ;PTOKEN_PRIVILEGES PrivilegesToDelete ;PTOKEN_GROUPS RestrictedSids ;}JOBOBJECT_SECURITY_LIMIT_INFORMATION ;
typedef struct _JOBOBJECT_SECURITY_LIMIT_INFORMATION {DWORD SecurityLimitFlags ;HANDLE JobToken ;PTOKEN_GROUPS SidsToDisable ;PTOKEN_PRIVILEGES PrivilegesToDelete ;PTOKEN_GROUPS RestrictedSids ;}*PJOBOBJECT_SECURITY_LIMIT_INFORMATION ;

typedef struct _JOBOBJECT_END_OF_JOB_TIME_INFORMATION {DWORD EndOfJobTimeAction ;}JOBOBJECT_END_OF_JOB_TIME_INFORMATION ;
typedef struct _JOBOBJECT_END_OF_JOB_TIME_INFORMATION {DWORD EndOfJobTimeAction ;}*PJOBOBJECT_END_OF_JOB_TIME_INFORMATION ;

typedef struct _JOBOBJECT_ASSOCIATE_COMPLETION_PORT {PVOID CompletionKey ;HANDLE CompletionPort ;}JOBOBJECT_ASSOCIATE_COMPLETION_PORT ;
typedef struct _JOBOBJECT_ASSOCIATE_COMPLETION_PORT {PVOID CompletionKey ;HANDLE CompletionPort ;}*PJOBOBJECT_ASSOCIATE_COMPLETION_PORT ;

typedef struct _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION {JOBOBJECT_BASIC_ACCOUNTING_INFORMATION BasicInfo ;IO_COUNTERS IoInfo ;}JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION ;
typedef struct _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION {JOBOBJECT_BASIC_ACCOUNTING_INFORMATION BasicInfo ;IO_COUNTERS IoInfo ;}*PJOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION ;

typedef struct _JOBOBJECT_JOBSET_INFORMATION {DWORD MemberLevel ;}JOBOBJECT_JOBSET_INFORMATION ;
typedef struct _JOBOBJECT_JOBSET_INFORMATION {DWORD MemberLevel ;}*PJOBOBJECT_JOBSET_INFORMATION ;

typedef enum _JOBOBJECT_RATE_CONTROL_TOLERANCE {ToleranceLow =1 ,ToleranceMedium ,ToleranceHigh }JOBOBJECT_RATE_CONTROL_TOLERANCE ;
typedef enum _JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL {ToleranceIntervalShort =1 ,ToleranceIntervalMedium ,ToleranceIntervalLong }JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL ;
typedef struct _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION {DWORD64 IoReadBytesLimit ;DWORD64 IoWriteBytesLimit ;LARGE_INTEGER PerJobUserTimeLimit ;DWORD64 JobMemoryLimit ;JOBOBJECT_RATE_CONTROL_TOLERANCE RateControlTolerance ;JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL RateControlToleranceInterval ;DWORD LimitFlags ;}JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION ;
typedef struct _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION {DWORD64 IoReadBytesLimit ;DWORD64 IoWriteBytesLimit ;LARGE_INTEGER PerJobUserTimeLimit ;DWORD64 JobMemoryLimit ;JOBOBJECT_RATE_CONTROL_TOLERANCE RateControlTolerance ;JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL RateControlToleranceInterval ;DWORD LimitFlags ;}*PJOBOBJECT_NOTIFICATION_LIMIT_INFORMATION ;

typedef struct _JOBOBJECT_LIMIT_VIOLATION_INFORMATION {DWORD LimitFlags ;DWORD ViolationLimitFlags ;DWORD64 IoReadBytes ;DWORD64 IoReadBytesLimit ;DWORD64 IoWriteBytes ;DWORD64 IoWriteBytesLimit ;LARGE_INTEGER PerJobUserTime ;LARGE_INTEGER PerJobUserTimeLimit ;DWORD64 JobMemory ;DWORD64 JobMemoryLimit ;JOBOBJECT_RATE_CONTROL_TOLERANCE RateControlTolerance ;JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL RateControlToleranceLimit ;}JOBOBJECT_LIMIT_VIOLATION_INFORMATION ;
typedef struct _JOBOBJECT_LIMIT_VIOLATION_INFORMATION {DWORD LimitFlags ;DWORD ViolationLimitFlags ;DWORD64 IoReadBytes ;DWORD64 IoReadBytesLimit ;DWORD64 IoWriteBytes ;DWORD64 IoWriteBytesLimit ;LARGE_INTEGER PerJobUserTime ;LARGE_INTEGER PerJobUserTimeLimit ;DWORD64 JobMemory ;DWORD64 JobMemoryLimit ;JOBOBJECT_RATE_CONTROL_TOLERANCE RateControlTolerance ;JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL RateControlToleranceLimit ;}*PJOBOBJECT_LIMIT_VIOLATION_INFORMATION ;

typedef struct _JOBOBJECT_CPU_RATE_CONTROL_INFORMATION {DWORD ControlFlags ;union {DWORD CpuRate ;DWORD Weight ;};}JOBOBJECT_CPU_RATE_CONTROL_INFORMATION ;
typedef struct _JOBOBJECT_CPU_RATE_CONTROL_INFORMATION {DWORD ControlFlags ;union {DWORD CpuRate ;DWORD Weight ;};}*PJOBOBJECT_CPU_RATE_CONTROL_INFORMATION ;

typedef enum _JOBOBJECTINFOCLASS {JobObjectBasicAccountingInformation =1 ,JobObjectBasicLimitInformation ,JobObjectBasicProcessIdList ,JobObjectBasicUIRestrictions ,JobObjectSecurityLimitInformation ,JobObjectEndOfJobTimeInformation ,JobObjectAssociateCompletionPortInformation ,JobObjectBasicAndIoAccountingInformation ,JobObjectExtendedLimitInformation ,JobObjectJobSetInformation ,JobObjectGroupInformation ,JobObjectNotificationLimitInformation ,JobObjectLimitViolationInformation ,JobObjectGroupInformationEx ,JobObjectCpuRateControlInformation ,JobObjectCompletionFilter ,JobObjectCompletionCounter ,JobObjectReserved1Information =18 ,JobObjectReserved2Information ,JobObjectReserved3Information ,JobObjectReserved4Information ,JobObjectReserved5Information ,JobObjectReserved6Information ,JobObjectReserved7Information ,JobObjectReserved8Information ,MaxJobObjectInfoClass }JOBOBJECTINFOCLASS ;
typedef enum _FIRMWARE_TYPE {FirmwareTypeUnknown ,FirmwareTypeBios ,FirmwareTypeUefi ,FirmwareTypeMax }FIRMWARE_TYPE ;
typedef enum _FIRMWARE_TYPE *PFIRMWARE_TYPE ;

typedef enum _LOGICAL_PROCESSOR_RELATIONSHIP {RelationProcessorCore ,RelationNumaNode ,RelationCache ,RelationProcessorPackage ,RelationGroup ,RelationAll =65535 }LOGICAL_PROCESSOR_RELATIONSHIP ;
typedef enum _PROCESSOR_CACHE_TYPE {CacheUnified ,CacheInstruction ,CacheData ,CacheTrace }PROCESSOR_CACHE_TYPE ;
typedef struct _CACHE_DESCRIPTOR {BYTE Level ;BYTE Associativity ;WORD LineSize ;DWORD Size ;PROCESSOR_CACHE_TYPE Type ;}CACHE_DESCRIPTOR ;
typedef struct _CACHE_DESCRIPTOR {BYTE Level ;BYTE Associativity ;WORD LineSize ;DWORD Size ;PROCESSOR_CACHE_TYPE Type ;}*PCACHE_DESCRIPTOR ;

typedef struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION {ULONG_PTR ProcessorMask ;LOGICAL_PROCESSOR_RELATIONSHIP Relationship ;union {struct {BYTE Flags ;}ProcessorCore ;struct {DWORD NodeNumber ;}NumaNode ;CACHE_DESCRIPTOR Cache ;ULONGLONG Reserved [2 ];};}SYSTEM_LOGICAL_PROCESSOR_INFORMATION ;
typedef struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION {ULONG_PTR ProcessorMask ;LOGICAL_PROCESSOR_RELATIONSHIP Relationship ;union {struct {BYTE Flags ;}ProcessorCore ;struct {DWORD NodeNumber ;}NumaNode ;CACHE_DESCRIPTOR Cache ;ULONGLONG Reserved [2 ];};}*PSYSTEM_LOGICAL_PROCESSOR_INFORMATION ;

typedef struct _PROCESSOR_RELATIONSHIP {BYTE Flags ;BYTE Reserved [21 ];WORD GroupCount ;GROUP_AFFINITY GroupMask [1 ];}PROCESSOR_RELATIONSHIP ;
typedef struct _PROCESSOR_RELATIONSHIP {BYTE Flags ;BYTE Reserved [21 ];WORD GroupCount ;GROUP_AFFINITY GroupMask [1 ];}*PPROCESSOR_RELATIONSHIP ;

typedef struct _NUMA_NODE_RELATIONSHIP {DWORD NodeNumber ;BYTE Reserved [20 ];GROUP_AFFINITY GroupMask ;}NUMA_NODE_RELATIONSHIP ;
typedef struct _NUMA_NODE_RELATIONSHIP {DWORD NodeNumber ;BYTE Reserved [20 ];GROUP_AFFINITY GroupMask ;}*PNUMA_NODE_RELATIONSHIP ;

typedef struct _CACHE_RELATIONSHIP {BYTE Level ;BYTE Associativity ;WORD LineSize ;DWORD CacheSize ;PROCESSOR_CACHE_TYPE Type ;BYTE Reserved [20 ];GROUP_AFFINITY GroupMask ;}CACHE_RELATIONSHIP ;
typedef struct _CACHE_RELATIONSHIP {BYTE Level ;BYTE Associativity ;WORD LineSize ;DWORD CacheSize ;PROCESSOR_CACHE_TYPE Type ;BYTE Reserved [20 ];GROUP_AFFINITY GroupMask ;}*PCACHE_RELATIONSHIP ;

typedef struct _PROCESSOR_GROUP_INFO {BYTE MaximumProcessorCount ;BYTE ActiveProcessorCount ;BYTE Reserved [38 ];KAFFINITY ActiveProcessorMask ;}PROCESSOR_GROUP_INFO ;
typedef struct _PROCESSOR_GROUP_INFO {BYTE MaximumProcessorCount ;BYTE ActiveProcessorCount ;BYTE Reserved [38 ];KAFFINITY ActiveProcessorMask ;}*PPROCESSOR_GROUP_INFO ;

typedef struct _GROUP_RELATIONSHIP {WORD MaximumGroupCount ;WORD ActiveGroupCount ;BYTE Reserved [20 ];PROCESSOR_GROUP_INFO GroupInfo [1 ];}GROUP_RELATIONSHIP ;
typedef struct _GROUP_RELATIONSHIP {WORD MaximumGroupCount ;WORD ActiveGroupCount ;BYTE Reserved [20 ];PROCESSOR_GROUP_INFO GroupInfo [1 ];}*PGROUP_RELATIONSHIP ;

struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX {LOGICAL_PROCESSOR_RELATIONSHIP Relationship ;DWORD Size ;union {PROCESSOR_RELATIONSHIP Processor ;NUMA_NODE_RELATIONSHIP NumaNode ;CACHE_RELATIONSHIP Cache ;GROUP_RELATIONSHIP Group ;};};
typedef struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX ;
typedef struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX *PSYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX ;

typedef struct _SYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION {DWORD64 CycleTime ;}SYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION ;
typedef struct _SYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION {DWORD64 CycleTime ;}*PSYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION ;

typedef struct _XSTATE_FEATURE {DWORD Offset ;DWORD Size ;}XSTATE_FEATURE ;
typedef struct _XSTATE_FEATURE {DWORD Offset ;DWORD Size ;}*PXSTATE_FEATURE ;

typedef struct _XSTATE_CONFIGURATION {DWORD64 EnabledFeatures ;DWORD64 EnabledVolatileFeatures ;DWORD Size ;DWORD OptimizedSave :1 ;XSTATE_FEATURE Features [64 ];}XSTATE_CONFIGURATION ;
typedef struct _XSTATE_CONFIGURATION {DWORD64 EnabledFeatures ;DWORD64 EnabledVolatileFeatures ;DWORD Size ;DWORD OptimizedSave :1 ;XSTATE_FEATURE Features [64 ];}*PXSTATE_CONFIGURATION ;

typedef struct _MEMORY_BASIC_INFORMATION {PVOID BaseAddress ;PVOID AllocationBase ;DWORD AllocationProtect ;SIZE_T RegionSize ;DWORD State ;DWORD Protect ;DWORD Type ;}MEMORY_BASIC_INFORMATION ;
typedef struct _MEMORY_BASIC_INFORMATION {PVOID BaseAddress ;PVOID AllocationBase ;DWORD AllocationProtect ;SIZE_T RegionSize ;DWORD State ;DWORD Protect ;DWORD Type ;}*PMEMORY_BASIC_INFORMATION ;

typedef struct _MEMORY_BASIC_INFORMATION32 {DWORD BaseAddress ;DWORD AllocationBase ;DWORD AllocationProtect ;DWORD RegionSize ;DWORD State ;DWORD Protect ;DWORD Type ;}MEMORY_BASIC_INFORMATION32 ;
typedef struct _MEMORY_BASIC_INFORMATION32 {DWORD BaseAddress ;DWORD AllocationBase ;DWORD AllocationProtect ;DWORD RegionSize ;DWORD State ;DWORD Protect ;DWORD Type ;}*PMEMORY_BASIC_INFORMATION32 ;

typedef struct _MEMORY_BASIC_INFORMATION64 {ULONGLONG BaseAddress ;ULONGLONG AllocationBase ;DWORD AllocationProtect ;DWORD __alignment1 ;ULONGLONG RegionSize ;DWORD State ;DWORD Protect ;DWORD Type ;DWORD __alignment2 ;}MEMORY_BASIC_INFORMATION64 ;
typedef struct _MEMORY_BASIC_INFORMATION64 {ULONGLONG BaseAddress ;ULONGLONG AllocationBase ;DWORD AllocationProtect ;DWORD __alignment1 ;ULONGLONG RegionSize ;DWORD State ;DWORD Protect ;DWORD Type ;DWORD __alignment2 ;}*PMEMORY_BASIC_INFORMATION64 ;

typedef struct FILE_ID_128 {ULONGLONG LowPart ;ULONGLONG HighPart ;}FILE_ID_128 ;
typedef struct FILE_ID_128 {ULONGLONG LowPart ;ULONGLONG HighPart ;}*PFILE_ID_128 ;

typedef struct _FILE_NOTIFY_INFORMATION {DWORD NextEntryOffset ;DWORD Action ;DWORD FileNameLength ;WCHAR FileName [1 ];}FILE_NOTIFY_INFORMATION ;
typedef struct _FILE_NOTIFY_INFORMATION {DWORD NextEntryOffset ;DWORD Action ;DWORD FileNameLength ;WCHAR FileName [1 ];}*PFILE_NOTIFY_INFORMATION ;

typedef union _FILE_SEGMENT_ELEMENT {PVOID64 Buffer ;ULONGLONG Alignment ;}FILE_SEGMENT_ELEMENT ;
typedef union _FILE_SEGMENT_ELEMENT {PVOID64 Buffer ;ULONGLONG Alignment ;}*PFILE_SEGMENT_ELEMENT ;

typedef struct _REPARSE_GUID_DATA_BUFFER {DWORD ReparseTag ;WORD ReparseDataLength ;WORD Reserved ;GUID ReparseGuid ;struct {BYTE DataBuffer [1 ];}GenericReparseBuffer ;}REPARSE_GUID_DATA_BUFFER ;
typedef struct _REPARSE_GUID_DATA_BUFFER {DWORD ReparseTag ;WORD ReparseDataLength ;WORD Reserved ;GUID ReparseGuid ;struct {BYTE DataBuffer [1 ];}GenericReparseBuffer ;}*PREPARSE_GUID_DATA_BUFFER ;

extern const GUID GUID_MAX_POWER_SAVINGS ;
extern const GUID GUID_MIN_POWER_SAVINGS ;
extern const GUID GUID_TYPICAL_POWER_SAVINGS ;
extern const GUID NO_SUBGROUP_GUID ;
extern const GUID ALL_POWERSCHEMES_GUID ;
extern const GUID GUID_POWERSCHEME_PERSONALITY ;
extern const GUID GUID_ACTIVE_POWERSCHEME ;
extern const GUID GUID_IDLE_RESILIENCY_SUBGROUP ;
extern const GUID GUID_IDLE_RESILIENCY_PERIOD ;
extern const GUID GUID_DISK_COALESCING_POWERDOWN_TIMEOUT ;
extern const GUID GUID_EXECUTION_REQUIRED_REQUEST_TIMEOUT ;
extern const GUID GUID_VIDEO_SUBGROUP ;
extern const GUID GUID_VIDEO_POWERDOWN_TIMEOUT ;
extern const GUID GUID_VIDEO_ANNOYANCE_TIMEOUT ;
extern const GUID GUID_VIDEO_ADAPTIVE_PERCENT_INCREASE ;
extern const GUID GUID_VIDEO_DIM_TIMEOUT ;
extern const GUID GUID_VIDEO_ADAPTIVE_POWERDOWN ;
extern const GUID GUID_MONITOR_POWER_ON ;
extern const GUID GUID_DEVICE_POWER_POLICY_VIDEO_BRIGHTNESS ;
extern const GUID GUID_DEVICE_POWER_POLICY_VIDEO_DIM_BRIGHTNESS ;
extern const GUID GUID_VIDEO_CURRENT_MONITOR_BRIGHTNESS ;
extern const GUID GUID_VIDEO_ADAPTIVE_DISPLAY_BRIGHTNESS ;
extern const GUID GUID_CONSOLE_DISPLAY_STATE ;
extern const GUID GUID_ALLOW_DISPLAY_REQUIRED ;
extern const GUID GUID_VIDEO_CONSOLE_LOCK_TIMEOUT ;
extern const GUID GUID_ADAPTIVE_POWER_BEHAVIOR_SUBGROUP ;
extern const GUID GUID_NON_ADAPTIVE_INPUT_TIMEOUT ;
extern const GUID GUID_DISK_SUBGROUP ;
extern const GUID GUID_DISK_POWERDOWN_TIMEOUT ;
extern const GUID GUID_DISK_IDLE_TIMEOUT ;
extern const GUID GUID_DISK_BURST_IGNORE_THRESHOLD ;
extern const GUID GUID_DISK_ADAPTIVE_POWERDOWN ;
extern const GUID GUID_SLEEP_SUBGROUP ;
extern const GUID GUID_SLEEP_IDLE_THRESHOLD ;
extern const GUID GUID_STANDBY_TIMEOUT ;
extern const GUID GUID_UNATTEND_SLEEP_TIMEOUT ;
extern const GUID GUID_HIBERNATE_TIMEOUT ;
extern const GUID GUID_HIBERNATE_FASTS4_POLICY ;
extern const GUID GUID_CRITICAL_POWER_TRANSITION ;
extern const GUID GUID_SYSTEM_AWAYMODE ;
extern const GUID GUID_ALLOW_AWAYMODE ;
extern const GUID GUID_ALLOW_STANDBY_STATES ;
extern const GUID GUID_ALLOW_RTC_WAKE ;
extern const GUID GUID_ALLOW_SYSTEM_REQUIRED ;
extern const GUID GUID_SYSTEM_BUTTON_SUBGROUP ;
extern const GUID GUID_POWERBUTTON_ACTION ;
extern const GUID GUID_SLEEPBUTTON_ACTION ;
extern const GUID GUID_USERINTERFACEBUTTON_ACTION ;
extern const GUID GUID_LIDCLOSE_ACTION ;
extern const GUID GUID_LIDOPEN_POWERSTATE ;
extern const GUID GUID_BATTERY_SUBGROUP ;
extern const GUID GUID_BATTERY_DISCHARGE_ACTION_0 ;
extern const GUID GUID_BATTERY_DISCHARGE_LEVEL_0 ;
extern const GUID GUID_BATTERY_DISCHARGE_FLAGS_0 ;
extern const GUID GUID_BATTERY_DISCHARGE_ACTION_1 ;
extern const GUID GUID_BATTERY_DISCHARGE_LEVEL_1 ;
extern const GUID GUID_BATTERY_DISCHARGE_FLAGS_1 ;
extern const GUID GUID_BATTERY_DISCHARGE_ACTION_2 ;
extern const GUID GUID_BATTERY_DISCHARGE_LEVEL_2 ;
extern const GUID GUID_BATTERY_DISCHARGE_FLAGS_2 ;
extern const GUID GUID_BATTERY_DISCHARGE_ACTION_3 ;
extern const GUID GUID_BATTERY_DISCHARGE_LEVEL_3 ;
extern const GUID GUID_BATTERY_DISCHARGE_FLAGS_3 ;
extern const GUID GUID_PROCESSOR_SETTINGS_SUBGROUP ;
extern const GUID GUID_PROCESSOR_THROTTLE_POLICY ;
extern const GUID GUID_PROCESSOR_THROTTLE_MAXIMUM ;
extern const GUID GUID_PROCESSOR_THROTTLE_MINIMUM ;
extern const GUID GUID_PROCESSOR_ALLOW_THROTTLING ;
extern const GUID GUID_PROCESSOR_IDLESTATE_POLICY ;
extern const GUID GUID_PROCESSOR_PERFSTATE_POLICY ;
extern const GUID GUID_PROCESSOR_PERF_INCREASE_THRESHOLD ;
extern const GUID GUID_PROCESSOR_PERF_DECREASE_THRESHOLD ;
extern const GUID GUID_PROCESSOR_PERF_INCREASE_POLICY ;
extern const GUID GUID_PROCESSOR_PERF_DECREASE_POLICY ;
extern const GUID GUID_PROCESSOR_PERF_INCREASE_TIME ;
extern const GUID GUID_PROCESSOR_PERF_DECREASE_TIME ;
extern const GUID GUID_PROCESSOR_PERF_TIME_CHECK ;
extern const GUID GUID_PROCESSOR_PERF_BOOST_POLICY ;
extern const GUID GUID_PROCESSOR_PERF_BOOST_MODE ;
extern const GUID GUID_PROCESSOR_IDLE_ALLOW_SCALING ;
extern const GUID GUID_PROCESSOR_IDLE_DISABLE ;
extern const GUID GUID_PROCESSOR_IDLE_STATE_MAXIMUM ;
extern const GUID GUID_PROCESSOR_IDLE_TIME_CHECK ;
extern const GUID GUID_PROCESSOR_IDLE_DEMOTE_THRESHOLD ;
extern const GUID GUID_PROCESSOR_IDLE_PROMOTE_THRESHOLD ;
extern const GUID GUID_PROCESSOR_CORE_PARKING_INCREASE_THRESHOLD ;
extern const GUID GUID_PROCESSOR_CORE_PARKING_DECREASE_THRESHOLD ;
extern const GUID GUID_PROCESSOR_CORE_PARKING_INCREASE_POLICY ;
extern const GUID GUID_PROCESSOR_CORE_PARKING_DECREASE_POLICY ;
extern const GUID GUID_PROCESSOR_CORE_PARKING_MAX_CORES ;
extern const GUID GUID_PROCESSOR_CORE_PARKING_MIN_CORES ;
extern const GUID GUID_PROCESSOR_CORE_PARKING_INCREASE_TIME ;
extern const GUID GUID_PROCESSOR_CORE_PARKING_DECREASE_TIME ;
extern const GUID GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_DECREASE_FACTOR ;
extern const GUID GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_THRESHOLD ;
extern const GUID GUID_PROCESSOR_CORE_PARKING_AFFINITY_WEIGHTING ;
extern const GUID GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_DECREASE_FACTOR ;
extern const GUID GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_THRESHOLD ;
extern const GUID GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_WEIGHTING ;
extern const GUID GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_THRESHOLD ;
extern const GUID GUID_PROCESSOR_PARKING_CORE_OVERRIDE ;
extern const GUID GUID_PROCESSOR_PARKING_PERF_STATE ;
extern const GUID GUID_PROCESSOR_PARKING_CONCURRENCY_THRESHOLD ;
extern const GUID GUID_PROCESSOR_PARKING_HEADROOM_THRESHOLD ;
extern const GUID GUID_PROCESSOR_PERF_HISTORY ;
extern const GUID GUID_PROCESSOR_PERF_LATENCY_HINT ;
extern const GUID GUID_PROCESSOR_DISTRIBUTE_UTILITY ;
extern const GUID GUID_SYSTEM_COOLING_POLICY ;
extern const GUID GUID_LOCK_CONSOLE_ON_WAKE ;
extern const GUID GUID_DEVICE_IDLE_POLICY ;
extern const GUID GUID_ACDC_POWER_SOURCE ;
extern const GUID GUID_LIDSWITCH_STATE_CHANGE ;
extern const GUID GUID_BATTERY_PERCENTAGE_REMAINING ;
extern const GUID GUID_GLOBAL_USER_PRESENCE ;
extern const GUID GUID_SESSION_DISPLAY_STATUS ;
extern const GUID GUID_SESSION_USER_PRESENCE ;
extern const GUID GUID_IDLE_BACKGROUND_TASK ;
extern const GUID GUID_BACKGROUND_TASK_NOTIFICATION ;
extern const GUID GUID_APPLAUNCH_BUTTON ;
extern const GUID GUID_PCIEXPRESS_SETTINGS_SUBGROUP ;
extern const GUID GUID_PCIEXPRESS_ASPM_POLICY ;
extern const GUID GUID_ENABLE_SWITCH_FORCED_SHUTDOWN ;
typedef enum _SYSTEM_POWER_STATE {PowerSystemUnspecified =0 ,PowerSystemWorking =1 ,PowerSystemSleeping1 =2 ,PowerSystemSleeping2 =3 ,PowerSystemSleeping3 =4 ,PowerSystemHibernate =5 ,PowerSystemShutdown =6 ,PowerSystemMaximum =7 }SYSTEM_POWER_STATE ;
typedef enum _SYSTEM_POWER_STATE *PSYSTEM_POWER_STATE ;

typedef enum {PowerActionNone =0 ,PowerActionReserved ,PowerActionSleep ,PowerActionHibernate ,PowerActionShutdown ,PowerActionShutdownReset ,PowerActionShutdownOff ,PowerActionWarmEject }POWER_ACTION ;
typedef enum {PowerActionNone =0 ,PowerActionReserved ,PowerActionSleep ,PowerActionHibernate ,PowerActionShutdown ,PowerActionShutdownReset ,PowerActionShutdownOff ,PowerActionWarmEject }*PPOWER_ACTION ;

typedef enum _DEVICE_POWER_STATE {PowerDeviceUnspecified =0 ,PowerDeviceD0 ,PowerDeviceD1 ,PowerDeviceD2 ,PowerDeviceD3 ,PowerDeviceMaximum }DEVICE_POWER_STATE ;
typedef enum _DEVICE_POWER_STATE *PDEVICE_POWER_STATE ;

typedef enum _MONITOR_DISPLAY_STATE {PowerMonitorOff =0 ,PowerMonitorOn ,PowerMonitorDim }MONITOR_DISPLAY_STATE ;
typedef enum _MONITOR_DISPLAY_STATE *PMONITOR_DISPLAY_STATE ;

typedef enum _USER_ACTIVITY_PRESENCE {PowerUserPresent =0 ,PowerUserNotPresent ,PowerUserInactive ,PowerUserMaximum ,PowerUserInvalid =3 }USER_ACTIVITY_PRESENCE ;
typedef enum _USER_ACTIVITY_PRESENCE *PUSER_ACTIVITY_PRESENCE ;

typedef DWORD EXECUTION_STATE ;
typedef DWORD *PEXECUTION_STATE ;

typedef enum {LT_DONT_CARE ,LT_LOWEST_LATENCY }LATENCY_TIME ;
typedef enum _POWER_REQUEST_TYPE {PowerRequestDisplayRequired ,PowerRequestSystemRequired ,PowerRequestAwayModeRequired ,PowerRequestExecutionRequired }POWER_REQUEST_TYPE ;
typedef enum _POWER_REQUEST_TYPE *PPOWER_REQUEST_TYPE ;

typedef struct CM_Power_Data_s {DWORD PD_Size ;DEVICE_POWER_STATE PD_MostRecentPowerState ;DWORD PD_Capabilities ;DWORD PD_D1Latency ;DWORD PD_D2Latency ;DWORD PD_D3Latency ;DEVICE_POWER_STATE PD_PowerStateMapping [7 ];SYSTEM_POWER_STATE PD_DeepestSystemWake ;}CM_POWER_DATA ;
typedef struct CM_Power_Data_s {DWORD PD_Size ;DEVICE_POWER_STATE PD_MostRecentPowerState ;DWORD PD_Capabilities ;DWORD PD_D1Latency ;DWORD PD_D2Latency ;DWORD PD_D3Latency ;DEVICE_POWER_STATE PD_PowerStateMapping [7 ];SYSTEM_POWER_STATE PD_DeepestSystemWake ;}*PCM_POWER_DATA ;

typedef enum {SystemPowerPolicyAc ,SystemPowerPolicyDc ,VerifySystemPolicyAc ,VerifySystemPolicyDc ,SystemPowerCapabilities ,SystemBatteryState ,SystemPowerStateHandler ,ProcessorStateHandler ,SystemPowerPolicyCurrent ,AdministratorPowerPolicy ,SystemReserveHiberFile ,ProcessorInformation ,SystemPowerInformation ,ProcessorStateHandler2 ,LastWakeTime ,LastSleepTime ,SystemExecutionState ,SystemPowerStateNotifyHandler ,ProcessorPowerPolicyAc ,ProcessorPowerPolicyDc ,VerifyProcessorPowerPolicyAc ,VerifyProcessorPowerPolicyDc ,ProcessorPowerPolicyCurrent ,SystemPowerStateLogging ,SystemPowerLoggingEntry ,SetPowerSettingValue ,NotifyUserPowerSetting ,PowerInformationLevelUnused0 ,SystemMonitorHiberBootPowerOff ,SystemVideoState ,TraceApplicationPowerMessage ,TraceApplicationPowerMessageEnd ,ProcessorPerfStates ,ProcessorIdleStates ,ProcessorCap ,SystemWakeSource ,SystemHiberFileInformation ,TraceServicePowerMessage ,ProcessorLoad ,PowerShutdownNotification ,MonitorCapabilities ,SessionPowerInit ,SessionDisplayState ,PowerRequestCreate ,PowerRequestAction ,GetPowerRequestList ,ProcessorInformationEx ,NotifyUserModeLegacyPowerEvent ,GroupPark ,ProcessorIdleDomains ,WakeTimerList ,SystemHiberFileSize ,ProcessorIdleStatesHv ,ProcessorPerfStatesHv ,ProcessorPerfCapHv ,ProcessorSetIdle ,LogicalProcessorIdling ,UserPresence ,PowerSettingNotificationName ,GetPowerSettingValue ,IdleResiliency ,SessionRITState ,SessionConnectNotification ,SessionPowerCleanup ,SessionLockState ,SystemHiberbootState ,PlatformInformation ,PdcInvocation ,MonitorInvocation ,FirmwareTableInformationRegistered ,SetShutdownSelectedTime ,SuspendResumeInvocation ,PlmPowerRequestCreate ,ScreenOff ,CsDeviceNotification ,PlatformRole ,LastResumePerformance ,DisplayBurst ,ExitLatencySamplingPercentage ,ApplyLowPowerScenarioSettings ,PowerInformationLevelMaximum }POWER_INFORMATION_LEVEL ;
typedef enum {UserNotPresent =0 ,UserPresent =1 ,UserUnknown =255 }POWER_USER_PRESENCE_TYPE ;
typedef enum {UserNotPresent =0 ,UserPresent =1 ,UserUnknown =255 }*PPOWER_USER_PRESENCE_TYPE ;

typedef struct _POWER_USER_PRESENCE {POWER_USER_PRESENCE_TYPE UserPresence ;}POWER_USER_PRESENCE ;
typedef struct _POWER_USER_PRESENCE {POWER_USER_PRESENCE_TYPE UserPresence ;}*PPOWER_USER_PRESENCE ;

typedef struct _POWER_SESSION_CONNECT {BOOLEAN Connected ;BOOLEAN Console ;}POWER_SESSION_CONNECT ;
typedef struct _POWER_SESSION_CONNECT {BOOLEAN Connected ;BOOLEAN Console ;}*PPOWER_SESSION_CONNECT ;

typedef struct _POWER_SESSION_TIMEOUTS {DWORD InputTimeout ;DWORD DisplayTimeout ;}POWER_SESSION_TIMEOUTS ;
typedef struct _POWER_SESSION_TIMEOUTS {DWORD InputTimeout ;DWORD DisplayTimeout ;}*PPOWER_SESSION_TIMEOUTS ;

typedef struct _POWER_SESSION_RIT_STATE {BOOLEAN Active ;DWORD LastInputTime ;}POWER_SESSION_RIT_STATE ;
typedef struct _POWER_SESSION_RIT_STATE {BOOLEAN Active ;DWORD LastInputTime ;}*PPOWER_SESSION_RIT_STATE ;

typedef struct _POWER_SESSION_WINLOGON {DWORD SessionId ;BOOLEAN Console ;BOOLEAN Locked ;}POWER_SESSION_WINLOGON ;
typedef struct _POWER_SESSION_WINLOGON {DWORD SessionId ;BOOLEAN Console ;BOOLEAN Locked ;}*PPOWER_SESSION_WINLOGON ;

typedef struct _POWER_IDLE_RESILIENCY {DWORD CoalescingTimeout ;DWORD IdleResiliencyPeriod ;}POWER_IDLE_RESILIENCY ;
typedef struct _POWER_IDLE_RESILIENCY {DWORD CoalescingTimeout ;DWORD IdleResiliencyPeriod ;}*PPOWER_IDLE_RESILIENCY ;

typedef enum {MonitorRequestReasonUnknown ,MonitorRequestReasonPowerButton ,MonitorRequestReasonRemoteConnection ,MonitorRequestReasonScMonitorpower ,MonitorRequestReasonUserInput ,MonitorRequestReasonAcDcDisplayBurst ,MonitorRequestReasonUserDisplayBurst ,MonitorRequestReasonPoSetSystemState ,MonitorRequestReasonSetThreadExecutionState ,MonitorRequestReasonFullWake ,MonitorRequestReasonSessionUnlock ,MonitorRequestReasonScreenOffRequest ,MonitorRequestReasonIdleTimeout ,MonitorRequestReasonPolicyChange ,MonitorRequestReasonMax }POWER_MONITOR_REQUEST_REASON ;
typedef struct _POWER_MONITOR_INVOCATION {BOOLEAN On ;BOOLEAN Console ;POWER_MONITOR_REQUEST_REASON RequestReason ;}POWER_MONITOR_INVOCATION ;
typedef struct _POWER_MONITOR_INVOCATION {BOOLEAN On ;BOOLEAN Console ;POWER_MONITOR_REQUEST_REASON RequestReason ;}*PPOWER_MONITOR_INVOCATION ;

typedef struct _RESUME_PERFORMANCE {DWORD PostTimeMs ;ULONGLONG TotalResumeTimeMs ;ULONGLONG ResumeCompleteTimestamp ;}RESUME_PERFORMANCE ;
typedef struct _RESUME_PERFORMANCE {DWORD PostTimeMs ;ULONGLONG TotalResumeTimeMs ;ULONGLONG ResumeCompleteTimestamp ;}*PRESUME_PERFORMANCE ;

typedef enum {PoAc ,PoDc ,PoHot ,PoConditionMaximum }SYSTEM_POWER_CONDITION ;
typedef struct {DWORD Version ;GUID Guid ;SYSTEM_POWER_CONDITION PowerCondition ;DWORD DataLength ;BYTE Data [1 ];}SET_POWER_SETTING_VALUE ;
typedef struct {DWORD Version ;GUID Guid ;SYSTEM_POWER_CONDITION PowerCondition ;DWORD DataLength ;BYTE Data [1 ];}*PSET_POWER_SETTING_VALUE ;

typedef struct {GUID Guid ;}NOTIFY_USER_POWER_SETTING ;
typedef struct {GUID Guid ;}*PNOTIFY_USER_POWER_SETTING ;

typedef struct _APPLICATIONLAUNCH_SETTING_VALUE {LARGE_INTEGER ActivationTime ;DWORD Flags ;DWORD ButtonInstanceID ;}APPLICATIONLAUNCH_SETTING_VALUE ;
typedef struct _APPLICATIONLAUNCH_SETTING_VALUE {LARGE_INTEGER ActivationTime ;DWORD Flags ;DWORD ButtonInstanceID ;}*PAPPLICATIONLAUNCH_SETTING_VALUE ;

typedef enum _POWER_PLATFORM_ROLE {PlatformRoleUnspecified =0 ,PlatformRoleDesktop ,PlatformRoleMobile ,PlatformRoleWorkstation ,PlatformRoleEnterpriseServer ,PlatformRoleSOHOServer ,PlatformRoleAppliancePC ,PlatformRolePerformanceServer ,PlatformRoleSlate ,PlatformRoleMaximum }POWER_PLATFORM_ROLE ;
typedef enum _POWER_PLATFORM_ROLE *PPOWER_PLATFORM_ROLE ;

typedef struct _POWER_PLATFORM_INFORMATION {BOOLEAN AoAc ;}POWER_PLATFORM_INFORMATION ;
typedef struct _POWER_PLATFORM_INFORMATION {BOOLEAN AoAc ;}*PPOWER_PLATFORM_INFORMATION ;

typedef struct {DWORD Granularity ;DWORD Capacity ;}BATTERY_REPORTING_SCALE ;
typedef struct {DWORD Granularity ;DWORD Capacity ;}*PBATTERY_REPORTING_SCALE ;

typedef struct {DWORD Frequency ;DWORD Flags ;DWORD PercentFrequency ;}PPM_WMI_LEGACY_PERFSTATE ;
typedef struct {DWORD Frequency ;DWORD Flags ;DWORD PercentFrequency ;}*PPPM_WMI_LEGACY_PERFSTATE ;

typedef struct {DWORD Latency ;DWORD Power ;DWORD TimeCheck ;BYTE PromotePercent ;BYTE DemotePercent ;BYTE StateType ;BYTE Reserved ;DWORD StateFlags ;DWORD Context ;DWORD IdleHandler ;DWORD Reserved1 ;}PPM_WMI_IDLE_STATE ;
typedef struct {DWORD Latency ;DWORD Power ;DWORD TimeCheck ;BYTE PromotePercent ;BYTE DemotePercent ;BYTE StateType ;BYTE Reserved ;DWORD StateFlags ;DWORD Context ;DWORD IdleHandler ;DWORD Reserved1 ;}*PPPM_WMI_IDLE_STATE ;

typedef struct {DWORD Type ;DWORD Count ;DWORD TargetState ;DWORD OldState ;DWORD64 TargetProcessors ;PPM_WMI_IDLE_STATE State [1 ];}PPM_WMI_IDLE_STATES ;
typedef struct {DWORD Type ;DWORD Count ;DWORD TargetState ;DWORD OldState ;DWORD64 TargetProcessors ;PPM_WMI_IDLE_STATE State [1 ];}*PPPM_WMI_IDLE_STATES ;

typedef struct {DWORD Type ;DWORD Count ;DWORD TargetState ;DWORD OldState ;PVOID TargetProcessors ;PPM_WMI_IDLE_STATE State [1 ];}PPM_WMI_IDLE_STATES_EX ;
typedef struct {DWORD Type ;DWORD Count ;DWORD TargetState ;DWORD OldState ;PVOID TargetProcessors ;PPM_WMI_IDLE_STATE State [1 ];}*PPPM_WMI_IDLE_STATES_EX ;

typedef struct {DWORD Frequency ;DWORD Power ;BYTE PercentFrequency ;BYTE IncreaseLevel ;BYTE DecreaseLevel ;BYTE Type ;DWORD IncreaseTime ;DWORD DecreaseTime ;DWORD64 Control ;DWORD64 Status ;DWORD HitCount ;DWORD Reserved1 ;DWORD64 Reserved2 ;DWORD64 Reserved3 ;}PPM_WMI_PERF_STATE ;
typedef struct {DWORD Frequency ;DWORD Power ;BYTE PercentFrequency ;BYTE IncreaseLevel ;BYTE DecreaseLevel ;BYTE Type ;DWORD IncreaseTime ;DWORD DecreaseTime ;DWORD64 Control ;DWORD64 Status ;DWORD HitCount ;DWORD Reserved1 ;DWORD64 Reserved2 ;DWORD64 Reserved3 ;}*PPPM_WMI_PERF_STATE ;

typedef struct {DWORD Count ;DWORD MaxFrequency ;DWORD CurrentState ;DWORD MaxPerfState ;DWORD MinPerfState ;DWORD LowestPerfState ;DWORD ThermalConstraint ;BYTE BusyAdjThreshold ;BYTE PolicyType ;BYTE Type ;BYTE Reserved ;DWORD TimerInterval ;DWORD64 TargetProcessors ;DWORD PStateHandler ;DWORD PStateContext ;DWORD TStateHandler ;DWORD TStateContext ;DWORD FeedbackHandler ;DWORD Reserved1 ;DWORD64 Reserved2 ;PPM_WMI_PERF_STATE State [1 ];}PPM_WMI_PERF_STATES ;
typedef struct {DWORD Count ;DWORD MaxFrequency ;DWORD CurrentState ;DWORD MaxPerfState ;DWORD MinPerfState ;DWORD LowestPerfState ;DWORD ThermalConstraint ;BYTE BusyAdjThreshold ;BYTE PolicyType ;BYTE Type ;BYTE Reserved ;DWORD TimerInterval ;DWORD64 TargetProcessors ;DWORD PStateHandler ;DWORD PStateContext ;DWORD TStateHandler ;DWORD TStateContext ;DWORD FeedbackHandler ;DWORD Reserved1 ;DWORD64 Reserved2 ;PPM_WMI_PERF_STATE State [1 ];}*PPPM_WMI_PERF_STATES ;

typedef struct {DWORD Count ;DWORD MaxFrequency ;DWORD CurrentState ;DWORD MaxPerfState ;DWORD MinPerfState ;DWORD LowestPerfState ;DWORD ThermalConstraint ;BYTE BusyAdjThreshold ;BYTE PolicyType ;BYTE Type ;BYTE Reserved ;DWORD TimerInterval ;PVOID TargetProcessors ;DWORD PStateHandler ;DWORD PStateContext ;DWORD TStateHandler ;DWORD TStateContext ;DWORD FeedbackHandler ;DWORD Reserved1 ;DWORD64 Reserved2 ;PPM_WMI_PERF_STATE State [1 ];}PPM_WMI_PERF_STATES_EX ;
typedef struct {DWORD Count ;DWORD MaxFrequency ;DWORD CurrentState ;DWORD MaxPerfState ;DWORD MinPerfState ;DWORD LowestPerfState ;DWORD ThermalConstraint ;BYTE BusyAdjThreshold ;BYTE PolicyType ;BYTE Type ;BYTE Reserved ;DWORD TimerInterval ;PVOID TargetProcessors ;DWORD PStateHandler ;DWORD PStateContext ;DWORD TStateHandler ;DWORD TStateContext ;DWORD FeedbackHandler ;DWORD Reserved1 ;DWORD64 Reserved2 ;PPM_WMI_PERF_STATE State [1 ];}*PPPM_WMI_PERF_STATES_EX ;

typedef struct {DWORD IdleTransitions ;DWORD FailedTransitions ;DWORD InvalidBucketIndex ;DWORD64 TotalTime ;DWORD IdleTimeBuckets [6 ];}PPM_IDLE_STATE_ACCOUNTING ;
typedef struct {DWORD IdleTransitions ;DWORD FailedTransitions ;DWORD InvalidBucketIndex ;DWORD64 TotalTime ;DWORD IdleTimeBuckets [6 ];}*PPPM_IDLE_STATE_ACCOUNTING ;

typedef struct {DWORD StateCount ;DWORD TotalTransitions ;DWORD ResetCount ;DWORD64 StartTime ;PPM_IDLE_STATE_ACCOUNTING State [1 ];}PPM_IDLE_ACCOUNTING ;
typedef struct {DWORD StateCount ;DWORD TotalTransitions ;DWORD ResetCount ;DWORD64 StartTime ;PPM_IDLE_STATE_ACCOUNTING State [1 ];}*PPPM_IDLE_ACCOUNTING ;

typedef struct {DWORD64 TotalTimeUs ;DWORD MinTimeUs ;DWORD MaxTimeUs ;DWORD Count ;}PPM_IDLE_STATE_BUCKET_EX ;
typedef struct {DWORD64 TotalTimeUs ;DWORD MinTimeUs ;DWORD MaxTimeUs ;DWORD Count ;}*PPPM_IDLE_STATE_BUCKET_EX ;

typedef struct {DWORD64 TotalTime ;DWORD IdleTransitions ;DWORD FailedTransitions ;DWORD InvalidBucketIndex ;DWORD MinTimeUs ;DWORD MaxTimeUs ;DWORD CancelledTransitions ;PPM_IDLE_STATE_BUCKET_EX IdleTimeBuckets [16 ];}PPM_IDLE_STATE_ACCOUNTING_EX ;
typedef struct {DWORD64 TotalTime ;DWORD IdleTransitions ;DWORD FailedTransitions ;DWORD InvalidBucketIndex ;DWORD MinTimeUs ;DWORD MaxTimeUs ;DWORD CancelledTransitions ;PPM_IDLE_STATE_BUCKET_EX IdleTimeBuckets [16 ];}*PPPM_IDLE_STATE_ACCOUNTING_EX ;

typedef struct {DWORD StateCount ;DWORD TotalTransitions ;DWORD ResetCount ;DWORD AbortCount ;DWORD64 StartTime ;PPM_IDLE_STATE_ACCOUNTING_EX State [1 ];}PPM_IDLE_ACCOUNTING_EX ;
typedef struct {DWORD StateCount ;DWORD TotalTransitions ;DWORD ResetCount ;DWORD AbortCount ;DWORD64 StartTime ;PPM_IDLE_STATE_ACCOUNTING_EX State [1 ];}*PPPM_IDLE_ACCOUNTING_EX ;

typedef struct {DWORD State ;DWORD Status ;DWORD Latency ;DWORD Speed ;DWORD Processor ;}PPM_PERFSTATE_EVENT ;
typedef struct {DWORD State ;DWORD Status ;DWORD Latency ;DWORD Speed ;DWORD Processor ;}*PPPM_PERFSTATE_EVENT ;

typedef struct {DWORD State ;DWORD Latency ;DWORD Speed ;DWORD64 Processors ;}PPM_PERFSTATE_DOMAIN_EVENT ;
typedef struct {DWORD State ;DWORD Latency ;DWORD Speed ;DWORD64 Processors ;}*PPPM_PERFSTATE_DOMAIN_EVENT ;

typedef struct {DWORD NewState ;DWORD OldState ;DWORD64 Processors ;}PPM_IDLESTATE_EVENT ;
typedef struct {DWORD NewState ;DWORD OldState ;DWORD64 Processors ;}*PPPM_IDLESTATE_EVENT ;

typedef struct {DWORD ThermalConstraint ;DWORD64 Processors ;}PPM_THERMALCHANGE_EVENT ;
typedef struct {DWORD ThermalConstraint ;DWORD64 Processors ;}*PPPM_THERMALCHANGE_EVENT ;

typedef struct {BYTE Mode ;DWORD64 Processors ;}PPM_THERMAL_POLICY_EVENT ;
typedef struct {BYTE Mode ;DWORD64 Processors ;}*PPPM_THERMAL_POLICY_EVENT ;

extern const GUID PPM_PERFSTATE_CHANGE_GUID ;
extern const GUID PPM_PERFSTATE_DOMAIN_CHANGE_GUID ;
extern const GUID PPM_IDLESTATE_CHANGE_GUID ;
extern const GUID PPM_PERFSTATES_DATA_GUID ;
extern const GUID PPM_IDLESTATES_DATA_GUID ;
extern const GUID PPM_IDLE_ACCOUNTING_GUID ;
extern const GUID PPM_IDLE_ACCOUNTING_EX_GUID ;
extern const GUID PPM_THERMALCONSTRAINT_GUID ;
extern const GUID PPM_PERFMON_PERFSTATE_GUID ;
extern const GUID PPM_THERMAL_POLICY_CHANGE_GUID ;
typedef struct {POWER_ACTION Action ;DWORD Flags ;DWORD EventCode ;}POWER_ACTION_POLICY ;
typedef struct {POWER_ACTION Action ;DWORD Flags ;DWORD EventCode ;}*PPOWER_ACTION_POLICY ;

typedef struct {DWORD TimeCheck ;BYTE DemotePercent ;BYTE PromotePercent ;BYTE Spare [2 ];}PROCESSOR_IDLESTATE_INFO ;
typedef struct {DWORD TimeCheck ;BYTE DemotePercent ;BYTE PromotePercent ;BYTE Spare [2 ];}*PPROCESSOR_IDLESTATE_INFO ;

typedef struct {BOOLEAN Enable ;BYTE Spare [3 ];DWORD BatteryLevel ;POWER_ACTION_POLICY PowerPolicy ;SYSTEM_POWER_STATE MinSystemState ;}SYSTEM_POWER_LEVEL ;
typedef struct {BOOLEAN Enable ;BYTE Spare [3 ];DWORD BatteryLevel ;POWER_ACTION_POLICY PowerPolicy ;SYSTEM_POWER_STATE MinSystemState ;}*PSYSTEM_POWER_LEVEL ;

typedef struct _SYSTEM_POWER_POLICY {DWORD Revision ;POWER_ACTION_POLICY PowerButton ;POWER_ACTION_POLICY SleepButton ;POWER_ACTION_POLICY LidClose ;SYSTEM_POWER_STATE LidOpenWake ;DWORD Reserved ;POWER_ACTION_POLICY Idle ;DWORD IdleTimeout ;BYTE IdleSensitivity ;BYTE DynamicThrottle ;BYTE Spare2 [2 ];SYSTEM_POWER_STATE MinSleep ;SYSTEM_POWER_STATE MaxSleep ;SYSTEM_POWER_STATE ReducedLatencySleep ;DWORD WinLogonFlags ;DWORD Spare3 ;DWORD DozeS4Timeout ;DWORD BroadcastCapacityResolution ;SYSTEM_POWER_LEVEL DischargePolicy [4 ];DWORD VideoTimeout ;BOOLEAN VideoDimDisplay ;DWORD VideoReserved [3 ];DWORD SpindownTimeout ;BOOLEAN OptimizeForPower ;BYTE FanThrottleTolerance ;BYTE ForcedThrottle ;BYTE MinThrottle ;POWER_ACTION_POLICY OverThrottled ;}SYSTEM_POWER_POLICY ;
typedef struct _SYSTEM_POWER_POLICY {DWORD Revision ;POWER_ACTION_POLICY PowerButton ;POWER_ACTION_POLICY SleepButton ;POWER_ACTION_POLICY LidClose ;SYSTEM_POWER_STATE LidOpenWake ;DWORD Reserved ;POWER_ACTION_POLICY Idle ;DWORD IdleTimeout ;BYTE IdleSensitivity ;BYTE DynamicThrottle ;BYTE Spare2 [2 ];SYSTEM_POWER_STATE MinSleep ;SYSTEM_POWER_STATE MaxSleep ;SYSTEM_POWER_STATE ReducedLatencySleep ;DWORD WinLogonFlags ;DWORD Spare3 ;DWORD DozeS4Timeout ;DWORD BroadcastCapacityResolution ;SYSTEM_POWER_LEVEL DischargePolicy [4 ];DWORD VideoTimeout ;BOOLEAN VideoDimDisplay ;DWORD VideoReserved [3 ];DWORD SpindownTimeout ;BOOLEAN OptimizeForPower ;BYTE FanThrottleTolerance ;BYTE ForcedThrottle ;BYTE MinThrottle ;POWER_ACTION_POLICY OverThrottled ;}*PSYSTEM_POWER_POLICY ;

typedef struct {WORD Revision ;union {WORD AsWORD ;struct {WORD AllowScaling :1 ;WORD Disabled :1 ;WORD Reserved :14 ;};}Flags ;DWORD PolicyCount ;PROCESSOR_IDLESTATE_INFO Policy [3 ];}PROCESSOR_IDLESTATE_POLICY ;
typedef struct {WORD Revision ;union {WORD AsWORD ;struct {WORD AllowScaling :1 ;WORD Disabled :1 ;WORD Reserved :14 ;};}Flags ;DWORD PolicyCount ;PROCESSOR_IDLESTATE_INFO Policy [3 ];}*PPROCESSOR_IDLESTATE_POLICY ;

typedef struct _PROCESSOR_POWER_POLICY_INFO {DWORD TimeCheck ;DWORD DemoteLimit ;DWORD PromoteLimit ;BYTE DemotePercent ;BYTE PromotePercent ;BYTE Spare [2 ];DWORD AllowDemotion :1 ;DWORD AllowPromotion :1 ;DWORD Reserved :30 ;}PROCESSOR_POWER_POLICY_INFO ;
typedef struct _PROCESSOR_POWER_POLICY_INFO {DWORD TimeCheck ;DWORD DemoteLimit ;DWORD PromoteLimit ;BYTE DemotePercent ;BYTE PromotePercent ;BYTE Spare [2 ];DWORD AllowDemotion :1 ;DWORD AllowPromotion :1 ;DWORD Reserved :30 ;}*PPROCESSOR_POWER_POLICY_INFO ;

typedef struct _PROCESSOR_POWER_POLICY {DWORD Revision ;BYTE DynamicThrottle ;BYTE Spare [3 ];DWORD DisableCStates :1 ;DWORD Reserved :31 ;DWORD PolicyCount ;PROCESSOR_POWER_POLICY_INFO Policy [3 ];}PROCESSOR_POWER_POLICY ;
typedef struct _PROCESSOR_POWER_POLICY {DWORD Revision ;BYTE DynamicThrottle ;BYTE Spare [3 ];DWORD DisableCStates :1 ;DWORD Reserved :31 ;DWORD PolicyCount ;PROCESSOR_POWER_POLICY_INFO Policy [3 ];}*PPROCESSOR_POWER_POLICY ;

typedef struct {DWORD Revision ;BYTE MaxThrottle ;BYTE MinThrottle ;BYTE BusyAdjThreshold ;union {BYTE Spare ;union {BYTE AsBYTE ;struct {BYTE NoDomainAccounting :1 ;BYTE IncreasePolicy :2 ;BYTE DecreasePolicy :2 ;BYTE Reserved :3 ;};}Flags ;};DWORD TimeCheck ;DWORD IncreaseTime ;DWORD DecreaseTime ;DWORD IncreasePercent ;DWORD DecreasePercent ;}PROCESSOR_PERFSTATE_POLICY ;
typedef struct {DWORD Revision ;BYTE MaxThrottle ;BYTE MinThrottle ;BYTE BusyAdjThreshold ;union {BYTE Spare ;union {BYTE AsBYTE ;struct {BYTE NoDomainAccounting :1 ;BYTE IncreasePolicy :2 ;BYTE DecreasePolicy :2 ;BYTE Reserved :3 ;};}Flags ;};DWORD TimeCheck ;DWORD IncreaseTime ;DWORD DecreaseTime ;DWORD IncreasePercent ;DWORD DecreasePercent ;}*PPROCESSOR_PERFSTATE_POLICY ;

typedef struct _ADMINISTRATOR_POWER_POLICY {SYSTEM_POWER_STATE MinSleep ;SYSTEM_POWER_STATE MaxSleep ;DWORD MinVideoTimeout ;DWORD MaxVideoTimeout ;DWORD MinSpindownTimeout ;DWORD MaxSpindownTimeout ;}ADMINISTRATOR_POWER_POLICY ;
typedef struct _ADMINISTRATOR_POWER_POLICY {SYSTEM_POWER_STATE MinSleep ;SYSTEM_POWER_STATE MaxSleep ;DWORD MinVideoTimeout ;DWORD MaxVideoTimeout ;DWORD MinSpindownTimeout ;DWORD MaxSpindownTimeout ;}*PADMINISTRATOR_POWER_POLICY ;

typedef struct {BOOLEAN PowerButtonPresent ;BOOLEAN SleepButtonPresent ;BOOLEAN LidPresent ;BOOLEAN SystemS1 ;BOOLEAN SystemS2 ;BOOLEAN SystemS3 ;BOOLEAN SystemS4 ;BOOLEAN SystemS5 ;BOOLEAN HiberFilePresent ;BOOLEAN FullWake ;BOOLEAN VideoDimPresent ;BOOLEAN ApmPresent ;BOOLEAN UpsPresent ;BOOLEAN ThermalControl ;BOOLEAN ProcessorThrottle ;BYTE ProcessorMinThrottle ;BYTE ProcessorMaxThrottle ;BOOLEAN FastSystemS4 ;BYTE spare2 [3 ];BOOLEAN DiskSpinDown ;BYTE spare3 [8 ];BOOLEAN SystemBatteriesPresent ;BOOLEAN BatteriesAreShortTerm ;BATTERY_REPORTING_SCALE BatteryScale [3 ];SYSTEM_POWER_STATE AcOnLineWake ;SYSTEM_POWER_STATE SoftLidWake ;SYSTEM_POWER_STATE RtcWake ;SYSTEM_POWER_STATE MinDeviceWakeState ;SYSTEM_POWER_STATE DefaultLowLatencyWake ;}SYSTEM_POWER_CAPABILITIES ;
typedef struct {BOOLEAN PowerButtonPresent ;BOOLEAN SleepButtonPresent ;BOOLEAN LidPresent ;BOOLEAN SystemS1 ;BOOLEAN SystemS2 ;BOOLEAN SystemS3 ;BOOLEAN SystemS4 ;BOOLEAN SystemS5 ;BOOLEAN HiberFilePresent ;BOOLEAN FullWake ;BOOLEAN VideoDimPresent ;BOOLEAN ApmPresent ;BOOLEAN UpsPresent ;BOOLEAN ThermalControl ;BOOLEAN ProcessorThrottle ;BYTE ProcessorMinThrottle ;BYTE ProcessorMaxThrottle ;BOOLEAN FastSystemS4 ;BYTE spare2 [3 ];BOOLEAN DiskSpinDown ;BYTE spare3 [8 ];BOOLEAN SystemBatteriesPresent ;BOOLEAN BatteriesAreShortTerm ;BATTERY_REPORTING_SCALE BatteryScale [3 ];SYSTEM_POWER_STATE AcOnLineWake ;SYSTEM_POWER_STATE SoftLidWake ;SYSTEM_POWER_STATE RtcWake ;SYSTEM_POWER_STATE MinDeviceWakeState ;SYSTEM_POWER_STATE DefaultLowLatencyWake ;}*PSYSTEM_POWER_CAPABILITIES ;

typedef struct {BOOLEAN AcOnLine ;BOOLEAN BatteryPresent ;BOOLEAN Charging ;BOOLEAN Discharging ;BOOLEAN Spare1 [4 ];DWORD MaxCapacity ;DWORD RemainingCapacity ;DWORD Rate ;DWORD EstimatedTime ;DWORD DefaultAlert1 ;DWORD DefaultAlert2 ;}SYSTEM_BATTERY_STATE ;
typedef struct {BOOLEAN AcOnLine ;BOOLEAN BatteryPresent ;BOOLEAN Charging ;BOOLEAN Discharging ;BOOLEAN Spare1 [4 ];DWORD MaxCapacity ;DWORD RemainingCapacity ;DWORD Rate ;DWORD EstimatedTime ;DWORD DefaultAlert1 ;DWORD DefaultAlert2 ;}*PSYSTEM_BATTERY_STATE ;

typedef struct _IMAGE_DOS_HEADER {WORD e_magic ;WORD e_cblp ;WORD e_cp ;WORD e_crlc ;WORD e_cparhdr ;WORD e_minalloc ;WORD e_maxalloc ;WORD e_ss ;WORD e_sp ;WORD e_csum ;WORD e_ip ;WORD e_cs ;WORD e_lfarlc ;WORD e_ovno ;WORD e_res [4 ];WORD e_oemid ;WORD e_oeminfo ;WORD e_res2 [10 ];LONG e_lfanew ;}IMAGE_DOS_HEADER ;
typedef struct _IMAGE_DOS_HEADER {WORD e_magic ;WORD e_cblp ;WORD e_cp ;WORD e_crlc ;WORD e_cparhdr ;WORD e_minalloc ;WORD e_maxalloc ;WORD e_ss ;WORD e_sp ;WORD e_csum ;WORD e_ip ;WORD e_cs ;WORD e_lfarlc ;WORD e_ovno ;WORD e_res [4 ];WORD e_oemid ;WORD e_oeminfo ;WORD e_res2 [10 ];LONG e_lfanew ;}*PIMAGE_DOS_HEADER ;

typedef struct _IMAGE_OS2_HEADER {WORD ne_magic ;CHAR ne_ver ;CHAR ne_rev ;WORD ne_enttab ;WORD ne_cbenttab ;LONG ne_crc ;WORD ne_flags ;WORD ne_autodata ;WORD ne_heap ;WORD ne_stack ;LONG ne_csip ;LONG ne_sssp ;WORD ne_cseg ;WORD ne_cmod ;WORD ne_cbnrestab ;WORD ne_segtab ;WORD ne_rsrctab ;WORD ne_restab ;WORD ne_modtab ;WORD ne_imptab ;LONG ne_nrestab ;WORD ne_cmovent ;WORD ne_align ;WORD ne_cres ;BYTE ne_exetyp ;BYTE ne_flagsothers ;WORD ne_pretthunks ;WORD ne_psegrefbytes ;WORD ne_swaparea ;WORD ne_expver ;}IMAGE_OS2_HEADER ;
typedef struct _IMAGE_OS2_HEADER {WORD ne_magic ;CHAR ne_ver ;CHAR ne_rev ;WORD ne_enttab ;WORD ne_cbenttab ;LONG ne_crc ;WORD ne_flags ;WORD ne_autodata ;WORD ne_heap ;WORD ne_stack ;LONG ne_csip ;LONG ne_sssp ;WORD ne_cseg ;WORD ne_cmod ;WORD ne_cbnrestab ;WORD ne_segtab ;WORD ne_rsrctab ;WORD ne_restab ;WORD ne_modtab ;WORD ne_imptab ;LONG ne_nrestab ;WORD ne_cmovent ;WORD ne_align ;WORD ne_cres ;BYTE ne_exetyp ;BYTE ne_flagsothers ;WORD ne_pretthunks ;WORD ne_psegrefbytes ;WORD ne_swaparea ;WORD ne_expver ;}*PIMAGE_OS2_HEADER ;

typedef struct _IMAGE_VXD_HEADER {WORD e32_magic ;BYTE e32_border ;BYTE e32_worder ;DWORD e32_level ;WORD e32_cpu ;WORD e32_os ;DWORD e32_ver ;DWORD e32_mflags ;DWORD e32_mpages ;DWORD e32_startobj ;DWORD e32_eip ;DWORD e32_stackobj ;DWORD e32_esp ;DWORD e32_pagesize ;DWORD e32_lastpagesize ;DWORD e32_fixupsize ;DWORD e32_fixupsum ;DWORD e32_ldrsize ;DWORD e32_ldrsum ;DWORD e32_objtab ;DWORD e32_objcnt ;DWORD e32_objmap ;DWORD e32_itermap ;DWORD e32_rsrctab ;DWORD e32_rsrccnt ;DWORD e32_restab ;DWORD e32_enttab ;DWORD e32_dirtab ;DWORD e32_dircnt ;DWORD e32_fpagetab ;DWORD e32_frectab ;DWORD e32_impmod ;DWORD e32_impmodcnt ;DWORD e32_impproc ;DWORD e32_pagesum ;DWORD e32_datapage ;DWORD e32_preload ;DWORD e32_nrestab ;DWORD e32_cbnrestab ;DWORD e32_nressum ;DWORD e32_autodata ;DWORD e32_debuginfo ;DWORD e32_debuglen ;DWORD e32_instpreload ;DWORD e32_instdemand ;DWORD e32_heapsize ;BYTE e32_res3 [12 ];DWORD e32_winresoff ;DWORD e32_winreslen ;WORD e32_devid ;WORD e32_ddkver ;}IMAGE_VXD_HEADER ;
typedef struct _IMAGE_VXD_HEADER {WORD e32_magic ;BYTE e32_border ;BYTE e32_worder ;DWORD e32_level ;WORD e32_cpu ;WORD e32_os ;DWORD e32_ver ;DWORD e32_mflags ;DWORD e32_mpages ;DWORD e32_startobj ;DWORD e32_eip ;DWORD e32_stackobj ;DWORD e32_esp ;DWORD e32_pagesize ;DWORD e32_lastpagesize ;DWORD e32_fixupsize ;DWORD e32_fixupsum ;DWORD e32_ldrsize ;DWORD e32_ldrsum ;DWORD e32_objtab ;DWORD e32_objcnt ;DWORD e32_objmap ;DWORD e32_itermap ;DWORD e32_rsrctab ;DWORD e32_rsrccnt ;DWORD e32_restab ;DWORD e32_enttab ;DWORD e32_dirtab ;DWORD e32_dircnt ;DWORD e32_fpagetab ;DWORD e32_frectab ;DWORD e32_impmod ;DWORD e32_impmodcnt ;DWORD e32_impproc ;DWORD e32_pagesum ;DWORD e32_datapage ;DWORD e32_preload ;DWORD e32_nrestab ;DWORD e32_cbnrestab ;DWORD e32_nressum ;DWORD e32_autodata ;DWORD e32_debuginfo ;DWORD e32_debuglen ;DWORD e32_instpreload ;DWORD e32_instdemand ;DWORD e32_heapsize ;BYTE e32_res3 [12 ];DWORD e32_winresoff ;DWORD e32_winreslen ;WORD e32_devid ;WORD e32_ddkver ;}*PIMAGE_VXD_HEADER ;

typedef struct _IMAGE_FILE_HEADER {WORD Machine ;WORD NumberOfSections ;DWORD TimeDateStamp ;DWORD PointerToSymbolTable ;DWORD NumberOfSymbols ;WORD SizeOfOptionalHeader ;WORD Characteristics ;}IMAGE_FILE_HEADER ;
typedef struct _IMAGE_FILE_HEADER {WORD Machine ;WORD NumberOfSections ;DWORD TimeDateStamp ;DWORD PointerToSymbolTable ;DWORD NumberOfSymbols ;WORD SizeOfOptionalHeader ;WORD Characteristics ;}*PIMAGE_FILE_HEADER ;

typedef struct _IMAGE_DATA_DIRECTORY {DWORD VirtualAddress ;DWORD Size ;}IMAGE_DATA_DIRECTORY ;
typedef struct _IMAGE_DATA_DIRECTORY {DWORD VirtualAddress ;DWORD Size ;}*PIMAGE_DATA_DIRECTORY ;

typedef struct _IMAGE_OPTIONAL_HEADER {WORD Magic ;BYTE MajorLinkerVersion ;BYTE MinorLinkerVersion ;DWORD SizeOfCode ;DWORD SizeOfInitializedData ;DWORD SizeOfUninitializedData ;DWORD AddressOfEntryPoint ;DWORD BaseOfCode ;DWORD BaseOfData ;DWORD ImageBase ;DWORD SectionAlignment ;DWORD FileAlignment ;WORD MajorOperatingSystemVersion ;WORD MinorOperatingSystemVersion ;WORD MajorImageVersion ;WORD MinorImageVersion ;WORD MajorSubsystemVersion ;WORD MinorSubsystemVersion ;DWORD Win32VersionValue ;DWORD SizeOfImage ;DWORD SizeOfHeaders ;DWORD CheckSum ;WORD Subsystem ;WORD DllCharacteristics ;DWORD SizeOfStackReserve ;DWORD SizeOfStackCommit ;DWORD SizeOfHeapReserve ;DWORD SizeOfHeapCommit ;DWORD LoaderFlags ;DWORD NumberOfRvaAndSizes ;IMAGE_DATA_DIRECTORY DataDirectory [16 ];}IMAGE_OPTIONAL_HEADER32 ;
typedef struct _IMAGE_OPTIONAL_HEADER {WORD Magic ;BYTE MajorLinkerVersion ;BYTE MinorLinkerVersion ;DWORD SizeOfCode ;DWORD SizeOfInitializedData ;DWORD SizeOfUninitializedData ;DWORD AddressOfEntryPoint ;DWORD BaseOfCode ;DWORD BaseOfData ;DWORD ImageBase ;DWORD SectionAlignment ;DWORD FileAlignment ;WORD MajorOperatingSystemVersion ;WORD MinorOperatingSystemVersion ;WORD MajorImageVersion ;WORD MinorImageVersion ;WORD MajorSubsystemVersion ;WORD MinorSubsystemVersion ;DWORD Win32VersionValue ;DWORD SizeOfImage ;DWORD SizeOfHeaders ;DWORD CheckSum ;WORD Subsystem ;WORD DllCharacteristics ;DWORD SizeOfStackReserve ;DWORD SizeOfStackCommit ;DWORD SizeOfHeapReserve ;DWORD SizeOfHeapCommit ;DWORD LoaderFlags ;DWORD NumberOfRvaAndSizes ;IMAGE_DATA_DIRECTORY DataDirectory [16 ];}*PIMAGE_OPTIONAL_HEADER32 ;

typedef struct _IMAGE_ROM_OPTIONAL_HEADER {WORD Magic ;BYTE MajorLinkerVersion ;BYTE MinorLinkerVersion ;DWORD SizeOfCode ;DWORD SizeOfInitializedData ;DWORD SizeOfUninitializedData ;DWORD AddressOfEntryPoint ;DWORD BaseOfCode ;DWORD BaseOfData ;DWORD BaseOfBss ;DWORD GprMask ;DWORD CprMask [4 ];DWORD GpValue ;}IMAGE_ROM_OPTIONAL_HEADER ;
typedef struct _IMAGE_ROM_OPTIONAL_HEADER {WORD Magic ;BYTE MajorLinkerVersion ;BYTE MinorLinkerVersion ;DWORD SizeOfCode ;DWORD SizeOfInitializedData ;DWORD SizeOfUninitializedData ;DWORD AddressOfEntryPoint ;DWORD BaseOfCode ;DWORD BaseOfData ;DWORD BaseOfBss ;DWORD GprMask ;DWORD CprMask [4 ];DWORD GpValue ;}*PIMAGE_ROM_OPTIONAL_HEADER ;

typedef struct _IMAGE_OPTIONAL_HEADER64 {WORD Magic ;BYTE MajorLinkerVersion ;BYTE MinorLinkerVersion ;DWORD SizeOfCode ;DWORD SizeOfInitializedData ;DWORD SizeOfUninitializedData ;DWORD AddressOfEntryPoint ;DWORD BaseOfCode ;ULONGLONG ImageBase ;DWORD SectionAlignment ;DWORD FileAlignment ;WORD MajorOperatingSystemVersion ;WORD MinorOperatingSystemVersion ;WORD MajorImageVersion ;WORD MinorImageVersion ;WORD MajorSubsystemVersion ;WORD MinorSubsystemVersion ;DWORD Win32VersionValue ;DWORD SizeOfImage ;DWORD SizeOfHeaders ;DWORD CheckSum ;WORD Subsystem ;WORD DllCharacteristics ;ULONGLONG SizeOfStackReserve ;ULONGLONG SizeOfStackCommit ;ULONGLONG SizeOfHeapReserve ;ULONGLONG SizeOfHeapCommit ;DWORD LoaderFlags ;DWORD NumberOfRvaAndSizes ;IMAGE_DATA_DIRECTORY DataDirectory [16 ];}IMAGE_OPTIONAL_HEADER64 ;
typedef struct _IMAGE_OPTIONAL_HEADER64 {WORD Magic ;BYTE MajorLinkerVersion ;BYTE MinorLinkerVersion ;DWORD SizeOfCode ;DWORD SizeOfInitializedData ;DWORD SizeOfUninitializedData ;DWORD AddressOfEntryPoint ;DWORD BaseOfCode ;ULONGLONG ImageBase ;DWORD SectionAlignment ;DWORD FileAlignment ;WORD MajorOperatingSystemVersion ;WORD MinorOperatingSystemVersion ;WORD MajorImageVersion ;WORD MinorImageVersion ;WORD MajorSubsystemVersion ;WORD MinorSubsystemVersion ;DWORD Win32VersionValue ;DWORD SizeOfImage ;DWORD SizeOfHeaders ;DWORD CheckSum ;WORD Subsystem ;WORD DllCharacteristics ;ULONGLONG SizeOfStackReserve ;ULONGLONG SizeOfStackCommit ;ULONGLONG SizeOfHeapReserve ;ULONGLONG SizeOfHeapCommit ;DWORD LoaderFlags ;DWORD NumberOfRvaAndSizes ;IMAGE_DATA_DIRECTORY DataDirectory [16 ];}*PIMAGE_OPTIONAL_HEADER64 ;

typedef IMAGE_OPTIONAL_HEADER64 IMAGE_OPTIONAL_HEADER ;
typedef PIMAGE_OPTIONAL_HEADER64 PIMAGE_OPTIONAL_HEADER ;
typedef struct _IMAGE_NT_HEADERS64 {DWORD Signature ;IMAGE_FILE_HEADER FileHeader ;IMAGE_OPTIONAL_HEADER64 OptionalHeader ;}IMAGE_NT_HEADERS64 ;
typedef struct _IMAGE_NT_HEADERS64 {DWORD Signature ;IMAGE_FILE_HEADER FileHeader ;IMAGE_OPTIONAL_HEADER64 OptionalHeader ;}*PIMAGE_NT_HEADERS64 ;

typedef struct _IMAGE_NT_HEADERS {DWORD Signature ;IMAGE_FILE_HEADER FileHeader ;IMAGE_OPTIONAL_HEADER32 OptionalHeader ;}IMAGE_NT_HEADERS32 ;
typedef struct _IMAGE_NT_HEADERS {DWORD Signature ;IMAGE_FILE_HEADER FileHeader ;IMAGE_OPTIONAL_HEADER32 OptionalHeader ;}*PIMAGE_NT_HEADERS32 ;

typedef struct _IMAGE_ROM_HEADERS {IMAGE_FILE_HEADER FileHeader ;IMAGE_ROM_OPTIONAL_HEADER OptionalHeader ;}IMAGE_ROM_HEADERS ;
typedef struct _IMAGE_ROM_HEADERS {IMAGE_FILE_HEADER FileHeader ;IMAGE_ROM_OPTIONAL_HEADER OptionalHeader ;}*PIMAGE_ROM_HEADERS ;

typedef IMAGE_NT_HEADERS64 IMAGE_NT_HEADERS ;
typedef PIMAGE_NT_HEADERS64 PIMAGE_NT_HEADERS ;
typedef struct ANON_OBJECT_HEADER {WORD Sig1 ;WORD Sig2 ;WORD Version ;WORD Machine ;DWORD TimeDateStamp ;CLSID ClassID ;DWORD SizeOfData ;}ANON_OBJECT_HEADER ;
typedef struct ANON_OBJECT_HEADER_V2 {WORD Sig1 ;WORD Sig2 ;WORD Version ;WORD Machine ;DWORD TimeDateStamp ;CLSID ClassID ;DWORD SizeOfData ;DWORD Flags ;DWORD MetaDataSize ;DWORD MetaDataOffset ;}ANON_OBJECT_HEADER_V2 ;
typedef struct ANON_OBJECT_HEADER_BIGOBJ {WORD Sig1 ;WORD Sig2 ;WORD Version ;WORD Machine ;DWORD TimeDateStamp ;CLSID ClassID ;DWORD SizeOfData ;DWORD Flags ;DWORD MetaDataSize ;DWORD MetaDataOffset ;DWORD NumberOfSections ;DWORD PointerToSymbolTable ;DWORD NumberOfSymbols ;}ANON_OBJECT_HEADER_BIGOBJ ;
typedef struct _IMAGE_SECTION_HEADER {BYTE Name [8 ];union {DWORD PhysicalAddress ;DWORD VirtualSize ;}Misc ;DWORD VirtualAddress ;DWORD SizeOfRawData ;DWORD PointerToRawData ;DWORD PointerToRelocations ;DWORD PointerToLinenumbers ;WORD NumberOfRelocations ;WORD NumberOfLinenumbers ;DWORD Characteristics ;}IMAGE_SECTION_HEADER ;
typedef struct _IMAGE_SECTION_HEADER {BYTE Name [8 ];union {DWORD PhysicalAddress ;DWORD VirtualSize ;}Misc ;DWORD VirtualAddress ;DWORD SizeOfRawData ;DWORD PointerToRawData ;DWORD PointerToRelocations ;DWORD PointerToLinenumbers ;WORD NumberOfRelocations ;WORD NumberOfLinenumbers ;DWORD Characteristics ;}*PIMAGE_SECTION_HEADER ;

typedef struct _IMAGE_SYMBOL {union {BYTE ShortName [8 ];struct {DWORD Short ;DWORD Long ;}Name ;DWORD LongName [2 ];}N ;DWORD Value ;SHORT SectionNumber ;WORD Type ;BYTE StorageClass ;BYTE NumberOfAuxSymbols ;}IMAGE_SYMBOL ;
typedef IMAGE_SYMBOL *PIMAGE_SYMBOL ;
typedef struct _IMAGE_SYMBOL_EX {union {BYTE ShortName [8 ];struct {DWORD Short ;DWORD Long ;}Name ;DWORD LongName [2 ];}N ;DWORD Value ;LONG SectionNumber ;WORD Type ;BYTE StorageClass ;BYTE NumberOfAuxSymbols ;}IMAGE_SYMBOL_EX ;
typedef struct _IMAGE_SYMBOL_EX {union {BYTE ShortName [8 ];struct {DWORD Short ;DWORD Long ;}Name ;DWORD LongName [2 ];}N ;DWORD Value ;LONG SectionNumber ;WORD Type ;BYTE StorageClass ;BYTE NumberOfAuxSymbols ;}*PIMAGE_SYMBOL_EX ;

typedef struct IMAGE_AUX_SYMBOL_TOKEN_DEF {BYTE bAuxType ;BYTE bReserved ;DWORD SymbolTableIndex ;BYTE rgbReserved [12 ];}IMAGE_AUX_SYMBOL_TOKEN_DEF ;
typedef struct IMAGE_AUX_SYMBOL_TOKEN_DEF {BYTE bAuxType ;BYTE bReserved ;DWORD SymbolTableIndex ;BYTE rgbReserved [12 ];}*PIMAGE_AUX_SYMBOL_TOKEN_DEF ;

typedef union _IMAGE_AUX_SYMBOL {struct {DWORD TagIndex ;union {struct {WORD Linenumber ;WORD Size ;}LnSz ;DWORD TotalSize ;}Misc ;union {struct {DWORD PointerToLinenumber ;DWORD PointerToNextFunction ;}Function ;struct {WORD Dimension [4 ];}Array ;}FcnAry ;WORD TvIndex ;}Sym ;struct {BYTE Name [18 ];}File ;struct {DWORD Length ;WORD NumberOfRelocations ;WORD NumberOfLinenumbers ;DWORD CheckSum ;SHORT Number ;BYTE Selection ;}Section ;IMAGE_AUX_SYMBOL_TOKEN_DEF TokenDef ;struct {DWORD crc ;BYTE rgbReserved [14 ];}CRC ;}IMAGE_AUX_SYMBOL ;
typedef union _IMAGE_AUX_SYMBOL {struct {DWORD TagIndex ;union {struct {WORD Linenumber ;WORD Size ;}LnSz ;DWORD TotalSize ;}Misc ;union {struct {DWORD PointerToLinenumber ;DWORD PointerToNextFunction ;}Function ;struct {WORD Dimension [4 ];}Array ;}FcnAry ;WORD TvIndex ;}Sym ;struct {BYTE Name [18 ];}File ;struct {DWORD Length ;WORD NumberOfRelocations ;WORD NumberOfLinenumbers ;DWORD CheckSum ;SHORT Number ;BYTE Selection ;}Section ;IMAGE_AUX_SYMBOL_TOKEN_DEF TokenDef ;struct {DWORD crc ;BYTE rgbReserved [14 ];}CRC ;}*PIMAGE_AUX_SYMBOL ;

typedef union _IMAGE_AUX_SYMBOL_EX {struct {DWORD WeakDefaultSymIndex ;DWORD WeakSearchType ;BYTE rgbReserved [12 ];}Sym ;struct {BYTE Name [20ull];}File ;struct {DWORD Length ;WORD NumberOfRelocations ;WORD NumberOfLinenumbers ;DWORD CheckSum ;SHORT Number ;BYTE Selection ;BYTE bReserved ;SHORT HighNumber ;BYTE rgbReserved [2 ];}Section ;struct {IMAGE_AUX_SYMBOL_TOKEN_DEF TokenDef ;BYTE rgbReserved [2 ];};struct {DWORD crc ;BYTE rgbReserved [16 ];}CRC ;}IMAGE_AUX_SYMBOL_EX ;
typedef union _IMAGE_AUX_SYMBOL_EX {struct {DWORD WeakDefaultSymIndex ;DWORD WeakSearchType ;BYTE rgbReserved [12 ];}Sym ;struct {BYTE Name [20ull];}File ;struct {DWORD Length ;WORD NumberOfRelocations ;WORD NumberOfLinenumbers ;DWORD CheckSum ;SHORT Number ;BYTE Selection ;BYTE bReserved ;SHORT HighNumber ;BYTE rgbReserved [2 ];}Section ;struct {IMAGE_AUX_SYMBOL_TOKEN_DEF TokenDef ;BYTE rgbReserved [2 ];};struct {DWORD crc ;BYTE rgbReserved [16 ];}CRC ;}*PIMAGE_AUX_SYMBOL_EX ;

typedef enum IMAGE_AUX_SYMBOL_TYPE {IMAGE_AUX_SYMBOL_TYPE_TOKEN_DEF =1 }IMAGE_AUX_SYMBOL_TYPE ;
typedef struct _IMAGE_RELOCATION {union {DWORD VirtualAddress ;DWORD RelocCount ;};DWORD SymbolTableIndex ;WORD Type ;}IMAGE_RELOCATION ;
typedef IMAGE_RELOCATION *PIMAGE_RELOCATION ;
typedef struct _IMAGE_LINENUMBER {union {DWORD SymbolTableIndex ;DWORD VirtualAddress ;}Type ;WORD Linenumber ;}IMAGE_LINENUMBER ;
typedef IMAGE_LINENUMBER *PIMAGE_LINENUMBER ;
typedef struct _IMAGE_BASE_RELOCATION {DWORD VirtualAddress ;DWORD SizeOfBlock ;}IMAGE_BASE_RELOCATION ;
typedef IMAGE_BASE_RELOCATION *PIMAGE_BASE_RELOCATION ;
typedef struct _IMAGE_ARCHIVE_MEMBER_HEADER {BYTE Name [16 ];BYTE Date [12 ];BYTE UserID [6 ];BYTE GroupID [6 ];BYTE Mode [8 ];BYTE Size [10 ];BYTE EndHeader [2 ];}IMAGE_ARCHIVE_MEMBER_HEADER ;
typedef struct _IMAGE_ARCHIVE_MEMBER_HEADER {BYTE Name [16 ];BYTE Date [12 ];BYTE UserID [6 ];BYTE GroupID [6 ];BYTE Mode [8 ];BYTE Size [10 ];BYTE EndHeader [2 ];}*PIMAGE_ARCHIVE_MEMBER_HEADER ;

typedef struct _IMAGE_EXPORT_DIRECTORY {DWORD Characteristics ;DWORD TimeDateStamp ;WORD MajorVersion ;WORD MinorVersion ;DWORD Name ;DWORD Base ;DWORD NumberOfFunctions ;DWORD NumberOfNames ;DWORD AddressOfFunctions ;DWORD AddressOfNames ;DWORD AddressOfNameOrdinals ;}IMAGE_EXPORT_DIRECTORY ;
typedef struct _IMAGE_EXPORT_DIRECTORY {DWORD Characteristics ;DWORD TimeDateStamp ;WORD MajorVersion ;WORD MinorVersion ;DWORD Name ;DWORD Base ;DWORD NumberOfFunctions ;DWORD NumberOfNames ;DWORD AddressOfFunctions ;DWORD AddressOfNames ;DWORD AddressOfNameOrdinals ;}*PIMAGE_EXPORT_DIRECTORY ;

typedef struct _IMAGE_IMPORT_BY_NAME {WORD Hint ;BYTE Name [1 ];}IMAGE_IMPORT_BY_NAME ;
typedef struct _IMAGE_IMPORT_BY_NAME {WORD Hint ;BYTE Name [1 ];}*PIMAGE_IMPORT_BY_NAME ;

typedef struct _IMAGE_THUNK_DATA64 {union {ULONGLONG ForwarderString ;ULONGLONG Function ;ULONGLONG Ordinal ;ULONGLONG AddressOfData ;}u1 ;}IMAGE_THUNK_DATA64 ;
typedef IMAGE_THUNK_DATA64 *PIMAGE_THUNK_DATA64 ;
typedef struct _IMAGE_THUNK_DATA32 {union {DWORD ForwarderString ;DWORD Function ;DWORD Ordinal ;DWORD AddressOfData ;}u1 ;}IMAGE_THUNK_DATA32 ;
typedef IMAGE_THUNK_DATA32 *PIMAGE_THUNK_DATA32 ;
typedef void (*PIMAGE_TLS_CALLBACK )(PVOID DllHandle ,DWORD Reason ,PVOID Reserved );
typedef struct _IMAGE_TLS_DIRECTORY64 {ULONGLONG StartAddressOfRawData ;ULONGLONG EndAddressOfRawData ;ULONGLONG AddressOfIndex ;ULONGLONG AddressOfCallBacks ;DWORD SizeOfZeroFill ;DWORD Characteristics ;}IMAGE_TLS_DIRECTORY64 ;
typedef IMAGE_TLS_DIRECTORY64 *PIMAGE_TLS_DIRECTORY64 ;
typedef struct _IMAGE_TLS_DIRECTORY32 {DWORD StartAddressOfRawData ;DWORD EndAddressOfRawData ;DWORD AddressOfIndex ;DWORD AddressOfCallBacks ;DWORD SizeOfZeroFill ;DWORD Characteristics ;}IMAGE_TLS_DIRECTORY32 ;
typedef IMAGE_TLS_DIRECTORY32 *PIMAGE_TLS_DIRECTORY32 ;
typedef IMAGE_THUNK_DATA64 IMAGE_THUNK_DATA ;
typedef PIMAGE_THUNK_DATA64 PIMAGE_THUNK_DATA ;
typedef IMAGE_TLS_DIRECTORY64 IMAGE_TLS_DIRECTORY ;
typedef PIMAGE_TLS_DIRECTORY64 PIMAGE_TLS_DIRECTORY ;
typedef struct _IMAGE_IMPORT_DESCRIPTOR {union {DWORD Characteristics ;DWORD OriginalFirstThunk ;};DWORD TimeDateStamp ;DWORD ForwarderChain ;DWORD Name ;DWORD FirstThunk ;}IMAGE_IMPORT_DESCRIPTOR ;
typedef IMAGE_IMPORT_DESCRIPTOR *PIMAGE_IMPORT_DESCRIPTOR ;
typedef struct _IMAGE_BOUND_IMPORT_DESCRIPTOR {DWORD TimeDateStamp ;WORD OffsetModuleName ;WORD NumberOfModuleForwarderRefs ;}IMAGE_BOUND_IMPORT_DESCRIPTOR ;
typedef struct _IMAGE_BOUND_IMPORT_DESCRIPTOR {DWORD TimeDateStamp ;WORD OffsetModuleName ;WORD NumberOfModuleForwarderRefs ;}*PIMAGE_BOUND_IMPORT_DESCRIPTOR ;

typedef struct _IMAGE_BOUND_FORWARDER_REF {DWORD TimeDateStamp ;WORD OffsetModuleName ;WORD Reserved ;}IMAGE_BOUND_FORWARDER_REF ;
typedef struct _IMAGE_BOUND_FORWARDER_REF {DWORD TimeDateStamp ;WORD OffsetModuleName ;WORD Reserved ;}*PIMAGE_BOUND_FORWARDER_REF ;

typedef struct _IMAGE_DELAYLOAD_DESCRIPTOR {union {DWORD AllAttributes ;struct {DWORD RvaBased :1 ;DWORD ReservedAttributes :31 ;};}Attributes ;DWORD DllNameRVA ;DWORD ModuleHandleRVA ;DWORD ImportAddressTableRVA ;DWORD ImportNameTableRVA ;DWORD BoundImportAddressTableRVA ;DWORD UnloadInformationTableRVA ;DWORD TimeDateStamp ;}IMAGE_DELAYLOAD_DESCRIPTOR ;
typedef struct _IMAGE_DELAYLOAD_DESCRIPTOR {union {DWORD AllAttributes ;struct {DWORD RvaBased :1 ;DWORD ReservedAttributes :31 ;};}Attributes ;DWORD DllNameRVA ;DWORD ModuleHandleRVA ;DWORD ImportAddressTableRVA ;DWORD ImportNameTableRVA ;DWORD BoundImportAddressTableRVA ;DWORD UnloadInformationTableRVA ;DWORD TimeDateStamp ;}*PIMAGE_DELAYLOAD_DESCRIPTOR ;

typedef const IMAGE_DELAYLOAD_DESCRIPTOR *PCIMAGE_DELAYLOAD_DESCRIPTOR ;
typedef struct _IMAGE_RESOURCE_DIRECTORY {DWORD Characteristics ;DWORD TimeDateStamp ;WORD MajorVersion ;WORD MinorVersion ;WORD NumberOfNamedEntries ;WORD NumberOfIdEntries ;}IMAGE_RESOURCE_DIRECTORY ;
typedef struct _IMAGE_RESOURCE_DIRECTORY {DWORD Characteristics ;DWORD TimeDateStamp ;WORD MajorVersion ;WORD MinorVersion ;WORD NumberOfNamedEntries ;WORD NumberOfIdEntries ;}*PIMAGE_RESOURCE_DIRECTORY ;

typedef struct _IMAGE_RESOURCE_DIRECTORY_ENTRY {union {struct {DWORD NameOffset :31 ;DWORD NameIsString :1 ;};DWORD Name ;WORD Id ;};union {DWORD OffsetToData ;struct {DWORD OffsetToDirectory :31 ;DWORD DataIsDirectory :1 ;};};}IMAGE_RESOURCE_DIRECTORY_ENTRY ;
typedef struct _IMAGE_RESOURCE_DIRECTORY_ENTRY {union {struct {DWORD NameOffset :31 ;DWORD NameIsString :1 ;};DWORD Name ;WORD Id ;};union {DWORD OffsetToData ;struct {DWORD OffsetToDirectory :31 ;DWORD DataIsDirectory :1 ;};};}*PIMAGE_RESOURCE_DIRECTORY_ENTRY ;

typedef struct _IMAGE_RESOURCE_DIRECTORY_STRING {WORD Length ;CHAR NameString [1 ];}IMAGE_RESOURCE_DIRECTORY_STRING ;
typedef struct _IMAGE_RESOURCE_DIRECTORY_STRING {WORD Length ;CHAR NameString [1 ];}*PIMAGE_RESOURCE_DIRECTORY_STRING ;

typedef struct _IMAGE_RESOURCE_DIR_STRING_U {WORD Length ;WCHAR NameString [1 ];}IMAGE_RESOURCE_DIR_STRING_U ;
typedef struct _IMAGE_RESOURCE_DIR_STRING_U {WORD Length ;WCHAR NameString [1 ];}*PIMAGE_RESOURCE_DIR_STRING_U ;

typedef struct _IMAGE_RESOURCE_DATA_ENTRY {DWORD OffsetToData ;DWORD Size ;DWORD CodePage ;DWORD Reserved ;}IMAGE_RESOURCE_DATA_ENTRY ;
typedef struct _IMAGE_RESOURCE_DATA_ENTRY {DWORD OffsetToData ;DWORD Size ;DWORD CodePage ;DWORD Reserved ;}*PIMAGE_RESOURCE_DATA_ENTRY ;

typedef struct {DWORD Size ;DWORD TimeDateStamp ;WORD MajorVersion ;WORD MinorVersion ;DWORD GlobalFlagsClear ;DWORD GlobalFlagsSet ;DWORD CriticalSectionDefaultTimeout ;DWORD DeCommitFreeBlockThreshold ;DWORD DeCommitTotalFreeThreshold ;DWORD LockPrefixTable ;DWORD MaximumAllocationSize ;DWORD VirtualMemoryThreshold ;DWORD ProcessHeapFlags ;DWORD ProcessAffinityMask ;WORD CSDVersion ;WORD Reserved1 ;DWORD EditList ;DWORD SecurityCookie ;DWORD SEHandlerTable ;DWORD SEHandlerCount ;}IMAGE_LOAD_CONFIG_DIRECTORY32 ;
typedef struct {DWORD Size ;DWORD TimeDateStamp ;WORD MajorVersion ;WORD MinorVersion ;DWORD GlobalFlagsClear ;DWORD GlobalFlagsSet ;DWORD CriticalSectionDefaultTimeout ;DWORD DeCommitFreeBlockThreshold ;DWORD DeCommitTotalFreeThreshold ;DWORD LockPrefixTable ;DWORD MaximumAllocationSize ;DWORD VirtualMemoryThreshold ;DWORD ProcessHeapFlags ;DWORD ProcessAffinityMask ;WORD CSDVersion ;WORD Reserved1 ;DWORD EditList ;DWORD SecurityCookie ;DWORD SEHandlerTable ;DWORD SEHandlerCount ;}*PIMAGE_LOAD_CONFIG_DIRECTORY32 ;

typedef struct {DWORD Size ;DWORD TimeDateStamp ;WORD MajorVersion ;WORD MinorVersion ;DWORD GlobalFlagsClear ;DWORD GlobalFlagsSet ;DWORD CriticalSectionDefaultTimeout ;ULONGLONG DeCommitFreeBlockThreshold ;ULONGLONG DeCommitTotalFreeThreshold ;ULONGLONG LockPrefixTable ;ULONGLONG MaximumAllocationSize ;ULONGLONG VirtualMemoryThreshold ;ULONGLONG ProcessAffinityMask ;DWORD ProcessHeapFlags ;WORD CSDVersion ;WORD Reserved1 ;ULONGLONG EditList ;ULONGLONG SecurityCookie ;ULONGLONG SEHandlerTable ;ULONGLONG SEHandlerCount ;}IMAGE_LOAD_CONFIG_DIRECTORY64 ;
typedef struct {DWORD Size ;DWORD TimeDateStamp ;WORD MajorVersion ;WORD MinorVersion ;DWORD GlobalFlagsClear ;DWORD GlobalFlagsSet ;DWORD CriticalSectionDefaultTimeout ;ULONGLONG DeCommitFreeBlockThreshold ;ULONGLONG DeCommitTotalFreeThreshold ;ULONGLONG LockPrefixTable ;ULONGLONG MaximumAllocationSize ;ULONGLONG VirtualMemoryThreshold ;ULONGLONG ProcessAffinityMask ;DWORD ProcessHeapFlags ;WORD CSDVersion ;WORD Reserved1 ;ULONGLONG EditList ;ULONGLONG SecurityCookie ;ULONGLONG SEHandlerTable ;ULONGLONG SEHandlerCount ;}*PIMAGE_LOAD_CONFIG_DIRECTORY64 ;

typedef IMAGE_LOAD_CONFIG_DIRECTORY64 IMAGE_LOAD_CONFIG_DIRECTORY ;
typedef PIMAGE_LOAD_CONFIG_DIRECTORY64 PIMAGE_LOAD_CONFIG_DIRECTORY ;
typedef struct _IMAGE_CE_RUNTIME_FUNCTION_ENTRY {DWORD FuncStart ;DWORD PrologLen :8 ;DWORD FuncLen :22 ;DWORD ThirtyTwoBit :1 ;DWORD ExceptionFlag :1 ;}IMAGE_CE_RUNTIME_FUNCTION_ENTRY ;
typedef struct _IMAGE_CE_RUNTIME_FUNCTION_ENTRY {DWORD FuncStart ;DWORD PrologLen :8 ;DWORD FuncLen :22 ;DWORD ThirtyTwoBit :1 ;DWORD ExceptionFlag :1 ;}*PIMAGE_CE_RUNTIME_FUNCTION_ENTRY ;

typedef struct _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY {ULONGLONG BeginAddress ;ULONGLONG EndAddress ;ULONGLONG ExceptionHandler ;ULONGLONG HandlerData ;ULONGLONG PrologEndAddress ;}IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY ;
typedef struct _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY {ULONGLONG BeginAddress ;ULONGLONG EndAddress ;ULONGLONG ExceptionHandler ;ULONGLONG HandlerData ;ULONGLONG PrologEndAddress ;}*PIMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY ;

typedef struct _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY {DWORD BeginAddress ;DWORD EndAddress ;DWORD ExceptionHandler ;DWORD HandlerData ;DWORD PrologEndAddress ;}IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY ;
typedef struct _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY {DWORD BeginAddress ;DWORD EndAddress ;DWORD ExceptionHandler ;DWORD HandlerData ;DWORD PrologEndAddress ;}*PIMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY ;

typedef struct _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY {DWORD BeginAddress ;union {DWORD UnwindData ;struct {DWORD Flag :2 ;DWORD FunctionLength :11 ;DWORD Ret :2 ;DWORD H :1 ;DWORD Reg :3 ;DWORD R :1 ;DWORD L :1 ;DWORD C :1 ;DWORD StackAdjust :10 ;};};}IMAGE_ARM_RUNTIME_FUNCTION_ENTRY ;
typedef struct _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY {DWORD BeginAddress ;union {DWORD UnwindData ;struct {DWORD Flag :2 ;DWORD FunctionLength :11 ;DWORD Ret :2 ;DWORD H :1 ;DWORD Reg :3 ;DWORD R :1 ;DWORD L :1 ;DWORD C :1 ;DWORD StackAdjust :10 ;};};}*PIMAGE_ARM_RUNTIME_FUNCTION_ENTRY ;

typedef struct _IMAGE_RUNTIME_FUNCTION_ENTRY {DWORD BeginAddress ;DWORD EndAddress ;union {DWORD UnwindInfoAddress ;DWORD UnwindData ;};}_IMAGE_RUNTIME_FUNCTION_ENTRY ;
typedef struct _IMAGE_RUNTIME_FUNCTION_ENTRY {DWORD BeginAddress ;DWORD EndAddress ;union {DWORD UnwindInfoAddress ;DWORD UnwindData ;};}*_PIMAGE_RUNTIME_FUNCTION_ENTRY ;

typedef _IMAGE_RUNTIME_FUNCTION_ENTRY IMAGE_IA64_RUNTIME_FUNCTION_ENTRY ;
typedef _PIMAGE_RUNTIME_FUNCTION_ENTRY PIMAGE_IA64_RUNTIME_FUNCTION_ENTRY ;
typedef _IMAGE_RUNTIME_FUNCTION_ENTRY IMAGE_RUNTIME_FUNCTION_ENTRY ;
typedef _PIMAGE_RUNTIME_FUNCTION_ENTRY PIMAGE_RUNTIME_FUNCTION_ENTRY ;
typedef struct _IMAGE_DEBUG_DIRECTORY {DWORD Characteristics ;DWORD TimeDateStamp ;WORD MajorVersion ;WORD MinorVersion ;DWORD Type ;DWORD SizeOfData ;DWORD AddressOfRawData ;DWORD PointerToRawData ;}IMAGE_DEBUG_DIRECTORY ;
typedef struct _IMAGE_DEBUG_DIRECTORY {DWORD Characteristics ;DWORD TimeDateStamp ;WORD MajorVersion ;WORD MinorVersion ;DWORD Type ;DWORD SizeOfData ;DWORD AddressOfRawData ;DWORD PointerToRawData ;}*PIMAGE_DEBUG_DIRECTORY ;

typedef struct _IMAGE_COFF_SYMBOLS_HEADER {DWORD NumberOfSymbols ;DWORD LvaToFirstSymbol ;DWORD NumberOfLinenumbers ;DWORD LvaToFirstLinenumber ;DWORD RvaToFirstByteOfCode ;DWORD RvaToLastByteOfCode ;DWORD RvaToFirstByteOfData ;DWORD RvaToLastByteOfData ;}IMAGE_COFF_SYMBOLS_HEADER ;
typedef struct _IMAGE_COFF_SYMBOLS_HEADER {DWORD NumberOfSymbols ;DWORD LvaToFirstSymbol ;DWORD NumberOfLinenumbers ;DWORD LvaToFirstLinenumber ;DWORD RvaToFirstByteOfCode ;DWORD RvaToLastByteOfCode ;DWORD RvaToFirstByteOfData ;DWORD RvaToLastByteOfData ;}*PIMAGE_COFF_SYMBOLS_HEADER ;

typedef struct _FPO_DATA {DWORD ulOffStart ;DWORD cbProcSize ;DWORD cdwLocals ;WORD cdwParams ;WORD cbProlog :8 ;WORD cbRegs :3 ;WORD fHasSEH :1 ;WORD fUseBP :1 ;WORD reserved :1 ;WORD cbFrame :2 ;}FPO_DATA ;
typedef struct _FPO_DATA {DWORD ulOffStart ;DWORD cbProcSize ;DWORD cdwLocals ;WORD cdwParams ;WORD cbProlog :8 ;WORD cbRegs :3 ;WORD fHasSEH :1 ;WORD fUseBP :1 ;WORD reserved :1 ;WORD cbFrame :2 ;}*PFPO_DATA ;

typedef struct _IMAGE_DEBUG_MISC {DWORD DataType ;DWORD Length ;BOOLEAN Unicode ;BYTE Reserved [3 ];BYTE Data [1 ];}IMAGE_DEBUG_MISC ;
typedef struct _IMAGE_DEBUG_MISC {DWORD DataType ;DWORD Length ;BOOLEAN Unicode ;BYTE Reserved [3 ];BYTE Data [1 ];}*PIMAGE_DEBUG_MISC ;

typedef struct _IMAGE_FUNCTION_ENTRY {DWORD StartingAddress ;DWORD EndingAddress ;DWORD EndOfPrologue ;}IMAGE_FUNCTION_ENTRY ;
typedef struct _IMAGE_FUNCTION_ENTRY {DWORD StartingAddress ;DWORD EndingAddress ;DWORD EndOfPrologue ;}*PIMAGE_FUNCTION_ENTRY ;

typedef struct _IMAGE_FUNCTION_ENTRY64 {ULONGLONG StartingAddress ;ULONGLONG EndingAddress ;union {ULONGLONG EndOfPrologue ;ULONGLONG UnwindInfoAddress ;};}IMAGE_FUNCTION_ENTRY64 ;
typedef struct _IMAGE_FUNCTION_ENTRY64 {ULONGLONG StartingAddress ;ULONGLONG EndingAddress ;union {ULONGLONG EndOfPrologue ;ULONGLONG UnwindInfoAddress ;};}*PIMAGE_FUNCTION_ENTRY64 ;

typedef struct _IMAGE_SEPARATE_DEBUG_HEADER {WORD Signature ;WORD Flags ;WORD Machine ;WORD Characteristics ;DWORD TimeDateStamp ;DWORD CheckSum ;DWORD ImageBase ;DWORD SizeOfImage ;DWORD NumberOfSections ;DWORD ExportedNamesSize ;DWORD DebugDirectorySize ;DWORD SectionAlignment ;DWORD Reserved [2 ];}IMAGE_SEPARATE_DEBUG_HEADER ;
typedef struct _IMAGE_SEPARATE_DEBUG_HEADER {WORD Signature ;WORD Flags ;WORD Machine ;WORD Characteristics ;DWORD TimeDateStamp ;DWORD CheckSum ;DWORD ImageBase ;DWORD SizeOfImage ;DWORD NumberOfSections ;DWORD ExportedNamesSize ;DWORD DebugDirectorySize ;DWORD SectionAlignment ;DWORD Reserved [2 ];}*PIMAGE_SEPARATE_DEBUG_HEADER ;

typedef struct _NON_PAGED_DEBUG_INFO {WORD Signature ;WORD Flags ;DWORD Size ;WORD Machine ;WORD Characteristics ;DWORD TimeDateStamp ;DWORD CheckSum ;DWORD SizeOfImage ;ULONGLONG ImageBase ;}NON_PAGED_DEBUG_INFO ;
typedef struct _NON_PAGED_DEBUG_INFO {WORD Signature ;WORD Flags ;DWORD Size ;WORD Machine ;WORD Characteristics ;DWORD TimeDateStamp ;DWORD CheckSum ;DWORD SizeOfImage ;ULONGLONG ImageBase ;}*PNON_PAGED_DEBUG_INFO ;

typedef struct _ImageArchitectureHeader {unsigned int AmaskValue :1 ;int Adummy1 :7 ;unsigned int AmaskShift :8 ;int Adummy2 :16 ;DWORD FirstEntryRVA ;}IMAGE_ARCHITECTURE_HEADER ;
typedef struct _ImageArchitectureHeader {unsigned int AmaskValue :1 ;int Adummy1 :7 ;unsigned int AmaskShift :8 ;int Adummy2 :16 ;DWORD FirstEntryRVA ;}*PIMAGE_ARCHITECTURE_HEADER ;

typedef struct _ImageArchitectureEntry {DWORD FixupInstRVA ;DWORD NewInst ;}IMAGE_ARCHITECTURE_ENTRY ;
typedef struct _ImageArchitectureEntry {DWORD FixupInstRVA ;DWORD NewInst ;}*PIMAGE_ARCHITECTURE_ENTRY ;

typedef struct IMPORT_OBJECT_HEADER {WORD Sig1 ;WORD Sig2 ;WORD Version ;WORD Machine ;DWORD TimeDateStamp ;DWORD SizeOfData ;union {WORD Ordinal ;WORD Hint ;};WORD Type :2 ;WORD NameType :3 ;WORD Reserved :11 ;}IMPORT_OBJECT_HEADER ;
typedef enum IMPORT_OBJECT_TYPE {IMPORT_OBJECT_CODE =0 ,IMPORT_OBJECT_DATA =1 ,IMPORT_OBJECT_CONST =2 }IMPORT_OBJECT_TYPE ;
typedef enum IMPORT_OBJECT_NAME_TYPE {IMPORT_OBJECT_ORDINAL =0 ,IMPORT_OBJECT_NAME =1 ,IMPORT_OBJECT_NAME_NO_PREFIX =2 ,IMPORT_OBJECT_NAME_UNDECORATE =3 }IMPORT_OBJECT_NAME_TYPE ;
typedef enum ReplacesCorHdrNumericDefines {COMIMAGE_FLAGS_ILONLY =1 ,COMIMAGE_FLAGS_32BITREQUIRED =2 ,COMIMAGE_FLAGS_IL_LIBRARY =4 ,COMIMAGE_FLAGS_STRONGNAMESIGNED =8 ,COMIMAGE_FLAGS_TRACKDEBUGDATA =65536 ,COR_VERSION_MAJOR_V2 =2 ,COR_VERSION_MAJOR =2 ,COR_VERSION_MINOR =0 ,COR_DELETED_NAME_LENGTH =8 ,COR_VTABLEGAP_NAME_LENGTH =8 ,NATIVE_TYPE_MAX_CB =1 ,COR_ILMETHOD_SECT_SMALL_MAX_DATASIZE =255 ,IMAGE_COR_MIH_METHODRVA =1 ,IMAGE_COR_MIH_EHRVA =2 ,IMAGE_COR_MIH_BASICBLOCK =8 ,COR_VTABLE_32BIT =1 ,COR_VTABLE_64BIT =2 ,COR_VTABLE_FROM_UNMANAGED =4 ,COR_VTABLE_CALL_MOST_DERIVED =16 ,IMAGE_COR_EATJ_THUNK_SIZE =32 ,MAX_CLASS_NAME =1024 ,MAX_PACKAGE_NAME =1024 }ReplacesCorHdrNumericDefines ;
typedef struct IMAGE_COR20_HEADER {DWORD cb ;WORD MajorRuntimeVersion ;WORD MinorRuntimeVersion ;IMAGE_DATA_DIRECTORY MetaData ;DWORD Flags ;union {DWORD EntryPointToken ;DWORD EntryPointRVA ;};IMAGE_DATA_DIRECTORY Resources ;IMAGE_DATA_DIRECTORY StrongNameSignature ;IMAGE_DATA_DIRECTORY CodeManagerTable ;IMAGE_DATA_DIRECTORY VTableFixups ;IMAGE_DATA_DIRECTORY ExportAddressTableJumps ;IMAGE_DATA_DIRECTORY ManagedNativeHeader ;}IMAGE_COR20_HEADER ;
typedef struct IMAGE_COR20_HEADER {DWORD cb ;WORD MajorRuntimeVersion ;WORD MinorRuntimeVersion ;IMAGE_DATA_DIRECTORY MetaData ;DWORD Flags ;union {DWORD EntryPointToken ;DWORD EntryPointRVA ;};IMAGE_DATA_DIRECTORY Resources ;IMAGE_DATA_DIRECTORY StrongNameSignature ;IMAGE_DATA_DIRECTORY CodeManagerTable ;IMAGE_DATA_DIRECTORY VTableFixups ;IMAGE_DATA_DIRECTORY ExportAddressTableJumps ;IMAGE_DATA_DIRECTORY ManagedNativeHeader ;}*PIMAGE_COR20_HEADER ;

WORD RtlCaptureStackBackTrace (DWORD FramesToSkip ,DWORD FramesToCapture ,PVOID *BackTrace ,PDWORD BackTraceHash );
void RtlCaptureContext (PCONTEXT ContextRecord );
SIZE_T RtlCompareMemory (const void *Source1 ,const void *Source2 ,SIZE_T Length );
BOOLEAN RtlAddFunctionTable (PRUNTIME_FUNCTION FunctionTable ,DWORD EntryCount ,DWORD64 BaseAddress );
BOOLEAN RtlDeleteFunctionTable (PRUNTIME_FUNCTION FunctionTable );
BOOLEAN RtlInstallFunctionTableCallback (DWORD64 TableIdentifier ,DWORD64 BaseAddress ,DWORD Length ,PGET_RUNTIME_FUNCTION_CALLBACK Callback ,PVOID Context ,PCWSTR OutOfProcessCallbackDll );
void RtlRestoreContext (PCONTEXT ContextRecord ,struct _EXCEPTION_RECORD *ExceptionRecord );
PEXCEPTION_ROUTINE RtlVirtualUnwind (DWORD HandlerType ,DWORD64 ImageBase ,DWORD64 ControlPc ,PRUNTIME_FUNCTION FunctionEntry ,PCONTEXT ContextRecord ,PVOID *HandlerData ,PDWORD64 EstablisherFrame ,PKNONVOLATILE_CONTEXT_POINTERS ContextPointers );
void RtlUnwind (PVOID TargetFrame ,PVOID TargetIp ,PEXCEPTION_RECORD ExceptionRecord ,PVOID ReturnValue );
PVOID RtlPcToFileHeader (PVOID PcValue ,PVOID *BaseOfImage );
PRUNTIME_FUNCTION RtlLookupFunctionEntry (DWORD64 ControlPc ,PDWORD64 ImageBase ,PUNWIND_HISTORY_TABLE HistoryTable );
void RtlUnwindEx (PVOID TargetFrame ,PVOID TargetIp ,PEXCEPTION_RECORD ExceptionRecord ,PVOID ReturnValue ,PCONTEXT ContextRecord ,PUNWIND_HISTORY_TABLE HistoryTable );
typedef struct _SLIST_ENTRY {struct _SLIST_ENTRY *Next ;}SLIST_ENTRY ;
typedef struct _SLIST_ENTRY {struct _SLIST_ENTRY *Next ;}*PSLIST_ENTRY ;

typedef union _SLIST_HEADER {struct {ULONGLONG Alignment ;ULONGLONG Region ;};struct {ULONGLONG Depth :16 ;ULONGLONG Sequence :9 ;ULONGLONG NextEntry :39 ;ULONGLONG HeaderType :1 ;ULONGLONG Init :1 ;ULONGLONG Reserved :59 ;ULONGLONG Region :3 ;}Header8 ;struct {ULONGLONG Depth :16 ;ULONGLONG Sequence :48 ;ULONGLONG HeaderType :1 ;ULONGLONG Reserved :3 ;ULONGLONG NextEntry :60 ;}HeaderX64 ;}SLIST_HEADER ;
typedef union _SLIST_HEADER {struct {ULONGLONG Alignment ;ULONGLONG Region ;};struct {ULONGLONG Depth :16 ;ULONGLONG Sequence :9 ;ULONGLONG NextEntry :39 ;ULONGLONG HeaderType :1 ;ULONGLONG Init :1 ;ULONGLONG Reserved :59 ;ULONGLONG Region :3 ;}Header8 ;struct {ULONGLONG Depth :16 ;ULONGLONG Sequence :48 ;ULONGLONG HeaderType :1 ;ULONGLONG Reserved :3 ;ULONGLONG NextEntry :60 ;}HeaderX64 ;}*PSLIST_HEADER ;

void RtlInitializeSListHead (PSLIST_HEADER ListHead );
PSLIST_ENTRY RtlFirstEntrySList (const SLIST_HEADER *ListHead );
PSLIST_ENTRY RtlInterlockedPopEntrySList (PSLIST_HEADER ListHead );
PSLIST_ENTRY RtlInterlockedPushEntrySList (PSLIST_HEADER ListHead ,PSLIST_ENTRY ListEntry );
PSLIST_ENTRY RtlInterlockedPushListSListEx (PSLIST_HEADER ListHead ,PSLIST_ENTRY List ,PSLIST_ENTRY ListEnd ,DWORD Count );
PSLIST_ENTRY RtlInterlockedFlushSList (PSLIST_HEADER ListHead );
WORD RtlQueryDepthSList (PSLIST_HEADER ListHead );
typedef struct _RTL_RUN_ONCE {PVOID Ptr ;}RTL_RUN_ONCE ;
typedef struct _RTL_RUN_ONCE {PVOID Ptr ;}*PRTL_RUN_ONCE ;

typedef DWORD (*PRTL_RUN_ONCE_INIT_FN )(PRTL_RUN_ONCE ,PVOID ,PVOID *);
typedef struct _RTL_BARRIER {DWORD Reserved1 ;DWORD Reserved2 ;ULONG_PTR Reserved3 [2 ];DWORD Reserved4 ;DWORD Reserved5 ;}RTL_BARRIER ;
typedef struct _RTL_BARRIER {DWORD Reserved1 ;DWORD Reserved2 ;ULONG_PTR Reserved3 [2 ];DWORD Reserved4 ;DWORD Reserved5 ;}*PRTL_BARRIER ;

PVOID RtlSecureZeroMemory (PVOID ptr ,SIZE_T cnt );
typedef struct _MESSAGE_RESOURCE_ENTRY {WORD Length ;WORD Flags ;BYTE Text [1 ];}MESSAGE_RESOURCE_ENTRY ;
typedef struct _MESSAGE_RESOURCE_ENTRY {WORD Length ;WORD Flags ;BYTE Text [1 ];}*PMESSAGE_RESOURCE_ENTRY ;

typedef struct _MESSAGE_RESOURCE_BLOCK {DWORD LowId ;DWORD HighId ;DWORD OffsetToEntries ;}MESSAGE_RESOURCE_BLOCK ;
typedef struct _MESSAGE_RESOURCE_BLOCK {DWORD LowId ;DWORD HighId ;DWORD OffsetToEntries ;}*PMESSAGE_RESOURCE_BLOCK ;

typedef struct _MESSAGE_RESOURCE_DATA {DWORD NumberOfBlocks ;MESSAGE_RESOURCE_BLOCK Blocks [1 ];}MESSAGE_RESOURCE_DATA ;
typedef struct _MESSAGE_RESOURCE_DATA {DWORD NumberOfBlocks ;MESSAGE_RESOURCE_BLOCK Blocks [1 ];}*PMESSAGE_RESOURCE_DATA ;

typedef struct _OSVERSIONINFOA {DWORD dwOSVersionInfoSize ;DWORD dwMajorVersion ;DWORD dwMinorVersion ;DWORD dwBuildNumber ;DWORD dwPlatformId ;CHAR szCSDVersion [128 ];}OSVERSIONINFOA ;
typedef struct _OSVERSIONINFOA {DWORD dwOSVersionInfoSize ;DWORD dwMajorVersion ;DWORD dwMinorVersion ;DWORD dwBuildNumber ;DWORD dwPlatformId ;CHAR szCSDVersion [128 ];}*POSVERSIONINFOA ;
typedef struct _OSVERSIONINFOA {DWORD dwOSVersionInfoSize ;DWORD dwMajorVersion ;DWORD dwMinorVersion ;DWORD dwBuildNumber ;DWORD dwPlatformId ;CHAR szCSDVersion [128 ];}*LPOSVERSIONINFOA ;

typedef struct _OSVERSIONINFOW {DWORD dwOSVersionInfoSize ;DWORD dwMajorVersion ;DWORD dwMinorVersion ;DWORD dwBuildNumber ;DWORD dwPlatformId ;WCHAR szCSDVersion [128 ];}OSVERSIONINFOW ;
typedef struct _OSVERSIONINFOW {DWORD dwOSVersionInfoSize ;DWORD dwMajorVersion ;DWORD dwMinorVersion ;DWORD dwBuildNumber ;DWORD dwPlatformId ;WCHAR szCSDVersion [128 ];}*POSVERSIONINFOW ;
typedef struct _OSVERSIONINFOW {DWORD dwOSVersionInfoSize ;DWORD dwMajorVersion ;DWORD dwMinorVersion ;DWORD dwBuildNumber ;DWORD dwPlatformId ;WCHAR szCSDVersion [128 ];}*LPOSVERSIONINFOW ;
typedef struct _OSVERSIONINFOW {DWORD dwOSVersionInfoSize ;DWORD dwMajorVersion ;DWORD dwMinorVersion ;DWORD dwBuildNumber ;DWORD dwPlatformId ;WCHAR szCSDVersion [128 ];}RTL_OSVERSIONINFOW ;
typedef struct _OSVERSIONINFOW {DWORD dwOSVersionInfoSize ;DWORD dwMajorVersion ;DWORD dwMinorVersion ;DWORD dwBuildNumber ;DWORD dwPlatformId ;WCHAR szCSDVersion [128 ];}*PRTL_OSVERSIONINFOW ;

typedef OSVERSIONINFOA OSVERSIONINFO ;
typedef POSVERSIONINFOA POSVERSIONINFO ;
typedef LPOSVERSIONINFOA LPOSVERSIONINFO ;
typedef struct _OSVERSIONINFOEXA {DWORD dwOSVersionInfoSize ;DWORD dwMajorVersion ;DWORD dwMinorVersion ;DWORD dwBuildNumber ;DWORD dwPlatformId ;CHAR szCSDVersion [128 ];WORD wServicePackMajor ;WORD wServicePackMinor ;WORD wSuiteMask ;BYTE wProductType ;BYTE wReserved ;}OSVERSIONINFOEXA ;
typedef struct _OSVERSIONINFOEXA {DWORD dwOSVersionInfoSize ;DWORD dwMajorVersion ;DWORD dwMinorVersion ;DWORD dwBuildNumber ;DWORD dwPlatformId ;CHAR szCSDVersion [128 ];WORD wServicePackMajor ;WORD wServicePackMinor ;WORD wSuiteMask ;BYTE wProductType ;BYTE wReserved ;}*POSVERSIONINFOEXA ;
typedef struct _OSVERSIONINFOEXA {DWORD dwOSVersionInfoSize ;DWORD dwMajorVersion ;DWORD dwMinorVersion ;DWORD dwBuildNumber ;DWORD dwPlatformId ;CHAR szCSDVersion [128 ];WORD wServicePackMajor ;WORD wServicePackMinor ;WORD wSuiteMask ;BYTE wProductType ;BYTE wReserved ;}*LPOSVERSIONINFOEXA ;

typedef struct _OSVERSIONINFOEXW {DWORD dwOSVersionInfoSize ;DWORD dwMajorVersion ;DWORD dwMinorVersion ;DWORD dwBuildNumber ;DWORD dwPlatformId ;WCHAR szCSDVersion [128 ];WORD wServicePackMajor ;WORD wServicePackMinor ;WORD wSuiteMask ;BYTE wProductType ;BYTE wReserved ;}OSVERSIONINFOEXW ;
typedef struct _OSVERSIONINFOEXW {DWORD dwOSVersionInfoSize ;DWORD dwMajorVersion ;DWORD dwMinorVersion ;DWORD dwBuildNumber ;DWORD dwPlatformId ;WCHAR szCSDVersion [128 ];WORD wServicePackMajor ;WORD wServicePackMinor ;WORD wSuiteMask ;BYTE wProductType ;BYTE wReserved ;}*POSVERSIONINFOEXW ;
typedef struct _OSVERSIONINFOEXW {DWORD dwOSVersionInfoSize ;DWORD dwMajorVersion ;DWORD dwMinorVersion ;DWORD dwBuildNumber ;DWORD dwPlatformId ;WCHAR szCSDVersion [128 ];WORD wServicePackMajor ;WORD wServicePackMinor ;WORD wSuiteMask ;BYTE wProductType ;BYTE wReserved ;}*LPOSVERSIONINFOEXW ;
typedef struct _OSVERSIONINFOEXW {DWORD dwOSVersionInfoSize ;DWORD dwMajorVersion ;DWORD dwMinorVersion ;DWORD dwBuildNumber ;DWORD dwPlatformId ;WCHAR szCSDVersion [128 ];WORD wServicePackMajor ;WORD wServicePackMinor ;WORD wSuiteMask ;BYTE wProductType ;BYTE wReserved ;}RTL_OSVERSIONINFOEXW ;
typedef struct _OSVERSIONINFOEXW {DWORD dwOSVersionInfoSize ;DWORD dwMajorVersion ;DWORD dwMinorVersion ;DWORD dwBuildNumber ;DWORD dwPlatformId ;WCHAR szCSDVersion [128 ];WORD wServicePackMajor ;WORD wServicePackMinor ;WORD wSuiteMask ;BYTE wProductType ;BYTE wReserved ;}*PRTL_OSVERSIONINFOEXW ;

typedef OSVERSIONINFOEXA OSVERSIONINFOEX ;
typedef POSVERSIONINFOEXA POSVERSIONINFOEX ;
typedef LPOSVERSIONINFOEXA LPOSVERSIONINFOEX ;
ULONGLONG VerSetConditionMask (ULONGLONG ConditionMask ,DWORD TypeMask ,BYTE Condition );
typedef enum _RTL_UMS_THREAD_INFO_CLASS {UmsThreadInvalidInfoClass =0 ,UmsThreadUserContext ,UmsThreadPriority ,UmsThreadAffinity ,UmsThreadTeb ,UmsThreadIsSuspended ,UmsThreadIsTerminated ,UmsThreadMaxInfoClass }RTL_UMS_THREAD_INFO_CLASS ;
typedef enum _RTL_UMS_THREAD_INFO_CLASS *PRTL_UMS_THREAD_INFO_CLASS ;

typedef enum _RTL_UMS_SCHEDULER_REASON {UmsSchedulerStartup =0 ,UmsSchedulerThreadBlocked ,UmsSchedulerThreadYield }RTL_UMS_SCHEDULER_REASON ;
typedef enum _RTL_UMS_SCHEDULER_REASON *PRTL_UMS_SCHEDULER_REASON ;

typedef void RTL_UMS_SCHEDULER_ENTRY_POINT (RTL_UMS_SCHEDULER_REASON Reason ,ULONG_PTR ActivationPayload ,PVOID SchedulerParam );
typedef RTL_UMS_SCHEDULER_ENTRY_POINT *PRTL_UMS_SCHEDULER_ENTRY_POINT ;
typedef struct _RTL_CRITICAL_SECTION_DEBUG {WORD Type ;WORD CreatorBackTraceIndex ;struct _RTL_CRITICAL_SECTION *CriticalSection ;LIST_ENTRY ProcessLocksList ;DWORD EntryCount ;DWORD ContentionCount ;DWORD Flags ;WORD CreatorBackTraceIndexHigh ;WORD SpareWORD ;}RTL_CRITICAL_SECTION_DEBUG ;
typedef struct _RTL_CRITICAL_SECTION_DEBUG {WORD Type ;WORD CreatorBackTraceIndex ;struct _RTL_CRITICAL_SECTION *CriticalSection ;LIST_ENTRY ProcessLocksList ;DWORD EntryCount ;DWORD ContentionCount ;DWORD Flags ;WORD CreatorBackTraceIndexHigh ;WORD SpareWORD ;}*PRTL_CRITICAL_SECTION_DEBUG ;
typedef struct _RTL_CRITICAL_SECTION_DEBUG {WORD Type ;WORD CreatorBackTraceIndex ;struct _RTL_CRITICAL_SECTION *CriticalSection ;LIST_ENTRY ProcessLocksList ;DWORD EntryCount ;DWORD ContentionCount ;DWORD Flags ;WORD CreatorBackTraceIndexHigh ;WORD SpareWORD ;}RTL_RESOURCE_DEBUG ;
typedef struct _RTL_CRITICAL_SECTION_DEBUG {WORD Type ;WORD CreatorBackTraceIndex ;struct _RTL_CRITICAL_SECTION *CriticalSection ;LIST_ENTRY ProcessLocksList ;DWORD EntryCount ;DWORD ContentionCount ;DWORD Flags ;WORD CreatorBackTraceIndexHigh ;WORD SpareWORD ;}*PRTL_RESOURCE_DEBUG ;

typedef struct _RTL_CRITICAL_SECTION {PRTL_CRITICAL_SECTION_DEBUG DebugInfo ;LONG LockCount ;LONG RecursionCount ;HANDLE OwningThread ;HANDLE LockSemaphore ;ULONG_PTR SpinCount ;}RTL_CRITICAL_SECTION ;
typedef struct _RTL_CRITICAL_SECTION {PRTL_CRITICAL_SECTION_DEBUG DebugInfo ;LONG LockCount ;LONG RecursionCount ;HANDLE OwningThread ;HANDLE LockSemaphore ;ULONG_PTR SpinCount ;}*PRTL_CRITICAL_SECTION ;

typedef struct _RTL_SRWLOCK {PVOID Ptr ;}RTL_SRWLOCK ;
typedef struct _RTL_SRWLOCK {PVOID Ptr ;}*PRTL_SRWLOCK ;

typedef struct _RTL_CONDITION_VARIABLE {PVOID Ptr ;}RTL_CONDITION_VARIABLE ;
typedef struct _RTL_CONDITION_VARIABLE {PVOID Ptr ;}*PRTL_CONDITION_VARIABLE ;

typedef void (*PAPCFUNC )(ULONG_PTR Parameter );
typedef LONG (*PVECTORED_EXCEPTION_HANDLER )(struct _EXCEPTION_POINTERS *ExceptionInfo );
typedef enum _HEAP_INFORMATION_CLASS {HeapCompatibilityInformation ,HeapEnableTerminationOnCorruption }HEAP_INFORMATION_CLASS ;
typedef void (*WORKERCALLBACKFUNC )(PVOID );
typedef void (*APC_CALLBACK_FUNCTION )(DWORD ,PVOID ,PVOID );
typedef void (*WAITORTIMERCALLBACKFUNC )(PVOID ,BOOLEAN );
typedef WAITORTIMERCALLBACKFUNC WAITORTIMERCALLBACK ;
typedef void (*PFLS_CALLBACK_FUNCTION )(PVOID lpFlsData );
typedef BOOLEAN (*PSECURE_MEMORY_CACHE_CALLBACK )(PVOID Addr ,SIZE_T Range );
typedef enum _ACTIVATION_CONTEXT_INFO_CLASS {ActivationContextBasicInformation =1 ,ActivationContextDetailedInformation =2 ,AssemblyDetailedInformationInActivationContext =3 ,FileInformationInAssemblyOfAssemblyInActivationContext =4 ,RunlevelInformationInActivationContext =5 ,CompatibilityInformationInActivationContext =6 ,ActivationContextManifestResourceName =7 ,MaxActivationContextInfoClass ,AssemblyDetailedInformationInActivationContxt =3 ,FileInformationInAssemblyOfAssemblyInActivationContxt =4 }ACTIVATION_CONTEXT_INFO_CLASS ;
typedef enum {ACTCTX_RUN_LEVEL_UNSPECIFIED =0 ,ACTCTX_RUN_LEVEL_AS_INVOKER ,ACTCTX_RUN_LEVEL_HIGHEST_AVAILABLE ,ACTCTX_RUN_LEVEL_REQUIRE_ADMIN ,ACTCTX_RUN_LEVEL_NUMBERS }ACTCTX_REQUESTED_RUN_LEVEL ;
typedef enum {ACTCTX_COMPATIBILITY_ELEMENT_TYPE_UNKNOWN =0 ,ACTCTX_COMPATIBILITY_ELEMENT_TYPE_OS ,ACTCTX_COMPATIBILITY_ELEMENT_TYPE_MITIGATION }ACTCTX_COMPATIBILITY_ELEMENT_TYPE ;
typedef struct _ACTIVATION_CONTEXT_QUERY_INDEX {DWORD ulAssemblyIndex ;DWORD ulFileIndexInAssembly ;}ACTIVATION_CONTEXT_QUERY_INDEX ;
typedef struct _ACTIVATION_CONTEXT_QUERY_INDEX {DWORD ulAssemblyIndex ;DWORD ulFileIndexInAssembly ;}*PACTIVATION_CONTEXT_QUERY_INDEX ;

typedef struct _ASSEMBLY_FILE_DETAILED_INFORMATION {DWORD ulFlags ;DWORD ulFilenameLength ;DWORD ulPathLength ;PCWSTR lpFileName ;PCWSTR lpFilePath ;}ASSEMBLY_FILE_DETAILED_INFORMATION ;
typedef struct _ASSEMBLY_FILE_DETAILED_INFORMATION {DWORD ulFlags ;DWORD ulFilenameLength ;DWORD ulPathLength ;PCWSTR lpFileName ;PCWSTR lpFilePath ;}*PASSEMBLY_FILE_DETAILED_INFORMATION ;

typedef struct _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION {DWORD ulFlags ;DWORD ulEncodedAssemblyIdentityLength ;DWORD ulManifestPathType ;DWORD ulManifestPathLength ;LARGE_INTEGER liManifestLastWriteTime ;DWORD ulPolicyPathType ;DWORD ulPolicyPathLength ;LARGE_INTEGER liPolicyLastWriteTime ;DWORD ulMetadataSatelliteRosterIndex ;DWORD ulManifestVersionMajor ;DWORD ulManifestVersionMinor ;DWORD ulPolicyVersionMajor ;DWORD ulPolicyVersionMinor ;DWORD ulAssemblyDirectoryNameLength ;PCWSTR lpAssemblyEncodedAssemblyIdentity ;PCWSTR lpAssemblyManifestPath ;PCWSTR lpAssemblyPolicyPath ;PCWSTR lpAssemblyDirectoryName ;DWORD ulFileCount ;}ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION ;
typedef struct _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION {DWORD ulFlags ;DWORD ulEncodedAssemblyIdentityLength ;DWORD ulManifestPathType ;DWORD ulManifestPathLength ;LARGE_INTEGER liManifestLastWriteTime ;DWORD ulPolicyPathType ;DWORD ulPolicyPathLength ;LARGE_INTEGER liPolicyLastWriteTime ;DWORD ulMetadataSatelliteRosterIndex ;DWORD ulManifestVersionMajor ;DWORD ulManifestVersionMinor ;DWORD ulPolicyVersionMajor ;DWORD ulPolicyVersionMinor ;DWORD ulAssemblyDirectoryNameLength ;PCWSTR lpAssemblyEncodedAssemblyIdentity ;PCWSTR lpAssemblyManifestPath ;PCWSTR lpAssemblyPolicyPath ;PCWSTR lpAssemblyDirectoryName ;DWORD ulFileCount ;}*PACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION ;

typedef struct _ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION {DWORD ulFlags ;ACTCTX_REQUESTED_RUN_LEVEL RunLevel ;DWORD UiAccess ;}ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION ;
typedef struct _ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION {DWORD ulFlags ;ACTCTX_REQUESTED_RUN_LEVEL RunLevel ;DWORD UiAccess ;}*PACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION ;

typedef struct _COMPATIBILITY_CONTEXT_ELEMENT {GUID Id ;ACTCTX_COMPATIBILITY_ELEMENT_TYPE Type ;}COMPATIBILITY_CONTEXT_ELEMENT ;
typedef struct _COMPATIBILITY_CONTEXT_ELEMENT {GUID Id ;ACTCTX_COMPATIBILITY_ELEMENT_TYPE Type ;}*PCOMPATIBILITY_CONTEXT_ELEMENT ;

typedef struct _ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION {DWORD ElementCount ;COMPATIBILITY_CONTEXT_ELEMENT Elements [];}ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION ;
typedef struct _ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION {DWORD ElementCount ;COMPATIBILITY_CONTEXT_ELEMENT Elements [];}*PACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION ;

typedef struct _SUPPORTED_OS_INFO {WORD OsCount ;WORD MitigationExist ;WORD OsList [4 ];}SUPPORTED_OS_INFO ;
typedef struct _SUPPORTED_OS_INFO {WORD OsCount ;WORD MitigationExist ;WORD OsList [4 ];}*PSUPPORTED_OS_INFO ;

typedef struct _ACTIVATION_CONTEXT_DETAILED_INFORMATION {DWORD dwFlags ;DWORD ulFormatVersion ;DWORD ulAssemblyCount ;DWORD ulRootManifestPathType ;DWORD ulRootManifestPathChars ;DWORD ulRootConfigurationPathType ;DWORD ulRootConfigurationPathChars ;DWORD ulAppDirPathType ;DWORD ulAppDirPathChars ;PCWSTR lpRootManifestPath ;PCWSTR lpRootConfigurationPath ;PCWSTR lpAppDirPath ;}ACTIVATION_CONTEXT_DETAILED_INFORMATION ;
typedef struct _ACTIVATION_CONTEXT_DETAILED_INFORMATION {DWORD dwFlags ;DWORD ulFormatVersion ;DWORD ulAssemblyCount ;DWORD ulRootManifestPathType ;DWORD ulRootManifestPathChars ;DWORD ulRootConfigurationPathType ;DWORD ulRootConfigurationPathChars ;DWORD ulAppDirPathType ;DWORD ulAppDirPathChars ;PCWSTR lpRootManifestPath ;PCWSTR lpRootConfigurationPath ;PCWSTR lpAppDirPath ;}*PACTIVATION_CONTEXT_DETAILED_INFORMATION ;

typedef const struct _ACTIVATION_CONTEXT_QUERY_INDEX *PCACTIVATION_CONTEXT_QUERY_INDEX ;
typedef const ASSEMBLY_FILE_DETAILED_INFORMATION *PCASSEMBLY_FILE_DETAILED_INFORMATION ;
typedef const struct _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION *PCACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION ;
typedef const struct _ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION *PCACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION ;
typedef const struct _COMPATIBILITY_CONTEXT_ELEMENT *PCCOMPATIBILITY_CONTEXT_ELEMENT ;
typedef const struct _ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION *PCACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION ;
typedef const struct _ACTIVATION_CONTEXT_DETAILED_INFORMATION *PCACTIVATION_CONTEXT_DETAILED_INFORMATION ;
typedef void (*RTL_VERIFIER_DLL_LOAD_CALLBACK )(PWSTR DllName ,PVOID DllBase ,SIZE_T DllSize ,PVOID Reserved );
typedef void (*RTL_VERIFIER_DLL_UNLOAD_CALLBACK )(PWSTR DllName ,PVOID DllBase ,SIZE_T DllSize ,PVOID Reserved );
typedef void (*RTL_VERIFIER_NTDLLHEAPFREE_CALLBACK )(PVOID AllocationBase ,SIZE_T AllocationSize );
typedef struct _RTL_VERIFIER_THUNK_DESCRIPTOR {PCHAR ThunkName ;PVOID ThunkOldAddress ;PVOID ThunkNewAddress ;}RTL_VERIFIER_THUNK_DESCRIPTOR ;
typedef struct _RTL_VERIFIER_THUNK_DESCRIPTOR {PCHAR ThunkName ;PVOID ThunkOldAddress ;PVOID ThunkNewAddress ;}*PRTL_VERIFIER_THUNK_DESCRIPTOR ;

typedef struct _RTL_VERIFIER_DLL_DESCRIPTOR {PWCHAR DllName ;DWORD DllFlags ;PVOID DllAddress ;PRTL_VERIFIER_THUNK_DESCRIPTOR DllThunks ;}RTL_VERIFIER_DLL_DESCRIPTOR ;
typedef struct _RTL_VERIFIER_DLL_DESCRIPTOR {PWCHAR DllName ;DWORD DllFlags ;PVOID DllAddress ;PRTL_VERIFIER_THUNK_DESCRIPTOR DllThunks ;}*PRTL_VERIFIER_DLL_DESCRIPTOR ;

typedef struct _RTL_VERIFIER_PROVIDER_DESCRIPTOR {DWORD Length ;PRTL_VERIFIER_DLL_DESCRIPTOR ProviderDlls ;RTL_VERIFIER_DLL_LOAD_CALLBACK ProviderDllLoadCallback ;RTL_VERIFIER_DLL_UNLOAD_CALLBACK ProviderDllUnloadCallback ;PWSTR VerifierImage ;DWORD VerifierFlags ;DWORD VerifierDebug ;PVOID RtlpGetStackTraceAddress ;PVOID RtlpDebugPageHeapCreate ;PVOID RtlpDebugPageHeapDestroy ;RTL_VERIFIER_NTDLLHEAPFREE_CALLBACK ProviderNtdllHeapFreeCallback ;}RTL_VERIFIER_PROVIDER_DESCRIPTOR ;
typedef struct _RTL_VERIFIER_PROVIDER_DESCRIPTOR {DWORD Length ;PRTL_VERIFIER_DLL_DESCRIPTOR ProviderDlls ;RTL_VERIFIER_DLL_LOAD_CALLBACK ProviderDllLoadCallback ;RTL_VERIFIER_DLL_UNLOAD_CALLBACK ProviderDllUnloadCallback ;PWSTR VerifierImage ;DWORD VerifierFlags ;DWORD VerifierDebug ;PVOID RtlpGetStackTraceAddress ;PVOID RtlpDebugPageHeapCreate ;PVOID RtlpDebugPageHeapDestroy ;RTL_VERIFIER_NTDLLHEAPFREE_CALLBACK ProviderNtdllHeapFreeCallback ;}*PRTL_VERIFIER_PROVIDER_DESCRIPTOR ;

void RtlApplicationVerifierStop (ULONG_PTR Code ,PSTR Message ,ULONG_PTR Param1 ,PSTR Description1 ,ULONG_PTR Param2 ,PSTR Description2 ,ULONG_PTR Param3 ,PSTR Description3 ,ULONG_PTR Param4 ,PSTR Description4 );
DWORD RtlSetHeapInformation (PVOID HeapHandle ,HEAP_INFORMATION_CLASS HeapInformationClass ,PVOID HeapInformation ,SIZE_T HeapInformationLength );
DWORD RtlQueryHeapInformation (PVOID HeapHandle ,HEAP_INFORMATION_CLASS HeapInformationClass ,PVOID HeapInformation ,SIZE_T HeapInformationLength ,PSIZE_T ReturnLength );
DWORD RtlMultipleAllocateHeap (PVOID HeapHandle ,DWORD Flags ,SIZE_T Size ,DWORD Count ,PVOID *Array );
DWORD RtlMultipleFreeHeap (PVOID HeapHandle ,DWORD Flags ,DWORD Count ,PVOID *Array );
typedef struct _HARDWARE_COUNTER_DATA {HARDWARE_COUNTER_TYPE Type ;DWORD Reserved ;DWORD64 Value ;}HARDWARE_COUNTER_DATA ;
typedef struct _HARDWARE_COUNTER_DATA {HARDWARE_COUNTER_TYPE Type ;DWORD Reserved ;DWORD64 Value ;}*PHARDWARE_COUNTER_DATA ;

typedef struct _PERFORMANCE_DATA {WORD Size ;BYTE Version ;BYTE HwCountersCount ;DWORD ContextSwitchCount ;DWORD64 WaitReasonBitMap ;DWORD64 CycleTime ;DWORD RetryCount ;DWORD Reserved ;HARDWARE_COUNTER_DATA HwCounters [16 ];}PERFORMANCE_DATA ;
typedef struct _PERFORMANCE_DATA {WORD Size ;BYTE Version ;BYTE HwCountersCount ;DWORD ContextSwitchCount ;DWORD64 WaitReasonBitMap ;DWORD64 CycleTime ;DWORD RetryCount ;DWORD Reserved ;HARDWARE_COUNTER_DATA HwCounters [16 ];}*PPERFORMANCE_DATA ;

typedef struct _EVENTLOGRECORD {DWORD Length ;DWORD Reserved ;DWORD RecordNumber ;DWORD TimeGenerated ;DWORD TimeWritten ;DWORD EventID ;WORD EventType ;WORD NumStrings ;WORD EventCategory ;WORD ReservedFlags ;DWORD ClosingRecordNumber ;DWORD StringOffset ;DWORD UserSidLength ;DWORD UserSidOffset ;DWORD DataLength ;DWORD DataOffset ;}EVENTLOGRECORD ;
typedef struct _EVENTLOGRECORD {DWORD Length ;DWORD Reserved ;DWORD RecordNumber ;DWORD TimeGenerated ;DWORD TimeWritten ;DWORD EventID ;WORD EventType ;WORD NumStrings ;WORD EventCategory ;WORD ReservedFlags ;DWORD ClosingRecordNumber ;DWORD StringOffset ;DWORD UserSidLength ;DWORD UserSidOffset ;DWORD DataLength ;DWORD DataOffset ;}*PEVENTLOGRECORD ;

typedef struct _EVENTSFORLOGFILE {DWORD ulSize ;WCHAR szLogicalLogFile [256 ];DWORD ulNumRecords ;EVENTLOGRECORD pEventLogRecords [];}EVENTSFORLOGFILE ;
typedef struct _EVENTSFORLOGFILE {DWORD ulSize ;WCHAR szLogicalLogFile [256 ];DWORD ulNumRecords ;EVENTLOGRECORD pEventLogRecords [];}*PEVENTSFORLOGFILE ;

typedef struct _PACKEDEVENTINFO {DWORD ulSize ;DWORD ulNumEventsForLogFile ;DWORD ulOffsets [];}PACKEDEVENTINFO ;
typedef struct _PACKEDEVENTINFO {DWORD ulSize ;DWORD ulNumEventsForLogFile ;DWORD ulOffsets [];}*PPACKEDEVENTINFO ;

typedef enum _CM_SERVICE_NODE_TYPE {DriverType =1 ,FileSystemType =2 ,Win32ServiceOwnProcess =16 ,Win32ServiceShareProcess =32 ,AdapterType =4 ,RecognizerType =8 }SERVICE_NODE_TYPE ;
typedef enum _CM_SERVICE_LOAD_TYPE {BootLoad =0 ,SystemLoad =1 ,AutoLoad =2 ,DemandLoad =3 ,DisableLoad =4 }SERVICE_LOAD_TYPE ;
typedef enum _CM_ERROR_CONTROL_TYPE {IgnoreError =0 ,NormalError =1 ,SevereError =2 ,CriticalError =3 }SERVICE_ERROR_TYPE ;
typedef struct _TAPE_ERASE {DWORD Type ;BOOLEAN Immediate ;}TAPE_ERASE ;
typedef struct _TAPE_ERASE {DWORD Type ;BOOLEAN Immediate ;}*PTAPE_ERASE ;

typedef struct _TAPE_PREPARE {DWORD Operation ;BOOLEAN Immediate ;}TAPE_PREPARE ;
typedef struct _TAPE_PREPARE {DWORD Operation ;BOOLEAN Immediate ;}*PTAPE_PREPARE ;

typedef struct _TAPE_WRITE_MARKS {DWORD Type ;DWORD Count ;BOOLEAN Immediate ;}TAPE_WRITE_MARKS ;
typedef struct _TAPE_WRITE_MARKS {DWORD Type ;DWORD Count ;BOOLEAN Immediate ;}*PTAPE_WRITE_MARKS ;

typedef struct _TAPE_GET_POSITION {DWORD Type ;DWORD Partition ;LARGE_INTEGER Offset ;}TAPE_GET_POSITION ;
typedef struct _TAPE_GET_POSITION {DWORD Type ;DWORD Partition ;LARGE_INTEGER Offset ;}*PTAPE_GET_POSITION ;

typedef struct _TAPE_SET_POSITION {DWORD Method ;DWORD Partition ;LARGE_INTEGER Offset ;BOOLEAN Immediate ;}TAPE_SET_POSITION ;
typedef struct _TAPE_SET_POSITION {DWORD Method ;DWORD Partition ;LARGE_INTEGER Offset ;BOOLEAN Immediate ;}*PTAPE_SET_POSITION ;

typedef struct _TAPE_GET_DRIVE_PARAMETERS {BOOLEAN ECC ;BOOLEAN Compression ;BOOLEAN DataPadding ;BOOLEAN ReportSetmarks ;DWORD DefaultBlockSize ;DWORD MaximumBlockSize ;DWORD MinimumBlockSize ;DWORD MaximumPartitionCount ;DWORD FeaturesLow ;DWORD FeaturesHigh ;DWORD EOTWarningZoneSize ;}TAPE_GET_DRIVE_PARAMETERS ;
typedef struct _TAPE_GET_DRIVE_PARAMETERS {BOOLEAN ECC ;BOOLEAN Compression ;BOOLEAN DataPadding ;BOOLEAN ReportSetmarks ;DWORD DefaultBlockSize ;DWORD MaximumBlockSize ;DWORD MinimumBlockSize ;DWORD MaximumPartitionCount ;DWORD FeaturesLow ;DWORD FeaturesHigh ;DWORD EOTWarningZoneSize ;}*PTAPE_GET_DRIVE_PARAMETERS ;

typedef struct _TAPE_SET_DRIVE_PARAMETERS {BOOLEAN ECC ;BOOLEAN Compression ;BOOLEAN DataPadding ;BOOLEAN ReportSetmarks ;DWORD EOTWarningZoneSize ;}TAPE_SET_DRIVE_PARAMETERS ;
typedef struct _TAPE_SET_DRIVE_PARAMETERS {BOOLEAN ECC ;BOOLEAN Compression ;BOOLEAN DataPadding ;BOOLEAN ReportSetmarks ;DWORD EOTWarningZoneSize ;}*PTAPE_SET_DRIVE_PARAMETERS ;

typedef struct _TAPE_GET_MEDIA_PARAMETERS {LARGE_INTEGER Capacity ;LARGE_INTEGER Remaining ;DWORD BlockSize ;DWORD PartitionCount ;BOOLEAN WriteProtected ;}TAPE_GET_MEDIA_PARAMETERS ;
typedef struct _TAPE_GET_MEDIA_PARAMETERS {LARGE_INTEGER Capacity ;LARGE_INTEGER Remaining ;DWORD BlockSize ;DWORD PartitionCount ;BOOLEAN WriteProtected ;}*PTAPE_GET_MEDIA_PARAMETERS ;

typedef struct _TAPE_SET_MEDIA_PARAMETERS {DWORD BlockSize ;}TAPE_SET_MEDIA_PARAMETERS ;
typedef struct _TAPE_SET_MEDIA_PARAMETERS {DWORD BlockSize ;}*PTAPE_SET_MEDIA_PARAMETERS ;

typedef struct _TAPE_CREATE_PARTITION {DWORD Method ;DWORD Count ;DWORD Size ;}TAPE_CREATE_PARTITION ;
typedef struct _TAPE_CREATE_PARTITION {DWORD Method ;DWORD Count ;DWORD Size ;}*PTAPE_CREATE_PARTITION ;

typedef struct _TAPE_WMI_OPERATIONS {DWORD Method ;DWORD DataBufferSize ;PVOID DataBuffer ;}TAPE_WMI_OPERATIONS ;
typedef struct _TAPE_WMI_OPERATIONS {DWORD Method ;DWORD DataBufferSize ;PVOID DataBuffer ;}*PTAPE_WMI_OPERATIONS ;

typedef enum _TAPE_DRIVE_PROBLEM_TYPE {TapeDriveProblemNone ,TapeDriveReadWriteWarning ,TapeDriveReadWriteError ,TapeDriveReadWarning ,TapeDriveWriteWarning ,TapeDriveReadError ,TapeDriveWriteError ,TapeDriveHardwareError ,TapeDriveUnsupportedMedia ,TapeDriveScsiConnectionError ,TapeDriveTimetoClean ,TapeDriveCleanDriveNow ,TapeDriveMediaLifeExpired ,TapeDriveSnappedTape }TAPE_DRIVE_PROBLEM_TYPE ;
typedef DWORD TP_VERSION ;
typedef DWORD *PTP_VERSION ;

typedef struct _TP_CALLBACK_INSTANCE TP_CALLBACK_INSTANCE ;
typedef struct _TP_CALLBACK_INSTANCE *PTP_CALLBACK_INSTANCE ;

typedef void (*PTP_SIMPLE_CALLBACK )(PTP_CALLBACK_INSTANCE Instance ,PVOID Context );
typedef struct _TP_POOL TP_POOL ;
typedef struct _TP_POOL *PTP_POOL ;

typedef enum _TP_CALLBACK_PRIORITY {TP_CALLBACK_PRIORITY_HIGH ,TP_CALLBACK_PRIORITY_NORMAL ,TP_CALLBACK_PRIORITY_LOW ,TP_CALLBACK_PRIORITY_INVALID ,TP_CALLBACK_PRIORITY_COUNT =3 }TP_CALLBACK_PRIORITY ;
typedef struct _TP_POOL_STACK_INFORMATION {SIZE_T StackReserve ;SIZE_T StackCommit ;}TP_POOL_STACK_INFORMATION ;
typedef struct _TP_POOL_STACK_INFORMATION {SIZE_T StackReserve ;SIZE_T StackCommit ;}*PTP_POOL_STACK_INFORMATION ;

typedef struct _TP_CLEANUP_GROUP TP_CLEANUP_GROUP ;
typedef struct _TP_CLEANUP_GROUP *PTP_CLEANUP_GROUP ;

typedef void (*PTP_CLEANUP_GROUP_CANCEL_CALLBACK )(PVOID ObjectContext ,PVOID CleanupContext );
typedef struct _TP_CALLBACK_ENVIRON_V1 {TP_VERSION Version ;PTP_POOL Pool ;PTP_CLEANUP_GROUP CleanupGroup ;PTP_CLEANUP_GROUP_CANCEL_CALLBACK CleanupGroupCancelCallback ;PVOID RaceDll ;struct _ACTIVATION_CONTEXT *ActivationContext ;PTP_SIMPLE_CALLBACK FinalizationCallback ;union {DWORD Flags ;struct {DWORD LongFunction :1 ;DWORD Persistent :1 ;DWORD Private :30 ;}s ;}u ;}TP_CALLBACK_ENVIRON_V1 ;
typedef TP_CALLBACK_ENVIRON_V1 TP_CALLBACK_ENVIRON ;
typedef TP_CALLBACK_ENVIRON_V1 *PTP_CALLBACK_ENVIRON ;

typedef struct _TP_WORK TP_WORK ;
typedef struct _TP_WORK *PTP_WORK ;

typedef void (*PTP_WORK_CALLBACK )(PTP_CALLBACK_INSTANCE Instance ,PVOID Context ,PTP_WORK Work );
typedef struct _TP_TIMER TP_TIMER ;
typedef struct _TP_TIMER *PTP_TIMER ;

typedef void (*PTP_TIMER_CALLBACK )(PTP_CALLBACK_INSTANCE Instance ,PVOID Context ,PTP_TIMER Timer );
typedef DWORD TP_WAIT_RESULT ;
typedef struct _TP_WAIT TP_WAIT ;
typedef struct _TP_WAIT *PTP_WAIT ;

typedef void (*PTP_WAIT_CALLBACK )(PTP_CALLBACK_INSTANCE Instance ,PVOID Context ,PTP_WAIT Wait ,TP_WAIT_RESULT WaitResult );
typedef struct _TP_IO TP_IO ;
typedef struct _TP_IO *PTP_IO ;

struct _TEB *NtCurrentTeb (void );
PVOID GetCurrentFiber (void );
PVOID GetFiberData (void );
// m:\mingw\x86_64-w64-mingw32\include\ktmtypes.h

typedef GUID CRM_PROTOCOL_ID ;
typedef GUID *PCRM_PROTOCOL_ID ;

typedef ULONG NOTIFICATION_MASK ;
typedef struct _TRANSACTION_NOTIFICATION {PVOID TransactionKey ;ULONG TransactionNotification ;LARGE_INTEGER TmVirtualClock ;ULONG ArgumentLength ;}TRANSACTION_NOTIFICATION ;
typedef struct _TRANSACTION_NOTIFICATION {PVOID TransactionKey ;ULONG TransactionNotification ;LARGE_INTEGER TmVirtualClock ;ULONG ArgumentLength ;}*PTRANSACTION_NOTIFICATION ;

typedef struct _TRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT {GUID EnlistmentId ;GUID UOW ;}TRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT ;
typedef struct _TRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT {GUID EnlistmentId ;GUID UOW ;}*PTRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT ;

typedef struct _TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT {GUID TmIdentity ;ULONG Flags ;}TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT ;
typedef struct _TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT {GUID TmIdentity ;ULONG Flags ;}*PTRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT ;

typedef ULONG SAVEPOINT_ID ;
typedef ULONG *PSAVEPOINT_ID ;

typedef struct _TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT {SAVEPOINT_ID SavepointId ;}TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT ;
typedef struct _TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT {SAVEPOINT_ID SavepointId ;}*PTRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT ;

typedef struct _TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT {ULONG PropagationCookie ;GUID UOW ;GUID TmIdentity ;ULONG BufferLength ;}TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT ;
typedef struct _TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT {ULONG PropagationCookie ;GUID UOW ;GUID TmIdentity ;ULONG BufferLength ;}*PTRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT ;

typedef struct _TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT {ULONG MarshalCookie ;GUID UOW ;}TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT ;
typedef struct _TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT {ULONG MarshalCookie ;GUID UOW ;}*PTRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT ;

typedef TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT TRANSACTION_NOTIFICATION_PROMOTE_ARGUMENT ;
typedef TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT *PTRANSACTION_NOTIFICATION_PROMOTE_ARGUMENT ;

typedef struct _KCRM_MARSHAL_HEADER {ULONG VersionMajor ;ULONG VersionMinor ;ULONG NumProtocols ;ULONG Unused ;}KCRM_MARSHAL_HEADER ;
typedef struct _KCRM_MARSHAL_HEADER {ULONG VersionMajor ;ULONG VersionMinor ;ULONG NumProtocols ;ULONG Unused ;}*PKCRM_MARSHAL_HEADER ;
typedef struct _KCRM_MARSHAL_HEADER {ULONG VersionMajor ;ULONG VersionMinor ;ULONG NumProtocols ;ULONG Unused ;}*PRKCRM_MARSHAL_HEADER ;

typedef struct _KCRM_TRANSACTION_BLOB {GUID UOW ;GUID TmIdentity ;ULONG IsolationLevel ;ULONG IsolationFlags ;ULONG Timeout ;WCHAR Description [64 ];}KCRM_TRANSACTION_BLOB ;
typedef struct _KCRM_TRANSACTION_BLOB {GUID UOW ;GUID TmIdentity ;ULONG IsolationLevel ;ULONG IsolationFlags ;ULONG Timeout ;WCHAR Description [64 ];}*PKCRM_TRANSACTION_BLOB ;
typedef struct _KCRM_TRANSACTION_BLOB {GUID UOW ;GUID TmIdentity ;ULONG IsolationLevel ;ULONG IsolationFlags ;ULONG Timeout ;WCHAR Description [64 ];}*PRKCRM_TRANSACTION_BLOB ;

typedef struct _KCRM_PROTOCOL_BLOB {CRM_PROTOCOL_ID ProtocolId ;ULONG StaticInfoLength ;ULONG TransactionIdInfoLength ;ULONG Unused1 ;ULONG Unused2 ;}KCRM_PROTOCOL_BLOB ;
typedef struct _KCRM_PROTOCOL_BLOB {CRM_PROTOCOL_ID ProtocolId ;ULONG StaticInfoLength ;ULONG TransactionIdInfoLength ;ULONG Unused1 ;ULONG Unused2 ;}*PKCRM_PROTOCOL_BLOB ;
typedef struct _KCRM_PROTOCOL_BLOB {CRM_PROTOCOL_ID ProtocolId ;ULONG StaticInfoLength ;ULONG TransactionIdInfoLength ;ULONG Unused1 ;ULONG Unused2 ;}*PRKCRM_PROTOCOL_BLOB ;

// m:\mingw\x86_64-w64-mingw32\include\winnt.h

typedef enum _TRANSACTION_OUTCOME {TransactionOutcomeUndetermined =1 ,TransactionOutcomeCommitted ,TransactionOutcomeAborted }TRANSACTION_OUTCOME ;
typedef enum _TRANSACTION_STATE {TransactionStateNormal =1 ,TransactionStateIndoubt ,TransactionStateCommittedNotify }TRANSACTION_STATE ;
typedef struct _TRANSACTION_BASIC_INFORMATION {GUID TransactionId ;DWORD State ;DWORD Outcome ;}TRANSACTION_BASIC_INFORMATION ;
typedef struct _TRANSACTION_BASIC_INFORMATION {GUID TransactionId ;DWORD State ;DWORD Outcome ;}*PTRANSACTION_BASIC_INFORMATION ;

typedef struct _TRANSACTIONMANAGER_BASIC_INFORMATION {GUID TmIdentity ;LARGE_INTEGER VirtualClock ;}TRANSACTIONMANAGER_BASIC_INFORMATION ;
typedef struct _TRANSACTIONMANAGER_BASIC_INFORMATION {GUID TmIdentity ;LARGE_INTEGER VirtualClock ;}*PTRANSACTIONMANAGER_BASIC_INFORMATION ;

typedef struct _TRANSACTIONMANAGER_LOG_INFORMATION {GUID LogIdentity ;}TRANSACTIONMANAGER_LOG_INFORMATION ;
typedef struct _TRANSACTIONMANAGER_LOG_INFORMATION {GUID LogIdentity ;}*PTRANSACTIONMANAGER_LOG_INFORMATION ;

typedef struct _TRANSACTIONMANAGER_LOGPATH_INFORMATION {DWORD LogPathLength ;WCHAR LogPath [1 ];}TRANSACTIONMANAGER_LOGPATH_INFORMATION ;
typedef struct _TRANSACTIONMANAGER_LOGPATH_INFORMATION {DWORD LogPathLength ;WCHAR LogPath [1 ];}*PTRANSACTIONMANAGER_LOGPATH_INFORMATION ;

typedef struct _TRANSACTIONMANAGER_RECOVERY_INFORMATION {ULONGLONG LastRecoveredLsn ;}TRANSACTIONMANAGER_RECOVERY_INFORMATION ;
typedef struct _TRANSACTIONMANAGER_RECOVERY_INFORMATION {ULONGLONG LastRecoveredLsn ;}*PTRANSACTIONMANAGER_RECOVERY_INFORMATION ;

typedef struct _TRANSACTIONMANAGER_OLDEST_INFORMATION {GUID OldestTransactionGuid ;}TRANSACTIONMANAGER_OLDEST_INFORMATION ;
typedef struct _TRANSACTIONMANAGER_OLDEST_INFORMATION {GUID OldestTransactionGuid ;}*PTRANSACTIONMANAGER_OLDEST_INFORMATION ;

typedef struct _TRANSACTION_PROPERTIES_INFORMATION {DWORD IsolationLevel ;DWORD IsolationFlags ;LARGE_INTEGER Timeout ;DWORD Outcome ;DWORD DescriptionLength ;WCHAR Description [1 ];}TRANSACTION_PROPERTIES_INFORMATION ;
typedef struct _TRANSACTION_PROPERTIES_INFORMATION {DWORD IsolationLevel ;DWORD IsolationFlags ;LARGE_INTEGER Timeout ;DWORD Outcome ;DWORD DescriptionLength ;WCHAR Description [1 ];}*PTRANSACTION_PROPERTIES_INFORMATION ;

typedef struct _TRANSACTION_BIND_INFORMATION {HANDLE TmHandle ;}TRANSACTION_BIND_INFORMATION ;
typedef struct _TRANSACTION_BIND_INFORMATION {HANDLE TmHandle ;}*PTRANSACTION_BIND_INFORMATION ;

typedef struct _TRANSACTION_ENLISTMENT_PAIR {GUID EnlistmentId ;GUID ResourceManagerId ;}TRANSACTION_ENLISTMENT_PAIR ;
typedef struct _TRANSACTION_ENLISTMENT_PAIR {GUID EnlistmentId ;GUID ResourceManagerId ;}*PTRANSACTION_ENLISTMENT_PAIR ;

typedef struct _TRANSACTION_ENLISTMENTS_INFORMATION {DWORD NumberOfEnlistments ;TRANSACTION_ENLISTMENT_PAIR EnlistmentPair [1 ];}TRANSACTION_ENLISTMENTS_INFORMATION ;
typedef struct _TRANSACTION_ENLISTMENTS_INFORMATION {DWORD NumberOfEnlistments ;TRANSACTION_ENLISTMENT_PAIR EnlistmentPair [1 ];}*PTRANSACTION_ENLISTMENTS_INFORMATION ;

typedef struct _TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION {TRANSACTION_ENLISTMENT_PAIR SuperiorEnlistmentPair ;}TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION ;
typedef struct _TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION {TRANSACTION_ENLISTMENT_PAIR SuperiorEnlistmentPair ;}*PTRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION ;

typedef struct _RESOURCEMANAGER_BASIC_INFORMATION {GUID ResourceManagerId ;DWORD DescriptionLength ;WCHAR Description [1 ];}RESOURCEMANAGER_BASIC_INFORMATION ;
typedef struct _RESOURCEMANAGER_BASIC_INFORMATION {GUID ResourceManagerId ;DWORD DescriptionLength ;WCHAR Description [1 ];}*PRESOURCEMANAGER_BASIC_INFORMATION ;

typedef struct _RESOURCEMANAGER_COMPLETION_INFORMATION {HANDLE IoCompletionPortHandle ;ULONG_PTR CompletionKey ;}RESOURCEMANAGER_COMPLETION_INFORMATION ;
typedef struct _RESOURCEMANAGER_COMPLETION_INFORMATION {HANDLE IoCompletionPortHandle ;ULONG_PTR CompletionKey ;}*PRESOURCEMANAGER_COMPLETION_INFORMATION ;

typedef enum _TRANSACTION_INFORMATION_CLASS {TransactionBasicInformation ,TransactionPropertiesInformation ,TransactionEnlistmentInformation ,TransactionSuperiorEnlistmentInformation ,TransactionBindInformation ,TransactionDTCPrivateInformation }TRANSACTION_INFORMATION_CLASS ;
typedef enum _TRANSACTIONMANAGER_INFORMATION_CLASS {TransactionManagerBasicInformation ,TransactionManagerLogInformation ,TransactionManagerLogPathInformation ,TransactionManagerOnlineProbeInformation =3 ,TransactionManagerRecoveryInformation =4 ,TransactionManagerOldestTransactionInformation =5 }TRANSACTIONMANAGER_INFORMATION_CLASS ;
typedef enum _RESOURCEMANAGER_INFORMATION_CLASS {ResourceManagerBasicInformation ,ResourceManagerCompletionInformation }RESOURCEMANAGER_INFORMATION_CLASS ;
typedef struct _ENLISTMENT_BASIC_INFORMATION {GUID EnlistmentId ;GUID TransactionId ;GUID ResourceManagerId ;}ENLISTMENT_BASIC_INFORMATION ;
typedef struct _ENLISTMENT_BASIC_INFORMATION {GUID EnlistmentId ;GUID TransactionId ;GUID ResourceManagerId ;}*PENLISTMENT_BASIC_INFORMATION ;

typedef struct _ENLISTMENT_CRM_INFORMATION {GUID CrmTransactionManagerId ;GUID CrmResourceManagerId ;GUID CrmEnlistmentId ;}ENLISTMENT_CRM_INFORMATION ;
typedef struct _ENLISTMENT_CRM_INFORMATION {GUID CrmTransactionManagerId ;GUID CrmResourceManagerId ;GUID CrmEnlistmentId ;}*PENLISTMENT_CRM_INFORMATION ;

typedef enum _ENLISTMENT_INFORMATION_CLASS {EnlistmentBasicInformation ,EnlistmentRecoveryInformation ,EnlistmentCrmInformation }ENLISTMENT_INFORMATION_CLASS ;
typedef struct _TRANSACTION_LIST_ENTRY {GUID UOW ;}TRANSACTION_LIST_ENTRY ;
typedef struct _TRANSACTION_LIST_ENTRY {GUID UOW ;}*PTRANSACTION_LIST_ENTRY ;

typedef struct _TRANSACTION_LIST_INFORMATION {DWORD NumberOfTransactions ;TRANSACTION_LIST_ENTRY TransactionInformation [1 ];}TRANSACTION_LIST_INFORMATION ;
typedef struct _TRANSACTION_LIST_INFORMATION {DWORD NumberOfTransactions ;TRANSACTION_LIST_ENTRY TransactionInformation [1 ];}*PTRANSACTION_LIST_INFORMATION ;

typedef enum _KTMOBJECT_TYPE {KTMOBJECT_TRANSACTION ,KTMOBJECT_TRANSACTION_MANAGER ,KTMOBJECT_RESOURCE_MANAGER ,KTMOBJECT_ENLISTMENT ,KTMOBJECT_INVALID }KTMOBJECT_TYPE ;
typedef enum _KTMOBJECT_TYPE *PKTMOBJECT_TYPE ;

typedef struct _KTMOBJECT_CURSOR {GUID LastQuery ;DWORD ObjectIdCount ;GUID ObjectIds [1 ];}KTMOBJECT_CURSOR ;
typedef struct _KTMOBJECT_CURSOR {GUID LastQuery ;DWORD ObjectIdCount ;GUID ObjectIds [1 ];}*PKTMOBJECT_CURSOR ;

typedef struct _WOW64_FLOATING_SAVE_AREA {DWORD ControlWord ;DWORD StatusWord ;DWORD TagWord ;DWORD ErrorOffset ;DWORD ErrorSelector ;DWORD DataOffset ;DWORD DataSelector ;BYTE RegisterArea [80 ];DWORD Cr0NpxState ;}WOW64_FLOATING_SAVE_AREA ;
typedef struct _WOW64_FLOATING_SAVE_AREA {DWORD ControlWord ;DWORD StatusWord ;DWORD TagWord ;DWORD ErrorOffset ;DWORD ErrorSelector ;DWORD DataOffset ;DWORD DataSelector ;BYTE RegisterArea [80 ];DWORD Cr0NpxState ;}*PWOW64_FLOATING_SAVE_AREA ;

typedef struct _WOW64_CONTEXT {DWORD ContextFlags ;DWORD Dr0 ;DWORD Dr1 ;DWORD Dr2 ;DWORD Dr3 ;DWORD Dr6 ;DWORD Dr7 ;WOW64_FLOATING_SAVE_AREA FloatSave ;DWORD SegGs ;DWORD SegFs ;DWORD SegEs ;DWORD SegDs ;DWORD Edi ;DWORD Esi ;DWORD Ebx ;DWORD Edx ;DWORD Ecx ;DWORD Eax ;DWORD Ebp ;DWORD Eip ;DWORD SegCs ;DWORD EFlags ;DWORD Esp ;DWORD SegSs ;BYTE ExtendedRegisters [512 ];}WOW64_CONTEXT ;
typedef struct _WOW64_CONTEXT {DWORD ContextFlags ;DWORD Dr0 ;DWORD Dr1 ;DWORD Dr2 ;DWORD Dr3 ;DWORD Dr6 ;DWORD Dr7 ;WOW64_FLOATING_SAVE_AREA FloatSave ;DWORD SegGs ;DWORD SegFs ;DWORD SegEs ;DWORD SegDs ;DWORD Edi ;DWORD Esi ;DWORD Ebx ;DWORD Edx ;DWORD Ecx ;DWORD Eax ;DWORD Ebp ;DWORD Eip ;DWORD SegCs ;DWORD EFlags ;DWORD Esp ;DWORD SegSs ;BYTE ExtendedRegisters [512 ];}*PWOW64_CONTEXT ;

typedef struct _WOW64_LDT_ENTRY {WORD LimitLow ;WORD BaseLow ;union {struct {BYTE BaseMid ;BYTE Flags1 ;BYTE Flags2 ;BYTE BaseHi ;}Bytes ;struct {DWORD BaseMid :8 ;DWORD Type :5 ;DWORD Dpl :2 ;DWORD Pres :1 ;DWORD LimitHi :4 ;DWORD Sys :1 ;DWORD Reserved_0 :1 ;DWORD Default_Big :1 ;DWORD Granularity :1 ;DWORD BaseHi :8 ;}Bits ;}HighWord ;}WOW64_LDT_ENTRY ;
typedef struct _WOW64_LDT_ENTRY {WORD LimitLow ;WORD BaseLow ;union {struct {BYTE BaseMid ;BYTE Flags1 ;BYTE Flags2 ;BYTE BaseHi ;}Bytes ;struct {DWORD BaseMid :8 ;DWORD Type :5 ;DWORD Dpl :2 ;DWORD Pres :1 ;DWORD LimitHi :4 ;DWORD Sys :1 ;DWORD Reserved_0 :1 ;DWORD Default_Big :1 ;DWORD Granularity :1 ;DWORD BaseHi :8 ;}Bits ;}HighWord ;}*PWOW64_LDT_ENTRY ;

typedef struct _WOW64_DESCRIPTOR_TABLE_ENTRY {DWORD Selector ;WOW64_LDT_ENTRY Descriptor ;}WOW64_DESCRIPTOR_TABLE_ENTRY ;
typedef struct _WOW64_DESCRIPTOR_TABLE_ENTRY {DWORD Selector ;WOW64_LDT_ENTRY Descriptor ;}*PWOW64_DESCRIPTOR_TABLE_ENTRY ;

// m:\mingw\x86_64-w64-mingw32\include\minwindef.h

typedef UINT_PTR WPARAM ;
typedef LONG_PTR LPARAM ;
typedef LONG_PTR LRESULT ;
typedef HANDLE *SPHANDLE ;
typedef HANDLE *LPHANDLE ;
typedef HANDLE HGLOBAL ;
typedef HANDLE HLOCAL ;
typedef HANDLE GLOBALHANDLE ;
typedef HANDLE LOCALHANDLE ;
typedef INT_PTR (*FARPROC )();
typedef INT_PTR (*NEARPROC )();
typedef INT_PTR (*PROC )();
typedef WORD ATOM ;
typedef int HFILE ;
struct HINSTANCE__ {int unused ;};
typedef struct HINSTANCE__ *HINSTANCE ;
struct HKEY__ {int unused ;};
typedef struct HKEY__ *HKEY ;
typedef HKEY *PHKEY ;
struct HKL__ {int unused ;};
typedef struct HKL__ *HKL ;
struct HLSURF__ {int unused ;};
typedef struct HLSURF__ *HLSURF ;
struct HMETAFILE__ {int unused ;};
typedef struct HMETAFILE__ *HMETAFILE ;
typedef HINSTANCE HMODULE ;
struct HRGN__ {int unused ;};
typedef struct HRGN__ *HRGN ;
struct HRSRC__ {int unused ;};
typedef struct HRSRC__ *HRSRC ;
struct HSPRITE__ {int unused ;};
typedef struct HSPRITE__ *HSPRITE ;
struct HSTR__ {int unused ;};
typedef struct HSTR__ *HSTR ;
struct HTASK__ {int unused ;};
typedef struct HTASK__ *HTASK ;
struct HWINSTA__ {int unused ;};
typedef struct HWINSTA__ *HWINSTA ;
typedef struct _FILETIME {DWORD dwLowDateTime ;DWORD dwHighDateTime ;}FILETIME ;
typedef struct _FILETIME {DWORD dwLowDateTime ;DWORD dwHighDateTime ;}*PFILETIME ;
typedef struct _FILETIME {DWORD dwLowDateTime ;DWORD dwHighDateTime ;}*LPFILETIME ;

// m:\mingw\x86_64-w64-mingw32\include\windef.h

struct HWND__ {int unused ;};
typedef struct HWND__ *HWND ;
struct HHOOK__ {int unused ;};
typedef struct HHOOK__ *HHOOK ;
typedef void *HGDIOBJ ;
struct HACCEL__ {int unused ;};
typedef struct HACCEL__ *HACCEL ;
struct HBITMAP__ {int unused ;};
typedef struct HBITMAP__ *HBITMAP ;
struct HBRUSH__ {int unused ;};
typedef struct HBRUSH__ *HBRUSH ;
struct HCOLORSPACE__ {int unused ;};
typedef struct HCOLORSPACE__ *HCOLORSPACE ;
struct HDC__ {int unused ;};
typedef struct HDC__ *HDC ;
struct HGLRC__ {int unused ;};
typedef struct HGLRC__ *HGLRC ;
struct HDESK__ {int unused ;};
typedef struct HDESK__ *HDESK ;
struct HENHMETAFILE__ {int unused ;};
typedef struct HENHMETAFILE__ *HENHMETAFILE ;
struct HFONT__ {int unused ;};
typedef struct HFONT__ *HFONT ;
struct HICON__ {int unused ;};
typedef struct HICON__ *HICON ;
struct HMENU__ {int unused ;};
typedef struct HMENU__ *HMENU ;
struct HPALETTE__ {int unused ;};
typedef struct HPALETTE__ *HPALETTE ;
struct HPEN__ {int unused ;};
typedef struct HPEN__ *HPEN ;
struct HMONITOR__ {int unused ;};
typedef struct HMONITOR__ *HMONITOR ;
struct HWINEVENTHOOK__ {int unused ;};
typedef struct HWINEVENTHOOK__ *HWINEVENTHOOK ;
typedef HICON HCURSOR ;
typedef DWORD COLORREF ;
struct HUMPD__ {int unused ;};
typedef struct HUMPD__ *HUMPD ;
typedef DWORD *LPCOLORREF ;
typedef struct tagRECT {LONG left ;LONG top ;LONG right ;LONG bottom ;}RECT ;
typedef struct tagRECT {LONG left ;LONG top ;LONG right ;LONG bottom ;}*PRECT ;
typedef struct tagRECT {LONG left ;LONG top ;LONG right ;LONG bottom ;}*NPRECT ;
typedef struct tagRECT {LONG left ;LONG top ;LONG right ;LONG bottom ;}*LPRECT ;

typedef const RECT *LPCRECT ;
typedef struct _RECTL {LONG left ;LONG top ;LONG right ;LONG bottom ;}RECTL ;
typedef struct _RECTL {LONG left ;LONG top ;LONG right ;LONG bottom ;}*PRECTL ;
typedef struct _RECTL {LONG left ;LONG top ;LONG right ;LONG bottom ;}*LPRECTL ;

typedef const RECTL *LPCRECTL ;
typedef struct tagPOINT {LONG x ;LONG y ;}POINT ;
typedef struct tagPOINT {LONG x ;LONG y ;}*PPOINT ;
typedef struct tagPOINT {LONG x ;LONG y ;}*NPPOINT ;
typedef struct tagPOINT {LONG x ;LONG y ;}*LPPOINT ;

typedef struct _POINTL {LONG x ;LONG y ;}POINTL ;
typedef struct _POINTL {LONG x ;LONG y ;}*PPOINTL ;

typedef struct tagSIZE {LONG cx ;LONG cy ;}SIZE ;
typedef struct tagSIZE {LONG cx ;LONG cy ;}*PSIZE ;
typedef struct tagSIZE {LONG cx ;LONG cy ;}*LPSIZE ;

typedef SIZE SIZEL ;
typedef SIZE *PSIZEL ;
typedef SIZE *LPSIZEL ;

typedef struct tagPOINTS {SHORT x ;SHORT y ;}POINTS ;
typedef struct tagPOINTS {SHORT x ;SHORT y ;}*PPOINTS ;
typedef struct tagPOINTS {SHORT x ;SHORT y ;}*LPPOINTS ;

// m:\mingw\x86_64-w64-mingw32\include\minwinbase.h

typedef struct _SECURITY_ATTRIBUTES {DWORD nLength ;LPVOID lpSecurityDescriptor ;WINBOOL bInheritHandle ;}SECURITY_ATTRIBUTES ;
typedef struct _SECURITY_ATTRIBUTES {DWORD nLength ;LPVOID lpSecurityDescriptor ;WINBOOL bInheritHandle ;}*PSECURITY_ATTRIBUTES ;
typedef struct _SECURITY_ATTRIBUTES {DWORD nLength ;LPVOID lpSecurityDescriptor ;WINBOOL bInheritHandle ;}*LPSECURITY_ATTRIBUTES ;

typedef struct _OVERLAPPED {ULONG_PTR Internal ;ULONG_PTR InternalHigh ;union {struct {DWORD Offset ;DWORD OffsetHigh ;};PVOID Pointer ;};HANDLE hEvent ;}OVERLAPPED ;
typedef struct _OVERLAPPED {ULONG_PTR Internal ;ULONG_PTR InternalHigh ;union {struct {DWORD Offset ;DWORD OffsetHigh ;};PVOID Pointer ;};HANDLE hEvent ;}*LPOVERLAPPED ;

typedef struct _OVERLAPPED_ENTRY {ULONG_PTR lpCompletionKey ;LPOVERLAPPED lpOverlapped ;ULONG_PTR Internal ;DWORD dwNumberOfBytesTransferred ;}OVERLAPPED_ENTRY ;
typedef struct _OVERLAPPED_ENTRY {ULONG_PTR lpCompletionKey ;LPOVERLAPPED lpOverlapped ;ULONG_PTR Internal ;DWORD dwNumberOfBytesTransferred ;}*LPOVERLAPPED_ENTRY ;

typedef struct _SYSTEMTIME {WORD wYear ;WORD wMonth ;WORD wDayOfWeek ;WORD wDay ;WORD wHour ;WORD wMinute ;WORD wSecond ;WORD wMilliseconds ;}SYSTEMTIME ;
typedef struct _SYSTEMTIME {WORD wYear ;WORD wMonth ;WORD wDayOfWeek ;WORD wDay ;WORD wHour ;WORD wMinute ;WORD wSecond ;WORD wMilliseconds ;}*PSYSTEMTIME ;
typedef struct _SYSTEMTIME {WORD wYear ;WORD wMonth ;WORD wDayOfWeek ;WORD wDay ;WORD wHour ;WORD wMinute ;WORD wSecond ;WORD wMilliseconds ;}*LPSYSTEMTIME ;

typedef struct _WIN32_FIND_DATAA {DWORD dwFileAttributes ;FILETIME ftCreationTime ;FILETIME ftLastAccessTime ;FILETIME ftLastWriteTime ;DWORD nFileSizeHigh ;DWORD nFileSizeLow ;DWORD dwReserved0 ;DWORD dwReserved1 ;CHAR cFileName [260 ];CHAR cAlternateFileName [14 ];}WIN32_FIND_DATAA ;
typedef struct _WIN32_FIND_DATAA {DWORD dwFileAttributes ;FILETIME ftCreationTime ;FILETIME ftLastAccessTime ;FILETIME ftLastWriteTime ;DWORD nFileSizeHigh ;DWORD nFileSizeLow ;DWORD dwReserved0 ;DWORD dwReserved1 ;CHAR cFileName [260 ];CHAR cAlternateFileName [14 ];}*PWIN32_FIND_DATAA ;
typedef struct _WIN32_FIND_DATAA {DWORD dwFileAttributes ;FILETIME ftCreationTime ;FILETIME ftLastAccessTime ;FILETIME ftLastWriteTime ;DWORD nFileSizeHigh ;DWORD nFileSizeLow ;DWORD dwReserved0 ;DWORD dwReserved1 ;CHAR cFileName [260 ];CHAR cAlternateFileName [14 ];}*LPWIN32_FIND_DATAA ;

typedef struct _WIN32_FIND_DATAW {DWORD dwFileAttributes ;FILETIME ftCreationTime ;FILETIME ftLastAccessTime ;FILETIME ftLastWriteTime ;DWORD nFileSizeHigh ;DWORD nFileSizeLow ;DWORD dwReserved0 ;DWORD dwReserved1 ;WCHAR cFileName [260 ];WCHAR cAlternateFileName [14 ];}WIN32_FIND_DATAW ;
typedef struct _WIN32_FIND_DATAW {DWORD dwFileAttributes ;FILETIME ftCreationTime ;FILETIME ftLastAccessTime ;FILETIME ftLastWriteTime ;DWORD nFileSizeHigh ;DWORD nFileSizeLow ;DWORD dwReserved0 ;DWORD dwReserved1 ;WCHAR cFileName [260 ];WCHAR cAlternateFileName [14 ];}*PWIN32_FIND_DATAW ;
typedef struct _WIN32_FIND_DATAW {DWORD dwFileAttributes ;FILETIME ftCreationTime ;FILETIME ftLastAccessTime ;FILETIME ftLastWriteTime ;DWORD nFileSizeHigh ;DWORD nFileSizeLow ;DWORD dwReserved0 ;DWORD dwReserved1 ;WCHAR cFileName [260 ];WCHAR cAlternateFileName [14 ];}*LPWIN32_FIND_DATAW ;

typedef WIN32_FIND_DATAA WIN32_FIND_DATA ;
typedef PWIN32_FIND_DATAA PWIN32_FIND_DATA ;
typedef LPWIN32_FIND_DATAA LPWIN32_FIND_DATA ;
typedef enum _FINDEX_INFO_LEVELS {FindExInfoStandard ,FindExInfoBasic ,FindExInfoMaxInfoLevel }FINDEX_INFO_LEVELS ;
typedef enum _FINDEX_SEARCH_OPS {FindExSearchNameMatch ,FindExSearchLimitToDirectories ,FindExSearchLimitToDevices ,FindExSearchMaxSearchOp }FINDEX_SEARCH_OPS ;
typedef enum _GET_FILEEX_INFO_LEVELS {GetFileExInfoStandard ,GetFileExMaxInfoLevel }GET_FILEEX_INFO_LEVELS ;
typedef RTL_CRITICAL_SECTION CRITICAL_SECTION ;
typedef PRTL_CRITICAL_SECTION PCRITICAL_SECTION ;
typedef PRTL_CRITICAL_SECTION LPCRITICAL_SECTION ;
typedef RTL_CRITICAL_SECTION_DEBUG CRITICAL_SECTION_DEBUG ;
typedef PRTL_CRITICAL_SECTION_DEBUG PCRITICAL_SECTION_DEBUG ;
typedef PRTL_CRITICAL_SECTION_DEBUG LPCRITICAL_SECTION_DEBUG ;
typedef void (*LPOVERLAPPED_COMPLETION_ROUTINE )(DWORD dwErrorCode ,DWORD dwNumberOfBytesTransfered ,LPOVERLAPPED lpOverlapped );
typedef struct _PROCESS_HEAP_ENTRY {PVOID lpData ;DWORD cbData ;BYTE cbOverhead ;BYTE iRegionIndex ;WORD wFlags ;union {struct {HANDLE hMem ;DWORD dwReserved [3 ];}Block ;struct {DWORD dwCommittedSize ;DWORD dwUnCommittedSize ;LPVOID lpFirstBlock ;LPVOID lpLastBlock ;}Region ;};}PROCESS_HEAP_ENTRY ;
typedef struct _PROCESS_HEAP_ENTRY {PVOID lpData ;DWORD cbData ;BYTE cbOverhead ;BYTE iRegionIndex ;WORD wFlags ;union {struct {HANDLE hMem ;DWORD dwReserved [3 ];}Block ;struct {DWORD dwCommittedSize ;DWORD dwUnCommittedSize ;LPVOID lpFirstBlock ;LPVOID lpLastBlock ;}Region ;};}*LPPROCESS_HEAP_ENTRY ;
typedef struct _PROCESS_HEAP_ENTRY {PVOID lpData ;DWORD cbData ;BYTE cbOverhead ;BYTE iRegionIndex ;WORD wFlags ;union {struct {HANDLE hMem ;DWORD dwReserved [3 ];}Block ;struct {DWORD dwCommittedSize ;DWORD dwUnCommittedSize ;LPVOID lpFirstBlock ;LPVOID lpLastBlock ;}Region ;};}*PPROCESS_HEAP_ENTRY ;

typedef struct _REASON_CONTEXT {ULONG Version ;DWORD Flags ;union {struct {HMODULE LocalizedReasonModule ;ULONG LocalizedReasonId ;ULONG ReasonStringCount ;LPWSTR *ReasonStrings ;}Detailed ;LPWSTR SimpleReasonString ;}Reason ;}REASON_CONTEXT ;
typedef struct _REASON_CONTEXT {ULONG Version ;DWORD Flags ;union {struct {HMODULE LocalizedReasonModule ;ULONG LocalizedReasonId ;ULONG ReasonStringCount ;LPWSTR *ReasonStrings ;}Detailed ;LPWSTR SimpleReasonString ;}Reason ;}*PREASON_CONTEXT ;

typedef DWORD (*PTHREAD_START_ROUTINE )(LPVOID lpThreadParameter );
typedef PTHREAD_START_ROUTINE LPTHREAD_START_ROUTINE ;
typedef struct _EXCEPTION_DEBUG_INFO {EXCEPTION_RECORD ExceptionRecord ;DWORD dwFirstChance ;}EXCEPTION_DEBUG_INFO ;
typedef struct _EXCEPTION_DEBUG_INFO {EXCEPTION_RECORD ExceptionRecord ;DWORD dwFirstChance ;}*LPEXCEPTION_DEBUG_INFO ;

typedef struct _CREATE_THREAD_DEBUG_INFO {HANDLE hThread ;LPVOID lpThreadLocalBase ;LPTHREAD_START_ROUTINE lpStartAddress ;}CREATE_THREAD_DEBUG_INFO ;
typedef struct _CREATE_THREAD_DEBUG_INFO {HANDLE hThread ;LPVOID lpThreadLocalBase ;LPTHREAD_START_ROUTINE lpStartAddress ;}*LPCREATE_THREAD_DEBUG_INFO ;

typedef struct _CREATE_PROCESS_DEBUG_INFO {HANDLE hFile ;HANDLE hProcess ;HANDLE hThread ;LPVOID lpBaseOfImage ;DWORD dwDebugInfoFileOffset ;DWORD nDebugInfoSize ;LPVOID lpThreadLocalBase ;LPTHREAD_START_ROUTINE lpStartAddress ;LPVOID lpImageName ;WORD fUnicode ;}CREATE_PROCESS_DEBUG_INFO ;
typedef struct _CREATE_PROCESS_DEBUG_INFO {HANDLE hFile ;HANDLE hProcess ;HANDLE hThread ;LPVOID lpBaseOfImage ;DWORD dwDebugInfoFileOffset ;DWORD nDebugInfoSize ;LPVOID lpThreadLocalBase ;LPTHREAD_START_ROUTINE lpStartAddress ;LPVOID lpImageName ;WORD fUnicode ;}*LPCREATE_PROCESS_DEBUG_INFO ;

typedef struct _EXIT_THREAD_DEBUG_INFO {DWORD dwExitCode ;}EXIT_THREAD_DEBUG_INFO ;
typedef struct _EXIT_THREAD_DEBUG_INFO {DWORD dwExitCode ;}*LPEXIT_THREAD_DEBUG_INFO ;

typedef struct _EXIT_PROCESS_DEBUG_INFO {DWORD dwExitCode ;}EXIT_PROCESS_DEBUG_INFO ;
typedef struct _EXIT_PROCESS_DEBUG_INFO {DWORD dwExitCode ;}*LPEXIT_PROCESS_DEBUG_INFO ;

typedef struct _LOAD_DLL_DEBUG_INFO {HANDLE hFile ;LPVOID lpBaseOfDll ;DWORD dwDebugInfoFileOffset ;DWORD nDebugInfoSize ;LPVOID lpImageName ;WORD fUnicode ;}LOAD_DLL_DEBUG_INFO ;
typedef struct _LOAD_DLL_DEBUG_INFO {HANDLE hFile ;LPVOID lpBaseOfDll ;DWORD dwDebugInfoFileOffset ;DWORD nDebugInfoSize ;LPVOID lpImageName ;WORD fUnicode ;}*LPLOAD_DLL_DEBUG_INFO ;

typedef struct _UNLOAD_DLL_DEBUG_INFO {LPVOID lpBaseOfDll ;}UNLOAD_DLL_DEBUG_INFO ;
typedef struct _UNLOAD_DLL_DEBUG_INFO {LPVOID lpBaseOfDll ;}*LPUNLOAD_DLL_DEBUG_INFO ;

typedef struct _OUTPUT_DEBUG_STRING_INFO {LPSTR lpDebugStringData ;WORD fUnicode ;WORD nDebugStringLength ;}OUTPUT_DEBUG_STRING_INFO ;
typedef struct _OUTPUT_DEBUG_STRING_INFO {LPSTR lpDebugStringData ;WORD fUnicode ;WORD nDebugStringLength ;}*LPOUTPUT_DEBUG_STRING_INFO ;

typedef struct _RIP_INFO {DWORD dwError ;DWORD dwType ;}RIP_INFO ;
typedef struct _RIP_INFO {DWORD dwError ;DWORD dwType ;}*LPRIP_INFO ;

typedef struct _DEBUG_EVENT {DWORD dwDebugEventCode ;DWORD dwProcessId ;DWORD dwThreadId ;union {EXCEPTION_DEBUG_INFO Exception ;CREATE_THREAD_DEBUG_INFO CreateThread ;CREATE_PROCESS_DEBUG_INFO CreateProcessInfo ;EXIT_THREAD_DEBUG_INFO ExitThread ;EXIT_PROCESS_DEBUG_INFO ExitProcess ;LOAD_DLL_DEBUG_INFO LoadDll ;UNLOAD_DLL_DEBUG_INFO UnloadDll ;OUTPUT_DEBUG_STRING_INFO DebugString ;RIP_INFO RipInfo ;}u ;}DEBUG_EVENT ;
typedef struct _DEBUG_EVENT {DWORD dwDebugEventCode ;DWORD dwProcessId ;DWORD dwThreadId ;union {EXCEPTION_DEBUG_INFO Exception ;CREATE_THREAD_DEBUG_INFO CreateThread ;CREATE_PROCESS_DEBUG_INFO CreateProcessInfo ;EXIT_THREAD_DEBUG_INFO ExitThread ;EXIT_PROCESS_DEBUG_INFO ExitProcess ;LOAD_DLL_DEBUG_INFO LoadDll ;UNLOAD_DLL_DEBUG_INFO UnloadDll ;OUTPUT_DEBUG_STRING_INFO DebugString ;RIP_INFO RipInfo ;}u ;}*LPDEBUG_EVENT ;

typedef PCONTEXT LPCONTEXT ;
// m:\mingw\x86_64-w64-mingw32\include\bemapiset.h

typedef struct _CONTRACT_DESCRIPTION CONTRACT_DESCRIPTION ;
typedef struct _BEM_REFERENCE BEM_REFERENCE ;
typedef void (*BEM_FREE_INTERFACE_CALLBACK )(void *interfaceInstance );
HRESULT BemCreateReference (const GUID *const iid ,void *interfaceInstance ,BEM_FREE_INTERFACE_CALLBACK freeCallback ,BEM_REFERENCE **reference );
HRESULT BemCreateContractFrom (LPCWSTR dllPath ,const GUID *const extensionId ,const CONTRACT_DESCRIPTION *contractDescription ,void *hostContract ,void **contract );
HRESULT BemCopyReference (BEM_REFERENCE *reference ,BEM_REFERENCE **copiedReference );
void BemFreeReference (BEM_REFERENCE *reference );
void BemFreeContract (void *contract );
// m:\mingw\x86_64-w64-mingw32\include\debugapi.h

WINBOOL IsDebuggerPresent (void );
void OutputDebugStringA (LPCSTR lpOutputString );
void OutputDebugStringW (LPCWSTR lpOutputString );
void DebugBreak (void );
WINBOOL ContinueDebugEvent (DWORD dwProcessId ,DWORD dwThreadId ,DWORD dwContinueStatus );
WINBOOL WaitForDebugEvent (LPDEBUG_EVENT lpDebugEvent ,DWORD dwMilliseconds );
WINBOOL DebugActiveProcess (DWORD dwProcessId );
WINBOOL DebugActiveProcessStop (DWORD dwProcessId );
WINBOOL CheckRemoteDebuggerPresent (HANDLE hProcess ,PBOOL pbDebuggerPresent );
// m:\mingw\x86_64-w64-mingw32\include\errhandlingapi.h

typedef LONG (*PTOP_LEVEL_EXCEPTION_FILTER )(struct _EXCEPTION_POINTERS *ExceptionInfo );
typedef PTOP_LEVEL_EXCEPTION_FILTER LPTOP_LEVEL_EXCEPTION_FILTER ;
LONG UnhandledExceptionFilter (struct _EXCEPTION_POINTERS *ExceptionInfo );
LPTOP_LEVEL_EXCEPTION_FILTER SetUnhandledExceptionFilter (LPTOP_LEVEL_EXCEPTION_FILTER lpTopLevelExceptionFilter );
UINT SetErrorMode (UINT uMode );
PVOID AddVectoredExceptionHandler (ULONG First ,PVECTORED_EXCEPTION_HANDLER Handler );
ULONG RemoveVectoredExceptionHandler (PVOID Handle );
PVOID AddVectoredContinueHandler (ULONG First ,PVECTORED_EXCEPTION_HANDLER Handler );
ULONG RemoveVectoredContinueHandler (PVOID Handle );
void RaiseException (DWORD dwExceptionCode ,DWORD dwExceptionFlags ,DWORD nNumberOfArguments ,const ULONG_PTR *lpArguments );
DWORD GetLastError (void );
void SetLastError (DWORD dwErrCode );
// m:\mingw\x86_64-w64-mingw32\include\fileapi.h

typedef struct _BY_HANDLE_FILE_INFORMATION {DWORD dwFileAttributes ;FILETIME ftCreationTime ;FILETIME ftLastAccessTime ;FILETIME ftLastWriteTime ;DWORD dwVolumeSerialNumber ;DWORD nFileSizeHigh ;DWORD nFileSizeLow ;DWORD nNumberOfLinks ;DWORD nFileIndexHigh ;DWORD nFileIndexLow ;}BY_HANDLE_FILE_INFORMATION ;
typedef struct _BY_HANDLE_FILE_INFORMATION {DWORD dwFileAttributes ;FILETIME ftCreationTime ;FILETIME ftLastAccessTime ;FILETIME ftLastWriteTime ;DWORD dwVolumeSerialNumber ;DWORD nFileSizeHigh ;DWORD nFileSizeLow ;DWORD nNumberOfLinks ;DWORD nFileIndexHigh ;DWORD nFileIndexLow ;}*PBY_HANDLE_FILE_INFORMATION ;
typedef struct _BY_HANDLE_FILE_INFORMATION {DWORD dwFileAttributes ;FILETIME ftCreationTime ;FILETIME ftLastAccessTime ;FILETIME ftLastWriteTime ;DWORD dwVolumeSerialNumber ;DWORD nFileSizeHigh ;DWORD nFileSizeLow ;DWORD nNumberOfLinks ;DWORD nFileIndexHigh ;DWORD nFileIndexLow ;}*LPBY_HANDLE_FILE_INFORMATION ;

LONG CompareFileTime (const FILETIME *lpFileTime1 ,const FILETIME *lpFileTime2 );
HANDLE CreateFileA (LPCSTR lpFileName ,DWORD dwDesiredAccess ,DWORD dwShareMode ,LPSECURITY_ATTRIBUTES lpSecurityAttributes ,DWORD dwCreationDisposition ,DWORD dwFlagsAndAttributes ,HANDLE hTemplateFile );
HANDLE CreateFileW (LPCWSTR lpFileName ,DWORD dwDesiredAccess ,DWORD dwShareMode ,LPSECURITY_ATTRIBUTES lpSecurityAttributes ,DWORD dwCreationDisposition ,DWORD dwFlagsAndAttributes ,HANDLE hTemplateFile );
WINBOOL DefineDosDeviceW (DWORD dwFlags ,LPCWSTR lpDeviceName ,LPCWSTR lpTargetPath );
WINBOOL DeleteVolumeMountPointW (LPCWSTR lpszVolumeMountPoint );
WINBOOL FileTimeToLocalFileTime (const FILETIME *lpFileTime ,LPFILETIME lpLocalFileTime );
WINBOOL FindCloseChangeNotification (HANDLE hChangeHandle );
HANDLE FindFirstChangeNotificationA (LPCSTR lpPathName ,WINBOOL bWatchSubtree ,DWORD dwNotifyFilter );
HANDLE FindFirstChangeNotificationW (LPCWSTR lpPathName ,WINBOOL bWatchSubtree ,DWORD dwNotifyFilter );
HANDLE FindFirstFileA (LPCSTR lpFileName ,LPWIN32_FIND_DATAA lpFindFileData );
HANDLE FindFirstFileW (LPCWSTR lpFileName ,LPWIN32_FIND_DATAW lpFindFileData );
HANDLE FindFirstVolumeW (LPWSTR lpszVolumeName ,DWORD cchBufferLength );
WINBOOL FindNextChangeNotification (HANDLE hChangeHandle );
WINBOOL FindNextVolumeW (HANDLE hFindVolume ,LPWSTR lpszVolumeName ,DWORD cchBufferLength );
WINBOOL FindVolumeClose (HANDLE hFindVolume );
WINBOOL GetDiskFreeSpaceA (LPCSTR lpRootPathName ,LPDWORD lpSectorsPerCluster ,LPDWORD lpBytesPerSector ,LPDWORD lpNumberOfFreeClusters ,LPDWORD lpTotalNumberOfClusters );
WINBOOL GetDiskFreeSpaceW (LPCWSTR lpRootPathName ,LPDWORD lpSectorsPerCluster ,LPDWORD lpBytesPerSector ,LPDWORD lpNumberOfFreeClusters ,LPDWORD lpTotalNumberOfClusters );
UINT GetDriveTypeA (LPCSTR lpRootPathName );
UINT GetDriveTypeW (LPCWSTR lpRootPathName );
DWORD GetFileAttributesA (LPCSTR lpFileName );
DWORD GetFileAttributesW (LPCWSTR lpFileName );
WINBOOL GetFileInformationByHandle (HANDLE hFile ,LPBY_HANDLE_FILE_INFORMATION lpFileInformation );
DWORD GetFileSize (HANDLE hFile ,LPDWORD lpFileSizeHigh );
WINBOOL GetFileSizeEx (HANDLE hFile ,PLARGE_INTEGER lpFileSize );
WINBOOL GetFileTime (HANDLE hFile ,LPFILETIME lpCreationTime ,LPFILETIME lpLastAccessTime ,LPFILETIME lpLastWriteTime );
DWORD GetFileType (HANDLE hFile );
DWORD GetFullPathNameA (LPCSTR lpFileName ,DWORD nBufferLength ,LPSTR lpBuffer ,LPSTR *lpFilePart );
DWORD GetFullPathNameW (LPCWSTR lpFileName ,DWORD nBufferLength ,LPWSTR lpBuffer ,LPWSTR *lpFilePart );
DWORD GetLogicalDrives (void );
DWORD GetLogicalDriveStringsW (DWORD nBufferLength ,LPWSTR lpBuffer );
DWORD GetLongPathNameA (LPCSTR lpszShortPath ,LPSTR lpszLongPath ,DWORD cchBuffer );
DWORD GetLongPathNameW (LPCWSTR lpszShortPath ,LPWSTR lpszLongPath ,DWORD cchBuffer );
DWORD GetShortPathNameW (LPCWSTR lpszLongPath ,LPWSTR lpszShortPath ,DWORD cchBuffer );
UINT GetTempFileNameW (LPCWSTR lpPathName ,LPCWSTR lpPrefixString ,UINT uUnique ,LPWSTR lpTempFileName );
WINBOOL GetVolumeInformationW (LPCWSTR lpRootPathName ,LPWSTR lpVolumeNameBuffer ,DWORD nVolumeNameSize ,LPDWORD lpVolumeSerialNumber ,LPDWORD lpMaximumComponentLength ,LPDWORD lpFileSystemFlags ,LPWSTR lpFileSystemNameBuffer ,DWORD nFileSystemNameSize );
WINBOOL GetVolumePathNameW (LPCWSTR lpszFileName ,LPWSTR lpszVolumePathName ,DWORD cchBufferLength );
WINBOOL LocalFileTimeToFileTime (const FILETIME *lpLocalFileTime ,LPFILETIME lpFileTime );
WINBOOL LockFile (HANDLE hFile ,DWORD dwFileOffsetLow ,DWORD dwFileOffsetHigh ,DWORD nNumberOfBytesToLockLow ,DWORD nNumberOfBytesToLockHigh );
DWORD QueryDosDeviceW (LPCWSTR lpDeviceName ,LPWSTR lpTargetPath ,DWORD ucchMax );
WINBOOL ReadFileEx (HANDLE hFile ,LPVOID lpBuffer ,DWORD nNumberOfBytesToRead ,LPOVERLAPPED lpOverlapped ,LPOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine );
WINBOOL ReadFileScatter (HANDLE hFile ,FILE_SEGMENT_ELEMENT aSegmentArray [],DWORD nNumberOfBytesToRead ,LPDWORD lpReserved ,LPOVERLAPPED lpOverlapped );
DWORD SetFilePointer (HANDLE hFile ,LONG lDistanceToMove ,PLONG lpDistanceToMoveHigh ,DWORD dwMoveMethod );
WINBOOL SetFileTime (HANDLE hFile ,const FILETIME *lpCreationTime ,const FILETIME *lpLastAccessTime ,const FILETIME *lpLastWriteTime );
WINBOOL SetFileValidData (HANDLE hFile ,LONGLONG ValidDataLength );
WINBOOL UnlockFile (HANDLE hFile ,DWORD dwFileOffsetLow ,DWORD dwFileOffsetHigh ,DWORD nNumberOfBytesToUnlockLow ,DWORD nNumberOfBytesToUnlockHigh );
WINBOOL WriteFileEx (HANDLE hFile ,LPCVOID lpBuffer ,DWORD nNumberOfBytesToWrite ,LPOVERLAPPED lpOverlapped ,LPOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine );
WINBOOL WriteFileGather (HANDLE hFile ,FILE_SEGMENT_ELEMENT aSegmentArray [],DWORD nNumberOfBytesToWrite ,LPDWORD lpReserved ,LPOVERLAPPED lpOverlapped );
DWORD GetTempPathW (DWORD nBufferLength ,LPWSTR lpBuffer );
WINBOOL GetVolumeNameForVolumeMountPointW (LPCWSTR lpszVolumeMountPoint ,LPWSTR lpszVolumeName ,DWORD cchBufferLength );
WINBOOL GetVolumePathNamesForVolumeNameW (LPCWSTR lpszVolumeName ,LPWCH lpszVolumePathNames ,DWORD cchBufferLength ,PDWORD lpcchReturnLength );
typedef struct _WIN32_FILE_ATTRIBUTE_DATA {DWORD dwFileAttributes ;FILETIME ftCreationTime ;FILETIME ftLastAccessTime ;FILETIME ftLastWriteTime ;DWORD nFileSizeHigh ;DWORD nFileSizeLow ;}WIN32_FILE_ATTRIBUTE_DATA ;
typedef struct _WIN32_FILE_ATTRIBUTE_DATA {DWORD dwFileAttributes ;FILETIME ftCreationTime ;FILETIME ftLastAccessTime ;FILETIME ftLastWriteTime ;DWORD nFileSizeHigh ;DWORD nFileSizeLow ;}*LPWIN32_FILE_ATTRIBUTE_DATA ;

WINBOOL CreateDirectoryA (LPCSTR lpPathName ,LPSECURITY_ATTRIBUTES lpSecurityAttributes );
WINBOOL CreateDirectoryW (LPCWSTR lpPathName ,LPSECURITY_ATTRIBUTES lpSecurityAttributes );
WINBOOL DeleteFileA (LPCSTR lpFileName );
WINBOOL DeleteFileW (LPCWSTR lpFileName );
WINBOOL FindClose (HANDLE hFindFile );
HANDLE FindFirstFileExA (LPCSTR lpFileName ,FINDEX_INFO_LEVELS fInfoLevelId ,LPVOID lpFindFileData ,FINDEX_SEARCH_OPS fSearchOp ,LPVOID lpSearchFilter ,DWORD dwAdditionalFlags );
HANDLE FindFirstFileExW (LPCWSTR lpFileName ,FINDEX_INFO_LEVELS fInfoLevelId ,LPVOID lpFindFileData ,FINDEX_SEARCH_OPS fSearchOp ,LPVOID lpSearchFilter ,DWORD dwAdditionalFlags );
WINBOOL FindNextFileA (HANDLE hFindFile ,LPWIN32_FIND_DATAA lpFindFileData );
WINBOOL FindNextFileW (HANDLE hFindFile ,LPWIN32_FIND_DATAW lpFindFileData );
WINBOOL FlushFileBuffers (HANDLE hFile );
WINBOOL GetDiskFreeSpaceExA (LPCSTR lpDirectoryName ,PULARGE_INTEGER lpFreeBytesAvailableToCaller ,PULARGE_INTEGER lpTotalNumberOfBytes ,PULARGE_INTEGER lpTotalNumberOfFreeBytes );
WINBOOL GetDiskFreeSpaceExW (LPCWSTR lpDirectoryName ,PULARGE_INTEGER lpFreeBytesAvailableToCaller ,PULARGE_INTEGER lpTotalNumberOfBytes ,PULARGE_INTEGER lpTotalNumberOfFreeBytes );
WINBOOL GetFileAttributesExA (LPCSTR lpFileName ,GET_FILEEX_INFO_LEVELS fInfoLevelId ,LPVOID lpFileInformation );
WINBOOL GetFileAttributesExW (LPCWSTR lpFileName ,GET_FILEEX_INFO_LEVELS fInfoLevelId ,LPVOID lpFileInformation );
WINBOOL LockFileEx (HANDLE hFile ,DWORD dwFlags ,DWORD dwReserved ,DWORD nNumberOfBytesToLockLow ,DWORD nNumberOfBytesToLockHigh ,LPOVERLAPPED lpOverlapped );
WINBOOL ReadFile (HANDLE hFile ,LPVOID lpBuffer ,DWORD nNumberOfBytesToRead ,LPDWORD lpNumberOfBytesRead ,LPOVERLAPPED lpOverlapped );
WINBOOL RemoveDirectoryA (LPCSTR lpPathName );
WINBOOL RemoveDirectoryW (LPCWSTR lpPathName );
WINBOOL SetEndOfFile (HANDLE hFile );
WINBOOL SetFileAttributesA (LPCSTR lpFileName ,DWORD dwFileAttributes );
WINBOOL SetFileAttributesW (LPCWSTR lpFileName ,DWORD dwFileAttributes );
WINBOOL SetFilePointerEx (HANDLE hFile ,LARGE_INTEGER liDistanceToMove ,PLARGE_INTEGER lpNewFilePointer ,DWORD dwMoveMethod );
WINBOOL UnlockFileEx (HANDLE hFile ,DWORD dwReserved ,DWORD nNumberOfBytesToUnlockLow ,DWORD nNumberOfBytesToUnlockHigh ,LPOVERLAPPED lpOverlapped );
WINBOOL WriteFile (HANDLE hFile ,LPCVOID lpBuffer ,DWORD nNumberOfBytesToWrite ,LPDWORD lpNumberOfBytesWritten ,LPOVERLAPPED lpOverlapped );
// m:\mingw\x86_64-w64-mingw32\include\handleapi.h

WINBOOL CloseHandle (HANDLE hObject );
WINBOOL DuplicateHandle (HANDLE hSourceProcessHandle ,HANDLE hSourceHandle ,HANDLE hTargetProcessHandle ,LPHANDLE lpTargetHandle ,DWORD dwDesiredAccess ,WINBOOL bInheritHandle ,DWORD dwOptions );
WINBOOL GetHandleInformation (HANDLE hObject ,LPDWORD lpdwFlags );
WINBOOL SetHandleInformation (HANDLE hObject ,DWORD dwMask ,DWORD dwFlags );
// m:\mingw\x86_64-w64-mingw32\include\heapapi.h

typedef struct _HEAP_SUMMARY {DWORD cb ;SIZE_T cbAllocated ;SIZE_T cbCommitted ;SIZE_T cbReserved ;SIZE_T cbMaxReserve ;}HEAP_SUMMARY ;
typedef struct _HEAP_SUMMARY {DWORD cb ;SIZE_T cbAllocated ;SIZE_T cbCommitted ;SIZE_T cbReserved ;SIZE_T cbMaxReserve ;}*PHEAP_SUMMARY ;

typedef PHEAP_SUMMARY LPHEAP_SUMMARY ;
HANDLE HeapCreate (DWORD flOptions ,SIZE_T dwInitialSize ,SIZE_T dwMaximumSize );
WINBOOL HeapDestroy (HANDLE hHeap );
WINBOOL HeapValidate (HANDLE hHeap ,DWORD dwFlags ,LPCVOID lpMem );
SIZE_T HeapCompact (HANDLE hHeap ,DWORD dwFlags );
WINBOOL HeapSummary (HANDLE hHeap ,DWORD dwFlags ,LPHEAP_SUMMARY lpSummary );
DWORD GetProcessHeaps (DWORD NumberOfHeaps ,PHANDLE ProcessHeaps );
WINBOOL HeapLock (HANDLE hHeap );
WINBOOL HeapUnlock (HANDLE hHeap );
WINBOOL HeapWalk (HANDLE hHeap ,LPPROCESS_HEAP_ENTRY lpEntry );
WINBOOL HeapSetInformation (HANDLE HeapHandle ,HEAP_INFORMATION_CLASS HeapInformationClass ,PVOID HeapInformation ,SIZE_T HeapInformationLength );
WINBOOL HeapQueryInformation (HANDLE HeapHandle ,HEAP_INFORMATION_CLASS HeapInformationClass ,PVOID HeapInformation ,SIZE_T HeapInformationLength ,PSIZE_T ReturnLength );
LPVOID HeapAlloc (HANDLE hHeap ,DWORD dwFlags ,SIZE_T dwBytes );
LPVOID HeapReAlloc (HANDLE hHeap ,DWORD dwFlags ,LPVOID lpMem ,SIZE_T dwBytes );
WINBOOL HeapFree (HANDLE hHeap ,DWORD dwFlags ,LPVOID lpMem );
SIZE_T HeapSize (HANDLE hHeap ,DWORD dwFlags ,LPCVOID lpMem );
HANDLE GetProcessHeap (void );
// m:\mingw\x86_64-w64-mingw32\include\ioapiset.h

WINBOOL GetOverlappedResult (HANDLE hFile ,LPOVERLAPPED lpOverlapped ,LPDWORD lpNumberOfBytesTransferred ,WINBOOL bWait );
HANDLE CreateIoCompletionPort (HANDLE FileHandle ,HANDLE ExistingCompletionPort ,ULONG_PTR CompletionKey ,DWORD NumberOfConcurrentThreads );
WINBOOL GetQueuedCompletionStatus (HANDLE CompletionPort ,LPDWORD lpNumberOfBytesTransferred ,PULONG_PTR lpCompletionKey ,LPOVERLAPPED *lpOverlapped ,DWORD dwMilliseconds );
WINBOOL PostQueuedCompletionStatus (HANDLE CompletionPort ,DWORD dwNumberOfBytesTransferred ,ULONG_PTR dwCompletionKey ,LPOVERLAPPED lpOverlapped );
WINBOOL DeviceIoControl (HANDLE hDevice ,DWORD dwIoControlCode ,LPVOID lpInBuffer ,DWORD nInBufferSize ,LPVOID lpOutBuffer ,DWORD nOutBufferSize ,LPDWORD lpBytesReturned ,LPOVERLAPPED lpOverlapped );
WINBOOL CancelIo (HANDLE hFile );
WINBOOL GetOverlappedResultEx (HANDLE hFile ,LPOVERLAPPED lpOverlapped ,LPDWORD lpNumberOfBytesTransferred ,DWORD dwMilliseconds ,WINBOOL bAlertable );
// m:\mingw\x86_64-w64-mingw32\include\jobapi.h

WINBOOL IsProcessInJob (HANDLE ProcessHandle ,HANDLE JobHandle ,PBOOL Result );
// m:\mingw\x86_64-w64-mingw32\include\libloaderapi.h

typedef struct tagENUMUILANG {ULONG NumOfEnumUILang ;ULONG SizeOfEnumUIBuffer ;LANGID *pEnumUIBuffer ;}ENUMUILANG ;
typedef struct tagENUMUILANG {ULONG NumOfEnumUILang ;ULONG SizeOfEnumUIBuffer ;LANGID *pEnumUIBuffer ;}*PENUMUILANG ;

typedef WINBOOL (*ENUMRESLANGPROCA )(HMODULE hModule ,LPCSTR lpType ,LPCSTR lpName ,WORD wLanguage ,LONG_PTR lParam );
typedef WINBOOL (*ENUMRESLANGPROCW )(HMODULE hModule ,LPCWSTR lpType ,LPCWSTR lpName ,WORD wLanguage ,LONG_PTR lParam );
typedef WINBOOL (*ENUMRESNAMEPROCA )(HMODULE hModule ,LPCSTR lpType ,LPSTR lpName ,LONG_PTR lParam );
typedef WINBOOL (*ENUMRESNAMEPROCW )(HMODULE hModule ,LPCWSTR lpType ,LPWSTR lpName ,LONG_PTR lParam );
typedef WINBOOL (*ENUMRESTYPEPROCA )(HMODULE hModule ,LPSTR lpType ,LONG_PTR lParam );
typedef WINBOOL (*ENUMRESTYPEPROCW )(HMODULE hModule ,LPWSTR lpType ,LONG_PTR lParam );
typedef WINBOOL (*PGET_MODULE_HANDLE_EXA )(DWORD dwFlags ,LPCSTR lpModuleName ,HMODULE *phModule );
typedef WINBOOL (*PGET_MODULE_HANDLE_EXW )(DWORD dwFlags ,LPCWSTR lpModuleName ,HMODULE *phModule );
typedef PVOID DLL_DIRECTORY_COOKIE ;
typedef PVOID *PDLL_DIRECTORY_COOKIE ;

HRSRC FindResourceExW (HMODULE hModule ,LPCWSTR lpType ,LPCWSTR lpName ,WORD wLanguage );
void FreeLibraryAndExitThread (HMODULE hLibModule ,DWORD dwExitCode );
WINBOOL FreeResource (HGLOBAL hResData );
DWORD GetModuleFileNameA (HMODULE hModule ,LPSTR lpFilename ,DWORD nSize );
DWORD GetModuleFileNameW (HMODULE hModule ,LPWSTR lpFilename ,DWORD nSize );
HMODULE GetModuleHandleA (LPCSTR lpModuleName );
HMODULE GetModuleHandleW (LPCWSTR lpModuleName );
HMODULE LoadLibraryExA (LPCSTR lpLibFileName ,HANDLE hFile ,DWORD dwFlags );
HMODULE LoadLibraryExW (LPCWSTR lpLibFileName ,HANDLE hFile ,DWORD dwFlags );
HGLOBAL LoadResource (HMODULE hModule ,HRSRC hResInfo );
int LoadStringA (HINSTANCE hInstance ,UINT uID ,LPSTR lpBuffer ,int cchBufferMax );
int LoadStringW (HINSTANCE hInstance ,UINT uID ,LPWSTR lpBuffer ,int cchBufferMax );
LPVOID LockResource (HGLOBAL hResData );
DWORD SizeofResource (HMODULE hModule ,HRSRC hResInfo );
DLL_DIRECTORY_COOKIE AddDllDirectory (PCWSTR NewDirectory );
WINBOOL RemoveDllDirectory (DLL_DIRECTORY_COOKIE Cookie );
WINBOOL SetDefaultDllDirectories (DWORD DirectoryFlags );
WINBOOL GetModuleHandleExA (DWORD dwFlags ,LPCSTR lpModuleName ,HMODULE *phModule );
WINBOOL GetModuleHandleExW (DWORD dwFlags ,LPCWSTR lpModuleName ,HMODULE *phModule );
WINBOOL EnumResourceLanguagesA (HMODULE hModule ,LPCSTR lpType ,LPCSTR lpName ,ENUMRESLANGPROCA lpEnumFunc ,LONG_PTR lParam );
WINBOOL EnumResourceLanguagesW (HMODULE hModule ,LPCWSTR lpType ,LPCWSTR lpName ,ENUMRESLANGPROCW lpEnumFunc ,LONG_PTR lParam );
WINBOOL DisableThreadLibraryCalls (HMODULE hLibModule );
WINBOOL FreeLibrary (HMODULE hLibModule );
FARPROC GetProcAddress (HMODULE hModule ,LPCSTR lpProcName );
// m:\mingw\x86_64-w64-mingw32\include\memoryapi.h

typedef enum _MEMORY_RESOURCE_NOTIFICATION_TYPE {LowMemoryResourceNotification ,HighMemoryResourceNotification }MEMORY_RESOURCE_NOTIFICATION_TYPE ;
SIZE_T VirtualQuery (LPCVOID lpAddress ,PMEMORY_BASIC_INFORMATION lpBuffer ,SIZE_T dwLength );
WINBOOL FlushViewOfFile (LPCVOID lpBaseAddress ,SIZE_T dwNumberOfBytesToFlush );
WINBOOL UnmapViewOfFile (LPCVOID lpBaseAddress );
HANDLE CreateFileMappingFromApp (HANDLE hFile ,PSECURITY_ATTRIBUTES SecurityAttributes ,ULONG PageProtection ,ULONG64 MaximumSize ,PCWSTR Name );
PVOID MapViewOfFileFromApp (HANDLE hFileMappingObject ,ULONG DesiredAccess ,ULONG64 FileOffset ,SIZE_T NumberOfBytesToMap );
LPVOID VirtualAlloc (LPVOID lpAddress ,SIZE_T dwSize ,DWORD flAllocationType ,DWORD flProtect );
WINBOOL VirtualFree (LPVOID lpAddress ,SIZE_T dwSize ,DWORD dwFreeType );
WINBOOL VirtualProtect (LPVOID lpAddress ,SIZE_T dwSize ,DWORD flNewProtect ,PDWORD lpflOldProtect );
LPVOID VirtualAllocEx (HANDLE hProcess ,LPVOID lpAddress ,SIZE_T dwSize ,DWORD flAllocationType ,DWORD flProtect );
WINBOOL VirtualFreeEx (HANDLE hProcess ,LPVOID lpAddress ,SIZE_T dwSize ,DWORD dwFreeType );
WINBOOL VirtualProtectEx (HANDLE hProcess ,LPVOID lpAddress ,SIZE_T dwSize ,DWORD flNewProtect ,PDWORD lpflOldProtect );
SIZE_T VirtualQueryEx (HANDLE hProcess ,LPCVOID lpAddress ,PMEMORY_BASIC_INFORMATION lpBuffer ,SIZE_T dwLength );
WINBOOL ReadProcessMemory (HANDLE hProcess ,LPCVOID lpBaseAddress ,LPVOID lpBuffer ,SIZE_T nSize ,SIZE_T *lpNumberOfBytesRead );
WINBOOL WriteProcessMemory (HANDLE hProcess ,LPVOID lpBaseAddress ,LPCVOID lpBuffer ,SIZE_T nSize ,SIZE_T *lpNumberOfBytesWritten );
HANDLE CreateFileMappingW (HANDLE hFile ,LPSECURITY_ATTRIBUTES lpFileMappingAttributes ,DWORD flProtect ,DWORD dwMaximumSizeHigh ,DWORD dwMaximumSizeLow ,LPCWSTR lpName );
HANDLE OpenFileMappingW (DWORD dwDesiredAccess ,WINBOOL bInheritHandle ,LPCWSTR lpName );
LPVOID MapViewOfFile (HANDLE hFileMappingObject ,DWORD dwDesiredAccess ,DWORD dwFileOffsetHigh ,DWORD dwFileOffsetLow ,SIZE_T dwNumberOfBytesToMap );
LPVOID MapViewOfFileEx (HANDLE hFileMappingObject ,DWORD dwDesiredAccess ,DWORD dwFileOffsetHigh ,DWORD dwFileOffsetLow ,SIZE_T dwNumberOfBytesToMap ,LPVOID lpBaseAddress );
SIZE_T GetLargePageMinimum (void );
WINBOOL GetProcessWorkingSetSizeEx (HANDLE hProcess ,PSIZE_T lpMinimumWorkingSetSize ,PSIZE_T lpMaximumWorkingSetSize ,PDWORD Flags );
WINBOOL SetProcessWorkingSetSizeEx (HANDLE hProcess ,SIZE_T dwMinimumWorkingSetSize ,SIZE_T dwMaximumWorkingSetSize ,DWORD Flags );
WINBOOL VirtualLock (LPVOID lpAddress ,SIZE_T dwSize );
WINBOOL VirtualUnlock (LPVOID lpAddress ,SIZE_T dwSize );
UINT GetWriteWatch (DWORD dwFlags ,PVOID lpBaseAddress ,SIZE_T dwRegionSize ,PVOID *lpAddresses ,ULONG_PTR *lpdwCount ,LPDWORD lpdwGranularity );
UINT ResetWriteWatch (LPVOID lpBaseAddress ,SIZE_T dwRegionSize );
HANDLE CreateMemoryResourceNotification (MEMORY_RESOURCE_NOTIFICATION_TYPE NotificationType );
WINBOOL QueryMemoryResourceNotification (HANDLE ResourceNotificationHandle ,PBOOL ResourceState );
WINBOOL GetSystemFileCacheSize (PSIZE_T lpMinimumFileCacheSize ,PSIZE_T lpMaximumFileCacheSize ,PDWORD lpFlags );
WINBOOL SetSystemFileCacheSize (SIZE_T MinimumFileCacheSize ,SIZE_T MaximumFileCacheSize ,DWORD Flags );
// m:\mingw\x86_64-w64-mingw32\include\namedpipeapi.h

WINBOOL ImpersonateNamedPipeClient (HANDLE hNamedPipe );
WINBOOL CreatePipe (PHANDLE hReadPipe ,PHANDLE hWritePipe ,LPSECURITY_ATTRIBUTES lpPipeAttributes ,DWORD nSize );
WINBOOL ConnectNamedPipe (HANDLE hNamedPipe ,LPOVERLAPPED lpOverlapped );
WINBOOL DisconnectNamedPipe (HANDLE hNamedPipe );
WINBOOL SetNamedPipeHandleState (HANDLE hNamedPipe ,LPDWORD lpMode ,LPDWORD lpMaxCollectionCount ,LPDWORD lpCollectDataTimeout );
WINBOOL PeekNamedPipe (HANDLE hNamedPipe ,LPVOID lpBuffer ,DWORD nBufferSize ,LPDWORD lpBytesRead ,LPDWORD lpTotalBytesAvail ,LPDWORD lpBytesLeftThisMessage );
WINBOOL TransactNamedPipe (HANDLE hNamedPipe ,LPVOID lpInBuffer ,DWORD nInBufferSize ,LPVOID lpOutBuffer ,DWORD nOutBufferSize ,LPDWORD lpBytesRead ,LPOVERLAPPED lpOverlapped );
HANDLE CreateNamedPipeW (LPCWSTR lpName ,DWORD dwOpenMode ,DWORD dwPipeMode ,DWORD nMaxInstances ,DWORD nOutBufferSize ,DWORD nInBufferSize ,DWORD nDefaultTimeOut ,LPSECURITY_ATTRIBUTES lpSecurityAttributes );
WINBOOL WaitNamedPipeW (LPCWSTR lpNamedPipeName ,DWORD nTimeOut );
// m:\mingw\x86_64-w64-mingw32\include\namespaceapi.h

HANDLE CreatePrivateNamespaceW (LPSECURITY_ATTRIBUTES lpPrivateNamespaceAttributes ,LPVOID lpBoundaryDescriptor ,LPCWSTR lpAliasPrefix );
HANDLE OpenPrivateNamespaceW (LPVOID lpBoundaryDescriptor ,LPCWSTR lpAliasPrefix );
BOOLEAN ClosePrivateNamespace (HANDLE Handle ,ULONG Flags );
HANDLE CreateBoundaryDescriptorW (LPCWSTR Name ,ULONG Flags );
WINBOOL AddSIDToBoundaryDescriptor (HANDLE *BoundaryDescriptor ,PSID RequiredSid );
void DeleteBoundaryDescriptor (HANDLE BoundaryDescriptor );
// m:\mingw\x86_64-w64-mingw32\include\processenv.h

LPCH GetEnvironmentStrings (void );
LPWCH GetEnvironmentStringsW (void );
WINBOOL SetEnvironmentStringsW (LPWCH NewEnvironment );
WINBOOL FreeEnvironmentStringsA (LPCH penv );
WINBOOL FreeEnvironmentStringsW (LPWCH penv );
HANDLE GetStdHandle (DWORD nStdHandle );
WINBOOL SetStdHandle (DWORD nStdHandle ,HANDLE hHandle );
LPSTR GetCommandLineA (void );
LPWSTR GetCommandLineW (void );
DWORD GetEnvironmentVariableA (LPCSTR lpName ,LPSTR lpBuffer ,DWORD nSize );
DWORD GetEnvironmentVariableW (LPCWSTR lpName ,LPWSTR lpBuffer ,DWORD nSize );
WINBOOL SetEnvironmentVariableA (LPCSTR lpName ,LPCSTR lpValue );
WINBOOL SetEnvironmentVariableW (LPCWSTR lpName ,LPCWSTR lpValue );
DWORD ExpandEnvironmentStringsA (LPCSTR lpSrc ,LPSTR lpDst ,DWORD nSize );
DWORD ExpandEnvironmentStringsW (LPCWSTR lpSrc ,LPWSTR lpDst ,DWORD nSize );
WINBOOL SetCurrentDirectoryA (LPCSTR lpPathName );
WINBOOL SetCurrentDirectoryW (LPCWSTR lpPathName );
DWORD GetCurrentDirectoryA (DWORD nBufferLength ,LPSTR lpBuffer );
DWORD GetCurrentDirectoryW (DWORD nBufferLength ,LPWSTR lpBuffer );
DWORD SearchPathW (LPCWSTR lpPath ,LPCWSTR lpFileName ,LPCWSTR lpExtension ,DWORD nBufferLength ,LPWSTR lpBuffer ,LPWSTR *lpFilePart );
DWORD SearchPathA (LPCSTR lpPath ,LPCSTR lpFileName ,LPCSTR lpExtension ,DWORD nBufferLength ,LPSTR lpBuffer ,LPSTR *lpFilePart );
WINBOOL NeedCurrentDirectoryForExePathA (LPCSTR ExeName );
WINBOOL NeedCurrentDirectoryForExePathW (LPCWSTR ExeName );
// m:\mingw\x86_64-w64-mingw32\include\processthreadsapi.h

typedef struct _PROCESS_INFORMATION {HANDLE hProcess ;HANDLE hThread ;DWORD dwProcessId ;DWORD dwThreadId ;}PROCESS_INFORMATION ;
typedef struct _PROCESS_INFORMATION {HANDLE hProcess ;HANDLE hThread ;DWORD dwProcessId ;DWORD dwThreadId ;}*PPROCESS_INFORMATION ;
typedef struct _PROCESS_INFORMATION {HANDLE hProcess ;HANDLE hThread ;DWORD dwProcessId ;DWORD dwThreadId ;}*LPPROCESS_INFORMATION ;

typedef struct _STARTUPINFOA {DWORD cb ;LPSTR lpReserved ;LPSTR lpDesktop ;LPSTR lpTitle ;DWORD dwX ;DWORD dwY ;DWORD dwXSize ;DWORD dwYSize ;DWORD dwXCountChars ;DWORD dwYCountChars ;DWORD dwFillAttribute ;DWORD dwFlags ;WORD wShowWindow ;WORD cbReserved2 ;LPBYTE lpReserved2 ;HANDLE hStdInput ;HANDLE hStdOutput ;HANDLE hStdError ;}STARTUPINFOA ;
typedef struct _STARTUPINFOA {DWORD cb ;LPSTR lpReserved ;LPSTR lpDesktop ;LPSTR lpTitle ;DWORD dwX ;DWORD dwY ;DWORD dwXSize ;DWORD dwYSize ;DWORD dwXCountChars ;DWORD dwYCountChars ;DWORD dwFillAttribute ;DWORD dwFlags ;WORD wShowWindow ;WORD cbReserved2 ;LPBYTE lpReserved2 ;HANDLE hStdInput ;HANDLE hStdOutput ;HANDLE hStdError ;}*LPSTARTUPINFOA ;

typedef struct _STARTUPINFOW {DWORD cb ;LPWSTR lpReserved ;LPWSTR lpDesktop ;LPWSTR lpTitle ;DWORD dwX ;DWORD dwY ;DWORD dwXSize ;DWORD dwYSize ;DWORD dwXCountChars ;DWORD dwYCountChars ;DWORD dwFillAttribute ;DWORD dwFlags ;WORD wShowWindow ;WORD cbReserved2 ;LPBYTE lpReserved2 ;HANDLE hStdInput ;HANDLE hStdOutput ;HANDLE hStdError ;}STARTUPINFOW ;
typedef struct _STARTUPINFOW {DWORD cb ;LPWSTR lpReserved ;LPWSTR lpDesktop ;LPWSTR lpTitle ;DWORD dwX ;DWORD dwY ;DWORD dwXSize ;DWORD dwYSize ;DWORD dwXCountChars ;DWORD dwYCountChars ;DWORD dwFillAttribute ;DWORD dwFlags ;WORD wShowWindow ;WORD cbReserved2 ;LPBYTE lpReserved2 ;HANDLE hStdInput ;HANDLE hStdOutput ;HANDLE hStdError ;}*LPSTARTUPINFOW ;

typedef STARTUPINFOA STARTUPINFO ;
typedef LPSTARTUPINFOA LPSTARTUPINFO ;
typedef struct _PROC_THREAD_ATTRIBUTE_LIST *PPROC_THREAD_ATTRIBUTE_LIST ;
typedef struct _PROC_THREAD_ATTRIBUTE_LIST *LPPROC_THREAD_ATTRIBUTE_LIST ;

DWORD QueueUserAPC (PAPCFUNC pfnAPC ,HANDLE hThread ,ULONG_PTR dwData );
WINBOOL GetProcessTimes (HANDLE hProcess ,LPFILETIME lpCreationTime ,LPFILETIME lpExitTime ,LPFILETIME lpKernelTime ,LPFILETIME lpUserTime );
void ExitProcess (UINT uExitCode );
WINBOOL TerminateProcess (HANDLE hProcess ,UINT uExitCode );
WINBOOL GetExitCodeProcess (HANDLE hProcess ,LPDWORD lpExitCode );
WINBOOL SwitchToThread (void );
HANDLE CreateRemoteThread (HANDLE hProcess ,LPSECURITY_ATTRIBUTES lpThreadAttributes ,SIZE_T dwStackSize ,LPTHREAD_START_ROUTINE lpStartAddress ,LPVOID lpParameter ,DWORD dwCreationFlags ,LPDWORD lpThreadId );
HANDLE OpenThread (DWORD dwDesiredAccess ,WINBOOL bInheritHandle ,DWORD dwThreadId );
WINBOOL SetThreadPriorityBoost (HANDLE hThread ,WINBOOL bDisablePriorityBoost );
WINBOOL GetThreadPriorityBoost (HANDLE hThread ,PBOOL pDisablePriorityBoost );
WINBOOL TerminateThread (HANDLE hThread ,DWORD dwExitCode );
WINBOOL SetProcessShutdownParameters (DWORD dwLevel ,DWORD dwFlags );
DWORD GetProcessVersion (DWORD ProcessId );
void GetStartupInfoW (LPSTARTUPINFOW lpStartupInfo );
WINBOOL SetThreadToken (PHANDLE Thread ,HANDLE Token );
WINBOOL OpenProcessToken (HANDLE ProcessHandle ,DWORD DesiredAccess ,PHANDLE TokenHandle );
WINBOOL OpenThreadToken (HANDLE ThreadHandle ,DWORD DesiredAccess ,WINBOOL OpenAsSelf ,PHANDLE TokenHandle );
WINBOOL SetPriorityClass (HANDLE hProcess ,DWORD dwPriorityClass );
WINBOOL SetThreadStackGuarantee (PULONG StackSizeInBytes );
DWORD GetPriorityClass (HANDLE hProcess );
WINBOOL ProcessIdToSessionId (DWORD dwProcessId ,DWORD *pSessionId );
DWORD GetProcessId (HANDLE Process );
DWORD GetThreadId (HANDLE Thread );
HANDLE CreateRemoteThreadEx (HANDLE hProcess ,LPSECURITY_ATTRIBUTES lpThreadAttributes ,SIZE_T dwStackSize ,LPTHREAD_START_ROUTINE lpStartAddress ,LPVOID lpParameter ,DWORD dwCreationFlags ,LPPROC_THREAD_ATTRIBUTE_LIST lpAttributeList ,LPDWORD lpThreadId );
WINBOOL GetThreadContext (HANDLE hThread ,LPCONTEXT lpContext );
WINBOOL SetThreadContext (HANDLE hThread ,const CONTEXT *lpContext );
WINBOOL FlushInstructionCache (HANDLE hProcess ,LPCVOID lpBaseAddress ,SIZE_T dwSize );
WINBOOL GetThreadTimes (HANDLE hThread ,LPFILETIME lpCreationTime ,LPFILETIME lpExitTime ,LPFILETIME lpKernelTime ,LPFILETIME lpUserTime );
HANDLE OpenProcess (DWORD dwDesiredAccess ,WINBOOL bInheritHandle ,DWORD dwProcessId );
WINBOOL GetProcessHandleCount (HANDLE hProcess ,PDWORD pdwHandleCount );
DWORD GetCurrentProcessorNumber (void );
WINBOOL CreateProcessA (LPCSTR lpApplicationName ,LPSTR lpCommandLine ,LPSECURITY_ATTRIBUTES lpProcessAttributes ,LPSECURITY_ATTRIBUTES lpThreadAttributes ,WINBOOL bInheritHandles ,DWORD dwCreationFlags ,LPVOID lpEnvironment ,LPCSTR lpCurrentDirectory ,LPSTARTUPINFOA lpStartupInfo ,LPPROCESS_INFORMATION lpProcessInformation );
WINBOOL CreateProcessW (LPCWSTR lpApplicationName ,LPWSTR lpCommandLine ,LPSECURITY_ATTRIBUTES lpProcessAttributes ,LPSECURITY_ATTRIBUTES lpThreadAttributes ,WINBOOL bInheritHandles ,DWORD dwCreationFlags ,LPVOID lpEnvironment ,LPCWSTR lpCurrentDirectory ,LPSTARTUPINFOW lpStartupInfo ,LPPROCESS_INFORMATION lpProcessInformation );
WINBOOL CreateProcessAsUserW (HANDLE hToken ,LPCWSTR lpApplicationName ,LPWSTR lpCommandLine ,LPSECURITY_ATTRIBUTES lpProcessAttributes ,LPSECURITY_ATTRIBUTES lpThreadAttributes ,WINBOOL bInheritHandles ,DWORD dwCreationFlags ,LPVOID lpEnvironment ,LPCWSTR lpCurrentDirectory ,LPSTARTUPINFOW lpStartupInfo ,LPPROCESS_INFORMATION lpProcessInformation );
HANDLE GetCurrentProcess (void );
DWORD GetCurrentProcessId (void );
HANDLE GetCurrentThread (void );
DWORD GetCurrentThreadId (void );
WINBOOL IsProcessorFeaturePresent (DWORD ProcessorFeature );
HANDLE CreateThread (LPSECURITY_ATTRIBUTES lpThreadAttributes ,SIZE_T dwStackSize ,LPTHREAD_START_ROUTINE lpStartAddress ,LPVOID lpParameter ,DWORD dwCreationFlags ,LPDWORD lpThreadId );
WINBOOL SetThreadPriority (HANDLE hThread ,int nPriority );
int GetThreadPriority (HANDLE hThread );
void ExitThread (DWORD dwExitCode );
WINBOOL GetExitCodeThread (HANDLE hThread ,LPDWORD lpExitCode );
DWORD SuspendThread (HANDLE hThread );
DWORD ResumeThread (HANDLE hThread );
DWORD TlsAlloc (void );
LPVOID TlsGetValue (DWORD dwTlsIndex );
WINBOOL TlsSetValue (DWORD dwTlsIndex ,LPVOID lpTlsValue );
WINBOOL TlsFree (DWORD dwTlsIndex );
// m:\mingw\x86_64-w64-mingw32\include\profileapi.h

WINBOOL QueryPerformanceCounter (LARGE_INTEGER *lpPerformanceCount );
WINBOOL QueryPerformanceFrequency (LARGE_INTEGER *lpFrequency );
// m:\mingw\x86_64-w64-mingw32\include\securitybaseapi.h

WINBOOL AccessCheck (PSECURITY_DESCRIPTOR pSecurityDescriptor ,HANDLE ClientToken ,DWORD DesiredAccess ,PGENERIC_MAPPING GenericMapping ,PPRIVILEGE_SET PrivilegeSet ,LPDWORD PrivilegeSetLength ,LPDWORD GrantedAccess ,LPBOOL AccessStatus );
WINBOOL AccessCheckAndAuditAlarmW (LPCWSTR SubsystemName ,LPVOID HandleId ,LPWSTR ObjectTypeName ,LPWSTR ObjectName ,PSECURITY_DESCRIPTOR SecurityDescriptor ,DWORD DesiredAccess ,PGENERIC_MAPPING GenericMapping ,WINBOOL ObjectCreation ,LPDWORD GrantedAccess ,LPBOOL AccessStatus ,LPBOOL pfGenerateOnClose );
WINBOOL AccessCheckByType (PSECURITY_DESCRIPTOR pSecurityDescriptor ,PSID PrincipalSelfSid ,HANDLE ClientToken ,DWORD DesiredAccess ,POBJECT_TYPE_LIST ObjectTypeList ,DWORD ObjectTypeListLength ,PGENERIC_MAPPING GenericMapping ,PPRIVILEGE_SET PrivilegeSet ,LPDWORD PrivilegeSetLength ,LPDWORD GrantedAccess ,LPBOOL AccessStatus );
WINBOOL AccessCheckByTypeResultList (PSECURITY_DESCRIPTOR pSecurityDescriptor ,PSID PrincipalSelfSid ,HANDLE ClientToken ,DWORD DesiredAccess ,POBJECT_TYPE_LIST ObjectTypeList ,DWORD ObjectTypeListLength ,PGENERIC_MAPPING GenericMapping ,PPRIVILEGE_SET PrivilegeSet ,LPDWORD PrivilegeSetLength ,LPDWORD GrantedAccessList ,LPDWORD AccessStatusList );
WINBOOL AccessCheckByTypeAndAuditAlarmW (LPCWSTR SubsystemName ,LPVOID HandleId ,LPCWSTR ObjectTypeName ,LPCWSTR ObjectName ,PSECURITY_DESCRIPTOR SecurityDescriptor ,PSID PrincipalSelfSid ,DWORD DesiredAccess ,AUDIT_EVENT_TYPE AuditType ,DWORD Flags ,POBJECT_TYPE_LIST ObjectTypeList ,DWORD ObjectTypeListLength ,PGENERIC_MAPPING GenericMapping ,WINBOOL ObjectCreation ,LPDWORD GrantedAccess ,LPBOOL AccessStatus ,LPBOOL pfGenerateOnClose );
WINBOOL AccessCheckByTypeResultListAndAuditAlarmW (LPCWSTR SubsystemName ,LPVOID HandleId ,LPCWSTR ObjectTypeName ,LPCWSTR ObjectName ,PSECURITY_DESCRIPTOR SecurityDescriptor ,PSID PrincipalSelfSid ,DWORD DesiredAccess ,AUDIT_EVENT_TYPE AuditType ,DWORD Flags ,POBJECT_TYPE_LIST ObjectTypeList ,DWORD ObjectTypeListLength ,PGENERIC_MAPPING GenericMapping ,WINBOOL ObjectCreation ,LPDWORD GrantedAccessList ,LPDWORD AccessStatusList ,LPBOOL pfGenerateOnClose );
WINBOOL AccessCheckByTypeResultListAndAuditAlarmByHandleW (LPCWSTR SubsystemName ,LPVOID HandleId ,HANDLE ClientToken ,LPCWSTR ObjectTypeName ,LPCWSTR ObjectName ,PSECURITY_DESCRIPTOR SecurityDescriptor ,PSID PrincipalSelfSid ,DWORD DesiredAccess ,AUDIT_EVENT_TYPE AuditType ,DWORD Flags ,POBJECT_TYPE_LIST ObjectTypeList ,DWORD ObjectTypeListLength ,PGENERIC_MAPPING GenericMapping ,WINBOOL ObjectCreation ,LPDWORD GrantedAccessList ,LPDWORD AccessStatusList ,LPBOOL pfGenerateOnClose );
WINBOOL AddAccessAllowedAce (PACL pAcl ,DWORD dwAceRevision ,DWORD AccessMask ,PSID pSid );
WINBOOL AddAccessAllowedAceEx (PACL pAcl ,DWORD dwAceRevision ,DWORD AceFlags ,DWORD AccessMask ,PSID pSid );
WINBOOL AddAccessAllowedObjectAce (PACL pAcl ,DWORD dwAceRevision ,DWORD AceFlags ,DWORD AccessMask ,GUID *ObjectTypeGuid ,GUID *InheritedObjectTypeGuid ,PSID pSid );
WINBOOL AddAccessDeniedAce (PACL pAcl ,DWORD dwAceRevision ,DWORD AccessMask ,PSID pSid );
WINBOOL AddAccessDeniedAceEx (PACL pAcl ,DWORD dwAceRevision ,DWORD AceFlags ,DWORD AccessMask ,PSID pSid );
WINBOOL AddAccessDeniedObjectAce (PACL pAcl ,DWORD dwAceRevision ,DWORD AceFlags ,DWORD AccessMask ,GUID *ObjectTypeGuid ,GUID *InheritedObjectTypeGuid ,PSID pSid );
WINBOOL AddAce (PACL pAcl ,DWORD dwAceRevision ,DWORD dwStartingAceIndex ,LPVOID pAceList ,DWORD nAceListLength );
WINBOOL AddAuditAccessAce (PACL pAcl ,DWORD dwAceRevision ,DWORD dwAccessMask ,PSID pSid ,WINBOOL bAuditSuccess ,WINBOOL bAuditFailure );
WINBOOL AddAuditAccessAceEx (PACL pAcl ,DWORD dwAceRevision ,DWORD AceFlags ,DWORD dwAccessMask ,PSID pSid ,WINBOOL bAuditSuccess ,WINBOOL bAuditFailure );
WINBOOL AddAuditAccessObjectAce (PACL pAcl ,DWORD dwAceRevision ,DWORD AceFlags ,DWORD AccessMask ,GUID *ObjectTypeGuid ,GUID *InheritedObjectTypeGuid ,PSID pSid ,WINBOOL bAuditSuccess ,WINBOOL bAuditFailure );
WINBOOL AdjustTokenGroups (HANDLE TokenHandle ,WINBOOL ResetToDefault ,PTOKEN_GROUPS NewState ,DWORD BufferLength ,PTOKEN_GROUPS PreviousState ,PDWORD ReturnLength );
WINBOOL AdjustTokenPrivileges (HANDLE TokenHandle ,WINBOOL DisableAllPrivileges ,PTOKEN_PRIVILEGES NewState ,DWORD BufferLength ,PTOKEN_PRIVILEGES PreviousState ,PDWORD ReturnLength );
WINBOOL AllocateAndInitializeSid (PSID_IDENTIFIER_AUTHORITY pIdentifierAuthority ,BYTE nSubAuthorityCount ,DWORD nSubAuthority0 ,DWORD nSubAuthority1 ,DWORD nSubAuthority2 ,DWORD nSubAuthority3 ,DWORD nSubAuthority4 ,DWORD nSubAuthority5 ,DWORD nSubAuthority6 ,DWORD nSubAuthority7 ,PSID *pSid );
WINBOOL AllocateLocallyUniqueId (PLUID Luid );
WINBOOL AreAllAccessesGranted (DWORD GrantedAccess ,DWORD DesiredAccess );
WINBOOL AreAnyAccessesGranted (DWORD GrantedAccess ,DWORD DesiredAccess );
WINBOOL CheckTokenMembership (HANDLE TokenHandle ,PSID SidToCheck ,PBOOL IsMember );
WINBOOL ConvertToAutoInheritPrivateObjectSecurity (PSECURITY_DESCRIPTOR ParentDescriptor ,PSECURITY_DESCRIPTOR CurrentSecurityDescriptor ,PSECURITY_DESCRIPTOR *NewSecurityDescriptor ,GUID *ObjectType ,BOOLEAN IsDirectoryObject ,PGENERIC_MAPPING GenericMapping );
WINBOOL CopySid (DWORD nDestinationSidLength ,PSID pDestinationSid ,PSID pSourceSid );
WINBOOL CreatePrivateObjectSecurity (PSECURITY_DESCRIPTOR ParentDescriptor ,PSECURITY_DESCRIPTOR CreatorDescriptor ,PSECURITY_DESCRIPTOR *NewDescriptor ,WINBOOL IsDirectoryObject ,HANDLE Token ,PGENERIC_MAPPING GenericMapping );
WINBOOL CreatePrivateObjectSecurityEx (PSECURITY_DESCRIPTOR ParentDescriptor ,PSECURITY_DESCRIPTOR CreatorDescriptor ,PSECURITY_DESCRIPTOR *NewDescriptor ,GUID *ObjectType ,WINBOOL IsContainerObject ,ULONG AutoInheritFlags ,HANDLE Token ,PGENERIC_MAPPING GenericMapping );
WINBOOL CreatePrivateObjectSecurityWithMultipleInheritance (PSECURITY_DESCRIPTOR ParentDescriptor ,PSECURITY_DESCRIPTOR CreatorDescriptor ,PSECURITY_DESCRIPTOR *NewDescriptor ,GUID **ObjectTypes ,ULONG GuidCount ,WINBOOL IsContainerObject ,ULONG AutoInheritFlags ,HANDLE Token ,PGENERIC_MAPPING GenericMapping );
WINBOOL CreateRestrictedToken (HANDLE ExistingTokenHandle ,DWORD Flags ,DWORD DisableSidCount ,PSID_AND_ATTRIBUTES SidsToDisable ,DWORD DeletePrivilegeCount ,PLUID_AND_ATTRIBUTES PrivilegesToDelete ,DWORD RestrictedSidCount ,PSID_AND_ATTRIBUTES SidsToRestrict ,PHANDLE NewTokenHandle );
WINBOOL CreateWellKnownSid (WELL_KNOWN_SID_TYPE WellKnownSidType ,PSID DomainSid ,PSID pSid ,DWORD *cbSid );
WINBOOL EqualDomainSid (PSID pSid1 ,PSID pSid2 ,WINBOOL *pfEqual );
WINBOOL DeleteAce (PACL pAcl ,DWORD dwAceIndex );
WINBOOL DestroyPrivateObjectSecurity (PSECURITY_DESCRIPTOR *ObjectDescriptor );
WINBOOL DuplicateToken (HANDLE ExistingTokenHandle ,SECURITY_IMPERSONATION_LEVEL ImpersonationLevel ,PHANDLE DuplicateTokenHandle );
WINBOOL DuplicateTokenEx (HANDLE hExistingToken ,DWORD dwDesiredAccess ,LPSECURITY_ATTRIBUTES lpTokenAttributes ,SECURITY_IMPERSONATION_LEVEL ImpersonationLevel ,TOKEN_TYPE TokenType ,PHANDLE phNewToken );
WINBOOL EqualPrefixSid (PSID pSid1 ,PSID pSid2 );
WINBOOL EqualSid (PSID pSid1 ,PSID pSid2 );
WINBOOL FindFirstFreeAce (PACL pAcl ,LPVOID *pAce );
PVOID FreeSid (PSID pSid );
WINBOOL GetAce (PACL pAcl ,DWORD dwAceIndex ,LPVOID *pAce );
WINBOOL GetAclInformation (PACL pAcl ,LPVOID pAclInformation ,DWORD nAclInformationLength ,ACL_INFORMATION_CLASS dwAclInformationClass );
WINBOOL GetFileSecurityW (LPCWSTR lpFileName ,SECURITY_INFORMATION RequestedInformation ,PSECURITY_DESCRIPTOR pSecurityDescriptor ,DWORD nLength ,LPDWORD lpnLengthNeeded );
WINBOOL GetKernelObjectSecurity (HANDLE Handle ,SECURITY_INFORMATION RequestedInformation ,PSECURITY_DESCRIPTOR pSecurityDescriptor ,DWORD nLength ,LPDWORD lpnLengthNeeded );
DWORD GetLengthSid (PSID pSid );
WINBOOL GetPrivateObjectSecurity (PSECURITY_DESCRIPTOR ObjectDescriptor ,SECURITY_INFORMATION SecurityInformation ,PSECURITY_DESCRIPTOR ResultantDescriptor ,DWORD DescriptorLength ,PDWORD ReturnLength );
WINBOOL GetSecurityDescriptorControl (PSECURITY_DESCRIPTOR pSecurityDescriptor ,PSECURITY_DESCRIPTOR_CONTROL pControl ,LPDWORD lpdwRevision );
WINBOOL GetSecurityDescriptorDacl (PSECURITY_DESCRIPTOR pSecurityDescriptor ,LPBOOL lpbDaclPresent ,PACL *pDacl ,LPBOOL lpbDaclDefaulted );
WINBOOL GetSecurityDescriptorGroup (PSECURITY_DESCRIPTOR pSecurityDescriptor ,PSID *pGroup ,LPBOOL lpbGroupDefaulted );
DWORD GetSecurityDescriptorLength (PSECURITY_DESCRIPTOR pSecurityDescriptor );
WINBOOL GetSecurityDescriptorOwner (PSECURITY_DESCRIPTOR pSecurityDescriptor ,PSID *pOwner ,LPBOOL lpbOwnerDefaulted );
DWORD GetSecurityDescriptorRMControl (PSECURITY_DESCRIPTOR SecurityDescriptor ,PUCHAR RMControl );
WINBOOL GetSecurityDescriptorSacl (PSECURITY_DESCRIPTOR pSecurityDescriptor ,LPBOOL lpbSaclPresent ,PACL *pSacl ,LPBOOL lpbSaclDefaulted );
PSID_IDENTIFIER_AUTHORITY GetSidIdentifierAuthority (PSID pSid );
DWORD GetSidLengthRequired (UCHAR nSubAuthorityCount );
PDWORD GetSidSubAuthority (PSID pSid ,DWORD nSubAuthority );
PUCHAR GetSidSubAuthorityCount (PSID pSid );
WINBOOL GetTokenInformation (HANDLE TokenHandle ,TOKEN_INFORMATION_CLASS TokenInformationClass ,LPVOID TokenInformation ,DWORD TokenInformationLength ,PDWORD ReturnLength );
WINBOOL GetWindowsAccountDomainSid (PSID pSid ,PSID pDomainSid ,DWORD *cbDomainSid );
WINBOOL ImpersonateAnonymousToken (HANDLE ThreadHandle );
WINBOOL ImpersonateLoggedOnUser (HANDLE hToken );
WINBOOL ImpersonateSelf (SECURITY_IMPERSONATION_LEVEL ImpersonationLevel );
WINBOOL InitializeAcl (PACL pAcl ,DWORD nAclLength ,DWORD dwAclRevision );
WINBOOL InitializeSecurityDescriptor (PSECURITY_DESCRIPTOR pSecurityDescriptor ,DWORD dwRevision );
WINBOOL InitializeSid (PSID Sid ,PSID_IDENTIFIER_AUTHORITY pIdentifierAuthority ,BYTE nSubAuthorityCount );
WINBOOL IsTokenRestricted (HANDLE TokenHandle );
WINBOOL IsValidAcl (PACL pAcl );
WINBOOL IsValidSecurityDescriptor (PSECURITY_DESCRIPTOR pSecurityDescriptor );
WINBOOL IsValidSid (PSID pSid );
WINBOOL IsWellKnownSid (PSID pSid ,WELL_KNOWN_SID_TYPE WellKnownSidType );
WINBOOL MakeAbsoluteSD (PSECURITY_DESCRIPTOR pSelfRelativeSecurityDescriptor ,PSECURITY_DESCRIPTOR pAbsoluteSecurityDescriptor ,LPDWORD lpdwAbsoluteSecurityDescriptorSize ,PACL pDacl ,LPDWORD lpdwDaclSize ,PACL pSacl ,LPDWORD lpdwSaclSize ,PSID pOwner ,LPDWORD lpdwOwnerSize ,PSID pPrimaryGroup ,LPDWORD lpdwPrimaryGroupSize );
WINBOOL MakeSelfRelativeSD (PSECURITY_DESCRIPTOR pAbsoluteSecurityDescriptor ,PSECURITY_DESCRIPTOR pSelfRelativeSecurityDescriptor ,LPDWORD lpdwBufferLength );
void MapGenericMask (PDWORD AccessMask ,PGENERIC_MAPPING GenericMapping );
WINBOOL ObjectCloseAuditAlarmW (LPCWSTR SubsystemName ,LPVOID HandleId ,WINBOOL GenerateOnClose );
WINBOOL ObjectDeleteAuditAlarmW (LPCWSTR SubsystemName ,LPVOID HandleId ,WINBOOL GenerateOnClose );
WINBOOL ObjectOpenAuditAlarmW (LPCWSTR SubsystemName ,LPVOID HandleId ,LPWSTR ObjectTypeName ,LPWSTR ObjectName ,PSECURITY_DESCRIPTOR pSecurityDescriptor ,HANDLE ClientToken ,DWORD DesiredAccess ,DWORD GrantedAccess ,PPRIVILEGE_SET Privileges ,WINBOOL ObjectCreation ,WINBOOL AccessGranted ,LPBOOL GenerateOnClose );
WINBOOL ObjectPrivilegeAuditAlarmW (LPCWSTR SubsystemName ,LPVOID HandleId ,HANDLE ClientToken ,DWORD DesiredAccess ,PPRIVILEGE_SET Privileges ,WINBOOL AccessGranted );
WINBOOL PrivilegeCheck (HANDLE ClientToken ,PPRIVILEGE_SET RequiredPrivileges ,LPBOOL pfResult );
WINBOOL PrivilegedServiceAuditAlarmW (LPCWSTR SubsystemName ,LPCWSTR ServiceName ,HANDLE ClientToken ,PPRIVILEGE_SET Privileges ,WINBOOL AccessGranted );
WINBOOL RevertToSelf (void );
WINBOOL SetAclInformation (PACL pAcl ,LPVOID pAclInformation ,DWORD nAclInformationLength ,ACL_INFORMATION_CLASS dwAclInformationClass );
WINBOOL SetFileSecurityW (LPCWSTR lpFileName ,SECURITY_INFORMATION SecurityInformation ,PSECURITY_DESCRIPTOR pSecurityDescriptor );
WINBOOL SetKernelObjectSecurity (HANDLE Handle ,SECURITY_INFORMATION SecurityInformation ,PSECURITY_DESCRIPTOR SecurityDescriptor );
WINBOOL SetPrivateObjectSecurity (SECURITY_INFORMATION SecurityInformation ,PSECURITY_DESCRIPTOR ModificationDescriptor ,PSECURITY_DESCRIPTOR *ObjectsSecurityDescriptor ,PGENERIC_MAPPING GenericMapping ,HANDLE Token );
WINBOOL SetPrivateObjectSecurityEx (SECURITY_INFORMATION SecurityInformation ,PSECURITY_DESCRIPTOR ModificationDescriptor ,PSECURITY_DESCRIPTOR *ObjectsSecurityDescriptor ,ULONG AutoInheritFlags ,PGENERIC_MAPPING GenericMapping ,HANDLE Token );
WINBOOL SetSecurityDescriptorControl (PSECURITY_DESCRIPTOR pSecurityDescriptor ,SECURITY_DESCRIPTOR_CONTROL ControlBitsOfInterest ,SECURITY_DESCRIPTOR_CONTROL ControlBitsToSet );
WINBOOL SetSecurityDescriptorDacl (PSECURITY_DESCRIPTOR pSecurityDescriptor ,WINBOOL bDaclPresent ,PACL pDacl ,WINBOOL bDaclDefaulted );
WINBOOL SetSecurityDescriptorGroup (PSECURITY_DESCRIPTOR pSecurityDescriptor ,PSID pGroup ,WINBOOL bGroupDefaulted );
WINBOOL SetSecurityDescriptorOwner (PSECURITY_DESCRIPTOR pSecurityDescriptor ,PSID pOwner ,WINBOOL bOwnerDefaulted );
DWORD SetSecurityDescriptorRMControl (PSECURITY_DESCRIPTOR SecurityDescriptor ,PUCHAR RMControl );
WINBOOL SetSecurityDescriptorSacl (PSECURITY_DESCRIPTOR pSecurityDescriptor ,WINBOOL bSaclPresent ,PACL pSacl ,WINBOOL bSaclDefaulted );
WINBOOL SetTokenInformation (HANDLE TokenHandle ,TOKEN_INFORMATION_CLASS TokenInformationClass ,LPVOID TokenInformation ,DWORD TokenInformationLength );
// m:\mingw\x86_64-w64-mingw32\include\synchapi.h

typedef RTL_SRWLOCK SRWLOCK ;
typedef RTL_SRWLOCK *PSRWLOCK ;

typedef RTL_RUN_ONCE INIT_ONCE ;
typedef PRTL_RUN_ONCE PINIT_ONCE ;
typedef PRTL_RUN_ONCE LPINIT_ONCE ;
typedef WINBOOL (*PINIT_ONCE_FN )(PINIT_ONCE InitOnce ,PVOID Parameter ,PVOID *Context );
typedef RTL_CONDITION_VARIABLE CONDITION_VARIABLE ;
typedef RTL_CONDITION_VARIABLE *PCONDITION_VARIABLE ;

void EnterCriticalSection (LPCRITICAL_SECTION lpCriticalSection );
void LeaveCriticalSection (LPCRITICAL_SECTION lpCriticalSection );
WINBOOL TryEnterCriticalSection (LPCRITICAL_SECTION lpCriticalSection );
void DeleteCriticalSection (LPCRITICAL_SECTION lpCriticalSection );
WINBOOL SetEvent (HANDLE hEvent );
WINBOOL ResetEvent (HANDLE hEvent );
WINBOOL ReleaseSemaphore (HANDLE hSemaphore ,LONG lReleaseCount ,LPLONG lpPreviousCount );
WINBOOL ReleaseMutex (HANDLE hMutex );
DWORD WaitForSingleObjectEx (HANDLE hHandle ,DWORD dwMilliseconds ,WINBOOL bAlertable );
DWORD WaitForMultipleObjectsEx (DWORD nCount ,const HANDLE *lpHandles ,WINBOOL bWaitAll ,DWORD dwMilliseconds ,WINBOOL bAlertable );
HANDLE OpenMutexW (DWORD dwDesiredAccess ,WINBOOL bInheritHandle ,LPCWSTR lpName );
HANDLE OpenEventA (DWORD dwDesiredAccess ,WINBOOL bInheritHandle ,LPCSTR lpName );
HANDLE OpenEventW (DWORD dwDesiredAccess ,WINBOOL bInheritHandle ,LPCWSTR lpName );
HANDLE OpenSemaphoreW (DWORD dwDesiredAccess ,WINBOOL bInheritHandle ,LPCWSTR lpName );
WINBOOL WaitOnAddress (volatile void *Address ,PVOID CompareAddress ,SIZE_T AddressSize ,DWORD dwMilliseconds );
void WakeByAddressSingle (PVOID Address );
void WakeByAddressAll (PVOID Address );
typedef void (*PTIMERAPCROUTINE )(LPVOID lpArgToCompletionRoutine ,DWORD dwTimerLowValue ,DWORD dwTimerHighValue );
typedef RTL_BARRIER SYNCHRONIZATION_BARRIER ;
typedef PRTL_BARRIER PSYNCHRONIZATION_BARRIER ;
typedef PRTL_BARRIER LPSYNCHRONIZATION_BARRIER ;
void InitializeCriticalSection (LPCRITICAL_SECTION lpCriticalSection );
WINBOOL InitializeCriticalSectionAndSpinCount (LPCRITICAL_SECTION lpCriticalSection ,DWORD dwSpinCount );
DWORD SetCriticalSectionSpinCount (LPCRITICAL_SECTION lpCriticalSection ,DWORD dwSpinCount );
DWORD WaitForSingleObject (HANDLE hHandle ,DWORD dwMilliseconds );
DWORD SleepEx (DWORD dwMilliseconds ,WINBOOL bAlertable );
HANDLE CreateMutexA (LPSECURITY_ATTRIBUTES lpMutexAttributes ,WINBOOL bInitialOwner ,LPCSTR lpName );
HANDLE CreateMutexW (LPSECURITY_ATTRIBUTES lpMutexAttributes ,WINBOOL bInitialOwner ,LPCWSTR lpName );
HANDLE CreateEventA (LPSECURITY_ATTRIBUTES lpEventAttributes ,WINBOOL bManualReset ,WINBOOL bInitialState ,LPCSTR lpName );
HANDLE CreateEventW (LPSECURITY_ATTRIBUTES lpEventAttributes ,WINBOOL bManualReset ,WINBOOL bInitialState ,LPCWSTR lpName );
WINBOOL SetWaitableTimer (HANDLE hTimer ,const LARGE_INTEGER *lpDueTime ,LONG lPeriod ,PTIMERAPCROUTINE pfnCompletionRoutine ,LPVOID lpArgToCompletionRoutine ,WINBOOL fResume );
WINBOOL CancelWaitableTimer (HANDLE hTimer );
HANDLE OpenWaitableTimerW (DWORD dwDesiredAccess ,WINBOOL bInheritHandle ,LPCWSTR lpTimerName );
WINBOOL EnterSynchronizationBarrier (LPSYNCHRONIZATION_BARRIER lpBarrier ,DWORD dwFlags );
WINBOOL InitializeSynchronizationBarrier (LPSYNCHRONIZATION_BARRIER lpBarrier ,LONG lTotalThreads ,LONG lSpinCount );
WINBOOL DeleteSynchronizationBarrier (LPSYNCHRONIZATION_BARRIER lpBarrier );
void Sleep (DWORD dwMilliseconds );
DWORD SignalObjectAndWait (HANDLE hObjectToSignal ,HANDLE hObjectToWaitOn ,DWORD dwMilliseconds ,WINBOOL bAlertable );
// m:\mingw\x86_64-w64-mingw32\include\sysinfoapi.h

typedef struct _SYSTEM_INFO {union {DWORD dwOemId ;struct {WORD wProcessorArchitecture ;WORD wReserved ;};};DWORD dwPageSize ;LPVOID lpMinimumApplicationAddress ;LPVOID lpMaximumApplicationAddress ;DWORD_PTR dwActiveProcessorMask ;DWORD dwNumberOfProcessors ;DWORD dwProcessorType ;DWORD dwAllocationGranularity ;WORD wProcessorLevel ;WORD wProcessorRevision ;}SYSTEM_INFO ;
typedef struct _SYSTEM_INFO {union {DWORD dwOemId ;struct {WORD wProcessorArchitecture ;WORD wReserved ;};};DWORD dwPageSize ;LPVOID lpMinimumApplicationAddress ;LPVOID lpMaximumApplicationAddress ;DWORD_PTR dwActiveProcessorMask ;DWORD dwNumberOfProcessors ;DWORD dwProcessorType ;DWORD dwAllocationGranularity ;WORD wProcessorLevel ;WORD wProcessorRevision ;}*LPSYSTEM_INFO ;

void GetSystemTime (LPSYSTEMTIME lpSystemTime );
void GetSystemTimeAsFileTime (LPFILETIME lpSystemTimeAsFileTime );
void GetLocalTime (LPSYSTEMTIME lpSystemTime );
void GetNativeSystemInfo (LPSYSTEM_INFO lpSystemInfo );
DWORD GetVersion (void );
typedef struct _MEMORYSTATUSEX {DWORD dwLength ;DWORD dwMemoryLoad ;DWORDLONG ullTotalPhys ;DWORDLONG ullAvailPhys ;DWORDLONG ullTotalPageFile ;DWORDLONG ullAvailPageFile ;DWORDLONG ullTotalVirtual ;DWORDLONG ullAvailVirtual ;DWORDLONG ullAvailExtendedVirtual ;}MEMORYSTATUSEX ;
typedef struct _MEMORYSTATUSEX {DWORD dwLength ;DWORD dwMemoryLoad ;DWORDLONG ullTotalPhys ;DWORDLONG ullAvailPhys ;DWORDLONG ullTotalPageFile ;DWORDLONG ullAvailPageFile ;DWORDLONG ullTotalVirtual ;DWORDLONG ullAvailVirtual ;DWORDLONG ullAvailExtendedVirtual ;}*LPMEMORYSTATUSEX ;

typedef enum _COMPUTER_NAME_FORMAT {ComputerNameNetBIOS ,ComputerNameDnsHostname ,ComputerNameDnsDomain ,ComputerNameDnsFullyQualified ,ComputerNamePhysicalNetBIOS ,ComputerNamePhysicalDnsHostname ,ComputerNamePhysicalDnsDomain ,ComputerNamePhysicalDnsFullyQualified ,ComputerNameMax }COMPUTER_NAME_FORMAT ;
WINBOOL GlobalMemoryStatusEx (LPMEMORYSTATUSEX lpBuffer );
WINBOOL SetLocalTime (const SYSTEMTIME *lpSystemTime );
void GetSystemInfo (LPSYSTEM_INFO lpSystemInfo );
DWORD GetTickCount (void );
WINBOOL GetSystemTimeAdjustment (PDWORD lpTimeAdjustment ,PDWORD lpTimeIncrement ,PBOOL lpTimeAdjustmentDisabled );
UINT GetSystemDirectoryA (LPSTR lpBuffer ,UINT uSize );
UINT GetSystemDirectoryW (LPWSTR lpBuffer ,UINT uSize );
UINT GetWindowsDirectoryA (LPSTR lpBuffer ,UINT uSize );
UINT GetWindowsDirectoryW (LPWSTR lpBuffer ,UINT uSize );
UINT GetSystemWindowsDirectoryA (LPSTR lpBuffer ,UINT uSize );
UINT GetSystemWindowsDirectoryW (LPWSTR lpBuffer ,UINT uSize );
WINBOOL GetComputerNameExA (COMPUTER_NAME_FORMAT NameType ,LPSTR lpBuffer ,LPDWORD nSize );
WINBOOL GetComputerNameExW (COMPUTER_NAME_FORMAT NameType ,LPWSTR lpBuffer ,LPDWORD nSize );
WINBOOL SetComputerNameExW (COMPUTER_NAME_FORMAT NameType ,LPCWSTR lpBuffer );
WINBOOL SetSystemTime (const SYSTEMTIME *lpSystemTime );
WINBOOL GetVersionExA (LPOSVERSIONINFOA lpVersionInformation );
WINBOOL GetVersionExW (LPOSVERSIONINFOW lpVersionInformation );
WINBOOL GetLogicalProcessorInformation (PSYSTEM_LOGICAL_PROCESSOR_INFORMATION Buffer ,PDWORD ReturnedLength );
ULONGLONG VerSetConditionMask (ULONGLONG ConditionMask ,ULONG TypeMask ,UCHAR Condition );
void GetSystemTimePreciseAsFileTime (LPFILETIME lpSystemTimeAsFileTime );
UINT EnumSystemFirmwareTables (DWORD FirmwareTableProviderSignature ,PVOID pFirmwareTableEnumBuffer ,DWORD BufferSize );
UINT GetSystemFirmwareTable (DWORD FirmwareTableProviderSignature ,DWORD FirmwareTableID ,PVOID pFirmwareTableBuffer ,DWORD BufferSize );
// m:\mingw\x86_64-w64-mingw32\include\threadpoollegacyapiset.h

WINBOOL CreateTimerQueueTimer (PHANDLE phNewTimer ,HANDLE TimerQueue ,WAITORTIMERCALLBACK Callback ,PVOID Parameter ,DWORD DueTime ,DWORD Period ,ULONG Flags );
WINBOOL DeleteTimerQueueTimer (HANDLE TimerQueue ,HANDLE Timer ,HANDLE CompletionEvent );
WINBOOL QueueUserWorkItem (LPTHREAD_START_ROUTINE Function ,PVOID Context ,ULONG Flags );
WINBOOL UnregisterWaitEx (HANDLE WaitHandle ,HANDLE CompletionEvent );
HANDLE CreateTimerQueue (void );
WINBOOL ChangeTimerQueueTimer (HANDLE TimerQueue ,HANDLE Timer ,ULONG DueTime ,ULONG Period );
WINBOOL DeleteTimerQueueEx (HANDLE TimerQueue ,HANDLE CompletionEvent );
// m:\mingw\x86_64-w64-mingw32\include\utilapiset.h

PVOID EncodePointer (PVOID Ptr );
PVOID DecodePointer (PVOID Ptr );
PVOID EncodeSystemPointer (PVOID Ptr );
PVOID DecodeSystemPointer (PVOID Ptr );
WINBOOL Beep (DWORD dwFreq ,DWORD dwDuration );
// m:\mingw\x86_64-w64-mingw32\include\wow64apiset.h

WINBOOL Wow64DisableWow64FsRedirection (PVOID *OldValue );
WINBOOL Wow64RevertWow64FsRedirection (PVOID OlValue );
WINBOOL IsWow64Process (HANDLE hProcess ,PBOOL Wow64Process );
// m:\mingw\x86_64-w64-mingw32\include\winbase.h

typedef void (*PFIBER_START_ROUTINE )(LPVOID lpFiberParameter );
typedef PFIBER_START_ROUTINE LPFIBER_START_ROUTINE ;
typedef LPVOID LPLDT_ENTRY ;
typedef struct _COMMPROP {WORD wPacketLength ;WORD wPacketVersion ;DWORD dwServiceMask ;DWORD dwReserved1 ;DWORD dwMaxTxQueue ;DWORD dwMaxRxQueue ;DWORD dwMaxBaud ;DWORD dwProvSubType ;DWORD dwProvCapabilities ;DWORD dwSettableParams ;DWORD dwSettableBaud ;WORD wSettableData ;WORD wSettableStopParity ;DWORD dwCurrentTxQueue ;DWORD dwCurrentRxQueue ;DWORD dwProvSpec1 ;DWORD dwProvSpec2 ;WCHAR wcProvChar [1 ];}COMMPROP ;
typedef struct _COMMPROP {WORD wPacketLength ;WORD wPacketVersion ;DWORD dwServiceMask ;DWORD dwReserved1 ;DWORD dwMaxTxQueue ;DWORD dwMaxRxQueue ;DWORD dwMaxBaud ;DWORD dwProvSubType ;DWORD dwProvCapabilities ;DWORD dwSettableParams ;DWORD dwSettableBaud ;WORD wSettableData ;WORD wSettableStopParity ;DWORD dwCurrentTxQueue ;DWORD dwCurrentRxQueue ;DWORD dwProvSpec1 ;DWORD dwProvSpec2 ;WCHAR wcProvChar [1 ];}*LPCOMMPROP ;

typedef struct _COMSTAT {DWORD fCtsHold :1 ;DWORD fDsrHold :1 ;DWORD fRlsdHold :1 ;DWORD fXoffHold :1 ;DWORD fXoffSent :1 ;DWORD fEof :1 ;DWORD fTxim :1 ;DWORD fReserved :25 ;DWORD cbInQue ;DWORD cbOutQue ;}COMSTAT ;
typedef struct _COMSTAT {DWORD fCtsHold :1 ;DWORD fDsrHold :1 ;DWORD fRlsdHold :1 ;DWORD fXoffHold :1 ;DWORD fXoffSent :1 ;DWORD fEof :1 ;DWORD fTxim :1 ;DWORD fReserved :25 ;DWORD cbInQue ;DWORD cbOutQue ;}*LPCOMSTAT ;

typedef struct _DCB {DWORD DCBlength ;DWORD BaudRate ;DWORD fBinary :1 ;DWORD fParity :1 ;DWORD fOutxCtsFlow :1 ;DWORD fOutxDsrFlow :1 ;DWORD fDtrControl :2 ;DWORD fDsrSensitivity :1 ;DWORD fTXContinueOnXoff :1 ;DWORD fOutX :1 ;DWORD fInX :1 ;DWORD fErrorChar :1 ;DWORD fNull :1 ;DWORD fRtsControl :2 ;DWORD fAbortOnError :1 ;DWORD fDummy2 :17 ;WORD wReserved ;WORD XonLim ;WORD XoffLim ;BYTE ByteSize ;BYTE Parity ;BYTE StopBits ;char XonChar ;char XoffChar ;char ErrorChar ;char EofChar ;char EvtChar ;WORD wReserved1 ;}DCB ;
typedef struct _DCB {DWORD DCBlength ;DWORD BaudRate ;DWORD fBinary :1 ;DWORD fParity :1 ;DWORD fOutxCtsFlow :1 ;DWORD fOutxDsrFlow :1 ;DWORD fDtrControl :2 ;DWORD fDsrSensitivity :1 ;DWORD fTXContinueOnXoff :1 ;DWORD fOutX :1 ;DWORD fInX :1 ;DWORD fErrorChar :1 ;DWORD fNull :1 ;DWORD fRtsControl :2 ;DWORD fAbortOnError :1 ;DWORD fDummy2 :17 ;WORD wReserved ;WORD XonLim ;WORD XoffLim ;BYTE ByteSize ;BYTE Parity ;BYTE StopBits ;char XonChar ;char XoffChar ;char ErrorChar ;char EofChar ;char EvtChar ;WORD wReserved1 ;}*LPDCB ;

typedef struct _COMMTIMEOUTS {DWORD ReadIntervalTimeout ;DWORD ReadTotalTimeoutMultiplier ;DWORD ReadTotalTimeoutConstant ;DWORD WriteTotalTimeoutMultiplier ;DWORD WriteTotalTimeoutConstant ;}COMMTIMEOUTS ;
typedef struct _COMMTIMEOUTS {DWORD ReadIntervalTimeout ;DWORD ReadTotalTimeoutMultiplier ;DWORD ReadTotalTimeoutConstant ;DWORD WriteTotalTimeoutMultiplier ;DWORD WriteTotalTimeoutConstant ;}*LPCOMMTIMEOUTS ;

typedef struct _COMMCONFIG {DWORD dwSize ;WORD wVersion ;WORD wReserved ;DCB dcb ;DWORD dwProviderSubType ;DWORD dwProviderOffset ;DWORD dwProviderSize ;WCHAR wcProviderData [1 ];}COMMCONFIG ;
typedef struct _COMMCONFIG {DWORD dwSize ;WORD wVersion ;WORD wReserved ;DCB dcb ;DWORD dwProviderSubType ;DWORD dwProviderOffset ;DWORD dwProviderSize ;WCHAR wcProviderData [1 ];}*LPCOMMCONFIG ;

typedef struct _MEMORYSTATUS {DWORD dwLength ;DWORD dwMemoryLoad ;SIZE_T dwTotalPhys ;SIZE_T dwAvailPhys ;SIZE_T dwTotalPageFile ;SIZE_T dwAvailPageFile ;SIZE_T dwTotalVirtual ;SIZE_T dwAvailVirtual ;}MEMORYSTATUS ;
typedef struct _MEMORYSTATUS {DWORD dwLength ;DWORD dwMemoryLoad ;SIZE_T dwTotalPhys ;SIZE_T dwAvailPhys ;SIZE_T dwTotalPageFile ;SIZE_T dwAvailPageFile ;SIZE_T dwTotalVirtual ;SIZE_T dwAvailVirtual ;}*LPMEMORYSTATUS ;

typedef struct _JIT_DEBUG_INFO {DWORD dwSize ;DWORD dwProcessorArchitecture ;DWORD dwThreadID ;DWORD dwReserved0 ;ULONG64 lpExceptionAddress ;ULONG64 lpExceptionRecord ;ULONG64 lpContextRecord ;}JIT_DEBUG_INFO ;
typedef struct _JIT_DEBUG_INFO {DWORD dwSize ;DWORD dwProcessorArchitecture ;DWORD dwThreadID ;DWORD dwReserved0 ;ULONG64 lpExceptionAddress ;ULONG64 lpExceptionRecord ;ULONG64 lpContextRecord ;}*LPJIT_DEBUG_INFO ;

typedef JIT_DEBUG_INFO JIT_DEBUG_INFO32 ;
typedef JIT_DEBUG_INFO *LPJIT_DEBUG_INFO32 ;

typedef JIT_DEBUG_INFO JIT_DEBUG_INFO64 ;
typedef JIT_DEBUG_INFO *LPJIT_DEBUG_INFO64 ;

typedef PEXCEPTION_RECORD LPEXCEPTION_RECORD ;
typedef PEXCEPTION_POINTERS LPEXCEPTION_POINTERS ;
typedef struct _OFSTRUCT {BYTE cBytes ;BYTE fFixedDisk ;WORD nErrCode ;WORD Reserved1 ;WORD Reserved2 ;CHAR szPathName [128 ];}OFSTRUCT ;
typedef struct _OFSTRUCT {BYTE cBytes ;BYTE fFixedDisk ;WORD nErrCode ;WORD Reserved1 ;WORD Reserved2 ;CHAR szPathName [128 ];}*LPOFSTRUCT ;
typedef struct _OFSTRUCT {BYTE cBytes ;BYTE fFixedDisk ;WORD nErrCode ;WORD Reserved1 ;WORD Reserved2 ;CHAR szPathName [128 ];}*POFSTRUCT ;

LONG _InterlockedAnd (LONG volatile *Destination ,LONG Value );
LONG _InterlockedOr (LONG volatile *Destination ,LONG Value );
LONG _InterlockedXor (LONG volatile *Destination ,LONG Value );
char _InterlockedAnd8 (char volatile *Destination ,char Value );
char _InterlockedOr8 (char volatile *Destination ,char Value );
char _InterlockedXor8 (char volatile *Destination ,char Value );
SHORT _InterlockedAnd16 (SHORT volatile *Destination ,SHORT Value );
SHORT _InterlockedOr16 (SHORT volatile *Destination ,SHORT Value );
SHORT _InterlockedXor16 (SHORT volatile *Destination ,SHORT Value );
int WinMain (HINSTANCE hInstance ,HINSTANCE hPrevInstance ,LPSTR lpCmdLine ,int nShowCmd );
int wWinMain (HINSTANCE hInstance ,HINSTANCE hPrevInstance ,LPWSTR lpCmdLine ,int nShowCmd );
HGLOBAL GlobalAlloc (UINT uFlags ,SIZE_T dwBytes );
HGLOBAL GlobalReAlloc (HGLOBAL hMem ,SIZE_T dwBytes ,UINT uFlags );
SIZE_T GlobalSize (HGLOBAL hMem );
UINT GlobalFlags (HGLOBAL hMem );
LPVOID GlobalLock (HGLOBAL hMem );
HGLOBAL GlobalHandle (LPCVOID pMem );
WINBOOL GlobalUnlock (HGLOBAL hMem );
HGLOBAL GlobalFree (HGLOBAL hMem );
SIZE_T GlobalCompact (DWORD dwMinFree );
void GlobalFix (HGLOBAL hMem );
void GlobalUnfix (HGLOBAL hMem );
LPVOID GlobalWire (HGLOBAL hMem );
WINBOOL GlobalUnWire (HGLOBAL hMem );
void GlobalMemoryStatus (LPMEMORYSTATUS lpBuffer );
HLOCAL LocalAlloc (UINT uFlags ,SIZE_T uBytes );
HLOCAL LocalReAlloc (HLOCAL hMem ,SIZE_T uBytes ,UINT uFlags );
LPVOID LocalLock (HLOCAL hMem );
HLOCAL LocalHandle (LPCVOID pMem );
WINBOOL LocalUnlock (HLOCAL hMem );
SIZE_T LocalSize (HLOCAL hMem );
UINT LocalFlags (HLOCAL hMem );
HLOCAL LocalFree (HLOCAL hMem );
SIZE_T LocalShrink (HLOCAL hMem ,UINT cbNewSize );
SIZE_T LocalCompact (UINT uMinFree );
WINBOOL GetBinaryTypeA (LPCSTR lpApplicationName ,LPDWORD lpBinaryType );
WINBOOL GetBinaryTypeW (LPCWSTR lpApplicationName ,LPDWORD lpBinaryType );
DWORD GetShortPathNameA (LPCSTR lpszLongPath ,LPSTR lpszShortPath ,DWORD cchBuffer );
WINBOOL GetProcessAffinityMask (HANDLE hProcess ,PDWORD_PTR lpProcessAffinityMask ,PDWORD_PTR lpSystemAffinityMask );
WINBOOL SetProcessAffinityMask (HANDLE hProcess ,DWORD_PTR dwProcessAffinityMask );
WINBOOL GetProcessIoCounters (HANDLE hProcess ,PIO_COUNTERS lpIoCounters );
WINBOOL GetProcessWorkingSetSize (HANDLE hProcess ,PSIZE_T lpMinimumWorkingSetSize ,PSIZE_T lpMaximumWorkingSetSize );
WINBOOL SetProcessWorkingSetSize (HANDLE hProcess ,SIZE_T dwMinimumWorkingSetSize ,SIZE_T dwMaximumWorkingSetSize );
void FatalExit (int ExitCode );
WINBOOL SetEnvironmentStringsA (LPCH NewEnvironment );
void RaiseFailFastException (PEXCEPTION_RECORD pExceptionRecord ,PCONTEXT pContextRecord ,DWORD dwFlags );
DWORD SetThreadIdealProcessor (HANDLE hThread ,DWORD dwIdealProcessor );
LPVOID CreateFiber (SIZE_T dwStackSize ,LPFIBER_START_ROUTINE lpStartAddress ,LPVOID lpParameter );
LPVOID CreateFiberEx (SIZE_T dwStackCommitSize ,SIZE_T dwStackReserveSize ,DWORD dwFlags ,LPFIBER_START_ROUTINE lpStartAddress ,LPVOID lpParameter );
void DeleteFiber (LPVOID lpFiber );
LPVOID ConvertThreadToFiber (LPVOID lpParameter );
LPVOID ConvertThreadToFiberEx (LPVOID lpParameter ,DWORD dwFlags );
WINBOOL ConvertFiberToThread (void );
void SwitchToFiber (LPVOID lpFiber );
DWORD_PTR SetThreadAffinityMask (HANDLE hThread ,DWORD_PTR dwThreadAffinityMask );
typedef enum _THREAD_INFORMATION_CLASS {ThreadMemoryPriority ,ThreadAbsoluteCpuPriority ,ThreadInformationClassMax }THREAD_INFORMATION_CLASS ;
typedef enum _PROCESS_INFORMATION_CLASS {ProcessMemoryPriority ,ProcessInformationClassMax }PROCESS_INFORMATION_CLASS ;
WINBOOL SetProcessPriorityBoost (HANDLE hProcess ,WINBOOL bDisablePriorityBoost );
WINBOOL GetProcessPriorityBoost (HANDLE hProcess ,PBOOL pDisablePriorityBoost );
WINBOOL RequestWakeupLatency (LATENCY_TIME latency );
WINBOOL IsSystemResumeAutomatic (void );
WINBOOL GetThreadIOPendingFlag (HANDLE hThread ,PBOOL lpIOIsPending );
WINBOOL GetThreadSelectorEntry (HANDLE hThread ,DWORD dwSelector ,LPLDT_ENTRY lpSelectorEntry );
EXECUTION_STATE SetThreadExecutionState (EXECUTION_STATE esFlags );
DWORD GetThreadErrorMode (void );
WINBOOL SetThreadErrorMode (DWORD dwNewMode ,LPDWORD lpOldMode );
WINBOOL DebugSetProcessKillOnExit (WINBOOL KillOnExit );
WINBOOL DebugBreakProcess (HANDLE Process );
typedef enum _DEP_SYSTEM_POLICY_TYPE {DEPPolicyAlwaysOff =0 ,DEPPolicyAlwaysOn ,DEPPolicyOptIn ,DEPPolicyOptOut ,DEPTotalPolicyCount }DEP_SYSTEM_POLICY_TYPE ;
WINBOOL PulseEvent (HANDLE hEvent );
DWORD WaitForMultipleObjects (DWORD nCount ,const HANDLE *lpHandles ,WINBOOL bWaitAll ,DWORD dwMilliseconds );
ATOM GlobalDeleteAtom (ATOM nAtom );
WINBOOL InitAtomTable (DWORD nSize );
ATOM DeleteAtom (ATOM nAtom );
UINT SetHandleCount (UINT uNumber );
WINBOOL RequestDeviceWakeup (HANDLE hDevice );
WINBOOL CancelDeviceWakeupRequest (HANDLE hDevice );
WINBOOL GetDevicePowerState (HANDLE hDevice ,WINBOOL *pfOn );
WINBOOL SetMessageWaitingIndicator (HANDLE hMsgIndicator ,ULONG ulMsgCount );
WINBOOL SetFileShortNameA (HANDLE hFile ,LPCSTR lpShortName );
WINBOOL SetFileShortNameW (HANDLE hFile ,LPCWSTR lpShortName );
DWORD LoadModule (LPCSTR lpModuleName ,LPVOID lpParameterBlock );
UINT WinExec (LPCSTR lpCmdLine ,UINT uCmdShow );
WINBOOL ClearCommBreak (HANDLE hFile );
WINBOOL ClearCommError (HANDLE hFile ,LPDWORD lpErrors ,LPCOMSTAT lpStat );
WINBOOL SetupComm (HANDLE hFile ,DWORD dwInQueue ,DWORD dwOutQueue );
WINBOOL EscapeCommFunction (HANDLE hFile ,DWORD dwFunc );
WINBOOL GetCommConfig (HANDLE hCommDev ,LPCOMMCONFIG lpCC ,LPDWORD lpdwSize );
WINBOOL GetCommMask (HANDLE hFile ,LPDWORD lpEvtMask );
WINBOOL GetCommProperties (HANDLE hFile ,LPCOMMPROP lpCommProp );
WINBOOL GetCommModemStatus (HANDLE hFile ,LPDWORD lpModemStat );
WINBOOL GetCommState (HANDLE hFile ,LPDCB lpDCB );
WINBOOL GetCommTimeouts (HANDLE hFile ,LPCOMMTIMEOUTS lpCommTimeouts );
WINBOOL PurgeComm (HANDLE hFile ,DWORD dwFlags );
WINBOOL SetCommBreak (HANDLE hFile );
WINBOOL SetCommConfig (HANDLE hCommDev ,LPCOMMCONFIG lpCC ,DWORD dwSize );
WINBOOL SetCommMask (HANDLE hFile ,DWORD dwEvtMask );
WINBOOL SetCommState (HANDLE hFile ,LPDCB lpDCB );
WINBOOL SetCommTimeouts (HANDLE hFile ,LPCOMMTIMEOUTS lpCommTimeouts );
WINBOOL TransmitCommChar (HANDLE hFile ,char cChar );
WINBOOL WaitCommEvent (HANDLE hFile ,LPDWORD lpEvtMask ,LPOVERLAPPED lpOverlapped );
DWORD SetTapePosition (HANDLE hDevice ,DWORD dwPositionMethod ,DWORD dwPartition ,DWORD dwOffsetLow ,DWORD dwOffsetHigh ,WINBOOL bImmediate );
DWORD GetTapePosition (HANDLE hDevice ,DWORD dwPositionType ,LPDWORD lpdwPartition ,LPDWORD lpdwOffsetLow ,LPDWORD lpdwOffsetHigh );
DWORD PrepareTape (HANDLE hDevice ,DWORD dwOperation ,WINBOOL bImmediate );
DWORD EraseTape (HANDLE hDevice ,DWORD dwEraseType ,WINBOOL bImmediate );
DWORD CreateTapePartition (HANDLE hDevice ,DWORD dwPartitionMethod ,DWORD dwCount ,DWORD dwSize );
DWORD WriteTapemark (HANDLE hDevice ,DWORD dwTapemarkType ,DWORD dwTapemarkCount ,WINBOOL bImmediate );
DWORD GetTapeStatus (HANDLE hDevice );
DWORD GetTapeParameters (HANDLE hDevice ,DWORD dwOperation ,LPDWORD lpdwSize ,LPVOID lpTapeInformation );
DWORD SetTapeParameters (HANDLE hDevice ,DWORD dwOperation ,LPVOID lpTapeInformation );
DEP_SYSTEM_POLICY_TYPE GetSystemDEPPolicy (void );
WINBOOL GetSystemRegistryQuota (PDWORD pdwQuotaAllowed ,PDWORD pdwQuotaUsed );
WINBOOL GetSystemTimes (LPFILETIME lpIdleTime ,LPFILETIME lpKernelTime ,LPFILETIME lpUserTime );
WINBOOL FileTimeToDosDateTime (const FILETIME *lpFileTime ,LPWORD lpFatDate ,LPWORD lpFatTime );
WINBOOL DosDateTimeToFileTime (WORD wFatDate ,WORD wFatTime ,LPFILETIME lpFileTime );
WINBOOL SetSystemTimeAdjustment (DWORD dwTimeAdjustment ,WINBOOL bTimeAdjustmentDisabled );
int MulDiv (int nNumber ,int nNumerator ,int nDenominator );
DWORD FormatMessageA (DWORD dwFlags ,LPCVOID lpSource ,DWORD dwMessageId ,DWORD dwLanguageId ,LPSTR lpBuffer ,DWORD nSize ,va_list *Arguments );
DWORD FormatMessageW (DWORD dwFlags ,LPCVOID lpSource ,DWORD dwMessageId ,DWORD dwLanguageId ,LPWSTR lpBuffer ,DWORD nSize ,va_list *Arguments );
typedef DWORD (*PFE_EXPORT_FUNC )(PBYTE pbData ,PVOID pvCallbackContext ,ULONG ulLength );
typedef DWORD (*PFE_IMPORT_FUNC )(PBYTE pbData ,PVOID pvCallbackContext ,PULONG ulLength );
WINBOOL GetNamedPipeInfo (HANDLE hNamedPipe ,LPDWORD lpFlags ,LPDWORD lpOutBufferSize ,LPDWORD lpInBufferSize ,LPDWORD lpMaxInstances );
HANDLE CreateMailslotA (LPCSTR lpName ,DWORD nMaxMessageSize ,DWORD lReadTimeout ,LPSECURITY_ATTRIBUTES lpSecurityAttributes );
HANDLE CreateMailslotW (LPCWSTR lpName ,DWORD nMaxMessageSize ,DWORD lReadTimeout ,LPSECURITY_ATTRIBUTES lpSecurityAttributes );
WINBOOL GetMailslotInfo (HANDLE hMailslot ,LPDWORD lpMaxMessageSize ,LPDWORD lpNextSize ,LPDWORD lpMessageCount ,LPDWORD lpReadTimeout );
WINBOOL SetMailslotInfo (HANDLE hMailslot ,DWORD lReadTimeout );
WINBOOL EncryptFileA (LPCSTR lpFileName );
WINBOOL EncryptFileW (LPCWSTR lpFileName );
WINBOOL DecryptFileA (LPCSTR lpFileName ,DWORD dwReserved );
WINBOOL DecryptFileW (LPCWSTR lpFileName ,DWORD dwReserved );
WINBOOL FileEncryptionStatusA (LPCSTR lpFileName ,LPDWORD lpStatus );
WINBOOL FileEncryptionStatusW (LPCWSTR lpFileName ,LPDWORD lpStatus );
DWORD OpenEncryptedFileRawA (LPCSTR lpFileName ,ULONG ulFlags ,PVOID *pvContext );
DWORD OpenEncryptedFileRawW (LPCWSTR lpFileName ,ULONG ulFlags ,PVOID *pvContext );
DWORD ReadEncryptedFileRaw (PFE_EXPORT_FUNC pfExportCallback ,PVOID pvCallbackContext ,PVOID pvContext );
DWORD WriteEncryptedFileRaw (PFE_IMPORT_FUNC pfImportCallback ,PVOID pvCallbackContext ,PVOID pvContext );
void CloseEncryptedFileRaw (PVOID pvContext );
int lstrcmpA (LPCSTR lpString1 ,LPCSTR lpString2 );
int lstrcmpW (LPCWSTR lpString1 ,LPCWSTR lpString2 );
int lstrcmpiA (LPCSTR lpString1 ,LPCSTR lpString2 );
int lstrcmpiW (LPCWSTR lpString1 ,LPCWSTR lpString2 );
LPSTR lstrcpynA (LPSTR lpString1 ,LPCSTR lpString2 ,int iMaxLength );
LPWSTR lstrcpynW (LPWSTR lpString1 ,LPCWSTR lpString2 ,int iMaxLength );
LPSTR lstrcpyA (LPSTR lpString1 ,LPCSTR lpString2 );
LPWSTR lstrcpyW (LPWSTR lpString1 ,LPCWSTR lpString2 );
LPSTR lstrcatA (LPSTR lpString1 ,LPCSTR lpString2 );
LPWSTR lstrcatW (LPWSTR lpString1 ,LPCWSTR lpString2 );
int lstrlenA (LPCSTR lpString );
int lstrlenW (LPCWSTR lpString );
HFILE OpenFile (LPCSTR lpFileName ,LPOFSTRUCT lpReOpenBuff ,UINT uStyle );
HFILE _lopen (LPCSTR lpPathName ,int iReadWrite );
HFILE _lcreat (LPCSTR lpPathName ,int iAttribute );
UINT _lread (HFILE hFile ,LPVOID lpBuffer ,UINT uBytes );
UINT _lwrite (HFILE hFile ,LPCCH lpBuffer ,UINT uBytes );
long _hread (HFILE hFile ,LPVOID lpBuffer ,long lBytes );
long _hwrite (HFILE hFile ,LPCCH lpBuffer ,long lBytes );
HFILE _lclose (HFILE hFile );
LONG _llseek (HFILE hFile ,LONG lOffset ,int iOrigin );
WINBOOL IsTextUnicode (const void *lpv ,int iSize ,LPINT lpiResult );
DWORD SignalObjectAndWait (HANDLE hObjectToSignal ,HANDLE hObjectToWaitOn ,DWORD dwMilliseconds ,WINBOOL bAlertable );
WINBOOL BackupRead (HANDLE hFile ,LPBYTE lpBuffer ,DWORD nNumberOfBytesToRead ,LPDWORD lpNumberOfBytesRead ,WINBOOL bAbort ,WINBOOL bProcessSecurity ,LPVOID *lpContext );
WINBOOL BackupSeek (HANDLE hFile ,DWORD dwLowBytesToSeek ,DWORD dwHighBytesToSeek ,LPDWORD lpdwLowByteSeeked ,LPDWORD lpdwHighByteSeeked ,LPVOID *lpContext );
WINBOOL BackupWrite (HANDLE hFile ,LPBYTE lpBuffer ,DWORD nNumberOfBytesToWrite ,LPDWORD lpNumberOfBytesWritten ,WINBOOL bAbort ,WINBOOL bProcessSecurity ,LPVOID *lpContext );
typedef struct _WIN32_STREAM_ID {DWORD dwStreamId ;DWORD dwStreamAttributes ;LARGE_INTEGER Size ;DWORD dwStreamNameSize ;WCHAR cStreamName [1 ];}WIN32_STREAM_ID ;
typedef struct _WIN32_STREAM_ID {DWORD dwStreamId ;DWORD dwStreamAttributes ;LARGE_INTEGER Size ;DWORD dwStreamNameSize ;WCHAR cStreamName [1 ];}*LPWIN32_STREAM_ID ;

HANDLE CreateSemaphoreW (LPSECURITY_ATTRIBUTES lpSemaphoreAttributes ,LONG lInitialCount ,LONG lMaximumCount ,LPCWSTR lpName );
HMODULE LoadLibraryW (LPCWSTR lpLibFileName );
HANDLE OpenMutexA (DWORD dwDesiredAccess ,WINBOOL bInheritHandle ,LPCSTR lpName );
HANDLE CreateSemaphoreA (LPSECURITY_ATTRIBUTES lpSemaphoreAttributes ,LONG lInitialCount ,LONG lMaximumCount ,LPCSTR lpName );
HANDLE OpenSemaphoreA (DWORD dwDesiredAccess ,WINBOOL bInheritHandle ,LPCSTR lpName );
HANDLE CreateWaitableTimerA (LPSECURITY_ATTRIBUTES lpTimerAttributes ,WINBOOL bManualReset ,LPCSTR lpTimerName );
HANDLE CreateWaitableTimerW (LPSECURITY_ATTRIBUTES lpTimerAttributes ,WINBOOL bManualReset ,LPCWSTR lpTimerName );
HANDLE OpenWaitableTimerA (DWORD dwDesiredAccess ,WINBOOL bInheritHandle ,LPCSTR lpTimerName );
HANDLE CreateFileMappingA (HANDLE hFile ,LPSECURITY_ATTRIBUTES lpFileMappingAttributes ,DWORD flProtect ,DWORD dwMaximumSizeHigh ,DWORD dwMaximumSizeLow ,LPCSTR lpName );
HANDLE OpenFileMappingA (DWORD dwDesiredAccess ,WINBOOL bInheritHandle ,LPCSTR lpName );
DWORD GetLogicalDriveStringsA (DWORD nBufferLength ,LPSTR lpBuffer );
HMODULE LoadLibraryA (LPCSTR lpLibFileName );
WINBOOL GetProcessShutdownParameters (LPDWORD lpdwLevel ,LPDWORD lpdwFlags );
void FatalAppExitA (UINT uAction ,LPCSTR lpMessageText );
void FatalAppExitW (UINT uAction ,LPCWSTR lpMessageText );
void GetStartupInfoA (LPSTARTUPINFOA lpStartupInfo );
DWORD GetFirmwareEnvironmentVariableA (LPCSTR lpName ,LPCSTR lpGuid ,PVOID pBuffer ,DWORD nSize );
DWORD GetFirmwareEnvironmentVariableW (LPCWSTR lpName ,LPCWSTR lpGuid ,PVOID pBuffer ,DWORD nSize );
WINBOOL SetFirmwareEnvironmentVariableA (LPCSTR lpName ,LPCSTR lpGuid ,PVOID pValue ,DWORD nSize );
WINBOOL SetFirmwareEnvironmentVariableW (LPCWSTR lpName ,LPCWSTR lpGuid ,PVOID pValue ,DWORD nSize );
HRSRC FindResourceA (HMODULE hModule ,LPCSTR lpName ,LPCSTR lpType );
HRSRC FindResourceW (HMODULE hModule ,LPCWSTR lpName ,LPCWSTR lpType );
HRSRC FindResourceExA (HMODULE hModule ,LPCSTR lpType ,LPCSTR lpName ,WORD wLanguage );
WINBOOL EnumResourceTypesA (HMODULE hModule ,ENUMRESTYPEPROCA lpEnumFunc ,LONG_PTR lParam );
WINBOOL EnumResourceTypesW (HMODULE hModule ,ENUMRESTYPEPROCW lpEnumFunc ,LONG_PTR lParam );
WINBOOL EnumResourceNamesA (HMODULE hModule ,LPCSTR lpType ,ENUMRESNAMEPROCA lpEnumFunc ,LONG_PTR lParam );
WINBOOL EnumResourceNamesW (HMODULE hModule ,LPCWSTR lpType ,ENUMRESNAMEPROCW lpEnumFunc ,LONG_PTR lParam );
WINBOOL EnumResourceLanguagesA (HMODULE hModule ,LPCSTR lpType ,LPCSTR lpName ,ENUMRESLANGPROCA lpEnumFunc ,LONG_PTR lParam );
WINBOOL EnumResourceLanguagesW (HMODULE hModule ,LPCWSTR lpType ,LPCWSTR lpName ,ENUMRESLANGPROCW lpEnumFunc ,LONG_PTR lParam );
HANDLE BeginUpdateResourceA (LPCSTR pFileName ,WINBOOL bDeleteExistingResources );
HANDLE BeginUpdateResourceW (LPCWSTR pFileName ,WINBOOL bDeleteExistingResources );
WINBOOL UpdateResourceA (HANDLE hUpdate ,LPCSTR lpType ,LPCSTR lpName ,WORD wLanguage ,LPVOID lpData ,DWORD cb );
WINBOOL UpdateResourceW (HANDLE hUpdate ,LPCWSTR lpType ,LPCWSTR lpName ,WORD wLanguage ,LPVOID lpData ,DWORD cb );
WINBOOL EndUpdateResourceA (HANDLE hUpdate ,WINBOOL fDiscard );
WINBOOL EndUpdateResourceW (HANDLE hUpdate ,WINBOOL fDiscard );
ATOM GlobalAddAtomA (LPCSTR lpString );
ATOM GlobalAddAtomW (LPCWSTR lpString );
ATOM GlobalAddAtomExA (LPCSTR lpString ,DWORD Flags );
ATOM GlobalAddAtomExW (LPCWSTR lpString ,DWORD Flags );
ATOM GlobalFindAtomA (LPCSTR lpString );
ATOM GlobalFindAtomW (LPCWSTR lpString );
UINT GlobalGetAtomNameA (ATOM nAtom ,LPSTR lpBuffer ,int nSize );
UINT GlobalGetAtomNameW (ATOM nAtom ,LPWSTR lpBuffer ,int nSize );
ATOM AddAtomA (LPCSTR lpString );
ATOM AddAtomW (LPCWSTR lpString );
ATOM FindAtomA (LPCSTR lpString );
ATOM FindAtomW (LPCWSTR lpString );
UINT GetAtomNameA (ATOM nAtom ,LPSTR lpBuffer ,int nSize );
UINT GetAtomNameW (ATOM nAtom ,LPWSTR lpBuffer ,int nSize );
UINT GetProfileIntA (LPCSTR lpAppName ,LPCSTR lpKeyName ,INT nDefault );
UINT GetProfileIntW (LPCWSTR lpAppName ,LPCWSTR lpKeyName ,INT nDefault );
DWORD GetProfileStringA (LPCSTR lpAppName ,LPCSTR lpKeyName ,LPCSTR lpDefault ,LPSTR lpReturnedString ,DWORD nSize );
DWORD GetProfileStringW (LPCWSTR lpAppName ,LPCWSTR lpKeyName ,LPCWSTR lpDefault ,LPWSTR lpReturnedString ,DWORD nSize );
WINBOOL WriteProfileStringA (LPCSTR lpAppName ,LPCSTR lpKeyName ,LPCSTR lpString );
WINBOOL WriteProfileStringW (LPCWSTR lpAppName ,LPCWSTR lpKeyName ,LPCWSTR lpString );
DWORD GetProfileSectionA (LPCSTR lpAppName ,LPSTR lpReturnedString ,DWORD nSize );
DWORD GetProfileSectionW (LPCWSTR lpAppName ,LPWSTR lpReturnedString ,DWORD nSize );
WINBOOL WriteProfileSectionA (LPCSTR lpAppName ,LPCSTR lpString );
WINBOOL WriteProfileSectionW (LPCWSTR lpAppName ,LPCWSTR lpString );
UINT GetPrivateProfileIntA (LPCSTR lpAppName ,LPCSTR lpKeyName ,INT nDefault ,LPCSTR lpFileName );
UINT GetPrivateProfileIntW (LPCWSTR lpAppName ,LPCWSTR lpKeyName ,INT nDefault ,LPCWSTR lpFileName );
DWORD GetPrivateProfileStringA (LPCSTR lpAppName ,LPCSTR lpKeyName ,LPCSTR lpDefault ,LPSTR lpReturnedString ,DWORD nSize ,LPCSTR lpFileName );
DWORD GetPrivateProfileStringW (LPCWSTR lpAppName ,LPCWSTR lpKeyName ,LPCWSTR lpDefault ,LPWSTR lpReturnedString ,DWORD nSize ,LPCWSTR lpFileName );
WINBOOL WritePrivateProfileStringA (LPCSTR lpAppName ,LPCSTR lpKeyName ,LPCSTR lpString ,LPCSTR lpFileName );
WINBOOL WritePrivateProfileStringW (LPCWSTR lpAppName ,LPCWSTR lpKeyName ,LPCWSTR lpString ,LPCWSTR lpFileName );
DWORD GetPrivateProfileSectionA (LPCSTR lpAppName ,LPSTR lpReturnedString ,DWORD nSize ,LPCSTR lpFileName );
DWORD GetPrivateProfileSectionW (LPCWSTR lpAppName ,LPWSTR lpReturnedString ,DWORD nSize ,LPCWSTR lpFileName );
WINBOOL WritePrivateProfileSectionA (LPCSTR lpAppName ,LPCSTR lpString ,LPCSTR lpFileName );
WINBOOL WritePrivateProfileSectionW (LPCWSTR lpAppName ,LPCWSTR lpString ,LPCWSTR lpFileName );
DWORD GetPrivateProfileSectionNamesA (LPSTR lpszReturnBuffer ,DWORD nSize ,LPCSTR lpFileName );
DWORD GetPrivateProfileSectionNamesW (LPWSTR lpszReturnBuffer ,DWORD nSize ,LPCWSTR lpFileName );
WINBOOL GetPrivateProfileStructA (LPCSTR lpszSection ,LPCSTR lpszKey ,LPVOID lpStruct ,UINT uSizeStruct ,LPCSTR szFile );
WINBOOL GetPrivateProfileStructW (LPCWSTR lpszSection ,LPCWSTR lpszKey ,LPVOID lpStruct ,UINT uSizeStruct ,LPCWSTR szFile );
WINBOOL WritePrivateProfileStructA (LPCSTR lpszSection ,LPCSTR lpszKey ,LPVOID lpStruct ,UINT uSizeStruct ,LPCSTR szFile );
WINBOOL WritePrivateProfileStructW (LPCWSTR lpszSection ,LPCWSTR lpszKey ,LPVOID lpStruct ,UINT uSizeStruct ,LPCWSTR szFile );
DWORD GetTempPathA (DWORD nBufferLength ,LPSTR lpBuffer );
UINT GetTempFileNameA (LPCSTR lpPathName ,LPCSTR lpPrefixString ,UINT uUnique ,LPSTR lpTempFileName );
UINT GetSystemWow64DirectoryA (LPSTR lpBuffer ,UINT uSize );
UINT GetSystemWow64DirectoryW (LPWSTR lpBuffer ,UINT uSize );
BOOLEAN Wow64EnableWow64FsRedirection (BOOLEAN Wow64FsEnableRedirection );
typedef UINT (*PGET_SYSTEM_WOW64_DIRECTORY_A )(LPSTR lpBuffer ,UINT uSize );
typedef UINT (*PGET_SYSTEM_WOW64_DIRECTORY_W )(LPWSTR lpBuffer ,UINT uSize );
WINBOOL SetDllDirectoryA (LPCSTR lpPathName );
WINBOOL SetDllDirectoryW (LPCWSTR lpPathName );
DWORD GetDllDirectoryA (DWORD nBufferLength ,LPSTR lpBuffer );
DWORD GetDllDirectoryW (DWORD nBufferLength ,LPWSTR lpBuffer );
WINBOOL SetSearchPathMode (DWORD Flags );
WINBOOL CreateDirectoryExA (LPCSTR lpTemplateDirectory ,LPCSTR lpNewDirectory ,LPSECURITY_ATTRIBUTES lpSecurityAttributes );
WINBOOL CreateDirectoryExW (LPCWSTR lpTemplateDirectory ,LPCWSTR lpNewDirectory ,LPSECURITY_ATTRIBUTES lpSecurityAttributes );
WINBOOL DefineDosDeviceA (DWORD dwFlags ,LPCSTR lpDeviceName ,LPCSTR lpTargetPath );
DWORD QueryDosDeviceA (LPCSTR lpDeviceName ,LPSTR lpTargetPath ,DWORD ucchMax );
HANDLE ReOpenFile (HANDLE hOriginalFile ,DWORD dwDesiredAccess ,DWORD dwShareMode ,DWORD dwFlagsAndAttributes );
DWORD GetCompressedFileSizeA (LPCSTR lpFileName ,LPDWORD lpFileSizeHigh );
DWORD GetCompressedFileSizeW (LPCWSTR lpFileName ,LPDWORD lpFileSizeHigh );
typedef DWORD (*LPPROGRESS_ROUTINE )(LARGE_INTEGER TotalFileSize ,LARGE_INTEGER TotalBytesTransferred ,LARGE_INTEGER StreamSize ,LARGE_INTEGER StreamBytesTransferred ,DWORD dwStreamNumber ,DWORD dwCallbackReason ,HANDLE hSourceFile ,HANDLE hDestinationFile ,LPVOID lpData );
WINBOOL CheckNameLegalDOS8Dot3A (LPCSTR lpName ,LPSTR lpOemName ,DWORD OemNameSize ,PBOOL pbNameContainsSpaces ,PBOOL pbNameLegal );
WINBOOL CheckNameLegalDOS8Dot3W (LPCWSTR lpName ,LPSTR lpOemName ,DWORD OemNameSize ,PBOOL pbNameContainsSpaces ,PBOOL pbNameLegal );
WINBOOL CopyFileA (LPCSTR lpExistingFileName ,LPCSTR lpNewFileName ,WINBOOL bFailIfExists );
WINBOOL CopyFileW (LPCWSTR lpExistingFileName ,LPCWSTR lpNewFileName ,WINBOOL bFailIfExists );
WINBOOL CopyFileExA (LPCSTR lpExistingFileName ,LPCSTR lpNewFileName ,LPPROGRESS_ROUTINE lpProgressRoutine ,LPVOID lpData ,LPBOOL pbCancel ,DWORD dwCopyFlags );
WINBOOL CopyFileExW (LPCWSTR lpExistingFileName ,LPCWSTR lpNewFileName ,LPPROGRESS_ROUTINE lpProgressRoutine ,LPVOID lpData ,LPBOOL pbCancel ,DWORD dwCopyFlags );
WINBOOL MoveFileA (LPCSTR lpExistingFileName ,LPCSTR lpNewFileName );
WINBOOL MoveFileW (LPCWSTR lpExistingFileName ,LPCWSTR lpNewFileName );
WINBOOL MoveFileExA (LPCSTR lpExistingFileName ,LPCSTR lpNewFileName ,DWORD dwFlags );
WINBOOL MoveFileExW (LPCWSTR lpExistingFileName ,LPCWSTR lpNewFileName ,DWORD dwFlags );
WINBOOL MoveFileWithProgressA (LPCSTR lpExistingFileName ,LPCSTR lpNewFileName ,LPPROGRESS_ROUTINE lpProgressRoutine ,LPVOID lpData ,DWORD dwFlags );
WINBOOL MoveFileWithProgressW (LPCWSTR lpExistingFileName ,LPCWSTR lpNewFileName ,LPPROGRESS_ROUTINE lpProgressRoutine ,LPVOID lpData ,DWORD dwFlags );
WINBOOL ReplaceFileA (LPCSTR lpReplacedFileName ,LPCSTR lpReplacementFileName ,LPCSTR lpBackupFileName ,DWORD dwReplaceFlags ,LPVOID lpExclude ,LPVOID lpReserved );
WINBOOL ReplaceFileW (LPCWSTR lpReplacedFileName ,LPCWSTR lpReplacementFileName ,LPCWSTR lpBackupFileName ,DWORD dwReplaceFlags ,LPVOID lpExclude ,LPVOID lpReserved );
WINBOOL CreateHardLinkA (LPCSTR lpFileName ,LPCSTR lpExistingFileName ,LPSECURITY_ATTRIBUTES lpSecurityAttributes );
WINBOOL CreateHardLinkW (LPCWSTR lpFileName ,LPCWSTR lpExistingFileName ,LPSECURITY_ATTRIBUTES lpSecurityAttributes );
typedef enum _STREAM_INFO_LEVELS {FindStreamInfoStandard ,FindStreamInfoMaxInfoLevel }STREAM_INFO_LEVELS ;
typedef struct _WIN32_FIND_STREAM_DATA {LARGE_INTEGER StreamSize ;WCHAR cStreamName [296 ];}WIN32_FIND_STREAM_DATA ;
typedef struct _WIN32_FIND_STREAM_DATA {LARGE_INTEGER StreamSize ;WCHAR cStreamName [296 ];}*PWIN32_FIND_STREAM_DATA ;

HANDLE FindFirstStreamW (LPCWSTR lpFileName ,STREAM_INFO_LEVELS InfoLevel ,LPVOID lpFindStreamData ,DWORD dwFlags );
WINBOOL FindNextStreamW (HANDLE hFindStream ,LPVOID lpFindStreamData );
HANDLE CreateNamedPipeA (LPCSTR lpName ,DWORD dwOpenMode ,DWORD dwPipeMode ,DWORD nMaxInstances ,DWORD nOutBufferSize ,DWORD nInBufferSize ,DWORD nDefaultTimeOut ,LPSECURITY_ATTRIBUTES lpSecurityAttributes );
WINBOOL GetNamedPipeHandleStateA (HANDLE hNamedPipe ,LPDWORD lpState ,LPDWORD lpCurInstances ,LPDWORD lpMaxCollectionCount ,LPDWORD lpCollectDataTimeout ,LPSTR lpUserName ,DWORD nMaxUserNameSize );
WINBOOL GetNamedPipeHandleStateW (HANDLE hNamedPipe ,LPDWORD lpState ,LPDWORD lpCurInstances ,LPDWORD lpMaxCollectionCount ,LPDWORD lpCollectDataTimeout ,LPWSTR lpUserName ,DWORD nMaxUserNameSize );
WINBOOL CallNamedPipeA (LPCSTR lpNamedPipeName ,LPVOID lpInBuffer ,DWORD nInBufferSize ,LPVOID lpOutBuffer ,DWORD nOutBufferSize ,LPDWORD lpBytesRead ,DWORD nTimeOut );
WINBOOL CallNamedPipeW (LPCWSTR lpNamedPipeName ,LPVOID lpInBuffer ,DWORD nInBufferSize ,LPVOID lpOutBuffer ,DWORD nOutBufferSize ,LPDWORD lpBytesRead ,DWORD nTimeOut );
WINBOOL WaitNamedPipeA (LPCSTR lpNamedPipeName ,DWORD nTimeOut );
WINBOOL SetVolumeLabelA (LPCSTR lpRootPathName ,LPCSTR lpVolumeName );
WINBOOL SetVolumeLabelW (LPCWSTR lpRootPathName ,LPCWSTR lpVolumeName );
void SetFileApisToOEM (void );
void SetFileApisToANSI (void );
WINBOOL AreFileApisANSI (void );
WINBOOL GetVolumeInformationA (LPCSTR lpRootPathName ,LPSTR lpVolumeNameBuffer ,DWORD nVolumeNameSize ,LPDWORD lpVolumeSerialNumber ,LPDWORD lpMaximumComponentLength ,LPDWORD lpFileSystemFlags ,LPSTR lpFileSystemNameBuffer ,DWORD nFileSystemNameSize );
WINBOOL ClearEventLogA (HANDLE hEventLog ,LPCSTR lpBackupFileName );
WINBOOL ClearEventLogW (HANDLE hEventLog ,LPCWSTR lpBackupFileName );
WINBOOL BackupEventLogA (HANDLE hEventLog ,LPCSTR lpBackupFileName );
WINBOOL BackupEventLogW (HANDLE hEventLog ,LPCWSTR lpBackupFileName );
WINBOOL CloseEventLog (HANDLE hEventLog );
WINBOOL DeregisterEventSource (HANDLE hEventLog );
WINBOOL NotifyChangeEventLog (HANDLE hEventLog ,HANDLE hEvent );
WINBOOL GetNumberOfEventLogRecords (HANDLE hEventLog ,PDWORD NumberOfRecords );
WINBOOL GetOldestEventLogRecord (HANDLE hEventLog ,PDWORD OldestRecord );
HANDLE OpenEventLogA (LPCSTR lpUNCServerName ,LPCSTR lpSourceName );
HANDLE OpenEventLogW (LPCWSTR lpUNCServerName ,LPCWSTR lpSourceName );
HANDLE RegisterEventSourceA (LPCSTR lpUNCServerName ,LPCSTR lpSourceName );
HANDLE RegisterEventSourceW (LPCWSTR lpUNCServerName ,LPCWSTR lpSourceName );
HANDLE OpenBackupEventLogA (LPCSTR lpUNCServerName ,LPCSTR lpFileName );
HANDLE OpenBackupEventLogW (LPCWSTR lpUNCServerName ,LPCWSTR lpFileName );
WINBOOL ReadEventLogA (HANDLE hEventLog ,DWORD dwReadFlags ,DWORD dwRecordOffset ,LPVOID lpBuffer ,DWORD nNumberOfBytesToRead ,DWORD *pnBytesRead ,DWORD *pnMinNumberOfBytesNeeded );
WINBOOL ReadEventLogW (HANDLE hEventLog ,DWORD dwReadFlags ,DWORD dwRecordOffset ,LPVOID lpBuffer ,DWORD nNumberOfBytesToRead ,DWORD *pnBytesRead ,DWORD *pnMinNumberOfBytesNeeded );
WINBOOL ReportEventA (HANDLE hEventLog ,WORD wType ,WORD wCategory ,DWORD dwEventID ,PSID lpUserSid ,WORD wNumStrings ,DWORD dwDataSize ,LPCSTR *lpStrings ,LPVOID lpRawData );
WINBOOL ReportEventW (HANDLE hEventLog ,WORD wType ,WORD wCategory ,DWORD dwEventID ,PSID lpUserSid ,WORD wNumStrings ,DWORD dwDataSize ,LPCWSTR *lpStrings ,LPVOID lpRawData );
typedef struct _EVENTLOG_FULL_INFORMATION {DWORD dwFull ;}EVENTLOG_FULL_INFORMATION ;
typedef struct _EVENTLOG_FULL_INFORMATION {DWORD dwFull ;}*LPEVENTLOG_FULL_INFORMATION ;

WINBOOL GetEventLogInformation (HANDLE hEventLog ,DWORD dwInfoLevel ,LPVOID lpBuffer ,DWORD cbBufSize ,LPDWORD pcbBytesNeeded );
WINBOOL AccessCheckAndAuditAlarmA (LPCSTR SubsystemName ,LPVOID HandleId ,LPSTR ObjectTypeName ,LPSTR ObjectName ,PSECURITY_DESCRIPTOR SecurityDescriptor ,DWORD DesiredAccess ,PGENERIC_MAPPING GenericMapping ,WINBOOL ObjectCreation ,LPDWORD GrantedAccess ,LPBOOL AccessStatus ,LPBOOL pfGenerateOnClose );
WINBOOL AccessCheckByTypeAndAuditAlarmA (LPCSTR SubsystemName ,LPVOID HandleId ,LPCSTR ObjectTypeName ,LPCSTR ObjectName ,PSECURITY_DESCRIPTOR SecurityDescriptor ,PSID PrincipalSelfSid ,DWORD DesiredAccess ,AUDIT_EVENT_TYPE AuditType ,DWORD Flags ,POBJECT_TYPE_LIST ObjectTypeList ,DWORD ObjectTypeListLength ,PGENERIC_MAPPING GenericMapping ,WINBOOL ObjectCreation ,LPDWORD GrantedAccess ,LPBOOL AccessStatus ,LPBOOL pfGenerateOnClose );
WINBOOL AccessCheckByTypeResultListAndAuditAlarmA (LPCSTR SubsystemName ,LPVOID HandleId ,LPCSTR ObjectTypeName ,LPCSTR ObjectName ,PSECURITY_DESCRIPTOR SecurityDescriptor ,PSID PrincipalSelfSid ,DWORD DesiredAccess ,AUDIT_EVENT_TYPE AuditType ,DWORD Flags ,POBJECT_TYPE_LIST ObjectTypeList ,DWORD ObjectTypeListLength ,PGENERIC_MAPPING GenericMapping ,WINBOOL ObjectCreation ,LPDWORD GrantedAccess ,LPDWORD AccessStatusList ,LPBOOL pfGenerateOnClose );
WINBOOL AccessCheckByTypeResultListAndAuditAlarmByHandleA (LPCSTR SubsystemName ,LPVOID HandleId ,HANDLE ClientToken ,LPCSTR ObjectTypeName ,LPCSTR ObjectName ,PSECURITY_DESCRIPTOR SecurityDescriptor ,PSID PrincipalSelfSid ,DWORD DesiredAccess ,AUDIT_EVENT_TYPE AuditType ,DWORD Flags ,POBJECT_TYPE_LIST ObjectTypeList ,DWORD ObjectTypeListLength ,PGENERIC_MAPPING GenericMapping ,WINBOOL ObjectCreation ,LPDWORD GrantedAccess ,LPDWORD AccessStatusList ,LPBOOL pfGenerateOnClose );
WINBOOL ObjectOpenAuditAlarmA (LPCSTR SubsystemName ,LPVOID HandleId ,LPSTR ObjectTypeName ,LPSTR ObjectName ,PSECURITY_DESCRIPTOR pSecurityDescriptor ,HANDLE ClientToken ,DWORD DesiredAccess ,DWORD GrantedAccess ,PPRIVILEGE_SET Privileges ,WINBOOL ObjectCreation ,WINBOOL AccessGranted ,LPBOOL GenerateOnClose );
WINBOOL ObjectPrivilegeAuditAlarmA (LPCSTR SubsystemName ,LPVOID HandleId ,HANDLE ClientToken ,DWORD DesiredAccess ,PPRIVILEGE_SET Privileges ,WINBOOL AccessGranted );
WINBOOL ObjectCloseAuditAlarmA (LPCSTR SubsystemName ,LPVOID HandleId ,WINBOOL GenerateOnClose );
WINBOOL ObjectDeleteAuditAlarmA (LPCSTR SubsystemName ,LPVOID HandleId ,WINBOOL GenerateOnClose );
WINBOOL PrivilegedServiceAuditAlarmA (LPCSTR SubsystemName ,LPCSTR ServiceName ,HANDLE ClientToken ,PPRIVILEGE_SET Privileges ,WINBOOL AccessGranted );
WINBOOL SetFileSecurityA (LPCSTR lpFileName ,SECURITY_INFORMATION SecurityInformation ,PSECURITY_DESCRIPTOR pSecurityDescriptor );
WINBOOL GetFileSecurityA (LPCSTR lpFileName ,SECURITY_INFORMATION RequestedInformation ,PSECURITY_DESCRIPTOR pSecurityDescriptor ,DWORD nLength ,LPDWORD lpnLengthNeeded );
WINBOOL ReadDirectoryChangesW (HANDLE hDirectory ,LPVOID lpBuffer ,DWORD nBufferLength ,WINBOOL bWatchSubtree ,DWORD dwNotifyFilter ,LPDWORD lpBytesReturned ,LPOVERLAPPED lpOverlapped ,LPOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine );
WINBOOL IsBadReadPtr (const void *lp ,UINT_PTR ucb );
WINBOOL IsBadWritePtr (LPVOID lp ,UINT_PTR ucb );
WINBOOL IsBadHugeReadPtr (const void *lp ,UINT_PTR ucb );
WINBOOL IsBadHugeWritePtr (LPVOID lp ,UINT_PTR ucb );
WINBOOL IsBadCodePtr (FARPROC lpfn );
WINBOOL IsBadStringPtrA (LPCSTR lpsz ,UINT_PTR ucchMax );
WINBOOL IsBadStringPtrW (LPCWSTR lpsz ,UINT_PTR ucchMax );
WINBOOL LookupAccountSidA (LPCSTR lpSystemName ,PSID Sid ,LPSTR Name ,LPDWORD cchName ,LPSTR ReferencedDomainName ,LPDWORD cchReferencedDomainName ,PSID_NAME_USE peUse );
WINBOOL LookupAccountSidW (LPCWSTR lpSystemName ,PSID Sid ,LPWSTR Name ,LPDWORD cchName ,LPWSTR ReferencedDomainName ,LPDWORD cchReferencedDomainName ,PSID_NAME_USE peUse );
WINBOOL LookupAccountNameA (LPCSTR lpSystemName ,LPCSTR lpAccountName ,PSID Sid ,LPDWORD cbSid ,LPSTR ReferencedDomainName ,LPDWORD cchReferencedDomainName ,PSID_NAME_USE peUse );
WINBOOL LookupAccountNameW (LPCWSTR lpSystemName ,LPCWSTR lpAccountName ,PSID Sid ,LPDWORD cbSid ,LPWSTR ReferencedDomainName ,LPDWORD cchReferencedDomainName ,PSID_NAME_USE peUse );
WINBOOL LookupPrivilegeValueA (LPCSTR lpSystemName ,LPCSTR lpName ,PLUID lpLuid );
WINBOOL LookupPrivilegeValueW (LPCWSTR lpSystemName ,LPCWSTR lpName ,PLUID lpLuid );
WINBOOL LookupPrivilegeNameA (LPCSTR lpSystemName ,PLUID lpLuid ,LPSTR lpName ,LPDWORD cchName );
WINBOOL LookupPrivilegeNameW (LPCWSTR lpSystemName ,PLUID lpLuid ,LPWSTR lpName ,LPDWORD cchName );
WINBOOL LookupPrivilegeDisplayNameA (LPCSTR lpSystemName ,LPCSTR lpName ,LPSTR lpDisplayName ,LPDWORD cchDisplayName ,LPDWORD lpLanguageId );
WINBOOL LookupPrivilegeDisplayNameW (LPCWSTR lpSystemName ,LPCWSTR lpName ,LPWSTR lpDisplayName ,LPDWORD cchDisplayName ,LPDWORD lpLanguageId );
WINBOOL BuildCommDCBA (LPCSTR lpDef ,LPDCB lpDCB );
WINBOOL BuildCommDCBW (LPCWSTR lpDef ,LPDCB lpDCB );
WINBOOL BuildCommDCBAndTimeoutsA (LPCSTR lpDef ,LPDCB lpDCB ,LPCOMMTIMEOUTS lpCommTimeouts );
WINBOOL BuildCommDCBAndTimeoutsW (LPCWSTR lpDef ,LPDCB lpDCB ,LPCOMMTIMEOUTS lpCommTimeouts );
WINBOOL CommConfigDialogA (LPCSTR lpszName ,HWND hWnd ,LPCOMMCONFIG lpCC );
WINBOOL CommConfigDialogW (LPCWSTR lpszName ,HWND hWnd ,LPCOMMCONFIG lpCC );
WINBOOL GetDefaultCommConfigA (LPCSTR lpszName ,LPCOMMCONFIG lpCC ,LPDWORD lpdwSize );
WINBOOL GetDefaultCommConfigW (LPCWSTR lpszName ,LPCOMMCONFIG lpCC ,LPDWORD lpdwSize );
WINBOOL SetDefaultCommConfigA (LPCSTR lpszName ,LPCOMMCONFIG lpCC ,DWORD dwSize );
WINBOOL SetDefaultCommConfigW (LPCWSTR lpszName ,LPCOMMCONFIG lpCC ,DWORD dwSize );
WINBOOL GetComputerNameA (LPSTR lpBuffer ,LPDWORD nSize );
WINBOOL GetComputerNameW (LPWSTR lpBuffer ,LPDWORD nSize );
WINBOOL SetComputerNameA (LPCSTR lpComputerName );
WINBOOL SetComputerNameW (LPCWSTR lpComputerName );
WINBOOL SetComputerNameExA (COMPUTER_NAME_FORMAT NameType ,LPCTSTR lpBuffer );
WINBOOL DnsHostnameToComputerNameA (LPCSTR Hostname ,LPSTR ComputerName ,LPDWORD nSize );
WINBOOL DnsHostnameToComputerNameW (LPCWSTR Hostname ,LPWSTR ComputerName ,LPDWORD nSize );
WINBOOL GetUserNameA (LPSTR lpBuffer ,LPDWORD pcbBuffer );
WINBOOL GetUserNameW (LPWSTR lpBuffer ,LPDWORD pcbBuffer );
WINBOOL LogonUserA (LPCSTR lpszUsername ,LPCSTR lpszDomain ,LPCSTR lpszPassword ,DWORD dwLogonType ,DWORD dwLogonProvider ,PHANDLE phToken );
WINBOOL LogonUserW (LPCWSTR lpszUsername ,LPCWSTR lpszDomain ,LPCWSTR lpszPassword ,DWORD dwLogonType ,DWORD dwLogonProvider ,PHANDLE phToken );
WINBOOL LogonUserExA (LPCSTR lpszUsername ,LPCSTR lpszDomain ,LPCSTR lpszPassword ,DWORD dwLogonType ,DWORD dwLogonProvider ,PHANDLE phToken ,PSID *ppLogonSid ,PVOID *ppProfileBuffer ,LPDWORD pdwProfileLength ,PQUOTA_LIMITS pQuotaLimits );
WINBOOL LogonUserExW (LPCWSTR lpszUsername ,LPCWSTR lpszDomain ,LPCWSTR lpszPassword ,DWORD dwLogonType ,DWORD dwLogonProvider ,PHANDLE phToken ,PSID *ppLogonSid ,PVOID *ppProfileBuffer ,LPDWORD pdwProfileLength ,PQUOTA_LIMITS pQuotaLimits );
WINBOOL CreateProcessAsUserA (HANDLE hToken ,LPCSTR lpApplicationName ,LPSTR lpCommandLine ,LPSECURITY_ATTRIBUTES lpProcessAttributes ,LPSECURITY_ATTRIBUTES lpThreadAttributes ,WINBOOL bInheritHandles ,DWORD dwCreationFlags ,LPVOID lpEnvironment ,LPCSTR lpCurrentDirectory ,LPSTARTUPINFOA lpStartupInfo ,LPPROCESS_INFORMATION lpProcessInformation );
WINBOOL CreateProcessWithLogonW (LPCWSTR lpUsername ,LPCWSTR lpDomain ,LPCWSTR lpPassword ,DWORD dwLogonFlags ,LPCWSTR lpApplicationName ,LPWSTR lpCommandLine ,DWORD dwCreationFlags ,LPVOID lpEnvironment ,LPCWSTR lpCurrentDirectory ,LPSTARTUPINFOW lpStartupInfo ,LPPROCESS_INFORMATION lpProcessInformation );
WINBOOL CreateProcessWithTokenW (HANDLE hToken ,DWORD dwLogonFlags ,LPCWSTR lpApplicationName ,LPWSTR lpCommandLine ,DWORD dwCreationFlags ,LPVOID lpEnvironment ,LPCWSTR lpCurrentDirectory ,LPSTARTUPINFOW lpStartupInfo ,LPPROCESS_INFORMATION lpProcessInformation );
WINBOOL IsTokenUntrusted (HANDLE TokenHandle );
WINBOOL RegisterWaitForSingleObject (PHANDLE phNewWaitObject ,HANDLE hObject ,WAITORTIMERCALLBACK Callback ,PVOID Context ,ULONG dwMilliseconds ,ULONG dwFlags );
WINBOOL UnregisterWait (HANDLE WaitHandle );
WINBOOL BindIoCompletionCallback (HANDLE FileHandle ,LPOVERLAPPED_COMPLETION_ROUTINE Function ,ULONG Flags );
HANDLE SetTimerQueueTimer (HANDLE TimerQueue ,WAITORTIMERCALLBACK Callback ,PVOID Parameter ,DWORD DueTime ,DWORD Period ,WINBOOL PreferIo );
WINBOOL CancelTimerQueueTimer (HANDLE TimerQueue ,HANDLE Timer );
WINBOOL DeleteTimerQueue (HANDLE TimerQueue );
HANDLE CreatePrivateNamespaceA (LPSECURITY_ATTRIBUTES lpPrivateNamespaceAttributes ,LPVOID lpBoundaryDescriptor ,LPCSTR lpAliasPrefix );
HANDLE OpenPrivateNamespaceA (LPVOID lpBoundaryDescriptor ,LPCSTR lpAliasPrefix );
HANDLE CreateBoundaryDescriptorA (LPCSTR Name ,ULONG Flags );
WINBOOL AddIntegrityLabelToBoundaryDescriptor (HANDLE *BoundaryDescriptor ,PSID IntegrityLabel );
typedef struct tagHW_PROFILE_INFOA {DWORD dwDockInfo ;CHAR szHwProfileGuid [39 ];CHAR szHwProfileName [80 ];}HW_PROFILE_INFOA ;
typedef struct tagHW_PROFILE_INFOA {DWORD dwDockInfo ;CHAR szHwProfileGuid [39 ];CHAR szHwProfileName [80 ];}*LPHW_PROFILE_INFOA ;

typedef struct tagHW_PROFILE_INFOW {DWORD dwDockInfo ;WCHAR szHwProfileGuid [39 ];WCHAR szHwProfileName [80 ];}HW_PROFILE_INFOW ;
typedef struct tagHW_PROFILE_INFOW {DWORD dwDockInfo ;WCHAR szHwProfileGuid [39 ];WCHAR szHwProfileName [80 ];}*LPHW_PROFILE_INFOW ;

typedef HW_PROFILE_INFOA HW_PROFILE_INFO ;
typedef LPHW_PROFILE_INFOA LPHW_PROFILE_INFO ;
WINBOOL GetCurrentHwProfileA (LPHW_PROFILE_INFOA lpHwProfileInfo );
WINBOOL GetCurrentHwProfileW (LPHW_PROFILE_INFOW lpHwProfileInfo );
WINBOOL VerifyVersionInfoA (LPOSVERSIONINFOEXA lpVersionInformation ,DWORD dwTypeMask ,DWORDLONG dwlConditionMask );
WINBOOL VerifyVersionInfoW (LPOSVERSIONINFOEXW lpVersionInformation ,DWORD dwTypeMask ,DWORDLONG dwlConditionMask );
// m:\mingw\x86_64-w64-mingw32\include\timezoneapi.h

typedef struct _TIME_ZONE_INFORMATION {LONG Bias ;WCHAR StandardName [32 ];SYSTEMTIME StandardDate ;LONG StandardBias ;WCHAR DaylightName [32 ];SYSTEMTIME DaylightDate ;LONG DaylightBias ;}TIME_ZONE_INFORMATION ;
typedef struct _TIME_ZONE_INFORMATION {LONG Bias ;WCHAR StandardName [32 ];SYSTEMTIME StandardDate ;LONG StandardBias ;WCHAR DaylightName [32 ];SYSTEMTIME DaylightDate ;LONG DaylightBias ;}*PTIME_ZONE_INFORMATION ;
typedef struct _TIME_ZONE_INFORMATION {LONG Bias ;WCHAR StandardName [32 ];SYSTEMTIME StandardDate ;LONG StandardBias ;WCHAR DaylightName [32 ];SYSTEMTIME DaylightDate ;LONG DaylightBias ;}*LPTIME_ZONE_INFORMATION ;

typedef struct _TIME_DYNAMIC_ZONE_INFORMATION {LONG Bias ;WCHAR StandardName [32 ];SYSTEMTIME StandardDate ;LONG StandardBias ;WCHAR DaylightName [32 ];SYSTEMTIME DaylightDate ;LONG DaylightBias ;WCHAR TimeZoneKeyName [128 ];BOOLEAN DynamicDaylightTimeDisabled ;}DYNAMIC_TIME_ZONE_INFORMATION ;
typedef struct _TIME_DYNAMIC_ZONE_INFORMATION {LONG Bias ;WCHAR StandardName [32 ];SYSTEMTIME StandardDate ;LONG StandardBias ;WCHAR DaylightName [32 ];SYSTEMTIME DaylightDate ;LONG DaylightBias ;WCHAR TimeZoneKeyName [128 ];BOOLEAN DynamicDaylightTimeDisabled ;}*PDYNAMIC_TIME_ZONE_INFORMATION ;

WINBOOL SystemTimeToTzSpecificLocalTime (const TIME_ZONE_INFORMATION *lpTimeZoneInformation ,const SYSTEMTIME *lpUniversalTime ,LPSYSTEMTIME lpLocalTime );
WINBOOL TzSpecificLocalTimeToSystemTime (const TIME_ZONE_INFORMATION *lpTimeZoneInformation ,const SYSTEMTIME *lpLocalTime ,LPSYSTEMTIME lpUniversalTime );
WINBOOL FileTimeToSystemTime (const FILETIME *lpFileTime ,LPSYSTEMTIME lpSystemTime );
WINBOOL SystemTimeToFileTime (const SYSTEMTIME *lpSystemTime ,LPFILETIME lpFileTime );
DWORD GetTimeZoneInformation (LPTIME_ZONE_INFORMATION lpTimeZoneInformation );
WINBOOL SetTimeZoneInformation (const TIME_ZONE_INFORMATION *lpTimeZoneInformation );
// m:\mingw\x86_64-w64-mingw32\include\winbase.h

typedef struct _SYSTEM_POWER_STATUS {BYTE ACLineStatus ;BYTE BatteryFlag ;BYTE BatteryLifePercent ;BYTE Reserved1 ;DWORD BatteryLifeTime ;DWORD BatteryFullLifeTime ;}SYSTEM_POWER_STATUS ;
typedef struct _SYSTEM_POWER_STATUS {BYTE ACLineStatus ;BYTE BatteryFlag ;BYTE BatteryLifePercent ;BYTE Reserved1 ;DWORD BatteryLifeTime ;DWORD BatteryFullLifeTime ;}*LPSYSTEM_POWER_STATUS ;

WINBOOL GetSystemPowerStatus (LPSYSTEM_POWER_STATUS lpSystemPowerStatus );
WINBOOL SetSystemPowerState (WINBOOL fSuspend ,WINBOOL fForce );
WINBOOL AllocateUserPhysicalPages (HANDLE hProcess ,PULONG_PTR NumberOfPages ,PULONG_PTR PageArray );
WINBOOL FreeUserPhysicalPages (HANDLE hProcess ,PULONG_PTR NumberOfPages ,PULONG_PTR PageArray );
WINBOOL MapUserPhysicalPages (PVOID VirtualAddress ,ULONG_PTR NumberOfPages ,PULONG_PTR PageArray );
WINBOOL MapUserPhysicalPagesScatter (PVOID *VirtualAddresses ,ULONG_PTR NumberOfPages ,PULONG_PTR PageArray );
HANDLE CreateJobObjectA (LPSECURITY_ATTRIBUTES lpJobAttributes ,LPCSTR lpName );
HANDLE CreateJobObjectW (LPSECURITY_ATTRIBUTES lpJobAttributes ,LPCWSTR lpName );
HANDLE OpenJobObjectA (DWORD dwDesiredAccess ,WINBOOL bInheritHandle ,LPCSTR lpName );
HANDLE OpenJobObjectW (DWORD dwDesiredAccess ,WINBOOL bInheritHandle ,LPCWSTR lpName );
WINBOOL AssignProcessToJobObject (HANDLE hJob ,HANDLE hProcess );
WINBOOL TerminateJobObject (HANDLE hJob ,UINT uExitCode );
WINBOOL QueryInformationJobObject (HANDLE hJob ,JOBOBJECTINFOCLASS JobObjectInformationClass ,LPVOID lpJobObjectInformation ,DWORD cbJobObjectInformationLength ,LPDWORD lpReturnLength );
WINBOOL SetInformationJobObject (HANDLE hJob ,JOBOBJECTINFOCLASS JobObjectInformationClass ,LPVOID lpJobObjectInformation ,DWORD cbJobObjectInformationLength );
WINBOOL CreateJobSet (ULONG NumJob ,PJOB_SET_ARRAY UserJobSet ,ULONG Flags );
HANDLE FindFirstVolumeA (LPSTR lpszVolumeName ,DWORD cchBufferLength );
WINBOOL FindNextVolumeA (HANDLE hFindVolume ,LPSTR lpszVolumeName ,DWORD cchBufferLength );
HANDLE FindFirstVolumeMountPointA (LPCSTR lpszRootPathName ,LPSTR lpszVolumeMountPoint ,DWORD cchBufferLength );
HANDLE FindFirstVolumeMountPointW (LPCWSTR lpszRootPathName ,LPWSTR lpszVolumeMountPoint ,DWORD cchBufferLength );
WINBOOL FindNextVolumeMountPointA (HANDLE hFindVolumeMountPoint ,LPSTR lpszVolumeMountPoint ,DWORD cchBufferLength );
WINBOOL FindNextVolumeMountPointW (HANDLE hFindVolumeMountPoint ,LPWSTR lpszVolumeMountPoint ,DWORD cchBufferLength );
WINBOOL FindVolumeMountPointClose (HANDLE hFindVolumeMountPoint );
WINBOOL SetVolumeMountPointA (LPCSTR lpszVolumeMountPoint ,LPCSTR lpszVolumeName );
WINBOOL SetVolumeMountPointW (LPCWSTR lpszVolumeMountPoint ,LPCWSTR lpszVolumeName );
WINBOOL DeleteVolumeMountPointA (LPCSTR lpszVolumeMountPoint );
WINBOOL GetVolumeNameForVolumeMountPointA (LPCSTR lpszVolumeMountPoint ,LPSTR lpszVolumeName ,DWORD cchBufferLength );
WINBOOL GetVolumePathNameA (LPCSTR lpszFileName ,LPSTR lpszVolumePathName ,DWORD cchBufferLength );
WINBOOL GetVolumePathNamesForVolumeNameA (LPCSTR lpszVolumeName ,LPCH lpszVolumePathNames ,DWORD cchBufferLength ,PDWORD lpcchReturnLength );
typedef struct tagACTCTXA {ULONG cbSize ;DWORD dwFlags ;LPCSTR lpSource ;USHORT wProcessorArchitecture ;LANGID wLangId ;LPCSTR lpAssemblyDirectory ;LPCSTR lpResourceName ;LPCSTR lpApplicationName ;HMODULE hModule ;}ACTCTXA ;
typedef struct tagACTCTXA {ULONG cbSize ;DWORD dwFlags ;LPCSTR lpSource ;USHORT wProcessorArchitecture ;LANGID wLangId ;LPCSTR lpAssemblyDirectory ;LPCSTR lpResourceName ;LPCSTR lpApplicationName ;HMODULE hModule ;}*PACTCTXA ;

typedef struct tagACTCTXW {ULONG cbSize ;DWORD dwFlags ;LPCWSTR lpSource ;USHORT wProcessorArchitecture ;LANGID wLangId ;LPCWSTR lpAssemblyDirectory ;LPCWSTR lpResourceName ;LPCWSTR lpApplicationName ;HMODULE hModule ;}ACTCTXW ;
typedef struct tagACTCTXW {ULONG cbSize ;DWORD dwFlags ;LPCWSTR lpSource ;USHORT wProcessorArchitecture ;LANGID wLangId ;LPCWSTR lpAssemblyDirectory ;LPCWSTR lpResourceName ;LPCWSTR lpApplicationName ;HMODULE hModule ;}*PACTCTXW ;

typedef ACTCTXA ACTCTX ;
typedef PACTCTXA PACTCTX ;
typedef const ACTCTXA *PCACTCTXA ;
typedef const ACTCTXW *PCACTCTXW ;
typedef PCACTCTXA PCACTCTX ;
HANDLE CreateActCtxA (PCACTCTXA pActCtx );
HANDLE CreateActCtxW (PCACTCTXW pActCtx );
void AddRefActCtx (HANDLE hActCtx );
void ReleaseActCtx (HANDLE hActCtx );
WINBOOL ZombifyActCtx (HANDLE hActCtx );
WINBOOL ActivateActCtx (HANDLE hActCtx ,ULONG_PTR *lpCookie );
WINBOOL DeactivateActCtx (DWORD dwFlags ,ULONG_PTR ulCookie );
WINBOOL GetCurrentActCtx (HANDLE *lphActCtx );
typedef struct tagACTCTX_SECTION_KEYED_DATA_2600 {ULONG cbSize ;ULONG ulDataFormatVersion ;PVOID lpData ;ULONG ulLength ;PVOID lpSectionGlobalData ;ULONG ulSectionGlobalDataLength ;PVOID lpSectionBase ;ULONG ulSectionTotalLength ;HANDLE hActCtx ;ULONG ulAssemblyRosterIndex ;}ACTCTX_SECTION_KEYED_DATA_2600 ;
typedef struct tagACTCTX_SECTION_KEYED_DATA_2600 {ULONG cbSize ;ULONG ulDataFormatVersion ;PVOID lpData ;ULONG ulLength ;PVOID lpSectionGlobalData ;ULONG ulSectionGlobalDataLength ;PVOID lpSectionBase ;ULONG ulSectionTotalLength ;HANDLE hActCtx ;ULONG ulAssemblyRosterIndex ;}*PACTCTX_SECTION_KEYED_DATA_2600 ;

typedef const ACTCTX_SECTION_KEYED_DATA_2600 *PCACTCTX_SECTION_KEYED_DATA_2600 ;
typedef struct tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA {PVOID lpInformation ;PVOID lpSectionBase ;ULONG ulSectionLength ;PVOID lpSectionGlobalDataBase ;ULONG ulSectionGlobalDataLength ;}ACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA ;
typedef struct tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA {PVOID lpInformation ;PVOID lpSectionBase ;ULONG ulSectionLength ;PVOID lpSectionGlobalDataBase ;ULONG ulSectionGlobalDataLength ;}*PACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA ;

typedef const ACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA *PCACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA ;
typedef struct tagACTCTX_SECTION_KEYED_DATA {ULONG cbSize ;ULONG ulDataFormatVersion ;PVOID lpData ;ULONG ulLength ;PVOID lpSectionGlobalData ;ULONG ulSectionGlobalDataLength ;PVOID lpSectionBase ;ULONG ulSectionTotalLength ;HANDLE hActCtx ;ULONG ulAssemblyRosterIndex ;ULONG ulFlags ;ACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA AssemblyMetadata ;}ACTCTX_SECTION_KEYED_DATA ;
typedef struct tagACTCTX_SECTION_KEYED_DATA {ULONG cbSize ;ULONG ulDataFormatVersion ;PVOID lpData ;ULONG ulLength ;PVOID lpSectionGlobalData ;ULONG ulSectionGlobalDataLength ;PVOID lpSectionBase ;ULONG ulSectionTotalLength ;HANDLE hActCtx ;ULONG ulAssemblyRosterIndex ;ULONG ulFlags ;ACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA AssemblyMetadata ;}*PACTCTX_SECTION_KEYED_DATA ;

typedef const ACTCTX_SECTION_KEYED_DATA *PCACTCTX_SECTION_KEYED_DATA ;
WINBOOL FindActCtxSectionStringA (DWORD dwFlags ,const GUID *lpExtensionGuid ,ULONG ulSectionId ,LPCSTR lpStringToFind ,PACTCTX_SECTION_KEYED_DATA ReturnedData );
WINBOOL FindActCtxSectionStringW (DWORD dwFlags ,const GUID *lpExtensionGuid ,ULONG ulSectionId ,LPCWSTR lpStringToFind ,PACTCTX_SECTION_KEYED_DATA ReturnedData );
WINBOOL FindActCtxSectionGuid (DWORD dwFlags ,const GUID *lpExtensionGuid ,ULONG ulSectionId ,const GUID *lpGuidToFind ,PACTCTX_SECTION_KEYED_DATA ReturnedData );
typedef struct _ACTIVATION_CONTEXT_BASIC_INFORMATION {HANDLE hActCtx ;DWORD dwFlags ;}ACTIVATION_CONTEXT_BASIC_INFORMATION ;
typedef struct _ACTIVATION_CONTEXT_BASIC_INFORMATION {HANDLE hActCtx ;DWORD dwFlags ;}*PACTIVATION_CONTEXT_BASIC_INFORMATION ;

typedef const struct _ACTIVATION_CONTEXT_BASIC_INFORMATION *PCACTIVATION_CONTEXT_BASIC_INFORMATION ;
WINBOOL QueryActCtxW (DWORD dwFlags ,HANDLE hActCtx ,PVOID pvSubInstance ,ULONG ulInfoClass ,PVOID pvBuffer ,SIZE_T cbBuffer ,SIZE_T *pcbWrittenOrRequired );
typedef WINBOOL (*PQUERYACTCTXW_FUNC )(DWORD dwFlags ,HANDLE hActCtx ,PVOID pvSubInstance ,ULONG ulInfoClass ,PVOID pvBuffer ,SIZE_T cbBuffer ,SIZE_T *pcbWrittenOrRequired );
DWORD WTSGetActiveConsoleSessionId (void );
WINBOOL GetNumaProcessorNode (UCHAR Processor ,PUCHAR NodeNumber );
WINBOOL GetNumaNodeProcessorMask (UCHAR Node ,PULONGLONG ProcessorMask );
WINBOOL GetNumaAvailableMemoryNode (UCHAR Node ,PULONGLONG AvailableBytes );
typedef DWORD (*APPLICATION_RECOVERY_CALLBACK )(PVOID pvParameter );
WINBOOL CopyContext (PCONTEXT Destination ,DWORD ContextFlags ,PCONTEXT Source );
WINBOOL InitializeContext (PVOID Buffer ,DWORD ContextFlags ,PCONTEXT *Context ,PDWORD ContextLength );
DWORD64 GetEnabledXStateFeatures (void );
WINBOOL GetXStateFeaturesMask (PCONTEXT Context ,PDWORD64 FeatureMask );
PVOID LocateXStateFeature (PCONTEXT Context ,DWORD FeatureId ,PDWORD Length );
WINBOOL SetXStateFeaturesMask (PCONTEXT Context ,DWORD64 FeatureMask );
// m:\mingw\x86_64-w64-mingw32\include\wingdi.h

typedef struct _DRAWPATRECT {POINT ptPosition ;POINT ptSize ;WORD wStyle ;WORD wPattern ;}DRAWPATRECT ;
typedef struct _DRAWPATRECT {POINT ptPosition ;POINT ptSize ;WORD wStyle ;WORD wPattern ;}*PDRAWPATRECT ;

typedef struct _PSINJECTDATA {DWORD DataBytes ;WORD InjectionPoint ;WORD PageNumber ;}PSINJECTDATA ;
typedef struct _PSINJECTDATA {DWORD DataBytes ;WORD InjectionPoint ;WORD PageNumber ;}*PPSINJECTDATA ;

typedef struct _PSFEATURE_OUTPUT {WINBOOL bPageIndependent ;WINBOOL bSetPageDevice ;}PSFEATURE_OUTPUT ;
typedef struct _PSFEATURE_OUTPUT {WINBOOL bPageIndependent ;WINBOOL bSetPageDevice ;}*PPSFEATURE_OUTPUT ;

typedef struct _PSFEATURE_CUSTPAPER {LONG lOrientation ;LONG lWidth ;LONG lHeight ;LONG lWidthOffset ;LONG lHeightOffset ;}PSFEATURE_CUSTPAPER ;
typedef struct _PSFEATURE_CUSTPAPER {LONG lOrientation ;LONG lWidth ;LONG lHeight ;LONG lWidthOffset ;LONG lHeightOffset ;}*PPSFEATURE_CUSTPAPER ;

typedef struct tagXFORM {FLOAT eM11 ;FLOAT eM12 ;FLOAT eM21 ;FLOAT eM22 ;FLOAT eDx ;FLOAT eDy ;}XFORM ;
typedef struct tagXFORM {FLOAT eM11 ;FLOAT eM12 ;FLOAT eM21 ;FLOAT eM22 ;FLOAT eDx ;FLOAT eDy ;}*PXFORM ;
typedef struct tagXFORM {FLOAT eM11 ;FLOAT eM12 ;FLOAT eM21 ;FLOAT eM22 ;FLOAT eDx ;FLOAT eDy ;}*LPXFORM ;

typedef struct tagBITMAP {LONG bmType ;LONG bmWidth ;LONG bmHeight ;LONG bmWidthBytes ;WORD bmPlanes ;WORD bmBitsPixel ;LPVOID bmBits ;}BITMAP ;
typedef struct tagBITMAP {LONG bmType ;LONG bmWidth ;LONG bmHeight ;LONG bmWidthBytes ;WORD bmPlanes ;WORD bmBitsPixel ;LPVOID bmBits ;}*PBITMAP ;
typedef struct tagBITMAP {LONG bmType ;LONG bmWidth ;LONG bmHeight ;LONG bmWidthBytes ;WORD bmPlanes ;WORD bmBitsPixel ;LPVOID bmBits ;}*NPBITMAP ;
typedef struct tagBITMAP {LONG bmType ;LONG bmWidth ;LONG bmHeight ;LONG bmWidthBytes ;WORD bmPlanes ;WORD bmBitsPixel ;LPVOID bmBits ;}*LPBITMAP ;

typedef struct tagRGBTRIPLE {BYTE rgbtBlue ;BYTE rgbtGreen ;BYTE rgbtRed ;}RGBTRIPLE ;
typedef struct tagRGBQUAD {BYTE rgbBlue ;BYTE rgbGreen ;BYTE rgbRed ;BYTE rgbReserved ;}RGBQUAD ;
typedef RGBQUAD *LPRGBQUAD ;
typedef LONG LCSCSTYPE ;
typedef LONG LCSGAMUTMATCH ;
typedef long FXPT16DOT16 ;
typedef long *LPFXPT16DOT16 ;

typedef long FXPT2DOT30 ;
typedef long *LPFXPT2DOT30 ;

typedef struct tagCIEXYZ {FXPT2DOT30 ciexyzX ;FXPT2DOT30 ciexyzY ;FXPT2DOT30 ciexyzZ ;}CIEXYZ ;
typedef CIEXYZ *LPCIEXYZ ;
typedef struct tagICEXYZTRIPLE {CIEXYZ ciexyzRed ;CIEXYZ ciexyzGreen ;CIEXYZ ciexyzBlue ;}CIEXYZTRIPLE ;
typedef CIEXYZTRIPLE *LPCIEXYZTRIPLE ;
typedef struct tagLOGCOLORSPACEA {DWORD lcsSignature ;DWORD lcsVersion ;DWORD lcsSize ;LCSCSTYPE lcsCSType ;LCSGAMUTMATCH lcsIntent ;CIEXYZTRIPLE lcsEndpoints ;DWORD lcsGammaRed ;DWORD lcsGammaGreen ;DWORD lcsGammaBlue ;CHAR lcsFilename [260 ];}LOGCOLORSPACEA ;
typedef struct tagLOGCOLORSPACEA {DWORD lcsSignature ;DWORD lcsVersion ;DWORD lcsSize ;LCSCSTYPE lcsCSType ;LCSGAMUTMATCH lcsIntent ;CIEXYZTRIPLE lcsEndpoints ;DWORD lcsGammaRed ;DWORD lcsGammaGreen ;DWORD lcsGammaBlue ;CHAR lcsFilename [260 ];}*LPLOGCOLORSPACEA ;

typedef struct tagLOGCOLORSPACEW {DWORD lcsSignature ;DWORD lcsVersion ;DWORD lcsSize ;LCSCSTYPE lcsCSType ;LCSGAMUTMATCH lcsIntent ;CIEXYZTRIPLE lcsEndpoints ;DWORD lcsGammaRed ;DWORD lcsGammaGreen ;DWORD lcsGammaBlue ;WCHAR lcsFilename [260 ];}LOGCOLORSPACEW ;
typedef struct tagLOGCOLORSPACEW {DWORD lcsSignature ;DWORD lcsVersion ;DWORD lcsSize ;LCSCSTYPE lcsCSType ;LCSGAMUTMATCH lcsIntent ;CIEXYZTRIPLE lcsEndpoints ;DWORD lcsGammaRed ;DWORD lcsGammaGreen ;DWORD lcsGammaBlue ;WCHAR lcsFilename [260 ];}*LPLOGCOLORSPACEW ;

typedef LOGCOLORSPACEA LOGCOLORSPACE ;
typedef LPLOGCOLORSPACEA LPLOGCOLORSPACE ;
typedef struct tagBITMAPCOREHEADER {DWORD bcSize ;WORD bcWidth ;WORD bcHeight ;WORD bcPlanes ;WORD bcBitCount ;}BITMAPCOREHEADER ;
typedef struct tagBITMAPCOREHEADER {DWORD bcSize ;WORD bcWidth ;WORD bcHeight ;WORD bcPlanes ;WORD bcBitCount ;}*LPBITMAPCOREHEADER ;
typedef struct tagBITMAPCOREHEADER {DWORD bcSize ;WORD bcWidth ;WORD bcHeight ;WORD bcPlanes ;WORD bcBitCount ;}*PBITMAPCOREHEADER ;

typedef struct tagBITMAPINFOHEADER {DWORD biSize ;LONG biWidth ;LONG biHeight ;WORD biPlanes ;WORD biBitCount ;DWORD biCompression ;DWORD biSizeImage ;LONG biXPelsPerMeter ;LONG biYPelsPerMeter ;DWORD biClrUsed ;DWORD biClrImportant ;}BITMAPINFOHEADER ;
typedef struct tagBITMAPINFOHEADER {DWORD biSize ;LONG biWidth ;LONG biHeight ;WORD biPlanes ;WORD biBitCount ;DWORD biCompression ;DWORD biSizeImage ;LONG biXPelsPerMeter ;LONG biYPelsPerMeter ;DWORD biClrUsed ;DWORD biClrImportant ;}*LPBITMAPINFOHEADER ;
typedef struct tagBITMAPINFOHEADER {DWORD biSize ;LONG biWidth ;LONG biHeight ;WORD biPlanes ;WORD biBitCount ;DWORD biCompression ;DWORD biSizeImage ;LONG biXPelsPerMeter ;LONG biYPelsPerMeter ;DWORD biClrUsed ;DWORD biClrImportant ;}*PBITMAPINFOHEADER ;

typedef struct {DWORD bV4Size ;LONG bV4Width ;LONG bV4Height ;WORD bV4Planes ;WORD bV4BitCount ;DWORD bV4V4Compression ;DWORD bV4SizeImage ;LONG bV4XPelsPerMeter ;LONG bV4YPelsPerMeter ;DWORD bV4ClrUsed ;DWORD bV4ClrImportant ;DWORD bV4RedMask ;DWORD bV4GreenMask ;DWORD bV4BlueMask ;DWORD bV4AlphaMask ;DWORD bV4CSType ;CIEXYZTRIPLE bV4Endpoints ;DWORD bV4GammaRed ;DWORD bV4GammaGreen ;DWORD bV4GammaBlue ;}BITMAPV4HEADER ;
typedef struct {DWORD bV4Size ;LONG bV4Width ;LONG bV4Height ;WORD bV4Planes ;WORD bV4BitCount ;DWORD bV4V4Compression ;DWORD bV4SizeImage ;LONG bV4XPelsPerMeter ;LONG bV4YPelsPerMeter ;DWORD bV4ClrUsed ;DWORD bV4ClrImportant ;DWORD bV4RedMask ;DWORD bV4GreenMask ;DWORD bV4BlueMask ;DWORD bV4AlphaMask ;DWORD bV4CSType ;CIEXYZTRIPLE bV4Endpoints ;DWORD bV4GammaRed ;DWORD bV4GammaGreen ;DWORD bV4GammaBlue ;}*LPBITMAPV4HEADER ;
typedef struct {DWORD bV4Size ;LONG bV4Width ;LONG bV4Height ;WORD bV4Planes ;WORD bV4BitCount ;DWORD bV4V4Compression ;DWORD bV4SizeImage ;LONG bV4XPelsPerMeter ;LONG bV4YPelsPerMeter ;DWORD bV4ClrUsed ;DWORD bV4ClrImportant ;DWORD bV4RedMask ;DWORD bV4GreenMask ;DWORD bV4BlueMask ;DWORD bV4AlphaMask ;DWORD bV4CSType ;CIEXYZTRIPLE bV4Endpoints ;DWORD bV4GammaRed ;DWORD bV4GammaGreen ;DWORD bV4GammaBlue ;}*PBITMAPV4HEADER ;

typedef struct {DWORD bV5Size ;LONG bV5Width ;LONG bV5Height ;WORD bV5Planes ;WORD bV5BitCount ;DWORD bV5Compression ;DWORD bV5SizeImage ;LONG bV5XPelsPerMeter ;LONG bV5YPelsPerMeter ;DWORD bV5ClrUsed ;DWORD bV5ClrImportant ;DWORD bV5RedMask ;DWORD bV5GreenMask ;DWORD bV5BlueMask ;DWORD bV5AlphaMask ;DWORD bV5CSType ;CIEXYZTRIPLE bV5Endpoints ;DWORD bV5GammaRed ;DWORD bV5GammaGreen ;DWORD bV5GammaBlue ;DWORD bV5Intent ;DWORD bV5ProfileData ;DWORD bV5ProfileSize ;DWORD bV5Reserved ;}BITMAPV5HEADER ;
typedef struct {DWORD bV5Size ;LONG bV5Width ;LONG bV5Height ;WORD bV5Planes ;WORD bV5BitCount ;DWORD bV5Compression ;DWORD bV5SizeImage ;LONG bV5XPelsPerMeter ;LONG bV5YPelsPerMeter ;DWORD bV5ClrUsed ;DWORD bV5ClrImportant ;DWORD bV5RedMask ;DWORD bV5GreenMask ;DWORD bV5BlueMask ;DWORD bV5AlphaMask ;DWORD bV5CSType ;CIEXYZTRIPLE bV5Endpoints ;DWORD bV5GammaRed ;DWORD bV5GammaGreen ;DWORD bV5GammaBlue ;DWORD bV5Intent ;DWORD bV5ProfileData ;DWORD bV5ProfileSize ;DWORD bV5Reserved ;}*LPBITMAPV5HEADER ;
typedef struct {DWORD bV5Size ;LONG bV5Width ;LONG bV5Height ;WORD bV5Planes ;WORD bV5BitCount ;DWORD bV5Compression ;DWORD bV5SizeImage ;LONG bV5XPelsPerMeter ;LONG bV5YPelsPerMeter ;DWORD bV5ClrUsed ;DWORD bV5ClrImportant ;DWORD bV5RedMask ;DWORD bV5GreenMask ;DWORD bV5BlueMask ;DWORD bV5AlphaMask ;DWORD bV5CSType ;CIEXYZTRIPLE bV5Endpoints ;DWORD bV5GammaRed ;DWORD bV5GammaGreen ;DWORD bV5GammaBlue ;DWORD bV5Intent ;DWORD bV5ProfileData ;DWORD bV5ProfileSize ;DWORD bV5Reserved ;}*PBITMAPV5HEADER ;

typedef struct tagBITMAPINFO {BITMAPINFOHEADER bmiHeader ;RGBQUAD bmiColors [1 ];}BITMAPINFO ;
typedef struct tagBITMAPINFO {BITMAPINFOHEADER bmiHeader ;RGBQUAD bmiColors [1 ];}*LPBITMAPINFO ;
typedef struct tagBITMAPINFO {BITMAPINFOHEADER bmiHeader ;RGBQUAD bmiColors [1 ];}*PBITMAPINFO ;

typedef struct tagBITMAPCOREINFO {BITMAPCOREHEADER bmciHeader ;RGBTRIPLE bmciColors [1 ];}BITMAPCOREINFO ;
typedef struct tagBITMAPCOREINFO {BITMAPCOREHEADER bmciHeader ;RGBTRIPLE bmciColors [1 ];}*LPBITMAPCOREINFO ;
typedef struct tagBITMAPCOREINFO {BITMAPCOREHEADER bmciHeader ;RGBTRIPLE bmciColors [1 ];}*PBITMAPCOREINFO ;

typedef struct tagBITMAPFILEHEADER {WORD bfType ;DWORD bfSize ;WORD bfReserved1 ;WORD bfReserved2 ;DWORD bfOffBits ;}BITMAPFILEHEADER ;
typedef struct tagBITMAPFILEHEADER {WORD bfType ;DWORD bfSize ;WORD bfReserved1 ;WORD bfReserved2 ;DWORD bfOffBits ;}*LPBITMAPFILEHEADER ;
typedef struct tagBITMAPFILEHEADER {WORD bfType ;DWORD bfSize ;WORD bfReserved1 ;WORD bfReserved2 ;DWORD bfOffBits ;}*PBITMAPFILEHEADER ;

typedef struct tagFONTSIGNATURE {DWORD fsUsb [4 ];DWORD fsCsb [2 ];}FONTSIGNATURE ;
typedef struct tagFONTSIGNATURE {DWORD fsUsb [4 ];DWORD fsCsb [2 ];}*PFONTSIGNATURE ;
typedef struct tagFONTSIGNATURE {DWORD fsUsb [4 ];DWORD fsCsb [2 ];}*LPFONTSIGNATURE ;

typedef struct tagCHARSETINFO {UINT ciCharset ;UINT ciACP ;FONTSIGNATURE fs ;}CHARSETINFO ;
typedef struct tagCHARSETINFO {UINT ciCharset ;UINT ciACP ;FONTSIGNATURE fs ;}*PCHARSETINFO ;
typedef struct tagCHARSETINFO {UINT ciCharset ;UINT ciACP ;FONTSIGNATURE fs ;}*NPCHARSETINFO ;
typedef struct tagCHARSETINFO {UINT ciCharset ;UINT ciACP ;FONTSIGNATURE fs ;}*LPCHARSETINFO ;

typedef struct tagLOCALESIGNATURE {DWORD lsUsb [4 ];DWORD lsCsbDefault [2 ];DWORD lsCsbSupported [2 ];}LOCALESIGNATURE ;
typedef struct tagLOCALESIGNATURE {DWORD lsUsb [4 ];DWORD lsCsbDefault [2 ];DWORD lsCsbSupported [2 ];}*PLOCALESIGNATURE ;
typedef struct tagLOCALESIGNATURE {DWORD lsUsb [4 ];DWORD lsCsbDefault [2 ];DWORD lsCsbSupported [2 ];}*LPLOCALESIGNATURE ;

typedef struct tagHANDLETABLE {HGDIOBJ objectHandle [1 ];}HANDLETABLE ;
typedef struct tagHANDLETABLE {HGDIOBJ objectHandle [1 ];}*PHANDLETABLE ;
typedef struct tagHANDLETABLE {HGDIOBJ objectHandle [1 ];}*LPHANDLETABLE ;

typedef struct tagMETARECORD {DWORD rdSize ;WORD rdFunction ;WORD rdParm [1 ];}METARECORD ;
typedef struct tagMETARECORD *PMETARECORD ;
typedef struct tagMETARECORD *LPMETARECORD ;
typedef struct tagMETAFILEPICT {LONG mm ;LONG xExt ;LONG yExt ;HMETAFILE hMF ;}METAFILEPICT ;
typedef struct tagMETAFILEPICT {LONG mm ;LONG xExt ;LONG yExt ;HMETAFILE hMF ;}*LPMETAFILEPICT ;

typedef struct tagMETAHEADER {WORD mtType ;WORD mtHeaderSize ;WORD mtVersion ;DWORD mtSize ;WORD mtNoObjects ;DWORD mtMaxRecord ;WORD mtNoParameters ;}METAHEADER ;
typedef struct tagMETAHEADER *PMETAHEADER ;
typedef struct tagMETAHEADER *LPMETAHEADER ;
typedef struct tagENHMETARECORD {DWORD iType ;DWORD nSize ;DWORD dParm [1 ];}ENHMETARECORD ;
typedef struct tagENHMETARECORD {DWORD iType ;DWORD nSize ;DWORD dParm [1 ];}*PENHMETARECORD ;
typedef struct tagENHMETARECORD {DWORD iType ;DWORD nSize ;DWORD dParm [1 ];}*LPENHMETARECORD ;

typedef struct tagENHMETAHEADER {DWORD iType ;DWORD nSize ;RECTL rclBounds ;RECTL rclFrame ;DWORD dSignature ;DWORD nVersion ;DWORD nBytes ;DWORD nRecords ;WORD nHandles ;WORD sReserved ;DWORD nDescription ;DWORD offDescription ;DWORD nPalEntries ;SIZEL szlDevice ;SIZEL szlMillimeters ;DWORD cbPixelFormat ;DWORD offPixelFormat ;DWORD bOpenGL ;SIZEL szlMicrometers ;}ENHMETAHEADER ;
typedef struct tagENHMETAHEADER {DWORD iType ;DWORD nSize ;RECTL rclBounds ;RECTL rclFrame ;DWORD dSignature ;DWORD nVersion ;DWORD nBytes ;DWORD nRecords ;WORD nHandles ;WORD sReserved ;DWORD nDescription ;DWORD offDescription ;DWORD nPalEntries ;SIZEL szlDevice ;SIZEL szlMillimeters ;DWORD cbPixelFormat ;DWORD offPixelFormat ;DWORD bOpenGL ;SIZEL szlMicrometers ;}*PENHMETAHEADER ;
typedef struct tagENHMETAHEADER {DWORD iType ;DWORD nSize ;RECTL rclBounds ;RECTL rclFrame ;DWORD dSignature ;DWORD nVersion ;DWORD nBytes ;DWORD nRecords ;WORD nHandles ;WORD sReserved ;DWORD nDescription ;DWORD offDescription ;DWORD nPalEntries ;SIZEL szlDevice ;SIZEL szlMillimeters ;DWORD cbPixelFormat ;DWORD offPixelFormat ;DWORD bOpenGL ;SIZEL szlMicrometers ;}*LPENHMETAHEADER ;

typedef BYTE BCHAR ;
typedef struct tagTEXTMETRICA {LONG tmHeight ;LONG tmAscent ;LONG tmDescent ;LONG tmInternalLeading ;LONG tmExternalLeading ;LONG tmAveCharWidth ;LONG tmMaxCharWidth ;LONG tmWeight ;LONG tmOverhang ;LONG tmDigitizedAspectX ;LONG tmDigitizedAspectY ;BYTE tmFirstChar ;BYTE tmLastChar ;BYTE tmDefaultChar ;BYTE tmBreakChar ;BYTE tmItalic ;BYTE tmUnderlined ;BYTE tmStruckOut ;BYTE tmPitchAndFamily ;BYTE tmCharSet ;}TEXTMETRICA ;
typedef struct tagTEXTMETRICA {LONG tmHeight ;LONG tmAscent ;LONG tmDescent ;LONG tmInternalLeading ;LONG tmExternalLeading ;LONG tmAveCharWidth ;LONG tmMaxCharWidth ;LONG tmWeight ;LONG tmOverhang ;LONG tmDigitizedAspectX ;LONG tmDigitizedAspectY ;BYTE tmFirstChar ;BYTE tmLastChar ;BYTE tmDefaultChar ;BYTE tmBreakChar ;BYTE tmItalic ;BYTE tmUnderlined ;BYTE tmStruckOut ;BYTE tmPitchAndFamily ;BYTE tmCharSet ;}*PTEXTMETRICA ;
typedef struct tagTEXTMETRICA {LONG tmHeight ;LONG tmAscent ;LONG tmDescent ;LONG tmInternalLeading ;LONG tmExternalLeading ;LONG tmAveCharWidth ;LONG tmMaxCharWidth ;LONG tmWeight ;LONG tmOverhang ;LONG tmDigitizedAspectX ;LONG tmDigitizedAspectY ;BYTE tmFirstChar ;BYTE tmLastChar ;BYTE tmDefaultChar ;BYTE tmBreakChar ;BYTE tmItalic ;BYTE tmUnderlined ;BYTE tmStruckOut ;BYTE tmPitchAndFamily ;BYTE tmCharSet ;}*NPTEXTMETRICA ;
typedef struct tagTEXTMETRICA {LONG tmHeight ;LONG tmAscent ;LONG tmDescent ;LONG tmInternalLeading ;LONG tmExternalLeading ;LONG tmAveCharWidth ;LONG tmMaxCharWidth ;LONG tmWeight ;LONG tmOverhang ;LONG tmDigitizedAspectX ;LONG tmDigitizedAspectY ;BYTE tmFirstChar ;BYTE tmLastChar ;BYTE tmDefaultChar ;BYTE tmBreakChar ;BYTE tmItalic ;BYTE tmUnderlined ;BYTE tmStruckOut ;BYTE tmPitchAndFamily ;BYTE tmCharSet ;}*LPTEXTMETRICA ;

typedef struct tagTEXTMETRICW {LONG tmHeight ;LONG tmAscent ;LONG tmDescent ;LONG tmInternalLeading ;LONG tmExternalLeading ;LONG tmAveCharWidth ;LONG tmMaxCharWidth ;LONG tmWeight ;LONG tmOverhang ;LONG tmDigitizedAspectX ;LONG tmDigitizedAspectY ;WCHAR tmFirstChar ;WCHAR tmLastChar ;WCHAR tmDefaultChar ;WCHAR tmBreakChar ;BYTE tmItalic ;BYTE tmUnderlined ;BYTE tmStruckOut ;BYTE tmPitchAndFamily ;BYTE tmCharSet ;}TEXTMETRICW ;
typedef struct tagTEXTMETRICW {LONG tmHeight ;LONG tmAscent ;LONG tmDescent ;LONG tmInternalLeading ;LONG tmExternalLeading ;LONG tmAveCharWidth ;LONG tmMaxCharWidth ;LONG tmWeight ;LONG tmOverhang ;LONG tmDigitizedAspectX ;LONG tmDigitizedAspectY ;WCHAR tmFirstChar ;WCHAR tmLastChar ;WCHAR tmDefaultChar ;WCHAR tmBreakChar ;BYTE tmItalic ;BYTE tmUnderlined ;BYTE tmStruckOut ;BYTE tmPitchAndFamily ;BYTE tmCharSet ;}*PTEXTMETRICW ;
typedef struct tagTEXTMETRICW {LONG tmHeight ;LONG tmAscent ;LONG tmDescent ;LONG tmInternalLeading ;LONG tmExternalLeading ;LONG tmAveCharWidth ;LONG tmMaxCharWidth ;LONG tmWeight ;LONG tmOverhang ;LONG tmDigitizedAspectX ;LONG tmDigitizedAspectY ;WCHAR tmFirstChar ;WCHAR tmLastChar ;WCHAR tmDefaultChar ;WCHAR tmBreakChar ;BYTE tmItalic ;BYTE tmUnderlined ;BYTE tmStruckOut ;BYTE tmPitchAndFamily ;BYTE tmCharSet ;}*NPTEXTMETRICW ;
typedef struct tagTEXTMETRICW {LONG tmHeight ;LONG tmAscent ;LONG tmDescent ;LONG tmInternalLeading ;LONG tmExternalLeading ;LONG tmAveCharWidth ;LONG tmMaxCharWidth ;LONG tmWeight ;LONG tmOverhang ;LONG tmDigitizedAspectX ;LONG tmDigitizedAspectY ;WCHAR tmFirstChar ;WCHAR tmLastChar ;WCHAR tmDefaultChar ;WCHAR tmBreakChar ;BYTE tmItalic ;BYTE tmUnderlined ;BYTE tmStruckOut ;BYTE tmPitchAndFamily ;BYTE tmCharSet ;}*LPTEXTMETRICW ;

typedef TEXTMETRICA TEXTMETRIC ;
typedef PTEXTMETRICA PTEXTMETRIC ;
typedef NPTEXTMETRICA NPTEXTMETRIC ;
typedef LPTEXTMETRICA LPTEXTMETRIC ;
typedef struct tagNEWTEXTMETRICA {LONG tmHeight ;LONG tmAscent ;LONG tmDescent ;LONG tmInternalLeading ;LONG tmExternalLeading ;LONG tmAveCharWidth ;LONG tmMaxCharWidth ;LONG tmWeight ;LONG tmOverhang ;LONG tmDigitizedAspectX ;LONG tmDigitizedAspectY ;BYTE tmFirstChar ;BYTE tmLastChar ;BYTE tmDefaultChar ;BYTE tmBreakChar ;BYTE tmItalic ;BYTE tmUnderlined ;BYTE tmStruckOut ;BYTE tmPitchAndFamily ;BYTE tmCharSet ;DWORD ntmFlags ;UINT ntmSizeEM ;UINT ntmCellHeight ;UINT ntmAvgWidth ;}NEWTEXTMETRICA ;
typedef struct tagNEWTEXTMETRICA {LONG tmHeight ;LONG tmAscent ;LONG tmDescent ;LONG tmInternalLeading ;LONG tmExternalLeading ;LONG tmAveCharWidth ;LONG tmMaxCharWidth ;LONG tmWeight ;LONG tmOverhang ;LONG tmDigitizedAspectX ;LONG tmDigitizedAspectY ;BYTE tmFirstChar ;BYTE tmLastChar ;BYTE tmDefaultChar ;BYTE tmBreakChar ;BYTE tmItalic ;BYTE tmUnderlined ;BYTE tmStruckOut ;BYTE tmPitchAndFamily ;BYTE tmCharSet ;DWORD ntmFlags ;UINT ntmSizeEM ;UINT ntmCellHeight ;UINT ntmAvgWidth ;}*PNEWTEXTMETRICA ;
typedef struct tagNEWTEXTMETRICA {LONG tmHeight ;LONG tmAscent ;LONG tmDescent ;LONG tmInternalLeading ;LONG tmExternalLeading ;LONG tmAveCharWidth ;LONG tmMaxCharWidth ;LONG tmWeight ;LONG tmOverhang ;LONG tmDigitizedAspectX ;LONG tmDigitizedAspectY ;BYTE tmFirstChar ;BYTE tmLastChar ;BYTE tmDefaultChar ;BYTE tmBreakChar ;BYTE tmItalic ;BYTE tmUnderlined ;BYTE tmStruckOut ;BYTE tmPitchAndFamily ;BYTE tmCharSet ;DWORD ntmFlags ;UINT ntmSizeEM ;UINT ntmCellHeight ;UINT ntmAvgWidth ;}*NPNEWTEXTMETRICA ;
typedef struct tagNEWTEXTMETRICA {LONG tmHeight ;LONG tmAscent ;LONG tmDescent ;LONG tmInternalLeading ;LONG tmExternalLeading ;LONG tmAveCharWidth ;LONG tmMaxCharWidth ;LONG tmWeight ;LONG tmOverhang ;LONG tmDigitizedAspectX ;LONG tmDigitizedAspectY ;BYTE tmFirstChar ;BYTE tmLastChar ;BYTE tmDefaultChar ;BYTE tmBreakChar ;BYTE tmItalic ;BYTE tmUnderlined ;BYTE tmStruckOut ;BYTE tmPitchAndFamily ;BYTE tmCharSet ;DWORD ntmFlags ;UINT ntmSizeEM ;UINT ntmCellHeight ;UINT ntmAvgWidth ;}*LPNEWTEXTMETRICA ;

typedef struct tagNEWTEXTMETRICW {LONG tmHeight ;LONG tmAscent ;LONG tmDescent ;LONG tmInternalLeading ;LONG tmExternalLeading ;LONG tmAveCharWidth ;LONG tmMaxCharWidth ;LONG tmWeight ;LONG tmOverhang ;LONG tmDigitizedAspectX ;LONG tmDigitizedAspectY ;WCHAR tmFirstChar ;WCHAR tmLastChar ;WCHAR tmDefaultChar ;WCHAR tmBreakChar ;BYTE tmItalic ;BYTE tmUnderlined ;BYTE tmStruckOut ;BYTE tmPitchAndFamily ;BYTE tmCharSet ;DWORD ntmFlags ;UINT ntmSizeEM ;UINT ntmCellHeight ;UINT ntmAvgWidth ;}NEWTEXTMETRICW ;
typedef struct tagNEWTEXTMETRICW {LONG tmHeight ;LONG tmAscent ;LONG tmDescent ;LONG tmInternalLeading ;LONG tmExternalLeading ;LONG tmAveCharWidth ;LONG tmMaxCharWidth ;LONG tmWeight ;LONG tmOverhang ;LONG tmDigitizedAspectX ;LONG tmDigitizedAspectY ;WCHAR tmFirstChar ;WCHAR tmLastChar ;WCHAR tmDefaultChar ;WCHAR tmBreakChar ;BYTE tmItalic ;BYTE tmUnderlined ;BYTE tmStruckOut ;BYTE tmPitchAndFamily ;BYTE tmCharSet ;DWORD ntmFlags ;UINT ntmSizeEM ;UINT ntmCellHeight ;UINT ntmAvgWidth ;}*PNEWTEXTMETRICW ;
typedef struct tagNEWTEXTMETRICW {LONG tmHeight ;LONG tmAscent ;LONG tmDescent ;LONG tmInternalLeading ;LONG tmExternalLeading ;LONG tmAveCharWidth ;LONG tmMaxCharWidth ;LONG tmWeight ;LONG tmOverhang ;LONG tmDigitizedAspectX ;LONG tmDigitizedAspectY ;WCHAR tmFirstChar ;WCHAR tmLastChar ;WCHAR tmDefaultChar ;WCHAR tmBreakChar ;BYTE tmItalic ;BYTE tmUnderlined ;BYTE tmStruckOut ;BYTE tmPitchAndFamily ;BYTE tmCharSet ;DWORD ntmFlags ;UINT ntmSizeEM ;UINT ntmCellHeight ;UINT ntmAvgWidth ;}*NPNEWTEXTMETRICW ;
typedef struct tagNEWTEXTMETRICW {LONG tmHeight ;LONG tmAscent ;LONG tmDescent ;LONG tmInternalLeading ;LONG tmExternalLeading ;LONG tmAveCharWidth ;LONG tmMaxCharWidth ;LONG tmWeight ;LONG tmOverhang ;LONG tmDigitizedAspectX ;LONG tmDigitizedAspectY ;WCHAR tmFirstChar ;WCHAR tmLastChar ;WCHAR tmDefaultChar ;WCHAR tmBreakChar ;BYTE tmItalic ;BYTE tmUnderlined ;BYTE tmStruckOut ;BYTE tmPitchAndFamily ;BYTE tmCharSet ;DWORD ntmFlags ;UINT ntmSizeEM ;UINT ntmCellHeight ;UINT ntmAvgWidth ;}*LPNEWTEXTMETRICW ;

typedef NEWTEXTMETRICA NEWTEXTMETRIC ;
typedef PNEWTEXTMETRICA PNEWTEXTMETRIC ;
typedef NPNEWTEXTMETRICA NPNEWTEXTMETRIC ;
typedef LPNEWTEXTMETRICA LPNEWTEXTMETRIC ;
typedef struct tagNEWTEXTMETRICEXA {NEWTEXTMETRICA ntmTm ;FONTSIGNATURE ntmFontSig ;}NEWTEXTMETRICEXA ;
typedef struct tagNEWTEXTMETRICEXW {NEWTEXTMETRICW ntmTm ;FONTSIGNATURE ntmFontSig ;}NEWTEXTMETRICEXW ;
typedef NEWTEXTMETRICEXA NEWTEXTMETRICEX ;
typedef struct tagPELARRAY {LONG paXCount ;LONG paYCount ;LONG paXExt ;LONG paYExt ;BYTE paRGBs ;}PELARRAY ;
typedef struct tagPELARRAY {LONG paXCount ;LONG paYCount ;LONG paXExt ;LONG paYExt ;BYTE paRGBs ;}*PPELARRAY ;
typedef struct tagPELARRAY {LONG paXCount ;LONG paYCount ;LONG paXExt ;LONG paYExt ;BYTE paRGBs ;}*NPPELARRAY ;
typedef struct tagPELARRAY {LONG paXCount ;LONG paYCount ;LONG paXExt ;LONG paYExt ;BYTE paRGBs ;}*LPPELARRAY ;

typedef struct tagLOGBRUSH {UINT lbStyle ;COLORREF lbColor ;ULONG_PTR lbHatch ;}LOGBRUSH ;
typedef struct tagLOGBRUSH {UINT lbStyle ;COLORREF lbColor ;ULONG_PTR lbHatch ;}*PLOGBRUSH ;
typedef struct tagLOGBRUSH {UINT lbStyle ;COLORREF lbColor ;ULONG_PTR lbHatch ;}*NPLOGBRUSH ;
typedef struct tagLOGBRUSH {UINT lbStyle ;COLORREF lbColor ;ULONG_PTR lbHatch ;}*LPLOGBRUSH ;

typedef struct tagLOGBRUSH32 {UINT lbStyle ;COLORREF lbColor ;ULONG lbHatch ;}LOGBRUSH32 ;
typedef struct tagLOGBRUSH32 {UINT lbStyle ;COLORREF lbColor ;ULONG lbHatch ;}*PLOGBRUSH32 ;
typedef struct tagLOGBRUSH32 {UINT lbStyle ;COLORREF lbColor ;ULONG lbHatch ;}*NPLOGBRUSH32 ;
typedef struct tagLOGBRUSH32 {UINT lbStyle ;COLORREF lbColor ;ULONG lbHatch ;}*LPLOGBRUSH32 ;

typedef LOGBRUSH PATTERN ;
typedef PATTERN *PPATTERN ;
typedef PATTERN *NPPATTERN ;
typedef PATTERN *LPPATTERN ;
typedef struct tagLOGPEN {UINT lopnStyle ;POINT lopnWidth ;COLORREF lopnColor ;}LOGPEN ;
typedef struct tagLOGPEN {UINT lopnStyle ;POINT lopnWidth ;COLORREF lopnColor ;}*PLOGPEN ;
typedef struct tagLOGPEN {UINT lopnStyle ;POINT lopnWidth ;COLORREF lopnColor ;}*NPLOGPEN ;
typedef struct tagLOGPEN {UINT lopnStyle ;POINT lopnWidth ;COLORREF lopnColor ;}*LPLOGPEN ;

typedef struct tagEXTLOGPEN {DWORD elpPenStyle ;DWORD elpWidth ;UINT elpBrushStyle ;COLORREF elpColor ;ULONG_PTR elpHatch ;DWORD elpNumEntries ;DWORD elpStyleEntry [1 ];}EXTLOGPEN ;
typedef struct tagEXTLOGPEN {DWORD elpPenStyle ;DWORD elpWidth ;UINT elpBrushStyle ;COLORREF elpColor ;ULONG_PTR elpHatch ;DWORD elpNumEntries ;DWORD elpStyleEntry [1 ];}*PEXTLOGPEN ;
typedef struct tagEXTLOGPEN {DWORD elpPenStyle ;DWORD elpWidth ;UINT elpBrushStyle ;COLORREF elpColor ;ULONG_PTR elpHatch ;DWORD elpNumEntries ;DWORD elpStyleEntry [1 ];}*NPEXTLOGPEN ;
typedef struct tagEXTLOGPEN {DWORD elpPenStyle ;DWORD elpWidth ;UINT elpBrushStyle ;COLORREF elpColor ;ULONG_PTR elpHatch ;DWORD elpNumEntries ;DWORD elpStyleEntry [1 ];}*LPEXTLOGPEN ;

typedef struct tagEXTLOGPEN32 {DWORD elpPenStyle ;DWORD elpWidth ;UINT elpBrushStyle ;COLORREF elpColor ;ULONG elpHatch ;DWORD elpNumEntries ;DWORD elpStyleEntry [1 ];}EXTLOGPEN32 ;
typedef struct tagEXTLOGPEN32 {DWORD elpPenStyle ;DWORD elpWidth ;UINT elpBrushStyle ;COLORREF elpColor ;ULONG elpHatch ;DWORD elpNumEntries ;DWORD elpStyleEntry [1 ];}*PEXTLOGPEN32 ;
typedef struct tagEXTLOGPEN32 {DWORD elpPenStyle ;DWORD elpWidth ;UINT elpBrushStyle ;COLORREF elpColor ;ULONG elpHatch ;DWORD elpNumEntries ;DWORD elpStyleEntry [1 ];}*NPEXTLOGPEN32 ;
typedef struct tagEXTLOGPEN32 {DWORD elpPenStyle ;DWORD elpWidth ;UINT elpBrushStyle ;COLORREF elpColor ;ULONG elpHatch ;DWORD elpNumEntries ;DWORD elpStyleEntry [1 ];}*LPEXTLOGPEN32 ;

typedef struct tagPALETTEENTRY {BYTE peRed ;BYTE peGreen ;BYTE peBlue ;BYTE peFlags ;}PALETTEENTRY ;
typedef struct tagPALETTEENTRY {BYTE peRed ;BYTE peGreen ;BYTE peBlue ;BYTE peFlags ;}*PPALETTEENTRY ;
typedef struct tagPALETTEENTRY {BYTE peRed ;BYTE peGreen ;BYTE peBlue ;BYTE peFlags ;}*LPPALETTEENTRY ;

typedef struct tagLOGPALETTE {WORD palVersion ;WORD palNumEntries ;PALETTEENTRY palPalEntry [1 ];}LOGPALETTE ;
typedef struct tagLOGPALETTE {WORD palVersion ;WORD palNumEntries ;PALETTEENTRY palPalEntry [1 ];}*PLOGPALETTE ;
typedef struct tagLOGPALETTE {WORD palVersion ;WORD palNumEntries ;PALETTEENTRY palPalEntry [1 ];}*NPLOGPALETTE ;
typedef struct tagLOGPALETTE {WORD palVersion ;WORD palNumEntries ;PALETTEENTRY palPalEntry [1 ];}*LPLOGPALETTE ;

typedef struct tagLOGFONTA {LONG lfHeight ;LONG lfWidth ;LONG lfEscapement ;LONG lfOrientation ;LONG lfWeight ;BYTE lfItalic ;BYTE lfUnderline ;BYTE lfStrikeOut ;BYTE lfCharSet ;BYTE lfOutPrecision ;BYTE lfClipPrecision ;BYTE lfQuality ;BYTE lfPitchAndFamily ;CHAR lfFaceName [32 ];}LOGFONTA ;
typedef struct tagLOGFONTA {LONG lfHeight ;LONG lfWidth ;LONG lfEscapement ;LONG lfOrientation ;LONG lfWeight ;BYTE lfItalic ;BYTE lfUnderline ;BYTE lfStrikeOut ;BYTE lfCharSet ;BYTE lfOutPrecision ;BYTE lfClipPrecision ;BYTE lfQuality ;BYTE lfPitchAndFamily ;CHAR lfFaceName [32 ];}*PLOGFONTA ;
typedef struct tagLOGFONTA {LONG lfHeight ;LONG lfWidth ;LONG lfEscapement ;LONG lfOrientation ;LONG lfWeight ;BYTE lfItalic ;BYTE lfUnderline ;BYTE lfStrikeOut ;BYTE lfCharSet ;BYTE lfOutPrecision ;BYTE lfClipPrecision ;BYTE lfQuality ;BYTE lfPitchAndFamily ;CHAR lfFaceName [32 ];}*NPLOGFONTA ;
typedef struct tagLOGFONTA {LONG lfHeight ;LONG lfWidth ;LONG lfEscapement ;LONG lfOrientation ;LONG lfWeight ;BYTE lfItalic ;BYTE lfUnderline ;BYTE lfStrikeOut ;BYTE lfCharSet ;BYTE lfOutPrecision ;BYTE lfClipPrecision ;BYTE lfQuality ;BYTE lfPitchAndFamily ;CHAR lfFaceName [32 ];}*LPLOGFONTA ;

typedef struct tagLOGFONTW {LONG lfHeight ;LONG lfWidth ;LONG lfEscapement ;LONG lfOrientation ;LONG lfWeight ;BYTE lfItalic ;BYTE lfUnderline ;BYTE lfStrikeOut ;BYTE lfCharSet ;BYTE lfOutPrecision ;BYTE lfClipPrecision ;BYTE lfQuality ;BYTE lfPitchAndFamily ;WCHAR lfFaceName [32 ];}LOGFONTW ;
typedef struct tagLOGFONTW {LONG lfHeight ;LONG lfWidth ;LONG lfEscapement ;LONG lfOrientation ;LONG lfWeight ;BYTE lfItalic ;BYTE lfUnderline ;BYTE lfStrikeOut ;BYTE lfCharSet ;BYTE lfOutPrecision ;BYTE lfClipPrecision ;BYTE lfQuality ;BYTE lfPitchAndFamily ;WCHAR lfFaceName [32 ];}*PLOGFONTW ;
typedef struct tagLOGFONTW {LONG lfHeight ;LONG lfWidth ;LONG lfEscapement ;LONG lfOrientation ;LONG lfWeight ;BYTE lfItalic ;BYTE lfUnderline ;BYTE lfStrikeOut ;BYTE lfCharSet ;BYTE lfOutPrecision ;BYTE lfClipPrecision ;BYTE lfQuality ;BYTE lfPitchAndFamily ;WCHAR lfFaceName [32 ];}*NPLOGFONTW ;
typedef struct tagLOGFONTW {LONG lfHeight ;LONG lfWidth ;LONG lfEscapement ;LONG lfOrientation ;LONG lfWeight ;BYTE lfItalic ;BYTE lfUnderline ;BYTE lfStrikeOut ;BYTE lfCharSet ;BYTE lfOutPrecision ;BYTE lfClipPrecision ;BYTE lfQuality ;BYTE lfPitchAndFamily ;WCHAR lfFaceName [32 ];}*LPLOGFONTW ;

typedef LOGFONTA LOGFONT ;
typedef PLOGFONTA PLOGFONT ;
typedef NPLOGFONTA NPLOGFONT ;
typedef LPLOGFONTA LPLOGFONT ;
typedef struct tagENUMLOGFONTA {LOGFONTA elfLogFont ;BYTE elfFullName [64 ];BYTE elfStyle [32 ];}ENUMLOGFONTA ;
typedef struct tagENUMLOGFONTA {LOGFONTA elfLogFont ;BYTE elfFullName [64 ];BYTE elfStyle [32 ];}*LPENUMLOGFONTA ;

typedef struct tagENUMLOGFONTW {LOGFONTW elfLogFont ;WCHAR elfFullName [64 ];WCHAR elfStyle [32 ];}ENUMLOGFONTW ;
typedef struct tagENUMLOGFONTW {LOGFONTW elfLogFont ;WCHAR elfFullName [64 ];WCHAR elfStyle [32 ];}*LPENUMLOGFONTW ;

typedef ENUMLOGFONTA ENUMLOGFONT ;
typedef LPENUMLOGFONTA LPENUMLOGFONT ;
typedef struct tagENUMLOGFONTEXA {LOGFONTA elfLogFont ;BYTE elfFullName [64 ];BYTE elfStyle [32 ];BYTE elfScript [32 ];}ENUMLOGFONTEXA ;
typedef struct tagENUMLOGFONTEXA {LOGFONTA elfLogFont ;BYTE elfFullName [64 ];BYTE elfStyle [32 ];BYTE elfScript [32 ];}*LPENUMLOGFONTEXA ;

typedef struct tagENUMLOGFONTEXW {LOGFONTW elfLogFont ;WCHAR elfFullName [64 ];WCHAR elfStyle [32 ];WCHAR elfScript [32 ];}ENUMLOGFONTEXW ;
typedef struct tagENUMLOGFONTEXW {LOGFONTW elfLogFont ;WCHAR elfFullName [64 ];WCHAR elfStyle [32 ];WCHAR elfScript [32 ];}*LPENUMLOGFONTEXW ;

typedef ENUMLOGFONTEXA ENUMLOGFONTEX ;
typedef LPENUMLOGFONTEXA LPENUMLOGFONTEX ;
typedef struct tagPANOSE {BYTE bFamilyType ;BYTE bSerifStyle ;BYTE bWeight ;BYTE bProportion ;BYTE bContrast ;BYTE bStrokeVariation ;BYTE bArmStyle ;BYTE bLetterform ;BYTE bMidline ;BYTE bXHeight ;}PANOSE ;
typedef struct tagPANOSE {BYTE bFamilyType ;BYTE bSerifStyle ;BYTE bWeight ;BYTE bProportion ;BYTE bContrast ;BYTE bStrokeVariation ;BYTE bArmStyle ;BYTE bLetterform ;BYTE bMidline ;BYTE bXHeight ;}*LPPANOSE ;

typedef struct tagEXTLOGFONTA {LOGFONTA elfLogFont ;BYTE elfFullName [64 ];BYTE elfStyle [32 ];DWORD elfVersion ;DWORD elfStyleSize ;DWORD elfMatch ;DWORD elfReserved ;BYTE elfVendorId [4 ];DWORD elfCulture ;PANOSE elfPanose ;}EXTLOGFONTA ;
typedef struct tagEXTLOGFONTA {LOGFONTA elfLogFont ;BYTE elfFullName [64 ];BYTE elfStyle [32 ];DWORD elfVersion ;DWORD elfStyleSize ;DWORD elfMatch ;DWORD elfReserved ;BYTE elfVendorId [4 ];DWORD elfCulture ;PANOSE elfPanose ;}*PEXTLOGFONTA ;
typedef struct tagEXTLOGFONTA {LOGFONTA elfLogFont ;BYTE elfFullName [64 ];BYTE elfStyle [32 ];DWORD elfVersion ;DWORD elfStyleSize ;DWORD elfMatch ;DWORD elfReserved ;BYTE elfVendorId [4 ];DWORD elfCulture ;PANOSE elfPanose ;}*NPEXTLOGFONTA ;
typedef struct tagEXTLOGFONTA {LOGFONTA elfLogFont ;BYTE elfFullName [64 ];BYTE elfStyle [32 ];DWORD elfVersion ;DWORD elfStyleSize ;DWORD elfMatch ;DWORD elfReserved ;BYTE elfVendorId [4 ];DWORD elfCulture ;PANOSE elfPanose ;}*LPEXTLOGFONTA ;

typedef struct tagEXTLOGFONTW {LOGFONTW elfLogFont ;WCHAR elfFullName [64 ];WCHAR elfStyle [32 ];DWORD elfVersion ;DWORD elfStyleSize ;DWORD elfMatch ;DWORD elfReserved ;BYTE elfVendorId [4 ];DWORD elfCulture ;PANOSE elfPanose ;}EXTLOGFONTW ;
typedef struct tagEXTLOGFONTW {LOGFONTW elfLogFont ;WCHAR elfFullName [64 ];WCHAR elfStyle [32 ];DWORD elfVersion ;DWORD elfStyleSize ;DWORD elfMatch ;DWORD elfReserved ;BYTE elfVendorId [4 ];DWORD elfCulture ;PANOSE elfPanose ;}*PEXTLOGFONTW ;
typedef struct tagEXTLOGFONTW {LOGFONTW elfLogFont ;WCHAR elfFullName [64 ];WCHAR elfStyle [32 ];DWORD elfVersion ;DWORD elfStyleSize ;DWORD elfMatch ;DWORD elfReserved ;BYTE elfVendorId [4 ];DWORD elfCulture ;PANOSE elfPanose ;}*NPEXTLOGFONTW ;
typedef struct tagEXTLOGFONTW {LOGFONTW elfLogFont ;WCHAR elfFullName [64 ];WCHAR elfStyle [32 ];DWORD elfVersion ;DWORD elfStyleSize ;DWORD elfMatch ;DWORD elfReserved ;BYTE elfVendorId [4 ];DWORD elfCulture ;PANOSE elfPanose ;}*LPEXTLOGFONTW ;

typedef EXTLOGFONTA EXTLOGFONT ;
typedef PEXTLOGFONTA PEXTLOGFONT ;
typedef NPEXTLOGFONTA NPEXTLOGFONT ;
typedef LPEXTLOGFONTA LPEXTLOGFONT ;
typedef struct _devicemodeA {BYTE dmDeviceName [32 ];WORD dmSpecVersion ;WORD dmDriverVersion ;WORD dmSize ;WORD dmDriverExtra ;DWORD dmFields ;union {struct {short dmOrientation ;short dmPaperSize ;short dmPaperLength ;short dmPaperWidth ;short dmScale ;short dmCopies ;short dmDefaultSource ;short dmPrintQuality ;};struct {POINTL dmPosition ;DWORD dmDisplayOrientation ;DWORD dmDisplayFixedOutput ;};};short dmColor ;short dmDuplex ;short dmYResolution ;short dmTTOption ;short dmCollate ;BYTE dmFormName [32 ];WORD dmLogPixels ;DWORD dmBitsPerPel ;DWORD dmPelsWidth ;DWORD dmPelsHeight ;union {DWORD dmDisplayFlags ;DWORD dmNup ;};DWORD dmDisplayFrequency ;DWORD dmICMMethod ;DWORD dmICMIntent ;DWORD dmMediaType ;DWORD dmDitherType ;DWORD dmReserved1 ;DWORD dmReserved2 ;DWORD dmPanningWidth ;DWORD dmPanningHeight ;}DEVMODEA ;
typedef struct _devicemodeA {BYTE dmDeviceName [32 ];WORD dmSpecVersion ;WORD dmDriverVersion ;WORD dmSize ;WORD dmDriverExtra ;DWORD dmFields ;union {struct {short dmOrientation ;short dmPaperSize ;short dmPaperLength ;short dmPaperWidth ;short dmScale ;short dmCopies ;short dmDefaultSource ;short dmPrintQuality ;};struct {POINTL dmPosition ;DWORD dmDisplayOrientation ;DWORD dmDisplayFixedOutput ;};};short dmColor ;short dmDuplex ;short dmYResolution ;short dmTTOption ;short dmCollate ;BYTE dmFormName [32 ];WORD dmLogPixels ;DWORD dmBitsPerPel ;DWORD dmPelsWidth ;DWORD dmPelsHeight ;union {DWORD dmDisplayFlags ;DWORD dmNup ;};DWORD dmDisplayFrequency ;DWORD dmICMMethod ;DWORD dmICMIntent ;DWORD dmMediaType ;DWORD dmDitherType ;DWORD dmReserved1 ;DWORD dmReserved2 ;DWORD dmPanningWidth ;DWORD dmPanningHeight ;}*PDEVMODEA ;
typedef struct _devicemodeA {BYTE dmDeviceName [32 ];WORD dmSpecVersion ;WORD dmDriverVersion ;WORD dmSize ;WORD dmDriverExtra ;DWORD dmFields ;union {struct {short dmOrientation ;short dmPaperSize ;short dmPaperLength ;short dmPaperWidth ;short dmScale ;short dmCopies ;short dmDefaultSource ;short dmPrintQuality ;};struct {POINTL dmPosition ;DWORD dmDisplayOrientation ;DWORD dmDisplayFixedOutput ;};};short dmColor ;short dmDuplex ;short dmYResolution ;short dmTTOption ;short dmCollate ;BYTE dmFormName [32 ];WORD dmLogPixels ;DWORD dmBitsPerPel ;DWORD dmPelsWidth ;DWORD dmPelsHeight ;union {DWORD dmDisplayFlags ;DWORD dmNup ;};DWORD dmDisplayFrequency ;DWORD dmICMMethod ;DWORD dmICMIntent ;DWORD dmMediaType ;DWORD dmDitherType ;DWORD dmReserved1 ;DWORD dmReserved2 ;DWORD dmPanningWidth ;DWORD dmPanningHeight ;}*NPDEVMODEA ;
typedef struct _devicemodeA {BYTE dmDeviceName [32 ];WORD dmSpecVersion ;WORD dmDriverVersion ;WORD dmSize ;WORD dmDriverExtra ;DWORD dmFields ;union {struct {short dmOrientation ;short dmPaperSize ;short dmPaperLength ;short dmPaperWidth ;short dmScale ;short dmCopies ;short dmDefaultSource ;short dmPrintQuality ;};struct {POINTL dmPosition ;DWORD dmDisplayOrientation ;DWORD dmDisplayFixedOutput ;};};short dmColor ;short dmDuplex ;short dmYResolution ;short dmTTOption ;short dmCollate ;BYTE dmFormName [32 ];WORD dmLogPixels ;DWORD dmBitsPerPel ;DWORD dmPelsWidth ;DWORD dmPelsHeight ;union {DWORD dmDisplayFlags ;DWORD dmNup ;};DWORD dmDisplayFrequency ;DWORD dmICMMethod ;DWORD dmICMIntent ;DWORD dmMediaType ;DWORD dmDitherType ;DWORD dmReserved1 ;DWORD dmReserved2 ;DWORD dmPanningWidth ;DWORD dmPanningHeight ;}*LPDEVMODEA ;

typedef struct _devicemodeW {WCHAR dmDeviceName [32 ];WORD dmSpecVersion ;WORD dmDriverVersion ;WORD dmSize ;WORD dmDriverExtra ;DWORD dmFields ;union {struct {short dmOrientation ;short dmPaperSize ;short dmPaperLength ;short dmPaperWidth ;short dmScale ;short dmCopies ;short dmDefaultSource ;short dmPrintQuality ;};struct {POINTL dmPosition ;DWORD dmDisplayOrientation ;DWORD dmDisplayFixedOutput ;};};short dmColor ;short dmDuplex ;short dmYResolution ;short dmTTOption ;short dmCollate ;WCHAR dmFormName [32 ];WORD dmLogPixels ;DWORD dmBitsPerPel ;DWORD dmPelsWidth ;DWORD dmPelsHeight ;union {DWORD dmDisplayFlags ;DWORD dmNup ;};DWORD dmDisplayFrequency ;DWORD dmICMMethod ;DWORD dmICMIntent ;DWORD dmMediaType ;DWORD dmDitherType ;DWORD dmReserved1 ;DWORD dmReserved2 ;DWORD dmPanningWidth ;DWORD dmPanningHeight ;}DEVMODEW ;
typedef struct _devicemodeW {WCHAR dmDeviceName [32 ];WORD dmSpecVersion ;WORD dmDriverVersion ;WORD dmSize ;WORD dmDriverExtra ;DWORD dmFields ;union {struct {short dmOrientation ;short dmPaperSize ;short dmPaperLength ;short dmPaperWidth ;short dmScale ;short dmCopies ;short dmDefaultSource ;short dmPrintQuality ;};struct {POINTL dmPosition ;DWORD dmDisplayOrientation ;DWORD dmDisplayFixedOutput ;};};short dmColor ;short dmDuplex ;short dmYResolution ;short dmTTOption ;short dmCollate ;WCHAR dmFormName [32 ];WORD dmLogPixels ;DWORD dmBitsPerPel ;DWORD dmPelsWidth ;DWORD dmPelsHeight ;union {DWORD dmDisplayFlags ;DWORD dmNup ;};DWORD dmDisplayFrequency ;DWORD dmICMMethod ;DWORD dmICMIntent ;DWORD dmMediaType ;DWORD dmDitherType ;DWORD dmReserved1 ;DWORD dmReserved2 ;DWORD dmPanningWidth ;DWORD dmPanningHeight ;}*PDEVMODEW ;
typedef struct _devicemodeW {WCHAR dmDeviceName [32 ];WORD dmSpecVersion ;WORD dmDriverVersion ;WORD dmSize ;WORD dmDriverExtra ;DWORD dmFields ;union {struct {short dmOrientation ;short dmPaperSize ;short dmPaperLength ;short dmPaperWidth ;short dmScale ;short dmCopies ;short dmDefaultSource ;short dmPrintQuality ;};struct {POINTL dmPosition ;DWORD dmDisplayOrientation ;DWORD dmDisplayFixedOutput ;};};short dmColor ;short dmDuplex ;short dmYResolution ;short dmTTOption ;short dmCollate ;WCHAR dmFormName [32 ];WORD dmLogPixels ;DWORD dmBitsPerPel ;DWORD dmPelsWidth ;DWORD dmPelsHeight ;union {DWORD dmDisplayFlags ;DWORD dmNup ;};DWORD dmDisplayFrequency ;DWORD dmICMMethod ;DWORD dmICMIntent ;DWORD dmMediaType ;DWORD dmDitherType ;DWORD dmReserved1 ;DWORD dmReserved2 ;DWORD dmPanningWidth ;DWORD dmPanningHeight ;}*NPDEVMODEW ;
typedef struct _devicemodeW {WCHAR dmDeviceName [32 ];WORD dmSpecVersion ;WORD dmDriverVersion ;WORD dmSize ;WORD dmDriverExtra ;DWORD dmFields ;union {struct {short dmOrientation ;short dmPaperSize ;short dmPaperLength ;short dmPaperWidth ;short dmScale ;short dmCopies ;short dmDefaultSource ;short dmPrintQuality ;};struct {POINTL dmPosition ;DWORD dmDisplayOrientation ;DWORD dmDisplayFixedOutput ;};};short dmColor ;short dmDuplex ;short dmYResolution ;short dmTTOption ;short dmCollate ;WCHAR dmFormName [32 ];WORD dmLogPixels ;DWORD dmBitsPerPel ;DWORD dmPelsWidth ;DWORD dmPelsHeight ;union {DWORD dmDisplayFlags ;DWORD dmNup ;};DWORD dmDisplayFrequency ;DWORD dmICMMethod ;DWORD dmICMIntent ;DWORD dmMediaType ;DWORD dmDitherType ;DWORD dmReserved1 ;DWORD dmReserved2 ;DWORD dmPanningWidth ;DWORD dmPanningHeight ;}*LPDEVMODEW ;

typedef DEVMODEA DEVMODE ;
typedef PDEVMODEA PDEVMODE ;
typedef NPDEVMODEA NPDEVMODE ;
typedef LPDEVMODEA LPDEVMODE ;
typedef struct _DISPLAY_DEVICEA {DWORD cb ;CHAR DeviceName [32 ];CHAR DeviceString [128 ];DWORD StateFlags ;CHAR DeviceID [128 ];CHAR DeviceKey [128 ];}DISPLAY_DEVICEA ;
typedef struct _DISPLAY_DEVICEA {DWORD cb ;CHAR DeviceName [32 ];CHAR DeviceString [128 ];DWORD StateFlags ;CHAR DeviceID [128 ];CHAR DeviceKey [128 ];}*PDISPLAY_DEVICEA ;
typedef struct _DISPLAY_DEVICEA {DWORD cb ;CHAR DeviceName [32 ];CHAR DeviceString [128 ];DWORD StateFlags ;CHAR DeviceID [128 ];CHAR DeviceKey [128 ];}*LPDISPLAY_DEVICEA ;

typedef struct _DISPLAY_DEVICEW {DWORD cb ;WCHAR DeviceName [32 ];WCHAR DeviceString [128 ];DWORD StateFlags ;WCHAR DeviceID [128 ];WCHAR DeviceKey [128 ];}DISPLAY_DEVICEW ;
typedef struct _DISPLAY_DEVICEW {DWORD cb ;WCHAR DeviceName [32 ];WCHAR DeviceString [128 ];DWORD StateFlags ;WCHAR DeviceID [128 ];WCHAR DeviceKey [128 ];}*PDISPLAY_DEVICEW ;
typedef struct _DISPLAY_DEVICEW {DWORD cb ;WCHAR DeviceName [32 ];WCHAR DeviceString [128 ];DWORD StateFlags ;WCHAR DeviceID [128 ];WCHAR DeviceKey [128 ];}*LPDISPLAY_DEVICEW ;

typedef DISPLAY_DEVICEA DISPLAY_DEVICE ;
typedef PDISPLAY_DEVICEA PDISPLAY_DEVICE ;
typedef LPDISPLAY_DEVICEA LPDISPLAY_DEVICE ;
typedef struct _RGNDATAHEADER {DWORD dwSize ;DWORD iType ;DWORD nCount ;DWORD nRgnSize ;RECT rcBound ;}RGNDATAHEADER ;
typedef struct _RGNDATAHEADER {DWORD dwSize ;DWORD iType ;DWORD nCount ;DWORD nRgnSize ;RECT rcBound ;}*PRGNDATAHEADER ;

typedef struct _RGNDATA {RGNDATAHEADER rdh ;char Buffer [1 ];}RGNDATA ;
typedef struct _RGNDATA {RGNDATAHEADER rdh ;char Buffer [1 ];}*PRGNDATA ;
typedef struct _RGNDATA {RGNDATAHEADER rdh ;char Buffer [1 ];}*NPRGNDATA ;
typedef struct _RGNDATA {RGNDATAHEADER rdh ;char Buffer [1 ];}*LPRGNDATA ;

typedef struct _ABC {int abcA ;UINT abcB ;int abcC ;}ABC ;
typedef struct _ABC {int abcA ;UINT abcB ;int abcC ;}*PABC ;
typedef struct _ABC {int abcA ;UINT abcB ;int abcC ;}*NPABC ;
typedef struct _ABC {int abcA ;UINT abcB ;int abcC ;}*LPABC ;

typedef struct _ABCFLOAT {FLOAT abcfA ;FLOAT abcfB ;FLOAT abcfC ;}ABCFLOAT ;
typedef struct _ABCFLOAT {FLOAT abcfA ;FLOAT abcfB ;FLOAT abcfC ;}*PABCFLOAT ;
typedef struct _ABCFLOAT {FLOAT abcfA ;FLOAT abcfB ;FLOAT abcfC ;}*NPABCFLOAT ;
typedef struct _ABCFLOAT {FLOAT abcfA ;FLOAT abcfB ;FLOAT abcfC ;}*LPABCFLOAT ;

typedef struct _OUTLINETEXTMETRICA {UINT otmSize ;TEXTMETRICA otmTextMetrics ;BYTE otmFiller ;PANOSE otmPanoseNumber ;UINT otmfsSelection ;UINT otmfsType ;int otmsCharSlopeRise ;int otmsCharSlopeRun ;int otmItalicAngle ;UINT otmEMSquare ;int otmAscent ;int otmDescent ;UINT otmLineGap ;UINT otmsCapEmHeight ;UINT otmsXHeight ;RECT otmrcFontBox ;int otmMacAscent ;int otmMacDescent ;UINT otmMacLineGap ;UINT otmusMinimumPPEM ;POINT otmptSubscriptSize ;POINT otmptSubscriptOffset ;POINT otmptSuperscriptSize ;POINT otmptSuperscriptOffset ;UINT otmsStrikeoutSize ;int otmsStrikeoutPosition ;int otmsUnderscoreSize ;int otmsUnderscorePosition ;PSTR otmpFamilyName ;PSTR otmpFaceName ;PSTR otmpStyleName ;PSTR otmpFullName ;}OUTLINETEXTMETRICA ;
typedef struct _OUTLINETEXTMETRICA {UINT otmSize ;TEXTMETRICA otmTextMetrics ;BYTE otmFiller ;PANOSE otmPanoseNumber ;UINT otmfsSelection ;UINT otmfsType ;int otmsCharSlopeRise ;int otmsCharSlopeRun ;int otmItalicAngle ;UINT otmEMSquare ;int otmAscent ;int otmDescent ;UINT otmLineGap ;UINT otmsCapEmHeight ;UINT otmsXHeight ;RECT otmrcFontBox ;int otmMacAscent ;int otmMacDescent ;UINT otmMacLineGap ;UINT otmusMinimumPPEM ;POINT otmptSubscriptSize ;POINT otmptSubscriptOffset ;POINT otmptSuperscriptSize ;POINT otmptSuperscriptOffset ;UINT otmsStrikeoutSize ;int otmsStrikeoutPosition ;int otmsUnderscoreSize ;int otmsUnderscorePosition ;PSTR otmpFamilyName ;PSTR otmpFaceName ;PSTR otmpStyleName ;PSTR otmpFullName ;}*POUTLINETEXTMETRICA ;
typedef struct _OUTLINETEXTMETRICA {UINT otmSize ;TEXTMETRICA otmTextMetrics ;BYTE otmFiller ;PANOSE otmPanoseNumber ;UINT otmfsSelection ;UINT otmfsType ;int otmsCharSlopeRise ;int otmsCharSlopeRun ;int otmItalicAngle ;UINT otmEMSquare ;int otmAscent ;int otmDescent ;UINT otmLineGap ;UINT otmsCapEmHeight ;UINT otmsXHeight ;RECT otmrcFontBox ;int otmMacAscent ;int otmMacDescent ;UINT otmMacLineGap ;UINT otmusMinimumPPEM ;POINT otmptSubscriptSize ;POINT otmptSubscriptOffset ;POINT otmptSuperscriptSize ;POINT otmptSuperscriptOffset ;UINT otmsStrikeoutSize ;int otmsStrikeoutPosition ;int otmsUnderscoreSize ;int otmsUnderscorePosition ;PSTR otmpFamilyName ;PSTR otmpFaceName ;PSTR otmpStyleName ;PSTR otmpFullName ;}*NPOUTLINETEXTMETRICA ;
typedef struct _OUTLINETEXTMETRICA {UINT otmSize ;TEXTMETRICA otmTextMetrics ;BYTE otmFiller ;PANOSE otmPanoseNumber ;UINT otmfsSelection ;UINT otmfsType ;int otmsCharSlopeRise ;int otmsCharSlopeRun ;int otmItalicAngle ;UINT otmEMSquare ;int otmAscent ;int otmDescent ;UINT otmLineGap ;UINT otmsCapEmHeight ;UINT otmsXHeight ;RECT otmrcFontBox ;int otmMacAscent ;int otmMacDescent ;UINT otmMacLineGap ;UINT otmusMinimumPPEM ;POINT otmptSubscriptSize ;POINT otmptSubscriptOffset ;POINT otmptSuperscriptSize ;POINT otmptSuperscriptOffset ;UINT otmsStrikeoutSize ;int otmsStrikeoutPosition ;int otmsUnderscoreSize ;int otmsUnderscorePosition ;PSTR otmpFamilyName ;PSTR otmpFaceName ;PSTR otmpStyleName ;PSTR otmpFullName ;}*LPOUTLINETEXTMETRICA ;

typedef struct _OUTLINETEXTMETRICW {UINT otmSize ;TEXTMETRICW otmTextMetrics ;BYTE otmFiller ;PANOSE otmPanoseNumber ;UINT otmfsSelection ;UINT otmfsType ;int otmsCharSlopeRise ;int otmsCharSlopeRun ;int otmItalicAngle ;UINT otmEMSquare ;int otmAscent ;int otmDescent ;UINT otmLineGap ;UINT otmsCapEmHeight ;UINT otmsXHeight ;RECT otmrcFontBox ;int otmMacAscent ;int otmMacDescent ;UINT otmMacLineGap ;UINT otmusMinimumPPEM ;POINT otmptSubscriptSize ;POINT otmptSubscriptOffset ;POINT otmptSuperscriptSize ;POINT otmptSuperscriptOffset ;UINT otmsStrikeoutSize ;int otmsStrikeoutPosition ;int otmsUnderscoreSize ;int otmsUnderscorePosition ;PSTR otmpFamilyName ;PSTR otmpFaceName ;PSTR otmpStyleName ;PSTR otmpFullName ;}OUTLINETEXTMETRICW ;
typedef struct _OUTLINETEXTMETRICW {UINT otmSize ;TEXTMETRICW otmTextMetrics ;BYTE otmFiller ;PANOSE otmPanoseNumber ;UINT otmfsSelection ;UINT otmfsType ;int otmsCharSlopeRise ;int otmsCharSlopeRun ;int otmItalicAngle ;UINT otmEMSquare ;int otmAscent ;int otmDescent ;UINT otmLineGap ;UINT otmsCapEmHeight ;UINT otmsXHeight ;RECT otmrcFontBox ;int otmMacAscent ;int otmMacDescent ;UINT otmMacLineGap ;UINT otmusMinimumPPEM ;POINT otmptSubscriptSize ;POINT otmptSubscriptOffset ;POINT otmptSuperscriptSize ;POINT otmptSuperscriptOffset ;UINT otmsStrikeoutSize ;int otmsStrikeoutPosition ;int otmsUnderscoreSize ;int otmsUnderscorePosition ;PSTR otmpFamilyName ;PSTR otmpFaceName ;PSTR otmpStyleName ;PSTR otmpFullName ;}*POUTLINETEXTMETRICW ;
typedef struct _OUTLINETEXTMETRICW {UINT otmSize ;TEXTMETRICW otmTextMetrics ;BYTE otmFiller ;PANOSE otmPanoseNumber ;UINT otmfsSelection ;UINT otmfsType ;int otmsCharSlopeRise ;int otmsCharSlopeRun ;int otmItalicAngle ;UINT otmEMSquare ;int otmAscent ;int otmDescent ;UINT otmLineGap ;UINT otmsCapEmHeight ;UINT otmsXHeight ;RECT otmrcFontBox ;int otmMacAscent ;int otmMacDescent ;UINT otmMacLineGap ;UINT otmusMinimumPPEM ;POINT otmptSubscriptSize ;POINT otmptSubscriptOffset ;POINT otmptSuperscriptSize ;POINT otmptSuperscriptOffset ;UINT otmsStrikeoutSize ;int otmsStrikeoutPosition ;int otmsUnderscoreSize ;int otmsUnderscorePosition ;PSTR otmpFamilyName ;PSTR otmpFaceName ;PSTR otmpStyleName ;PSTR otmpFullName ;}*NPOUTLINETEXTMETRICW ;
typedef struct _OUTLINETEXTMETRICW {UINT otmSize ;TEXTMETRICW otmTextMetrics ;BYTE otmFiller ;PANOSE otmPanoseNumber ;UINT otmfsSelection ;UINT otmfsType ;int otmsCharSlopeRise ;int otmsCharSlopeRun ;int otmItalicAngle ;UINT otmEMSquare ;int otmAscent ;int otmDescent ;UINT otmLineGap ;UINT otmsCapEmHeight ;UINT otmsXHeight ;RECT otmrcFontBox ;int otmMacAscent ;int otmMacDescent ;UINT otmMacLineGap ;UINT otmusMinimumPPEM ;POINT otmptSubscriptSize ;POINT otmptSubscriptOffset ;POINT otmptSuperscriptSize ;POINT otmptSuperscriptOffset ;UINT otmsStrikeoutSize ;int otmsStrikeoutPosition ;int otmsUnderscoreSize ;int otmsUnderscorePosition ;PSTR otmpFamilyName ;PSTR otmpFaceName ;PSTR otmpStyleName ;PSTR otmpFullName ;}*LPOUTLINETEXTMETRICW ;

typedef OUTLINETEXTMETRICA OUTLINETEXTMETRIC ;
typedef POUTLINETEXTMETRICA POUTLINETEXTMETRIC ;
typedef NPOUTLINETEXTMETRICA NPOUTLINETEXTMETRIC ;
typedef LPOUTLINETEXTMETRICA LPOUTLINETEXTMETRIC ;
typedef struct tagPOLYTEXTA {int x ;int y ;UINT n ;LPCSTR lpstr ;UINT uiFlags ;RECT rcl ;int *pdx ;}POLYTEXTA ;
typedef struct tagPOLYTEXTA {int x ;int y ;UINT n ;LPCSTR lpstr ;UINT uiFlags ;RECT rcl ;int *pdx ;}*PPOLYTEXTA ;
typedef struct tagPOLYTEXTA {int x ;int y ;UINT n ;LPCSTR lpstr ;UINT uiFlags ;RECT rcl ;int *pdx ;}*NPPOLYTEXTA ;
typedef struct tagPOLYTEXTA {int x ;int y ;UINT n ;LPCSTR lpstr ;UINT uiFlags ;RECT rcl ;int *pdx ;}*LPPOLYTEXTA ;

typedef struct tagPOLYTEXTW {int x ;int y ;UINT n ;LPCWSTR lpstr ;UINT uiFlags ;RECT rcl ;int *pdx ;}POLYTEXTW ;
typedef struct tagPOLYTEXTW {int x ;int y ;UINT n ;LPCWSTR lpstr ;UINT uiFlags ;RECT rcl ;int *pdx ;}*PPOLYTEXTW ;
typedef struct tagPOLYTEXTW {int x ;int y ;UINT n ;LPCWSTR lpstr ;UINT uiFlags ;RECT rcl ;int *pdx ;}*NPPOLYTEXTW ;
typedef struct tagPOLYTEXTW {int x ;int y ;UINT n ;LPCWSTR lpstr ;UINT uiFlags ;RECT rcl ;int *pdx ;}*LPPOLYTEXTW ;

typedef POLYTEXTA POLYTEXT ;
typedef PPOLYTEXTA PPOLYTEXT ;
typedef NPPOLYTEXTA NPPOLYTEXT ;
typedef LPPOLYTEXTA LPPOLYTEXT ;
typedef struct _FIXED {WORD fract ;short value ;}FIXED ;
typedef struct _MAT2 {FIXED eM11 ;FIXED eM12 ;FIXED eM21 ;FIXED eM22 ;}MAT2 ;
typedef struct _MAT2 {FIXED eM11 ;FIXED eM12 ;FIXED eM21 ;FIXED eM22 ;}*LPMAT2 ;

typedef struct _GLYPHMETRICS {UINT gmBlackBoxX ;UINT gmBlackBoxY ;POINT gmptGlyphOrigin ;short gmCellIncX ;short gmCellIncY ;}GLYPHMETRICS ;
typedef struct _GLYPHMETRICS {UINT gmBlackBoxX ;UINT gmBlackBoxY ;POINT gmptGlyphOrigin ;short gmCellIncX ;short gmCellIncY ;}*LPGLYPHMETRICS ;

typedef struct tagPOINTFX {FIXED x ;FIXED y ;}POINTFX ;
typedef struct tagPOINTFX {FIXED x ;FIXED y ;}*LPPOINTFX ;

typedef struct tagTTPOLYCURVE {WORD wType ;WORD cpfx ;POINTFX apfx [1 ];}TTPOLYCURVE ;
typedef struct tagTTPOLYCURVE {WORD wType ;WORD cpfx ;POINTFX apfx [1 ];}*LPTTPOLYCURVE ;

typedef struct tagTTPOLYGONHEADER {DWORD cb ;DWORD dwType ;POINTFX pfxStart ;}TTPOLYGONHEADER ;
typedef struct tagTTPOLYGONHEADER {DWORD cb ;DWORD dwType ;POINTFX pfxStart ;}*LPTTPOLYGONHEADER ;

typedef struct tagGCP_RESULTSA {DWORD lStructSize ;LPSTR lpOutString ;UINT *lpOrder ;int *lpDx ;int *lpCaretPos ;LPSTR lpClass ;LPWSTR lpGlyphs ;UINT nGlyphs ;int nMaxFit ;}GCP_RESULTSA ;
typedef struct tagGCP_RESULTSA {DWORD lStructSize ;LPSTR lpOutString ;UINT *lpOrder ;int *lpDx ;int *lpCaretPos ;LPSTR lpClass ;LPWSTR lpGlyphs ;UINT nGlyphs ;int nMaxFit ;}*LPGCP_RESULTSA ;

typedef struct tagGCP_RESULTSW {DWORD lStructSize ;LPWSTR lpOutString ;UINT *lpOrder ;int *lpDx ;int *lpCaretPos ;LPSTR lpClass ;LPWSTR lpGlyphs ;UINT nGlyphs ;int nMaxFit ;}GCP_RESULTSW ;
typedef struct tagGCP_RESULTSW {DWORD lStructSize ;LPWSTR lpOutString ;UINT *lpOrder ;int *lpDx ;int *lpCaretPos ;LPSTR lpClass ;LPWSTR lpGlyphs ;UINT nGlyphs ;int nMaxFit ;}*LPGCP_RESULTSW ;

typedef GCP_RESULTSA GCP_RESULTS ;
typedef LPGCP_RESULTSA LPGCP_RESULTS ;
typedef struct _RASTERIZER_STATUS {short nSize ;short wFlags ;short nLanguageID ;}RASTERIZER_STATUS ;
typedef struct _RASTERIZER_STATUS {short nSize ;short wFlags ;short nLanguageID ;}*LPRASTERIZER_STATUS ;

typedef struct tagPIXELFORMATDESCRIPTOR {WORD nSize ;WORD nVersion ;DWORD dwFlags ;BYTE iPixelType ;BYTE cColorBits ;BYTE cRedBits ;BYTE cRedShift ;BYTE cGreenBits ;BYTE cGreenShift ;BYTE cBlueBits ;BYTE cBlueShift ;BYTE cAlphaBits ;BYTE cAlphaShift ;BYTE cAccumBits ;BYTE cAccumRedBits ;BYTE cAccumGreenBits ;BYTE cAccumBlueBits ;BYTE cAccumAlphaBits ;BYTE cDepthBits ;BYTE cStencilBits ;BYTE cAuxBuffers ;BYTE iLayerType ;BYTE bReserved ;DWORD dwLayerMask ;DWORD dwVisibleMask ;DWORD dwDamageMask ;}PIXELFORMATDESCRIPTOR ;
typedef struct tagPIXELFORMATDESCRIPTOR {WORD nSize ;WORD nVersion ;DWORD dwFlags ;BYTE iPixelType ;BYTE cColorBits ;BYTE cRedBits ;BYTE cRedShift ;BYTE cGreenBits ;BYTE cGreenShift ;BYTE cBlueBits ;BYTE cBlueShift ;BYTE cAlphaBits ;BYTE cAlphaShift ;BYTE cAccumBits ;BYTE cAccumRedBits ;BYTE cAccumGreenBits ;BYTE cAccumBlueBits ;BYTE cAccumAlphaBits ;BYTE cDepthBits ;BYTE cStencilBits ;BYTE cAuxBuffers ;BYTE iLayerType ;BYTE bReserved ;DWORD dwLayerMask ;DWORD dwVisibleMask ;DWORD dwDamageMask ;}*PPIXELFORMATDESCRIPTOR ;
typedef struct tagPIXELFORMATDESCRIPTOR {WORD nSize ;WORD nVersion ;DWORD dwFlags ;BYTE iPixelType ;BYTE cColorBits ;BYTE cRedBits ;BYTE cRedShift ;BYTE cGreenBits ;BYTE cGreenShift ;BYTE cBlueBits ;BYTE cBlueShift ;BYTE cAlphaBits ;BYTE cAlphaShift ;BYTE cAccumBits ;BYTE cAccumRedBits ;BYTE cAccumGreenBits ;BYTE cAccumBlueBits ;BYTE cAccumAlphaBits ;BYTE cDepthBits ;BYTE cStencilBits ;BYTE cAuxBuffers ;BYTE iLayerType ;BYTE bReserved ;DWORD dwLayerMask ;DWORD dwVisibleMask ;DWORD dwDamageMask ;}*LPPIXELFORMATDESCRIPTOR ;

typedef int (*OLDFONTENUMPROCA )(const LOGFONTA *,const TEXTMETRICA *,DWORD ,LPARAM );
typedef int (*OLDFONTENUMPROCW )(const LOGFONTW *,const TEXTMETRICW *,DWORD ,LPARAM );
typedef OLDFONTENUMPROCA FONTENUMPROCA ;
typedef OLDFONTENUMPROCW FONTENUMPROCW ;
typedef FONTENUMPROCA FONTENUMPROC ;
typedef int (*GOBJENUMPROC )(LPVOID ,LPARAM );
typedef void (*LINEDDAPROC )(int ,int ,LPARAM );
int AddFontResourceA (LPCSTR );
int AddFontResourceW (LPCWSTR );
WINBOOL AnimatePalette (HPALETTE hPal ,UINT iStartIndex ,UINT cEntries ,const PALETTEENTRY *ppe );
WINBOOL Arc (HDC hdc ,int x1 ,int y1 ,int x2 ,int y2 ,int x3 ,int y3 ,int x4 ,int y4 );
WINBOOL BitBlt (HDC hdc ,int x ,int y ,int cx ,int cy ,HDC hdcSrc ,int x1 ,int y1 ,DWORD rop );
WINBOOL CancelDC (HDC hdc );
WINBOOL Chord (HDC hdc ,int x1 ,int y1 ,int x2 ,int y2 ,int x3 ,int y3 ,int x4 ,int y4 );
int ChoosePixelFormat (HDC hdc ,const PIXELFORMATDESCRIPTOR *ppfd );
HMETAFILE CloseMetaFile (HDC hdc );
int CombineRgn (HRGN hrgnDst ,HRGN hrgnSrc1 ,HRGN hrgnSrc2 ,int iMode );
HMETAFILE CopyMetaFileA (HMETAFILE ,LPCSTR );
HMETAFILE CopyMetaFileW (HMETAFILE ,LPCWSTR );
HBITMAP CreateBitmap (int nWidth ,int nHeight ,UINT nPlanes ,UINT nBitCount ,const void *lpBits );
HBITMAP CreateBitmapIndirect (const BITMAP *pbm );
HBRUSH CreateBrushIndirect (const LOGBRUSH *plbrush );
HBITMAP CreateCompatibleBitmap (HDC hdc ,int cx ,int cy );
HBITMAP CreateDiscardableBitmap (HDC hdc ,int cx ,int cy );
HDC CreateCompatibleDC (HDC hdc );
HDC CreateDCA (LPCSTR pwszDriver ,LPCSTR pwszDevice ,LPCSTR pszPort ,const DEVMODEA *pdm );
HDC CreateDCW (LPCWSTR pwszDriver ,LPCWSTR pwszDevice ,LPCWSTR pszPort ,const DEVMODEW *pdm );
HBITMAP CreateDIBitmap (HDC hdc ,const BITMAPINFOHEADER *pbmih ,DWORD flInit ,const void *pjBits ,const BITMAPINFO *pbmi ,UINT iUsage );
HBRUSH CreateDIBPatternBrush (HGLOBAL h ,UINT iUsage );
HBRUSH CreateDIBPatternBrushPt (const void *lpPackedDIB ,UINT iUsage );
HRGN CreateEllipticRgn (int x1 ,int y1 ,int x2 ,int y2 );
HRGN CreateEllipticRgnIndirect (const RECT *lprect );
HFONT CreateFontIndirectA (const LOGFONTA *lplf );
HFONT CreateFontIndirectW (const LOGFONTW *lplf );
HFONT CreateFontA (int cHeight ,int cWidth ,int cEscapement ,int cOrientation ,int cWeight ,DWORD bItalic ,DWORD bUnderline ,DWORD bStrikeOut ,DWORD iCharSet ,DWORD iOutPrecision ,DWORD iClipPrecision ,DWORD iQuality ,DWORD iPitchAndFamily ,LPCSTR pszFaceName );
HFONT CreateFontW (int cHeight ,int cWidth ,int cEscapement ,int cOrientation ,int cWeight ,DWORD bItalic ,DWORD bUnderline ,DWORD bStrikeOut ,DWORD iCharSet ,DWORD iOutPrecision ,DWORD iClipPrecision ,DWORD iQuality ,DWORD iPitchAndFamily ,LPCWSTR pszFaceName );
HBRUSH CreateHatchBrush (int iHatch ,COLORREF color );
HDC CreateICA (LPCSTR pszDriver ,LPCSTR pszDevice ,LPCSTR pszPort ,const DEVMODEA *pdm );
HDC CreateICW (LPCWSTR pszDriver ,LPCWSTR pszDevice ,LPCWSTR pszPort ,const DEVMODEW *pdm );
HDC CreateMetaFileA (LPCSTR pszFile );
HDC CreateMetaFileW (LPCWSTR pszFile );
HPALETTE CreatePalette (const LOGPALETTE *plpal );
HPEN CreatePen (int iStyle ,int cWidth ,COLORREF color );
HPEN CreatePenIndirect (const LOGPEN *plpen );
HRGN CreatePolyPolygonRgn (const POINT *pptl ,const INT *pc ,int cPoly ,int iMode );
HBRUSH CreatePatternBrush (HBITMAP hbm );
HRGN CreateRectRgn (int x1 ,int y1 ,int x2 ,int y2 );
HRGN CreateRectRgnIndirect (const RECT *lprect );
HRGN CreateRoundRectRgn (int x1 ,int y1 ,int x2 ,int y2 ,int w ,int h );
WINBOOL CreateScalableFontResourceA (DWORD fdwHidden ,LPCSTR lpszFont ,LPCSTR lpszFile ,LPCSTR lpszPath );
WINBOOL CreateScalableFontResourceW (DWORD fdwHidden ,LPCWSTR lpszFont ,LPCWSTR lpszFile ,LPCWSTR lpszPath );
HBRUSH CreateSolidBrush (COLORREF color );
WINBOOL DeleteDC (HDC hdc );
WINBOOL DeleteMetaFile (HMETAFILE hmf );
WINBOOL DeleteObject (HGDIOBJ ho );
int DescribePixelFormat (HDC hdc ,int iPixelFormat ,UINT nBytes ,LPPIXELFORMATDESCRIPTOR ppfd );
typedef UINT (*LPFNDEVMODE )(HWND ,HMODULE ,LPDEVMODE ,LPSTR ,LPSTR ,LPDEVMODE ,LPSTR ,UINT );
typedef DWORD (*LPFNDEVCAPS )(LPSTR ,LPSTR ,UINT ,LPSTR ,LPDEVMODE );
int DeviceCapabilitiesA (LPCSTR pDevice ,LPCSTR pPort ,WORD fwCapability ,LPSTR pOutput ,const DEVMODEA *pDevMode );
int DeviceCapabilitiesW (LPCWSTR pDevice ,LPCWSTR pPort ,WORD fwCapability ,LPWSTR pOutput ,const DEVMODEW *pDevMode );
int DrawEscape (HDC hdc ,int iEscape ,int cjIn ,LPCSTR lpIn );
WINBOOL Ellipse (HDC hdc ,int left ,int top ,int right ,int bottom );
int EnumFontFamiliesExA (HDC hdc ,LPLOGFONTA lpLogfont ,FONTENUMPROCA lpProc ,LPARAM lParam ,DWORD dwFlags );
int EnumFontFamiliesExW (HDC hdc ,LPLOGFONTW lpLogfont ,FONTENUMPROCW lpProc ,LPARAM lParam ,DWORD dwFlags );
int EnumFontFamiliesA (HDC hdc ,LPCSTR lpLogfont ,FONTENUMPROCA lpProc ,LPARAM lParam );
int EnumFontFamiliesW (HDC hdc ,LPCWSTR lpLogfont ,FONTENUMPROCW lpProc ,LPARAM lParam );
int EnumFontsA (HDC hdc ,LPCSTR lpLogfont ,FONTENUMPROCA lpProc ,LPARAM lParam );
int EnumFontsW (HDC hdc ,LPCWSTR lpLogfont ,FONTENUMPROCW lpProc ,LPARAM lParam );
int EnumObjects (HDC hdc ,int nType ,GOBJENUMPROC lpFunc ,LPARAM lParam );
WINBOOL EqualRgn (HRGN hrgn1 ,HRGN hrgn2 );
int Escape (HDC hdc ,int iEscape ,int cjIn ,LPCSTR pvIn ,LPVOID pvOut );
int ExtEscape (HDC hdc ,int iEscape ,int cjInput ,LPCSTR lpInData ,int cjOutput ,LPSTR lpOutData );
int ExcludeClipRect (HDC hdc ,int left ,int top ,int right ,int bottom );
HRGN ExtCreateRegion (const XFORM *lpx ,DWORD nCount ,const RGNDATA *lpData );
WINBOOL ExtFloodFill (HDC hdc ,int x ,int y ,COLORREF color ,UINT type );
WINBOOL FillRgn (HDC hdc ,HRGN hrgn ,HBRUSH hbr );
WINBOOL FloodFill (HDC hdc ,int x ,int y ,COLORREF color );
WINBOOL FrameRgn (HDC hdc ,HRGN hrgn ,HBRUSH hbr ,int w ,int h );
int GetROP2 (HDC hdc );
WINBOOL GetAspectRatioFilterEx (HDC hdc ,LPSIZE lpsize );
COLORREF GetBkColor (HDC hdc );
COLORREF GetDCBrushColor (HDC hdc );
COLORREF GetDCPenColor (HDC hdc );
int GetBkMode (HDC hdc );
LONG GetBitmapBits (HBITMAP hbit ,LONG cb ,LPVOID lpvBits );
WINBOOL GetBitmapDimensionEx (HBITMAP hbit ,LPSIZE lpsize );
UINT GetBoundsRect (HDC hdc ,LPRECT lprect ,UINT flags );
WINBOOL GetBrushOrgEx (HDC hdc ,LPPOINT lppt );
WINBOOL GetCharWidthA (HDC hdc ,UINT iFirst ,UINT iLast ,LPINT lpBuffer );
WINBOOL GetCharWidthW (HDC hdc ,UINT iFirst ,UINT iLast ,LPINT lpBuffer );
WINBOOL GetCharWidth32A (HDC hdc ,UINT iFirst ,UINT iLast ,LPINT lpBuffer );
WINBOOL GetCharWidth32W (HDC hdc ,UINT iFirst ,UINT iLast ,LPINT lpBuffer );
WINBOOL GetCharWidthFloatA (HDC hdc ,UINT iFirst ,UINT iLast ,PFLOAT lpBuffer );
WINBOOL GetCharWidthFloatW (HDC hdc ,UINT iFirst ,UINT iLast ,PFLOAT lpBuffer );
WINBOOL GetCharABCWidthsA (HDC hdc ,UINT wFirst ,UINT wLast ,LPABC lpABC );
WINBOOL GetCharABCWidthsW (HDC hdc ,UINT wFirst ,UINT wLast ,LPABC lpABC );
WINBOOL GetCharABCWidthsFloatA (HDC hdc ,UINT iFirst ,UINT iLast ,LPABCFLOAT lpABC );
WINBOOL GetCharABCWidthsFloatW (HDC hdc ,UINT iFirst ,UINT iLast ,LPABCFLOAT lpABC );
int GetClipBox (HDC hdc ,LPRECT lprect );
int GetClipRgn (HDC hdc ,HRGN hrgn );
int GetMetaRgn (HDC hdc ,HRGN hrgn );
HGDIOBJ GetCurrentObject (HDC hdc ,UINT type );
WINBOOL GetCurrentPositionEx (HDC hdc ,LPPOINT lppt );
int GetDeviceCaps (HDC hdc ,int index );
int GetDIBits (HDC hdc ,HBITMAP hbm ,UINT start ,UINT cLines ,LPVOID lpvBits ,LPBITMAPINFO lpbmi ,UINT usage );
DWORD GetFontData (HDC hdc ,DWORD dwTable ,DWORD dwOffset ,PVOID pvBuffer ,DWORD cjBuffer );
DWORD GetGlyphOutlineA (HDC hdc ,UINT uChar ,UINT fuFormat ,LPGLYPHMETRICS lpgm ,DWORD cjBuffer ,LPVOID pvBuffer ,const MAT2 *lpmat2 );
DWORD GetGlyphOutlineW (HDC hdc ,UINT uChar ,UINT fuFormat ,LPGLYPHMETRICS lpgm ,DWORD cjBuffer ,LPVOID pvBuffer ,const MAT2 *lpmat2 );
int GetGraphicsMode (HDC hdc );
int GetMapMode (HDC hdc );
UINT GetMetaFileBitsEx (HMETAFILE hMF ,UINT cbBuffer ,LPVOID lpData );
HMETAFILE GetMetaFileA (LPCSTR lpName );
HMETAFILE GetMetaFileW (LPCWSTR lpName );
COLORREF GetNearestColor (HDC hdc ,COLORREF color );
UINT GetNearestPaletteIndex (HPALETTE h ,COLORREF color );
DWORD GetObjectType (HGDIOBJ h );
UINT GetOutlineTextMetricsA (HDC hdc ,UINT cjCopy ,LPOUTLINETEXTMETRICA potm );
UINT GetOutlineTextMetricsW (HDC hdc ,UINT cjCopy ,LPOUTLINETEXTMETRICW potm );
UINT GetPaletteEntries (HPALETTE hpal ,UINT iStart ,UINT cEntries ,LPPALETTEENTRY pPalEntries );
COLORREF GetPixel (HDC hdc ,int x ,int y );
int GetPixelFormat (HDC hdc );
int GetPolyFillMode (HDC hdc );
WINBOOL GetRasterizerCaps (LPRASTERIZER_STATUS lpraststat ,UINT cjBytes );
int GetRandomRgn (HDC hdc ,HRGN hrgn ,INT i );
DWORD GetRegionData (HRGN hrgn ,DWORD nCount ,LPRGNDATA lpRgnData );
int GetRgnBox (HRGN hrgn ,LPRECT lprc );
HGDIOBJ GetStockObject (int i );
int GetStretchBltMode (HDC hdc );
UINT GetSystemPaletteEntries (HDC hdc ,UINT iStart ,UINT cEntries ,LPPALETTEENTRY pPalEntries );
UINT GetSystemPaletteUse (HDC hdc );
int GetTextCharacterExtra (HDC hdc );
UINT GetTextAlign (HDC hdc );
COLORREF GetTextColor (HDC hdc );
WINBOOL GetTextExtentPointA (HDC hdc ,LPCSTR lpString ,int c ,LPSIZE lpsz );
WINBOOL GetTextExtentPointW (HDC hdc ,LPCWSTR lpString ,int c ,LPSIZE lpsz );
WINBOOL GetTextExtentPoint32A (HDC hdc ,LPCSTR lpString ,int c ,LPSIZE psizl );
WINBOOL GetTextExtentPoint32W (HDC hdc ,LPCWSTR lpString ,int c ,LPSIZE psizl );
WINBOOL GetTextExtentExPointA (HDC hdc ,LPCSTR lpszString ,int cchString ,int nMaxExtent ,LPINT lpnFit ,LPINT lpnDx ,LPSIZE lpSize );
WINBOOL GetTextExtentExPointW (HDC hdc ,LPCWSTR lpszString ,int cchString ,int nMaxExtent ,LPINT lpnFit ,LPINT lpnDx ,LPSIZE lpSize );
int GetTextCharset (HDC hdc );
int GetTextCharsetInfo (HDC hdc ,LPFONTSIGNATURE lpSig ,DWORD dwFlags );
WINBOOL TranslateCharsetInfo (DWORD *lpSrc ,LPCHARSETINFO lpCs ,DWORD dwFlags );
DWORD GetFontLanguageInfo (HDC hdc );
DWORD GetCharacterPlacementA (HDC hdc ,LPCSTR lpString ,int nCount ,int nMexExtent ,LPGCP_RESULTSA lpResults ,DWORD dwFlags );
DWORD GetCharacterPlacementW (HDC hdc ,LPCWSTR lpString ,int nCount ,int nMexExtent ,LPGCP_RESULTSW lpResults ,DWORD dwFlags );
typedef struct tagWCRANGE {WCHAR wcLow ;USHORT cGlyphs ;}WCRANGE ;
typedef struct tagWCRANGE {WCHAR wcLow ;USHORT cGlyphs ;}*PWCRANGE ;
typedef struct tagWCRANGE {WCHAR wcLow ;USHORT cGlyphs ;}*LPWCRANGE ;

typedef struct tagGLYPHSET {DWORD cbThis ;DWORD flAccel ;DWORD cGlyphsSupported ;DWORD cRanges ;WCRANGE ranges [1 ];}GLYPHSET ;
typedef struct tagGLYPHSET {DWORD cbThis ;DWORD flAccel ;DWORD cGlyphsSupported ;DWORD cRanges ;WCRANGE ranges [1 ];}*PGLYPHSET ;
typedef struct tagGLYPHSET {DWORD cbThis ;DWORD flAccel ;DWORD cGlyphsSupported ;DWORD cRanges ;WCRANGE ranges [1 ];}*LPGLYPHSET ;

DWORD GetFontUnicodeRanges (HDC hdc ,LPGLYPHSET lpgs );
DWORD GetGlyphIndicesA (HDC hdc ,LPCSTR lpstr ,int c ,LPWORD pgi ,DWORD fl );
DWORD GetGlyphIndicesW (HDC hdc ,LPCWSTR lpstr ,int c ,LPWORD pgi ,DWORD fl );
WINBOOL GetTextExtentPointI (HDC hdc ,LPWORD pgiIn ,int cgi ,LPSIZE psize );
WINBOOL GetTextExtentExPointI (HDC hdc ,LPWORD lpwszString ,int cwchString ,int nMaxExtent ,LPINT lpnFit ,LPINT lpnDx ,LPSIZE lpSize );
WINBOOL GetCharWidthI (HDC hdc ,UINT giFirst ,UINT cgi ,LPWORD pgi ,LPINT piWidths );
WINBOOL GetCharABCWidthsI (HDC hdc ,UINT giFirst ,UINT cgi ,LPWORD pgi ,LPABC pabc );
typedef struct tagDESIGNVECTOR {DWORD dvReserved ;DWORD dvNumAxes ;LONG dvValues [16 ];}DESIGNVECTOR ;
typedef struct tagDESIGNVECTOR {DWORD dvReserved ;DWORD dvNumAxes ;LONG dvValues [16 ];}*PDESIGNVECTOR ;
typedef struct tagDESIGNVECTOR {DWORD dvReserved ;DWORD dvNumAxes ;LONG dvValues [16 ];}*LPDESIGNVECTOR ;

int AddFontResourceExA (LPCSTR name ,DWORD fl ,PVOID res );
int AddFontResourceExW (LPCWSTR name ,DWORD fl ,PVOID res );
WINBOOL RemoveFontResourceExA (LPCSTR name ,DWORD fl ,PVOID pdv );
WINBOOL RemoveFontResourceExW (LPCWSTR name ,DWORD fl ,PVOID pdv );
HANDLE AddFontMemResourceEx (PVOID pFileView ,DWORD cjSize ,PVOID pvResrved ,DWORD *pNumFonts );
WINBOOL RemoveFontMemResourceEx (HANDLE h );
typedef struct tagAXISINFOA {LONG axMinValue ;LONG axMaxValue ;BYTE axAxisName [16 ];}AXISINFOA ;
typedef struct tagAXISINFOA {LONG axMinValue ;LONG axMaxValue ;BYTE axAxisName [16 ];}*PAXISINFOA ;
typedef struct tagAXISINFOA {LONG axMinValue ;LONG axMaxValue ;BYTE axAxisName [16 ];}*LPAXISINFOA ;

typedef struct tagAXISINFOW {LONG axMinValue ;LONG axMaxValue ;WCHAR axAxisName [16 ];}AXISINFOW ;
typedef struct tagAXISINFOW {LONG axMinValue ;LONG axMaxValue ;WCHAR axAxisName [16 ];}*PAXISINFOW ;
typedef struct tagAXISINFOW {LONG axMinValue ;LONG axMaxValue ;WCHAR axAxisName [16 ];}*LPAXISINFOW ;

typedef AXISINFOA AXISINFO ;
typedef PAXISINFOA PAXISINFO ;
typedef LPAXISINFOA LPAXISINFO ;
typedef struct tagAXESLISTA {DWORD axlReserved ;DWORD axlNumAxes ;AXISINFOA axlAxisInfo [16 ];}AXESLISTA ;
typedef struct tagAXESLISTA {DWORD axlReserved ;DWORD axlNumAxes ;AXISINFOA axlAxisInfo [16 ];}*PAXESLISTA ;
typedef struct tagAXESLISTA {DWORD axlReserved ;DWORD axlNumAxes ;AXISINFOA axlAxisInfo [16 ];}*LPAXESLISTA ;

typedef struct tagAXESLISTW {DWORD axlReserved ;DWORD axlNumAxes ;AXISINFOW axlAxisInfo [16 ];}AXESLISTW ;
typedef struct tagAXESLISTW {DWORD axlReserved ;DWORD axlNumAxes ;AXISINFOW axlAxisInfo [16 ];}*PAXESLISTW ;
typedef struct tagAXESLISTW {DWORD axlReserved ;DWORD axlNumAxes ;AXISINFOW axlAxisInfo [16 ];}*LPAXESLISTW ;

typedef AXESLISTA AXESLIST ;
typedef PAXESLISTA PAXESLIST ;
typedef LPAXESLISTA LPAXESLIST ;
typedef struct tagENUMLOGFONTEXDVA {ENUMLOGFONTEXA elfEnumLogfontEx ;DESIGNVECTOR elfDesignVector ;}ENUMLOGFONTEXDVA ;
typedef struct tagENUMLOGFONTEXDVA {ENUMLOGFONTEXA elfEnumLogfontEx ;DESIGNVECTOR elfDesignVector ;}*PENUMLOGFONTEXDVA ;
typedef struct tagENUMLOGFONTEXDVA {ENUMLOGFONTEXA elfEnumLogfontEx ;DESIGNVECTOR elfDesignVector ;}*LPENUMLOGFONTEXDVA ;

typedef struct tagENUMLOGFONTEXDVW {ENUMLOGFONTEXW elfEnumLogfontEx ;DESIGNVECTOR elfDesignVector ;}ENUMLOGFONTEXDVW ;
typedef struct tagENUMLOGFONTEXDVW {ENUMLOGFONTEXW elfEnumLogfontEx ;DESIGNVECTOR elfDesignVector ;}*PENUMLOGFONTEXDVW ;
typedef struct tagENUMLOGFONTEXDVW {ENUMLOGFONTEXW elfEnumLogfontEx ;DESIGNVECTOR elfDesignVector ;}*LPENUMLOGFONTEXDVW ;

typedef ENUMLOGFONTEXDVA ENUMLOGFONTEXDV ;
typedef PENUMLOGFONTEXDVA PENUMLOGFONTEXDV ;
typedef LPENUMLOGFONTEXDVA LPENUMLOGFONTEXDV ;
HFONT CreateFontIndirectExA (const ENUMLOGFONTEXDVA *);
HFONT CreateFontIndirectExW (const ENUMLOGFONTEXDVW *);
typedef struct tagENUMTEXTMETRICA {NEWTEXTMETRICEXA etmNewTextMetricEx ;AXESLISTA etmAxesList ;}ENUMTEXTMETRICA ;
typedef struct tagENUMTEXTMETRICA {NEWTEXTMETRICEXA etmNewTextMetricEx ;AXESLISTA etmAxesList ;}*PENUMTEXTMETRICA ;
typedef struct tagENUMTEXTMETRICA {NEWTEXTMETRICEXA etmNewTextMetricEx ;AXESLISTA etmAxesList ;}*LPENUMTEXTMETRICA ;

typedef struct tagENUMTEXTMETRICW {NEWTEXTMETRICEXW etmNewTextMetricEx ;AXESLISTW etmAxesList ;}ENUMTEXTMETRICW ;
typedef struct tagENUMTEXTMETRICW {NEWTEXTMETRICEXW etmNewTextMetricEx ;AXESLISTW etmAxesList ;}*PENUMTEXTMETRICW ;
typedef struct tagENUMTEXTMETRICW {NEWTEXTMETRICEXW etmNewTextMetricEx ;AXESLISTW etmAxesList ;}*LPENUMTEXTMETRICW ;

typedef ENUMTEXTMETRICA ENUMTEXTMETRIC ;
typedef PENUMTEXTMETRICA PENUMTEXTMETRIC ;
typedef LPENUMTEXTMETRICA LPENUMTEXTMETRIC ;
WINBOOL GetViewportExtEx (HDC hdc ,LPSIZE lpsize );
WINBOOL GetViewportOrgEx (HDC hdc ,LPPOINT lppoint );
WINBOOL GetWindowExtEx (HDC hdc ,LPSIZE lpsize );
WINBOOL GetWindowOrgEx (HDC hdc ,LPPOINT lppoint );
int IntersectClipRect (HDC hdc ,int left ,int top ,int right ,int bottom );
WINBOOL InvertRgn (HDC hdc ,HRGN hrgn );
WINBOOL LineDDA (int xStart ,int yStart ,int xEnd ,int yEnd ,LINEDDAPROC lpProc ,LPARAM data );
WINBOOL LineTo (HDC hdc ,int x ,int y );
WINBOOL MaskBlt (HDC hdcDest ,int xDest ,int yDest ,int width ,int height ,HDC hdcSrc ,int xSrc ,int ySrc ,HBITMAP hbmMask ,int xMask ,int yMask ,DWORD rop );
WINBOOL PlgBlt (HDC hdcDest ,const POINT *lpPoint ,HDC hdcSrc ,int xSrc ,int ySrc ,int width ,int height ,HBITMAP hbmMask ,int xMask ,int yMask );
int OffsetClipRgn (HDC hdc ,int x ,int y );
int OffsetRgn (HRGN hrgn ,int x ,int y );
WINBOOL PatBlt (HDC hdc ,int x ,int y ,int w ,int h ,DWORD rop );
WINBOOL Pie (HDC hdc ,int left ,int top ,int right ,int bottom ,int xr1 ,int yr1 ,int xr2 ,int yr2 );
WINBOOL PlayMetaFile (HDC hdc ,HMETAFILE hmf );
WINBOOL PaintRgn (HDC hdc ,HRGN hrgn );
WINBOOL PolyPolygon (HDC hdc ,const POINT *apt ,const INT *asz ,int csz );
WINBOOL PtInRegion (HRGN hrgn ,int x ,int y );
WINBOOL PtVisible (HDC hdc ,int x ,int y );
WINBOOL RectInRegion (HRGN hrgn ,const RECT *lprect );
WINBOOL RectVisible (HDC hdc ,const RECT *lprect );
WINBOOL Rectangle (HDC hdc ,int left ,int top ,int right ,int bottom );
WINBOOL RestoreDC (HDC hdc ,int nSavedDC );
HDC ResetDCA (HDC hdc ,const DEVMODEA *lpdm );
HDC ResetDCW (HDC hdc ,const DEVMODEW *lpdm );
UINT RealizePalette (HDC hdc );
WINBOOL RemoveFontResourceA (LPCSTR lpFileName );
WINBOOL RemoveFontResourceW (LPCWSTR lpFileName );
WINBOOL RoundRect (HDC hdc ,int left ,int top ,int right ,int bottom ,int width ,int height );
WINBOOL ResizePalette (HPALETTE hpal ,UINT n );
int SaveDC (HDC hdc );
int SelectClipRgn (HDC hdc ,HRGN hrgn );
int ExtSelectClipRgn (HDC hdc ,HRGN hrgn ,int mode );
int SetMetaRgn (HDC hdc );
HGDIOBJ SelectObject (HDC hdc ,HGDIOBJ h );
HPALETTE SelectPalette (HDC hdc ,HPALETTE hPal ,WINBOOL bForceBkgd );
COLORREF SetBkColor (HDC hdc ,COLORREF color );
COLORREF SetDCBrushColor (HDC hdc ,COLORREF color );
COLORREF SetDCPenColor (HDC hdc ,COLORREF color );
int SetBkMode (HDC hdc ,int mode );
LONG SetBitmapBits (HBITMAP hbm ,DWORD cb ,const void *pvBits );
UINT SetBoundsRect (HDC hdc ,const RECT *lprect ,UINT flags );
int SetDIBits (HDC hdc ,HBITMAP hbm ,UINT start ,UINT cLines ,const void *lpBits ,const BITMAPINFO *lpbmi ,UINT ColorUse );
int SetDIBitsToDevice (HDC hdc ,int xDest ,int yDest ,DWORD w ,DWORD h ,int xSrc ,int ySrc ,UINT StartScan ,UINT cLines ,const void *lpvBits ,const BITMAPINFO *lpbmi ,UINT ColorUse );
DWORD SetMapperFlags (HDC hdc ,DWORD flags );
int SetGraphicsMode (HDC hdc ,int iMode );
int SetMapMode (HDC hdc ,int iMode );
DWORD SetLayout (HDC hdc ,DWORD l );
DWORD GetLayout (HDC hdc );
HMETAFILE SetMetaFileBitsEx (UINT cbBuffer ,const BYTE *lpData );
UINT SetPaletteEntries (HPALETTE hpal ,UINT iStart ,UINT cEntries ,const PALETTEENTRY *pPalEntries );
COLORREF SetPixel (HDC hdc ,int x ,int y ,COLORREF color );
WINBOOL SetPixelV (HDC hdc ,int x ,int y ,COLORREF color );
WINBOOL SetPixelFormat (HDC hdc ,int format ,const PIXELFORMATDESCRIPTOR *ppfd );
int SetPolyFillMode (HDC hdc ,int mode );
WINBOOL StretchBlt (HDC hdcDest ,int xDest ,int yDest ,int wDest ,int hDest ,HDC hdcSrc ,int xSrc ,int ySrc ,int wSrc ,int hSrc ,DWORD rop );
WINBOOL SetRectRgn (HRGN hrgn ,int left ,int top ,int right ,int bottom );
int StretchDIBits (HDC hdc ,int xDest ,int yDest ,int DestWidth ,int DestHeight ,int xSrc ,int ySrc ,int SrcWidth ,int SrcHeight ,const void *lpBits ,const BITMAPINFO *lpbmi ,UINT iUsage ,DWORD rop );
int SetROP2 (HDC hdc ,int rop2 );
int SetStretchBltMode (HDC hdc ,int mode );
UINT SetSystemPaletteUse (HDC hdc ,UINT use );
int SetTextCharacterExtra (HDC hdc ,int extra );
COLORREF SetTextColor (HDC hdc ,COLORREF color );
UINT SetTextAlign (HDC hdc ,UINT align );
WINBOOL SetTextJustification (HDC hdc ,int extra ,int count );
WINBOOL UpdateColors (HDC hdc );
typedef USHORT COLOR16 ;
typedef struct _TRIVERTEX {LONG x ;LONG y ;COLOR16 Red ;COLOR16 Green ;COLOR16 Blue ;COLOR16 Alpha ;}TRIVERTEX ;
typedef struct _TRIVERTEX {LONG x ;LONG y ;COLOR16 Red ;COLOR16 Green ;COLOR16 Blue ;COLOR16 Alpha ;}*PTRIVERTEX ;
typedef struct _TRIVERTEX {LONG x ;LONG y ;COLOR16 Red ;COLOR16 Green ;COLOR16 Blue ;COLOR16 Alpha ;}*LPTRIVERTEX ;

typedef struct _GRADIENT_TRIANGLE {ULONG Vertex1 ;ULONG Vertex2 ;ULONG Vertex3 ;}GRADIENT_TRIANGLE ;
typedef struct _GRADIENT_TRIANGLE {ULONG Vertex1 ;ULONG Vertex2 ;ULONG Vertex3 ;}*PGRADIENT_TRIANGLE ;
typedef struct _GRADIENT_TRIANGLE {ULONG Vertex1 ;ULONG Vertex2 ;ULONG Vertex3 ;}*LPGRADIENT_TRIANGLE ;

typedef struct _GRADIENT_RECT {ULONG UpperLeft ;ULONG LowerRight ;}GRADIENT_RECT ;
typedef struct _GRADIENT_RECT {ULONG UpperLeft ;ULONG LowerRight ;}*PGRADIENT_RECT ;
typedef struct _GRADIENT_RECT {ULONG UpperLeft ;ULONG LowerRight ;}*LPGRADIENT_RECT ;

typedef struct _BLENDFUNCTION {BYTE BlendOp ;BYTE BlendFlags ;BYTE SourceConstantAlpha ;BYTE AlphaFormat ;}BLENDFUNCTION ;
typedef struct _BLENDFUNCTION {BYTE BlendOp ;BYTE BlendFlags ;BYTE SourceConstantAlpha ;BYTE AlphaFormat ;}*PBLENDFUNCTION ;

WINBOOL AlphaBlend (HDC hdcDest ,int xoriginDest ,int yoriginDest ,int wDest ,int hDest ,HDC hdcSrc ,int xoriginSrc ,int yoriginSrc ,int wSrc ,int hSrc ,BLENDFUNCTION ftn );
WINBOOL GdiAlphaBlend (HDC hdcDest ,int xoriginDest ,int yoriginDest ,int wDest ,int hDest ,HDC hdcSrc ,int xoriginSrc ,int yoriginSrc ,int wSrc ,int hSrc ,BLENDFUNCTION ftn );
WINBOOL TransparentBlt (HDC hdcDest ,int xoriginDest ,int yoriginDest ,int wDest ,int hDest ,HDC hdcSrc ,int xoriginSrc ,int yoriginSrc ,int wSrc ,int hSrc ,UINT crTransparent );
WINBOOL GdiTransparentBlt (HDC hdcDest ,int xoriginDest ,int yoriginDest ,int wDest ,int hDest ,HDC hdcSrc ,int xoriginSrc ,int yoriginSrc ,int wSrc ,int hSrc ,UINT crTransparent );
WINBOOL GradientFill (HDC hdc ,PTRIVERTEX pVertex ,ULONG nVertex ,PVOID pMesh ,ULONG nMesh ,ULONG ulMode );
WINBOOL GdiGradientFill (HDC hdc ,PTRIVERTEX pVertex ,ULONG nVertex ,PVOID pMesh ,ULONG nMesh ,ULONG ulMode );
WINBOOL PlayMetaFileRecord (HDC hdc ,LPHANDLETABLE lpHandleTable ,LPMETARECORD lpMR ,UINT noObjs );
typedef int (*MFENUMPROC )(HDC hdc ,HANDLETABLE *lpht ,METARECORD *lpMR ,int nObj ,LPARAM lParam );
WINBOOL EnumMetaFile (HDC hdc ,HMETAFILE hmf ,MFENUMPROC lpProc ,LPARAM lParam );
typedef int (*ENHMFENUMPROC )(HDC hdc ,HANDLETABLE *lpht ,const ENHMETARECORD *lpmr ,int hHandles ,LPARAM data );
HENHMETAFILE CloseEnhMetaFile (HDC hdc );
HENHMETAFILE CopyEnhMetaFileA (HENHMETAFILE hEnh ,LPCSTR lpFileName );
HENHMETAFILE CopyEnhMetaFileW (HENHMETAFILE hEnh ,LPCWSTR lpFileName );
HDC CreateEnhMetaFileA (HDC hdc ,LPCSTR lpFilename ,const RECT *lprc ,LPCSTR lpDesc );
HDC CreateEnhMetaFileW (HDC hdc ,LPCWSTR lpFilename ,const RECT *lprc ,LPCWSTR lpDesc );
WINBOOL DeleteEnhMetaFile (HENHMETAFILE hmf );
WINBOOL EnumEnhMetaFile (HDC hdc ,HENHMETAFILE hmf ,ENHMFENUMPROC lpProc ,LPVOID lpParam ,const RECT *lpRect );
HENHMETAFILE GetEnhMetaFileA (LPCSTR lpName );
HENHMETAFILE GetEnhMetaFileW (LPCWSTR lpName );
UINT GetEnhMetaFileBits (HENHMETAFILE hEMF ,UINT nSize ,LPBYTE lpData );
UINT GetEnhMetaFileDescriptionA (HENHMETAFILE hemf ,UINT cchBuffer ,LPSTR lpDescription );
UINT GetEnhMetaFileDescriptionW (HENHMETAFILE hemf ,UINT cchBuffer ,LPWSTR lpDescription );
UINT GetEnhMetaFileHeader (HENHMETAFILE hemf ,UINT nSize ,LPENHMETAHEADER lpEnhMetaHeader );
UINT GetEnhMetaFilePaletteEntries (HENHMETAFILE hemf ,UINT nNumEntries ,LPPALETTEENTRY lpPaletteEntries );
UINT GetEnhMetaFilePixelFormat (HENHMETAFILE hemf ,UINT cbBuffer ,PIXELFORMATDESCRIPTOR *ppfd );
UINT GetWinMetaFileBits (HENHMETAFILE hemf ,UINT cbData16 ,LPBYTE pData16 ,INT iMapMode ,HDC hdcRef );
WINBOOL PlayEnhMetaFile (HDC hdc ,HENHMETAFILE hmf ,const RECT *lprect );
WINBOOL PlayEnhMetaFileRecord (HDC hdc ,LPHANDLETABLE pht ,const ENHMETARECORD *pmr ,UINT cht );
HENHMETAFILE SetEnhMetaFileBits (UINT nSize ,const BYTE *pb );
HENHMETAFILE SetWinMetaFileBits (UINT nSize ,const BYTE *lpMeta16Data ,HDC hdcRef ,const METAFILEPICT *lpMFP );
WINBOOL GdiComment (HDC hdc ,UINT nSize ,const BYTE *lpData );
WINBOOL GetTextMetricsA (HDC hdc ,LPTEXTMETRICA lptm );
WINBOOL GetTextMetricsW (HDC hdc ,LPTEXTMETRICW lptm );
typedef struct tagDIBSECTION {BITMAP dsBm ;BITMAPINFOHEADER dsBmih ;DWORD dsBitfields [3 ];HANDLE dshSection ;DWORD dsOffset ;}DIBSECTION ;
typedef struct tagDIBSECTION {BITMAP dsBm ;BITMAPINFOHEADER dsBmih ;DWORD dsBitfields [3 ];HANDLE dshSection ;DWORD dsOffset ;}*LPDIBSECTION ;
typedef struct tagDIBSECTION {BITMAP dsBm ;BITMAPINFOHEADER dsBmih ;DWORD dsBitfields [3 ];HANDLE dshSection ;DWORD dsOffset ;}*PDIBSECTION ;

WINBOOL AngleArc (HDC hdc ,int x ,int y ,DWORD r ,FLOAT StartAngle ,FLOAT SweepAngle );
WINBOOL PolyPolyline (HDC hdc ,const POINT *apt ,const DWORD *asz ,DWORD csz );
WINBOOL GetWorldTransform (HDC hdc ,LPXFORM lpxf );
WINBOOL SetWorldTransform (HDC hdc ,const XFORM *lpxf );
WINBOOL ModifyWorldTransform (HDC hdc ,const XFORM *lpxf ,DWORD mode );
WINBOOL CombineTransform (LPXFORM lpxfOut ,const XFORM *lpxf1 ,const XFORM *lpxf2 );
HBITMAP CreateDIBSection (HDC hdc ,const BITMAPINFO *lpbmi ,UINT usage ,void **ppvBits ,HANDLE hSection ,DWORD offset );
UINT GetDIBColorTable (HDC hdc ,UINT iStart ,UINT cEntries ,RGBQUAD *prgbq );
UINT SetDIBColorTable (HDC hdc ,UINT iStart ,UINT cEntries ,const RGBQUAD *prgbq );
typedef struct tagCOLORADJUSTMENT {WORD caSize ;WORD caFlags ;WORD caIlluminantIndex ;WORD caRedGamma ;WORD caGreenGamma ;WORD caBlueGamma ;WORD caReferenceBlack ;WORD caReferenceWhite ;SHORT caContrast ;SHORT caBrightness ;SHORT caColorfulness ;SHORT caRedGreenTint ;}COLORADJUSTMENT ;
typedef struct tagCOLORADJUSTMENT {WORD caSize ;WORD caFlags ;WORD caIlluminantIndex ;WORD caRedGamma ;WORD caGreenGamma ;WORD caBlueGamma ;WORD caReferenceBlack ;WORD caReferenceWhite ;SHORT caContrast ;SHORT caBrightness ;SHORT caColorfulness ;SHORT caRedGreenTint ;}*PCOLORADJUSTMENT ;
typedef struct tagCOLORADJUSTMENT {WORD caSize ;WORD caFlags ;WORD caIlluminantIndex ;WORD caRedGamma ;WORD caGreenGamma ;WORD caBlueGamma ;WORD caReferenceBlack ;WORD caReferenceWhite ;SHORT caContrast ;SHORT caBrightness ;SHORT caColorfulness ;SHORT caRedGreenTint ;}*LPCOLORADJUSTMENT ;

WINBOOL SetColorAdjustment (HDC hdc ,const COLORADJUSTMENT *lpca );
WINBOOL GetColorAdjustment (HDC hdc ,LPCOLORADJUSTMENT lpca );
HPALETTE CreateHalftonePalette (HDC hdc );
typedef WINBOOL (*ABORTPROC )(HDC ,int );
typedef struct _DOCINFOA {int cbSize ;LPCSTR lpszDocName ;LPCSTR lpszOutput ;LPCSTR lpszDatatype ;DWORD fwType ;}DOCINFOA ;
typedef struct _DOCINFOA {int cbSize ;LPCSTR lpszDocName ;LPCSTR lpszOutput ;LPCSTR lpszDatatype ;DWORD fwType ;}*LPDOCINFOA ;

typedef struct _DOCINFOW {int cbSize ;LPCWSTR lpszDocName ;LPCWSTR lpszOutput ;LPCWSTR lpszDatatype ;DWORD fwType ;}DOCINFOW ;
typedef struct _DOCINFOW {int cbSize ;LPCWSTR lpszDocName ;LPCWSTR lpszOutput ;LPCWSTR lpszDatatype ;DWORD fwType ;}*LPDOCINFOW ;

typedef DOCINFOA DOCINFO ;
typedef LPDOCINFOA LPDOCINFO ;
int StartDocA (HDC hdc ,const DOCINFOA *lpdi );
int StartDocW (HDC hdc ,const DOCINFOW *lpdi );
int EndDoc (HDC hdc );
int StartPage (HDC hdc );
int EndPage (HDC hdc );
int AbortDoc (HDC hdc );
int SetAbortProc (HDC hdc ,ABORTPROC lpProc );
WINBOOL AbortPath (HDC hdc );
WINBOOL ArcTo (HDC hdc ,int left ,int top ,int right ,int bottom ,int xr1 ,int yr1 ,int xr2 ,int yr2 );
WINBOOL BeginPath (HDC hdc );
WINBOOL CloseFigure (HDC hdc );
WINBOOL EndPath (HDC hdc );
WINBOOL FillPath (HDC hdc );
WINBOOL FlattenPath (HDC hdc );
int GetPath (HDC hdc ,LPPOINT apt ,LPBYTE aj ,int cpt );
HRGN PathToRegion (HDC hdc );
WINBOOL PolyDraw (HDC hdc ,const POINT *apt ,const BYTE *aj ,int cpt );
WINBOOL SelectClipPath (HDC hdc ,int mode );
int SetArcDirection (HDC hdc ,int dir );
WINBOOL SetMiterLimit (HDC hdc ,FLOAT limit ,PFLOAT old );
WINBOOL StrokeAndFillPath (HDC hdc );
WINBOOL StrokePath (HDC hdc );
WINBOOL WidenPath (HDC hdc );
HPEN ExtCreatePen (DWORD iPenStyle ,DWORD cWidth ,const LOGBRUSH *plbrush ,DWORD cStyle ,const DWORD *pstyle );
WINBOOL GetMiterLimit (HDC hdc ,PFLOAT plimit );
int GetArcDirection (HDC hdc );
int GetObjectA (HANDLE h ,int c ,LPVOID pv );
int GetObjectW (HANDLE h ,int c ,LPVOID pv );
WINBOOL MoveToEx (HDC hdc ,int x ,int y ,LPPOINT lppt );
WINBOOL TextOutA (HDC hdc ,int x ,int y ,LPCSTR lpString ,int c );
WINBOOL TextOutW (HDC hdc ,int x ,int y ,LPCWSTR lpString ,int c );
WINBOOL ExtTextOutA (HDC hdc ,int x ,int y ,UINT options ,const RECT *lprect ,LPCSTR lpString ,UINT c ,const INT *lpDx );
WINBOOL ExtTextOutW (HDC hdc ,int x ,int y ,UINT options ,const RECT *lprect ,LPCWSTR lpString ,UINT c ,const INT *lpDx );
WINBOOL PolyTextOutA (HDC hdc ,const POLYTEXTA *ppt ,int nstrings );
WINBOOL PolyTextOutW (HDC hdc ,const POLYTEXTW *ppt ,int nstrings );
HRGN CreatePolygonRgn (const POINT *pptl ,int cPoint ,int iMode );
WINBOOL DPtoLP (HDC hdc ,LPPOINT lppt ,int c );
WINBOOL LPtoDP (HDC hdc ,LPPOINT lppt ,int c );
WINBOOL Polygon (HDC hdc ,const POINT *apt ,int cpt );
WINBOOL Polyline (HDC hdc ,const POINT *apt ,int cpt );
WINBOOL PolyBezier (HDC hdc ,const POINT *apt ,DWORD cpt );
WINBOOL PolyBezierTo (HDC hdc ,const POINT *apt ,DWORD cpt );
WINBOOL PolylineTo (HDC hdc ,const POINT *apt ,DWORD cpt );
WINBOOL SetViewportExtEx (HDC hdc ,int x ,int y ,LPSIZE lpsz );
WINBOOL SetViewportOrgEx (HDC hdc ,int x ,int y ,LPPOINT lppt );
WINBOOL SetWindowExtEx (HDC hdc ,int x ,int y ,LPSIZE lpsz );
WINBOOL SetWindowOrgEx (HDC hdc ,int x ,int y ,LPPOINT lppt );
WINBOOL OffsetViewportOrgEx (HDC hdc ,int x ,int y ,LPPOINT lppt );
WINBOOL OffsetWindowOrgEx (HDC hdc ,int x ,int y ,LPPOINT lppt );
WINBOOL ScaleViewportExtEx (HDC hdc ,int xn ,int dx ,int yn ,int yd ,LPSIZE lpsz );
WINBOOL ScaleWindowExtEx (HDC hdc ,int xn ,int xd ,int yn ,int yd ,LPSIZE lpsz );
WINBOOL SetBitmapDimensionEx (HBITMAP hbm ,int w ,int h ,LPSIZE lpsz );
WINBOOL SetBrushOrgEx (HDC hdc ,int x ,int y ,LPPOINT lppt );
int GetTextFaceA (HDC hdc ,int c ,LPSTR lpName );
int GetTextFaceW (HDC hdc ,int c ,LPWSTR lpName );
typedef struct tagKERNINGPAIR {WORD wFirst ;WORD wSecond ;int iKernAmount ;}KERNINGPAIR ;
typedef struct tagKERNINGPAIR {WORD wFirst ;WORD wSecond ;int iKernAmount ;}*LPKERNINGPAIR ;

DWORD GetKerningPairsA (HDC hdc ,DWORD nPairs ,LPKERNINGPAIR lpKernPair );
DWORD GetKerningPairsW (HDC hdc ,DWORD nPairs ,LPKERNINGPAIR lpKernPair );
WINBOOL GetDCOrgEx (HDC hdc ,LPPOINT lppt );
WINBOOL FixBrushOrgEx (HDC hdc ,int x ,int y ,LPPOINT ptl );
WINBOOL UnrealizeObject (HGDIOBJ h );
WINBOOL GdiFlush ();
DWORD GdiSetBatchLimit (DWORD dw );
DWORD GdiGetBatchLimit ();
typedef int (*ICMENUMPROCA )(LPSTR ,LPARAM );
typedef int (*ICMENUMPROCW )(LPWSTR ,LPARAM );
int SetICMMode (HDC hdc ,int mode );
WINBOOL CheckColorsInGamut (HDC hdc ,LPVOID lpRGBTriple ,LPVOID dlpBuffer ,DWORD nCount );
HCOLORSPACE GetColorSpace (HDC hdc );
WINBOOL GetLogColorSpaceA (HCOLORSPACE hColorSpace ,LPLOGCOLORSPACEA lpBuffer ,DWORD nSize );
WINBOOL GetLogColorSpaceW (HCOLORSPACE hColorSpace ,LPLOGCOLORSPACEW lpBuffer ,DWORD nSize );
HCOLORSPACE CreateColorSpaceA (LPLOGCOLORSPACEA lplcs );
HCOLORSPACE CreateColorSpaceW (LPLOGCOLORSPACEW lplcs );
HCOLORSPACE SetColorSpace (HDC hdc ,HCOLORSPACE hcs );
WINBOOL DeleteColorSpace (HCOLORSPACE hcs );
WINBOOL GetICMProfileA (HDC hdc ,LPDWORD pBufSize ,LPSTR pszFilename );
WINBOOL GetICMProfileW (HDC hdc ,LPDWORD pBufSize ,LPWSTR pszFilename );
WINBOOL SetICMProfileA (HDC hdc ,LPSTR lpFileName );
WINBOOL SetICMProfileW (HDC hdc ,LPWSTR lpFileName );
WINBOOL GetDeviceGammaRamp (HDC hdc ,LPVOID lpRamp );
WINBOOL SetDeviceGammaRamp (HDC hdc ,LPVOID lpRamp );
WINBOOL ColorMatchToTarget (HDC hdc ,HDC hdcTarget ,DWORD action );
int EnumICMProfilesA (HDC hdc ,ICMENUMPROCA lpProc ,LPARAM lParam );
int EnumICMProfilesW (HDC hdc ,ICMENUMPROCW lpProc ,LPARAM lParam );
WINBOOL UpdateICMRegKeyA (DWORD reserved ,LPSTR lpszCMID ,LPSTR lpszFileName ,UINT command );
WINBOOL UpdateICMRegKeyW (DWORD reserved ,LPWSTR lpszCMID ,LPWSTR lpszFileName ,UINT command );
WINBOOL ColorCorrectPalette (HDC hdc ,HPALETTE hPal ,DWORD deFirst ,DWORD num );
typedef struct tagEMR {DWORD iType ;DWORD nSize ;}EMR ;
typedef struct tagEMR {DWORD iType ;DWORD nSize ;}*PEMR ;

typedef struct tagEMRTEXT {POINTL ptlReference ;DWORD nChars ;DWORD offString ;DWORD fOptions ;RECTL rcl ;DWORD offDx ;}EMRTEXT ;
typedef struct tagEMRTEXT {POINTL ptlReference ;DWORD nChars ;DWORD offString ;DWORD fOptions ;RECTL rcl ;DWORD offDx ;}*PEMRTEXT ;

typedef struct tagABORTPATH {EMR emr ;}EMRABORTPATH ;
typedef struct tagABORTPATH {EMR emr ;}*PEMRABORTPATH ;
typedef struct tagABORTPATH {EMR emr ;}EMRBEGINPATH ;
typedef struct tagABORTPATH {EMR emr ;}*PEMRBEGINPATH ;
typedef struct tagABORTPATH {EMR emr ;}EMRENDPATH ;
typedef struct tagABORTPATH {EMR emr ;}*PEMRENDPATH ;
typedef struct tagABORTPATH {EMR emr ;}EMRCLOSEFIGURE ;
typedef struct tagABORTPATH {EMR emr ;}*PEMRCLOSEFIGURE ;
typedef struct tagABORTPATH {EMR emr ;}EMRFLATTENPATH ;
typedef struct tagABORTPATH {EMR emr ;}*PEMRFLATTENPATH ;
typedef struct tagABORTPATH {EMR emr ;}EMRWIDENPATH ;
typedef struct tagABORTPATH {EMR emr ;}*PEMRWIDENPATH ;
typedef struct tagABORTPATH {EMR emr ;}EMRSETMETARGN ;
typedef struct tagABORTPATH {EMR emr ;}*PEMRSETMETARGN ;
typedef struct tagABORTPATH {EMR emr ;}EMRSAVEDC ;
typedef struct tagABORTPATH {EMR emr ;}*PEMRSAVEDC ;
typedef struct tagABORTPATH {EMR emr ;}EMRREALIZEPALETTE ;
typedef struct tagABORTPATH {EMR emr ;}*PEMRREALIZEPALETTE ;

typedef struct tagEMRSELECTCLIPPATH {EMR emr ;DWORD iMode ;}EMRSELECTCLIPPATH ;
typedef struct tagEMRSELECTCLIPPATH {EMR emr ;DWORD iMode ;}*PEMRSELECTCLIPPATH ;
typedef struct tagEMRSELECTCLIPPATH {EMR emr ;DWORD iMode ;}EMRSETBKMODE ;
typedef struct tagEMRSELECTCLIPPATH {EMR emr ;DWORD iMode ;}*PEMRSETBKMODE ;
typedef struct tagEMRSELECTCLIPPATH {EMR emr ;DWORD iMode ;}EMRSETMAPMODE ;
typedef struct tagEMRSELECTCLIPPATH {EMR emr ;DWORD iMode ;}*PEMRSETMAPMODE ;
typedef struct tagEMRSELECTCLIPPATH {EMR emr ;DWORD iMode ;}EMRSETLAYOUT ;
typedef struct tagEMRSELECTCLIPPATH {EMR emr ;DWORD iMode ;}*PEMRSETLAYOUT ;
typedef struct tagEMRSELECTCLIPPATH {EMR emr ;DWORD iMode ;}EMRSETPOLYFILLMODE ;
typedef struct tagEMRSELECTCLIPPATH {EMR emr ;DWORD iMode ;}*PEMRSETPOLYFILLMODE ;
typedef struct tagEMRSELECTCLIPPATH {EMR emr ;DWORD iMode ;}EMRSETROP2 ;
typedef struct tagEMRSELECTCLIPPATH {EMR emr ;DWORD iMode ;}*PEMRSETROP2 ;
typedef struct tagEMRSELECTCLIPPATH {EMR emr ;DWORD iMode ;}EMRSETSTRETCHBLTMODE ;
typedef struct tagEMRSELECTCLIPPATH {EMR emr ;DWORD iMode ;}*PEMRSETSTRETCHBLTMODE ;
typedef struct tagEMRSELECTCLIPPATH {EMR emr ;DWORD iMode ;}EMRSETICMMODE ;
typedef struct tagEMRSELECTCLIPPATH {EMR emr ;DWORD iMode ;}*PEMRSETICMMODE ;
typedef struct tagEMRSELECTCLIPPATH {EMR emr ;DWORD iMode ;}EMRSETTEXTALIGN ;
typedef struct tagEMRSELECTCLIPPATH {EMR emr ;DWORD iMode ;}*PEMRSETTEXTALIGN ;

typedef struct tagEMRSETMITERLIMIT {EMR emr ;FLOAT eMiterLimit ;}EMRSETMITERLIMIT ;
typedef struct tagEMRSETMITERLIMIT {EMR emr ;FLOAT eMiterLimit ;}*PEMRSETMITERLIMIT ;

typedef struct tagEMRRESTOREDC {EMR emr ;LONG iRelative ;}EMRRESTOREDC ;
typedef struct tagEMRRESTOREDC {EMR emr ;LONG iRelative ;}*PEMRRESTOREDC ;

typedef struct tagEMRSETARCDIRECTION {EMR emr ;DWORD iArcDirection ;}EMRSETARCDIRECTION ;
typedef struct tagEMRSETARCDIRECTION {EMR emr ;DWORD iArcDirection ;}*PEMRSETARCDIRECTION ;

typedef struct tagEMRSETMAPPERFLAGS {EMR emr ;DWORD dwFlags ;}EMRSETMAPPERFLAGS ;
typedef struct tagEMRSETMAPPERFLAGS {EMR emr ;DWORD dwFlags ;}*PEMRSETMAPPERFLAGS ;

typedef struct tagEMRSETTEXTCOLOR {EMR emr ;COLORREF crColor ;}EMRSETBKCOLOR ;
typedef struct tagEMRSETTEXTCOLOR {EMR emr ;COLORREF crColor ;}*PEMRSETBKCOLOR ;
typedef struct tagEMRSETTEXTCOLOR {EMR emr ;COLORREF crColor ;}EMRSETTEXTCOLOR ;
typedef struct tagEMRSETTEXTCOLOR {EMR emr ;COLORREF crColor ;}*PEMRSETTEXTCOLOR ;

typedef struct tagEMRSELECTOBJECT {EMR emr ;DWORD ihObject ;}EMRSELECTOBJECT ;
typedef struct tagEMRSELECTOBJECT {EMR emr ;DWORD ihObject ;}*PEMRSELECTOBJECT ;
typedef struct tagEMRSELECTOBJECT {EMR emr ;DWORD ihObject ;}EMRDELETEOBJECT ;
typedef struct tagEMRSELECTOBJECT {EMR emr ;DWORD ihObject ;}*PEMRDELETEOBJECT ;

typedef struct tagEMRSELECTPALETTE {EMR emr ;DWORD ihPal ;}EMRSELECTPALETTE ;
typedef struct tagEMRSELECTPALETTE {EMR emr ;DWORD ihPal ;}*PEMRSELECTPALETTE ;

typedef struct tagEMRRESIZEPALETTE {EMR emr ;DWORD ihPal ;DWORD cEntries ;}EMRRESIZEPALETTE ;
typedef struct tagEMRRESIZEPALETTE {EMR emr ;DWORD ihPal ;DWORD cEntries ;}*PEMRRESIZEPALETTE ;

typedef struct tagEMRSETPALETTEENTRIES {EMR emr ;DWORD ihPal ;DWORD iStart ;DWORD cEntries ;PALETTEENTRY aPalEntries [1 ];}EMRSETPALETTEENTRIES ;
typedef struct tagEMRSETPALETTEENTRIES {EMR emr ;DWORD ihPal ;DWORD iStart ;DWORD cEntries ;PALETTEENTRY aPalEntries [1 ];}*PEMRSETPALETTEENTRIES ;

typedef struct tagEMRSETCOLORADJUSTMENT {EMR emr ;COLORADJUSTMENT ColorAdjustment ;}EMRSETCOLORADJUSTMENT ;
typedef struct tagEMRSETCOLORADJUSTMENT {EMR emr ;COLORADJUSTMENT ColorAdjustment ;}*PEMRSETCOLORADJUSTMENT ;

typedef struct tagEMRGDICOMMENT {EMR emr ;DWORD cbData ;BYTE Data [1 ];}EMRGDICOMMENT ;
typedef struct tagEMRGDICOMMENT {EMR emr ;DWORD cbData ;BYTE Data [1 ];}*PEMRGDICOMMENT ;

typedef struct tagEMREOF {EMR emr ;DWORD nPalEntries ;DWORD offPalEntries ;DWORD nSizeLast ;}EMREOF ;
typedef struct tagEMREOF {EMR emr ;DWORD nPalEntries ;DWORD offPalEntries ;DWORD nSizeLast ;}*PEMREOF ;

typedef struct tagEMRLINETO {EMR emr ;POINTL ptl ;}EMRLINETO ;
typedef struct tagEMRLINETO {EMR emr ;POINTL ptl ;}*PEMRLINETO ;
typedef struct tagEMRLINETO {EMR emr ;POINTL ptl ;}EMRMOVETOEX ;
typedef struct tagEMRLINETO {EMR emr ;POINTL ptl ;}*PEMRMOVETOEX ;

typedef struct tagEMROFFSETCLIPRGN {EMR emr ;POINTL ptlOffset ;}EMROFFSETCLIPRGN ;
typedef struct tagEMROFFSETCLIPRGN {EMR emr ;POINTL ptlOffset ;}*PEMROFFSETCLIPRGN ;

typedef struct tagEMRFILLPATH {EMR emr ;RECTL rclBounds ;}EMRFILLPATH ;
typedef struct tagEMRFILLPATH {EMR emr ;RECTL rclBounds ;}*PEMRFILLPATH ;
typedef struct tagEMRFILLPATH {EMR emr ;RECTL rclBounds ;}EMRSTROKEANDFILLPATH ;
typedef struct tagEMRFILLPATH {EMR emr ;RECTL rclBounds ;}*PEMRSTROKEANDFILLPATH ;
typedef struct tagEMRFILLPATH {EMR emr ;RECTL rclBounds ;}EMRSTROKEPATH ;
typedef struct tagEMRFILLPATH {EMR emr ;RECTL rclBounds ;}*PEMRSTROKEPATH ;

typedef struct tagEMREXCLUDECLIPRECT {EMR emr ;RECTL rclClip ;}EMREXCLUDECLIPRECT ;
typedef struct tagEMREXCLUDECLIPRECT {EMR emr ;RECTL rclClip ;}*PEMREXCLUDECLIPRECT ;
typedef struct tagEMREXCLUDECLIPRECT {EMR emr ;RECTL rclClip ;}EMRINTERSECTCLIPRECT ;
typedef struct tagEMREXCLUDECLIPRECT {EMR emr ;RECTL rclClip ;}*PEMRINTERSECTCLIPRECT ;

typedef struct tagEMRSETVIEWPORTORGEX {EMR emr ;POINTL ptlOrigin ;}EMRSETVIEWPORTORGEX ;
typedef struct tagEMRSETVIEWPORTORGEX {EMR emr ;POINTL ptlOrigin ;}*PEMRSETVIEWPORTORGEX ;
typedef struct tagEMRSETVIEWPORTORGEX {EMR emr ;POINTL ptlOrigin ;}EMRSETWINDOWORGEX ;
typedef struct tagEMRSETVIEWPORTORGEX {EMR emr ;POINTL ptlOrigin ;}*PEMRSETWINDOWORGEX ;
typedef struct tagEMRSETVIEWPORTORGEX {EMR emr ;POINTL ptlOrigin ;}EMRSETBRUSHORGEX ;
typedef struct tagEMRSETVIEWPORTORGEX {EMR emr ;POINTL ptlOrigin ;}*PEMRSETBRUSHORGEX ;

typedef struct tagEMRSETVIEWPORTEXTEX {EMR emr ;SIZEL szlExtent ;}EMRSETVIEWPORTEXTEX ;
typedef struct tagEMRSETVIEWPORTEXTEX {EMR emr ;SIZEL szlExtent ;}*PEMRSETVIEWPORTEXTEX ;
typedef struct tagEMRSETVIEWPORTEXTEX {EMR emr ;SIZEL szlExtent ;}EMRSETWINDOWEXTEX ;
typedef struct tagEMRSETVIEWPORTEXTEX {EMR emr ;SIZEL szlExtent ;}*PEMRSETWINDOWEXTEX ;

typedef struct tagEMRSCALEVIEWPORTEXTEX {EMR emr ;LONG xNum ;LONG xDenom ;LONG yNum ;LONG yDenom ;}EMRSCALEVIEWPORTEXTEX ;
typedef struct tagEMRSCALEVIEWPORTEXTEX {EMR emr ;LONG xNum ;LONG xDenom ;LONG yNum ;LONG yDenom ;}*PEMRSCALEVIEWPORTEXTEX ;
typedef struct tagEMRSCALEVIEWPORTEXTEX {EMR emr ;LONG xNum ;LONG xDenom ;LONG yNum ;LONG yDenom ;}EMRSCALEWINDOWEXTEX ;
typedef struct tagEMRSCALEVIEWPORTEXTEX {EMR emr ;LONG xNum ;LONG xDenom ;LONG yNum ;LONG yDenom ;}*PEMRSCALEWINDOWEXTEX ;

typedef struct tagEMRSETWORLDTRANSFORM {EMR emr ;XFORM xform ;}EMRSETWORLDTRANSFORM ;
typedef struct tagEMRSETWORLDTRANSFORM {EMR emr ;XFORM xform ;}*PEMRSETWORLDTRANSFORM ;

typedef struct tagEMRMODIFYWORLDTRANSFORM {EMR emr ;XFORM xform ;DWORD iMode ;}EMRMODIFYWORLDTRANSFORM ;
typedef struct tagEMRMODIFYWORLDTRANSFORM {EMR emr ;XFORM xform ;DWORD iMode ;}*PEMRMODIFYWORLDTRANSFORM ;

typedef struct tagEMRSETPIXELV {EMR emr ;POINTL ptlPixel ;COLORREF crColor ;}EMRSETPIXELV ;
typedef struct tagEMRSETPIXELV {EMR emr ;POINTL ptlPixel ;COLORREF crColor ;}*PEMRSETPIXELV ;

typedef struct tagEMREXTFLOODFILL {EMR emr ;POINTL ptlStart ;COLORREF crColor ;DWORD iMode ;}EMREXTFLOODFILL ;
typedef struct tagEMREXTFLOODFILL {EMR emr ;POINTL ptlStart ;COLORREF crColor ;DWORD iMode ;}*PEMREXTFLOODFILL ;

typedef struct tagEMRELLIPSE {EMR emr ;RECTL rclBox ;}EMRELLIPSE ;
typedef struct tagEMRELLIPSE {EMR emr ;RECTL rclBox ;}*PEMRELLIPSE ;
typedef struct tagEMRELLIPSE {EMR emr ;RECTL rclBox ;}EMRRECTANGLE ;
typedef struct tagEMRELLIPSE {EMR emr ;RECTL rclBox ;}*PEMRRECTANGLE ;

typedef struct tagEMRROUNDRECT {EMR emr ;RECTL rclBox ;SIZEL szlCorner ;}EMRROUNDRECT ;
typedef struct tagEMRROUNDRECT {EMR emr ;RECTL rclBox ;SIZEL szlCorner ;}*PEMRROUNDRECT ;

typedef struct tagEMRARC {EMR emr ;RECTL rclBox ;POINTL ptlStart ;POINTL ptlEnd ;}EMRARC ;
typedef struct tagEMRARC {EMR emr ;RECTL rclBox ;POINTL ptlStart ;POINTL ptlEnd ;}*PEMRARC ;
typedef struct tagEMRARC {EMR emr ;RECTL rclBox ;POINTL ptlStart ;POINTL ptlEnd ;}EMRARCTO ;
typedef struct tagEMRARC {EMR emr ;RECTL rclBox ;POINTL ptlStart ;POINTL ptlEnd ;}*PEMRARCTO ;
typedef struct tagEMRARC {EMR emr ;RECTL rclBox ;POINTL ptlStart ;POINTL ptlEnd ;}EMRCHORD ;
typedef struct tagEMRARC {EMR emr ;RECTL rclBox ;POINTL ptlStart ;POINTL ptlEnd ;}*PEMRCHORD ;
typedef struct tagEMRARC {EMR emr ;RECTL rclBox ;POINTL ptlStart ;POINTL ptlEnd ;}EMRPIE ;
typedef struct tagEMRARC {EMR emr ;RECTL rclBox ;POINTL ptlStart ;POINTL ptlEnd ;}*PEMRPIE ;

typedef struct tagEMRANGLEARC {EMR emr ;POINTL ptlCenter ;DWORD nRadius ;FLOAT eStartAngle ;FLOAT eSweepAngle ;}EMRANGLEARC ;
typedef struct tagEMRANGLEARC {EMR emr ;POINTL ptlCenter ;DWORD nRadius ;FLOAT eStartAngle ;FLOAT eSweepAngle ;}*PEMRANGLEARC ;

typedef struct tagEMRPOLYLINE {EMR emr ;RECTL rclBounds ;DWORD cptl ;POINTL aptl [1 ];}EMRPOLYLINE ;
typedef struct tagEMRPOLYLINE {EMR emr ;RECTL rclBounds ;DWORD cptl ;POINTL aptl [1 ];}*PEMRPOLYLINE ;
typedef struct tagEMRPOLYLINE {EMR emr ;RECTL rclBounds ;DWORD cptl ;POINTL aptl [1 ];}EMRPOLYBEZIER ;
typedef struct tagEMRPOLYLINE {EMR emr ;RECTL rclBounds ;DWORD cptl ;POINTL aptl [1 ];}*PEMRPOLYBEZIER ;
typedef struct tagEMRPOLYLINE {EMR emr ;RECTL rclBounds ;DWORD cptl ;POINTL aptl [1 ];}EMRPOLYGON ;
typedef struct tagEMRPOLYLINE {EMR emr ;RECTL rclBounds ;DWORD cptl ;POINTL aptl [1 ];}*PEMRPOLYGON ;
typedef struct tagEMRPOLYLINE {EMR emr ;RECTL rclBounds ;DWORD cptl ;POINTL aptl [1 ];}EMRPOLYBEZIERTO ;
typedef struct tagEMRPOLYLINE {EMR emr ;RECTL rclBounds ;DWORD cptl ;POINTL aptl [1 ];}*PEMRPOLYBEZIERTO ;
typedef struct tagEMRPOLYLINE {EMR emr ;RECTL rclBounds ;DWORD cptl ;POINTL aptl [1 ];}EMRPOLYLINETO ;
typedef struct tagEMRPOLYLINE {EMR emr ;RECTL rclBounds ;DWORD cptl ;POINTL aptl [1 ];}*PEMRPOLYLINETO ;

typedef struct tagEMRPOLYLINE16 {EMR emr ;RECTL rclBounds ;DWORD cpts ;POINTS apts [1 ];}EMRPOLYLINE16 ;
typedef struct tagEMRPOLYLINE16 {EMR emr ;RECTL rclBounds ;DWORD cpts ;POINTS apts [1 ];}*PEMRPOLYLINE16 ;
typedef struct tagEMRPOLYLINE16 {EMR emr ;RECTL rclBounds ;DWORD cpts ;POINTS apts [1 ];}EMRPOLYBEZIER16 ;
typedef struct tagEMRPOLYLINE16 {EMR emr ;RECTL rclBounds ;DWORD cpts ;POINTS apts [1 ];}*PEMRPOLYBEZIER16 ;
typedef struct tagEMRPOLYLINE16 {EMR emr ;RECTL rclBounds ;DWORD cpts ;POINTS apts [1 ];}EMRPOLYGON16 ;
typedef struct tagEMRPOLYLINE16 {EMR emr ;RECTL rclBounds ;DWORD cpts ;POINTS apts [1 ];}*PEMRPOLYGON16 ;
typedef struct tagEMRPOLYLINE16 {EMR emr ;RECTL rclBounds ;DWORD cpts ;POINTS apts [1 ];}EMRPOLYBEZIERTO16 ;
typedef struct tagEMRPOLYLINE16 {EMR emr ;RECTL rclBounds ;DWORD cpts ;POINTS apts [1 ];}*PEMRPOLYBEZIERTO16 ;
typedef struct tagEMRPOLYLINE16 {EMR emr ;RECTL rclBounds ;DWORD cpts ;POINTS apts [1 ];}EMRPOLYLINETO16 ;
typedef struct tagEMRPOLYLINE16 {EMR emr ;RECTL rclBounds ;DWORD cpts ;POINTS apts [1 ];}*PEMRPOLYLINETO16 ;

typedef struct tagEMRPOLYDRAW {EMR emr ;RECTL rclBounds ;DWORD cptl ;POINTL aptl [1 ];BYTE abTypes [1 ];}EMRPOLYDRAW ;
typedef struct tagEMRPOLYDRAW {EMR emr ;RECTL rclBounds ;DWORD cptl ;POINTL aptl [1 ];BYTE abTypes [1 ];}*PEMRPOLYDRAW ;

typedef struct tagEMRPOLYDRAW16 {EMR emr ;RECTL rclBounds ;DWORD cpts ;POINTS apts [1 ];BYTE abTypes [1 ];}EMRPOLYDRAW16 ;
typedef struct tagEMRPOLYDRAW16 {EMR emr ;RECTL rclBounds ;DWORD cpts ;POINTS apts [1 ];BYTE abTypes [1 ];}*PEMRPOLYDRAW16 ;

typedef struct tagEMRPOLYPOLYLINE {EMR emr ;RECTL rclBounds ;DWORD nPolys ;DWORD cptl ;DWORD aPolyCounts [1 ];POINTL aptl [1 ];}EMRPOLYPOLYLINE ;
typedef struct tagEMRPOLYPOLYLINE {EMR emr ;RECTL rclBounds ;DWORD nPolys ;DWORD cptl ;DWORD aPolyCounts [1 ];POINTL aptl [1 ];}*PEMRPOLYPOLYLINE ;
typedef struct tagEMRPOLYPOLYLINE {EMR emr ;RECTL rclBounds ;DWORD nPolys ;DWORD cptl ;DWORD aPolyCounts [1 ];POINTL aptl [1 ];}EMRPOLYPOLYGON ;
typedef struct tagEMRPOLYPOLYLINE {EMR emr ;RECTL rclBounds ;DWORD nPolys ;DWORD cptl ;DWORD aPolyCounts [1 ];POINTL aptl [1 ];}*PEMRPOLYPOLYGON ;

typedef struct tagEMRPOLYPOLYLINE16 {EMR emr ;RECTL rclBounds ;DWORD nPolys ;DWORD cpts ;DWORD aPolyCounts [1 ];POINTS apts [1 ];}EMRPOLYPOLYLINE16 ;
typedef struct tagEMRPOLYPOLYLINE16 {EMR emr ;RECTL rclBounds ;DWORD nPolys ;DWORD cpts ;DWORD aPolyCounts [1 ];POINTS apts [1 ];}*PEMRPOLYPOLYLINE16 ;
typedef struct tagEMRPOLYPOLYLINE16 {EMR emr ;RECTL rclBounds ;DWORD nPolys ;DWORD cpts ;DWORD aPolyCounts [1 ];POINTS apts [1 ];}EMRPOLYPOLYGON16 ;
typedef struct tagEMRPOLYPOLYLINE16 {EMR emr ;RECTL rclBounds ;DWORD nPolys ;DWORD cpts ;DWORD aPolyCounts [1 ];POINTS apts [1 ];}*PEMRPOLYPOLYGON16 ;

typedef struct tagEMRINVERTRGN {EMR emr ;RECTL rclBounds ;DWORD cbRgnData ;BYTE RgnData [1 ];}EMRINVERTRGN ;
typedef struct tagEMRINVERTRGN {EMR emr ;RECTL rclBounds ;DWORD cbRgnData ;BYTE RgnData [1 ];}*PEMRINVERTRGN ;
typedef struct tagEMRINVERTRGN {EMR emr ;RECTL rclBounds ;DWORD cbRgnData ;BYTE RgnData [1 ];}EMRPAINTRGN ;
typedef struct tagEMRINVERTRGN {EMR emr ;RECTL rclBounds ;DWORD cbRgnData ;BYTE RgnData [1 ];}*PEMRPAINTRGN ;

typedef struct tagEMRFILLRGN {EMR emr ;RECTL rclBounds ;DWORD cbRgnData ;DWORD ihBrush ;BYTE RgnData [1 ];}EMRFILLRGN ;
typedef struct tagEMRFILLRGN {EMR emr ;RECTL rclBounds ;DWORD cbRgnData ;DWORD ihBrush ;BYTE RgnData [1 ];}*PEMRFILLRGN ;

typedef struct tagEMRFRAMERGN {EMR emr ;RECTL rclBounds ;DWORD cbRgnData ;DWORD ihBrush ;SIZEL szlStroke ;BYTE RgnData [1 ];}EMRFRAMERGN ;
typedef struct tagEMRFRAMERGN {EMR emr ;RECTL rclBounds ;DWORD cbRgnData ;DWORD ihBrush ;SIZEL szlStroke ;BYTE RgnData [1 ];}*PEMRFRAMERGN ;

typedef struct tagEMREXTSELECTCLIPRGN {EMR emr ;DWORD cbRgnData ;DWORD iMode ;BYTE RgnData [1 ];}EMREXTSELECTCLIPRGN ;
typedef struct tagEMREXTSELECTCLIPRGN {EMR emr ;DWORD cbRgnData ;DWORD iMode ;BYTE RgnData [1 ];}*PEMREXTSELECTCLIPRGN ;

typedef struct tagEMREXTTEXTOUTA {EMR emr ;RECTL rclBounds ;DWORD iGraphicsMode ;FLOAT exScale ;FLOAT eyScale ;EMRTEXT emrtext ;}EMREXTTEXTOUTA ;
typedef struct tagEMREXTTEXTOUTA {EMR emr ;RECTL rclBounds ;DWORD iGraphicsMode ;FLOAT exScale ;FLOAT eyScale ;EMRTEXT emrtext ;}*PEMREXTTEXTOUTA ;
typedef struct tagEMREXTTEXTOUTA {EMR emr ;RECTL rclBounds ;DWORD iGraphicsMode ;FLOAT exScale ;FLOAT eyScale ;EMRTEXT emrtext ;}EMREXTTEXTOUTW ;
typedef struct tagEMREXTTEXTOUTA {EMR emr ;RECTL rclBounds ;DWORD iGraphicsMode ;FLOAT exScale ;FLOAT eyScale ;EMRTEXT emrtext ;}*PEMREXTTEXTOUTW ;

typedef struct tagEMRPOLYTEXTOUTA {EMR emr ;RECTL rclBounds ;DWORD iGraphicsMode ;FLOAT exScale ;FLOAT eyScale ;LONG cStrings ;EMRTEXT aemrtext [1 ];}EMRPOLYTEXTOUTA ;
typedef struct tagEMRPOLYTEXTOUTA {EMR emr ;RECTL rclBounds ;DWORD iGraphicsMode ;FLOAT exScale ;FLOAT eyScale ;LONG cStrings ;EMRTEXT aemrtext [1 ];}*PEMRPOLYTEXTOUTA ;
typedef struct tagEMRPOLYTEXTOUTA {EMR emr ;RECTL rclBounds ;DWORD iGraphicsMode ;FLOAT exScale ;FLOAT eyScale ;LONG cStrings ;EMRTEXT aemrtext [1 ];}EMRPOLYTEXTOUTW ;
typedef struct tagEMRPOLYTEXTOUTA {EMR emr ;RECTL rclBounds ;DWORD iGraphicsMode ;FLOAT exScale ;FLOAT eyScale ;LONG cStrings ;EMRTEXT aemrtext [1 ];}*PEMRPOLYTEXTOUTW ;

typedef struct tagEMRBITBLT {EMR emr ;RECTL rclBounds ;LONG xDest ;LONG yDest ;LONG cxDest ;LONG cyDest ;DWORD dwRop ;LONG xSrc ;LONG ySrc ;XFORM xformSrc ;COLORREF crBkColorSrc ;DWORD iUsageSrc ;DWORD offBmiSrc ;DWORD cbBmiSrc ;DWORD offBitsSrc ;DWORD cbBitsSrc ;}EMRBITBLT ;
typedef struct tagEMRBITBLT {EMR emr ;RECTL rclBounds ;LONG xDest ;LONG yDest ;LONG cxDest ;LONG cyDest ;DWORD dwRop ;LONG xSrc ;LONG ySrc ;XFORM xformSrc ;COLORREF crBkColorSrc ;DWORD iUsageSrc ;DWORD offBmiSrc ;DWORD cbBmiSrc ;DWORD offBitsSrc ;DWORD cbBitsSrc ;}*PEMRBITBLT ;

typedef struct tagEMRSTRETCHBLT {EMR emr ;RECTL rclBounds ;LONG xDest ;LONG yDest ;LONG cxDest ;LONG cyDest ;DWORD dwRop ;LONG xSrc ;LONG ySrc ;XFORM xformSrc ;COLORREF crBkColorSrc ;DWORD iUsageSrc ;DWORD offBmiSrc ;DWORD cbBmiSrc ;DWORD offBitsSrc ;DWORD cbBitsSrc ;LONG cxSrc ;LONG cySrc ;}EMRSTRETCHBLT ;
typedef struct tagEMRSTRETCHBLT {EMR emr ;RECTL rclBounds ;LONG xDest ;LONG yDest ;LONG cxDest ;LONG cyDest ;DWORD dwRop ;LONG xSrc ;LONG ySrc ;XFORM xformSrc ;COLORREF crBkColorSrc ;DWORD iUsageSrc ;DWORD offBmiSrc ;DWORD cbBmiSrc ;DWORD offBitsSrc ;DWORD cbBitsSrc ;LONG cxSrc ;LONG cySrc ;}*PEMRSTRETCHBLT ;

typedef struct tagEMRMASKBLT {EMR emr ;RECTL rclBounds ;LONG xDest ;LONG yDest ;LONG cxDest ;LONG cyDest ;DWORD dwRop ;LONG xSrc ;LONG ySrc ;XFORM xformSrc ;COLORREF crBkColorSrc ;DWORD iUsageSrc ;DWORD offBmiSrc ;DWORD cbBmiSrc ;DWORD offBitsSrc ;DWORD cbBitsSrc ;LONG xMask ;LONG yMask ;DWORD iUsageMask ;DWORD offBmiMask ;DWORD cbBmiMask ;DWORD offBitsMask ;DWORD cbBitsMask ;}EMRMASKBLT ;
typedef struct tagEMRMASKBLT {EMR emr ;RECTL rclBounds ;LONG xDest ;LONG yDest ;LONG cxDest ;LONG cyDest ;DWORD dwRop ;LONG xSrc ;LONG ySrc ;XFORM xformSrc ;COLORREF crBkColorSrc ;DWORD iUsageSrc ;DWORD offBmiSrc ;DWORD cbBmiSrc ;DWORD offBitsSrc ;DWORD cbBitsSrc ;LONG xMask ;LONG yMask ;DWORD iUsageMask ;DWORD offBmiMask ;DWORD cbBmiMask ;DWORD offBitsMask ;DWORD cbBitsMask ;}*PEMRMASKBLT ;

typedef struct tagEMRPLGBLT {EMR emr ;RECTL rclBounds ;POINTL aptlDest [3 ];LONG xSrc ;LONG ySrc ;LONG cxSrc ;LONG cySrc ;XFORM xformSrc ;COLORREF crBkColorSrc ;DWORD iUsageSrc ;DWORD offBmiSrc ;DWORD cbBmiSrc ;DWORD offBitsSrc ;DWORD cbBitsSrc ;LONG xMask ;LONG yMask ;DWORD iUsageMask ;DWORD offBmiMask ;DWORD cbBmiMask ;DWORD offBitsMask ;DWORD cbBitsMask ;}EMRPLGBLT ;
typedef struct tagEMRPLGBLT {EMR emr ;RECTL rclBounds ;POINTL aptlDest [3 ];LONG xSrc ;LONG ySrc ;LONG cxSrc ;LONG cySrc ;XFORM xformSrc ;COLORREF crBkColorSrc ;DWORD iUsageSrc ;DWORD offBmiSrc ;DWORD cbBmiSrc ;DWORD offBitsSrc ;DWORD cbBitsSrc ;LONG xMask ;LONG yMask ;DWORD iUsageMask ;DWORD offBmiMask ;DWORD cbBmiMask ;DWORD offBitsMask ;DWORD cbBitsMask ;}*PEMRPLGBLT ;

typedef struct tagEMRSETDIBITSTODEVICE {EMR emr ;RECTL rclBounds ;LONG xDest ;LONG yDest ;LONG xSrc ;LONG ySrc ;LONG cxSrc ;LONG cySrc ;DWORD offBmiSrc ;DWORD cbBmiSrc ;DWORD offBitsSrc ;DWORD cbBitsSrc ;DWORD iUsageSrc ;DWORD iStartScan ;DWORD cScans ;}EMRSETDIBITSTODEVICE ;
typedef struct tagEMRSETDIBITSTODEVICE {EMR emr ;RECTL rclBounds ;LONG xDest ;LONG yDest ;LONG xSrc ;LONG ySrc ;LONG cxSrc ;LONG cySrc ;DWORD offBmiSrc ;DWORD cbBmiSrc ;DWORD offBitsSrc ;DWORD cbBitsSrc ;DWORD iUsageSrc ;DWORD iStartScan ;DWORD cScans ;}*PEMRSETDIBITSTODEVICE ;

typedef struct tagEMRSTRETCHDIBITS {EMR emr ;RECTL rclBounds ;LONG xDest ;LONG yDest ;LONG xSrc ;LONG ySrc ;LONG cxSrc ;LONG cySrc ;DWORD offBmiSrc ;DWORD cbBmiSrc ;DWORD offBitsSrc ;DWORD cbBitsSrc ;DWORD iUsageSrc ;DWORD dwRop ;LONG cxDest ;LONG cyDest ;}EMRSTRETCHDIBITS ;
typedef struct tagEMRSTRETCHDIBITS {EMR emr ;RECTL rclBounds ;LONG xDest ;LONG yDest ;LONG xSrc ;LONG ySrc ;LONG cxSrc ;LONG cySrc ;DWORD offBmiSrc ;DWORD cbBmiSrc ;DWORD offBitsSrc ;DWORD cbBitsSrc ;DWORD iUsageSrc ;DWORD dwRop ;LONG cxDest ;LONG cyDest ;}*PEMRSTRETCHDIBITS ;

typedef struct tagEMREXTCREATEFONTINDIRECTW {EMR emr ;DWORD ihFont ;EXTLOGFONTW elfw ;}EMREXTCREATEFONTINDIRECTW ;
typedef struct tagEMREXTCREATEFONTINDIRECTW {EMR emr ;DWORD ihFont ;EXTLOGFONTW elfw ;}*PEMREXTCREATEFONTINDIRECTW ;

typedef struct tagEMRCREATEPALETTE {EMR emr ;DWORD ihPal ;LOGPALETTE lgpl ;}EMRCREATEPALETTE ;
typedef struct tagEMRCREATEPALETTE {EMR emr ;DWORD ihPal ;LOGPALETTE lgpl ;}*PEMRCREATEPALETTE ;

typedef struct tagEMRCREATEPEN {EMR emr ;DWORD ihPen ;LOGPEN lopn ;}EMRCREATEPEN ;
typedef struct tagEMRCREATEPEN {EMR emr ;DWORD ihPen ;LOGPEN lopn ;}*PEMRCREATEPEN ;

typedef struct tagEMREXTCREATEPEN {EMR emr ;DWORD ihPen ;DWORD offBmi ;DWORD cbBmi ;DWORD offBits ;DWORD cbBits ;EXTLOGPEN elp ;}EMREXTCREATEPEN ;
typedef struct tagEMREXTCREATEPEN {EMR emr ;DWORD ihPen ;DWORD offBmi ;DWORD cbBmi ;DWORD offBits ;DWORD cbBits ;EXTLOGPEN elp ;}*PEMREXTCREATEPEN ;

typedef struct tagEMRCREATEBRUSHINDIRECT {EMR emr ;DWORD ihBrush ;LOGBRUSH32 lb ;}EMRCREATEBRUSHINDIRECT ;
typedef struct tagEMRCREATEBRUSHINDIRECT {EMR emr ;DWORD ihBrush ;LOGBRUSH32 lb ;}*PEMRCREATEBRUSHINDIRECT ;

typedef struct tagEMRCREATEMONOBRUSH {EMR emr ;DWORD ihBrush ;DWORD iUsage ;DWORD offBmi ;DWORD cbBmi ;DWORD offBits ;DWORD cbBits ;}EMRCREATEMONOBRUSH ;
typedef struct tagEMRCREATEMONOBRUSH {EMR emr ;DWORD ihBrush ;DWORD iUsage ;DWORD offBmi ;DWORD cbBmi ;DWORD offBits ;DWORD cbBits ;}*PEMRCREATEMONOBRUSH ;

typedef struct tagEMRCREATEDIBPATTERNBRUSHPT {EMR emr ;DWORD ihBrush ;DWORD iUsage ;DWORD offBmi ;DWORD cbBmi ;DWORD offBits ;DWORD cbBits ;}EMRCREATEDIBPATTERNBRUSHPT ;
typedef struct tagEMRCREATEDIBPATTERNBRUSHPT {EMR emr ;DWORD ihBrush ;DWORD iUsage ;DWORD offBmi ;DWORD cbBmi ;DWORD offBits ;DWORD cbBits ;}*PEMRCREATEDIBPATTERNBRUSHPT ;

typedef struct tagEMRFORMAT {DWORD dSignature ;DWORD nVersion ;DWORD cbData ;DWORD offData ;}EMRFORMAT ;
typedef struct tagEMRFORMAT {DWORD dSignature ;DWORD nVersion ;DWORD cbData ;DWORD offData ;}*PEMRFORMAT ;

typedef struct tagEMRGLSRECORD {EMR emr ;DWORD cbData ;BYTE Data [1 ];}EMRGLSRECORD ;
typedef struct tagEMRGLSRECORD {EMR emr ;DWORD cbData ;BYTE Data [1 ];}*PEMRGLSRECORD ;

typedef struct tagEMRGLSBOUNDEDRECORD {EMR emr ;RECTL rclBounds ;DWORD cbData ;BYTE Data [1 ];}EMRGLSBOUNDEDRECORD ;
typedef struct tagEMRGLSBOUNDEDRECORD {EMR emr ;RECTL rclBounds ;DWORD cbData ;BYTE Data [1 ];}*PEMRGLSBOUNDEDRECORD ;

typedef struct tagEMRPIXELFORMAT {EMR emr ;PIXELFORMATDESCRIPTOR pfd ;}EMRPIXELFORMAT ;
typedef struct tagEMRPIXELFORMAT {EMR emr ;PIXELFORMATDESCRIPTOR pfd ;}*PEMRPIXELFORMAT ;

typedef struct tagEMRCREATECOLORSPACE {EMR emr ;DWORD ihCS ;LOGCOLORSPACEA lcs ;}EMRCREATECOLORSPACE ;
typedef struct tagEMRCREATECOLORSPACE {EMR emr ;DWORD ihCS ;LOGCOLORSPACEA lcs ;}*PEMRCREATECOLORSPACE ;

typedef struct tagEMRSETCOLORSPACE {EMR emr ;DWORD ihCS ;}EMRSETCOLORSPACE ;
typedef struct tagEMRSETCOLORSPACE {EMR emr ;DWORD ihCS ;}*PEMRSETCOLORSPACE ;
typedef struct tagEMRSETCOLORSPACE {EMR emr ;DWORD ihCS ;}EMRSELECTCOLORSPACE ;
typedef struct tagEMRSETCOLORSPACE {EMR emr ;DWORD ihCS ;}*PEMRSELECTCOLORSPACE ;
typedef struct tagEMRSETCOLORSPACE {EMR emr ;DWORD ihCS ;}EMRDELETECOLORSPACE ;
typedef struct tagEMRSETCOLORSPACE {EMR emr ;DWORD ihCS ;}*PEMRDELETECOLORSPACE ;

typedef struct tagEMREXTESCAPE {EMR emr ;INT iEscape ;INT cbEscData ;BYTE EscData [1 ];}EMREXTESCAPE ;
typedef struct tagEMREXTESCAPE {EMR emr ;INT iEscape ;INT cbEscData ;BYTE EscData [1 ];}*PEMREXTESCAPE ;
typedef struct tagEMREXTESCAPE {EMR emr ;INT iEscape ;INT cbEscData ;BYTE EscData [1 ];}EMRDRAWESCAPE ;
typedef struct tagEMREXTESCAPE {EMR emr ;INT iEscape ;INT cbEscData ;BYTE EscData [1 ];}*PEMRDRAWESCAPE ;

typedef struct tagEMRNAMEDESCAPE {EMR emr ;INT iEscape ;INT cbDriver ;INT cbEscData ;BYTE EscData [1 ];}EMRNAMEDESCAPE ;
typedef struct tagEMRNAMEDESCAPE {EMR emr ;INT iEscape ;INT cbDriver ;INT cbEscData ;BYTE EscData [1 ];}*PEMRNAMEDESCAPE ;

typedef struct tagEMRSETICMPROFILE {EMR emr ;DWORD dwFlags ;DWORD cbName ;DWORD cbData ;BYTE Data [1 ];}EMRSETICMPROFILE ;
typedef struct tagEMRSETICMPROFILE {EMR emr ;DWORD dwFlags ;DWORD cbName ;DWORD cbData ;BYTE Data [1 ];}*PEMRSETICMPROFILE ;
typedef struct tagEMRSETICMPROFILE {EMR emr ;DWORD dwFlags ;DWORD cbName ;DWORD cbData ;BYTE Data [1 ];}EMRSETICMPROFILEA ;
typedef struct tagEMRSETICMPROFILE {EMR emr ;DWORD dwFlags ;DWORD cbName ;DWORD cbData ;BYTE Data [1 ];}*PEMRSETICMPROFILEA ;
typedef struct tagEMRSETICMPROFILE {EMR emr ;DWORD dwFlags ;DWORD cbName ;DWORD cbData ;BYTE Data [1 ];}EMRSETICMPROFILEW ;
typedef struct tagEMRSETICMPROFILE {EMR emr ;DWORD dwFlags ;DWORD cbName ;DWORD cbData ;BYTE Data [1 ];}*PEMRSETICMPROFILEW ;

typedef struct tagEMRCREATECOLORSPACEW {EMR emr ;DWORD ihCS ;LOGCOLORSPACEW lcs ;DWORD dwFlags ;DWORD cbData ;BYTE Data [1 ];}EMRCREATECOLORSPACEW ;
typedef struct tagEMRCREATECOLORSPACEW {EMR emr ;DWORD ihCS ;LOGCOLORSPACEW lcs ;DWORD dwFlags ;DWORD cbData ;BYTE Data [1 ];}*PEMRCREATECOLORSPACEW ;

typedef struct tagCOLORMATCHTOTARGET {EMR emr ;DWORD dwAction ;DWORD dwFlags ;DWORD cbName ;DWORD cbData ;BYTE Data [1 ];}EMRCOLORMATCHTOTARGET ;
typedef struct tagCOLORMATCHTOTARGET {EMR emr ;DWORD dwAction ;DWORD dwFlags ;DWORD cbName ;DWORD cbData ;BYTE Data [1 ];}*PEMRCOLORMATCHTOTARGET ;

typedef struct tagCOLORCORRECTPALETTE {EMR emr ;DWORD ihPalette ;DWORD nFirstEntry ;DWORD nPalEntries ;DWORD nReserved ;}EMRCOLORCORRECTPALETTE ;
typedef struct tagCOLORCORRECTPALETTE {EMR emr ;DWORD ihPalette ;DWORD nFirstEntry ;DWORD nPalEntries ;DWORD nReserved ;}*PEMRCOLORCORRECTPALETTE ;

typedef struct tagEMRALPHABLEND {EMR emr ;RECTL rclBounds ;LONG xDest ;LONG yDest ;LONG cxDest ;LONG cyDest ;DWORD dwRop ;LONG xSrc ;LONG ySrc ;XFORM xformSrc ;COLORREF crBkColorSrc ;DWORD iUsageSrc ;DWORD offBmiSrc ;DWORD cbBmiSrc ;DWORD offBitsSrc ;DWORD cbBitsSrc ;LONG cxSrc ;LONG cySrc ;}EMRALPHABLEND ;
typedef struct tagEMRALPHABLEND {EMR emr ;RECTL rclBounds ;LONG xDest ;LONG yDest ;LONG cxDest ;LONG cyDest ;DWORD dwRop ;LONG xSrc ;LONG ySrc ;XFORM xformSrc ;COLORREF crBkColorSrc ;DWORD iUsageSrc ;DWORD offBmiSrc ;DWORD cbBmiSrc ;DWORD offBitsSrc ;DWORD cbBitsSrc ;LONG cxSrc ;LONG cySrc ;}*PEMRALPHABLEND ;

typedef struct tagEMRGRADIENTFILL {EMR emr ;RECTL rclBounds ;DWORD nVer ;DWORD nTri ;ULONG ulMode ;TRIVERTEX Ver [1 ];}EMRGRADIENTFILL ;
typedef struct tagEMRGRADIENTFILL {EMR emr ;RECTL rclBounds ;DWORD nVer ;DWORD nTri ;ULONG ulMode ;TRIVERTEX Ver [1 ];}*PEMRGRADIENTFILL ;

typedef struct tagEMRTRANSPARENTBLT {EMR emr ;RECTL rclBounds ;LONG xDest ;LONG yDest ;LONG cxDest ;LONG cyDest ;DWORD dwRop ;LONG xSrc ;LONG ySrc ;XFORM xformSrc ;COLORREF crBkColorSrc ;DWORD iUsageSrc ;DWORD offBmiSrc ;DWORD cbBmiSrc ;DWORD offBitsSrc ;DWORD cbBitsSrc ;LONG cxSrc ;LONG cySrc ;}EMRTRANSPARENTBLT ;
typedef struct tagEMRTRANSPARENTBLT {EMR emr ;RECTL rclBounds ;LONG xDest ;LONG yDest ;LONG cxDest ;LONG cyDest ;DWORD dwRop ;LONG xSrc ;LONG ySrc ;XFORM xformSrc ;COLORREF crBkColorSrc ;DWORD iUsageSrc ;DWORD offBmiSrc ;DWORD cbBmiSrc ;DWORD offBitsSrc ;DWORD cbBitsSrc ;LONG cxSrc ;LONG cySrc ;}*PEMRTRANSPARENTBLT ;

WINBOOL wglCopyContext (HGLRC ,HGLRC ,UINT );
HGLRC wglCreateContext (HDC );
HGLRC wglCreateLayerContext (HDC ,int );
WINBOOL wglDeleteContext (HGLRC );
HGLRC wglGetCurrentContext (void );
HDC wglGetCurrentDC (void );
PROC wglGetProcAddress (LPCSTR );
WINBOOL wglMakeCurrent (HDC ,HGLRC );
WINBOOL wglShareLists (HGLRC ,HGLRC );
WINBOOL wglUseFontBitmapsA (HDC ,DWORD ,DWORD ,DWORD );
WINBOOL wglUseFontBitmapsW (HDC ,DWORD ,DWORD ,DWORD );
WINBOOL SwapBuffers (HDC );
typedef struct _POINTFLOAT {FLOAT x ;FLOAT y ;}POINTFLOAT ;
typedef struct _POINTFLOAT {FLOAT x ;FLOAT y ;}*PPOINTFLOAT ;

typedef struct _GLYPHMETRICSFLOAT {FLOAT gmfBlackBoxX ;FLOAT gmfBlackBoxY ;POINTFLOAT gmfptGlyphOrigin ;FLOAT gmfCellIncX ;FLOAT gmfCellIncY ;}GLYPHMETRICSFLOAT ;
typedef struct _GLYPHMETRICSFLOAT {FLOAT gmfBlackBoxX ;FLOAT gmfBlackBoxY ;POINTFLOAT gmfptGlyphOrigin ;FLOAT gmfCellIncX ;FLOAT gmfCellIncY ;}*PGLYPHMETRICSFLOAT ;
typedef struct _GLYPHMETRICSFLOAT {FLOAT gmfBlackBoxX ;FLOAT gmfBlackBoxY ;POINTFLOAT gmfptGlyphOrigin ;FLOAT gmfCellIncX ;FLOAT gmfCellIncY ;}*LPGLYPHMETRICSFLOAT ;

WINBOOL wglUseFontOutlinesA (HDC ,DWORD ,DWORD ,DWORD ,FLOAT ,FLOAT ,int ,LPGLYPHMETRICSFLOAT );
WINBOOL wglUseFontOutlinesW (HDC ,DWORD ,DWORD ,DWORD ,FLOAT ,FLOAT ,int ,LPGLYPHMETRICSFLOAT );
typedef struct tagLAYERPLANEDESCRIPTOR {WORD nSize ;WORD nVersion ;DWORD dwFlags ;BYTE iPixelType ;BYTE cColorBits ;BYTE cRedBits ;BYTE cRedShift ;BYTE cGreenBits ;BYTE cGreenShift ;BYTE cBlueBits ;BYTE cBlueShift ;BYTE cAlphaBits ;BYTE cAlphaShift ;BYTE cAccumBits ;BYTE cAccumRedBits ;BYTE cAccumGreenBits ;BYTE cAccumBlueBits ;BYTE cAccumAlphaBits ;BYTE cDepthBits ;BYTE cStencilBits ;BYTE cAuxBuffers ;BYTE iLayerPlane ;BYTE bReserved ;COLORREF crTransparent ;}LAYERPLANEDESCRIPTOR ;
typedef struct tagLAYERPLANEDESCRIPTOR {WORD nSize ;WORD nVersion ;DWORD dwFlags ;BYTE iPixelType ;BYTE cColorBits ;BYTE cRedBits ;BYTE cRedShift ;BYTE cGreenBits ;BYTE cGreenShift ;BYTE cBlueBits ;BYTE cBlueShift ;BYTE cAlphaBits ;BYTE cAlphaShift ;BYTE cAccumBits ;BYTE cAccumRedBits ;BYTE cAccumGreenBits ;BYTE cAccumBlueBits ;BYTE cAccumAlphaBits ;BYTE cDepthBits ;BYTE cStencilBits ;BYTE cAuxBuffers ;BYTE iLayerPlane ;BYTE bReserved ;COLORREF crTransparent ;}*PLAYERPLANEDESCRIPTOR ;
typedef struct tagLAYERPLANEDESCRIPTOR {WORD nSize ;WORD nVersion ;DWORD dwFlags ;BYTE iPixelType ;BYTE cColorBits ;BYTE cRedBits ;BYTE cRedShift ;BYTE cGreenBits ;BYTE cGreenShift ;BYTE cBlueBits ;BYTE cBlueShift ;BYTE cAlphaBits ;BYTE cAlphaShift ;BYTE cAccumBits ;BYTE cAccumRedBits ;BYTE cAccumGreenBits ;BYTE cAccumBlueBits ;BYTE cAccumAlphaBits ;BYTE cDepthBits ;BYTE cStencilBits ;BYTE cAuxBuffers ;BYTE iLayerPlane ;BYTE bReserved ;COLORREF crTransparent ;}*LPLAYERPLANEDESCRIPTOR ;

WINBOOL wglDescribeLayerPlane (HDC ,int ,int ,UINT ,LPLAYERPLANEDESCRIPTOR );
int wglSetLayerPaletteEntries (HDC ,int ,int ,int ,const COLORREF *);
int wglGetLayerPaletteEntries (HDC ,int ,int ,int ,COLORREF *);
WINBOOL wglRealizeLayerPalette (HDC ,int ,WINBOOL );
WINBOOL wglSwapLayerBuffers (HDC ,UINT );
typedef struct _WGLSWAP {HDC hdc ;UINT uiFlags ;}WGLSWAP ;
typedef struct _WGLSWAP {HDC hdc ;UINT uiFlags ;}*PWGLSWAP ;
typedef struct _WGLSWAP {HDC hdc ;UINT uiFlags ;}*LPWGLSWAP ;

DWORD wglSwapMultipleBuffers (UINT ,const WGLSWAP *);
// m:\mingw\x86_64-w64-mingw32\include\winuser.h

typedef HANDLE HDWP ;
typedef void MENUTEMPLATEA ;
typedef void MENUTEMPLATEW ;
typedef PVOID LPMENUTEMPLATEA ;
typedef PVOID LPMENUTEMPLATEW ;
typedef MENUTEMPLATEA MENUTEMPLATE ;
typedef LPMENUTEMPLATEA LPMENUTEMPLATE ;
typedef LRESULT (*WNDPROC )(HWND ,UINT ,WPARAM ,LPARAM );
typedef INT_PTR (*DLGPROC )(HWND ,UINT ,WPARAM ,LPARAM );
typedef void (*TIMERPROC )(HWND ,UINT ,UINT_PTR ,DWORD );
typedef WINBOOL (*GRAYSTRINGPROC )(HDC ,LPARAM ,int );
typedef WINBOOL (*WNDENUMPROC )(HWND ,LPARAM );
typedef LRESULT (*HOOKPROC )(int code ,WPARAM wParam ,LPARAM lParam );
typedef void (*SENDASYNCPROC )(HWND ,UINT ,ULONG_PTR ,LRESULT );
typedef WINBOOL (*PROPENUMPROCA )(HWND ,LPCSTR ,HANDLE );
typedef WINBOOL (*PROPENUMPROCW )(HWND ,LPCWSTR ,HANDLE );
typedef WINBOOL (*PROPENUMPROCEXA )(HWND ,LPSTR ,HANDLE ,ULONG_PTR );
typedef WINBOOL (*PROPENUMPROCEXW )(HWND ,LPWSTR ,HANDLE ,ULONG_PTR );
typedef int (*EDITWORDBREAKPROCA )(LPSTR lpch ,int ichCurrent ,int cch ,int code );
typedef int (*EDITWORDBREAKPROCW )(LPWSTR lpch ,int ichCurrent ,int cch ,int code );
typedef WINBOOL (*DRAWSTATEPROC )(HDC hdc ,LPARAM lData ,WPARAM wData ,int cx ,int cy );
typedef PROPENUMPROCA PROPENUMPROC ;
typedef PROPENUMPROCEXA PROPENUMPROCEX ;
typedef EDITWORDBREAKPROCA EDITWORDBREAKPROC ;
typedef WINBOOL (*NAMEENUMPROCA )(LPSTR ,LPARAM );
typedef WINBOOL (*NAMEENUMPROCW )(LPWSTR ,LPARAM );
typedef NAMEENUMPROCA WINSTAENUMPROCA ;
typedef NAMEENUMPROCW WINSTAENUMPROCW ;
typedef NAMEENUMPROCA DESKTOPENUMPROCA ;
typedef NAMEENUMPROCW DESKTOPENUMPROCW ;
typedef WINSTAENUMPROCA WINSTAENUMPROC ;
typedef DESKTOPENUMPROCA DESKTOPENUMPROC ;
int wvsprintfA (LPSTR ,LPCSTR ,va_list arglist );
int wvsprintfW (LPWSTR ,LPCWSTR ,va_list arglist );
int wsprintfA (LPSTR ,LPCSTR ,...);
int wsprintfW (LPWSTR ,LPCWSTR ,...);
typedef struct tagCBT_CREATEWNDA {struct tagCREATESTRUCTA *lpcs ;HWND hwndInsertAfter ;}CBT_CREATEWNDA ;
typedef struct tagCBT_CREATEWNDA {struct tagCREATESTRUCTA *lpcs ;HWND hwndInsertAfter ;}*LPCBT_CREATEWNDA ;

typedef struct tagCBT_CREATEWNDW {struct tagCREATESTRUCTW *lpcs ;HWND hwndInsertAfter ;}CBT_CREATEWNDW ;
typedef struct tagCBT_CREATEWNDW {struct tagCREATESTRUCTW *lpcs ;HWND hwndInsertAfter ;}*LPCBT_CREATEWNDW ;

typedef CBT_CREATEWNDA CBT_CREATEWND ;
typedef LPCBT_CREATEWNDA LPCBT_CREATEWND ;
typedef struct tagCBTACTIVATESTRUCT {WINBOOL fMouse ;HWND hWndActive ;}CBTACTIVATESTRUCT ;
typedef struct tagCBTACTIVATESTRUCT {WINBOOL fMouse ;HWND hWndActive ;}*LPCBTACTIVATESTRUCT ;

typedef struct tagWTSSESSION_NOTIFICATION {DWORD cbSize ;DWORD dwSessionId ;}WTSSESSION_NOTIFICATION ;
typedef struct tagWTSSESSION_NOTIFICATION {DWORD cbSize ;DWORD dwSessionId ;}*PWTSSESSION_NOTIFICATION ;

typedef struct {HWND hwnd ;RECT rc ;}SHELLHOOKINFO ;
typedef struct {HWND hwnd ;RECT rc ;}*LPSHELLHOOKINFO ;

typedef struct tagEVENTMSG {UINT message ;UINT paramL ;UINT paramH ;DWORD time ;HWND hwnd ;}EVENTMSG ;
typedef struct tagEVENTMSG {UINT message ;UINT paramL ;UINT paramH ;DWORD time ;HWND hwnd ;}*PEVENTMSGMSG ;
typedef struct tagEVENTMSG {UINT message ;UINT paramL ;UINT paramH ;DWORD time ;HWND hwnd ;}*NPEVENTMSGMSG ;
typedef struct tagEVENTMSG {UINT message ;UINT paramL ;UINT paramH ;DWORD time ;HWND hwnd ;}*LPEVENTMSGMSG ;

typedef struct tagEVENTMSG *PEVENTMSG ;
typedef struct tagEVENTMSG *NPEVENTMSG ;
typedef struct tagEVENTMSG *LPEVENTMSG ;

typedef struct tagCWPSTRUCT {LPARAM lParam ;WPARAM wParam ;UINT message ;HWND hwnd ;}CWPSTRUCT ;
typedef struct tagCWPSTRUCT {LPARAM lParam ;WPARAM wParam ;UINT message ;HWND hwnd ;}*PCWPSTRUCT ;
typedef struct tagCWPSTRUCT {LPARAM lParam ;WPARAM wParam ;UINT message ;HWND hwnd ;}*NPCWPSTRUCT ;
typedef struct tagCWPSTRUCT {LPARAM lParam ;WPARAM wParam ;UINT message ;HWND hwnd ;}*LPCWPSTRUCT ;

typedef struct tagCWPRETSTRUCT {LRESULT lResult ;LPARAM lParam ;WPARAM wParam ;UINT message ;HWND hwnd ;}CWPRETSTRUCT ;
typedef struct tagCWPRETSTRUCT {LRESULT lResult ;LPARAM lParam ;WPARAM wParam ;UINT message ;HWND hwnd ;}*PCWPRETSTRUCT ;
typedef struct tagCWPRETSTRUCT {LRESULT lResult ;LPARAM lParam ;WPARAM wParam ;UINT message ;HWND hwnd ;}*NPCWPRETSTRUCT ;
typedef struct tagCWPRETSTRUCT {LRESULT lResult ;LPARAM lParam ;WPARAM wParam ;UINT message ;HWND hwnd ;}*LPCWPRETSTRUCT ;

typedef struct tagKBDLLHOOKSTRUCT {DWORD vkCode ;DWORD scanCode ;DWORD flags ;DWORD time ;ULONG_PTR dwExtraInfo ;}KBDLLHOOKSTRUCT ;
typedef struct tagKBDLLHOOKSTRUCT {DWORD vkCode ;DWORD scanCode ;DWORD flags ;DWORD time ;ULONG_PTR dwExtraInfo ;}*LPKBDLLHOOKSTRUCT ;
typedef struct tagKBDLLHOOKSTRUCT {DWORD vkCode ;DWORD scanCode ;DWORD flags ;DWORD time ;ULONG_PTR dwExtraInfo ;}*PKBDLLHOOKSTRUCT ;

typedef struct tagMSLLHOOKSTRUCT {POINT pt ;DWORD mouseData ;DWORD flags ;DWORD time ;ULONG_PTR dwExtraInfo ;}MSLLHOOKSTRUCT ;
typedef struct tagMSLLHOOKSTRUCT {POINT pt ;DWORD mouseData ;DWORD flags ;DWORD time ;ULONG_PTR dwExtraInfo ;}*LPMSLLHOOKSTRUCT ;
typedef struct tagMSLLHOOKSTRUCT {POINT pt ;DWORD mouseData ;DWORD flags ;DWORD time ;ULONG_PTR dwExtraInfo ;}*PMSLLHOOKSTRUCT ;

typedef struct tagDEBUGHOOKINFO {DWORD idThread ;DWORD idThreadInstaller ;LPARAM lParam ;WPARAM wParam ;int code ;}DEBUGHOOKINFO ;
typedef struct tagDEBUGHOOKINFO {DWORD idThread ;DWORD idThreadInstaller ;LPARAM lParam ;WPARAM wParam ;int code ;}*PDEBUGHOOKINFO ;
typedef struct tagDEBUGHOOKINFO {DWORD idThread ;DWORD idThreadInstaller ;LPARAM lParam ;WPARAM wParam ;int code ;}*NPDEBUGHOOKINFO ;
typedef struct tagDEBUGHOOKINFO {DWORD idThread ;DWORD idThreadInstaller ;LPARAM lParam ;WPARAM wParam ;int code ;}*LPDEBUGHOOKINFO ;

typedef struct tagMOUSEHOOKSTRUCT {POINT pt ;HWND hwnd ;UINT wHitTestCode ;ULONG_PTR dwExtraInfo ;}MOUSEHOOKSTRUCT ;
typedef struct tagMOUSEHOOKSTRUCT {POINT pt ;HWND hwnd ;UINT wHitTestCode ;ULONG_PTR dwExtraInfo ;}*LPMOUSEHOOKSTRUCT ;
typedef struct tagMOUSEHOOKSTRUCT {POINT pt ;HWND hwnd ;UINT wHitTestCode ;ULONG_PTR dwExtraInfo ;}*PMOUSEHOOKSTRUCT ;

typedef struct tagMOUSEHOOKSTRUCTEX {MOUSEHOOKSTRUCT __unnamed ;DWORD mouseData ;}MOUSEHOOKSTRUCTEX ;
typedef struct tagMOUSEHOOKSTRUCTEX {MOUSEHOOKSTRUCT __unnamed ;DWORD mouseData ;}*LPMOUSEHOOKSTRUCTEX ;
typedef struct tagMOUSEHOOKSTRUCTEX {MOUSEHOOKSTRUCT __unnamed ;DWORD mouseData ;}*PMOUSEHOOKSTRUCTEX ;

typedef struct tagHARDWAREHOOKSTRUCT {HWND hwnd ;UINT message ;WPARAM wParam ;LPARAM lParam ;}HARDWAREHOOKSTRUCT ;
typedef struct tagHARDWAREHOOKSTRUCT {HWND hwnd ;UINT message ;WPARAM wParam ;LPARAM lParam ;}*LPHARDWAREHOOKSTRUCT ;
typedef struct tagHARDWAREHOOKSTRUCT {HWND hwnd ;UINT message ;WPARAM wParam ;LPARAM lParam ;}*PHARDWAREHOOKSTRUCT ;

HKL LoadKeyboardLayoutA (LPCSTR pwszKLID ,UINT Flags );
HKL LoadKeyboardLayoutW (LPCWSTR pwszKLID ,UINT Flags );
HKL ActivateKeyboardLayout (HKL hkl ,UINT Flags );
int ToUnicodeEx (UINT wVirtKey ,UINT wScanCode ,const BYTE *lpKeyState ,LPWSTR pwszBuff ,int cchBuff ,UINT wFlags ,HKL dwhkl );
WINBOOL UnloadKeyboardLayout (HKL hkl );
WINBOOL GetKeyboardLayoutNameA (LPSTR pwszKLID );
WINBOOL GetKeyboardLayoutNameW (LPWSTR pwszKLID );
int GetKeyboardLayoutList (int nBuff ,HKL *lpList );
HKL GetKeyboardLayout (DWORD idThread );
typedef struct tagMOUSEMOVEPOINT {int x ;int y ;DWORD time ;ULONG_PTR dwExtraInfo ;}MOUSEMOVEPOINT ;
typedef struct tagMOUSEMOVEPOINT {int x ;int y ;DWORD time ;ULONG_PTR dwExtraInfo ;}*PMOUSEMOVEPOINT ;
typedef struct tagMOUSEMOVEPOINT {int x ;int y ;DWORD time ;ULONG_PTR dwExtraInfo ;}*LPMOUSEMOVEPOINT ;

int GetMouseMovePointsEx (UINT cbSize ,LPMOUSEMOVEPOINT lppt ,LPMOUSEMOVEPOINT lpptBuf ,int nBufPoints ,DWORD resolution );
HDESK CreateDesktopA (LPCSTR lpszDesktop ,LPCSTR lpszDevice ,LPDEVMODEA pDevmode ,DWORD dwFlags ,ACCESS_MASK dwDesiredAccess ,LPSECURITY_ATTRIBUTES lpsa );
HDESK CreateDesktopW (LPCWSTR lpszDesktop ,LPCWSTR lpszDevice ,LPDEVMODEW pDevmode ,DWORD dwFlags ,ACCESS_MASK dwDesiredAccess ,LPSECURITY_ATTRIBUTES lpsa );
HDESK CreateDesktopExA (LPCSTR lpszDesktop ,LPCSTR lpszDevice ,DEVMODEA *pDevmode ,DWORD dwFlags ,ACCESS_MASK dwDesiredAccess ,LPSECURITY_ATTRIBUTES lpsa ,ULONG ulHeapSize ,PVOID pvoid );
HDESK CreateDesktopExW (LPCWSTR lpszDesktop ,LPCWSTR lpszDevice ,DEVMODEW *pDevmode ,DWORD dwFlags ,ACCESS_MASK dwDesiredAccess ,LPSECURITY_ATTRIBUTES lpsa ,ULONG ulHeapSize ,PVOID pvoid );
HDESK OpenDesktopA (LPCSTR lpszDesktop ,DWORD dwFlags ,WINBOOL fInherit ,ACCESS_MASK dwDesiredAccess );
HDESK OpenDesktopW (LPCWSTR lpszDesktop ,DWORD dwFlags ,WINBOOL fInherit ,ACCESS_MASK dwDesiredAccess );
HDESK OpenInputDesktop (DWORD dwFlags ,WINBOOL fInherit ,ACCESS_MASK dwDesiredAccess );
WINBOOL EnumDesktopsA (HWINSTA hwinsta ,DESKTOPENUMPROCA lpEnumFunc ,LPARAM lParam );
WINBOOL EnumDesktopsW (HWINSTA hwinsta ,DESKTOPENUMPROCW lpEnumFunc ,LPARAM lParam );
WINBOOL EnumDesktopWindows (HDESK hDesktop ,WNDENUMPROC lpfn ,LPARAM lParam );
WINBOOL SwitchDesktop (HDESK hDesktop );
WINBOOL SetThreadDesktop (HDESK hDesktop );
WINBOOL CloseDesktop (HDESK hDesktop );
HDESK GetThreadDesktop (DWORD dwThreadId );
HWINSTA CreateWindowStationA (LPCSTR lpwinsta ,DWORD dwFlags ,ACCESS_MASK dwDesiredAccess ,LPSECURITY_ATTRIBUTES lpsa );
HWINSTA CreateWindowStationW (LPCWSTR lpwinsta ,DWORD dwFlags ,ACCESS_MASK dwDesiredAccess ,LPSECURITY_ATTRIBUTES lpsa );
HWINSTA OpenWindowStationA (LPCSTR lpszWinSta ,WINBOOL fInherit ,ACCESS_MASK dwDesiredAccess );
HWINSTA OpenWindowStationW (LPCWSTR lpszWinSta ,WINBOOL fInherit ,ACCESS_MASK dwDesiredAccess );
WINBOOL EnumWindowStationsA (WINSTAENUMPROCA lpEnumFunc ,LPARAM lParam );
WINBOOL EnumWindowStationsW (WINSTAENUMPROCW lpEnumFunc ,LPARAM lParam );
WINBOOL CloseWindowStation (HWINSTA hWinSta );
WINBOOL SetProcessWindowStation (HWINSTA hWinSta );
HWINSTA GetProcessWindowStation (void );
WINBOOL SetUserObjectSecurity (HANDLE hObj ,PSECURITY_INFORMATION pSIRequested ,PSECURITY_DESCRIPTOR pSID );
WINBOOL GetUserObjectSecurity (HANDLE hObj ,PSECURITY_INFORMATION pSIRequested ,PSECURITY_DESCRIPTOR pSID ,DWORD nLength ,LPDWORD lpnLengthNeeded );
typedef struct tagUSEROBJECTFLAGS {WINBOOL fInherit ;WINBOOL fReserved ;DWORD dwFlags ;}USEROBJECTFLAGS ;
typedef struct tagUSEROBJECTFLAGS {WINBOOL fInherit ;WINBOOL fReserved ;DWORD dwFlags ;}*PUSEROBJECTFLAGS ;

WINBOOL GetUserObjectInformationA (HANDLE hObj ,int nIndex ,PVOID pvInfo ,DWORD nLength ,LPDWORD lpnLengthNeeded );
WINBOOL GetUserObjectInformationW (HANDLE hObj ,int nIndex ,PVOID pvInfo ,DWORD nLength ,LPDWORD lpnLengthNeeded );
WINBOOL SetUserObjectInformationA (HANDLE hObj ,int nIndex ,PVOID pvInfo ,DWORD nLength );
WINBOOL SetUserObjectInformationW (HANDLE hObj ,int nIndex ,PVOID pvInfo ,DWORD nLength );
typedef struct tagWNDCLASSEXA {UINT cbSize ;UINT style ;WNDPROC lpfnWndProc ;int cbClsExtra ;int cbWndExtra ;HINSTANCE hInstance ;HICON hIcon ;HCURSOR hCursor ;HBRUSH hbrBackground ;LPCSTR lpszMenuName ;LPCSTR lpszClassName ;HICON hIconSm ;}WNDCLASSEXA ;
typedef struct tagWNDCLASSEXA {UINT cbSize ;UINT style ;WNDPROC lpfnWndProc ;int cbClsExtra ;int cbWndExtra ;HINSTANCE hInstance ;HICON hIcon ;HCURSOR hCursor ;HBRUSH hbrBackground ;LPCSTR lpszMenuName ;LPCSTR lpszClassName ;HICON hIconSm ;}*PWNDCLASSEXA ;
typedef struct tagWNDCLASSEXA {UINT cbSize ;UINT style ;WNDPROC lpfnWndProc ;int cbClsExtra ;int cbWndExtra ;HINSTANCE hInstance ;HICON hIcon ;HCURSOR hCursor ;HBRUSH hbrBackground ;LPCSTR lpszMenuName ;LPCSTR lpszClassName ;HICON hIconSm ;}*NPWNDCLASSEXA ;
typedef struct tagWNDCLASSEXA {UINT cbSize ;UINT style ;WNDPROC lpfnWndProc ;int cbClsExtra ;int cbWndExtra ;HINSTANCE hInstance ;HICON hIcon ;HCURSOR hCursor ;HBRUSH hbrBackground ;LPCSTR lpszMenuName ;LPCSTR lpszClassName ;HICON hIconSm ;}*LPWNDCLASSEXA ;

typedef struct tagWNDCLASSEXW {UINT cbSize ;UINT style ;WNDPROC lpfnWndProc ;int cbClsExtra ;int cbWndExtra ;HINSTANCE hInstance ;HICON hIcon ;HCURSOR hCursor ;HBRUSH hbrBackground ;LPCWSTR lpszMenuName ;LPCWSTR lpszClassName ;HICON hIconSm ;}WNDCLASSEXW ;
typedef struct tagWNDCLASSEXW {UINT cbSize ;UINT style ;WNDPROC lpfnWndProc ;int cbClsExtra ;int cbWndExtra ;HINSTANCE hInstance ;HICON hIcon ;HCURSOR hCursor ;HBRUSH hbrBackground ;LPCWSTR lpszMenuName ;LPCWSTR lpszClassName ;HICON hIconSm ;}*PWNDCLASSEXW ;
typedef struct tagWNDCLASSEXW {UINT cbSize ;UINT style ;WNDPROC lpfnWndProc ;int cbClsExtra ;int cbWndExtra ;HINSTANCE hInstance ;HICON hIcon ;HCURSOR hCursor ;HBRUSH hbrBackground ;LPCWSTR lpszMenuName ;LPCWSTR lpszClassName ;HICON hIconSm ;}*NPWNDCLASSEXW ;
typedef struct tagWNDCLASSEXW {UINT cbSize ;UINT style ;WNDPROC lpfnWndProc ;int cbClsExtra ;int cbWndExtra ;HINSTANCE hInstance ;HICON hIcon ;HCURSOR hCursor ;HBRUSH hbrBackground ;LPCWSTR lpszMenuName ;LPCWSTR lpszClassName ;HICON hIconSm ;}*LPWNDCLASSEXW ;

typedef WNDCLASSEXA WNDCLASSEX ;
typedef PWNDCLASSEXA PWNDCLASSEX ;
typedef NPWNDCLASSEXA NPWNDCLASSEX ;
typedef LPWNDCLASSEXA LPWNDCLASSEX ;
typedef struct tagWNDCLASSA {UINT style ;WNDPROC lpfnWndProc ;int cbClsExtra ;int cbWndExtra ;HINSTANCE hInstance ;HICON hIcon ;HCURSOR hCursor ;HBRUSH hbrBackground ;LPCSTR lpszMenuName ;LPCSTR lpszClassName ;}WNDCLASSA ;
typedef struct tagWNDCLASSA {UINT style ;WNDPROC lpfnWndProc ;int cbClsExtra ;int cbWndExtra ;HINSTANCE hInstance ;HICON hIcon ;HCURSOR hCursor ;HBRUSH hbrBackground ;LPCSTR lpszMenuName ;LPCSTR lpszClassName ;}*PWNDCLASSA ;
typedef struct tagWNDCLASSA {UINT style ;WNDPROC lpfnWndProc ;int cbClsExtra ;int cbWndExtra ;HINSTANCE hInstance ;HICON hIcon ;HCURSOR hCursor ;HBRUSH hbrBackground ;LPCSTR lpszMenuName ;LPCSTR lpszClassName ;}*NPWNDCLASSA ;
typedef struct tagWNDCLASSA {UINT style ;WNDPROC lpfnWndProc ;int cbClsExtra ;int cbWndExtra ;HINSTANCE hInstance ;HICON hIcon ;HCURSOR hCursor ;HBRUSH hbrBackground ;LPCSTR lpszMenuName ;LPCSTR lpszClassName ;}*LPWNDCLASSA ;

typedef struct tagWNDCLASSW {UINT style ;WNDPROC lpfnWndProc ;int cbClsExtra ;int cbWndExtra ;HINSTANCE hInstance ;HICON hIcon ;HCURSOR hCursor ;HBRUSH hbrBackground ;LPCWSTR lpszMenuName ;LPCWSTR lpszClassName ;}WNDCLASSW ;
typedef struct tagWNDCLASSW {UINT style ;WNDPROC lpfnWndProc ;int cbClsExtra ;int cbWndExtra ;HINSTANCE hInstance ;HICON hIcon ;HCURSOR hCursor ;HBRUSH hbrBackground ;LPCWSTR lpszMenuName ;LPCWSTR lpszClassName ;}*PWNDCLASSW ;
typedef struct tagWNDCLASSW {UINT style ;WNDPROC lpfnWndProc ;int cbClsExtra ;int cbWndExtra ;HINSTANCE hInstance ;HICON hIcon ;HCURSOR hCursor ;HBRUSH hbrBackground ;LPCWSTR lpszMenuName ;LPCWSTR lpszClassName ;}*NPWNDCLASSW ;
typedef struct tagWNDCLASSW {UINT style ;WNDPROC lpfnWndProc ;int cbClsExtra ;int cbWndExtra ;HINSTANCE hInstance ;HICON hIcon ;HCURSOR hCursor ;HBRUSH hbrBackground ;LPCWSTR lpszMenuName ;LPCWSTR lpszClassName ;}*LPWNDCLASSW ;

typedef WNDCLASSA WNDCLASS ;
typedef PWNDCLASSA PWNDCLASS ;
typedef NPWNDCLASSA NPWNDCLASS ;
typedef LPWNDCLASSA LPWNDCLASS ;
WINBOOL IsHungAppWindow (HWND hwnd );
void DisableProcessWindowsGhosting (void );
typedef struct tagMSG {HWND hwnd ;UINT message ;WPARAM wParam ;LPARAM lParam ;DWORD time ;POINT pt ;}MSG ;
typedef struct tagMSG {HWND hwnd ;UINT message ;WPARAM wParam ;LPARAM lParam ;DWORD time ;POINT pt ;}*PMSG ;
typedef struct tagMSG {HWND hwnd ;UINT message ;WPARAM wParam ;LPARAM lParam ;DWORD time ;POINT pt ;}*NPMSG ;
typedef struct tagMSG {HWND hwnd ;UINT message ;WPARAM wParam ;LPARAM lParam ;DWORD time ;POINT pt ;}*LPMSG ;

typedef struct tagMINMAXINFO {POINT ptReserved ;POINT ptMaxSize ;POINT ptMaxPosition ;POINT ptMinTrackSize ;POINT ptMaxTrackSize ;}MINMAXINFO ;
typedef struct tagMINMAXINFO {POINT ptReserved ;POINT ptMaxSize ;POINT ptMaxPosition ;POINT ptMinTrackSize ;POINT ptMaxTrackSize ;}*PMINMAXINFO ;
typedef struct tagMINMAXINFO {POINT ptReserved ;POINT ptMaxSize ;POINT ptMaxPosition ;POINT ptMinTrackSize ;POINT ptMaxTrackSize ;}*LPMINMAXINFO ;

typedef struct tagCOPYDATASTRUCT {ULONG_PTR dwData ;DWORD cbData ;PVOID lpData ;}COPYDATASTRUCT ;
typedef struct tagCOPYDATASTRUCT {ULONG_PTR dwData ;DWORD cbData ;PVOID lpData ;}*PCOPYDATASTRUCT ;

typedef struct tagMDINEXTMENU {HMENU hmenuIn ;HMENU hmenuNext ;HWND hwndNext ;}MDINEXTMENU ;
typedef struct tagMDINEXTMENU {HMENU hmenuIn ;HMENU hmenuNext ;HWND hwndNext ;}*PMDINEXTMENU ;
typedef struct tagMDINEXTMENU {HMENU hmenuIn ;HMENU hmenuNext ;HWND hwndNext ;}*LPMDINEXTMENU ;

typedef struct {GUID PowerSetting ;DWORD DataLength ;UCHAR Data [1 ];}POWERBROADCAST_SETTING ;
typedef struct {GUID PowerSetting ;DWORD DataLength ;UCHAR Data [1 ];}*PPOWERBROADCAST_SETTING ;

UINT RegisterWindowMessageA (LPCSTR lpString );
UINT RegisterWindowMessageW (LPCWSTR lpString );
typedef struct tagWINDOWPOS {HWND hwnd ;HWND hwndInsertAfter ;int x ;int y ;int cx ;int cy ;UINT flags ;}WINDOWPOS ;
typedef struct tagWINDOWPOS {HWND hwnd ;HWND hwndInsertAfter ;int x ;int y ;int cx ;int cy ;UINT flags ;}*LPWINDOWPOS ;
typedef struct tagWINDOWPOS {HWND hwnd ;HWND hwndInsertAfter ;int x ;int y ;int cx ;int cy ;UINT flags ;}*PWINDOWPOS ;

typedef struct tagNCCALCSIZE_PARAMS {RECT rgrc [3 ];PWINDOWPOS lppos ;}NCCALCSIZE_PARAMS ;
typedef struct tagNCCALCSIZE_PARAMS {RECT rgrc [3 ];PWINDOWPOS lppos ;}*LPNCCALCSIZE_PARAMS ;

typedef struct tagTRACKMOUSEEVENT {DWORD cbSize ;DWORD dwFlags ;HWND hwndTrack ;DWORD dwHoverTime ;}TRACKMOUSEEVENT ;
typedef struct tagTRACKMOUSEEVENT {DWORD cbSize ;DWORD dwFlags ;HWND hwndTrack ;DWORD dwHoverTime ;}*LPTRACKMOUSEEVENT ;

WINBOOL TrackMouseEvent (LPTRACKMOUSEEVENT lpEventTrack );
WINBOOL DrawEdge (HDC hdc ,LPRECT qrc ,UINT edge ,UINT grfFlags );
WINBOOL DrawFrameControl (HDC ,LPRECT ,UINT ,UINT );
WINBOOL DrawCaption (HWND hwnd ,HDC hdc ,const RECT *lprect ,UINT flags );
WINBOOL DrawAnimatedRects (HWND hwnd ,int idAni ,const RECT *lprcFrom ,const RECT *lprcTo );
typedef struct tagACCEL {BYTE fVirt ;WORD key ;WORD cmd ;}ACCEL ;
typedef struct tagACCEL {BYTE fVirt ;WORD key ;WORD cmd ;}*LPACCEL ;

typedef struct tagPAINTSTRUCT {HDC hdc ;WINBOOL fErase ;RECT rcPaint ;WINBOOL fRestore ;WINBOOL fIncUpdate ;BYTE rgbReserved [32 ];}PAINTSTRUCT ;
typedef struct tagPAINTSTRUCT {HDC hdc ;WINBOOL fErase ;RECT rcPaint ;WINBOOL fRestore ;WINBOOL fIncUpdate ;BYTE rgbReserved [32 ];}*PPAINTSTRUCT ;
typedef struct tagPAINTSTRUCT {HDC hdc ;WINBOOL fErase ;RECT rcPaint ;WINBOOL fRestore ;WINBOOL fIncUpdate ;BYTE rgbReserved [32 ];}*NPPAINTSTRUCT ;
typedef struct tagPAINTSTRUCT {HDC hdc ;WINBOOL fErase ;RECT rcPaint ;WINBOOL fRestore ;WINBOOL fIncUpdate ;BYTE rgbReserved [32 ];}*LPPAINTSTRUCT ;

typedef struct tagCREATESTRUCTA {LPVOID lpCreateParams ;HINSTANCE hInstance ;HMENU hMenu ;HWND hwndParent ;int cy ;int cx ;int y ;int x ;LONG style ;LPCSTR lpszName ;LPCSTR lpszClass ;DWORD dwExStyle ;}CREATESTRUCTA ;
typedef struct tagCREATESTRUCTA {LPVOID lpCreateParams ;HINSTANCE hInstance ;HMENU hMenu ;HWND hwndParent ;int cy ;int cx ;int y ;int x ;LONG style ;LPCSTR lpszName ;LPCSTR lpszClass ;DWORD dwExStyle ;}*LPCREATESTRUCTA ;

typedef struct tagCREATESTRUCTW {LPVOID lpCreateParams ;HINSTANCE hInstance ;HMENU hMenu ;HWND hwndParent ;int cy ;int cx ;int y ;int x ;LONG style ;LPCWSTR lpszName ;LPCWSTR lpszClass ;DWORD dwExStyle ;}CREATESTRUCTW ;
typedef struct tagCREATESTRUCTW {LPVOID lpCreateParams ;HINSTANCE hInstance ;HMENU hMenu ;HWND hwndParent ;int cy ;int cx ;int y ;int x ;LONG style ;LPCWSTR lpszName ;LPCWSTR lpszClass ;DWORD dwExStyle ;}*LPCREATESTRUCTW ;

typedef CREATESTRUCTA CREATESTRUCT ;
typedef LPCREATESTRUCTA LPCREATESTRUCT ;
typedef struct tagWINDOWPLACEMENT {UINT length ;UINT flags ;UINT showCmd ;POINT ptMinPosition ;POINT ptMaxPosition ;RECT rcNormalPosition ;}WINDOWPLACEMENT ;
typedef WINDOWPLACEMENT *PWINDOWPLACEMENT ;
typedef WINDOWPLACEMENT *LPWINDOWPLACEMENT ;

typedef struct tagNMHDR {HWND hwndFrom ;UINT_PTR idFrom ;UINT code ;}NMHDR ;
typedef NMHDR *LPNMHDR ;
typedef struct tagSTYLESTRUCT {DWORD styleOld ;DWORD styleNew ;}STYLESTRUCT ;
typedef struct tagSTYLESTRUCT {DWORD styleOld ;DWORD styleNew ;}*LPSTYLESTRUCT ;

typedef struct tagMEASUREITEMSTRUCT {UINT CtlType ;UINT CtlID ;UINT itemID ;UINT itemWidth ;UINT itemHeight ;ULONG_PTR itemData ;}MEASUREITEMSTRUCT ;
typedef struct tagMEASUREITEMSTRUCT {UINT CtlType ;UINT CtlID ;UINT itemID ;UINT itemWidth ;UINT itemHeight ;ULONG_PTR itemData ;}*PMEASUREITEMSTRUCT ;
typedef struct tagMEASUREITEMSTRUCT {UINT CtlType ;UINT CtlID ;UINT itemID ;UINT itemWidth ;UINT itemHeight ;ULONG_PTR itemData ;}*LPMEASUREITEMSTRUCT ;

typedef struct tagDRAWITEMSTRUCT {UINT CtlType ;UINT CtlID ;UINT itemID ;UINT itemAction ;UINT itemState ;HWND hwndItem ;HDC hDC ;RECT rcItem ;ULONG_PTR itemData ;}DRAWITEMSTRUCT ;
typedef struct tagDRAWITEMSTRUCT {UINT CtlType ;UINT CtlID ;UINT itemID ;UINT itemAction ;UINT itemState ;HWND hwndItem ;HDC hDC ;RECT rcItem ;ULONG_PTR itemData ;}*PDRAWITEMSTRUCT ;
typedef struct tagDRAWITEMSTRUCT {UINT CtlType ;UINT CtlID ;UINT itemID ;UINT itemAction ;UINT itemState ;HWND hwndItem ;HDC hDC ;RECT rcItem ;ULONG_PTR itemData ;}*LPDRAWITEMSTRUCT ;

typedef struct tagDELETEITEMSTRUCT {UINT CtlType ;UINT CtlID ;UINT itemID ;HWND hwndItem ;ULONG_PTR itemData ;}DELETEITEMSTRUCT ;
typedef struct tagDELETEITEMSTRUCT {UINT CtlType ;UINT CtlID ;UINT itemID ;HWND hwndItem ;ULONG_PTR itemData ;}*PDELETEITEMSTRUCT ;
typedef struct tagDELETEITEMSTRUCT {UINT CtlType ;UINT CtlID ;UINT itemID ;HWND hwndItem ;ULONG_PTR itemData ;}*LPDELETEITEMSTRUCT ;

typedef struct tagCOMPAREITEMSTRUCT {UINT CtlType ;UINT CtlID ;HWND hwndItem ;UINT itemID1 ;ULONG_PTR itemData1 ;UINT itemID2 ;ULONG_PTR itemData2 ;DWORD dwLocaleId ;}COMPAREITEMSTRUCT ;
typedef struct tagCOMPAREITEMSTRUCT {UINT CtlType ;UINT CtlID ;HWND hwndItem ;UINT itemID1 ;ULONG_PTR itemData1 ;UINT itemID2 ;ULONG_PTR itemData2 ;DWORD dwLocaleId ;}*PCOMPAREITEMSTRUCT ;
typedef struct tagCOMPAREITEMSTRUCT {UINT CtlType ;UINT CtlID ;HWND hwndItem ;UINT itemID1 ;ULONG_PTR itemData1 ;UINT itemID2 ;ULONG_PTR itemData2 ;DWORD dwLocaleId ;}*LPCOMPAREITEMSTRUCT ;

WINBOOL GetMessageA (LPMSG lpMsg ,HWND hWnd ,UINT wMsgFilterMin ,UINT wMsgFilterMax );
WINBOOL GetMessageW (LPMSG lpMsg ,HWND hWnd ,UINT wMsgFilterMin ,UINT wMsgFilterMax );
WINBOOL TranslateMessage (const MSG *lpMsg );
LRESULT DispatchMessageA (const MSG *lpMsg );
LRESULT DispatchMessageW (const MSG *lpMsg );
WINBOOL SetMessageQueue (int cMessagesMax );
WINBOOL PeekMessageA (LPMSG lpMsg ,HWND hWnd ,UINT wMsgFilterMin ,UINT wMsgFilterMax ,UINT wRemoveMsg );
WINBOOL PeekMessageW (LPMSG lpMsg ,HWND hWnd ,UINT wMsgFilterMin ,UINT wMsgFilterMax ,UINT wRemoveMsg );
WINBOOL RegisterHotKey (HWND hWnd ,int id ,UINT fsModifiers ,UINT vk );
WINBOOL UnregisterHotKey (HWND hWnd ,int id );
WINBOOL ExitWindowsEx (UINT uFlags ,DWORD dwReason );
WINBOOL SwapMouseButton (WINBOOL fSwap );
DWORD GetMessagePos (void );
LONG GetMessageTime (void );
LPARAM GetMessageExtraInfo (void );
WINBOOL IsWow64Message (void );
LPARAM SetMessageExtraInfo (LPARAM lParam );
LRESULT SendMessageA (HWND hWnd ,UINT Msg ,WPARAM wParam ,LPARAM lParam );
LRESULT SendMessageW (HWND hWnd ,UINT Msg ,WPARAM wParam ,LPARAM lParam );
LRESULT SendMessageTimeoutA (HWND hWnd ,UINT Msg ,WPARAM wParam ,LPARAM lParam ,UINT fuFlags ,UINT uTimeout ,PDWORD_PTR lpdwResult );
LRESULT SendMessageTimeoutW (HWND hWnd ,UINT Msg ,WPARAM wParam ,LPARAM lParam ,UINT fuFlags ,UINT uTimeout ,PDWORD_PTR lpdwResult );
WINBOOL SendNotifyMessageA (HWND hWnd ,UINT Msg ,WPARAM wParam ,LPARAM lParam );
WINBOOL SendNotifyMessageW (HWND hWnd ,UINT Msg ,WPARAM wParam ,LPARAM lParam );
WINBOOL SendMessageCallbackA (HWND hWnd ,UINT Msg ,WPARAM wParam ,LPARAM lParam ,SENDASYNCPROC lpResultCallBack ,ULONG_PTR dwData );
WINBOOL SendMessageCallbackW (HWND hWnd ,UINT Msg ,WPARAM wParam ,LPARAM lParam ,SENDASYNCPROC lpResultCallBack ,ULONG_PTR dwData );
typedef struct {UINT cbSize ;HDESK hdesk ;HWND hwnd ;LUID luid ;}BSMINFO ;
typedef struct {UINT cbSize ;HDESK hdesk ;HWND hwnd ;LUID luid ;}*PBSMINFO ;

long BroadcastSystemMessageExA (DWORD flags ,LPDWORD lpInfo ,UINT Msg ,WPARAM wParam ,LPARAM lParam ,PBSMINFO pbsmInfo );
long BroadcastSystemMessageExW (DWORD flags ,LPDWORD lpInfo ,UINT Msg ,WPARAM wParam ,LPARAM lParam ,PBSMINFO pbsmInfo );
long BroadcastSystemMessageA (DWORD flags ,LPDWORD lpInfo ,UINT Msg ,WPARAM wParam ,LPARAM lParam );
long BroadcastSystemMessageW (DWORD flags ,LPDWORD lpInfo ,UINT Msg ,WPARAM wParam ,LPARAM lParam );
typedef PVOID HDEVNOTIFY ;
typedef HDEVNOTIFY *PHDEVNOTIFY ;
typedef HANDLE HPOWERNOTIFY ;
typedef HPOWERNOTIFY *PHPOWERNOTIFY ;
HPOWERNOTIFY RegisterPowerSettingNotification (HANDLE hRecipient ,LPCGUID PowerSettingGuid ,DWORD Flags );
WINBOOL UnregisterPowerSettingNotification (HPOWERNOTIFY Handle );
HPOWERNOTIFY RegisterSuspendResumeNotification (HANDLE hRecipient ,DWORD Flags );
WINBOOL UnregisterSuspendResumeNotification (HPOWERNOTIFY Handle );
WINBOOL PostMessageA (HWND hWnd ,UINT Msg ,WPARAM wParam ,LPARAM lParam );
WINBOOL PostMessageW (HWND hWnd ,UINT Msg ,WPARAM wParam ,LPARAM lParam );
WINBOOL PostThreadMessageA (DWORD idThread ,UINT Msg ,WPARAM wParam ,LPARAM lParam );
WINBOOL PostThreadMessageW (DWORD idThread ,UINT Msg ,WPARAM wParam ,LPARAM lParam );
WINBOOL AttachThreadInput (DWORD idAttach ,DWORD idAttachTo ,WINBOOL fAttach );
WINBOOL ReplyMessage (LRESULT lResult );
WINBOOL WaitMessage (void );
DWORD WaitForInputIdle (HANDLE hProcess ,DWORD dwMilliseconds );
LRESULT DefWindowProcA (HWND hWnd ,UINT Msg ,WPARAM wParam ,LPARAM lParam );
LRESULT DefWindowProcW (HWND hWnd ,UINT Msg ,WPARAM wParam ,LPARAM lParam );
void PostQuitMessage (int nExitCode );
WINBOOL InSendMessage (void );
DWORD InSendMessageEx (LPVOID lpReserved );
UINT GetDoubleClickTime (void );
WINBOOL SetDoubleClickTime (UINT );
ATOM RegisterClassA (const WNDCLASSA *lpWndClass );
ATOM RegisterClassW (const WNDCLASSW *lpWndClass );
WINBOOL UnregisterClassA (LPCSTR lpClassName ,HINSTANCE hInstance );
WINBOOL UnregisterClassW (LPCWSTR lpClassName ,HINSTANCE hInstance );
WINBOOL GetClassInfoA (HINSTANCE hInstance ,LPCSTR lpClassName ,LPWNDCLASSA lpWndClass );
WINBOOL GetClassInfoW (HINSTANCE hInstance ,LPCWSTR lpClassName ,LPWNDCLASSW lpWndClass );
ATOM RegisterClassExA (const WNDCLASSEXA *);
ATOM RegisterClassExW (const WNDCLASSEXW *);
WINBOOL GetClassInfoExA (HINSTANCE hInstance ,LPCSTR lpszClass ,LPWNDCLASSEXA lpwcx );
WINBOOL GetClassInfoExW (HINSTANCE hInstance ,LPCWSTR lpszClass ,LPWNDCLASSEXW lpwcx );
LRESULT CallWindowProcA (WNDPROC lpPrevWndFunc ,HWND hWnd ,UINT Msg ,WPARAM wParam ,LPARAM lParam );
LRESULT CallWindowProcW (WNDPROC lpPrevWndFunc ,HWND hWnd ,UINT Msg ,WPARAM wParam ,LPARAM lParam );
extern const GUID GUID_POWERSCHEME_PERSONALITY ;
extern const GUID GUID_MIN_POWER_SAVINGS ;
extern const GUID GUID_MAX_POWER_SAVINGS ;
extern const GUID GUID_TYPICAL_POWER_SAVINGS ;
extern const GUID GUID_ACDC_POWER_SOURCE ;
extern const GUID GUID_BATTERY_PERCENTAGE_REMAINING ;
extern const GUID GUID_IDLE_BACKGROUND_TASK ;
extern const GUID GUID_SYSTEM_AWAYMODE ;
extern const GUID GUID_MONITOR_POWER_ON ;
HDEVNOTIFY RegisterDeviceNotificationA (HANDLE hRecipient ,LPVOID NotificationFilter ,DWORD Flags );
HDEVNOTIFY RegisterDeviceNotificationW (HANDLE hRecipient ,LPVOID NotificationFilter ,DWORD Flags );
WINBOOL UnregisterDeviceNotification (HDEVNOTIFY Handle );
typedef BOOLEAN (*PREGISTERCLASSNAMEW )(LPCWSTR );
HWND CreateWindowExA (DWORD dwExStyle ,LPCSTR lpClassName ,LPCSTR lpWindowName ,DWORD dwStyle ,int X ,int Y ,int nWidth ,int nHeight ,HWND hWndParent ,HMENU hMenu ,HINSTANCE hInstance ,LPVOID lpParam );
HWND CreateWindowExW (DWORD dwExStyle ,LPCWSTR lpClassName ,LPCWSTR lpWindowName ,DWORD dwStyle ,int X ,int Y ,int nWidth ,int nHeight ,HWND hWndParent ,HMENU hMenu ,HINSTANCE hInstance ,LPVOID lpParam );
WINBOOL IsWindow (HWND hWnd );
WINBOOL IsMenu (HMENU hMenu );
WINBOOL IsChild (HWND hWndParent ,HWND hWnd );
WINBOOL DestroyWindow (HWND hWnd );
WINBOOL ShowWindow (HWND hWnd ,int nCmdShow );
WINBOOL AnimateWindow (HWND hWnd ,DWORD dwTime ,DWORD dwFlags );
WINBOOL UpdateLayeredWindow (HWND hWnd ,HDC hdcDst ,POINT *pptDst ,SIZE *psize ,HDC hdcSrc ,POINT *pptSrc ,COLORREF crKey ,BLENDFUNCTION *pblend ,DWORD dwFlags );
typedef struct tagUPDATELAYEREDWINDOWINFO {DWORD cbSize ;HDC hdcDst ;const POINT *pptDst ;const SIZE *psize ;HDC hdcSrc ;const POINT *pptSrc ;COLORREF crKey ;const BLENDFUNCTION *pblend ;DWORD dwFlags ;const RECT *prcDirty ;}UPDATELAYEREDWINDOWINFO ;
typedef struct tagUPDATELAYEREDWINDOWINFO {DWORD cbSize ;HDC hdcDst ;const POINT *pptDst ;const SIZE *psize ;HDC hdcSrc ;const POINT *pptSrc ;COLORREF crKey ;const BLENDFUNCTION *pblend ;DWORD dwFlags ;const RECT *prcDirty ;}*PUPDATELAYEREDWINDOWINFO ;

WINBOOL UpdateLayeredWindowIndirect (HWND hWnd ,const UPDATELAYEREDWINDOWINFO *pULWInfo );
WINBOOL GetLayeredWindowAttributes (HWND hwnd ,COLORREF *pcrKey ,BYTE *pbAlpha ,DWORD *pdwFlags );
WINBOOL PrintWindow (HWND hwnd ,HDC hdcBlt ,UINT nFlags );
WINBOOL SetLayeredWindowAttributes (HWND hwnd ,COLORREF crKey ,BYTE bAlpha ,DWORD dwFlags );
typedef struct {UINT cbSize ;HWND hwnd ;DWORD dwFlags ;UINT uCount ;DWORD dwTimeout ;}FLASHWINFO ;
typedef struct {UINT cbSize ;HWND hwnd ;DWORD dwFlags ;UINT uCount ;DWORD dwTimeout ;}*PFLASHWINFO ;

WINBOOL ShowWindowAsync (HWND hWnd ,int nCmdShow );
WINBOOL FlashWindow (HWND hWnd ,WINBOOL bInvert );
WINBOOL FlashWindowEx (PFLASHWINFO pfwi );
WINBOOL ShowOwnedPopups (HWND hWnd ,WINBOOL fShow );
WINBOOL OpenIcon (HWND hWnd );
WINBOOL CloseWindow (HWND hWnd );
WINBOOL MoveWindow (HWND hWnd ,int X ,int Y ,int nWidth ,int nHeight ,WINBOOL bRepaint );
WINBOOL SetWindowPos (HWND hWnd ,HWND hWndInsertAfter ,int X ,int Y ,int cx ,int cy ,UINT uFlags );
WINBOOL GetWindowPlacement (HWND hWnd ,WINDOWPLACEMENT *lpwndpl );
WINBOOL SetWindowPlacement (HWND hWnd ,const WINDOWPLACEMENT *lpwndpl );
HDWP BeginDeferWindowPos (int nNumWindows );
HDWP DeferWindowPos (HDWP hWinPosInfo ,HWND hWnd ,HWND hWndInsertAfter ,int x ,int y ,int cx ,int cy ,UINT uFlags );
WINBOOL EndDeferWindowPos (HDWP hWinPosInfo );
WINBOOL IsWindowVisible (HWND hWnd );
WINBOOL IsIconic (HWND hWnd );
WINBOOL AnyPopup (void );
WINBOOL BringWindowToTop (HWND hWnd );
WINBOOL IsZoomed (HWND hWnd );
typedef struct {DWORD style ;DWORD dwExtendedStyle ;WORD cdit ;short x ;short y ;short cx ;short cy ;}DLGTEMPLATE ;
typedef DLGTEMPLATE *LPDLGTEMPLATEA ;
typedef DLGTEMPLATE *LPDLGTEMPLATEW ;
typedef LPDLGTEMPLATEA LPDLGTEMPLATE ;
typedef const DLGTEMPLATE *LPCDLGTEMPLATEA ;
typedef const DLGTEMPLATE *LPCDLGTEMPLATEW ;
typedef LPCDLGTEMPLATEA LPCDLGTEMPLATE ;
typedef struct {DWORD style ;DWORD dwExtendedStyle ;short x ;short y ;short cx ;short cy ;WORD id ;}DLGITEMTEMPLATE ;
typedef DLGITEMTEMPLATE *PDLGITEMTEMPLATEA ;
typedef DLGITEMTEMPLATE *PDLGITEMTEMPLATEW ;
typedef PDLGITEMTEMPLATEA PDLGITEMTEMPLATE ;
typedef DLGITEMTEMPLATE *LPDLGITEMTEMPLATEA ;
typedef DLGITEMTEMPLATE *LPDLGITEMTEMPLATEW ;
typedef LPDLGITEMTEMPLATEA LPDLGITEMTEMPLATE ;
HWND CreateDialogParamA (HINSTANCE hInstance ,LPCSTR lpTemplateName ,HWND hWndParent ,DLGPROC lpDialogFunc ,LPARAM dwInitParam );
HWND CreateDialogParamW (HINSTANCE hInstance ,LPCWSTR lpTemplateName ,HWND hWndParent ,DLGPROC lpDialogFunc ,LPARAM dwInitParam );
HWND CreateDialogIndirectParamA (HINSTANCE hInstance ,LPCDLGTEMPLATEA lpTemplate ,HWND hWndParent ,DLGPROC lpDialogFunc ,LPARAM dwInitParam );
HWND CreateDialogIndirectParamW (HINSTANCE hInstance ,LPCDLGTEMPLATEW lpTemplate ,HWND hWndParent ,DLGPROC lpDialogFunc ,LPARAM dwInitParam );
INT_PTR DialogBoxParamA (HINSTANCE hInstance ,LPCSTR lpTemplateName ,HWND hWndParent ,DLGPROC lpDialogFunc ,LPARAM dwInitParam );
INT_PTR DialogBoxParamW (HINSTANCE hInstance ,LPCWSTR lpTemplateName ,HWND hWndParent ,DLGPROC lpDialogFunc ,LPARAM dwInitParam );
INT_PTR DialogBoxIndirectParamA (HINSTANCE hInstance ,LPCDLGTEMPLATEA hDialogTemplate ,HWND hWndParent ,DLGPROC lpDialogFunc ,LPARAM dwInitParam );
INT_PTR DialogBoxIndirectParamW (HINSTANCE hInstance ,LPCDLGTEMPLATEW hDialogTemplate ,HWND hWndParent ,DLGPROC lpDialogFunc ,LPARAM dwInitParam );
WINBOOL EndDialog (HWND hDlg ,INT_PTR nResult );
HWND GetDlgItem (HWND hDlg ,int nIDDlgItem );
WINBOOL SetDlgItemInt (HWND hDlg ,int nIDDlgItem ,UINT uValue ,WINBOOL bSigned );
UINT GetDlgItemInt (HWND hDlg ,int nIDDlgItem ,WINBOOL *lpTranslated ,WINBOOL bSigned );
WINBOOL SetDlgItemTextA (HWND hDlg ,int nIDDlgItem ,LPCSTR lpString );
WINBOOL SetDlgItemTextW (HWND hDlg ,int nIDDlgItem ,LPCWSTR lpString );
UINT GetDlgItemTextA (HWND hDlg ,int nIDDlgItem ,LPSTR lpString ,int cchMax );
UINT GetDlgItemTextW (HWND hDlg ,int nIDDlgItem ,LPWSTR lpString ,int cchMax );
WINBOOL CheckDlgButton (HWND hDlg ,int nIDButton ,UINT uCheck );
WINBOOL CheckRadioButton (HWND hDlg ,int nIDFirstButton ,int nIDLastButton ,int nIDCheckButton );
UINT IsDlgButtonChecked (HWND hDlg ,int nIDButton );
LRESULT SendDlgItemMessageA (HWND hDlg ,int nIDDlgItem ,UINT Msg ,WPARAM wParam ,LPARAM lParam );
LRESULT SendDlgItemMessageW (HWND hDlg ,int nIDDlgItem ,UINT Msg ,WPARAM wParam ,LPARAM lParam );
HWND GetNextDlgGroupItem (HWND hDlg ,HWND hCtl ,WINBOOL bPrevious );
HWND GetNextDlgTabItem (HWND hDlg ,HWND hCtl ,WINBOOL bPrevious );
int GetDlgCtrlID (HWND hWnd );
long GetDialogBaseUnits (void );
LRESULT DefDlgProcA (HWND hDlg ,UINT Msg ,WPARAM wParam ,LPARAM lParam );
LRESULT DefDlgProcW (HWND hDlg ,UINT Msg ,WPARAM wParam ,LPARAM lParam );
WINBOOL CallMsgFilterA (LPMSG lpMsg ,int nCode );
WINBOOL CallMsgFilterW (LPMSG lpMsg ,int nCode );
WINBOOL OpenClipboard (HWND hWndNewOwner );
WINBOOL CloseClipboard (void );
DWORD GetClipboardSequenceNumber (void );
HWND GetClipboardOwner (void );
HWND SetClipboardViewer (HWND hWndNewViewer );
HWND GetClipboardViewer (void );
WINBOOL ChangeClipboardChain (HWND hWndRemove ,HWND hWndNewNext );
HANDLE SetClipboardData (UINT uFormat ,HANDLE hMem );
HANDLE GetClipboardData (UINT uFormat );
UINT RegisterClipboardFormatA (LPCSTR lpszFormat );
UINT RegisterClipboardFormatW (LPCWSTR lpszFormat );
int CountClipboardFormats (void );
UINT EnumClipboardFormats (UINT format );
int GetClipboardFormatNameA (UINT format ,LPSTR lpszFormatName ,int cchMaxCount );
int GetClipboardFormatNameW (UINT format ,LPWSTR lpszFormatName ,int cchMaxCount );
WINBOOL EmptyClipboard (void );
WINBOOL IsClipboardFormatAvailable (UINT format );
int GetPriorityClipboardFormat (UINT *paFormatPriorityList ,int cFormats );
HWND GetOpenClipboardWindow (void );
WINBOOL CharToOemA (LPCSTR lpszSrc ,LPSTR lpszDst );
WINBOOL CharToOemW (LPCWSTR lpszSrc ,LPSTR lpszDst );
WINBOOL OemToCharA (LPCSTR lpszSrc ,LPSTR lpszDst );
WINBOOL OemToCharW (LPCSTR lpszSrc ,LPWSTR lpszDst );
WINBOOL CharToOemBuffA (LPCSTR lpszSrc ,LPSTR lpszDst ,DWORD cchDstLength );
WINBOOL CharToOemBuffW (LPCWSTR lpszSrc ,LPSTR lpszDst ,DWORD cchDstLength );
WINBOOL OemToCharBuffA (LPCSTR lpszSrc ,LPSTR lpszDst ,DWORD cchDstLength );
WINBOOL OemToCharBuffW (LPCSTR lpszSrc ,LPWSTR lpszDst ,DWORD cchDstLength );
LPSTR CharUpperA (LPSTR lpsz );
LPWSTR CharUpperW (LPWSTR lpsz );
DWORD CharUpperBuffA (LPSTR lpsz ,DWORD cchLength );
DWORD CharUpperBuffW (LPWSTR lpsz ,DWORD cchLength );
LPSTR CharLowerA (LPSTR lpsz );
LPWSTR CharLowerW (LPWSTR lpsz );
DWORD CharLowerBuffA (LPSTR lpsz ,DWORD cchLength );
DWORD CharLowerBuffW (LPWSTR lpsz ,DWORD cchLength );
LPSTR CharNextA (LPCSTR lpsz );
LPWSTR CharNextW (LPCWSTR lpsz );
LPSTR CharPrevA (LPCSTR lpszStart ,LPCSTR lpszCurrent );
LPWSTR CharPrevW (LPCWSTR lpszStart ,LPCWSTR lpszCurrent );
LPSTR CharNextExA (WORD CodePage ,LPCSTR lpCurrentChar ,DWORD dwFlags );
LPSTR CharPrevExA (WORD CodePage ,LPCSTR lpStart ,LPCSTR lpCurrentChar ,DWORD dwFlags );
WINBOOL IsCharAlphaA (CHAR ch );
WINBOOL IsCharAlphaW (WCHAR ch );
WINBOOL IsCharAlphaNumericA (CHAR ch );
WINBOOL IsCharAlphaNumericW (WCHAR ch );
WINBOOL IsCharUpperA (CHAR ch );
WINBOOL IsCharUpperW (WCHAR ch );
WINBOOL IsCharLowerA (CHAR ch );
WINBOOL IsCharLowerW (WCHAR ch );
HWND SetFocus (HWND hWnd );
HWND GetActiveWindow (void );
HWND GetFocus (void );
UINT GetKBCodePage (void );
SHORT GetKeyState (int nVirtKey );
SHORT GetAsyncKeyState (int vKey );
WINBOOL GetKeyboardState (PBYTE lpKeyState );
WINBOOL SetKeyboardState (LPBYTE lpKeyState );
int GetKeyNameTextA (LONG lParam ,LPSTR lpString ,int cchSize );
int GetKeyNameTextW (LONG lParam ,LPWSTR lpString ,int cchSize );
int GetKeyboardType (int nTypeFlag );
int ToAscii (UINT uVirtKey ,UINT uScanCode ,const BYTE *lpKeyState ,LPWORD lpChar ,UINT uFlags );
int ToAsciiEx (UINT uVirtKey ,UINT uScanCode ,const BYTE *lpKeyState ,LPWORD lpChar ,UINT uFlags ,HKL dwhkl );
int ToUnicode (UINT wVirtKey ,UINT wScanCode ,const BYTE *lpKeyState ,LPWSTR pwszBuff ,int cchBuff ,UINT wFlags );
DWORD OemKeyScan (WORD wOemChar );
SHORT VkKeyScanA (CHAR ch );
SHORT VkKeyScanW (WCHAR ch );
SHORT VkKeyScanExA (CHAR ch ,HKL dwhkl );
SHORT VkKeyScanExW (WCHAR ch ,HKL dwhkl );
void keybd_event (BYTE bVk ,BYTE bScan ,DWORD dwFlags ,ULONG_PTR dwExtraInfo );
void mouse_event (DWORD dwFlags ,DWORD dx ,DWORD dy ,DWORD dwData ,ULONG_PTR dwExtraInfo );
typedef struct tagMOUSEINPUT {LONG dx ;LONG dy ;DWORD mouseData ;DWORD dwFlags ;DWORD time ;ULONG_PTR dwExtraInfo ;}MOUSEINPUT ;
typedef struct tagMOUSEINPUT {LONG dx ;LONG dy ;DWORD mouseData ;DWORD dwFlags ;DWORD time ;ULONG_PTR dwExtraInfo ;}*PMOUSEINPUT ;
typedef struct tagMOUSEINPUT {LONG dx ;LONG dy ;DWORD mouseData ;DWORD dwFlags ;DWORD time ;ULONG_PTR dwExtraInfo ;}*LPMOUSEINPUT ;

typedef struct tagKEYBDINPUT {WORD wVk ;WORD wScan ;DWORD dwFlags ;DWORD time ;ULONG_PTR dwExtraInfo ;}KEYBDINPUT ;
typedef struct tagKEYBDINPUT {WORD wVk ;WORD wScan ;DWORD dwFlags ;DWORD time ;ULONG_PTR dwExtraInfo ;}*PKEYBDINPUT ;
typedef struct tagKEYBDINPUT {WORD wVk ;WORD wScan ;DWORD dwFlags ;DWORD time ;ULONG_PTR dwExtraInfo ;}*LPKEYBDINPUT ;

typedef struct tagHARDWAREINPUT {DWORD uMsg ;WORD wParamL ;WORD wParamH ;}HARDWAREINPUT ;
typedef struct tagHARDWAREINPUT {DWORD uMsg ;WORD wParamL ;WORD wParamH ;}*PHARDWAREINPUT ;
typedef struct tagHARDWAREINPUT {DWORD uMsg ;WORD wParamL ;WORD wParamH ;}*LPHARDWAREINPUT ;

typedef struct tagINPUT {DWORD type ;union {MOUSEINPUT mi ;KEYBDINPUT ki ;HARDWAREINPUT hi ;};}INPUT ;
typedef struct tagINPUT {DWORD type ;union {MOUSEINPUT mi ;KEYBDINPUT ki ;HARDWAREINPUT hi ;};}*PINPUT ;
typedef struct tagINPUT {DWORD type ;union {MOUSEINPUT mi ;KEYBDINPUT ki ;HARDWAREINPUT hi ;};}*LPINPUT ;

UINT SendInput (UINT cInputs ,LPINPUT pInputs ,int cbSize );
typedef struct tagLASTINPUTINFO {UINT cbSize ;DWORD dwTime ;}LASTINPUTINFO ;
typedef struct tagLASTINPUTINFO {UINT cbSize ;DWORD dwTime ;}*PLASTINPUTINFO ;

WINBOOL GetLastInputInfo (PLASTINPUTINFO plii );
UINT MapVirtualKeyA (UINT uCode ,UINT uMapType );
UINT MapVirtualKeyW (UINT uCode ,UINT uMapType );
UINT MapVirtualKeyExA (UINT uCode ,UINT uMapType ,HKL dwhkl );
UINT MapVirtualKeyExW (UINT uCode ,UINT uMapType ,HKL dwhkl );
WINBOOL GetInputState (void );
DWORD GetQueueStatus (UINT flags );
HWND GetCapture (void );
HWND SetCapture (HWND hWnd );
WINBOOL ReleaseCapture (void );
DWORD MsgWaitForMultipleObjects (DWORD nCount ,const HANDLE *pHandles ,WINBOOL fWaitAll ,DWORD dwMilliseconds ,DWORD dwWakeMask );
DWORD MsgWaitForMultipleObjectsEx (DWORD nCount ,const HANDLE *pHandles ,DWORD dwMilliseconds ,DWORD dwWakeMask ,DWORD dwFlags );
UINT_PTR SetTimer (HWND hWnd ,UINT_PTR nIDEvent ,UINT uElapse ,TIMERPROC lpTimerFunc );
WINBOOL KillTimer (HWND hWnd ,UINT_PTR uIDEvent );
WINBOOL IsWindowUnicode (HWND hWnd );
WINBOOL EnableWindow (HWND hWnd ,WINBOOL bEnable );
WINBOOL IsWindowEnabled (HWND hWnd );
HACCEL LoadAcceleratorsA (HINSTANCE hInstance ,LPCSTR lpTableName );
HACCEL LoadAcceleratorsW (HINSTANCE hInstance ,LPCWSTR lpTableName );
HACCEL CreateAcceleratorTableA (LPACCEL paccel ,int cAccel );
HACCEL CreateAcceleratorTableW (LPACCEL paccel ,int cAccel );
WINBOOL DestroyAcceleratorTable (HACCEL hAccel );
int CopyAcceleratorTableA (HACCEL hAccelSrc ,LPACCEL lpAccelDst ,int cAccelEntries );
int CopyAcceleratorTableW (HACCEL hAccelSrc ,LPACCEL lpAccelDst ,int cAccelEntries );
int TranslateAcceleratorA (HWND hWnd ,HACCEL hAccTable ,LPMSG lpMsg );
int TranslateAcceleratorW (HWND hWnd ,HACCEL hAccTable ,LPMSG lpMsg );
int GetSystemMetrics (int nIndex );
HMENU LoadMenuA (HINSTANCE hInstance ,LPCSTR lpMenuName );
HMENU LoadMenuW (HINSTANCE hInstance ,LPCWSTR lpMenuName );
HMENU LoadMenuIndirectA (const MENUTEMPLATEA *lpMenuTemplate );
HMENU LoadMenuIndirectW (const MENUTEMPLATEW *lpMenuTemplate );
HMENU GetMenu (HWND hWnd );
WINBOOL SetMenu (HWND hWnd ,HMENU hMenu );
WINBOOL ChangeMenuA (HMENU hMenu ,UINT cmd ,LPCSTR lpszNewItem ,UINT cmdInsert ,UINT flags );
WINBOOL ChangeMenuW (HMENU hMenu ,UINT cmd ,LPCWSTR lpszNewItem ,UINT cmdInsert ,UINT flags );
WINBOOL HiliteMenuItem (HWND hWnd ,HMENU hMenu ,UINT uIDHiliteItem ,UINT uHilite );
int GetMenuStringA (HMENU hMenu ,UINT uIDItem ,LPSTR lpString ,int cchMax ,UINT flags );
int GetMenuStringW (HMENU hMenu ,UINT uIDItem ,LPWSTR lpString ,int cchMax ,UINT flags );
UINT GetMenuState (HMENU hMenu ,UINT uId ,UINT uFlags );
WINBOOL DrawMenuBar (HWND hWnd );
HMENU GetSystemMenu (HWND hWnd ,WINBOOL bRevert );
HMENU CreateMenu (void );
HMENU CreatePopupMenu (void );
WINBOOL DestroyMenu (HMENU hMenu );
DWORD CheckMenuItem (HMENU hMenu ,UINT uIDCheckItem ,UINT uCheck );
WINBOOL EnableMenuItem (HMENU hMenu ,UINT uIDEnableItem ,UINT uEnable );
HMENU GetSubMenu (HMENU hMenu ,int nPos );
UINT GetMenuItemID (HMENU hMenu ,int nPos );
int GetMenuItemCount (HMENU hMenu );
WINBOOL InsertMenuA (HMENU hMenu ,UINT uPosition ,UINT uFlags ,UINT_PTR uIDNewItem ,LPCSTR lpNewItem );
WINBOOL InsertMenuW (HMENU hMenu ,UINT uPosition ,UINT uFlags ,UINT_PTR uIDNewItem ,LPCWSTR lpNewItem );
WINBOOL AppendMenuA (HMENU hMenu ,UINT uFlags ,UINT_PTR uIDNewItem ,LPCSTR lpNewItem );
WINBOOL AppendMenuW (HMENU hMenu ,UINT uFlags ,UINT_PTR uIDNewItem ,LPCWSTR lpNewItem );
WINBOOL ModifyMenuA (HMENU hMnu ,UINT uPosition ,UINT uFlags ,UINT_PTR uIDNewItem ,LPCSTR lpNewItem );
WINBOOL ModifyMenuW (HMENU hMnu ,UINT uPosition ,UINT uFlags ,UINT_PTR uIDNewItem ,LPCWSTR lpNewItem );
WINBOOL RemoveMenu (HMENU hMenu ,UINT uPosition ,UINT uFlags );
WINBOOL DeleteMenu (HMENU hMenu ,UINT uPosition ,UINT uFlags );
WINBOOL SetMenuItemBitmaps (HMENU hMenu ,UINT uPosition ,UINT uFlags ,HBITMAP hBitmapUnchecked ,HBITMAP hBitmapChecked );
LONG GetMenuCheckMarkDimensions (void );
WINBOOL TrackPopupMenu (HMENU hMenu ,UINT uFlags ,int x ,int y ,int nReserved ,HWND hWnd ,const RECT *prcRect );
typedef struct tagTPMPARAMS {UINT cbSize ;RECT rcExclude ;}TPMPARAMS ;
typedef struct tagMENUINFO {DWORD cbSize ;DWORD fMask ;DWORD dwStyle ;UINT cyMax ;HBRUSH hbrBack ;DWORD dwContextHelpID ;ULONG_PTR dwMenuData ;}MENUINFO ;
typedef struct tagMENUINFO {DWORD cbSize ;DWORD fMask ;DWORD dwStyle ;UINT cyMax ;HBRUSH hbrBack ;DWORD dwContextHelpID ;ULONG_PTR dwMenuData ;}*LPMENUINFO ;

typedef TPMPARAMS *LPTPMPARAMS ;
typedef MENUINFO const *LPCMENUINFO ;
WINBOOL TrackPopupMenuEx (HMENU ,UINT ,int ,int ,HWND ,LPTPMPARAMS );
WINBOOL GetMenuInfo (HMENU ,LPMENUINFO );
WINBOOL SetMenuInfo (HMENU ,LPCMENUINFO );
WINBOOL EndMenu (void );
typedef struct tagMENUGETOBJECTINFO {DWORD dwFlags ;UINT uPos ;HMENU hmenu ;PVOID riid ;PVOID pvObj ;}MENUGETOBJECTINFO ;
typedef struct tagMENUGETOBJECTINFO {DWORD dwFlags ;UINT uPos ;HMENU hmenu ;PVOID riid ;PVOID pvObj ;}*PMENUGETOBJECTINFO ;

typedef struct tagMENUITEMINFOA {UINT cbSize ;UINT fMask ;UINT fType ;UINT fState ;UINT wID ;HMENU hSubMenu ;HBITMAP hbmpChecked ;HBITMAP hbmpUnchecked ;ULONG_PTR dwItemData ;LPSTR dwTypeData ;UINT cch ;HBITMAP hbmpItem ;}MENUITEMINFOA ;
typedef struct tagMENUITEMINFOA {UINT cbSize ;UINT fMask ;UINT fType ;UINT fState ;UINT wID ;HMENU hSubMenu ;HBITMAP hbmpChecked ;HBITMAP hbmpUnchecked ;ULONG_PTR dwItemData ;LPSTR dwTypeData ;UINT cch ;HBITMAP hbmpItem ;}*LPMENUITEMINFOA ;

typedef struct tagMENUITEMINFOW {UINT cbSize ;UINT fMask ;UINT fType ;UINT fState ;UINT wID ;HMENU hSubMenu ;HBITMAP hbmpChecked ;HBITMAP hbmpUnchecked ;ULONG_PTR dwItemData ;LPWSTR dwTypeData ;UINT cch ;HBITMAP hbmpItem ;}MENUITEMINFOW ;
typedef struct tagMENUITEMINFOW {UINT cbSize ;UINT fMask ;UINT fType ;UINT fState ;UINT wID ;HMENU hSubMenu ;HBITMAP hbmpChecked ;HBITMAP hbmpUnchecked ;ULONG_PTR dwItemData ;LPWSTR dwTypeData ;UINT cch ;HBITMAP hbmpItem ;}*LPMENUITEMINFOW ;

typedef MENUITEMINFOA MENUITEMINFO ;
typedef LPMENUITEMINFOA LPMENUITEMINFO ;
typedef MENUITEMINFOA const *LPCMENUITEMINFOA ;
typedef MENUITEMINFOW const *LPCMENUITEMINFOW ;
typedef LPCMENUITEMINFOA LPCMENUITEMINFO ;
WINBOOL InsertMenuItemA (HMENU hmenu ,UINT item ,WINBOOL fByPosition ,LPCMENUITEMINFOA lpmi );
WINBOOL InsertMenuItemW (HMENU hmenu ,UINT item ,WINBOOL fByPosition ,LPCMENUITEMINFOW lpmi );
WINBOOL GetMenuItemInfoA (HMENU hmenu ,UINT item ,WINBOOL fByPosition ,LPMENUITEMINFOA lpmii );
WINBOOL GetMenuItemInfoW (HMENU hmenu ,UINT item ,WINBOOL fByPosition ,LPMENUITEMINFOW lpmii );
WINBOOL SetMenuItemInfoA (HMENU hmenu ,UINT item ,WINBOOL fByPositon ,LPCMENUITEMINFOA lpmii );
WINBOOL SetMenuItemInfoW (HMENU hmenu ,UINT item ,WINBOOL fByPositon ,LPCMENUITEMINFOW lpmii );
UINT GetMenuDefaultItem (HMENU hMenu ,UINT fByPos ,UINT gmdiFlags );
WINBOOL SetMenuDefaultItem (HMENU hMenu ,UINT uItem ,UINT fByPos );
WINBOOL GetMenuItemRect (HWND hWnd ,HMENU hMenu ,UINT uItem ,LPRECT lprcItem );
int MenuItemFromPoint (HWND hWnd ,HMENU hMenu ,POINT ptScreen );
typedef struct tagDROPSTRUCT {HWND hwndSource ;HWND hwndSink ;DWORD wFmt ;ULONG_PTR dwData ;POINT ptDrop ;DWORD dwControlData ;}DROPSTRUCT ;
typedef struct tagDROPSTRUCT {HWND hwndSource ;HWND hwndSink ;DWORD wFmt ;ULONG_PTR dwData ;POINT ptDrop ;DWORD dwControlData ;}*PDROPSTRUCT ;
typedef struct tagDROPSTRUCT {HWND hwndSource ;HWND hwndSink ;DWORD wFmt ;ULONG_PTR dwData ;POINT ptDrop ;DWORD dwControlData ;}*LPDROPSTRUCT ;

DWORD DragObject (HWND hwndParent ,HWND hwndFrom ,UINT fmt ,ULONG_PTR data ,HCURSOR hcur );
WINBOOL DragDetect (HWND hwnd ,POINT pt );
WINBOOL DrawIcon (HDC hDC ,int X ,int Y ,HICON hIcon );
typedef struct tagDRAWTEXTPARAMS {UINT cbSize ;int iTabLength ;int iLeftMargin ;int iRightMargin ;UINT uiLengthDrawn ;}DRAWTEXTPARAMS ;
typedef struct tagDRAWTEXTPARAMS {UINT cbSize ;int iTabLength ;int iLeftMargin ;int iRightMargin ;UINT uiLengthDrawn ;}*LPDRAWTEXTPARAMS ;

int DrawTextA (HDC hdc ,LPCSTR lpchText ,int cchText ,LPRECT lprc ,UINT format );
int DrawTextW (HDC hdc ,LPCWSTR lpchText ,int cchText ,LPRECT lprc ,UINT format );
int DrawTextExA (HDC hdc ,LPSTR lpchText ,int cchText ,LPRECT lprc ,UINT format ,LPDRAWTEXTPARAMS lpdtp );
int DrawTextExW (HDC hdc ,LPWSTR lpchText ,int cchText ,LPRECT lprc ,UINT format ,LPDRAWTEXTPARAMS lpdtp );
WINBOOL GrayStringA (HDC hDC ,HBRUSH hBrush ,GRAYSTRINGPROC lpOutputFunc ,LPARAM lpData ,int nCount ,int X ,int Y ,int nWidth ,int nHeight );
WINBOOL GrayStringW (HDC hDC ,HBRUSH hBrush ,GRAYSTRINGPROC lpOutputFunc ,LPARAM lpData ,int nCount ,int X ,int Y ,int nWidth ,int nHeight );
WINBOOL DrawStateA (HDC hdc ,HBRUSH hbrFore ,DRAWSTATEPROC qfnCallBack ,LPARAM lData ,WPARAM wData ,int x ,int y ,int cx ,int cy ,UINT uFlags );
WINBOOL DrawStateW (HDC hdc ,HBRUSH hbrFore ,DRAWSTATEPROC qfnCallBack ,LPARAM lData ,WPARAM wData ,int x ,int y ,int cx ,int cy ,UINT uFlags );
LONG TabbedTextOutA (HDC hdc ,int x ,int y ,LPCSTR lpString ,int chCount ,int nTabPositions ,const INT *lpnTabStopPositions ,int nTabOrigin );
LONG TabbedTextOutW (HDC hdc ,int x ,int y ,LPCWSTR lpString ,int chCount ,int nTabPositions ,const INT *lpnTabStopPositions ,int nTabOrigin );
DWORD GetTabbedTextExtentA (HDC hdc ,LPCSTR lpString ,int chCount ,int nTabPositions ,const INT *lpnTabStopPositions );
DWORD GetTabbedTextExtentW (HDC hdc ,LPCWSTR lpString ,int chCount ,int nTabPositions ,const INT *lpnTabStopPositions );
WINBOOL UpdateWindow (HWND hWnd );
HWND SetActiveWindow (HWND hWnd );
HWND GetForegroundWindow (void );
WINBOOL PaintDesktop (HDC hdc );
void SwitchToThisWindow (HWND hwnd ,WINBOOL fUnknown );
WINBOOL SetForegroundWindow (HWND hWnd );
WINBOOL AllowSetForegroundWindow (DWORD dwProcessId );
WINBOOL LockSetForegroundWindow (UINT uLockCode );
HWND WindowFromDC (HDC hDC );
HDC GetDC (HWND hWnd );
HDC GetDCEx (HWND hWnd ,HRGN hrgnClip ,DWORD flags );
HDC GetWindowDC (HWND hWnd );
int ReleaseDC (HWND hWnd ,HDC hDC );
HDC BeginPaint (HWND hWnd ,LPPAINTSTRUCT lpPaint );
WINBOOL EndPaint (HWND hWnd ,const PAINTSTRUCT *lpPaint );
WINBOOL GetUpdateRect (HWND hWnd ,LPRECT lpRect ,WINBOOL bErase );
int GetUpdateRgn (HWND hWnd ,HRGN hRgn ,WINBOOL bErase );
int SetWindowRgn (HWND hWnd ,HRGN hRgn ,WINBOOL bRedraw );
int GetWindowRgn (HWND hWnd ,HRGN hRgn );
int GetWindowRgnBox (HWND hWnd ,LPRECT lprc );
int ExcludeUpdateRgn (HDC hDC ,HWND hWnd );
WINBOOL InvalidateRect (HWND hWnd ,const RECT *lpRect ,WINBOOL bErase );
WINBOOL ValidateRect (HWND hWnd ,const RECT *lpRect );
WINBOOL InvalidateRgn (HWND hWnd ,HRGN hRgn ,WINBOOL bErase );
WINBOOL ValidateRgn (HWND hWnd ,HRGN hRgn );
WINBOOL RedrawWindow (HWND hWnd ,const RECT *lprcUpdate ,HRGN hrgnUpdate ,UINT flags );
WINBOOL LockWindowUpdate (HWND hWndLock );
WINBOOL ScrollWindow (HWND hWnd ,int XAmount ,int YAmount ,const RECT *lpRect ,const RECT *lpClipRect );
WINBOOL ScrollDC (HDC hDC ,int dx ,int dy ,const RECT *lprcScroll ,const RECT *lprcClip ,HRGN hrgnUpdate ,LPRECT lprcUpdate );
int ScrollWindowEx (HWND hWnd ,int dx ,int dy ,const RECT *prcScroll ,const RECT *prcClip ,HRGN hrgnUpdate ,LPRECT prcUpdate ,UINT flags );
int SetScrollPos (HWND hWnd ,int nBar ,int nPos ,WINBOOL bRedraw );
int GetScrollPos (HWND hWnd ,int nBar );
WINBOOL SetScrollRange (HWND hWnd ,int nBar ,int nMinPos ,int nMaxPos ,WINBOOL bRedraw );
WINBOOL GetScrollRange (HWND hWnd ,int nBar ,LPINT lpMinPos ,LPINT lpMaxPos );
WINBOOL ShowScrollBar (HWND hWnd ,int wBar ,WINBOOL bShow );
WINBOOL EnableScrollBar (HWND hWnd ,UINT wSBflags ,UINT wArrows );
WINBOOL SetPropA (HWND hWnd ,LPCSTR lpString ,HANDLE hData );
WINBOOL SetPropW (HWND hWnd ,LPCWSTR lpString ,HANDLE hData );
HANDLE GetPropA (HWND hWnd ,LPCSTR lpString );
HANDLE GetPropW (HWND hWnd ,LPCWSTR lpString );
HANDLE RemovePropA (HWND hWnd ,LPCSTR lpString );
HANDLE RemovePropW (HWND hWnd ,LPCWSTR lpString );
int EnumPropsExA (HWND hWnd ,PROPENUMPROCEXA lpEnumFunc ,LPARAM lParam );
int EnumPropsExW (HWND hWnd ,PROPENUMPROCEXW lpEnumFunc ,LPARAM lParam );
int EnumPropsA (HWND hWnd ,PROPENUMPROCA lpEnumFunc );
int EnumPropsW (HWND hWnd ,PROPENUMPROCW lpEnumFunc );
WINBOOL SetWindowTextA (HWND hWnd ,LPCSTR lpString );
WINBOOL SetWindowTextW (HWND hWnd ,LPCWSTR lpString );
int GetWindowTextA (HWND hWnd ,LPSTR lpString ,int nMaxCount );
int GetWindowTextW (HWND hWnd ,LPWSTR lpString ,int nMaxCount );
int GetWindowTextLengthA (HWND hWnd );
int GetWindowTextLengthW (HWND hWnd );
WINBOOL GetClientRect (HWND hWnd ,LPRECT lpRect );
WINBOOL GetWindowRect (HWND hWnd ,LPRECT lpRect );
WINBOOL AdjustWindowRect (LPRECT lpRect ,DWORD dwStyle ,WINBOOL bMenu );
WINBOOL AdjustWindowRectEx (LPRECT lpRect ,DWORD dwStyle ,WINBOOL bMenu ,DWORD dwExStyle );
typedef struct tagHELPINFO {UINT cbSize ;int iContextType ;int iCtrlId ;HANDLE hItemHandle ;DWORD_PTR dwContextId ;POINT MousePos ;}HELPINFO ;
typedef struct tagHELPINFO {UINT cbSize ;int iContextType ;int iCtrlId ;HANDLE hItemHandle ;DWORD_PTR dwContextId ;POINT MousePos ;}*LPHELPINFO ;

WINBOOL SetWindowContextHelpId (HWND ,DWORD );
DWORD GetWindowContextHelpId (HWND );
WINBOOL SetMenuContextHelpId (HMENU ,DWORD );
DWORD GetMenuContextHelpId (HMENU );
int MessageBoxA (HWND hWnd ,LPCSTR lpText ,LPCSTR lpCaption ,UINT uType );
int MessageBoxW (HWND hWnd ,LPCWSTR lpText ,LPCWSTR lpCaption ,UINT uType );
int MessageBoxExA (HWND hWnd ,LPCSTR lpText ,LPCSTR lpCaption ,UINT uType ,WORD wLanguageId );
int MessageBoxExW (HWND hWnd ,LPCWSTR lpText ,LPCWSTR lpCaption ,UINT uType ,WORD wLanguageId );
typedef void (*MSGBOXCALLBACK )(LPHELPINFO lpHelpInfo );
typedef struct tagMSGBOXPARAMSA {UINT cbSize ;HWND hwndOwner ;HINSTANCE hInstance ;LPCSTR lpszText ;LPCSTR lpszCaption ;DWORD dwStyle ;LPCSTR lpszIcon ;DWORD_PTR dwContextHelpId ;MSGBOXCALLBACK lpfnMsgBoxCallback ;DWORD dwLanguageId ;}MSGBOXPARAMSA ;
typedef struct tagMSGBOXPARAMSA {UINT cbSize ;HWND hwndOwner ;HINSTANCE hInstance ;LPCSTR lpszText ;LPCSTR lpszCaption ;DWORD dwStyle ;LPCSTR lpszIcon ;DWORD_PTR dwContextHelpId ;MSGBOXCALLBACK lpfnMsgBoxCallback ;DWORD dwLanguageId ;}*PMSGBOXPARAMSA ;
typedef struct tagMSGBOXPARAMSA {UINT cbSize ;HWND hwndOwner ;HINSTANCE hInstance ;LPCSTR lpszText ;LPCSTR lpszCaption ;DWORD dwStyle ;LPCSTR lpszIcon ;DWORD_PTR dwContextHelpId ;MSGBOXCALLBACK lpfnMsgBoxCallback ;DWORD dwLanguageId ;}*LPMSGBOXPARAMSA ;

typedef struct tagMSGBOXPARAMSW {UINT cbSize ;HWND hwndOwner ;HINSTANCE hInstance ;LPCWSTR lpszText ;LPCWSTR lpszCaption ;DWORD dwStyle ;LPCWSTR lpszIcon ;DWORD_PTR dwContextHelpId ;MSGBOXCALLBACK lpfnMsgBoxCallback ;DWORD dwLanguageId ;}MSGBOXPARAMSW ;
typedef struct tagMSGBOXPARAMSW {UINT cbSize ;HWND hwndOwner ;HINSTANCE hInstance ;LPCWSTR lpszText ;LPCWSTR lpszCaption ;DWORD dwStyle ;LPCWSTR lpszIcon ;DWORD_PTR dwContextHelpId ;MSGBOXCALLBACK lpfnMsgBoxCallback ;DWORD dwLanguageId ;}*PMSGBOXPARAMSW ;
typedef struct tagMSGBOXPARAMSW {UINT cbSize ;HWND hwndOwner ;HINSTANCE hInstance ;LPCWSTR lpszText ;LPCWSTR lpszCaption ;DWORD dwStyle ;LPCWSTR lpszIcon ;DWORD_PTR dwContextHelpId ;MSGBOXCALLBACK lpfnMsgBoxCallback ;DWORD dwLanguageId ;}*LPMSGBOXPARAMSW ;

typedef MSGBOXPARAMSA MSGBOXPARAMS ;
typedef PMSGBOXPARAMSA PMSGBOXPARAMS ;
typedef LPMSGBOXPARAMSA LPMSGBOXPARAMS ;
int MessageBoxIndirectA (const MSGBOXPARAMSA *lpmbp );
int MessageBoxIndirectW (const MSGBOXPARAMSW *lpmbp );
WINBOOL MessageBeep (UINT uType );
int ShowCursor (WINBOOL bShow );
WINBOOL SetCursorPos (int X ,int Y );
HCURSOR SetCursor (HCURSOR hCursor );
WINBOOL GetCursorPos (LPPOINT lpPoint );
WINBOOL ClipCursor (const RECT *lpRect );
WINBOOL GetClipCursor (LPRECT lpRect );
HCURSOR GetCursor (void );
WINBOOL CreateCaret (HWND hWnd ,HBITMAP hBitmap ,int nWidth ,int nHeight );
UINT GetCaretBlinkTime (void );
WINBOOL SetCaretBlinkTime (UINT uMSeconds );
WINBOOL DestroyCaret (void );
WINBOOL HideCaret (HWND hWnd );
WINBOOL ShowCaret (HWND hWnd );
WINBOOL SetCaretPos (int X ,int Y );
WINBOOL GetCaretPos (LPPOINT lpPoint );
WINBOOL ClientToScreen (HWND hWnd ,LPPOINT lpPoint );
WINBOOL ScreenToClient (HWND hWnd ,LPPOINT lpPoint );
int MapWindowPoints (HWND hWndFrom ,HWND hWndTo ,LPPOINT lpPoints ,UINT cPoints );
HWND WindowFromPoint (POINT Point );
HWND ChildWindowFromPoint (HWND hWndParent ,POINT Point );
HWND ChildWindowFromPointEx (HWND hwnd ,POINT pt ,UINT flags );
DWORD GetSysColor (int nIndex );
HBRUSH GetSysColorBrush (int nIndex );
WINBOOL SetSysColors (int cElements ,const INT *lpaElements ,const COLORREF *lpaRgbValues );
WINBOOL DrawFocusRect (HDC hDC ,const RECT *lprc );
int FillRect (HDC hDC ,const RECT *lprc ,HBRUSH hbr );
int FrameRect (HDC hDC ,const RECT *lprc ,HBRUSH hbr );
WINBOOL InvertRect (HDC hDC ,const RECT *lprc );
WINBOOL SetRect (LPRECT lprc ,int xLeft ,int yTop ,int xRight ,int yBottom );
WINBOOL SetRectEmpty (LPRECT lprc );
WINBOOL CopyRect (LPRECT lprcDst ,const RECT *lprcSrc );
WINBOOL InflateRect (LPRECT lprc ,int dx ,int dy );
WINBOOL IntersectRect (LPRECT lprcDst ,const RECT *lprcSrc1 ,const RECT *lprcSrc2 );
WINBOOL UnionRect (LPRECT lprcDst ,const RECT *lprcSrc1 ,const RECT *lprcSrc2 );
WINBOOL SubtractRect (LPRECT lprcDst ,const RECT *lprcSrc1 ,const RECT *lprcSrc2 );
WINBOOL OffsetRect (LPRECT lprc ,int dx ,int dy );
WINBOOL IsRectEmpty (const RECT *lprc );
WINBOOL EqualRect (const RECT *lprc1 ,const RECT *lprc2 );
WINBOOL PtInRect (const RECT *lprc ,POINT pt );
WORD GetWindowWord (HWND hWnd ,int nIndex );
WORD SetWindowWord (HWND hWnd ,int nIndex ,WORD wNewWord );
LONG GetWindowLongA (HWND hWnd ,int nIndex );
LONG GetWindowLongW (HWND hWnd ,int nIndex );
LONG SetWindowLongA (HWND hWnd ,int nIndex ,LONG dwNewLong );
LONG SetWindowLongW (HWND hWnd ,int nIndex ,LONG dwNewLong );
LONG_PTR GetWindowLongPtrA (HWND hWnd ,int nIndex );
LONG_PTR GetWindowLongPtrW (HWND hWnd ,int nIndex );
LONG_PTR SetWindowLongPtrA (HWND hWnd ,int nIndex ,LONG_PTR dwNewLong );
LONG_PTR SetWindowLongPtrW (HWND hWnd ,int nIndex ,LONG_PTR dwNewLong );
WORD GetClassWord (HWND hWnd ,int nIndex );
WORD SetClassWord (HWND hWnd ,int nIndex ,WORD wNewWord );
DWORD GetClassLongA (HWND hWnd ,int nIndex );
DWORD GetClassLongW (HWND hWnd ,int nIndex );
DWORD SetClassLongA (HWND hWnd ,int nIndex ,LONG dwNewLong );
DWORD SetClassLongW (HWND hWnd ,int nIndex ,LONG dwNewLong );
ULONG_PTR GetClassLongPtrA (HWND hWnd ,int nIndex );
ULONG_PTR GetClassLongPtrW (HWND hWnd ,int nIndex );
ULONG_PTR SetClassLongPtrA (HWND hWnd ,int nIndex ,LONG_PTR dwNewLong );
ULONG_PTR SetClassLongPtrW (HWND hWnd ,int nIndex ,LONG_PTR dwNewLong );
WINBOOL GetProcessDefaultLayout (DWORD *pdwDefaultLayout );
WINBOOL SetProcessDefaultLayout (DWORD dwDefaultLayout );
HWND GetDesktopWindow (void );
HWND GetParent (HWND hWnd );
HWND SetParent (HWND hWndChild ,HWND hWndNewParent );
WINBOOL EnumChildWindows (HWND hWndParent ,WNDENUMPROC lpEnumFunc ,LPARAM lParam );
HWND FindWindowA (LPCSTR lpClassName ,LPCSTR lpWindowName );
HWND FindWindowW (LPCWSTR lpClassName ,LPCWSTR lpWindowName );
HWND FindWindowExA (HWND hWndParent ,HWND hWndChildAfter ,LPCSTR lpszClass ,LPCSTR lpszWindow );
HWND FindWindowExW (HWND hWndParent ,HWND hWndChildAfter ,LPCWSTR lpszClass ,LPCWSTR lpszWindow );
HWND GetShellWindow (void );
WINBOOL RegisterShellHookWindow (HWND hwnd );
WINBOOL DeregisterShellHookWindow (HWND hwnd );
WINBOOL EnumWindows (WNDENUMPROC lpEnumFunc ,LPARAM lParam );
WINBOOL EnumThreadWindows (DWORD dwThreadId ,WNDENUMPROC lpfn ,LPARAM lParam );
int GetClassNameA (HWND hWnd ,LPSTR lpClassName ,int nMaxCount );
int GetClassNameW (HWND hWnd ,LPWSTR lpClassName ,int nMaxCount );
HWND GetTopWindow (HWND hWnd );
DWORD GetWindowThreadProcessId (HWND hWnd ,LPDWORD lpdwProcessId );
WINBOOL IsGUIThread (WINBOOL bConvert );
HWND GetLastActivePopup (HWND hWnd );
HWND GetWindow (HWND hWnd ,UINT uCmd );
HHOOK SetWindowsHookA (int nFilterType ,HOOKPROC pfnFilterProc );
HHOOK SetWindowsHookW (int nFilterType ,HOOKPROC pfnFilterProc );
WINBOOL UnhookWindowsHook (int nCode ,HOOKPROC pfnFilterProc );
HHOOK SetWindowsHookExA (int idHook ,HOOKPROC lpfn ,HINSTANCE hmod ,DWORD dwThreadId );
HHOOK SetWindowsHookExW (int idHook ,HOOKPROC lpfn ,HINSTANCE hmod ,DWORD dwThreadId );
WINBOOL UnhookWindowsHookEx (HHOOK hhk );
LRESULT CallNextHookEx (HHOOK hhk ,int nCode ,WPARAM wParam ,LPARAM lParam );
WINBOOL CheckMenuRadioItem (HMENU hmenu ,UINT first ,UINT last ,UINT check ,UINT flags );
typedef struct {WORD versionNumber ;WORD offset ;}MENUITEMTEMPLATEHEADER ;
typedef struct {WORD versionNumber ;WORD offset ;}*PMENUITEMTEMPLATEHEADER ;

typedef struct {WORD mtOption ;WORD mtID ;WCHAR mtString [1 ];}MENUITEMTEMPLATE ;
typedef struct {WORD mtOption ;WORD mtID ;WCHAR mtString [1 ];}*PMENUITEMTEMPLATE ;

HBITMAP LoadBitmapA (HINSTANCE hInstance ,LPCSTR lpBitmapName );
HBITMAP LoadBitmapW (HINSTANCE hInstance ,LPCWSTR lpBitmapName );
HCURSOR LoadCursorA (HINSTANCE hInstance ,LPCSTR lpCursorName );
HCURSOR LoadCursorW (HINSTANCE hInstance ,LPCWSTR lpCursorName );
HCURSOR LoadCursorFromFileA (LPCSTR lpFileName );
HCURSOR LoadCursorFromFileW (LPCWSTR lpFileName );
HCURSOR CreateCursor (HINSTANCE hInst ,int xHotSpot ,int yHotSpot ,int nWidth ,int nHeight ,const void *pvANDPlane ,const void *pvXORPlane );
WINBOOL DestroyCursor (HCURSOR hCursor );
typedef struct _ICONINFO {WINBOOL fIcon ;DWORD xHotspot ;DWORD yHotspot ;HBITMAP hbmMask ;HBITMAP hbmColor ;}ICONINFO ;
typedef ICONINFO *PICONINFO ;
WINBOOL SetSystemCursor (HCURSOR hcur ,DWORD id );
HICON LoadIconA (HINSTANCE hInstance ,LPCSTR lpIconName );
HICON LoadIconW (HINSTANCE hInstance ,LPCWSTR lpIconName );
UINT PrivateExtractIconsA (LPCSTR szFileName ,int nIconIndex ,int cxIcon ,int cyIcon ,HICON *phicon ,UINT *piconid ,UINT nIcons ,UINT flags );
UINT PrivateExtractIconsW (LPCWSTR szFileName ,int nIconIndex ,int cxIcon ,int cyIcon ,HICON *phicon ,UINT *piconid ,UINT nIcons ,UINT flags );
HICON CreateIcon (HINSTANCE hInstance ,int nWidth ,int nHeight ,BYTE cPlanes ,BYTE cBitsPixel ,const BYTE *lpbANDbits ,const BYTE *lpbXORbits );
WINBOOL DestroyIcon (HICON hIcon );
int LookupIconIdFromDirectory (PBYTE presbits ,WINBOOL fIcon );
int LookupIconIdFromDirectoryEx (PBYTE presbits ,WINBOOL fIcon ,int cxDesired ,int cyDesired ,UINT Flags );
HICON CreateIconFromResource (PBYTE presbits ,DWORD dwResSize ,WINBOOL fIcon ,DWORD dwVer );
HICON CreateIconFromResourceEx (PBYTE presbits ,DWORD dwResSize ,WINBOOL fIcon ,DWORD dwVer ,int cxDesired ,int cyDesired ,UINT Flags );
typedef struct tagCURSORSHAPE {int xHotSpot ;int yHotSpot ;int cx ;int cy ;int cbWidth ;BYTE Planes ;BYTE BitsPixel ;}CURSORSHAPE ;
typedef struct tagCURSORSHAPE {int xHotSpot ;int yHotSpot ;int cx ;int cy ;int cbWidth ;BYTE Planes ;BYTE BitsPixel ;}*LPCURSORSHAPE ;

HANDLE LoadImageA (HINSTANCE hInst ,LPCSTR name ,UINT type ,int cx ,int cy ,UINT fuLoad );
HANDLE LoadImageW (HINSTANCE hInst ,LPCWSTR name ,UINT type ,int cx ,int cy ,UINT fuLoad );
HANDLE CopyImage (HANDLE h ,UINT type ,int cx ,int cy ,UINT flags );
WINBOOL DrawIconEx (HDC hdc ,int xLeft ,int yTop ,HICON hIcon ,int cxWidth ,int cyWidth ,UINT istepIfAniCur ,HBRUSH hbrFlickerFreeDraw ,UINT diFlags );
HICON CreateIconIndirect (PICONINFO piconinfo );
HICON CopyIcon (HICON hIcon );
WINBOOL GetIconInfo (HICON hIcon ,PICONINFO piconinfo );
WINBOOL IsDialogMessageA (HWND hDlg ,LPMSG lpMsg );
WINBOOL IsDialogMessageW (HWND hDlg ,LPMSG lpMsg );
WINBOOL MapDialogRect (HWND hDlg ,LPRECT lpRect );
int DlgDirListA (HWND hDlg ,LPSTR lpPathSpec ,int nIDListBox ,int nIDStaticPath ,UINT uFileType );
int DlgDirListW (HWND hDlg ,LPWSTR lpPathSpec ,int nIDListBox ,int nIDStaticPath ,UINT uFileType );
WINBOOL DlgDirSelectExA (HWND hwndDlg ,LPSTR lpString ,int chCount ,int idListBox );
WINBOOL DlgDirSelectExW (HWND hwndDlg ,LPWSTR lpString ,int chCount ,int idListBox );
int DlgDirListComboBoxA (HWND hDlg ,LPSTR lpPathSpec ,int nIDComboBox ,int nIDStaticPath ,UINT uFiletype );
int DlgDirListComboBoxW (HWND hDlg ,LPWSTR lpPathSpec ,int nIDComboBox ,int nIDStaticPath ,UINT uFiletype );
WINBOOL DlgDirSelectComboBoxExA (HWND hwndDlg ,LPSTR lpString ,int cchOut ,int idComboBox );
WINBOOL DlgDirSelectComboBoxExW (HWND hwndDlg ,LPWSTR lpString ,int cchOut ,int idComboBox );
typedef struct tagSCROLLINFO {UINT cbSize ;UINT fMask ;int nMin ;int nMax ;UINT nPage ;int nPos ;int nTrackPos ;}SCROLLINFO ;
typedef struct tagSCROLLINFO {UINT cbSize ;UINT fMask ;int nMin ;int nMax ;UINT nPage ;int nPos ;int nTrackPos ;}*LPSCROLLINFO ;

typedef SCROLLINFO const *LPCSCROLLINFO ;
int SetScrollInfo (HWND hwnd ,int nBar ,LPCSCROLLINFO lpsi ,WINBOOL redraw );
WINBOOL GetScrollInfo (HWND hwnd ,int nBar ,LPSCROLLINFO lpsi );
typedef struct tagMDICREATESTRUCTA {LPCSTR szClass ;LPCSTR szTitle ;HANDLE hOwner ;int x ;int y ;int cx ;int cy ;DWORD style ;LPARAM lParam ;}MDICREATESTRUCTA ;
typedef struct tagMDICREATESTRUCTA {LPCSTR szClass ;LPCSTR szTitle ;HANDLE hOwner ;int x ;int y ;int cx ;int cy ;DWORD style ;LPARAM lParam ;}*LPMDICREATESTRUCTA ;

typedef struct tagMDICREATESTRUCTW {LPCWSTR szClass ;LPCWSTR szTitle ;HANDLE hOwner ;int x ;int y ;int cx ;int cy ;DWORD style ;LPARAM lParam ;}MDICREATESTRUCTW ;
typedef struct tagMDICREATESTRUCTW {LPCWSTR szClass ;LPCWSTR szTitle ;HANDLE hOwner ;int x ;int y ;int cx ;int cy ;DWORD style ;LPARAM lParam ;}*LPMDICREATESTRUCTW ;

typedef MDICREATESTRUCTA MDICREATESTRUCT ;
typedef LPMDICREATESTRUCTA LPMDICREATESTRUCT ;
typedef struct tagCLIENTCREATESTRUCT {HANDLE hWindowMenu ;UINT idFirstChild ;}CLIENTCREATESTRUCT ;
typedef struct tagCLIENTCREATESTRUCT {HANDLE hWindowMenu ;UINT idFirstChild ;}*LPCLIENTCREATESTRUCT ;

LRESULT DefFrameProcA (HWND hWnd ,HWND hWndMDIClient ,UINT uMsg ,WPARAM wParam ,LPARAM lParam );
LRESULT DefFrameProcW (HWND hWnd ,HWND hWndMDIClient ,UINT uMsg ,WPARAM wParam ,LPARAM lParam );
LRESULT DefMDIChildProcA (HWND hWnd ,UINT uMsg ,WPARAM wParam ,LPARAM lParam );
LRESULT DefMDIChildProcW (HWND hWnd ,UINT uMsg ,WPARAM wParam ,LPARAM lParam );
WINBOOL TranslateMDISysAccel (HWND hWndClient ,LPMSG lpMsg );
UINT ArrangeIconicWindows (HWND hWnd );
HWND CreateMDIWindowA (LPCSTR lpClassName ,LPCSTR lpWindowName ,DWORD dwStyle ,int X ,int Y ,int nWidth ,int nHeight ,HWND hWndParent ,HINSTANCE hInstance ,LPARAM lParam );
HWND CreateMDIWindowW (LPCWSTR lpClassName ,LPCWSTR lpWindowName ,DWORD dwStyle ,int X ,int Y ,int nWidth ,int nHeight ,HWND hWndParent ,HINSTANCE hInstance ,LPARAM lParam );
WORD TileWindows (HWND hwndParent ,UINT wHow ,const RECT *lpRect ,UINT cKids ,const HWND *lpKids );
WORD CascadeWindows (HWND hwndParent ,UINT wHow ,const RECT *lpRect ,UINT cKids ,const HWND *lpKids );
typedef DWORD HELPPOLY ;
typedef struct tagMULTIKEYHELPA {DWORD mkSize ;CHAR mkKeylist ;CHAR szKeyphrase [1 ];}MULTIKEYHELPA ;
typedef struct tagMULTIKEYHELPA {DWORD mkSize ;CHAR mkKeylist ;CHAR szKeyphrase [1 ];}*PMULTIKEYHELPA ;
typedef struct tagMULTIKEYHELPA {DWORD mkSize ;CHAR mkKeylist ;CHAR szKeyphrase [1 ];}*LPMULTIKEYHELPA ;

typedef struct tagMULTIKEYHELPW {DWORD mkSize ;WCHAR mkKeylist ;WCHAR szKeyphrase [1 ];}MULTIKEYHELPW ;
typedef struct tagMULTIKEYHELPW {DWORD mkSize ;WCHAR mkKeylist ;WCHAR szKeyphrase [1 ];}*PMULTIKEYHELPW ;
typedef struct tagMULTIKEYHELPW {DWORD mkSize ;WCHAR mkKeylist ;WCHAR szKeyphrase [1 ];}*LPMULTIKEYHELPW ;

typedef MULTIKEYHELPA MULTIKEYHELP ;
typedef PMULTIKEYHELPA PMULTIKEYHELP ;
typedef LPMULTIKEYHELPA LPMULTIKEYHELP ;
typedef struct tagHELPWININFOA {int wStructSize ;int x ;int y ;int dx ;int dy ;int wMax ;CHAR rgchMember [2 ];}HELPWININFOA ;
typedef struct tagHELPWININFOA {int wStructSize ;int x ;int y ;int dx ;int dy ;int wMax ;CHAR rgchMember [2 ];}*PHELPWININFOA ;
typedef struct tagHELPWININFOA {int wStructSize ;int x ;int y ;int dx ;int dy ;int wMax ;CHAR rgchMember [2 ];}*LPHELPWININFOA ;

typedef struct tagHELPWININFOW {int wStructSize ;int x ;int y ;int dx ;int dy ;int wMax ;WCHAR rgchMember [2 ];}HELPWININFOW ;
typedef struct tagHELPWININFOW {int wStructSize ;int x ;int y ;int dx ;int dy ;int wMax ;WCHAR rgchMember [2 ];}*PHELPWININFOW ;
typedef struct tagHELPWININFOW {int wStructSize ;int x ;int y ;int dx ;int dy ;int wMax ;WCHAR rgchMember [2 ];}*LPHELPWININFOW ;

typedef HELPWININFOA HELPWININFO ;
typedef PHELPWININFOA PHELPWININFO ;
typedef LPHELPWININFOA LPHELPWININFO ;
WINBOOL WinHelpA (HWND hWndMain ,LPCSTR lpszHelp ,UINT uCommand ,ULONG_PTR dwData );
WINBOOL WinHelpW (HWND hWndMain ,LPCWSTR lpszHelp ,UINT uCommand ,ULONG_PTR dwData );
DWORD GetGuiResources (HANDLE hProcess ,DWORD uiFlags );
typedef struct tagNONCLIENTMETRICSA {UINT cbSize ;int iBorderWidth ;int iScrollWidth ;int iScrollHeight ;int iCaptionWidth ;int iCaptionHeight ;LOGFONTA lfCaptionFont ;int iSmCaptionWidth ;int iSmCaptionHeight ;LOGFONTA lfSmCaptionFont ;int iMenuWidth ;int iMenuHeight ;LOGFONTA lfMenuFont ;LOGFONTA lfStatusFont ;LOGFONTA lfMessageFont ;}NONCLIENTMETRICSA ;
typedef struct tagNONCLIENTMETRICSA {UINT cbSize ;int iBorderWidth ;int iScrollWidth ;int iScrollHeight ;int iCaptionWidth ;int iCaptionHeight ;LOGFONTA lfCaptionFont ;int iSmCaptionWidth ;int iSmCaptionHeight ;LOGFONTA lfSmCaptionFont ;int iMenuWidth ;int iMenuHeight ;LOGFONTA lfMenuFont ;LOGFONTA lfStatusFont ;LOGFONTA lfMessageFont ;}*PNONCLIENTMETRICSA ;
typedef struct tagNONCLIENTMETRICSA {UINT cbSize ;int iBorderWidth ;int iScrollWidth ;int iScrollHeight ;int iCaptionWidth ;int iCaptionHeight ;LOGFONTA lfCaptionFont ;int iSmCaptionWidth ;int iSmCaptionHeight ;LOGFONTA lfSmCaptionFont ;int iMenuWidth ;int iMenuHeight ;LOGFONTA lfMenuFont ;LOGFONTA lfStatusFont ;LOGFONTA lfMessageFont ;}*LPNONCLIENTMETRICSA ;

typedef struct tagNONCLIENTMETRICSW {UINT cbSize ;int iBorderWidth ;int iScrollWidth ;int iScrollHeight ;int iCaptionWidth ;int iCaptionHeight ;LOGFONTW lfCaptionFont ;int iSmCaptionWidth ;int iSmCaptionHeight ;LOGFONTW lfSmCaptionFont ;int iMenuWidth ;int iMenuHeight ;LOGFONTW lfMenuFont ;LOGFONTW lfStatusFont ;LOGFONTW lfMessageFont ;}NONCLIENTMETRICSW ;
typedef struct tagNONCLIENTMETRICSW {UINT cbSize ;int iBorderWidth ;int iScrollWidth ;int iScrollHeight ;int iCaptionWidth ;int iCaptionHeight ;LOGFONTW lfCaptionFont ;int iSmCaptionWidth ;int iSmCaptionHeight ;LOGFONTW lfSmCaptionFont ;int iMenuWidth ;int iMenuHeight ;LOGFONTW lfMenuFont ;LOGFONTW lfStatusFont ;LOGFONTW lfMessageFont ;}*PNONCLIENTMETRICSW ;
typedef struct tagNONCLIENTMETRICSW {UINT cbSize ;int iBorderWidth ;int iScrollWidth ;int iScrollHeight ;int iCaptionWidth ;int iCaptionHeight ;LOGFONTW lfCaptionFont ;int iSmCaptionWidth ;int iSmCaptionHeight ;LOGFONTW lfSmCaptionFont ;int iMenuWidth ;int iMenuHeight ;LOGFONTW lfMenuFont ;LOGFONTW lfStatusFont ;LOGFONTW lfMessageFont ;}*LPNONCLIENTMETRICSW ;

typedef NONCLIENTMETRICSA NONCLIENTMETRICS ;
typedef PNONCLIENTMETRICSA PNONCLIENTMETRICS ;
typedef LPNONCLIENTMETRICSA LPNONCLIENTMETRICS ;
typedef struct tagMINIMIZEDMETRICS {UINT cbSize ;int iWidth ;int iHorzGap ;int iVertGap ;int iArrange ;}MINIMIZEDMETRICS ;
typedef struct tagMINIMIZEDMETRICS {UINT cbSize ;int iWidth ;int iHorzGap ;int iVertGap ;int iArrange ;}*PMINIMIZEDMETRICS ;
typedef struct tagMINIMIZEDMETRICS {UINT cbSize ;int iWidth ;int iHorzGap ;int iVertGap ;int iArrange ;}*LPMINIMIZEDMETRICS ;

typedef struct tagICONMETRICSA {UINT cbSize ;int iHorzSpacing ;int iVertSpacing ;int iTitleWrap ;LOGFONTA lfFont ;}ICONMETRICSA ;
typedef struct tagICONMETRICSA {UINT cbSize ;int iHorzSpacing ;int iVertSpacing ;int iTitleWrap ;LOGFONTA lfFont ;}*PICONMETRICSA ;
typedef struct tagICONMETRICSA {UINT cbSize ;int iHorzSpacing ;int iVertSpacing ;int iTitleWrap ;LOGFONTA lfFont ;}*LPICONMETRICSA ;

typedef struct tagICONMETRICSW {UINT cbSize ;int iHorzSpacing ;int iVertSpacing ;int iTitleWrap ;LOGFONTW lfFont ;}ICONMETRICSW ;
typedef struct tagICONMETRICSW {UINT cbSize ;int iHorzSpacing ;int iVertSpacing ;int iTitleWrap ;LOGFONTW lfFont ;}*PICONMETRICSW ;
typedef struct tagICONMETRICSW {UINT cbSize ;int iHorzSpacing ;int iVertSpacing ;int iTitleWrap ;LOGFONTW lfFont ;}*LPICONMETRICSW ;

typedef ICONMETRICSA ICONMETRICS ;
typedef PICONMETRICSA PICONMETRICS ;
typedef LPICONMETRICSA LPICONMETRICS ;
typedef struct tagANIMATIONINFO {UINT cbSize ;int iMinAnimate ;}ANIMATIONINFO ;
typedef struct tagANIMATIONINFO {UINT cbSize ;int iMinAnimate ;}*LPANIMATIONINFO ;

typedef struct tagSERIALKEYSA {UINT cbSize ;DWORD dwFlags ;LPSTR lpszActivePort ;LPSTR lpszPort ;UINT iBaudRate ;UINT iPortState ;UINT iActive ;}SERIALKEYSA ;
typedef struct tagSERIALKEYSA {UINT cbSize ;DWORD dwFlags ;LPSTR lpszActivePort ;LPSTR lpszPort ;UINT iBaudRate ;UINT iPortState ;UINT iActive ;}*LPSERIALKEYSA ;

typedef struct tagSERIALKEYSW {UINT cbSize ;DWORD dwFlags ;LPWSTR lpszActivePort ;LPWSTR lpszPort ;UINT iBaudRate ;UINT iPortState ;UINT iActive ;}SERIALKEYSW ;
typedef struct tagSERIALKEYSW {UINT cbSize ;DWORD dwFlags ;LPWSTR lpszActivePort ;LPWSTR lpszPort ;UINT iBaudRate ;UINT iPortState ;UINT iActive ;}*LPSERIALKEYSW ;

typedef SERIALKEYSA SERIALKEYS ;
typedef LPSERIALKEYSA LPSERIALKEYS ;
typedef struct tagHIGHCONTRASTA {UINT cbSize ;DWORD dwFlags ;LPSTR lpszDefaultScheme ;}HIGHCONTRASTA ;
typedef struct tagHIGHCONTRASTA {UINT cbSize ;DWORD dwFlags ;LPSTR lpszDefaultScheme ;}*LPHIGHCONTRASTA ;

typedef struct tagHIGHCONTRASTW {UINT cbSize ;DWORD dwFlags ;LPWSTR lpszDefaultScheme ;}HIGHCONTRASTW ;
typedef struct tagHIGHCONTRASTW {UINT cbSize ;DWORD dwFlags ;LPWSTR lpszDefaultScheme ;}*LPHIGHCONTRASTW ;

typedef HIGHCONTRASTA HIGHCONTRAST ;
typedef LPHIGHCONTRASTA LPHIGHCONTRAST ;
// m:\mingw\x86_64-w64-mingw32\include\tvout.h

typedef struct _VIDEOPARAMETERS {GUID Guid ;ULONG dwOffset ;ULONG dwCommand ;ULONG dwFlags ;ULONG dwMode ;ULONG dwTVStandard ;ULONG dwAvailableModes ;ULONG dwAvailableTVStandard ;ULONG dwFlickerFilter ;ULONG dwOverScanX ;ULONG dwOverScanY ;ULONG dwMaxUnscaledX ;ULONG dwMaxUnscaledY ;ULONG dwPositionX ;ULONG dwPositionY ;ULONG dwBrightness ;ULONG dwContrast ;ULONG dwCPType ;ULONG dwCPCommand ;ULONG dwCPStandard ;ULONG dwCPKey ;ULONG bCP_APSTriggerBits ;UCHAR bOEMCopyProtection [256 ];}VIDEOPARAMETERS ;
typedef struct _VIDEOPARAMETERS {GUID Guid ;ULONG dwOffset ;ULONG dwCommand ;ULONG dwFlags ;ULONG dwMode ;ULONG dwTVStandard ;ULONG dwAvailableModes ;ULONG dwAvailableTVStandard ;ULONG dwFlickerFilter ;ULONG dwOverScanX ;ULONG dwOverScanY ;ULONG dwMaxUnscaledX ;ULONG dwMaxUnscaledY ;ULONG dwPositionX ;ULONG dwPositionY ;ULONG dwBrightness ;ULONG dwContrast ;ULONG dwCPType ;ULONG dwCPCommand ;ULONG dwCPStandard ;ULONG dwCPKey ;ULONG bCP_APSTriggerBits ;UCHAR bOEMCopyProtection [256 ];}*PVIDEOPARAMETERS ;
typedef struct _VIDEOPARAMETERS {GUID Guid ;ULONG dwOffset ;ULONG dwCommand ;ULONG dwFlags ;ULONG dwMode ;ULONG dwTVStandard ;ULONG dwAvailableModes ;ULONG dwAvailableTVStandard ;ULONG dwFlickerFilter ;ULONG dwOverScanX ;ULONG dwOverScanY ;ULONG dwMaxUnscaledX ;ULONG dwMaxUnscaledY ;ULONG dwPositionX ;ULONG dwPositionY ;ULONG dwBrightness ;ULONG dwContrast ;ULONG dwCPType ;ULONG dwCPCommand ;ULONG dwCPStandard ;ULONG dwCPKey ;ULONG bCP_APSTriggerBits ;UCHAR bOEMCopyProtection [256 ];}*LPVIDEOPARAMETERS ;

// m:\mingw\x86_64-w64-mingw32\include\winuser.h

LONG ChangeDisplaySettingsA (LPDEVMODEA lpDevMode ,DWORD dwFlags );
LONG ChangeDisplaySettingsW (LPDEVMODEW lpDevMode ,DWORD dwFlags );
LONG ChangeDisplaySettingsExA (LPCSTR lpszDeviceName ,LPDEVMODEA lpDevMode ,HWND hwnd ,DWORD dwflags ,LPVOID lParam );
LONG ChangeDisplaySettingsExW (LPCWSTR lpszDeviceName ,LPDEVMODEW lpDevMode ,HWND hwnd ,DWORD dwflags ,LPVOID lParam );
WINBOOL EnumDisplaySettingsA (LPCSTR lpszDeviceName ,DWORD iModeNum ,LPDEVMODEA lpDevMode );
WINBOOL EnumDisplaySettingsW (LPCWSTR lpszDeviceName ,DWORD iModeNum ,LPDEVMODEW lpDevMode );
WINBOOL EnumDisplaySettingsExA (LPCSTR lpszDeviceName ,DWORD iModeNum ,LPDEVMODEA lpDevMode ,DWORD dwFlags );
WINBOOL EnumDisplaySettingsExW (LPCWSTR lpszDeviceName ,DWORD iModeNum ,LPDEVMODEW lpDevMode ,DWORD dwFlags );
WINBOOL EnumDisplayDevicesA (LPCSTR lpDevice ,DWORD iDevNum ,PDISPLAY_DEVICEA lpDisplayDevice ,DWORD dwFlags );
WINBOOL EnumDisplayDevicesW (LPCWSTR lpDevice ,DWORD iDevNum ,PDISPLAY_DEVICEW lpDisplayDevice ,DWORD dwFlags );
WINBOOL SystemParametersInfoA (UINT uiAction ,UINT uiParam ,PVOID pvParam ,UINT fWinIni );
WINBOOL SystemParametersInfoW (UINT uiAction ,UINT uiParam ,PVOID pvParam ,UINT fWinIni );
typedef struct tagFILTERKEYS {UINT cbSize ;DWORD dwFlags ;DWORD iWaitMSec ;DWORD iDelayMSec ;DWORD iRepeatMSec ;DWORD iBounceMSec ;}FILTERKEYS ;
typedef struct tagFILTERKEYS {UINT cbSize ;DWORD dwFlags ;DWORD iWaitMSec ;DWORD iDelayMSec ;DWORD iRepeatMSec ;DWORD iBounceMSec ;}*LPFILTERKEYS ;

typedef struct tagSTICKYKEYS {UINT cbSize ;DWORD dwFlags ;}STICKYKEYS ;
typedef struct tagSTICKYKEYS {UINT cbSize ;DWORD dwFlags ;}*LPSTICKYKEYS ;

typedef struct tagMOUSEKEYS {UINT cbSize ;DWORD dwFlags ;DWORD iMaxSpeed ;DWORD iTimeToMaxSpeed ;DWORD iCtrlSpeed ;DWORD dwReserved1 ;DWORD dwReserved2 ;}MOUSEKEYS ;
typedef struct tagMOUSEKEYS {UINT cbSize ;DWORD dwFlags ;DWORD iMaxSpeed ;DWORD iTimeToMaxSpeed ;DWORD iCtrlSpeed ;DWORD dwReserved1 ;DWORD dwReserved2 ;}*LPMOUSEKEYS ;

typedef struct tagACCESSTIMEOUT {UINT cbSize ;DWORD dwFlags ;DWORD iTimeOutMSec ;}ACCESSTIMEOUT ;
typedef struct tagACCESSTIMEOUT {UINT cbSize ;DWORD dwFlags ;DWORD iTimeOutMSec ;}*LPACCESSTIMEOUT ;

typedef struct tagSOUNDSENTRYA {UINT cbSize ;DWORD dwFlags ;DWORD iFSTextEffect ;DWORD iFSTextEffectMSec ;DWORD iFSTextEffectColorBits ;DWORD iFSGrafEffect ;DWORD iFSGrafEffectMSec ;DWORD iFSGrafEffectColor ;DWORD iWindowsEffect ;DWORD iWindowsEffectMSec ;LPSTR lpszWindowsEffectDLL ;DWORD iWindowsEffectOrdinal ;}SOUNDSENTRYA ;
typedef struct tagSOUNDSENTRYA {UINT cbSize ;DWORD dwFlags ;DWORD iFSTextEffect ;DWORD iFSTextEffectMSec ;DWORD iFSTextEffectColorBits ;DWORD iFSGrafEffect ;DWORD iFSGrafEffectMSec ;DWORD iFSGrafEffectColor ;DWORD iWindowsEffect ;DWORD iWindowsEffectMSec ;LPSTR lpszWindowsEffectDLL ;DWORD iWindowsEffectOrdinal ;}*LPSOUNDSENTRYA ;

typedef struct tagSOUNDSENTRYW {UINT cbSize ;DWORD dwFlags ;DWORD iFSTextEffect ;DWORD iFSTextEffectMSec ;DWORD iFSTextEffectColorBits ;DWORD iFSGrafEffect ;DWORD iFSGrafEffectMSec ;DWORD iFSGrafEffectColor ;DWORD iWindowsEffect ;DWORD iWindowsEffectMSec ;LPWSTR lpszWindowsEffectDLL ;DWORD iWindowsEffectOrdinal ;}SOUNDSENTRYW ;
typedef struct tagSOUNDSENTRYW {UINT cbSize ;DWORD dwFlags ;DWORD iFSTextEffect ;DWORD iFSTextEffectMSec ;DWORD iFSTextEffectColorBits ;DWORD iFSGrafEffect ;DWORD iFSGrafEffectMSec ;DWORD iFSGrafEffectColor ;DWORD iWindowsEffect ;DWORD iWindowsEffectMSec ;LPWSTR lpszWindowsEffectDLL ;DWORD iWindowsEffectOrdinal ;}*LPSOUNDSENTRYW ;

typedef SOUNDSENTRYA SOUNDSENTRY ;
typedef LPSOUNDSENTRYA LPSOUNDSENTRY ;
typedef struct tagTOGGLEKEYS {UINT cbSize ;DWORD dwFlags ;}TOGGLEKEYS ;
typedef struct tagTOGGLEKEYS {UINT cbSize ;DWORD dwFlags ;}*LPTOGGLEKEYS ;

typedef struct tagMONITORINFO {DWORD cbSize ;RECT rcMonitor ;RECT rcWork ;DWORD dwFlags ;}MONITORINFO ;
typedef struct tagMONITORINFO {DWORD cbSize ;RECT rcMonitor ;RECT rcWork ;DWORD dwFlags ;}*LPMONITORINFO ;

typedef struct tagMONITORINFOEXA {struct {DWORD cbSize ;RECT rcMonitor ;RECT rcWork ;DWORD dwFlags ;};CHAR szDevice [32 ];}MONITORINFOEXA ;
typedef struct tagMONITORINFOEXA {struct {DWORD cbSize ;RECT rcMonitor ;RECT rcWork ;DWORD dwFlags ;};CHAR szDevice [32 ];}*LPMONITORINFOEXA ;

typedef struct tagMONITORINFOEXW {struct {DWORD cbSize ;RECT rcMonitor ;RECT rcWork ;DWORD dwFlags ;};WCHAR szDevice [32 ];}MONITORINFOEXW ;
typedef struct tagMONITORINFOEXW {struct {DWORD cbSize ;RECT rcMonitor ;RECT rcWork ;DWORD dwFlags ;};WCHAR szDevice [32 ];}*LPMONITORINFOEXW ;

typedef MONITORINFOEXA MONITORINFOEX ;
typedef LPMONITORINFOEXA LPMONITORINFOEX ;
typedef WINBOOL (*MONITORENUMPROC )(HMONITOR ,HDC ,LPRECT ,LPARAM );
void SetDebugErrorLevel (DWORD dwLevel );
void SetLastErrorEx (DWORD dwErrCode ,DWORD dwType );
int InternalGetWindowText (HWND hWnd ,LPWSTR pString ,int cchMaxCount );
WINBOOL CancelShutdown (void );
HMONITOR MonitorFromPoint (POINT pt ,DWORD dwFlags );
HMONITOR MonitorFromRect (LPCRECT lprc ,DWORD dwFlags );
HMONITOR MonitorFromWindow (HWND hwnd ,DWORD dwFlags );
WINBOOL GetMonitorInfoA (HMONITOR hMonitor ,LPMONITORINFO lpmi );
WINBOOL GetMonitorInfoW (HMONITOR hMonitor ,LPMONITORINFO lpmi );
WINBOOL EnumDisplayMonitors (HDC hdc ,LPCRECT lprcClip ,MONITORENUMPROC lpfnEnum ,LPARAM dwData );
typedef void (*WINEVENTPROC )(HWINEVENTHOOK hWinEventHook ,DWORD event ,HWND hwnd ,LONG idObject ,LONG idChild ,DWORD idEventThread ,DWORD dwmsEventTime );
void NotifyWinEvent (DWORD event ,HWND hwnd ,LONG idObject ,LONG idChild );
HWINEVENTHOOK SetWinEventHook (DWORD eventMin ,DWORD eventMax ,HMODULE hmodWinEventProc ,WINEVENTPROC pfnWinEventProc ,DWORD idProcess ,DWORD idThread ,DWORD dwFlags );
WINBOOL IsWinEventHookInstalled (DWORD event );
WINBOOL UnhookWinEvent (HWINEVENTHOOK hWinEventHook );
typedef struct tagGUITHREADINFO {DWORD cbSize ;DWORD flags ;HWND hwndActive ;HWND hwndFocus ;HWND hwndCapture ;HWND hwndMenuOwner ;HWND hwndMoveSize ;HWND hwndCaret ;RECT rcCaret ;}GUITHREADINFO ;
typedef struct tagGUITHREADINFO {DWORD cbSize ;DWORD flags ;HWND hwndActive ;HWND hwndFocus ;HWND hwndCapture ;HWND hwndMenuOwner ;HWND hwndMoveSize ;HWND hwndCaret ;RECT rcCaret ;}*PGUITHREADINFO ;
typedef struct tagGUITHREADINFO {DWORD cbSize ;DWORD flags ;HWND hwndActive ;HWND hwndFocus ;HWND hwndCapture ;HWND hwndMenuOwner ;HWND hwndMoveSize ;HWND hwndCaret ;RECT rcCaret ;}*LPGUITHREADINFO ;

WINBOOL GetGUIThreadInfo (DWORD idThread ,PGUITHREADINFO pgui );
WINBOOL BlockInput (WINBOOL fBlockIt );
UINT GetWindowModuleFileNameA (HWND hwnd ,LPSTR pszFileName ,UINT cchFileNameMax );
UINT GetWindowModuleFileNameW (HWND hwnd ,LPWSTR pszFileName ,UINT cchFileNameMax );
typedef struct tagCURSORINFO {DWORD cbSize ;DWORD flags ;HCURSOR hCursor ;POINT ptScreenPos ;}CURSORINFO ;
typedef struct tagCURSORINFO {DWORD cbSize ;DWORD flags ;HCURSOR hCursor ;POINT ptScreenPos ;}*PCURSORINFO ;
typedef struct tagCURSORINFO {DWORD cbSize ;DWORD flags ;HCURSOR hCursor ;POINT ptScreenPos ;}*LPCURSORINFO ;

WINBOOL GetCursorInfo (PCURSORINFO pci );
typedef struct tagWINDOWINFO {DWORD cbSize ;RECT rcWindow ;RECT rcClient ;DWORD dwStyle ;DWORD dwExStyle ;DWORD dwWindowStatus ;UINT cxWindowBorders ;UINT cyWindowBorders ;ATOM atomWindowType ;WORD wCreatorVersion ;}WINDOWINFO ;
typedef struct tagWINDOWINFO {DWORD cbSize ;RECT rcWindow ;RECT rcClient ;DWORD dwStyle ;DWORD dwExStyle ;DWORD dwWindowStatus ;UINT cxWindowBorders ;UINT cyWindowBorders ;ATOM atomWindowType ;WORD wCreatorVersion ;}*PWINDOWINFO ;
typedef struct tagWINDOWINFO {DWORD cbSize ;RECT rcWindow ;RECT rcClient ;DWORD dwStyle ;DWORD dwExStyle ;DWORD dwWindowStatus ;UINT cxWindowBorders ;UINT cyWindowBorders ;ATOM atomWindowType ;WORD wCreatorVersion ;}*LPWINDOWINFO ;

WINBOOL GetWindowInfo (HWND hwnd ,PWINDOWINFO pwi );
typedef struct tagTITLEBARINFO {DWORD cbSize ;RECT rcTitleBar ;DWORD rgstate [6 ];}TITLEBARINFO ;
typedef struct tagTITLEBARINFO {DWORD cbSize ;RECT rcTitleBar ;DWORD rgstate [6 ];}*PTITLEBARINFO ;
typedef struct tagTITLEBARINFO {DWORD cbSize ;RECT rcTitleBar ;DWORD rgstate [6 ];}*LPTITLEBARINFO ;

WINBOOL GetTitleBarInfo (HWND hwnd ,PTITLEBARINFO pti );
typedef struct tagMENUBARINFO {DWORD cbSize ;RECT rcBar ;HMENU hMenu ;HWND hwndMenu ;WINBOOL fBarFocused :1 ;WINBOOL fFocused :1 ;}MENUBARINFO ;
typedef struct tagMENUBARINFO {DWORD cbSize ;RECT rcBar ;HMENU hMenu ;HWND hwndMenu ;WINBOOL fBarFocused :1 ;WINBOOL fFocused :1 ;}*PMENUBARINFO ;
typedef struct tagMENUBARINFO {DWORD cbSize ;RECT rcBar ;HMENU hMenu ;HWND hwndMenu ;WINBOOL fBarFocused :1 ;WINBOOL fFocused :1 ;}*LPMENUBARINFO ;

WINBOOL GetMenuBarInfo (HWND hwnd ,LONG idObject ,LONG idItem ,PMENUBARINFO pmbi );
typedef struct tagSCROLLBARINFO {DWORD cbSize ;RECT rcScrollBar ;int dxyLineButton ;int xyThumbTop ;int xyThumbBottom ;int reserved ;DWORD rgstate [6 ];}SCROLLBARINFO ;
typedef struct tagSCROLLBARINFO {DWORD cbSize ;RECT rcScrollBar ;int dxyLineButton ;int xyThumbTop ;int xyThumbBottom ;int reserved ;DWORD rgstate [6 ];}*PSCROLLBARINFO ;
typedef struct tagSCROLLBARINFO {DWORD cbSize ;RECT rcScrollBar ;int dxyLineButton ;int xyThumbTop ;int xyThumbBottom ;int reserved ;DWORD rgstate [6 ];}*LPSCROLLBARINFO ;

WINBOOL GetScrollBarInfo (HWND hwnd ,LONG idObject ,PSCROLLBARINFO psbi );
typedef struct tagCOMBOBOXINFO {DWORD cbSize ;RECT rcItem ;RECT rcButton ;DWORD stateButton ;HWND hwndCombo ;HWND hwndItem ;HWND hwndList ;}COMBOBOXINFO ;
typedef struct tagCOMBOBOXINFO {DWORD cbSize ;RECT rcItem ;RECT rcButton ;DWORD stateButton ;HWND hwndCombo ;HWND hwndItem ;HWND hwndList ;}*PCOMBOBOXINFO ;
typedef struct tagCOMBOBOXINFO {DWORD cbSize ;RECT rcItem ;RECT rcButton ;DWORD stateButton ;HWND hwndCombo ;HWND hwndItem ;HWND hwndList ;}*LPCOMBOBOXINFO ;

WINBOOL GetComboBoxInfo (HWND hwndCombo ,PCOMBOBOXINFO pcbi );
HWND GetAncestor (HWND hwnd ,UINT gaFlags );
HWND RealChildWindowFromPoint (HWND hwndParent ,POINT ptParentClientCoords );
UINT RealGetWindowClassA (HWND hwnd ,LPSTR ptszClassName ,UINT cchClassNameMax );
UINT RealGetWindowClassW (HWND hwnd ,LPWSTR ptszClassName ,UINT cchClassNameMax );
typedef struct tagALTTABINFO {DWORD cbSize ;int cItems ;int cColumns ;int cRows ;int iColFocus ;int iRowFocus ;int cxItem ;int cyItem ;POINT ptStart ;}ALTTABINFO ;
typedef struct tagALTTABINFO {DWORD cbSize ;int cItems ;int cColumns ;int cRows ;int iColFocus ;int iRowFocus ;int cxItem ;int cyItem ;POINT ptStart ;}*PALTTABINFO ;
typedef struct tagALTTABINFO {DWORD cbSize ;int cItems ;int cColumns ;int cRows ;int iColFocus ;int iRowFocus ;int cxItem ;int cyItem ;POINT ptStart ;}*LPALTTABINFO ;

WINBOOL GetAltTabInfoA (HWND hwnd ,int iItem ,PALTTABINFO pati ,LPSTR pszItemText ,UINT cchItemText );
WINBOOL GetAltTabInfoW (HWND hwnd ,int iItem ,PALTTABINFO pati ,LPWSTR pszItemText ,UINT cchItemText );
DWORD GetListBoxInfo (HWND hwnd );
WINBOOL LockWorkStation (void );
WINBOOL UserHandleGrantAccess (HANDLE hUserHandle ,HANDLE hJob ,WINBOOL bGrant );
struct HRAWINPUT__ {int unused ;};
typedef struct HRAWINPUT__ *HRAWINPUT ;
typedef struct tagRAWINPUTHEADER {DWORD dwType ;DWORD dwSize ;HANDLE hDevice ;WPARAM wParam ;}RAWINPUTHEADER ;
typedef struct tagRAWINPUTHEADER {DWORD dwType ;DWORD dwSize ;HANDLE hDevice ;WPARAM wParam ;}*PRAWINPUTHEADER ;
typedef struct tagRAWINPUTHEADER {DWORD dwType ;DWORD dwSize ;HANDLE hDevice ;WPARAM wParam ;}*LPRAWINPUTHEADER ;

typedef struct tagRAWMOUSE {USHORT usFlags ;union {ULONG ulButtons ;struct {USHORT usButtonFlags ;USHORT usButtonData ;};};ULONG ulRawButtons ;LONG lLastX ;LONG lLastY ;ULONG ulExtraInformation ;}RAWMOUSE ;
typedef struct tagRAWMOUSE {USHORT usFlags ;union {ULONG ulButtons ;struct {USHORT usButtonFlags ;USHORT usButtonData ;};};ULONG ulRawButtons ;LONG lLastX ;LONG lLastY ;ULONG ulExtraInformation ;}*PRAWMOUSE ;
typedef struct tagRAWMOUSE {USHORT usFlags ;union {ULONG ulButtons ;struct {USHORT usButtonFlags ;USHORT usButtonData ;};};ULONG ulRawButtons ;LONG lLastX ;LONG lLastY ;ULONG ulExtraInformation ;}*LPRAWMOUSE ;

typedef struct tagRAWKEYBOARD {USHORT MakeCode ;USHORT Flags ;USHORT Reserved ;USHORT VKey ;UINT Message ;ULONG ExtraInformation ;}RAWKEYBOARD ;
typedef struct tagRAWKEYBOARD {USHORT MakeCode ;USHORT Flags ;USHORT Reserved ;USHORT VKey ;UINT Message ;ULONG ExtraInformation ;}*PRAWKEYBOARD ;
typedef struct tagRAWKEYBOARD {USHORT MakeCode ;USHORT Flags ;USHORT Reserved ;USHORT VKey ;UINT Message ;ULONG ExtraInformation ;}*LPRAWKEYBOARD ;

typedef struct tagRAWHID {DWORD dwSizeHid ;DWORD dwCount ;BYTE bRawData [1 ];}RAWHID ;
typedef struct tagRAWHID {DWORD dwSizeHid ;DWORD dwCount ;BYTE bRawData [1 ];}*PRAWHID ;
typedef struct tagRAWHID {DWORD dwSizeHid ;DWORD dwCount ;BYTE bRawData [1 ];}*LPRAWHID ;

typedef struct tagRAWINPUT {RAWINPUTHEADER header ;union {RAWMOUSE mouse ;RAWKEYBOARD keyboard ;RAWHID hid ;}data ;}RAWINPUT ;
typedef struct tagRAWINPUT {RAWINPUTHEADER header ;union {RAWMOUSE mouse ;RAWKEYBOARD keyboard ;RAWHID hid ;}data ;}*PRAWINPUT ;
typedef struct tagRAWINPUT {RAWINPUTHEADER header ;union {RAWMOUSE mouse ;RAWKEYBOARD keyboard ;RAWHID hid ;}data ;}*LPRAWINPUT ;

UINT GetRawInputData (HRAWINPUT hRawInput ,UINT uiCommand ,LPVOID pData ,PUINT pcbSize ,UINT cbSizeHeader );
typedef struct tagRID_DEVICE_INFO_MOUSE {DWORD dwId ;DWORD dwNumberOfButtons ;DWORD dwSampleRate ;WINBOOL fHasHorizontalWheel ;}RID_DEVICE_INFO_MOUSE ;
typedef struct tagRID_DEVICE_INFO_MOUSE {DWORD dwId ;DWORD dwNumberOfButtons ;DWORD dwSampleRate ;WINBOOL fHasHorizontalWheel ;}*PRID_DEVICE_INFO_MOUSE ;

typedef struct tagRID_DEVICE_INFO_KEYBOARD {DWORD dwType ;DWORD dwSubType ;DWORD dwKeyboardMode ;DWORD dwNumberOfFunctionKeys ;DWORD dwNumberOfIndicators ;DWORD dwNumberOfKeysTotal ;}RID_DEVICE_INFO_KEYBOARD ;
typedef struct tagRID_DEVICE_INFO_KEYBOARD {DWORD dwType ;DWORD dwSubType ;DWORD dwKeyboardMode ;DWORD dwNumberOfFunctionKeys ;DWORD dwNumberOfIndicators ;DWORD dwNumberOfKeysTotal ;}*PRID_DEVICE_INFO_KEYBOARD ;

typedef struct tagRID_DEVICE_INFO_HID {DWORD dwVendorId ;DWORD dwProductId ;DWORD dwVersionNumber ;USHORT usUsagePage ;USHORT usUsage ;}RID_DEVICE_INFO_HID ;
typedef struct tagRID_DEVICE_INFO_HID {DWORD dwVendorId ;DWORD dwProductId ;DWORD dwVersionNumber ;USHORT usUsagePage ;USHORT usUsage ;}*PRID_DEVICE_INFO_HID ;

typedef struct tagRID_DEVICE_INFO {DWORD cbSize ;DWORD dwType ;union {RID_DEVICE_INFO_MOUSE mouse ;RID_DEVICE_INFO_KEYBOARD keyboard ;RID_DEVICE_INFO_HID hid ;};}RID_DEVICE_INFO ;
typedef struct tagRID_DEVICE_INFO {DWORD cbSize ;DWORD dwType ;union {RID_DEVICE_INFO_MOUSE mouse ;RID_DEVICE_INFO_KEYBOARD keyboard ;RID_DEVICE_INFO_HID hid ;};}*PRID_DEVICE_INFO ;
typedef struct tagRID_DEVICE_INFO {DWORD cbSize ;DWORD dwType ;union {RID_DEVICE_INFO_MOUSE mouse ;RID_DEVICE_INFO_KEYBOARD keyboard ;RID_DEVICE_INFO_HID hid ;};}*LPRID_DEVICE_INFO ;

UINT GetRawInputDeviceInfoA (HANDLE hDevice ,UINT uiCommand ,LPVOID pData ,PUINT pcbSize );
UINT GetRawInputDeviceInfoW (HANDLE hDevice ,UINT uiCommand ,LPVOID pData ,PUINT pcbSize );
UINT GetRawInputBuffer (PRAWINPUT pData ,PUINT pcbSize ,UINT cbSizeHeader );
typedef struct tagRAWINPUTDEVICE {USHORT usUsagePage ;USHORT usUsage ;DWORD dwFlags ;HWND hwndTarget ;}RAWINPUTDEVICE ;
typedef struct tagRAWINPUTDEVICE {USHORT usUsagePage ;USHORT usUsage ;DWORD dwFlags ;HWND hwndTarget ;}*PRAWINPUTDEVICE ;
typedef struct tagRAWINPUTDEVICE {USHORT usUsagePage ;USHORT usUsage ;DWORD dwFlags ;HWND hwndTarget ;}*LPRAWINPUTDEVICE ;

typedef const RAWINPUTDEVICE *PCRAWINPUTDEVICE ;
typedef struct tagRAWINPUTDEVICELIST {HANDLE hDevice ;DWORD dwType ;}RAWINPUTDEVICELIST ;
typedef struct tagRAWINPUTDEVICELIST {HANDLE hDevice ;DWORD dwType ;}*PRAWINPUTDEVICELIST ;

WINBOOL RegisterRawInputDevices (PCRAWINPUTDEVICE pRawInputDevices ,UINT uiNumDevices ,UINT cbSize );
UINT GetRegisteredRawInputDevices (PRAWINPUTDEVICE pRawInputDevices ,PUINT puiNumDevices ,UINT cbSize );
UINT GetRawInputDeviceList (PRAWINPUTDEVICELIST pRawInputDeviceList ,PUINT puiNumDevices ,UINT cbSize );
LRESULT DefRawInputProc (PRAWINPUT *paRawInput ,INT nInput ,UINT cbSizeHeader );
WINBOOL ShutdownBlockReasonCreate (HWND hWnd ,LPCWSTR pwszReason );
WINBOOL ShutdownBlockReasonQuery (HWND hWnd ,LPWSTR pwszBuff ,DWORD *pcchBuff );
WINBOOL ShutdownBlockReasonDestroy (HWND hWnd );
// m:\mingw\x86_64-w64-mingw32\include\datetimeapi.h

int GetTimeFormatEx (LPCWSTR lpLocaleName ,DWORD dwFlags ,const SYSTEMTIME *lpTime ,LPCWSTR lpFormat ,LPWSTR lpTimeStr ,int cchTime );
int GetDateFormatEx (LPCWSTR lpLocaleName ,DWORD dwFlags ,const SYSTEMTIME *lpDate ,LPCWSTR lpFormat ,LPWSTR lpDateStr ,int cchDate ,LPCWSTR lpCalendar );
int GetDateFormatA (LCID Locale ,DWORD dwFlags ,const SYSTEMTIME *lpDate ,LPCSTR lpFormat ,LPSTR lpDateStr ,int cchDate );
int GetDateFormatW (LCID Locale ,DWORD dwFlags ,const SYSTEMTIME *lpDate ,LPCWSTR lpFormat ,LPWSTR lpDateStr ,int cchDate );
int GetTimeFormatA (LCID Locale ,DWORD dwFlags ,const SYSTEMTIME *lpTime ,LPCSTR lpFormat ,LPSTR lpTimeStr ,int cchTime );
int GetTimeFormatW (LCID Locale ,DWORD dwFlags ,const SYSTEMTIME *lpTime ,LPCWSTR lpFormat ,LPWSTR lpTimeStr ,int cchTime );
// m:\mingw\x86_64-w64-mingw32\include\winnls.h

typedef DWORD LGRPID ;
typedef DWORD LCTYPE ;
typedef DWORD CALTYPE ;
typedef DWORD CALID ;
typedef struct _cpinfo {UINT MaxCharSize ;BYTE DefaultChar [2 ];BYTE LeadByte [12 ];}CPINFO ;
typedef struct _cpinfo {UINT MaxCharSize ;BYTE DefaultChar [2 ];BYTE LeadByte [12 ];}*LPCPINFO ;

typedef struct _cpinfoexA {UINT MaxCharSize ;BYTE DefaultChar [2 ];BYTE LeadByte [12 ];WCHAR UnicodeDefaultChar ;UINT CodePage ;CHAR CodePageName [260 ];}CPINFOEXA ;
typedef struct _cpinfoexA {UINT MaxCharSize ;BYTE DefaultChar [2 ];BYTE LeadByte [12 ];WCHAR UnicodeDefaultChar ;UINT CodePage ;CHAR CodePageName [260 ];}*LPCPINFOEXA ;

typedef struct _cpinfoexW {UINT MaxCharSize ;BYTE DefaultChar [2 ];BYTE LeadByte [12 ];WCHAR UnicodeDefaultChar ;UINT CodePage ;WCHAR CodePageName [260 ];}CPINFOEXW ;
typedef struct _cpinfoexW {UINT MaxCharSize ;BYTE DefaultChar [2 ];BYTE LeadByte [12 ];WCHAR UnicodeDefaultChar ;UINT CodePage ;WCHAR CodePageName [260 ];}*LPCPINFOEXW ;

typedef CPINFOEXA CPINFOEX ;
typedef LPCPINFOEXA LPCPINFOEX ;
typedef struct _numberfmtA {UINT NumDigits ;UINT LeadingZero ;UINT Grouping ;LPSTR lpDecimalSep ;LPSTR lpThousandSep ;UINT NegativeOrder ;}NUMBERFMTA ;
typedef struct _numberfmtA {UINT NumDigits ;UINT LeadingZero ;UINT Grouping ;LPSTR lpDecimalSep ;LPSTR lpThousandSep ;UINT NegativeOrder ;}*LPNUMBERFMTA ;

typedef struct _numberfmtW {UINT NumDigits ;UINT LeadingZero ;UINT Grouping ;LPWSTR lpDecimalSep ;LPWSTR lpThousandSep ;UINT NegativeOrder ;}NUMBERFMTW ;
typedef struct _numberfmtW {UINT NumDigits ;UINT LeadingZero ;UINT Grouping ;LPWSTR lpDecimalSep ;LPWSTR lpThousandSep ;UINT NegativeOrder ;}*LPNUMBERFMTW ;

typedef NUMBERFMTA NUMBERFMT ;
typedef LPNUMBERFMTA LPNUMBERFMT ;
typedef struct _currencyfmtA {UINT NumDigits ;UINT LeadingZero ;UINT Grouping ;LPSTR lpDecimalSep ;LPSTR lpThousandSep ;UINT NegativeOrder ;UINT PositiveOrder ;LPSTR lpCurrencySymbol ;}CURRENCYFMTA ;
typedef struct _currencyfmtA {UINT NumDigits ;UINT LeadingZero ;UINT Grouping ;LPSTR lpDecimalSep ;LPSTR lpThousandSep ;UINT NegativeOrder ;UINT PositiveOrder ;LPSTR lpCurrencySymbol ;}*LPCURRENCYFMTA ;

typedef struct _currencyfmtW {UINT NumDigits ;UINT LeadingZero ;UINT Grouping ;LPWSTR lpDecimalSep ;LPWSTR lpThousandSep ;UINT NegativeOrder ;UINT PositiveOrder ;LPWSTR lpCurrencySymbol ;}CURRENCYFMTW ;
typedef struct _currencyfmtW {UINT NumDigits ;UINT LeadingZero ;UINT Grouping ;LPWSTR lpDecimalSep ;LPWSTR lpThousandSep ;UINT NegativeOrder ;UINT PositiveOrder ;LPWSTR lpCurrencySymbol ;}*LPCURRENCYFMTW ;

typedef CURRENCYFMTA CURRENCYFMT ;
typedef LPCURRENCYFMTA LPCURRENCYFMT ;
enum SYSNLS_FUNCTION {COMPARE_STRING =1 };
typedef DWORD NLS_FUNCTION ;
typedef struct _nlsversioninfo {DWORD dwNLSVersionInfoSize ;DWORD dwNLSVersion ;DWORD dwDefinedVersion ;}NLSVERSIONINFO ;
typedef struct _nlsversioninfo {DWORD dwNLSVersionInfoSize ;DWORD dwNLSVersion ;DWORD dwDefinedVersion ;}*LPNLSVERSIONINFO ;

typedef struct _nlsversioninfoex {DWORD dwNLSVersionInfoSize ;DWORD dwNLSVersion ;DWORD dwDefinedVersion ;DWORD dwEffectiveId ;GUID guidCustomVersion ;}NLSVERSIONINFOEX ;
typedef struct _nlsversioninfoex {DWORD dwNLSVersionInfoSize ;DWORD dwNLSVersion ;DWORD dwDefinedVersion ;DWORD dwEffectiveId ;GUID guidCustomVersion ;}*LPNLSVERSIONINFOEX ;

typedef LONG GEOID ;
typedef DWORD GEOTYPE ;
typedef DWORD GEOCLASS ;
enum SYSGEOTYPE {GEO_NATION =1 ,GEO_LATITUDE =2 ,GEO_LONGITUDE =3 ,GEO_ISO2 =4 ,GEO_ISO3 =5 ,GEO_RFC1766 =6 ,GEO_LCID =7 ,GEO_FRIENDLYNAME =8 ,GEO_OFFICIALNAME =9 ,GEO_TIMEZONES =10 ,GEO_OFFICIALLANGUAGES =11 ,GEO_ISO_UN_NUMBER =12 ,GEO_PARENT =13 };
enum SYSGEOCLASS {GEOCLASS_NATION =16 ,GEOCLASS_REGION =14 ,GEOCLASS_ALL =0 };
typedef WINBOOL (*LANGUAGEGROUP_ENUMPROCA )(LGRPID ,LPSTR ,LPSTR ,DWORD ,LONG_PTR );
typedef WINBOOL (*LANGGROUPLOCALE_ENUMPROCA )(LGRPID ,LCID ,LPSTR ,LONG_PTR );
typedef WINBOOL (*UILANGUAGE_ENUMPROCA )(LPSTR ,LONG_PTR );
typedef WINBOOL (*CODEPAGE_ENUMPROCA )(LPSTR );
typedef WINBOOL (*DATEFMT_ENUMPROCA )(LPSTR );
typedef WINBOOL (*DATEFMT_ENUMPROCEXA )(LPSTR ,CALID );
typedef WINBOOL (*TIMEFMT_ENUMPROCA )(LPSTR );
typedef WINBOOL (*CALINFO_ENUMPROCA )(LPSTR );
typedef WINBOOL (*CALINFO_ENUMPROCEXA )(LPSTR ,CALID );
typedef WINBOOL (*LOCALE_ENUMPROCA )(LPSTR );
typedef WINBOOL (*LOCALE_ENUMPROCW )(LPWSTR );
typedef WINBOOL (*LANGUAGEGROUP_ENUMPROCW )(LGRPID ,LPWSTR ,LPWSTR ,DWORD ,LONG_PTR );
typedef WINBOOL (*LANGGROUPLOCALE_ENUMPROCW )(LGRPID ,LCID ,LPWSTR ,LONG_PTR );
typedef WINBOOL (*UILANGUAGE_ENUMPROCW )(LPWSTR ,LONG_PTR );
typedef WINBOOL (*CODEPAGE_ENUMPROCW )(LPWSTR );
typedef WINBOOL (*DATEFMT_ENUMPROCW )(LPWSTR );
typedef WINBOOL (*DATEFMT_ENUMPROCEXW )(LPWSTR ,CALID );
typedef WINBOOL (*TIMEFMT_ENUMPROCW )(LPWSTR );
typedef WINBOOL (*CALINFO_ENUMPROCW )(LPWSTR );
typedef WINBOOL (*CALINFO_ENUMPROCEXW )(LPWSTR ,CALID );
typedef WINBOOL (*GEO_ENUMPROC )(GEOID );
typedef struct _FILEMUIINFO {DWORD dwSize ;DWORD dwVersion ;DWORD dwFileType ;BYTE pChecksum [16 ];BYTE pServiceChecksum [16 ];DWORD dwLanguageNameOffset ;DWORD dwTypeIDMainSize ;DWORD dwTypeIDMainOffset ;DWORD dwTypeNameMainOffset ;DWORD dwTypeIDMUISize ;DWORD dwTypeIDMUIOffset ;DWORD dwTypeNameMUIOffset ;BYTE abBuffer [8 ];}FILEMUIINFO ;
typedef struct _FILEMUIINFO {DWORD dwSize ;DWORD dwVersion ;DWORD dwFileType ;BYTE pChecksum [16 ];BYTE pServiceChecksum [16 ];DWORD dwLanguageNameOffset ;DWORD dwTypeIDMainSize ;DWORD dwTypeIDMainOffset ;DWORD dwTypeNameMainOffset ;DWORD dwTypeIDMUISize ;DWORD dwTypeIDMUIOffset ;DWORD dwTypeNameMUIOffset ;BYTE abBuffer [8 ];}*PFILEMUIINFO ;

// m:\mingw\x86_64-w64-mingw32\include\stringapiset.h

int CompareStringW (LCID Locale ,DWORD dwCmpFlags ,PCNZWCH lpString1 ,int cchCount1 ,PCNZWCH lpString2 ,int cchCount2 );
int FoldStringW (DWORD dwMapFlags ,LPCWCH lpSrcStr ,int cchSrc ,LPWSTR lpDestStr ,int cchDest );
WINBOOL GetStringTypeExW (LCID Locale ,DWORD dwInfoType ,LPCWCH lpSrcStr ,int cchSrc ,LPWORD lpCharType );
WINBOOL GetStringTypeW (DWORD dwInfoType ,LPCWCH lpSrcStr ,int cchSrc ,LPWORD lpCharType );
int MultiByteToWideChar (UINT CodePage ,DWORD dwFlags ,LPCCH lpMultiByteStr ,int cbMultiByte ,LPWSTR lpWideCharStr ,int cchWideChar );
int WideCharToMultiByte (UINT CodePage ,DWORD dwFlags ,LPCWCH lpWideCharStr ,int cchWideChar ,LPSTR lpMultiByteStr ,int cbMultiByte ,LPCCH lpDefaultChar ,LPBOOL lpUsedDefaultChar );
// m:\mingw\x86_64-w64-mingw32\include\winnls.h

WINBOOL IsValidCodePage (UINT CodePage );
UINT GetACP (void );
UINT GetOEMCP (void );
int CompareStringA (LCID Locale ,DWORD dwCmpFlags ,PCNZCH lpString1 ,int cchCount1 ,PCNZCH lpString2 ,int cchCount2 );
int LCMapStringW (LCID Locale ,DWORD dwMapFlags ,LPCWSTR lpSrcStr ,int cchSrc ,LPWSTR lpDestStr ,int cchDest );
int LCMapStringA (LCID Locale ,DWORD dwMapFlags ,LPCSTR lpSrcStr ,int cchSrc ,LPSTR lpDestStr ,int cchDest );
int GetLocaleInfoW (LCID Locale ,LCTYPE LCType ,LPWSTR lpLCData ,int cchData );
int GetLocaleInfoA (LCID Locale ,LCTYPE LCType ,LPSTR lpLCData ,int cchData );
WINBOOL IsDBCSLeadByte (BYTE TestChar );
WINBOOL IsDBCSLeadByteEx (UINT CodePage ,BYTE TestChar );
int GetNumberFormatA (LCID Locale ,DWORD dwFlags ,LPCSTR lpValue ,const NUMBERFMTA *lpFormat ,LPSTR lpNumberStr ,int cchNumber );
int GetNumberFormatW (LCID Locale ,DWORD dwFlags ,LPCWSTR lpValue ,const NUMBERFMTW *lpFormat ,LPWSTR lpNumberStr ,int cchNumber );
int GetCurrencyFormatA (LCID Locale ,DWORD dwFlags ,LPCSTR lpValue ,const CURRENCYFMTA *lpFormat ,LPSTR lpCurrencyStr ,int cchCurrency );
int GetCurrencyFormatW (LCID Locale ,DWORD dwFlags ,LPCWSTR lpValue ,const CURRENCYFMTW *lpFormat ,LPWSTR lpCurrencyStr ,int cchCurrency );
WINBOOL EnumCalendarInfoA (CALINFO_ENUMPROCA lpCalInfoEnumProc ,LCID Locale ,CALID Calendar ,CALTYPE CalType );
WINBOOL EnumCalendarInfoW (CALINFO_ENUMPROCW lpCalInfoEnumProc ,LCID Locale ,CALID Calendar ,CALTYPE CalType );
WINBOOL EnumCalendarInfoExA (CALINFO_ENUMPROCEXA lpCalInfoEnumProcEx ,LCID Locale ,CALID Calendar ,CALTYPE CalType );
WINBOOL EnumCalendarInfoExW (CALINFO_ENUMPROCEXW lpCalInfoEnumProcEx ,LCID Locale ,CALID Calendar ,CALTYPE CalType );
WINBOOL EnumTimeFormatsA (TIMEFMT_ENUMPROCA lpTimeFmtEnumProc ,LCID Locale ,DWORD dwFlags );
WINBOOL EnumTimeFormatsW (TIMEFMT_ENUMPROCW lpTimeFmtEnumProc ,LCID Locale ,DWORD dwFlags );
WINBOOL EnumDateFormatsA (DATEFMT_ENUMPROCA lpDateFmtEnumProc ,LCID Locale ,DWORD dwFlags );
WINBOOL EnumDateFormatsW (DATEFMT_ENUMPROCW lpDateFmtEnumProc ,LCID Locale ,DWORD dwFlags );
WINBOOL EnumDateFormatsExA (DATEFMT_ENUMPROCEXA lpDateFmtEnumProcEx ,LCID Locale ,DWORD dwFlags );
WINBOOL EnumDateFormatsExW (DATEFMT_ENUMPROCEXW lpDateFmtEnumProcEx ,LCID Locale ,DWORD dwFlags );
WINBOOL IsValidLanguageGroup (LGRPID LanguageGroup ,DWORD dwFlags );
WINBOOL GetNLSVersion (NLS_FUNCTION Function ,LCID Locale ,LPNLSVERSIONINFO lpVersionInformation );
WINBOOL IsNLSDefinedString (NLS_FUNCTION Function ,DWORD dwFlags ,LPNLSVERSIONINFO lpVersionInformation ,LPCWSTR lpString ,INT cchStr );
WINBOOL IsValidLocale (LCID Locale ,DWORD dwFlags );
WINBOOL SetLocaleInfoA (LCID Locale ,LCTYPE LCType ,LPCSTR lpLCData );
WINBOOL SetLocaleInfoW (LCID Locale ,LCTYPE LCType ,LPCWSTR lpLCData );
int GetCalendarInfoA (LCID Locale ,CALID Calendar ,CALTYPE CalType ,LPSTR lpCalData ,int cchData ,LPDWORD lpValue );
int GetCalendarInfoW (LCID Locale ,CALID Calendar ,CALTYPE CalType ,LPWSTR lpCalData ,int cchData ,LPDWORD lpValue );
WINBOOL SetCalendarInfoA (LCID Locale ,CALID Calendar ,CALTYPE CalType ,LPCSTR lpCalData );
WINBOOL SetCalendarInfoW (LCID Locale ,CALID Calendar ,CALTYPE CalType ,LPCWSTR lpCalData );
int GetGeoInfoA (GEOID Location ,GEOTYPE GeoType ,LPSTR lpGeoData ,int cchData ,LANGID LangId );
int GetGeoInfoW (GEOID Location ,GEOTYPE GeoType ,LPWSTR lpGeoData ,int cchData ,LANGID LangId );
WINBOOL EnumSystemGeoID (GEOCLASS GeoClass ,GEOID ParentGeoId ,GEO_ENUMPROC lpGeoEnumProc );
GEOID GetUserGeoID (GEOCLASS GeoClass );
WINBOOL GetCPInfo (UINT CodePage ,LPCPINFO lpCPInfo );
WINBOOL GetCPInfoExA (UINT CodePage ,DWORD dwFlags ,LPCPINFOEXA lpCPInfoEx );
WINBOOL GetCPInfoExW (UINT CodePage ,DWORD dwFlags ,LPCPINFOEXW lpCPInfoEx );
WINBOOL SetUserGeoID (GEOID GeoId );
LCID ConvertDefaultLocale (LCID Locale );
LCID GetThreadLocale (void );
WINBOOL SetThreadLocale (LCID Locale );
LANGID GetSystemDefaultUILanguage (void );
LANGID GetUserDefaultUILanguage (void );
LANGID GetSystemDefaultLangID (void );
LANGID GetUserDefaultLangID (void );
LCID GetSystemDefaultLCID (void );
LCID GetUserDefaultLCID (void );
LANGID SetThreadUILanguage (LANGID LangId );
WINBOOL GetStringTypeExA (LCID Locale ,DWORD dwInfoType ,LPCSTR lpSrcStr ,int cchSrc ,LPWORD lpCharType );
WINBOOL GetStringTypeA (LCID Locale ,DWORD dwInfoType ,LPCSTR lpSrcStr ,int cchSrc ,LPWORD lpCharType );
int FoldStringA (DWORD dwMapFlags ,LPCSTR lpSrcStr ,int cchSrc ,LPSTR lpDestStr ,int cchDest );
WINBOOL EnumSystemLocalesA (LOCALE_ENUMPROCA lpLocaleEnumProc ,DWORD dwFlags );
WINBOOL EnumSystemLocalesW (LOCALE_ENUMPROCW lpLocaleEnumProc ,DWORD dwFlags );
WINBOOL EnumSystemLanguageGroupsA (LANGUAGEGROUP_ENUMPROCA lpLanguageGroupEnumProc ,DWORD dwFlags ,LONG_PTR lParam );
WINBOOL EnumSystemLanguageGroupsW (LANGUAGEGROUP_ENUMPROCW lpLanguageGroupEnumProc ,DWORD dwFlags ,LONG_PTR lParam );
WINBOOL EnumLanguageGroupLocalesA (LANGGROUPLOCALE_ENUMPROCA lpLangGroupLocaleEnumProc ,LGRPID LanguageGroup ,DWORD dwFlags ,LONG_PTR lParam );
WINBOOL EnumLanguageGroupLocalesW (LANGGROUPLOCALE_ENUMPROCW lpLangGroupLocaleEnumProc ,LGRPID LanguageGroup ,DWORD dwFlags ,LONG_PTR lParam );
WINBOOL EnumUILanguagesA (UILANGUAGE_ENUMPROCA lpUILanguageEnumProc ,DWORD dwFlags ,LONG_PTR lParam );
WINBOOL EnumUILanguagesW (UILANGUAGE_ENUMPROCW lpUILanguageEnumProc ,DWORD dwFlags ,LONG_PTR lParam );
WINBOOL EnumSystemCodePagesA (CODEPAGE_ENUMPROCA lpCodePageEnumProc ,DWORD dwFlags );
WINBOOL EnumSystemCodePagesW (CODEPAGE_ENUMPROCW lpCodePageEnumProc ,DWORD dwFlags );
// m:\mingw\x86_64-w64-mingw32\include\wincon.h

typedef struct _COORD {SHORT X ;SHORT Y ;}COORD ;
typedef struct _COORD {SHORT X ;SHORT Y ;}*PCOORD ;

typedef struct _SMALL_RECT {SHORT Left ;SHORT Top ;SHORT Right ;SHORT Bottom ;}SMALL_RECT ;
typedef struct _SMALL_RECT {SHORT Left ;SHORT Top ;SHORT Right ;SHORT Bottom ;}*PSMALL_RECT ;

typedef struct _KEY_EVENT_RECORD {WINBOOL bKeyDown ;WORD wRepeatCount ;WORD wVirtualKeyCode ;WORD wVirtualScanCode ;union {WCHAR UnicodeChar ;CHAR AsciiChar ;}uChar ;DWORD dwControlKeyState ;}KEY_EVENT_RECORD ;
typedef struct _KEY_EVENT_RECORD {WINBOOL bKeyDown ;WORD wRepeatCount ;WORD wVirtualKeyCode ;WORD wVirtualScanCode ;union {WCHAR UnicodeChar ;CHAR AsciiChar ;}uChar ;DWORD dwControlKeyState ;}*PKEY_EVENT_RECORD ;

typedef struct _MOUSE_EVENT_RECORD {COORD dwMousePosition ;DWORD dwButtonState ;DWORD dwControlKeyState ;DWORD dwEventFlags ;}MOUSE_EVENT_RECORD ;
typedef struct _MOUSE_EVENT_RECORD {COORD dwMousePosition ;DWORD dwButtonState ;DWORD dwControlKeyState ;DWORD dwEventFlags ;}*PMOUSE_EVENT_RECORD ;

typedef struct _WINDOW_BUFFER_SIZE_RECORD {COORD dwSize ;}WINDOW_BUFFER_SIZE_RECORD ;
typedef struct _WINDOW_BUFFER_SIZE_RECORD {COORD dwSize ;}*PWINDOW_BUFFER_SIZE_RECORD ;

typedef struct _MENU_EVENT_RECORD {UINT dwCommandId ;}MENU_EVENT_RECORD ;
typedef struct _MENU_EVENT_RECORD {UINT dwCommandId ;}*PMENU_EVENT_RECORD ;

typedef struct _FOCUS_EVENT_RECORD {WINBOOL bSetFocus ;}FOCUS_EVENT_RECORD ;
typedef struct _FOCUS_EVENT_RECORD {WINBOOL bSetFocus ;}*PFOCUS_EVENT_RECORD ;

typedef struct _INPUT_RECORD {WORD EventType ;union {KEY_EVENT_RECORD KeyEvent ;MOUSE_EVENT_RECORD MouseEvent ;WINDOW_BUFFER_SIZE_RECORD WindowBufferSizeEvent ;MENU_EVENT_RECORD MenuEvent ;FOCUS_EVENT_RECORD FocusEvent ;}Event ;}INPUT_RECORD ;
typedef struct _INPUT_RECORD {WORD EventType ;union {KEY_EVENT_RECORD KeyEvent ;MOUSE_EVENT_RECORD MouseEvent ;WINDOW_BUFFER_SIZE_RECORD WindowBufferSizeEvent ;MENU_EVENT_RECORD MenuEvent ;FOCUS_EVENT_RECORD FocusEvent ;}Event ;}*PINPUT_RECORD ;

typedef struct _CHAR_INFO {union {WCHAR UnicodeChar ;CHAR AsciiChar ;}Char ;WORD Attributes ;}CHAR_INFO ;
typedef struct _CHAR_INFO {union {WCHAR UnicodeChar ;CHAR AsciiChar ;}Char ;WORD Attributes ;}*PCHAR_INFO ;

typedef struct _CONSOLE_SCREEN_BUFFER_INFO {COORD dwSize ;COORD dwCursorPosition ;WORD wAttributes ;SMALL_RECT srWindow ;COORD dwMaximumWindowSize ;}CONSOLE_SCREEN_BUFFER_INFO ;
typedef struct _CONSOLE_SCREEN_BUFFER_INFO {COORD dwSize ;COORD dwCursorPosition ;WORD wAttributes ;SMALL_RECT srWindow ;COORD dwMaximumWindowSize ;}*PCONSOLE_SCREEN_BUFFER_INFO ;

typedef struct _CONSOLE_CURSOR_INFO {DWORD dwSize ;WINBOOL bVisible ;}CONSOLE_CURSOR_INFO ;
typedef struct _CONSOLE_CURSOR_INFO {DWORD dwSize ;WINBOOL bVisible ;}*PCONSOLE_CURSOR_INFO ;

typedef struct _CONSOLE_FONT_INFO {DWORD nFont ;COORD dwFontSize ;}CONSOLE_FONT_INFO ;
typedef struct _CONSOLE_FONT_INFO {DWORD nFont ;COORD dwFontSize ;}*PCONSOLE_FONT_INFO ;

typedef struct _CONSOLE_SELECTION_INFO {DWORD dwFlags ;COORD dwSelectionAnchor ;SMALL_RECT srSelection ;}CONSOLE_SELECTION_INFO ;
typedef struct _CONSOLE_SELECTION_INFO {DWORD dwFlags ;COORD dwSelectionAnchor ;SMALL_RECT srSelection ;}*PCONSOLE_SELECTION_INFO ;

typedef WINBOOL (*PHANDLER_ROUTINE )(DWORD CtrlType );
WINBOOL PeekConsoleInputA (HANDLE hConsoleInput ,PINPUT_RECORD lpBuffer ,DWORD nLength ,LPDWORD lpNumberOfEventsRead );
WINBOOL PeekConsoleInputW (HANDLE hConsoleInput ,PINPUT_RECORD lpBuffer ,DWORD nLength ,LPDWORD lpNumberOfEventsRead );
WINBOOL ReadConsoleInputA (HANDLE hConsoleInput ,PINPUT_RECORD lpBuffer ,DWORD nLength ,LPDWORD lpNumberOfEventsRead );
WINBOOL ReadConsoleInputW (HANDLE hConsoleInput ,PINPUT_RECORD lpBuffer ,DWORD nLength ,LPDWORD lpNumberOfEventsRead );
WINBOOL WriteConsoleInputA (HANDLE hConsoleInput ,const INPUT_RECORD *lpBuffer ,DWORD nLength ,LPDWORD lpNumberOfEventsWritten );
WINBOOL WriteConsoleInputW (HANDLE hConsoleInput ,const INPUT_RECORD *lpBuffer ,DWORD nLength ,LPDWORD lpNumberOfEventsWritten );
WINBOOL ReadConsoleOutputA (HANDLE hConsoleOutput ,PCHAR_INFO lpBuffer ,COORD dwBufferSize ,COORD dwBufferCoord ,PSMALL_RECT lpReadRegion );
WINBOOL ReadConsoleOutputW (HANDLE hConsoleOutput ,PCHAR_INFO lpBuffer ,COORD dwBufferSize ,COORD dwBufferCoord ,PSMALL_RECT lpReadRegion );
WINBOOL WriteConsoleOutputA (HANDLE hConsoleOutput ,const CHAR_INFO *lpBuffer ,COORD dwBufferSize ,COORD dwBufferCoord ,PSMALL_RECT lpWriteRegion );
WINBOOL WriteConsoleOutputW (HANDLE hConsoleOutput ,const CHAR_INFO *lpBuffer ,COORD dwBufferSize ,COORD dwBufferCoord ,PSMALL_RECT lpWriteRegion );
WINBOOL ReadConsoleOutputCharacterA (HANDLE hConsoleOutput ,LPSTR lpCharacter ,DWORD nLength ,COORD dwReadCoord ,LPDWORD lpNumberOfCharsRead );
WINBOOL ReadConsoleOutputCharacterW (HANDLE hConsoleOutput ,LPWSTR lpCharacter ,DWORD nLength ,COORD dwReadCoord ,LPDWORD lpNumberOfCharsRead );
WINBOOL ReadConsoleOutputAttribute (HANDLE hConsoleOutput ,LPWORD lpAttribute ,DWORD nLength ,COORD dwReadCoord ,LPDWORD lpNumberOfAttrsRead );
WINBOOL WriteConsoleOutputCharacterA (HANDLE hConsoleOutput ,LPCSTR lpCharacter ,DWORD nLength ,COORD dwWriteCoord ,LPDWORD lpNumberOfCharsWritten );
WINBOOL WriteConsoleOutputCharacterW (HANDLE hConsoleOutput ,LPCWSTR lpCharacter ,DWORD nLength ,COORD dwWriteCoord ,LPDWORD lpNumberOfCharsWritten );
WINBOOL WriteConsoleOutputAttribute (HANDLE hConsoleOutput ,const WORD *lpAttribute ,DWORD nLength ,COORD dwWriteCoord ,LPDWORD lpNumberOfAttrsWritten );
WINBOOL FillConsoleOutputCharacterA (HANDLE hConsoleOutput ,CHAR cCharacter ,DWORD nLength ,COORD dwWriteCoord ,LPDWORD lpNumberOfCharsWritten );
WINBOOL FillConsoleOutputCharacterW (HANDLE hConsoleOutput ,WCHAR cCharacter ,DWORD nLength ,COORD dwWriteCoord ,LPDWORD lpNumberOfCharsWritten );
WINBOOL FillConsoleOutputAttribute (HANDLE hConsoleOutput ,WORD wAttribute ,DWORD nLength ,COORD dwWriteCoord ,LPDWORD lpNumberOfAttrsWritten );
WINBOOL GetConsoleMode (HANDLE hConsoleHandle ,LPDWORD lpMode );
WINBOOL GetNumberOfConsoleInputEvents (HANDLE hConsoleInput ,LPDWORD lpNumberOfEvents );
WINBOOL GetConsoleScreenBufferInfo (HANDLE hConsoleOutput ,PCONSOLE_SCREEN_BUFFER_INFO lpConsoleScreenBufferInfo );
COORD GetLargestConsoleWindowSize (HANDLE hConsoleOutput );
WINBOOL GetConsoleCursorInfo (HANDLE hConsoleOutput ,PCONSOLE_CURSOR_INFO lpConsoleCursorInfo );
WINBOOL GetCurrentConsoleFont (HANDLE hConsoleOutput ,WINBOOL bMaximumWindow ,PCONSOLE_FONT_INFO lpConsoleCurrentFont );
COORD GetConsoleFontSize (HANDLE hConsoleOutput ,DWORD nFont );
WINBOOL GetConsoleSelectionInfo (PCONSOLE_SELECTION_INFO lpConsoleSelectionInfo );
WINBOOL GetNumberOfConsoleMouseButtons (LPDWORD lpNumberOfMouseButtons );
WINBOOL SetConsoleMode (HANDLE hConsoleHandle ,DWORD dwMode );
WINBOOL SetConsoleActiveScreenBuffer (HANDLE hConsoleOutput );
WINBOOL FlushConsoleInputBuffer (HANDLE hConsoleInput );
WINBOOL SetConsoleScreenBufferSize (HANDLE hConsoleOutput ,COORD dwSize );
WINBOOL SetConsoleCursorPosition (HANDLE hConsoleOutput ,COORD dwCursorPosition );
WINBOOL SetConsoleCursorInfo (HANDLE hConsoleOutput ,const CONSOLE_CURSOR_INFO *lpConsoleCursorInfo );
WINBOOL ScrollConsoleScreenBufferA (HANDLE hConsoleOutput ,const SMALL_RECT *lpScrollRectangle ,const SMALL_RECT *lpClipRectangle ,COORD dwDestinationOrigin ,const CHAR_INFO *lpFill );
WINBOOL ScrollConsoleScreenBufferW (HANDLE hConsoleOutput ,const SMALL_RECT *lpScrollRectangle ,const SMALL_RECT *lpClipRectangle ,COORD dwDestinationOrigin ,const CHAR_INFO *lpFill );
WINBOOL SetConsoleWindowInfo (HANDLE hConsoleOutput ,WINBOOL bAbsolute ,const SMALL_RECT *lpConsoleWindow );
WINBOOL SetConsoleTextAttribute (HANDLE hConsoleOutput ,WORD wAttributes );
WINBOOL SetConsoleCtrlHandler (PHANDLER_ROUTINE HandlerRoutine ,WINBOOL Add );
WINBOOL GenerateConsoleCtrlEvent (DWORD dwCtrlEvent ,DWORD dwProcessGroupId );
WINBOOL AllocConsole (void );
WINBOOL FreeConsole (void );
WINBOOL AttachConsole (DWORD dwProcessId );
DWORD GetConsoleTitleA (LPSTR lpConsoleTitle ,DWORD nSize );
DWORD GetConsoleTitleW (LPWSTR lpConsoleTitle ,DWORD nSize );
WINBOOL SetConsoleTitleA (LPCSTR lpConsoleTitle );
WINBOOL SetConsoleTitleW (LPCWSTR lpConsoleTitle );
WINBOOL ReadConsoleA (HANDLE hConsoleInput ,LPVOID lpBuffer ,DWORD nNumberOfCharsToRead ,LPDWORD lpNumberOfCharsRead ,LPVOID lpReserved );
WINBOOL ReadConsoleW (HANDLE hConsoleInput ,LPVOID lpBuffer ,DWORD nNumberOfCharsToRead ,LPDWORD lpNumberOfCharsRead ,LPVOID lpReserved );
WINBOOL WriteConsoleA (HANDLE hConsoleOutput ,const void *lpBuffer ,DWORD nNumberOfCharsToWrite ,LPDWORD lpNumberOfCharsWritten ,LPVOID lpReserved );
WINBOOL WriteConsoleW (HANDLE hConsoleOutput ,const void *lpBuffer ,DWORD nNumberOfCharsToWrite ,LPDWORD lpNumberOfCharsWritten ,LPVOID lpReserved );
HANDLE CreateConsoleScreenBuffer (DWORD dwDesiredAccess ,DWORD dwShareMode ,const SECURITY_ATTRIBUTES *lpSecurityAttributes ,DWORD dwFlags ,LPVOID lpScreenBufferData );
UINT GetConsoleCP (void );
WINBOOL SetConsoleCP (UINT wCodePageID );
UINT GetConsoleOutputCP (void );
WINBOOL SetConsoleOutputCP (UINT wCodePageID );
WINBOOL GetConsoleDisplayMode (LPDWORD lpModeFlags );
WINBOOL SetConsoleDisplayMode (HANDLE hConsoleOutput ,DWORD dwFlags ,PCOORD lpNewScreenBufferDimensions );
HWND GetConsoleWindow (void );
DWORD GetConsoleProcessList (LPDWORD lpdwProcessList ,DWORD dwProcessCount );
WINBOOL AddConsoleAliasA (LPSTR Source ,LPSTR Target ,LPSTR ExeName );
WINBOOL AddConsoleAliasW (LPWSTR Source ,LPWSTR Target ,LPWSTR ExeName );
DWORD GetConsoleAliasA (LPSTR Source ,LPSTR TargetBuffer ,DWORD TargetBufferLength ,LPSTR ExeName );
DWORD GetConsoleAliasW (LPWSTR Source ,LPWSTR TargetBuffer ,DWORD TargetBufferLength ,LPWSTR ExeName );
DWORD GetConsoleAliasesLengthA (LPSTR ExeName );
DWORD GetConsoleAliasesLengthW (LPWSTR ExeName );
DWORD GetConsoleAliasExesLengthA (void );
DWORD GetConsoleAliasExesLengthW (void );
DWORD GetConsoleAliasesA (LPSTR AliasBuffer ,DWORD AliasBufferLength ,LPSTR ExeName );
DWORD GetConsoleAliasesW (LPWSTR AliasBuffer ,DWORD AliasBufferLength ,LPWSTR ExeName );
DWORD GetConsoleAliasExesA (LPSTR ExeNameBuffer ,DWORD ExeNameBufferLength );
DWORD GetConsoleAliasExesW (LPWSTR ExeNameBuffer ,DWORD ExeNameBufferLength );
typedef struct _CONSOLE_FONT_INFOEX {ULONG cbSize ;DWORD nFont ;COORD dwFontSize ;UINT FontFamily ;UINT FontWeight ;WCHAR FaceName [32 ];}CONSOLE_FONT_INFOEX ;
typedef struct _CONSOLE_FONT_INFOEX {ULONG cbSize ;DWORD nFont ;COORD dwFontSize ;UINT FontFamily ;UINT FontWeight ;WCHAR FaceName [32 ];}*PCONSOLE_FONT_INFOEX ;

typedef struct _CONSOLE_HISTORY_INFO {UINT cbSize ;UINT HistoryBufferSize ;UINT NumberOfHistoryBuffers ;DWORD dwFlags ;}CONSOLE_HISTORY_INFO ;
typedef struct _CONSOLE_HISTORY_INFO {UINT cbSize ;UINT HistoryBufferSize ;UINT NumberOfHistoryBuffers ;DWORD dwFlags ;}*PCONSOLE_HISTORY_INFO ;

typedef struct _CONSOLE_READCONSOLE_CONTROL {ULONG nLength ;ULONG nInitialChars ;ULONG dwCtrlWakeupMask ;ULONG dwControlKeyState ;}CONSOLE_READCONSOLE_CONTROL ;
typedef struct _CONSOLE_READCONSOLE_CONTROL {ULONG nLength ;ULONG nInitialChars ;ULONG dwCtrlWakeupMask ;ULONG dwControlKeyState ;}*PCONSOLE_READCONSOLE_CONTROL ;

typedef struct _CONSOLE_SCREEN_BUFFER_INFOEX {ULONG cbSize ;COORD dwSize ;COORD dwCursorPosition ;WORD wAttributes ;SMALL_RECT srWindow ;COORD dwMaximumWindowSize ;WORD wPopupAttributes ;WINBOOL bFullscreenSupported ;COLORREF ColorTable [16 ];}CONSOLE_SCREEN_BUFFER_INFOEX ;
typedef struct _CONSOLE_SCREEN_BUFFER_INFOEX {ULONG cbSize ;COORD dwSize ;COORD dwCursorPosition ;WORD wAttributes ;SMALL_RECT srWindow ;COORD dwMaximumWindowSize ;WORD wPopupAttributes ;WINBOOL bFullscreenSupported ;COLORREF ColorTable [16 ];}*PCONSOLE_SCREEN_BUFFER_INFOEX ;

WINBOOL GetConsoleHistoryInfo (PCONSOLE_HISTORY_INFO lpConsoleHistoryInfo );
WINBOOL GetConsoleScreenBufferInfoEx (HANDLE hConsoleOutput ,PCONSOLE_SCREEN_BUFFER_INFOEX lpConsoleScreenBufferInfoEx );
WINBOOL GetCurrentConsoleFontEx (HANDLE hConsoleOutput ,WINBOOL bMaximumWindow ,PCONSOLE_FONT_INFOEX lpConsoleCurrentFontEx );
WINBOOL SetConsoleHistoryInfo (PCONSOLE_HISTORY_INFO lpConsoleHistoryInfo );
WINBOOL SetConsoleScreenBufferInfoEx (HANDLE hConsoleOutput ,PCONSOLE_SCREEN_BUFFER_INFOEX lpConsoleScreenBufferInfoEx );
WINBOOL SetCurrentConsoleFontEx (HANDLE hConsoleOutput ,WINBOOL bMaximumWindow ,PCONSOLE_FONT_INFOEX lpConsoleCurrentFontEx );
// m:\mingw\x86_64-w64-mingw32\include\winver.h

typedef struct tagVS_FIXEDFILEINFO {DWORD dwSignature ;DWORD dwStrucVersion ;DWORD dwFileVersionMS ;DWORD dwFileVersionLS ;DWORD dwProductVersionMS ;DWORD dwProductVersionLS ;DWORD dwFileFlagsMask ;DWORD dwFileFlags ;DWORD dwFileOS ;DWORD dwFileType ;DWORD dwFileSubtype ;DWORD dwFileDateMS ;DWORD dwFileDateLS ;}VS_FIXEDFILEINFO ;
DWORD VerFindFileA (DWORD uFlags ,LPSTR szFileName ,LPSTR szWinDir ,LPSTR szAppDir ,LPSTR szCurDir ,PUINT lpuCurDirLen ,LPSTR szDestDir ,PUINT lpuDestDirLen );
DWORD VerFindFileW (DWORD uFlags ,LPWSTR szFileName ,LPWSTR szWinDir ,LPWSTR szAppDir ,LPWSTR szCurDir ,PUINT lpuCurDirLen ,LPWSTR szDestDir ,PUINT lpuDestDirLen );
DWORD VerInstallFileA (DWORD uFlags ,LPSTR szSrcFileName ,LPSTR szDestFileName ,LPSTR szSrcDir ,LPSTR szDestDir ,LPSTR szCurDir ,LPSTR szTmpFile ,PUINT lpuTmpFileLen );
DWORD VerInstallFileW (DWORD uFlags ,LPWSTR szSrcFileName ,LPWSTR szDestFileName ,LPWSTR szSrcDir ,LPWSTR szDestDir ,LPWSTR szCurDir ,LPWSTR szTmpFile ,PUINT lpuTmpFileLen );
DWORD GetFileVersionInfoSizeA (LPCSTR lptstrFilename ,LPDWORD lpdwHandle );
DWORD GetFileVersionInfoSizeW (LPCWSTR lptstrFilename ,LPDWORD lpdwHandle );
WINBOOL GetFileVersionInfoA (LPCSTR lptstrFilename ,DWORD dwHandle ,DWORD dwLen ,LPVOID lpData );
WINBOOL GetFileVersionInfoW (LPCWSTR lptstrFilename ,DWORD dwHandle ,DWORD dwLen ,LPVOID lpData );
DWORD VerLanguageNameA (DWORD wLang ,LPSTR szLang ,DWORD nSize );
DWORD VerLanguageNameW (DWORD wLang ,LPWSTR szLang ,DWORD nSize );
WINBOOL VerQueryValueA (const LPVOID pBlock ,LPCSTR lpSubBlock ,LPVOID *lplpBuffer ,PUINT puLen );
WINBOOL VerQueryValueW (const LPVOID pBlock ,LPCWSTR lpSubBlock ,LPVOID *lplpBuffer ,PUINT puLen );
// m:\mingw\x86_64-w64-mingw32\include\winreg.h

typedef ACCESS_MASK REGSAM ;
typedef LONG LSTATUS ;
struct val_context {int valuelen ;LPVOID value_context ;LPVOID val_buff_ptr ;};
typedef struct val_context *PVALCONTEXT ;
typedef struct pvalueA {LPSTR pv_valuename ;int pv_valuelen ;LPVOID pv_value_context ;DWORD pv_type ;}PVALUEA ;
typedef struct pvalueA {LPSTR pv_valuename ;int pv_valuelen ;LPVOID pv_value_context ;DWORD pv_type ;}*PPVALUEA ;

typedef struct pvalueW {LPWSTR pv_valuename ;int pv_valuelen ;LPVOID pv_value_context ;DWORD pv_type ;}PVALUEW ;
typedef struct pvalueW {LPWSTR pv_valuename ;int pv_valuelen ;LPVOID pv_value_context ;DWORD pv_type ;}*PPVALUEW ;

typedef PVALUEA PVALUE ;
typedef PPVALUEA PPVALUE ;
typedef DWORD QUERYHANDLER (LPVOID keycontext ,PVALCONTEXT val_list ,DWORD num_vals ,LPVOID outputbuffer ,DWORD *total_outlen ,DWORD input_blen );
typedef QUERYHANDLER *PQUERYHANDLER ;
typedef struct provider_info {PQUERYHANDLER pi_R0_1val ;PQUERYHANDLER pi_R0_allvals ;PQUERYHANDLER pi_R3_1val ;PQUERYHANDLER pi_R3_allvals ;DWORD pi_flags ;LPVOID pi_key_context ;}REG_PROVIDER ;
typedef struct provider_info *PPROVIDER ;
typedef struct value_entA {LPSTR ve_valuename ;DWORD ve_valuelen ;DWORD_PTR ve_valueptr ;DWORD ve_type ;}VALENTA ;
typedef struct value_entA {LPSTR ve_valuename ;DWORD ve_valuelen ;DWORD_PTR ve_valueptr ;DWORD ve_type ;}*PVALENTA ;

typedef struct value_entW {LPWSTR ve_valuename ;DWORD ve_valuelen ;DWORD_PTR ve_valueptr ;DWORD ve_type ;}VALENTW ;
typedef struct value_entW {LPWSTR ve_valuename ;DWORD ve_valuelen ;DWORD_PTR ve_valueptr ;DWORD ve_type ;}*PVALENTW ;

typedef VALENTA VALENT ;
typedef PVALENTA PVALENT ;
LONG RegCloseKey (HKEY hKey );
LONG RegOverridePredefKey (HKEY hKey ,HKEY hNewHKey );
LONG RegOpenUserClassesRoot (HANDLE hToken ,DWORD dwOptions ,REGSAM samDesired ,PHKEY phkResult );
LONG RegOpenCurrentUser (REGSAM samDesired ,PHKEY phkResult );
LONG RegDisablePredefinedCache ();
LONG RegConnectRegistryA (LPCSTR lpMachineName ,HKEY hKey ,PHKEY phkResult );
LONG RegConnectRegistryW (LPCWSTR lpMachineName ,HKEY hKey ,PHKEY phkResult );
LONG RegConnectRegistryExA (LPCSTR lpMachineName ,HKEY hKey ,ULONG Flags ,PHKEY phkResult );
LONG RegConnectRegistryExW (LPCWSTR lpMachineName ,HKEY hKey ,ULONG Flags ,PHKEY phkResult );
LONG RegCreateKeyA (HKEY hKey ,LPCSTR lpSubKey ,PHKEY phkResult );
LONG RegCreateKeyW (HKEY hKey ,LPCWSTR lpSubKey ,PHKEY phkResult );
LONG RegCreateKeyExA (HKEY hKey ,LPCSTR lpSubKey ,DWORD Reserved ,LPSTR lpClass ,DWORD dwOptions ,REGSAM samDesired ,LPSECURITY_ATTRIBUTES lpSecurityAttributes ,PHKEY phkResult ,LPDWORD lpdwDisposition );
LONG RegCreateKeyExW (HKEY hKey ,LPCWSTR lpSubKey ,DWORD Reserved ,LPWSTR lpClass ,DWORD dwOptions ,REGSAM samDesired ,LPSECURITY_ATTRIBUTES lpSecurityAttributes ,PHKEY phkResult ,LPDWORD lpdwDisposition );
LONG RegDeleteKeyA (HKEY hKey ,LPCSTR lpSubKey );
LONG RegDeleteKeyW (HKEY hKey ,LPCWSTR lpSubKey );
LONG RegDeleteKeyExA (HKEY hKey ,LPCSTR lpSubKey ,REGSAM samDesired ,DWORD Reserved );
LONG RegDeleteKeyExW (HKEY hKey ,LPCWSTR lpSubKey ,REGSAM samDesired ,DWORD Reserved );
LONG RegDisableReflectionKey (HKEY hBase );
LONG RegEnableReflectionKey (HKEY hBase );
LONG RegQueryReflectionKey (HKEY hBase ,WINBOOL *bIsReflectionDisabled );
LONG RegDeleteValueA (HKEY hKey ,LPCSTR lpValueName );
LONG RegDeleteValueW (HKEY hKey ,LPCWSTR lpValueName );
LONG RegEnumKeyA (HKEY hKey ,DWORD dwIndex ,LPSTR lpName ,DWORD cchName );
LONG RegEnumKeyW (HKEY hKey ,DWORD dwIndex ,LPWSTR lpName ,DWORD cchName );
LONG RegEnumKeyExA (HKEY hKey ,DWORD dwIndex ,LPSTR lpName ,LPDWORD lpcchName ,LPDWORD lpReserved ,LPSTR lpClass ,LPDWORD lpcchClass ,PFILETIME lpftLastWriteTime );
LONG RegEnumKeyExW (HKEY hKey ,DWORD dwIndex ,LPWSTR lpName ,LPDWORD lpcchName ,LPDWORD lpReserved ,LPWSTR lpClass ,LPDWORD lpcchClass ,PFILETIME lpftLastWriteTime );
LONG RegEnumValueA (HKEY hKey ,DWORD dwIndex ,LPSTR lpValueName ,LPDWORD lpcchValueName ,LPDWORD lpReserved ,LPDWORD lpType ,LPBYTE lpData ,LPDWORD lpcbData );
LONG RegEnumValueW (HKEY hKey ,DWORD dwIndex ,LPWSTR lpValueName ,LPDWORD lpcchValueName ,LPDWORD lpReserved ,LPDWORD lpType ,LPBYTE lpData ,LPDWORD lpcbData );
LONG RegFlushKey (HKEY hKey );
LONG RegGetKeySecurity (HKEY hKey ,SECURITY_INFORMATION SecurityInformation ,PSECURITY_DESCRIPTOR pSecurityDescriptor ,LPDWORD lpcbSecurityDescriptor );
LONG RegLoadKeyA (HKEY hKey ,LPCSTR lpSubKey ,LPCSTR lpFile );
LONG RegLoadKeyW (HKEY hKey ,LPCWSTR lpSubKey ,LPCWSTR lpFile );
LONG RegNotifyChangeKeyValue (HKEY hKey ,WINBOOL bWatchSubtree ,DWORD dwNotifyFilter ,HANDLE hEvent ,WINBOOL fAsynchronous );
LONG RegOpenKeyA (HKEY hKey ,LPCSTR lpSubKey ,PHKEY phkResult );
LONG RegOpenKeyW (HKEY hKey ,LPCWSTR lpSubKey ,PHKEY phkResult );
LONG RegOpenKeyExA (HKEY hKey ,LPCSTR lpSubKey ,DWORD ulOptions ,REGSAM samDesired ,PHKEY phkResult );
LONG RegOpenKeyExW (HKEY hKey ,LPCWSTR lpSubKey ,DWORD ulOptions ,REGSAM samDesired ,PHKEY phkResult );
LONG RegQueryInfoKeyA (HKEY hKey ,LPSTR lpClass ,LPDWORD lpcchClass ,LPDWORD lpReserved ,LPDWORD lpcSubKeys ,LPDWORD lpcbMaxSubKeyLen ,LPDWORD lpcbMaxClassLen ,LPDWORD lpcValues ,LPDWORD lpcbMaxValueNameLen ,LPDWORD lpcbMaxValueLen ,LPDWORD lpcbSecurityDescriptor ,PFILETIME lpftLastWriteTime );
LONG RegQueryInfoKeyW (HKEY hKey ,LPWSTR lpClass ,LPDWORD lpcchClass ,LPDWORD lpReserved ,LPDWORD lpcSubKeys ,LPDWORD lpcbMaxSubKeyLen ,LPDWORD lpcbMaxClassLen ,LPDWORD lpcValues ,LPDWORD lpcbMaxValueNameLen ,LPDWORD lpcbMaxValueLen ,LPDWORD lpcbSecurityDescriptor ,PFILETIME lpftLastWriteTime );
LONG RegQueryValueA (HKEY hKey ,LPCSTR lpSubKey ,LPSTR lpData ,PLONG lpcbData );
LONG RegQueryValueW (HKEY hKey ,LPCWSTR lpSubKey ,LPWSTR lpData ,PLONG lpcbData );
LONG RegQueryMultipleValuesA (HKEY hKey ,PVALENTA val_list ,DWORD num_vals ,LPSTR lpValueBuf ,LPDWORD ldwTotsize );
LONG RegQueryMultipleValuesW (HKEY hKey ,PVALENTW val_list ,DWORD num_vals ,LPWSTR lpValueBuf ,LPDWORD ldwTotsize );
LONG RegQueryValueExA (HKEY hKey ,LPCSTR lpValueName ,LPDWORD lpReserved ,LPDWORD lpType ,LPBYTE lpData ,LPDWORD lpcbData );
LONG RegQueryValueExW (HKEY hKey ,LPCWSTR lpValueName ,LPDWORD lpReserved ,LPDWORD lpType ,LPBYTE lpData ,LPDWORD lpcbData );
LONG RegReplaceKeyA (HKEY hKey ,LPCSTR lpSubKey ,LPCSTR lpNewFile ,LPCSTR lpOldFile );
LONG RegReplaceKeyW (HKEY hKey ,LPCWSTR lpSubKey ,LPCWSTR lpNewFile ,LPCWSTR lpOldFile );
LONG RegRestoreKeyA (HKEY hKey ,LPCSTR lpFile ,DWORD dwFlags );
LONG RegRestoreKeyW (HKEY hKey ,LPCWSTR lpFile ,DWORD dwFlags );
LONG RegSaveKeyA (HKEY hKey ,LPCSTR lpFile ,LPSECURITY_ATTRIBUTES lpSecurityAttributes );
LONG RegSaveKeyW (HKEY hKey ,LPCWSTR lpFile ,LPSECURITY_ATTRIBUTES lpSecurityAttributes );
LONG RegSetKeySecurity (HKEY hKey ,SECURITY_INFORMATION SecurityInformation ,PSECURITY_DESCRIPTOR pSecurityDescriptor );
LONG RegSetValueA (HKEY hKey ,LPCSTR lpSubKey ,DWORD dwType ,LPCSTR lpData ,DWORD cbData );
LONG RegSetValueW (HKEY hKey ,LPCWSTR lpSubKey ,DWORD dwType ,LPCWSTR lpData ,DWORD cbData );
LONG RegSetValueExA (HKEY hKey ,LPCSTR lpValueName ,DWORD Reserved ,DWORD dwType ,const BYTE *lpData ,DWORD cbData );
LONG RegSetValueExW (HKEY hKey ,LPCWSTR lpValueName ,DWORD Reserved ,DWORD dwType ,const BYTE *lpData ,DWORD cbData );
LONG RegUnLoadKeyA (HKEY hKey ,LPCSTR lpSubKey );
LONG RegUnLoadKeyW (HKEY hKey ,LPCWSTR lpSubKey );
LONG RegGetValueA (HKEY hkey ,LPCSTR lpSubKey ,LPCSTR lpValue ,DWORD dwFlags ,LPDWORD pdwType ,PVOID pvData ,LPDWORD pcbData );
LONG RegGetValueW (HKEY hkey ,LPCWSTR lpSubKey ,LPCWSTR lpValue ,DWORD dwFlags ,LPDWORD pdwType ,PVOID pvData ,LPDWORD pcbData );
WINBOOL InitiateSystemShutdownA (LPSTR lpMachineName ,LPSTR lpMessage ,DWORD dwTimeout ,WINBOOL bForceAppsClosed ,WINBOOL bRebootAfterShutdown );
WINBOOL InitiateSystemShutdownW (LPWSTR lpMachineName ,LPWSTR lpMessage ,DWORD dwTimeout ,WINBOOL bForceAppsClosed ,WINBOOL bRebootAfterShutdown );
WINBOOL AbortSystemShutdownA (LPSTR lpMachineName );
WINBOOL AbortSystemShutdownW (LPWSTR lpMachineName );
WINBOOL InitiateSystemShutdownExA (LPSTR lpMachineName ,LPSTR lpMessage ,DWORD dwTimeout ,WINBOOL bForceAppsClosed ,WINBOOL bRebootAfterShutdown ,DWORD dwReason );
WINBOOL InitiateSystemShutdownExW (LPWSTR lpMachineName ,LPWSTR lpMessage ,DWORD dwTimeout ,WINBOOL bForceAppsClosed ,WINBOOL bRebootAfterShutdown ,DWORD dwReason );
LONG RegSaveKeyExA (HKEY hKey ,LPCSTR lpFile ,LPSECURITY_ATTRIBUTES lpSecurityAttributes ,DWORD Flags );
LONG RegSaveKeyExW (HKEY hKey ,LPCWSTR lpFile ,LPSECURITY_ATTRIBUTES lpSecurityAttributes ,DWORD Flags );
LONG Wow64Win32ApiEntry (DWORD dwFuncNumber ,DWORD dwFlag ,DWORD dwRes );
// m:\mingw\x86_64-w64-mingw32\include\winnetwk.h

typedef struct _NETRESOURCEA {DWORD dwScope ;DWORD dwType ;DWORD dwDisplayType ;DWORD dwUsage ;LPSTR lpLocalName ;LPSTR lpRemoteName ;LPSTR lpComment ;LPSTR lpProvider ;}NETRESOURCEA ;
typedef struct _NETRESOURCEA {DWORD dwScope ;DWORD dwType ;DWORD dwDisplayType ;DWORD dwUsage ;LPSTR lpLocalName ;LPSTR lpRemoteName ;LPSTR lpComment ;LPSTR lpProvider ;}*LPNETRESOURCEA ;

typedef struct _NETRESOURCEW {DWORD dwScope ;DWORD dwType ;DWORD dwDisplayType ;DWORD dwUsage ;LPWSTR lpLocalName ;LPWSTR lpRemoteName ;LPWSTR lpComment ;LPWSTR lpProvider ;}NETRESOURCEW ;
typedef struct _NETRESOURCEW {DWORD dwScope ;DWORD dwType ;DWORD dwDisplayType ;DWORD dwUsage ;LPWSTR lpLocalName ;LPWSTR lpRemoteName ;LPWSTR lpComment ;LPWSTR lpProvider ;}*LPNETRESOURCEW ;

typedef NETRESOURCEA NETRESOURCE ;
typedef LPNETRESOURCEA LPNETRESOURCE ;
DWORD WNetAddConnectionA (LPCSTR lpRemoteName ,LPCSTR lpPassword ,LPCSTR lpLocalName );
DWORD WNetAddConnectionW (LPCWSTR lpRemoteName ,LPCWSTR lpPassword ,LPCWSTR lpLocalName );
DWORD WNetAddConnection2A (LPNETRESOURCEA lpNetResource ,LPCSTR lpPassword ,LPCSTR lpUserName ,DWORD dwFlags );
DWORD WNetAddConnection2W (LPNETRESOURCEW lpNetResource ,LPCWSTR lpPassword ,LPCWSTR lpUserName ,DWORD dwFlags );
DWORD WNetAddConnection3A (HWND hwndOwner ,LPNETRESOURCEA lpNetResource ,LPCSTR lpPassword ,LPCSTR lpUserName ,DWORD dwFlags );
DWORD WNetAddConnection3W (HWND hwndOwner ,LPNETRESOURCEW lpNetResource ,LPCWSTR lpPassword ,LPCWSTR lpUserName ,DWORD dwFlags );
DWORD WNetCancelConnectionA (LPCSTR lpName ,WINBOOL fForce );
DWORD WNetCancelConnectionW (LPCWSTR lpName ,WINBOOL fForce );
DWORD WNetCancelConnection2A (LPCSTR lpName ,DWORD dwFlags ,WINBOOL fForce );
DWORD WNetCancelConnection2W (LPCWSTR lpName ,DWORD dwFlags ,WINBOOL fForce );
DWORD WNetGetConnectionA (LPCSTR lpLocalName ,LPSTR lpRemoteName ,LPDWORD lpnLength );
DWORD WNetGetConnectionW (LPCWSTR lpLocalName ,LPWSTR lpRemoteName ,LPDWORD lpnLength );
DWORD WNetRestoreConnectionA (HWND hwndParent ,LPCSTR lpDevice );
DWORD WNetUseConnectionA (HWND hwndOwner ,LPNETRESOURCEA lpNetResource ,LPCSTR lpPassword ,LPCSTR lpUserID ,DWORD dwFlags ,LPSTR lpAccessName ,LPDWORD lpBufferSize ,LPDWORD lpResult );
DWORD WNetUseConnectionW (HWND hwndOwner ,LPNETRESOURCEW lpNetResource ,LPCWSTR lpPassword ,LPCWSTR lpUserID ,DWORD dwFlags ,LPWSTR lpAccessName ,LPDWORD lpBufferSize ,LPDWORD lpResult );
DWORD WNetConnectionDialog (HWND hwnd ,DWORD dwType );
DWORD WNetDisconnectDialog (HWND hwnd ,DWORD dwType );
DWORD WNetRestoreConnectionW (HWND hwndParent ,LPCWSTR lpDevice );
typedef struct _CONNECTDLGSTRUCTA {DWORD cbStructure ;HWND hwndOwner ;LPNETRESOURCEA lpConnRes ;DWORD dwFlags ;DWORD dwDevNum ;}CONNECTDLGSTRUCTA ;
typedef struct _CONNECTDLGSTRUCTA {DWORD cbStructure ;HWND hwndOwner ;LPNETRESOURCEA lpConnRes ;DWORD dwFlags ;DWORD dwDevNum ;}*LPCONNECTDLGSTRUCTA ;

typedef struct _CONNECTDLGSTRUCTW {DWORD cbStructure ;HWND hwndOwner ;LPNETRESOURCEW lpConnRes ;DWORD dwFlags ;DWORD dwDevNum ;}CONNECTDLGSTRUCTW ;
typedef struct _CONNECTDLGSTRUCTW {DWORD cbStructure ;HWND hwndOwner ;LPNETRESOURCEW lpConnRes ;DWORD dwFlags ;DWORD dwDevNum ;}*LPCONNECTDLGSTRUCTW ;

typedef CONNECTDLGSTRUCTA CONNECTDLGSTRUCT ;
typedef LPCONNECTDLGSTRUCTA LPCONNECTDLGSTRUCT ;
DWORD WNetConnectionDialog1A (LPCONNECTDLGSTRUCTA lpConnDlgStruct );
DWORD WNetConnectionDialog1W (LPCONNECTDLGSTRUCTW lpConnDlgStruct );
typedef struct _DISCDLGSTRUCTA {DWORD cbStructure ;HWND hwndOwner ;LPSTR lpLocalName ;LPSTR lpRemoteName ;DWORD dwFlags ;}DISCDLGSTRUCTA ;
typedef struct _DISCDLGSTRUCTA {DWORD cbStructure ;HWND hwndOwner ;LPSTR lpLocalName ;LPSTR lpRemoteName ;DWORD dwFlags ;}*LPDISCDLGSTRUCTA ;

typedef struct _DISCDLGSTRUCTW {DWORD cbStructure ;HWND hwndOwner ;LPWSTR lpLocalName ;LPWSTR lpRemoteName ;DWORD dwFlags ;}DISCDLGSTRUCTW ;
typedef struct _DISCDLGSTRUCTW {DWORD cbStructure ;HWND hwndOwner ;LPWSTR lpLocalName ;LPWSTR lpRemoteName ;DWORD dwFlags ;}*LPDISCDLGSTRUCTW ;

typedef DISCDLGSTRUCTA DISCDLGSTRUCT ;
typedef LPDISCDLGSTRUCTA LPDISCDLGSTRUCT ;
DWORD WNetDisconnectDialog1A (LPDISCDLGSTRUCTA lpConnDlgStruct );
DWORD WNetDisconnectDialog1W (LPDISCDLGSTRUCTW lpConnDlgStruct );
DWORD WNetOpenEnumA (DWORD dwScope ,DWORD dwType ,DWORD dwUsage ,LPNETRESOURCEA lpNetResource ,LPHANDLE lphEnum );
DWORD WNetOpenEnumW (DWORD dwScope ,DWORD dwType ,DWORD dwUsage ,LPNETRESOURCEW lpNetResource ,LPHANDLE lphEnum );
DWORD WNetEnumResourceA (HANDLE hEnum ,LPDWORD lpcCount ,LPVOID lpBuffer ,LPDWORD lpBufferSize );
DWORD WNetEnumResourceW (HANDLE hEnum ,LPDWORD lpcCount ,LPVOID lpBuffer ,LPDWORD lpBufferSize );
DWORD WNetCloseEnum (HANDLE hEnum );
DWORD WNetGetResourceParentA (LPNETRESOURCEA lpNetResource ,LPVOID lpBuffer ,LPDWORD lpcbBuffer );
DWORD WNetGetResourceParentW (LPNETRESOURCEW lpNetResource ,LPVOID lpBuffer ,LPDWORD lpcbBuffer );
DWORD WNetGetResourceInformationA (LPNETRESOURCEA lpNetResource ,LPVOID lpBuffer ,LPDWORD lpcbBuffer ,LPSTR *lplpSystem );
DWORD WNetGetResourceInformationW (LPNETRESOURCEW lpNetResource ,LPVOID lpBuffer ,LPDWORD lpcbBuffer ,LPWSTR *lplpSystem );
typedef struct _UNIVERSAL_NAME_INFOA {LPSTR lpUniversalName ;}UNIVERSAL_NAME_INFOA ;
typedef struct _UNIVERSAL_NAME_INFOA {LPSTR lpUniversalName ;}*LPUNIVERSAL_NAME_INFOA ;

typedef struct _UNIVERSAL_NAME_INFOW {LPWSTR lpUniversalName ;}UNIVERSAL_NAME_INFOW ;
typedef struct _UNIVERSAL_NAME_INFOW {LPWSTR lpUniversalName ;}*LPUNIVERSAL_NAME_INFOW ;

typedef UNIVERSAL_NAME_INFOA UNIVERSAL_NAME_INFO ;
typedef LPUNIVERSAL_NAME_INFOA LPUNIVERSAL_NAME_INFO ;
typedef struct _REMOTE_NAME_INFOA {LPSTR lpUniversalName ;LPSTR lpConnectionName ;LPSTR lpRemainingPath ;}REMOTE_NAME_INFOA ;
typedef struct _REMOTE_NAME_INFOA {LPSTR lpUniversalName ;LPSTR lpConnectionName ;LPSTR lpRemainingPath ;}*LPREMOTE_NAME_INFOA ;

typedef struct _REMOTE_NAME_INFOW {LPWSTR lpUniversalName ;LPWSTR lpConnectionName ;LPWSTR lpRemainingPath ;}REMOTE_NAME_INFOW ;
typedef struct _REMOTE_NAME_INFOW {LPWSTR lpUniversalName ;LPWSTR lpConnectionName ;LPWSTR lpRemainingPath ;}*LPREMOTE_NAME_INFOW ;

typedef REMOTE_NAME_INFOA REMOTE_NAME_INFO ;
typedef LPREMOTE_NAME_INFOA LPREMOTE_NAME_INFO ;
DWORD WNetGetUniversalNameA (LPCSTR lpLocalPath ,DWORD dwInfoLevel ,LPVOID lpBuffer ,LPDWORD lpBufferSize );
DWORD WNetGetUniversalNameW (LPCWSTR lpLocalPath ,DWORD dwInfoLevel ,LPVOID lpBuffer ,LPDWORD lpBufferSize );
DWORD WNetGetUserA (LPCSTR lpName ,LPSTR lpUserName ,LPDWORD lpnLength );
DWORD WNetGetUserW (LPCWSTR lpName ,LPWSTR lpUserName ,LPDWORD lpnLength );
DWORD WNetGetProviderNameA (DWORD dwNetType ,LPSTR lpProviderName ,LPDWORD lpBufferSize );
DWORD WNetGetProviderNameW (DWORD dwNetType ,LPWSTR lpProviderName ,LPDWORD lpBufferSize );
typedef struct _NETINFOSTRUCT {DWORD cbStructure ;DWORD dwProviderVersion ;DWORD dwStatus ;DWORD dwCharacteristics ;ULONG_PTR dwHandle ;WORD wNetType ;DWORD dwPrinters ;DWORD dwDrives ;}NETINFOSTRUCT ;
typedef struct _NETINFOSTRUCT {DWORD cbStructure ;DWORD dwProviderVersion ;DWORD dwStatus ;DWORD dwCharacteristics ;ULONG_PTR dwHandle ;WORD wNetType ;DWORD dwPrinters ;DWORD dwDrives ;}*LPNETINFOSTRUCT ;

DWORD WNetGetNetworkInformationA (LPCSTR lpProvider ,LPNETINFOSTRUCT lpNetInfoStruct );
DWORD WNetGetNetworkInformationW (LPCWSTR lpProvider ,LPNETINFOSTRUCT lpNetInfoStruct );
typedef UINT (*PFNGETPROFILEPATHA )(LPCSTR pszUsername ,LPSTR pszBuffer ,UINT cbBuffer );
typedef UINT (*PFNGETPROFILEPATHW )(LPCWSTR pszUsername ,LPWSTR pszBuffer ,UINT cbBuffer );
typedef UINT (*PFNRECONCILEPROFILEA )(LPCSTR pszCentralFile ,LPCSTR pszLocalFile ,DWORD dwFlags );
typedef UINT (*PFNRECONCILEPROFILEW )(LPCWSTR pszCentralFile ,LPCWSTR pszLocalFile ,DWORD dwFlags );
typedef WINBOOL (*PFNPROCESSPOLICIESA )(HWND hwnd ,LPCSTR pszPath ,LPCSTR pszUsername ,LPCSTR pszComputerName ,DWORD dwFlags );
typedef WINBOOL (*PFNPROCESSPOLICIESW )(HWND hwnd ,LPCWSTR pszPath ,LPCWSTR pszUsername ,LPCWSTR pszComputerName ,DWORD dwFlags );
DWORD WNetGetLastErrorA (LPDWORD lpError ,LPSTR lpErrorBuf ,DWORD nErrorBufSize ,LPSTR lpNameBuf ,DWORD nNameBufSize );
DWORD WNetGetLastErrorW (LPDWORD lpError ,LPWSTR lpErrorBuf ,DWORD nErrorBufSize ,LPWSTR lpNameBuf ,DWORD nNameBufSize );
typedef struct _NETCONNECTINFOSTRUCT {DWORD cbStructure ;DWORD dwFlags ;DWORD dwSpeed ;DWORD dwDelay ;DWORD dwOptDataSize ;}NETCONNECTINFOSTRUCT ;
typedef struct _NETCONNECTINFOSTRUCT {DWORD cbStructure ;DWORD dwFlags ;DWORD dwSpeed ;DWORD dwDelay ;DWORD dwOptDataSize ;}*LPNETCONNECTINFOSTRUCT ;

DWORD MultinetGetConnectionPerformanceA (LPNETRESOURCEA lpNetResource ,LPNETCONNECTINFOSTRUCT lpNetConnectInfoStruct );
DWORD MultinetGetConnectionPerformanceW (LPNETRESOURCEW lpNetResource ,LPNETCONNECTINFOSTRUCT lpNetConnectInfoStruct );
// m:\mingw\x86_64-w64-mingw32\include\ddeml.h

struct HCONVLIST__ {int unused ;};
typedef struct HCONVLIST__ *HCONVLIST ;
struct HCONV__ {int unused ;};
typedef struct HCONV__ *HCONV ;
struct HSZ__ {int unused ;};
typedef struct HSZ__ *HSZ ;
struct HDDEDATA__ {int unused ;};
typedef struct HDDEDATA__ *HDDEDATA ;
typedef struct tagHSZPAIR {HSZ hszSvc ;HSZ hszTopic ;}HSZPAIR ;
typedef struct tagHSZPAIR {HSZ hszSvc ;HSZ hszTopic ;}*PHSZPAIR ;

typedef struct tagCONVCONTEXT {UINT cb ;UINT wFlags ;UINT wCountryID ;int iCodePage ;DWORD dwLangID ;DWORD dwSecurity ;SECURITY_QUALITY_OF_SERVICE qos ;}CONVCONTEXT ;
typedef struct tagCONVCONTEXT {UINT cb ;UINT wFlags ;UINT wCountryID ;int iCodePage ;DWORD dwLangID ;DWORD dwSecurity ;SECURITY_QUALITY_OF_SERVICE qos ;}*PCONVCONTEXT ;

typedef struct tagCONVINFO {DWORD cb ;DWORD_PTR hUser ;HCONV hConvPartner ;HSZ hszSvcPartner ;HSZ hszServiceReq ;HSZ hszTopic ;HSZ hszItem ;UINT wFmt ;UINT wType ;UINT wStatus ;UINT wConvst ;UINT wLastError ;HCONVLIST hConvList ;CONVCONTEXT ConvCtxt ;HWND hwnd ;HWND hwndPartner ;}CONVINFO ;
typedef struct tagCONVINFO {DWORD cb ;DWORD_PTR hUser ;HCONV hConvPartner ;HSZ hszSvcPartner ;HSZ hszServiceReq ;HSZ hszTopic ;HSZ hszItem ;UINT wFmt ;UINT wType ;UINT wStatus ;UINT wConvst ;UINT wLastError ;HCONVLIST hConvList ;CONVCONTEXT ConvCtxt ;HWND hwnd ;HWND hwndPartner ;}*PCONVINFO ;

typedef HDDEDATA FNCALLBACK (UINT wType ,UINT wFmt ,HCONV hConv ,HSZ hsz1 ,HSZ hsz2 ,HDDEDATA hData ,ULONG_PTR dwData1 ,ULONG_PTR dwData2 );
typedef HDDEDATA (*PFNCALLBACK )(UINT wType ,UINT wFmt ,HCONV hConv ,HSZ hsz1 ,HSZ hsz2 ,HDDEDATA hData ,ULONG_PTR dwData1 ,ULONG_PTR dwData2 );
UINT DdeInitializeA (LPDWORD pidInst ,PFNCALLBACK pfnCallback ,DWORD afCmd ,DWORD ulRes );
UINT DdeInitializeW (LPDWORD pidInst ,PFNCALLBACK pfnCallback ,DWORD afCmd ,DWORD ulRes );
WINBOOL DdeUninitialize (DWORD idInst );
HCONVLIST DdeConnectList (DWORD idInst ,HSZ hszService ,HSZ hszTopic ,HCONVLIST hConvList ,PCONVCONTEXT pCC );
HCONV DdeQueryNextServer (HCONVLIST hConvList ,HCONV hConvPrev );
WINBOOL DdeDisconnectList (HCONVLIST hConvList );
HCONV DdeConnect (DWORD idInst ,HSZ hszService ,HSZ hszTopic ,PCONVCONTEXT pCC );
WINBOOL DdeDisconnect (HCONV hConv );
HCONV DdeReconnect (HCONV hConv );
UINT DdeQueryConvInfo (HCONV hConv ,DWORD idTransaction ,PCONVINFO pConvInfo );
WINBOOL DdeSetUserHandle (HCONV hConv ,DWORD id ,DWORD_PTR hUser );
WINBOOL DdeAbandonTransaction (DWORD idInst ,HCONV hConv ,DWORD idTransaction );
WINBOOL DdePostAdvise (DWORD idInst ,HSZ hszTopic ,HSZ hszItem );
WINBOOL DdeEnableCallback (DWORD idInst ,HCONV hConv ,UINT wCmd );
WINBOOL DdeImpersonateClient (HCONV hConv );
HDDEDATA DdeNameService (DWORD idInst ,HSZ hsz1 ,HSZ hsz2 ,UINT afCmd );
HDDEDATA DdeClientTransaction (LPBYTE pData ,DWORD cbData ,HCONV hConv ,HSZ hszItem ,UINT wFmt ,UINT wType ,DWORD dwTimeout ,LPDWORD pdwResult );
HDDEDATA DdeCreateDataHandle (DWORD idInst ,LPBYTE pSrc ,DWORD cb ,DWORD cbOff ,HSZ hszItem ,UINT wFmt ,UINT afCmd );
HDDEDATA DdeAddData (HDDEDATA hData ,LPBYTE pSrc ,DWORD cb ,DWORD cbOff );
DWORD DdeGetData (HDDEDATA hData ,LPBYTE pDst ,DWORD cbMax ,DWORD cbOff );
LPBYTE DdeAccessData (HDDEDATA hData ,LPDWORD pcbDataSize );
WINBOOL DdeUnaccessData (HDDEDATA hData );
WINBOOL DdeFreeDataHandle (HDDEDATA hData );
UINT DdeGetLastError (DWORD idInst );
HSZ DdeCreateStringHandleA (DWORD idInst ,LPCSTR psz ,int iCodePage );
HSZ DdeCreateStringHandleW (DWORD idInst ,LPCWSTR psz ,int iCodePage );
DWORD DdeQueryStringA (DWORD idInst ,HSZ hsz ,LPSTR psz ,DWORD cchMax ,int iCodePage );
DWORD DdeQueryStringW (DWORD idInst ,HSZ hsz ,LPWSTR psz ,DWORD cchMax ,int iCodePage );
WINBOOL DdeFreeStringHandle (DWORD idInst ,HSZ hsz );
WINBOOL DdeKeepStringHandle (DWORD idInst ,HSZ hsz );
int DdeCmpStringHandles (HSZ hsz1 ,HSZ hsz2 );
typedef struct tagDDEML_MSG_HOOK_DATA {UINT_PTR uiLo ;UINT_PTR uiHi ;DWORD cbData ;DWORD Data [8 ];}DDEML_MSG_HOOK_DATA ;
typedef struct tagDDEML_MSG_HOOK_DATA {UINT_PTR uiLo ;UINT_PTR uiHi ;DWORD cbData ;DWORD Data [8 ];}*PDDEML_MSG_HOOK_DATA ;

typedef struct tagMONMSGSTRUCT {UINT cb ;HWND hwndTo ;DWORD dwTime ;HANDLE hTask ;UINT wMsg ;WPARAM wParam ;LPARAM lParam ;DDEML_MSG_HOOK_DATA dmhd ;}MONMSGSTRUCT ;
typedef struct tagMONMSGSTRUCT {UINT cb ;HWND hwndTo ;DWORD dwTime ;HANDLE hTask ;UINT wMsg ;WPARAM wParam ;LPARAM lParam ;DDEML_MSG_HOOK_DATA dmhd ;}*PMONMSGSTRUCT ;

typedef struct tagMONCBSTRUCT {UINT cb ;DWORD dwTime ;HANDLE hTask ;DWORD dwRet ;UINT wType ;UINT wFmt ;HCONV hConv ;HSZ hsz1 ;HSZ hsz2 ;HDDEDATA hData ;ULONG_PTR dwData1 ;ULONG_PTR dwData2 ;CONVCONTEXT cc ;DWORD cbData ;DWORD Data [8 ];}MONCBSTRUCT ;
typedef struct tagMONCBSTRUCT {UINT cb ;DWORD dwTime ;HANDLE hTask ;DWORD dwRet ;UINT wType ;UINT wFmt ;HCONV hConv ;HSZ hsz1 ;HSZ hsz2 ;HDDEDATA hData ;ULONG_PTR dwData1 ;ULONG_PTR dwData2 ;CONVCONTEXT cc ;DWORD cbData ;DWORD Data [8 ];}*PMONCBSTRUCT ;

typedef struct tagMONHSZSTRUCTA {UINT cb ;WINBOOL fsAction ;DWORD dwTime ;HSZ hsz ;HANDLE hTask ;CHAR str [1 ];}MONHSZSTRUCTA ;
typedef struct tagMONHSZSTRUCTA {UINT cb ;WINBOOL fsAction ;DWORD dwTime ;HSZ hsz ;HANDLE hTask ;CHAR str [1 ];}*PMONHSZSTRUCTA ;

typedef struct tagMONHSZSTRUCTW {UINT cb ;WINBOOL fsAction ;DWORD dwTime ;HSZ hsz ;HANDLE hTask ;WCHAR str [1 ];}MONHSZSTRUCTW ;
typedef struct tagMONHSZSTRUCTW {UINT cb ;WINBOOL fsAction ;DWORD dwTime ;HSZ hsz ;HANDLE hTask ;WCHAR str [1 ];}*PMONHSZSTRUCTW ;

typedef MONHSZSTRUCTA MONHSZSTRUCT ;
typedef PMONHSZSTRUCTA PMONHSZSTRUCT ;
typedef struct tagMONERRSTRUCT {UINT cb ;UINT wLastError ;DWORD dwTime ;HANDLE hTask ;}MONERRSTRUCT ;
typedef struct tagMONERRSTRUCT {UINT cb ;UINT wLastError ;DWORD dwTime ;HANDLE hTask ;}*PMONERRSTRUCT ;

typedef struct tagMONLINKSTRUCT {UINT cb ;DWORD dwTime ;HANDLE hTask ;WINBOOL fEstablished ;WINBOOL fNoData ;HSZ hszSvc ;HSZ hszTopic ;HSZ hszItem ;UINT wFmt ;WINBOOL fServer ;HCONV hConvServer ;HCONV hConvClient ;}MONLINKSTRUCT ;
typedef struct tagMONLINKSTRUCT {UINT cb ;DWORD dwTime ;HANDLE hTask ;WINBOOL fEstablished ;WINBOOL fNoData ;HSZ hszSvc ;HSZ hszTopic ;HSZ hszItem ;UINT wFmt ;WINBOOL fServer ;HCONV hConvServer ;HCONV hConvClient ;}*PMONLINKSTRUCT ;

typedef struct tagMONCONVSTRUCT {UINT cb ;WINBOOL fConnect ;DWORD dwTime ;HANDLE hTask ;HSZ hszSvc ;HSZ hszTopic ;HCONV hConvClient ;HCONV hConvServer ;}MONCONVSTRUCT ;
typedef struct tagMONCONVSTRUCT {UINT cb ;WINBOOL fConnect ;DWORD dwTime ;HANDLE hTask ;HSZ hszSvc ;HSZ hszTopic ;HCONV hConvClient ;HCONV hConvServer ;}*PMONCONVSTRUCT ;

// m:\mingw\x86_64-w64-mingw32\include\lzexpand.h

INT LZStart (void );
void LZDone (void );
LONG CopyLZFile (INT ,INT );
LONG LZCopy (INT ,INT );
INT LZInit (INT );
INT GetExpandedNameA (LPSTR ,LPSTR );
INT GetExpandedNameW (LPWSTR ,LPWSTR );
INT LZOpenFileA (LPSTR ,LPOFSTRUCT ,WORD );
INT LZOpenFileW (LPWSTR ,LPOFSTRUCT ,WORD );
LONG LZSeek (INT ,LONG ,INT );
INT LZRead (INT ,LPSTR ,INT );
void LZClose (INT );
// m:\mingw\x86_64-w64-mingw32\include\mmsystem.h

typedef UINT MMVERSION ;
typedef UINT MMRESULT ;
typedef UINT *LPUINT ;
typedef struct mmtime_tag {UINT wType ;union {DWORD ms ;DWORD sample ;DWORD cb ;DWORD ticks ;struct {BYTE hour ;BYTE min ;BYTE sec ;BYTE frame ;BYTE fps ;BYTE dummy ;BYTE pad [2 ];}smpte ;struct {DWORD songptrpos ;}midi ;}u ;}MMTIME ;
typedef struct mmtime_tag {UINT wType ;union {DWORD ms ;DWORD sample ;DWORD cb ;DWORD ticks ;struct {BYTE hour ;BYTE min ;BYTE sec ;BYTE frame ;BYTE fps ;BYTE dummy ;BYTE pad [2 ];}smpte ;struct {DWORD songptrpos ;}midi ;}u ;}*PMMTIME ;
typedef struct mmtime_tag {UINT wType ;union {DWORD ms ;DWORD sample ;DWORD cb ;DWORD ticks ;struct {BYTE hour ;BYTE min ;BYTE sec ;BYTE frame ;BYTE fps ;BYTE dummy ;BYTE pad [2 ];}smpte ;struct {DWORD songptrpos ;}midi ;}u ;}*NPMMTIME ;
typedef struct mmtime_tag {UINT wType ;union {DWORD ms ;DWORD sample ;DWORD cb ;DWORD ticks ;struct {BYTE hour ;BYTE min ;BYTE sec ;BYTE frame ;BYTE fps ;BYTE dummy ;BYTE pad [2 ];}smpte ;struct {DWORD songptrpos ;}midi ;}u ;}*LPMMTIME ;

struct HDRVR__ {int unused ;};
typedef struct HDRVR__ *HDRVR ;
typedef struct DRVCONFIGINFOEX {DWORD dwDCISize ;LPCWSTR lpszDCISectionName ;LPCWSTR lpszDCIAliasName ;DWORD dnDevNode ;}DRVCONFIGINFOEX ;
typedef struct DRVCONFIGINFOEX {DWORD dwDCISize ;LPCWSTR lpszDCISectionName ;LPCWSTR lpszDCIAliasName ;DWORD dnDevNode ;}*PDRVCONFIGINFOEX ;
typedef struct DRVCONFIGINFOEX {DWORD dwDCISize ;LPCWSTR lpszDCISectionName ;LPCWSTR lpszDCIAliasName ;DWORD dnDevNode ;}*NPDRVCONFIGINFOEX ;
typedef struct DRVCONFIGINFOEX {DWORD dwDCISize ;LPCWSTR lpszDCISectionName ;LPCWSTR lpszDCIAliasName ;DWORD dnDevNode ;}*LPDRVCONFIGINFOEX ;

typedef struct tagDRVCONFIGINFO {DWORD dwDCISize ;LPCWSTR lpszDCISectionName ;LPCWSTR lpszDCIAliasName ;}DRVCONFIGINFO ;
typedef struct tagDRVCONFIGINFO {DWORD dwDCISize ;LPCWSTR lpszDCISectionName ;LPCWSTR lpszDCIAliasName ;}*PDRVCONFIGINFO ;
typedef struct tagDRVCONFIGINFO {DWORD dwDCISize ;LPCWSTR lpszDCISectionName ;LPCWSTR lpszDCIAliasName ;}*NPDRVCONFIGINFO ;
typedef struct tagDRVCONFIGINFO {DWORD dwDCISize ;LPCWSTR lpszDCISectionName ;LPCWSTR lpszDCIAliasName ;}*LPDRVCONFIGINFO ;

typedef LRESULT (*DRIVERPROC )(DWORD_PTR ,HDRVR ,UINT ,LPARAM ,LPARAM );
LRESULT CloseDriver (HDRVR hDriver ,LPARAM lParam1 ,LPARAM lParam2 );
HDRVR OpenDriver (LPCWSTR szDriverName ,LPCWSTR szSectionName ,LPARAM lParam2 );
LRESULT SendDriverMessage (HDRVR hDriver ,UINT message ,LPARAM lParam1 ,LPARAM lParam2 );
HMODULE DrvGetModuleHandle (HDRVR hDriver );
HMODULE GetDriverModuleHandle (HDRVR hDriver );
LRESULT DefDriverProc (DWORD_PTR dwDriverIdentifier ,HDRVR hdrvr ,UINT uMsg ,LPARAM lParam1 ,LPARAM lParam2 );
typedef void (DRVCALLBACK )(HDRVR hdrvr ,UINT uMsg ,DWORD_PTR dwUser ,DWORD_PTR dw1 ,DWORD_PTR dw2 );
typedef DRVCALLBACK *LPDRVCALLBACK ;
typedef DRVCALLBACK *PDRVCALLBACK ;
WINBOOL sndPlaySoundA (LPCSTR pszSound ,UINT fuSound );
WINBOOL sndPlaySoundW (LPCWSTR pszSound ,UINT fuSound );
WINBOOL PlaySoundA (LPCSTR pszSound ,HMODULE hmod ,DWORD fdwSound );
WINBOOL PlaySoundW (LPCWSTR pszSound ,HMODULE hmod ,DWORD fdwSound );
struct HWAVE__ {int unused ;};
typedef struct HWAVE__ *HWAVE ;
struct HWAVEIN__ {int unused ;};
typedef struct HWAVEIN__ *HWAVEIN ;
struct HWAVEOUT__ {int unused ;};
typedef struct HWAVEOUT__ *HWAVEOUT ;
typedef HWAVEIN *LPHWAVEIN ;
typedef HWAVEOUT *LPHWAVEOUT ;
typedef DRVCALLBACK WAVECALLBACK ;
typedef WAVECALLBACK *LPWAVECALLBACK ;
typedef struct wavehdr_tag {LPSTR lpData ;DWORD dwBufferLength ;DWORD dwBytesRecorded ;DWORD_PTR dwUser ;DWORD dwFlags ;DWORD dwLoops ;struct wavehdr_tag *lpNext ;DWORD_PTR reserved ;}WAVEHDR ;
typedef struct wavehdr_tag {LPSTR lpData ;DWORD dwBufferLength ;DWORD dwBytesRecorded ;DWORD_PTR dwUser ;DWORD dwFlags ;DWORD dwLoops ;struct wavehdr_tag *lpNext ;DWORD_PTR reserved ;}*PWAVEHDR ;
typedef struct wavehdr_tag {LPSTR lpData ;DWORD dwBufferLength ;DWORD dwBytesRecorded ;DWORD_PTR dwUser ;DWORD dwFlags ;DWORD dwLoops ;struct wavehdr_tag *lpNext ;DWORD_PTR reserved ;}*NPWAVEHDR ;
typedef struct wavehdr_tag {LPSTR lpData ;DWORD dwBufferLength ;DWORD dwBytesRecorded ;DWORD_PTR dwUser ;DWORD dwFlags ;DWORD dwLoops ;struct wavehdr_tag *lpNext ;DWORD_PTR reserved ;}*LPWAVEHDR ;

typedef struct tagWAVEOUTCAPSA {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;CHAR szPname [32 ];DWORD dwFormats ;WORD wChannels ;WORD wReserved1 ;DWORD dwSupport ;}WAVEOUTCAPSA ;
typedef struct tagWAVEOUTCAPSA {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;CHAR szPname [32 ];DWORD dwFormats ;WORD wChannels ;WORD wReserved1 ;DWORD dwSupport ;}*PWAVEOUTCAPSA ;
typedef struct tagWAVEOUTCAPSA {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;CHAR szPname [32 ];DWORD dwFormats ;WORD wChannels ;WORD wReserved1 ;DWORD dwSupport ;}*NPWAVEOUTCAPSA ;
typedef struct tagWAVEOUTCAPSA {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;CHAR szPname [32 ];DWORD dwFormats ;WORD wChannels ;WORD wReserved1 ;DWORD dwSupport ;}*LPWAVEOUTCAPSA ;

typedef struct tagWAVEOUTCAPSW {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;WCHAR szPname [32 ];DWORD dwFormats ;WORD wChannels ;WORD wReserved1 ;DWORD dwSupport ;}WAVEOUTCAPSW ;
typedef struct tagWAVEOUTCAPSW {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;WCHAR szPname [32 ];DWORD dwFormats ;WORD wChannels ;WORD wReserved1 ;DWORD dwSupport ;}*PWAVEOUTCAPSW ;
typedef struct tagWAVEOUTCAPSW {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;WCHAR szPname [32 ];DWORD dwFormats ;WORD wChannels ;WORD wReserved1 ;DWORD dwSupport ;}*NPWAVEOUTCAPSW ;
typedef struct tagWAVEOUTCAPSW {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;WCHAR szPname [32 ];DWORD dwFormats ;WORD wChannels ;WORD wReserved1 ;DWORD dwSupport ;}*LPWAVEOUTCAPSW ;

typedef WAVEOUTCAPSA WAVEOUTCAPS ;
typedef PWAVEOUTCAPSA PWAVEOUTCAPS ;
typedef NPWAVEOUTCAPSA NPWAVEOUTCAPS ;
typedef LPWAVEOUTCAPSA LPWAVEOUTCAPS ;
typedef struct tagWAVEOUTCAPS2A {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;CHAR szPname [32 ];DWORD dwFormats ;WORD wChannels ;WORD wReserved1 ;DWORD dwSupport ;GUID ManufacturerGuid ;GUID ProductGuid ;GUID NameGuid ;}WAVEOUTCAPS2A ;
typedef struct tagWAVEOUTCAPS2A {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;CHAR szPname [32 ];DWORD dwFormats ;WORD wChannels ;WORD wReserved1 ;DWORD dwSupport ;GUID ManufacturerGuid ;GUID ProductGuid ;GUID NameGuid ;}*PWAVEOUTCAPS2A ;
typedef struct tagWAVEOUTCAPS2A {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;CHAR szPname [32 ];DWORD dwFormats ;WORD wChannels ;WORD wReserved1 ;DWORD dwSupport ;GUID ManufacturerGuid ;GUID ProductGuid ;GUID NameGuid ;}*NPWAVEOUTCAPS2A ;
typedef struct tagWAVEOUTCAPS2A {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;CHAR szPname [32 ];DWORD dwFormats ;WORD wChannels ;WORD wReserved1 ;DWORD dwSupport ;GUID ManufacturerGuid ;GUID ProductGuid ;GUID NameGuid ;}*LPWAVEOUTCAPS2A ;

typedef struct tagWAVEOUTCAPS2W {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;WCHAR szPname [32 ];DWORD dwFormats ;WORD wChannels ;WORD wReserved1 ;DWORD dwSupport ;GUID ManufacturerGuid ;GUID ProductGuid ;GUID NameGuid ;}WAVEOUTCAPS2W ;
typedef struct tagWAVEOUTCAPS2W {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;WCHAR szPname [32 ];DWORD dwFormats ;WORD wChannels ;WORD wReserved1 ;DWORD dwSupport ;GUID ManufacturerGuid ;GUID ProductGuid ;GUID NameGuid ;}*PWAVEOUTCAPS2W ;
typedef struct tagWAVEOUTCAPS2W {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;WCHAR szPname [32 ];DWORD dwFormats ;WORD wChannels ;WORD wReserved1 ;DWORD dwSupport ;GUID ManufacturerGuid ;GUID ProductGuid ;GUID NameGuid ;}*NPWAVEOUTCAPS2W ;
typedef struct tagWAVEOUTCAPS2W {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;WCHAR szPname [32 ];DWORD dwFormats ;WORD wChannels ;WORD wReserved1 ;DWORD dwSupport ;GUID ManufacturerGuid ;GUID ProductGuid ;GUID NameGuid ;}*LPWAVEOUTCAPS2W ;

typedef WAVEOUTCAPS2A WAVEOUTCAPS2 ;
typedef PWAVEOUTCAPS2A PWAVEOUTCAPS2 ;
typedef NPWAVEOUTCAPS2A NPWAVEOUTCAPS2 ;
typedef LPWAVEOUTCAPS2A LPWAVEOUTCAPS2 ;
typedef struct tagWAVEINCAPSA {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;CHAR szPname [32 ];DWORD dwFormats ;WORD wChannels ;WORD wReserved1 ;}WAVEINCAPSA ;
typedef struct tagWAVEINCAPSA {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;CHAR szPname [32 ];DWORD dwFormats ;WORD wChannels ;WORD wReserved1 ;}*PWAVEINCAPSA ;
typedef struct tagWAVEINCAPSA {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;CHAR szPname [32 ];DWORD dwFormats ;WORD wChannels ;WORD wReserved1 ;}*NPWAVEINCAPSA ;
typedef struct tagWAVEINCAPSA {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;CHAR szPname [32 ];DWORD dwFormats ;WORD wChannels ;WORD wReserved1 ;}*LPWAVEINCAPSA ;

typedef struct tagWAVEINCAPSW {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;WCHAR szPname [32 ];DWORD dwFormats ;WORD wChannels ;WORD wReserved1 ;}WAVEINCAPSW ;
typedef struct tagWAVEINCAPSW {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;WCHAR szPname [32 ];DWORD dwFormats ;WORD wChannels ;WORD wReserved1 ;}*PWAVEINCAPSW ;
typedef struct tagWAVEINCAPSW {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;WCHAR szPname [32 ];DWORD dwFormats ;WORD wChannels ;WORD wReserved1 ;}*NPWAVEINCAPSW ;
typedef struct tagWAVEINCAPSW {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;WCHAR szPname [32 ];DWORD dwFormats ;WORD wChannels ;WORD wReserved1 ;}*LPWAVEINCAPSW ;

typedef WAVEINCAPSA WAVEINCAPS ;
typedef PWAVEINCAPSA PWAVEINCAPS ;
typedef NPWAVEINCAPSA NPWAVEINCAPS ;
typedef LPWAVEINCAPSA LPWAVEINCAPS ;
typedef struct tagWAVEINCAPS2A {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;CHAR szPname [32 ];DWORD dwFormats ;WORD wChannels ;WORD wReserved1 ;GUID ManufacturerGuid ;GUID ProductGuid ;GUID NameGuid ;}WAVEINCAPS2A ;
typedef struct tagWAVEINCAPS2A {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;CHAR szPname [32 ];DWORD dwFormats ;WORD wChannels ;WORD wReserved1 ;GUID ManufacturerGuid ;GUID ProductGuid ;GUID NameGuid ;}*PWAVEINCAPS2A ;
typedef struct tagWAVEINCAPS2A {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;CHAR szPname [32 ];DWORD dwFormats ;WORD wChannels ;WORD wReserved1 ;GUID ManufacturerGuid ;GUID ProductGuid ;GUID NameGuid ;}*NPWAVEINCAPS2A ;
typedef struct tagWAVEINCAPS2A {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;CHAR szPname [32 ];DWORD dwFormats ;WORD wChannels ;WORD wReserved1 ;GUID ManufacturerGuid ;GUID ProductGuid ;GUID NameGuid ;}*LPWAVEINCAPS2A ;

typedef struct tagWAVEINCAPS2W {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;WCHAR szPname [32 ];DWORD dwFormats ;WORD wChannels ;WORD wReserved1 ;GUID ManufacturerGuid ;GUID ProductGuid ;GUID NameGuid ;}WAVEINCAPS2W ;
typedef struct tagWAVEINCAPS2W {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;WCHAR szPname [32 ];DWORD dwFormats ;WORD wChannels ;WORD wReserved1 ;GUID ManufacturerGuid ;GUID ProductGuid ;GUID NameGuid ;}*PWAVEINCAPS2W ;
typedef struct tagWAVEINCAPS2W {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;WCHAR szPname [32 ];DWORD dwFormats ;WORD wChannels ;WORD wReserved1 ;GUID ManufacturerGuid ;GUID ProductGuid ;GUID NameGuid ;}*NPWAVEINCAPS2W ;
typedef struct tagWAVEINCAPS2W {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;WCHAR szPname [32 ];DWORD dwFormats ;WORD wChannels ;WORD wReserved1 ;GUID ManufacturerGuid ;GUID ProductGuid ;GUID NameGuid ;}*LPWAVEINCAPS2W ;

typedef WAVEINCAPS2A WAVEINCAPS2 ;
typedef PWAVEINCAPS2A PWAVEINCAPS2 ;
typedef NPWAVEINCAPS2A NPWAVEINCAPS2 ;
typedef LPWAVEINCAPS2A LPWAVEINCAPS2 ;
typedef struct waveformat_tag {WORD wFormatTag ;WORD nChannels ;DWORD nSamplesPerSec ;DWORD nAvgBytesPerSec ;WORD nBlockAlign ;}WAVEFORMAT ;
typedef struct waveformat_tag {WORD wFormatTag ;WORD nChannels ;DWORD nSamplesPerSec ;DWORD nAvgBytesPerSec ;WORD nBlockAlign ;}*PWAVEFORMAT ;
typedef struct waveformat_tag {WORD wFormatTag ;WORD nChannels ;DWORD nSamplesPerSec ;DWORD nAvgBytesPerSec ;WORD nBlockAlign ;}*NPWAVEFORMAT ;
typedef struct waveformat_tag {WORD wFormatTag ;WORD nChannels ;DWORD nSamplesPerSec ;DWORD nAvgBytesPerSec ;WORD nBlockAlign ;}*LPWAVEFORMAT ;

typedef struct pcmwaveformat_tag {WAVEFORMAT wf ;WORD wBitsPerSample ;}PCMWAVEFORMAT ;
typedef struct pcmwaveformat_tag {WAVEFORMAT wf ;WORD wBitsPerSample ;}*PPCMWAVEFORMAT ;
typedef struct pcmwaveformat_tag {WAVEFORMAT wf ;WORD wBitsPerSample ;}*NPPCMWAVEFORMAT ;
typedef struct pcmwaveformat_tag {WAVEFORMAT wf ;WORD wBitsPerSample ;}*LPPCMWAVEFORMAT ;

typedef struct tWAVEFORMATEX {WORD wFormatTag ;WORD nChannels ;DWORD nSamplesPerSec ;DWORD nAvgBytesPerSec ;WORD nBlockAlign ;WORD wBitsPerSample ;WORD cbSize ;}WAVEFORMATEX ;
typedef struct tWAVEFORMATEX {WORD wFormatTag ;WORD nChannels ;DWORD nSamplesPerSec ;DWORD nAvgBytesPerSec ;WORD nBlockAlign ;WORD wBitsPerSample ;WORD cbSize ;}*PWAVEFORMATEX ;
typedef struct tWAVEFORMATEX {WORD wFormatTag ;WORD nChannels ;DWORD nSamplesPerSec ;DWORD nAvgBytesPerSec ;WORD nBlockAlign ;WORD wBitsPerSample ;WORD cbSize ;}*NPWAVEFORMATEX ;
typedef struct tWAVEFORMATEX {WORD wFormatTag ;WORD nChannels ;DWORD nSamplesPerSec ;DWORD nAvgBytesPerSec ;WORD nBlockAlign ;WORD wBitsPerSample ;WORD cbSize ;}*LPWAVEFORMATEX ;

typedef const WAVEFORMATEX *LPCWAVEFORMATEX ;
UINT waveOutGetNumDevs (void );
MMRESULT waveOutGetDevCapsA (UINT_PTR uDeviceID ,LPWAVEOUTCAPSA pwoc ,UINT cbwoc );
MMRESULT waveOutGetDevCapsW (UINT_PTR uDeviceID ,LPWAVEOUTCAPSW pwoc ,UINT cbwoc );
MMRESULT waveOutGetVolume (HWAVEOUT hwo ,LPDWORD pdwVolume );
MMRESULT waveOutSetVolume (HWAVEOUT hwo ,DWORD dwVolume );
MMRESULT waveOutGetErrorTextA (MMRESULT mmrError ,LPSTR pszText ,UINT cchText );
MMRESULT waveOutGetErrorTextW (MMRESULT mmrError ,LPWSTR pszText ,UINT cchText );
MMRESULT waveOutOpen (LPHWAVEOUT phwo ,UINT uDeviceID ,LPCWAVEFORMATEX pwfx ,DWORD_PTR dwCallback ,DWORD_PTR dwInstance ,DWORD fdwOpen );
MMRESULT waveOutClose (HWAVEOUT hwo );
MMRESULT waveOutPrepareHeader (HWAVEOUT hwo ,LPWAVEHDR pwh ,UINT cbwh );
MMRESULT waveOutUnprepareHeader (HWAVEOUT hwo ,LPWAVEHDR pwh ,UINT cbwh );
MMRESULT waveOutWrite (HWAVEOUT hwo ,LPWAVEHDR pwh ,UINT cbwh );
MMRESULT waveOutPause (HWAVEOUT hwo );
MMRESULT waveOutRestart (HWAVEOUT hwo );
MMRESULT waveOutReset (HWAVEOUT hwo );
MMRESULT waveOutBreakLoop (HWAVEOUT hwo );
MMRESULT waveOutGetPosition (HWAVEOUT hwo ,LPMMTIME pmmt ,UINT cbmmt );
MMRESULT waveOutGetPitch (HWAVEOUT hwo ,LPDWORD pdwPitch );
MMRESULT waveOutSetPitch (HWAVEOUT hwo ,DWORD dwPitch );
MMRESULT waveOutGetPlaybackRate (HWAVEOUT hwo ,LPDWORD pdwRate );
MMRESULT waveOutSetPlaybackRate (HWAVEOUT hwo ,DWORD dwRate );
MMRESULT waveOutGetID (HWAVEOUT hwo ,LPUINT puDeviceID );
MMRESULT waveOutMessage (HWAVEOUT hwo ,UINT uMsg ,DWORD_PTR dw1 ,DWORD_PTR dw2 );
UINT waveInGetNumDevs (void );
MMRESULT waveInGetDevCapsA (UINT_PTR uDeviceID ,LPWAVEINCAPSA pwic ,UINT cbwic );
MMRESULT waveInGetDevCapsW (UINT_PTR uDeviceID ,LPWAVEINCAPSW pwic ,UINT cbwic );
MMRESULT waveInGetErrorTextA (MMRESULT mmrError ,LPSTR pszText ,UINT cchText );
MMRESULT waveInGetErrorTextW (MMRESULT mmrError ,LPWSTR pszText ,UINT cchText );
MMRESULT waveInOpen (LPHWAVEIN phwi ,UINT uDeviceID ,LPCWAVEFORMATEX pwfx ,DWORD_PTR dwCallback ,DWORD_PTR dwInstance ,DWORD fdwOpen );
MMRESULT waveInClose (HWAVEIN hwi );
MMRESULT waveInPrepareHeader (HWAVEIN hwi ,LPWAVEHDR pwh ,UINT cbwh );
MMRESULT waveInUnprepareHeader (HWAVEIN hwi ,LPWAVEHDR pwh ,UINT cbwh );
MMRESULT waveInAddBuffer (HWAVEIN hwi ,LPWAVEHDR pwh ,UINT cbwh );
MMRESULT waveInStart (HWAVEIN hwi );
MMRESULT waveInStop (HWAVEIN hwi );
MMRESULT waveInReset (HWAVEIN hwi );
MMRESULT waveInGetPosition (HWAVEIN hwi ,LPMMTIME pmmt ,UINT cbmmt );
MMRESULT waveInGetID (HWAVEIN hwi ,LPUINT puDeviceID );
MMRESULT waveInMessage (HWAVEIN hwi ,UINT uMsg ,DWORD_PTR dw1 ,DWORD_PTR dw2 );
struct HMIDI__ {int unused ;};
typedef struct HMIDI__ *HMIDI ;
struct HMIDIIN__ {int unused ;};
typedef struct HMIDIIN__ *HMIDIIN ;
struct HMIDIOUT__ {int unused ;};
typedef struct HMIDIOUT__ *HMIDIOUT ;
struct HMIDISTRM__ {int unused ;};
typedef struct HMIDISTRM__ *HMIDISTRM ;
typedef HMIDI *LPHMIDI ;
typedef HMIDIIN *LPHMIDIIN ;
typedef HMIDIOUT *LPHMIDIOUT ;
typedef HMIDISTRM *LPHMIDISTRM ;
typedef DRVCALLBACK MIDICALLBACK ;
typedef MIDICALLBACK *LPMIDICALLBACK ;
typedef WORD PATCHARRAY [128 ];
typedef WORD *LPPATCHARRAY ;
typedef WORD KEYARRAY [128 ];
typedef WORD *LPKEYARRAY ;
typedef struct tagMIDIOUTCAPSA {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;CHAR szPname [32 ];WORD wTechnology ;WORD wVoices ;WORD wNotes ;WORD wChannelMask ;DWORD dwSupport ;}MIDIOUTCAPSA ;
typedef struct tagMIDIOUTCAPSA {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;CHAR szPname [32 ];WORD wTechnology ;WORD wVoices ;WORD wNotes ;WORD wChannelMask ;DWORD dwSupport ;}*PMIDIOUTCAPSA ;
typedef struct tagMIDIOUTCAPSA {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;CHAR szPname [32 ];WORD wTechnology ;WORD wVoices ;WORD wNotes ;WORD wChannelMask ;DWORD dwSupport ;}*NPMIDIOUTCAPSA ;
typedef struct tagMIDIOUTCAPSA {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;CHAR szPname [32 ];WORD wTechnology ;WORD wVoices ;WORD wNotes ;WORD wChannelMask ;DWORD dwSupport ;}*LPMIDIOUTCAPSA ;

typedef struct tagMIDIOUTCAPSW {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;WCHAR szPname [32 ];WORD wTechnology ;WORD wVoices ;WORD wNotes ;WORD wChannelMask ;DWORD dwSupport ;}MIDIOUTCAPSW ;
typedef struct tagMIDIOUTCAPSW {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;WCHAR szPname [32 ];WORD wTechnology ;WORD wVoices ;WORD wNotes ;WORD wChannelMask ;DWORD dwSupport ;}*PMIDIOUTCAPSW ;
typedef struct tagMIDIOUTCAPSW {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;WCHAR szPname [32 ];WORD wTechnology ;WORD wVoices ;WORD wNotes ;WORD wChannelMask ;DWORD dwSupport ;}*NPMIDIOUTCAPSW ;
typedef struct tagMIDIOUTCAPSW {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;WCHAR szPname [32 ];WORD wTechnology ;WORD wVoices ;WORD wNotes ;WORD wChannelMask ;DWORD dwSupport ;}*LPMIDIOUTCAPSW ;

typedef MIDIOUTCAPSA MIDIOUTCAPS ;
typedef PMIDIOUTCAPSA PMIDIOUTCAPS ;
typedef NPMIDIOUTCAPSA NPMIDIOUTCAPS ;
typedef LPMIDIOUTCAPSA LPMIDIOUTCAPS ;
typedef struct tagMIDIOUTCAPS2A {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;CHAR szPname [32 ];WORD wTechnology ;WORD wVoices ;WORD wNotes ;WORD wChannelMask ;DWORD dwSupport ;GUID ManufacturerGuid ;GUID ProductGuid ;GUID NameGuid ;}MIDIOUTCAPS2A ;
typedef struct tagMIDIOUTCAPS2A {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;CHAR szPname [32 ];WORD wTechnology ;WORD wVoices ;WORD wNotes ;WORD wChannelMask ;DWORD dwSupport ;GUID ManufacturerGuid ;GUID ProductGuid ;GUID NameGuid ;}*PMIDIOUTCAPS2A ;
typedef struct tagMIDIOUTCAPS2A {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;CHAR szPname [32 ];WORD wTechnology ;WORD wVoices ;WORD wNotes ;WORD wChannelMask ;DWORD dwSupport ;GUID ManufacturerGuid ;GUID ProductGuid ;GUID NameGuid ;}*NPMIDIOUTCAPS2A ;
typedef struct tagMIDIOUTCAPS2A {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;CHAR szPname [32 ];WORD wTechnology ;WORD wVoices ;WORD wNotes ;WORD wChannelMask ;DWORD dwSupport ;GUID ManufacturerGuid ;GUID ProductGuid ;GUID NameGuid ;}*LPMIDIOUTCAPS2A ;

typedef struct tagMIDIOUTCAPS2W {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;WCHAR szPname [32 ];WORD wTechnology ;WORD wVoices ;WORD wNotes ;WORD wChannelMask ;DWORD dwSupport ;GUID ManufacturerGuid ;GUID ProductGuid ;GUID NameGuid ;}MIDIOUTCAPS2W ;
typedef struct tagMIDIOUTCAPS2W {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;WCHAR szPname [32 ];WORD wTechnology ;WORD wVoices ;WORD wNotes ;WORD wChannelMask ;DWORD dwSupport ;GUID ManufacturerGuid ;GUID ProductGuid ;GUID NameGuid ;}*PMIDIOUTCAPS2W ;
typedef struct tagMIDIOUTCAPS2W {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;WCHAR szPname [32 ];WORD wTechnology ;WORD wVoices ;WORD wNotes ;WORD wChannelMask ;DWORD dwSupport ;GUID ManufacturerGuid ;GUID ProductGuid ;GUID NameGuid ;}*NPMIDIOUTCAPS2W ;
typedef struct tagMIDIOUTCAPS2W {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;WCHAR szPname [32 ];WORD wTechnology ;WORD wVoices ;WORD wNotes ;WORD wChannelMask ;DWORD dwSupport ;GUID ManufacturerGuid ;GUID ProductGuid ;GUID NameGuid ;}*LPMIDIOUTCAPS2W ;

typedef MIDIOUTCAPS2A MIDIOUTCAPS2 ;
typedef PMIDIOUTCAPS2A PMIDIOUTCAPS2 ;
typedef NPMIDIOUTCAPS2A NPMIDIOUTCAPS2 ;
typedef LPMIDIOUTCAPS2A LPMIDIOUTCAPS2 ;
typedef struct tagMIDIINCAPSA {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;CHAR szPname [32 ];DWORD dwSupport ;}MIDIINCAPSA ;
typedef struct tagMIDIINCAPSA {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;CHAR szPname [32 ];DWORD dwSupport ;}*PMIDIINCAPSA ;
typedef struct tagMIDIINCAPSA {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;CHAR szPname [32 ];DWORD dwSupport ;}*NPMIDIINCAPSA ;
typedef struct tagMIDIINCAPSA {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;CHAR szPname [32 ];DWORD dwSupport ;}*LPMIDIINCAPSA ;

typedef struct tagMIDIINCAPSW {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;WCHAR szPname [32 ];DWORD dwSupport ;}MIDIINCAPSW ;
typedef struct tagMIDIINCAPSW {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;WCHAR szPname [32 ];DWORD dwSupport ;}*PMIDIINCAPSW ;
typedef struct tagMIDIINCAPSW {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;WCHAR szPname [32 ];DWORD dwSupport ;}*NPMIDIINCAPSW ;
typedef struct tagMIDIINCAPSW {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;WCHAR szPname [32 ];DWORD dwSupport ;}*LPMIDIINCAPSW ;

typedef MIDIINCAPSA MIDIINCAPS ;
typedef PMIDIINCAPSA PMIDIINCAPS ;
typedef NPMIDIINCAPSA NPMIDIINCAPS ;
typedef LPMIDIINCAPSA LPMIDIINCAPS ;
typedef struct tagMIDIINCAPS2A {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;CHAR szPname [32 ];DWORD dwSupport ;GUID ManufacturerGuid ;GUID ProductGuid ;GUID NameGuid ;}MIDIINCAPS2A ;
typedef struct tagMIDIINCAPS2A {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;CHAR szPname [32 ];DWORD dwSupport ;GUID ManufacturerGuid ;GUID ProductGuid ;GUID NameGuid ;}*PMIDIINCAPS2A ;
typedef struct tagMIDIINCAPS2A {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;CHAR szPname [32 ];DWORD dwSupport ;GUID ManufacturerGuid ;GUID ProductGuid ;GUID NameGuid ;}*NPMIDIINCAPS2A ;
typedef struct tagMIDIINCAPS2A {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;CHAR szPname [32 ];DWORD dwSupport ;GUID ManufacturerGuid ;GUID ProductGuid ;GUID NameGuid ;}*LPMIDIINCAPS2A ;

typedef struct tagMIDIINCAPS2W {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;WCHAR szPname [32 ];DWORD dwSupport ;GUID ManufacturerGuid ;GUID ProductGuid ;GUID NameGuid ;}MIDIINCAPS2W ;
typedef struct tagMIDIINCAPS2W {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;WCHAR szPname [32 ];DWORD dwSupport ;GUID ManufacturerGuid ;GUID ProductGuid ;GUID NameGuid ;}*PMIDIINCAPS2W ;
typedef struct tagMIDIINCAPS2W {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;WCHAR szPname [32 ];DWORD dwSupport ;GUID ManufacturerGuid ;GUID ProductGuid ;GUID NameGuid ;}*NPMIDIINCAPS2W ;
typedef struct tagMIDIINCAPS2W {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;WCHAR szPname [32 ];DWORD dwSupport ;GUID ManufacturerGuid ;GUID ProductGuid ;GUID NameGuid ;}*LPMIDIINCAPS2W ;

typedef MIDIINCAPS2A MIDIINCAPS2 ;
typedef PMIDIINCAPS2A PMIDIINCAPS2 ;
typedef NPMIDIINCAPS2A NPMIDIINCAPS2 ;
typedef LPMIDIINCAPS2A LPMIDIINCAPS2 ;
typedef struct midihdr_tag {LPSTR lpData ;DWORD dwBufferLength ;DWORD dwBytesRecorded ;DWORD_PTR dwUser ;DWORD dwFlags ;struct midihdr_tag *lpNext ;DWORD_PTR reserved ;DWORD dwOffset ;DWORD_PTR dwReserved [8 ];}MIDIHDR ;
typedef struct midihdr_tag {LPSTR lpData ;DWORD dwBufferLength ;DWORD dwBytesRecorded ;DWORD_PTR dwUser ;DWORD dwFlags ;struct midihdr_tag *lpNext ;DWORD_PTR reserved ;DWORD dwOffset ;DWORD_PTR dwReserved [8 ];}*PMIDIHDR ;
typedef struct midihdr_tag {LPSTR lpData ;DWORD dwBufferLength ;DWORD dwBytesRecorded ;DWORD_PTR dwUser ;DWORD dwFlags ;struct midihdr_tag *lpNext ;DWORD_PTR reserved ;DWORD dwOffset ;DWORD_PTR dwReserved [8 ];}*NPMIDIHDR ;
typedef struct midihdr_tag {LPSTR lpData ;DWORD dwBufferLength ;DWORD dwBytesRecorded ;DWORD_PTR dwUser ;DWORD dwFlags ;struct midihdr_tag *lpNext ;DWORD_PTR reserved ;DWORD dwOffset ;DWORD_PTR dwReserved [8 ];}*LPMIDIHDR ;

typedef struct midievent_tag {DWORD dwDeltaTime ;DWORD dwStreamID ;DWORD dwEvent ;DWORD dwParms [1 ];}MIDIEVENT ;
typedef struct midistrmbuffver_tag {DWORD dwVersion ;DWORD dwMid ;DWORD dwOEMVersion ;}MIDISTRMBUFFVER ;
typedef struct midiproptimediv_tag {DWORD cbStruct ;DWORD dwTimeDiv ;}MIDIPROPTIMEDIV ;
typedef struct midiproptimediv_tag {DWORD cbStruct ;DWORD dwTimeDiv ;}*LPMIDIPROPTIMEDIV ;

typedef struct midiproptempo_tag {DWORD cbStruct ;DWORD dwTempo ;}MIDIPROPTEMPO ;
typedef struct midiproptempo_tag {DWORD cbStruct ;DWORD dwTempo ;}*LPMIDIPROPTEMPO ;

UINT midiOutGetNumDevs (void );
MMRESULT midiStreamOpen (LPHMIDISTRM phms ,LPUINT puDeviceID ,DWORD cMidi ,DWORD_PTR dwCallback ,DWORD_PTR dwInstance ,DWORD fdwOpen );
MMRESULT midiStreamClose (HMIDISTRM hms );
MMRESULT midiStreamProperty (HMIDISTRM hms ,LPBYTE lppropdata ,DWORD dwProperty );
MMRESULT midiStreamPosition (HMIDISTRM hms ,LPMMTIME lpmmt ,UINT cbmmt );
MMRESULT midiStreamOut (HMIDISTRM hms ,LPMIDIHDR pmh ,UINT cbmh );
MMRESULT midiStreamPause (HMIDISTRM hms );
MMRESULT midiStreamRestart (HMIDISTRM hms );
MMRESULT midiStreamStop (HMIDISTRM hms );
MMRESULT midiConnect (HMIDI hmi ,HMIDIOUT hmo ,LPVOID pReserved );
MMRESULT midiDisconnect (HMIDI hmi ,HMIDIOUT hmo ,LPVOID pReserved );
MMRESULT midiOutGetDevCapsA (UINT_PTR uDeviceID ,LPMIDIOUTCAPSA pmoc ,UINT cbmoc );
MMRESULT midiOutGetDevCapsW (UINT_PTR uDeviceID ,LPMIDIOUTCAPSW pmoc ,UINT cbmoc );
MMRESULT midiOutGetVolume (HMIDIOUT hmo ,LPDWORD pdwVolume );
MMRESULT midiOutSetVolume (HMIDIOUT hmo ,DWORD dwVolume );
MMRESULT midiOutGetErrorTextA (MMRESULT mmrError ,LPSTR pszText ,UINT cchText );
MMRESULT midiOutGetErrorTextW (MMRESULT mmrError ,LPWSTR pszText ,UINT cchText );
MMRESULT midiOutOpen (LPHMIDIOUT phmo ,UINT uDeviceID ,DWORD_PTR dwCallback ,DWORD_PTR dwInstance ,DWORD fdwOpen );
MMRESULT midiOutClose (HMIDIOUT hmo );
MMRESULT midiOutPrepareHeader (HMIDIOUT hmo ,LPMIDIHDR pmh ,UINT cbmh );
MMRESULT midiOutUnprepareHeader (HMIDIOUT hmo ,LPMIDIHDR pmh ,UINT cbmh );
MMRESULT midiOutShortMsg (HMIDIOUT hmo ,DWORD dwMsg );
MMRESULT midiOutLongMsg (HMIDIOUT hmo ,LPMIDIHDR pmh ,UINT cbmh );
MMRESULT midiOutReset (HMIDIOUT hmo );
MMRESULT midiOutCachePatches (HMIDIOUT hmo ,UINT uBank ,LPWORD pwpa ,UINT fuCache );
MMRESULT midiOutCacheDrumPatches (HMIDIOUT hmo ,UINT uPatch ,LPWORD pwkya ,UINT fuCache );
MMRESULT midiOutGetID (HMIDIOUT hmo ,LPUINT puDeviceID );
MMRESULT midiOutMessage (HMIDIOUT hmo ,UINT uMsg ,DWORD_PTR dw1 ,DWORD_PTR dw2 );
UINT midiInGetNumDevs (void );
MMRESULT midiInGetDevCapsA (UINT_PTR uDeviceID ,LPMIDIINCAPSA pmic ,UINT cbmic );
MMRESULT midiInGetDevCapsW (UINT_PTR uDeviceID ,LPMIDIINCAPSW pmic ,UINT cbmic );
MMRESULT midiInGetErrorTextA (MMRESULT mmrError ,LPSTR pszText ,UINT cchText );
MMRESULT midiInGetErrorTextW (MMRESULT mmrError ,LPWSTR pszText ,UINT cchText );
MMRESULT midiInOpen (LPHMIDIIN phmi ,UINT uDeviceID ,DWORD_PTR dwCallback ,DWORD_PTR dwInstance ,DWORD fdwOpen );
MMRESULT midiInClose (HMIDIIN hmi );
MMRESULT midiInPrepareHeader (HMIDIIN hmi ,LPMIDIHDR pmh ,UINT cbmh );
MMRESULT midiInUnprepareHeader (HMIDIIN hmi ,LPMIDIHDR pmh ,UINT cbmh );
MMRESULT midiInAddBuffer (HMIDIIN hmi ,LPMIDIHDR pmh ,UINT cbmh );
MMRESULT midiInStart (HMIDIIN hmi );
MMRESULT midiInStop (HMIDIIN hmi );
MMRESULT midiInReset (HMIDIIN hmi );
MMRESULT midiInGetID (HMIDIIN hmi ,LPUINT puDeviceID );
MMRESULT midiInMessage (HMIDIIN hmi ,UINT uMsg ,DWORD_PTR dw1 ,DWORD_PTR dw2 );
typedef struct tagAUXCAPSA {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;CHAR szPname [32 ];WORD wTechnology ;WORD wReserved1 ;DWORD dwSupport ;}AUXCAPSA ;
typedef struct tagAUXCAPSA {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;CHAR szPname [32 ];WORD wTechnology ;WORD wReserved1 ;DWORD dwSupport ;}*PAUXCAPSA ;
typedef struct tagAUXCAPSA {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;CHAR szPname [32 ];WORD wTechnology ;WORD wReserved1 ;DWORD dwSupport ;}*NPAUXCAPSA ;
typedef struct tagAUXCAPSA {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;CHAR szPname [32 ];WORD wTechnology ;WORD wReserved1 ;DWORD dwSupport ;}*LPAUXCAPSA ;

typedef struct tagAUXCAPSW {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;WCHAR szPname [32 ];WORD wTechnology ;WORD wReserved1 ;DWORD dwSupport ;}AUXCAPSW ;
typedef struct tagAUXCAPSW {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;WCHAR szPname [32 ];WORD wTechnology ;WORD wReserved1 ;DWORD dwSupport ;}*PAUXCAPSW ;
typedef struct tagAUXCAPSW {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;WCHAR szPname [32 ];WORD wTechnology ;WORD wReserved1 ;DWORD dwSupport ;}*NPAUXCAPSW ;
typedef struct tagAUXCAPSW {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;WCHAR szPname [32 ];WORD wTechnology ;WORD wReserved1 ;DWORD dwSupport ;}*LPAUXCAPSW ;

typedef AUXCAPSA AUXCAPS ;
typedef PAUXCAPSA PAUXCAPS ;
typedef NPAUXCAPSA NPAUXCAPS ;
typedef LPAUXCAPSA LPAUXCAPS ;
typedef struct tagAUXCAPS2A {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;CHAR szPname [32 ];WORD wTechnology ;WORD wReserved1 ;DWORD dwSupport ;GUID ManufacturerGuid ;GUID ProductGuid ;GUID NameGuid ;}AUXCAPS2A ;
typedef struct tagAUXCAPS2A {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;CHAR szPname [32 ];WORD wTechnology ;WORD wReserved1 ;DWORD dwSupport ;GUID ManufacturerGuid ;GUID ProductGuid ;GUID NameGuid ;}*PAUXCAPS2A ;
typedef struct tagAUXCAPS2A {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;CHAR szPname [32 ];WORD wTechnology ;WORD wReserved1 ;DWORD dwSupport ;GUID ManufacturerGuid ;GUID ProductGuid ;GUID NameGuid ;}*NPAUXCAPS2A ;
typedef struct tagAUXCAPS2A {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;CHAR szPname [32 ];WORD wTechnology ;WORD wReserved1 ;DWORD dwSupport ;GUID ManufacturerGuid ;GUID ProductGuid ;GUID NameGuid ;}*LPAUXCAPS2A ;

typedef struct tagAUXCAPS2W {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;WCHAR szPname [32 ];WORD wTechnology ;WORD wReserved1 ;DWORD dwSupport ;GUID ManufacturerGuid ;GUID ProductGuid ;GUID NameGuid ;}AUXCAPS2W ;
typedef struct tagAUXCAPS2W {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;WCHAR szPname [32 ];WORD wTechnology ;WORD wReserved1 ;DWORD dwSupport ;GUID ManufacturerGuid ;GUID ProductGuid ;GUID NameGuid ;}*PAUXCAPS2W ;
typedef struct tagAUXCAPS2W {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;WCHAR szPname [32 ];WORD wTechnology ;WORD wReserved1 ;DWORD dwSupport ;GUID ManufacturerGuid ;GUID ProductGuid ;GUID NameGuid ;}*NPAUXCAPS2W ;
typedef struct tagAUXCAPS2W {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;WCHAR szPname [32 ];WORD wTechnology ;WORD wReserved1 ;DWORD dwSupport ;GUID ManufacturerGuid ;GUID ProductGuid ;GUID NameGuid ;}*LPAUXCAPS2W ;

typedef AUXCAPS2A AUXCAPS2 ;
typedef PAUXCAPS2A PAUXCAPS2 ;
typedef NPAUXCAPS2A NPAUXCAPS2 ;
typedef LPAUXCAPS2A LPAUXCAPS2 ;
UINT auxGetNumDevs (void );
MMRESULT auxGetDevCapsA (UINT_PTR uDeviceID ,LPAUXCAPSA pac ,UINT cbac );
MMRESULT auxGetDevCapsW (UINT_PTR uDeviceID ,LPAUXCAPSW pac ,UINT cbac );
MMRESULT auxSetVolume (UINT uDeviceID ,DWORD dwVolume );
MMRESULT auxGetVolume (UINT uDeviceID ,LPDWORD pdwVolume );
MMRESULT auxOutMessage (UINT uDeviceID ,UINT uMsg ,DWORD_PTR dw1 ,DWORD_PTR dw2 );
struct HMIXEROBJ__ {int unused ;};
typedef struct HMIXEROBJ__ *HMIXEROBJ ;
typedef HMIXEROBJ *LPHMIXEROBJ ;
struct HMIXER__ {int unused ;};
typedef struct HMIXER__ *HMIXER ;
typedef HMIXER *LPHMIXER ;
UINT mixerGetNumDevs (void );
typedef struct tagMIXERCAPSA {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;CHAR szPname [32 ];DWORD fdwSupport ;DWORD cDestinations ;}MIXERCAPSA ;
typedef struct tagMIXERCAPSA {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;CHAR szPname [32 ];DWORD fdwSupport ;DWORD cDestinations ;}*PMIXERCAPSA ;
typedef struct tagMIXERCAPSA {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;CHAR szPname [32 ];DWORD fdwSupport ;DWORD cDestinations ;}*LPMIXERCAPSA ;

typedef struct tagMIXERCAPSW {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;WCHAR szPname [32 ];DWORD fdwSupport ;DWORD cDestinations ;}MIXERCAPSW ;
typedef struct tagMIXERCAPSW {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;WCHAR szPname [32 ];DWORD fdwSupport ;DWORD cDestinations ;}*PMIXERCAPSW ;
typedef struct tagMIXERCAPSW {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;WCHAR szPname [32 ];DWORD fdwSupport ;DWORD cDestinations ;}*LPMIXERCAPSW ;

typedef MIXERCAPSA MIXERCAPS ;
typedef PMIXERCAPSA PMIXERCAPS ;
typedef LPMIXERCAPSA LPMIXERCAPS ;
typedef struct tagMIXERCAPS2A {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;CHAR szPname [32 ];DWORD fdwSupport ;DWORD cDestinations ;GUID ManufacturerGuid ;GUID ProductGuid ;GUID NameGuid ;}MIXERCAPS2A ;
typedef struct tagMIXERCAPS2A {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;CHAR szPname [32 ];DWORD fdwSupport ;DWORD cDestinations ;GUID ManufacturerGuid ;GUID ProductGuid ;GUID NameGuid ;}*PMIXERCAPS2A ;
typedef struct tagMIXERCAPS2A {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;CHAR szPname [32 ];DWORD fdwSupport ;DWORD cDestinations ;GUID ManufacturerGuid ;GUID ProductGuid ;GUID NameGuid ;}*LPMIXERCAPS2A ;

typedef struct tagMIXERCAPS2W {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;WCHAR szPname [32 ];DWORD fdwSupport ;DWORD cDestinations ;GUID ManufacturerGuid ;GUID ProductGuid ;GUID NameGuid ;}MIXERCAPS2W ;
typedef struct tagMIXERCAPS2W {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;WCHAR szPname [32 ];DWORD fdwSupport ;DWORD cDestinations ;GUID ManufacturerGuid ;GUID ProductGuid ;GUID NameGuid ;}*PMIXERCAPS2W ;
typedef struct tagMIXERCAPS2W {WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;WCHAR szPname [32 ];DWORD fdwSupport ;DWORD cDestinations ;GUID ManufacturerGuid ;GUID ProductGuid ;GUID NameGuid ;}*LPMIXERCAPS2W ;

typedef MIXERCAPS2A MIXERCAPS2 ;
typedef PMIXERCAPS2A PMIXERCAPS2 ;
typedef LPMIXERCAPS2A LPMIXERCAPS2 ;
MMRESULT mixerGetDevCapsA (UINT_PTR uMxId ,LPMIXERCAPSA pmxcaps ,UINT cbmxcaps );
MMRESULT mixerGetDevCapsW (UINT_PTR uMxId ,LPMIXERCAPSW pmxcaps ,UINT cbmxcaps );
MMRESULT mixerOpen (LPHMIXER phmx ,UINT uMxId ,DWORD_PTR dwCallback ,DWORD_PTR dwInstance ,DWORD fdwOpen );
MMRESULT mixerClose (HMIXER hmx );
DWORD mixerMessage (HMIXER hmx ,UINT uMsg ,DWORD_PTR dwParam1 ,DWORD_PTR dwParam2 );
typedef struct tagMIXERLINEA {DWORD cbStruct ;DWORD dwDestination ;DWORD dwSource ;DWORD dwLineID ;DWORD fdwLine ;DWORD_PTR dwUser ;DWORD dwComponentType ;DWORD cChannels ;DWORD cConnections ;DWORD cControls ;CHAR szShortName [16 ];CHAR szName [64 ];struct {DWORD dwType ;DWORD dwDeviceID ;WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;CHAR szPname [32 ];}Target ;}MIXERLINEA ;
typedef struct tagMIXERLINEA {DWORD cbStruct ;DWORD dwDestination ;DWORD dwSource ;DWORD dwLineID ;DWORD fdwLine ;DWORD_PTR dwUser ;DWORD dwComponentType ;DWORD cChannels ;DWORD cConnections ;DWORD cControls ;CHAR szShortName [16 ];CHAR szName [64 ];struct {DWORD dwType ;DWORD dwDeviceID ;WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;CHAR szPname [32 ];}Target ;}*PMIXERLINEA ;
typedef struct tagMIXERLINEA {DWORD cbStruct ;DWORD dwDestination ;DWORD dwSource ;DWORD dwLineID ;DWORD fdwLine ;DWORD_PTR dwUser ;DWORD dwComponentType ;DWORD cChannels ;DWORD cConnections ;DWORD cControls ;CHAR szShortName [16 ];CHAR szName [64 ];struct {DWORD dwType ;DWORD dwDeviceID ;WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;CHAR szPname [32 ];}Target ;}*LPMIXERLINEA ;

typedef struct tagMIXERLINEW {DWORD cbStruct ;DWORD dwDestination ;DWORD dwSource ;DWORD dwLineID ;DWORD fdwLine ;DWORD_PTR dwUser ;DWORD dwComponentType ;DWORD cChannels ;DWORD cConnections ;DWORD cControls ;WCHAR szShortName [16 ];WCHAR szName [64 ];struct {DWORD dwType ;DWORD dwDeviceID ;WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;WCHAR szPname [32 ];}Target ;}MIXERLINEW ;
typedef struct tagMIXERLINEW {DWORD cbStruct ;DWORD dwDestination ;DWORD dwSource ;DWORD dwLineID ;DWORD fdwLine ;DWORD_PTR dwUser ;DWORD dwComponentType ;DWORD cChannels ;DWORD cConnections ;DWORD cControls ;WCHAR szShortName [16 ];WCHAR szName [64 ];struct {DWORD dwType ;DWORD dwDeviceID ;WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;WCHAR szPname [32 ];}Target ;}*PMIXERLINEW ;
typedef struct tagMIXERLINEW {DWORD cbStruct ;DWORD dwDestination ;DWORD dwSource ;DWORD dwLineID ;DWORD fdwLine ;DWORD_PTR dwUser ;DWORD dwComponentType ;DWORD cChannels ;DWORD cConnections ;DWORD cControls ;WCHAR szShortName [16 ];WCHAR szName [64 ];struct {DWORD dwType ;DWORD dwDeviceID ;WORD wMid ;WORD wPid ;MMVERSION vDriverVersion ;WCHAR szPname [32 ];}Target ;}*LPMIXERLINEW ;

typedef MIXERLINEA MIXERLINE ;
typedef PMIXERLINEA PMIXERLINE ;
typedef LPMIXERLINEA LPMIXERLINE ;
MMRESULT mixerGetLineInfoA (HMIXEROBJ hmxobj ,LPMIXERLINEA pmxl ,DWORD fdwInfo );
MMRESULT mixerGetLineInfoW (HMIXEROBJ hmxobj ,LPMIXERLINEW pmxl ,DWORD fdwInfo );
MMRESULT mixerGetID (HMIXEROBJ hmxobj ,UINT *puMxId ,DWORD fdwId );
typedef struct tagMIXERCONTROLA {DWORD cbStruct ;DWORD dwControlID ;DWORD dwControlType ;DWORD fdwControl ;DWORD cMultipleItems ;CHAR szShortName [16 ];CHAR szName [64 ];union {struct {LONG lMinimum ;LONG lMaximum ;};struct {DWORD dwMinimum ;DWORD dwMaximum ;};DWORD dwReserved [6 ];}Bounds ;union {DWORD cSteps ;DWORD cbCustomData ;DWORD dwReserved [6 ];}Metrics ;}MIXERCONTROLA ;
typedef struct tagMIXERCONTROLA {DWORD cbStruct ;DWORD dwControlID ;DWORD dwControlType ;DWORD fdwControl ;DWORD cMultipleItems ;CHAR szShortName [16 ];CHAR szName [64 ];union {struct {LONG lMinimum ;LONG lMaximum ;};struct {DWORD dwMinimum ;DWORD dwMaximum ;};DWORD dwReserved [6 ];}Bounds ;union {DWORD cSteps ;DWORD cbCustomData ;DWORD dwReserved [6 ];}Metrics ;}*PMIXERCONTROLA ;
typedef struct tagMIXERCONTROLA {DWORD cbStruct ;DWORD dwControlID ;DWORD dwControlType ;DWORD fdwControl ;DWORD cMultipleItems ;CHAR szShortName [16 ];CHAR szName [64 ];union {struct {LONG lMinimum ;LONG lMaximum ;};struct {DWORD dwMinimum ;DWORD dwMaximum ;};DWORD dwReserved [6 ];}Bounds ;union {DWORD cSteps ;DWORD cbCustomData ;DWORD dwReserved [6 ];}Metrics ;}*LPMIXERCONTROLA ;

typedef struct tagMIXERCONTROLW {DWORD cbStruct ;DWORD dwControlID ;DWORD dwControlType ;DWORD fdwControl ;DWORD cMultipleItems ;WCHAR szShortName [16 ];WCHAR szName [64 ];union {struct {LONG lMinimum ;LONG lMaximum ;};struct {DWORD dwMinimum ;DWORD dwMaximum ;};DWORD dwReserved [6 ];}Bounds ;union {DWORD cSteps ;DWORD cbCustomData ;DWORD dwReserved [6 ];}Metrics ;}MIXERCONTROLW ;
typedef struct tagMIXERCONTROLW {DWORD cbStruct ;DWORD dwControlID ;DWORD dwControlType ;DWORD fdwControl ;DWORD cMultipleItems ;WCHAR szShortName [16 ];WCHAR szName [64 ];union {struct {LONG lMinimum ;LONG lMaximum ;};struct {DWORD dwMinimum ;DWORD dwMaximum ;};DWORD dwReserved [6 ];}Bounds ;union {DWORD cSteps ;DWORD cbCustomData ;DWORD dwReserved [6 ];}Metrics ;}*PMIXERCONTROLW ;
typedef struct tagMIXERCONTROLW {DWORD cbStruct ;DWORD dwControlID ;DWORD dwControlType ;DWORD fdwControl ;DWORD cMultipleItems ;WCHAR szShortName [16 ];WCHAR szName [64 ];union {struct {LONG lMinimum ;LONG lMaximum ;};struct {DWORD dwMinimum ;DWORD dwMaximum ;};DWORD dwReserved [6 ];}Bounds ;union {DWORD cSteps ;DWORD cbCustomData ;DWORD dwReserved [6 ];}Metrics ;}*LPMIXERCONTROLW ;

typedef MIXERCONTROLA MIXERCONTROL ;
typedef PMIXERCONTROLA PMIXERCONTROL ;
typedef LPMIXERCONTROLA LPMIXERCONTROL ;
typedef struct tagMIXERLINECONTROLSA {DWORD cbStruct ;DWORD dwLineID ;union {DWORD dwControlID ;DWORD dwControlType ;};DWORD cControls ;DWORD cbmxctrl ;LPMIXERCONTROLA pamxctrl ;}MIXERLINECONTROLSA ;
typedef struct tagMIXERLINECONTROLSA {DWORD cbStruct ;DWORD dwLineID ;union {DWORD dwControlID ;DWORD dwControlType ;};DWORD cControls ;DWORD cbmxctrl ;LPMIXERCONTROLA pamxctrl ;}*PMIXERLINECONTROLSA ;
typedef struct tagMIXERLINECONTROLSA {DWORD cbStruct ;DWORD dwLineID ;union {DWORD dwControlID ;DWORD dwControlType ;};DWORD cControls ;DWORD cbmxctrl ;LPMIXERCONTROLA pamxctrl ;}*LPMIXERLINECONTROLSA ;

typedef struct tagMIXERLINECONTROLSW {DWORD cbStruct ;DWORD dwLineID ;union {DWORD dwControlID ;DWORD dwControlType ;};DWORD cControls ;DWORD cbmxctrl ;LPMIXERCONTROLW pamxctrl ;}MIXERLINECONTROLSW ;
typedef struct tagMIXERLINECONTROLSW {DWORD cbStruct ;DWORD dwLineID ;union {DWORD dwControlID ;DWORD dwControlType ;};DWORD cControls ;DWORD cbmxctrl ;LPMIXERCONTROLW pamxctrl ;}*PMIXERLINECONTROLSW ;
typedef struct tagMIXERLINECONTROLSW {DWORD cbStruct ;DWORD dwLineID ;union {DWORD dwControlID ;DWORD dwControlType ;};DWORD cControls ;DWORD cbmxctrl ;LPMIXERCONTROLW pamxctrl ;}*LPMIXERLINECONTROLSW ;

typedef MIXERLINECONTROLSA MIXERLINECONTROLS ;
typedef PMIXERLINECONTROLSA PMIXERLINECONTROLS ;
typedef LPMIXERLINECONTROLSA LPMIXERLINECONTROLS ;
MMRESULT mixerGetLineControlsA (HMIXEROBJ hmxobj ,LPMIXERLINECONTROLSA pmxlc ,DWORD fdwControls );
MMRESULT mixerGetLineControlsW (HMIXEROBJ hmxobj ,LPMIXERLINECONTROLSW pmxlc ,DWORD fdwControls );
typedef struct tMIXERCONTROLDETAILS {DWORD cbStruct ;DWORD dwControlID ;DWORD cChannels ;union {HWND hwndOwner ;DWORD cMultipleItems ;};DWORD cbDetails ;LPVOID paDetails ;}MIXERCONTROLDETAILS ;
typedef struct tMIXERCONTROLDETAILS {DWORD cbStruct ;DWORD dwControlID ;DWORD cChannels ;union {HWND hwndOwner ;DWORD cMultipleItems ;};DWORD cbDetails ;LPVOID paDetails ;}*PMIXERCONTROLDETAILS ;
typedef struct tMIXERCONTROLDETAILS {DWORD cbStruct ;DWORD dwControlID ;DWORD cChannels ;union {HWND hwndOwner ;DWORD cMultipleItems ;};DWORD cbDetails ;LPVOID paDetails ;}*LPMIXERCONTROLDETAILS ;

typedef struct tagMIXERCONTROLDETAILS_LISTTEXTA {DWORD dwParam1 ;DWORD dwParam2 ;CHAR szName [64 ];}MIXERCONTROLDETAILS_LISTTEXTA ;
typedef struct tagMIXERCONTROLDETAILS_LISTTEXTA {DWORD dwParam1 ;DWORD dwParam2 ;CHAR szName [64 ];}*PMIXERCONTROLDETAILS_LISTTEXTA ;
typedef struct tagMIXERCONTROLDETAILS_LISTTEXTA {DWORD dwParam1 ;DWORD dwParam2 ;CHAR szName [64 ];}*LPMIXERCONTROLDETAILS_LISTTEXTA ;

typedef struct tagMIXERCONTROLDETAILS_LISTTEXTW {DWORD dwParam1 ;DWORD dwParam2 ;WCHAR szName [64 ];}MIXERCONTROLDETAILS_LISTTEXTW ;
typedef struct tagMIXERCONTROLDETAILS_LISTTEXTW {DWORD dwParam1 ;DWORD dwParam2 ;WCHAR szName [64 ];}*PMIXERCONTROLDETAILS_LISTTEXTW ;
typedef struct tagMIXERCONTROLDETAILS_LISTTEXTW {DWORD dwParam1 ;DWORD dwParam2 ;WCHAR szName [64 ];}*LPMIXERCONTROLDETAILS_LISTTEXTW ;

typedef MIXERCONTROLDETAILS_LISTTEXTA MIXERCONTROLDETAILS_LISTTEXT ;
typedef PMIXERCONTROLDETAILS_LISTTEXTA PMIXERCONTROLDETAILS_LISTTEXT ;
typedef LPMIXERCONTROLDETAILS_LISTTEXTA LPMIXERCONTROLDETAILS_LISTTEXT ;
typedef struct tMIXERCONTROLDETAILS_BOOLEAN {LONG fValue ;}MIXERCONTROLDETAILS_BOOLEAN ;
typedef struct tMIXERCONTROLDETAILS_BOOLEAN {LONG fValue ;}*PMIXERCONTROLDETAILS_BOOLEAN ;
typedef struct tMIXERCONTROLDETAILS_BOOLEAN {LONG fValue ;}*LPMIXERCONTROLDETAILS_BOOLEAN ;

typedef struct tMIXERCONTROLDETAILS_SIGNED {LONG lValue ;}MIXERCONTROLDETAILS_SIGNED ;
typedef struct tMIXERCONTROLDETAILS_SIGNED {LONG lValue ;}*PMIXERCONTROLDETAILS_SIGNED ;
typedef struct tMIXERCONTROLDETAILS_SIGNED {LONG lValue ;}*LPMIXERCONTROLDETAILS_SIGNED ;

typedef struct tMIXERCONTROLDETAILS_UNSIGNED {DWORD dwValue ;}MIXERCONTROLDETAILS_UNSIGNED ;
typedef struct tMIXERCONTROLDETAILS_UNSIGNED {DWORD dwValue ;}*PMIXERCONTROLDETAILS_UNSIGNED ;
typedef struct tMIXERCONTROLDETAILS_UNSIGNED {DWORD dwValue ;}*LPMIXERCONTROLDETAILS_UNSIGNED ;

MMRESULT mixerGetControlDetailsA (HMIXEROBJ hmxobj ,LPMIXERCONTROLDETAILS pmxcd ,DWORD fdwDetails );
MMRESULT mixerGetControlDetailsW (HMIXEROBJ hmxobj ,LPMIXERCONTROLDETAILS pmxcd ,DWORD fdwDetails );
MMRESULT mixerSetControlDetails (HMIXEROBJ hmxobj ,LPMIXERCONTROLDETAILS pmxcd ,DWORD fdwDetails );
typedef void (TIMECALLBACK )(UINT uTimerID ,UINT uMsg ,DWORD_PTR dwUser ,DWORD_PTR dw1 ,DWORD_PTR dw2 );
typedef TIMECALLBACK *LPTIMECALLBACK ;
typedef struct timecaps_tag {UINT wPeriodMin ;UINT wPeriodMax ;}TIMECAPS ;
typedef struct timecaps_tag {UINT wPeriodMin ;UINT wPeriodMax ;}*PTIMECAPS ;
typedef struct timecaps_tag {UINT wPeriodMin ;UINT wPeriodMax ;}*NPTIMECAPS ;
typedef struct timecaps_tag {UINT wPeriodMin ;UINT wPeriodMax ;}*LPTIMECAPS ;

MMRESULT timeGetSystemTime (LPMMTIME pmmt ,UINT cbmmt );
DWORD timeGetTime (void );
MMRESULT timeSetEvent (UINT uDelay ,UINT uResolution ,LPTIMECALLBACK fptc ,DWORD_PTR dwUser ,UINT fuEvent );
MMRESULT timeKillEvent (UINT uTimerID );
MMRESULT timeGetDevCaps (LPTIMECAPS ptc ,UINT cbtc );
MMRESULT timeBeginPeriod (UINT uPeriod );
MMRESULT timeEndPeriod (UINT uPeriod );
typedef struct tagJOYCAPSA {WORD wMid ;WORD wPid ;CHAR szPname [32 ];UINT wXmin ;UINT wXmax ;UINT wYmin ;UINT wYmax ;UINT wZmin ;UINT wZmax ;UINT wNumButtons ;UINT wPeriodMin ;UINT wPeriodMax ;UINT wRmin ;UINT wRmax ;UINT wUmin ;UINT wUmax ;UINT wVmin ;UINT wVmax ;UINT wCaps ;UINT wMaxAxes ;UINT wNumAxes ;UINT wMaxButtons ;CHAR szRegKey [32 ];CHAR szOEMVxD [260 ];}JOYCAPSA ;
typedef struct tagJOYCAPSA {WORD wMid ;WORD wPid ;CHAR szPname [32 ];UINT wXmin ;UINT wXmax ;UINT wYmin ;UINT wYmax ;UINT wZmin ;UINT wZmax ;UINT wNumButtons ;UINT wPeriodMin ;UINT wPeriodMax ;UINT wRmin ;UINT wRmax ;UINT wUmin ;UINT wUmax ;UINT wVmin ;UINT wVmax ;UINT wCaps ;UINT wMaxAxes ;UINT wNumAxes ;UINT wMaxButtons ;CHAR szRegKey [32 ];CHAR szOEMVxD [260 ];}*PJOYCAPSA ;
typedef struct tagJOYCAPSA {WORD wMid ;WORD wPid ;CHAR szPname [32 ];UINT wXmin ;UINT wXmax ;UINT wYmin ;UINT wYmax ;UINT wZmin ;UINT wZmax ;UINT wNumButtons ;UINT wPeriodMin ;UINT wPeriodMax ;UINT wRmin ;UINT wRmax ;UINT wUmin ;UINT wUmax ;UINT wVmin ;UINT wVmax ;UINT wCaps ;UINT wMaxAxes ;UINT wNumAxes ;UINT wMaxButtons ;CHAR szRegKey [32 ];CHAR szOEMVxD [260 ];}*NPJOYCAPSA ;
typedef struct tagJOYCAPSA {WORD wMid ;WORD wPid ;CHAR szPname [32 ];UINT wXmin ;UINT wXmax ;UINT wYmin ;UINT wYmax ;UINT wZmin ;UINT wZmax ;UINT wNumButtons ;UINT wPeriodMin ;UINT wPeriodMax ;UINT wRmin ;UINT wRmax ;UINT wUmin ;UINT wUmax ;UINT wVmin ;UINT wVmax ;UINT wCaps ;UINT wMaxAxes ;UINT wNumAxes ;UINT wMaxButtons ;CHAR szRegKey [32 ];CHAR szOEMVxD [260 ];}*LPJOYCAPSA ;

typedef struct tagJOYCAPSW {WORD wMid ;WORD wPid ;WCHAR szPname [32 ];UINT wXmin ;UINT wXmax ;UINT wYmin ;UINT wYmax ;UINT wZmin ;UINT wZmax ;UINT wNumButtons ;UINT wPeriodMin ;UINT wPeriodMax ;UINT wRmin ;UINT wRmax ;UINT wUmin ;UINT wUmax ;UINT wVmin ;UINT wVmax ;UINT wCaps ;UINT wMaxAxes ;UINT wNumAxes ;UINT wMaxButtons ;WCHAR szRegKey [32 ];WCHAR szOEMVxD [260 ];}JOYCAPSW ;
typedef struct tagJOYCAPSW {WORD wMid ;WORD wPid ;WCHAR szPname [32 ];UINT wXmin ;UINT wXmax ;UINT wYmin ;UINT wYmax ;UINT wZmin ;UINT wZmax ;UINT wNumButtons ;UINT wPeriodMin ;UINT wPeriodMax ;UINT wRmin ;UINT wRmax ;UINT wUmin ;UINT wUmax ;UINT wVmin ;UINT wVmax ;UINT wCaps ;UINT wMaxAxes ;UINT wNumAxes ;UINT wMaxButtons ;WCHAR szRegKey [32 ];WCHAR szOEMVxD [260 ];}*PJOYCAPSW ;
typedef struct tagJOYCAPSW {WORD wMid ;WORD wPid ;WCHAR szPname [32 ];UINT wXmin ;UINT wXmax ;UINT wYmin ;UINT wYmax ;UINT wZmin ;UINT wZmax ;UINT wNumButtons ;UINT wPeriodMin ;UINT wPeriodMax ;UINT wRmin ;UINT wRmax ;UINT wUmin ;UINT wUmax ;UINT wVmin ;UINT wVmax ;UINT wCaps ;UINT wMaxAxes ;UINT wNumAxes ;UINT wMaxButtons ;WCHAR szRegKey [32 ];WCHAR szOEMVxD [260 ];}*NPJOYCAPSW ;
typedef struct tagJOYCAPSW {WORD wMid ;WORD wPid ;WCHAR szPname [32 ];UINT wXmin ;UINT wXmax ;UINT wYmin ;UINT wYmax ;UINT wZmin ;UINT wZmax ;UINT wNumButtons ;UINT wPeriodMin ;UINT wPeriodMax ;UINT wRmin ;UINT wRmax ;UINT wUmin ;UINT wUmax ;UINT wVmin ;UINT wVmax ;UINT wCaps ;UINT wMaxAxes ;UINT wNumAxes ;UINT wMaxButtons ;WCHAR szRegKey [32 ];WCHAR szOEMVxD [260 ];}*LPJOYCAPSW ;

typedef JOYCAPSA JOYCAPS ;
typedef PJOYCAPSA PJOYCAPS ;
typedef NPJOYCAPSA NPJOYCAPS ;
typedef LPJOYCAPSA LPJOYCAPS ;
typedef struct tagJOYCAPS2A {WORD wMid ;WORD wPid ;CHAR szPname [32 ];UINT wXmin ;UINT wXmax ;UINT wYmin ;UINT wYmax ;UINT wZmin ;UINT wZmax ;UINT wNumButtons ;UINT wPeriodMin ;UINT wPeriodMax ;UINT wRmin ;UINT wRmax ;UINT wUmin ;UINT wUmax ;UINT wVmin ;UINT wVmax ;UINT wCaps ;UINT wMaxAxes ;UINT wNumAxes ;UINT wMaxButtons ;CHAR szRegKey [32 ];CHAR szOEMVxD [260 ];GUID ManufacturerGuid ;GUID ProductGuid ;GUID NameGuid ;}JOYCAPS2A ;
typedef struct tagJOYCAPS2A {WORD wMid ;WORD wPid ;CHAR szPname [32 ];UINT wXmin ;UINT wXmax ;UINT wYmin ;UINT wYmax ;UINT wZmin ;UINT wZmax ;UINT wNumButtons ;UINT wPeriodMin ;UINT wPeriodMax ;UINT wRmin ;UINT wRmax ;UINT wUmin ;UINT wUmax ;UINT wVmin ;UINT wVmax ;UINT wCaps ;UINT wMaxAxes ;UINT wNumAxes ;UINT wMaxButtons ;CHAR szRegKey [32 ];CHAR szOEMVxD [260 ];GUID ManufacturerGuid ;GUID ProductGuid ;GUID NameGuid ;}*PJOYCAPS2A ;
typedef struct tagJOYCAPS2A {WORD wMid ;WORD wPid ;CHAR szPname [32 ];UINT wXmin ;UINT wXmax ;UINT wYmin ;UINT wYmax ;UINT wZmin ;UINT wZmax ;UINT wNumButtons ;UINT wPeriodMin ;UINT wPeriodMax ;UINT wRmin ;UINT wRmax ;UINT wUmin ;UINT wUmax ;UINT wVmin ;UINT wVmax ;UINT wCaps ;UINT wMaxAxes ;UINT wNumAxes ;UINT wMaxButtons ;CHAR szRegKey [32 ];CHAR szOEMVxD [260 ];GUID ManufacturerGuid ;GUID ProductGuid ;GUID NameGuid ;}*NPJOYCAPS2A ;
typedef struct tagJOYCAPS2A {WORD wMid ;WORD wPid ;CHAR szPname [32 ];UINT wXmin ;UINT wXmax ;UINT wYmin ;UINT wYmax ;UINT wZmin ;UINT wZmax ;UINT wNumButtons ;UINT wPeriodMin ;UINT wPeriodMax ;UINT wRmin ;UINT wRmax ;UINT wUmin ;UINT wUmax ;UINT wVmin ;UINT wVmax ;UINT wCaps ;UINT wMaxAxes ;UINT wNumAxes ;UINT wMaxButtons ;CHAR szRegKey [32 ];CHAR szOEMVxD [260 ];GUID ManufacturerGuid ;GUID ProductGuid ;GUID NameGuid ;}*LPJOYCAPS2A ;

typedef struct tagJOYCAPS2W {WORD wMid ;WORD wPid ;WCHAR szPname [32 ];UINT wXmin ;UINT wXmax ;UINT wYmin ;UINT wYmax ;UINT wZmin ;UINT wZmax ;UINT wNumButtons ;UINT wPeriodMin ;UINT wPeriodMax ;UINT wRmin ;UINT wRmax ;UINT wUmin ;UINT wUmax ;UINT wVmin ;UINT wVmax ;UINT wCaps ;UINT wMaxAxes ;UINT wNumAxes ;UINT wMaxButtons ;WCHAR szRegKey [32 ];WCHAR szOEMVxD [260 ];GUID ManufacturerGuid ;GUID ProductGuid ;GUID NameGuid ;}JOYCAPS2W ;
typedef struct tagJOYCAPS2W {WORD wMid ;WORD wPid ;WCHAR szPname [32 ];UINT wXmin ;UINT wXmax ;UINT wYmin ;UINT wYmax ;UINT wZmin ;UINT wZmax ;UINT wNumButtons ;UINT wPeriodMin ;UINT wPeriodMax ;UINT wRmin ;UINT wRmax ;UINT wUmin ;UINT wUmax ;UINT wVmin ;UINT wVmax ;UINT wCaps ;UINT wMaxAxes ;UINT wNumAxes ;UINT wMaxButtons ;WCHAR szRegKey [32 ];WCHAR szOEMVxD [260 ];GUID ManufacturerGuid ;GUID ProductGuid ;GUID NameGuid ;}*PJOYCAPS2W ;
typedef struct tagJOYCAPS2W {WORD wMid ;WORD wPid ;WCHAR szPname [32 ];UINT wXmin ;UINT wXmax ;UINT wYmin ;UINT wYmax ;UINT wZmin ;UINT wZmax ;UINT wNumButtons ;UINT wPeriodMin ;UINT wPeriodMax ;UINT wRmin ;UINT wRmax ;UINT wUmin ;UINT wUmax ;UINT wVmin ;UINT wVmax ;UINT wCaps ;UINT wMaxAxes ;UINT wNumAxes ;UINT wMaxButtons ;WCHAR szRegKey [32 ];WCHAR szOEMVxD [260 ];GUID ManufacturerGuid ;GUID ProductGuid ;GUID NameGuid ;}*NPJOYCAPS2W ;
typedef struct tagJOYCAPS2W {WORD wMid ;WORD wPid ;WCHAR szPname [32 ];UINT wXmin ;UINT wXmax ;UINT wYmin ;UINT wYmax ;UINT wZmin ;UINT wZmax ;UINT wNumButtons ;UINT wPeriodMin ;UINT wPeriodMax ;UINT wRmin ;UINT wRmax ;UINT wUmin ;UINT wUmax ;UINT wVmin ;UINT wVmax ;UINT wCaps ;UINT wMaxAxes ;UINT wNumAxes ;UINT wMaxButtons ;WCHAR szRegKey [32 ];WCHAR szOEMVxD [260 ];GUID ManufacturerGuid ;GUID ProductGuid ;GUID NameGuid ;}*LPJOYCAPS2W ;

typedef JOYCAPS2A JOYCAPS2 ;
typedef PJOYCAPS2A PJOYCAPS2 ;
typedef NPJOYCAPS2A NPJOYCAPS2 ;
typedef LPJOYCAPS2A LPJOYCAPS2 ;
typedef struct joyinfo_tag {UINT wXpos ;UINT wYpos ;UINT wZpos ;UINT wButtons ;}JOYINFO ;
typedef struct joyinfo_tag {UINT wXpos ;UINT wYpos ;UINT wZpos ;UINT wButtons ;}*PJOYINFO ;
typedef struct joyinfo_tag {UINT wXpos ;UINT wYpos ;UINT wZpos ;UINT wButtons ;}*NPJOYINFO ;
typedef struct joyinfo_tag {UINT wXpos ;UINT wYpos ;UINT wZpos ;UINT wButtons ;}*LPJOYINFO ;

typedef struct joyinfoex_tag {DWORD dwSize ;DWORD dwFlags ;DWORD dwXpos ;DWORD dwYpos ;DWORD dwZpos ;DWORD dwRpos ;DWORD dwUpos ;DWORD dwVpos ;DWORD dwButtons ;DWORD dwButtonNumber ;DWORD dwPOV ;DWORD dwReserved1 ;DWORD dwReserved2 ;}JOYINFOEX ;
typedef struct joyinfoex_tag {DWORD dwSize ;DWORD dwFlags ;DWORD dwXpos ;DWORD dwYpos ;DWORD dwZpos ;DWORD dwRpos ;DWORD dwUpos ;DWORD dwVpos ;DWORD dwButtons ;DWORD dwButtonNumber ;DWORD dwPOV ;DWORD dwReserved1 ;DWORD dwReserved2 ;}*PJOYINFOEX ;
typedef struct joyinfoex_tag {DWORD dwSize ;DWORD dwFlags ;DWORD dwXpos ;DWORD dwYpos ;DWORD dwZpos ;DWORD dwRpos ;DWORD dwUpos ;DWORD dwVpos ;DWORD dwButtons ;DWORD dwButtonNumber ;DWORD dwPOV ;DWORD dwReserved1 ;DWORD dwReserved2 ;}*NPJOYINFOEX ;
typedef struct joyinfoex_tag {DWORD dwSize ;DWORD dwFlags ;DWORD dwXpos ;DWORD dwYpos ;DWORD dwZpos ;DWORD dwRpos ;DWORD dwUpos ;DWORD dwVpos ;DWORD dwButtons ;DWORD dwButtonNumber ;DWORD dwPOV ;DWORD dwReserved1 ;DWORD dwReserved2 ;}*LPJOYINFOEX ;

UINT joyGetNumDevs (void );
MMRESULT joyGetDevCapsA (UINT_PTR uJoyID ,LPJOYCAPSA pjc ,UINT cbjc );
MMRESULT joyGetDevCapsW (UINT_PTR uJoyID ,LPJOYCAPSW pjc ,UINT cbjc );
MMRESULT joyGetPos (UINT uJoyID ,LPJOYINFO pji );
MMRESULT joyGetPosEx (UINT uJoyID ,LPJOYINFOEX pji );
MMRESULT joyGetThreshold (UINT uJoyID ,LPUINT puThreshold );
MMRESULT joyReleaseCapture (UINT uJoyID );
MMRESULT joySetCapture (HWND hwnd ,UINT uJoyID ,UINT uPeriod ,WINBOOL fChanged );
MMRESULT joySetThreshold (UINT uJoyID ,UINT uThreshold );
typedef DWORD FOURCC ;
typedef char *HPSTR ;
struct HMMIO__ {int unused ;};
typedef struct HMMIO__ *HMMIO ;
typedef LRESULT (MMIOPROC )(LPSTR lpmmioinfo ,UINT uMsg ,LPARAM lParam1 ,LPARAM lParam2 );
typedef MMIOPROC *LPMMIOPROC ;
typedef struct _MMIOINFO {DWORD dwFlags ;FOURCC fccIOProc ;LPMMIOPROC pIOProc ;UINT wErrorRet ;HTASK htask ;LONG cchBuffer ;HPSTR pchBuffer ;HPSTR pchNext ;HPSTR pchEndRead ;HPSTR pchEndWrite ;LONG lBufOffset ;LONG lDiskOffset ;DWORD adwInfo [3 ];DWORD dwReserved1 ;DWORD dwReserved2 ;HMMIO hmmio ;}MMIOINFO ;
typedef struct _MMIOINFO {DWORD dwFlags ;FOURCC fccIOProc ;LPMMIOPROC pIOProc ;UINT wErrorRet ;HTASK htask ;LONG cchBuffer ;HPSTR pchBuffer ;HPSTR pchNext ;HPSTR pchEndRead ;HPSTR pchEndWrite ;LONG lBufOffset ;LONG lDiskOffset ;DWORD adwInfo [3 ];DWORD dwReserved1 ;DWORD dwReserved2 ;HMMIO hmmio ;}*PMMIOINFO ;
typedef struct _MMIOINFO {DWORD dwFlags ;FOURCC fccIOProc ;LPMMIOPROC pIOProc ;UINT wErrorRet ;HTASK htask ;LONG cchBuffer ;HPSTR pchBuffer ;HPSTR pchNext ;HPSTR pchEndRead ;HPSTR pchEndWrite ;LONG lBufOffset ;LONG lDiskOffset ;DWORD adwInfo [3 ];DWORD dwReserved1 ;DWORD dwReserved2 ;HMMIO hmmio ;}*NPMMIOINFO ;
typedef struct _MMIOINFO {DWORD dwFlags ;FOURCC fccIOProc ;LPMMIOPROC pIOProc ;UINT wErrorRet ;HTASK htask ;LONG cchBuffer ;HPSTR pchBuffer ;HPSTR pchNext ;HPSTR pchEndRead ;HPSTR pchEndWrite ;LONG lBufOffset ;LONG lDiskOffset ;DWORD adwInfo [3 ];DWORD dwReserved1 ;DWORD dwReserved2 ;HMMIO hmmio ;}*LPMMIOINFO ;

typedef const MMIOINFO *LPCMMIOINFO ;
typedef struct _MMCKINFO {FOURCC ckid ;DWORD cksize ;FOURCC fccType ;DWORD dwDataOffset ;DWORD dwFlags ;}MMCKINFO ;
typedef struct _MMCKINFO {FOURCC ckid ;DWORD cksize ;FOURCC fccType ;DWORD dwDataOffset ;DWORD dwFlags ;}*PMMCKINFO ;
typedef struct _MMCKINFO {FOURCC ckid ;DWORD cksize ;FOURCC fccType ;DWORD dwDataOffset ;DWORD dwFlags ;}*NPMMCKINFO ;
typedef struct _MMCKINFO {FOURCC ckid ;DWORD cksize ;FOURCC fccType ;DWORD dwDataOffset ;DWORD dwFlags ;}*LPMMCKINFO ;

typedef const MMCKINFO *LPCMMCKINFO ;
FOURCC mmioStringToFOURCCA (LPCSTR sz ,UINT uFlags );
FOURCC mmioStringToFOURCCW (LPCWSTR sz ,UINT uFlags );
LPMMIOPROC mmioInstallIOProcA (FOURCC fccIOProc ,LPMMIOPROC pIOProc ,DWORD dwFlags );
LPMMIOPROC mmioInstallIOProcW (FOURCC fccIOProc ,LPMMIOPROC pIOProc ,DWORD dwFlags );
HMMIO mmioOpenA (LPSTR pszFileName ,LPMMIOINFO pmmioinfo ,DWORD fdwOpen );
HMMIO mmioOpenW (LPWSTR pszFileName ,LPMMIOINFO pmmioinfo ,DWORD fdwOpen );
MMRESULT mmioRenameA (LPCSTR pszFileName ,LPCSTR pszNewFileName ,LPCMMIOINFO pmmioinfo ,DWORD fdwRename );
MMRESULT mmioRenameW (LPCWSTR pszFileName ,LPCWSTR pszNewFileName ,LPCMMIOINFO pmmioinfo ,DWORD fdwRename );
MMRESULT mmioClose (HMMIO hmmio ,UINT fuClose );
LONG mmioRead (HMMIO hmmio ,HPSTR pch ,LONG cch );
LONG mmioWrite (HMMIO hmmio ,const char *pch ,LONG cch );
LONG mmioSeek (HMMIO hmmio ,LONG lOffset ,int iOrigin );
MMRESULT mmioGetInfo (HMMIO hmmio ,LPMMIOINFO pmmioinfo ,UINT fuInfo );
MMRESULT mmioSetInfo (HMMIO hmmio ,LPCMMIOINFO pmmioinfo ,UINT fuInfo );
MMRESULT mmioSetBuffer (HMMIO hmmio ,LPSTR pchBuffer ,LONG cchBuffer ,UINT fuBuffer );
MMRESULT mmioFlush (HMMIO hmmio ,UINT fuFlush );
MMRESULT mmioAdvance (HMMIO hmmio ,LPMMIOINFO pmmioinfo ,UINT fuAdvance );
LRESULT mmioSendMessage (HMMIO hmmio ,UINT uMsg ,LPARAM lParam1 ,LPARAM lParam2 );
MMRESULT mmioDescend (HMMIO hmmio ,LPMMCKINFO pmmcki ,const MMCKINFO *pmmckiParent ,UINT fuDescend );
MMRESULT mmioAscend (HMMIO hmmio ,LPMMCKINFO pmmcki ,UINT fuAscend );
MMRESULT mmioCreateChunk (HMMIO hmmio ,LPMMCKINFO pmmcki ,UINT fuCreate );
typedef DWORD MCIERROR ;
typedef UINT MCIDEVICEID ;
typedef UINT (*YIELDPROC )(MCIDEVICEID mciId ,DWORD dwYieldData );
MCIERROR mciSendCommandA (MCIDEVICEID mciId ,UINT uMsg ,DWORD_PTR dwParam1 ,DWORD_PTR dwParam2 );
MCIERROR mciSendCommandW (MCIDEVICEID mciId ,UINT uMsg ,DWORD_PTR dwParam1 ,DWORD_PTR dwParam2 );
MCIERROR mciSendStringA (LPCSTR lpstrCommand ,LPSTR lpstrReturnString ,UINT uReturnLength ,HWND hwndCallback );
MCIERROR mciSendStringW (LPCWSTR lpstrCommand ,LPWSTR lpstrReturnString ,UINT uReturnLength ,HWND hwndCallback );
MCIDEVICEID mciGetDeviceIDA (LPCSTR pszDevice );
MCIDEVICEID mciGetDeviceIDW (LPCWSTR pszDevice );
MCIDEVICEID mciGetDeviceIDFromElementIDA (DWORD dwElementID ,LPCSTR lpstrType );
MCIDEVICEID mciGetDeviceIDFromElementIDW (DWORD dwElementID ,LPCWSTR lpstrType );
WINBOOL mciGetErrorStringA (MCIERROR mcierr ,LPSTR pszText ,UINT cchText );
WINBOOL mciGetErrorStringW (MCIERROR mcierr ,LPWSTR pszText ,UINT cchText );
WINBOOL mciSetYieldProc (MCIDEVICEID mciId ,YIELDPROC fpYieldProc ,DWORD dwYieldData );
HTASK mciGetCreatorTask (MCIDEVICEID mciId );
YIELDPROC mciGetYieldProc (MCIDEVICEID mciId ,LPDWORD pdwYieldData );
typedef struct tagMCI_GENERIC_PARMS {DWORD_PTR dwCallback ;}MCI_GENERIC_PARMS ;
typedef struct tagMCI_GENERIC_PARMS {DWORD_PTR dwCallback ;}*PMCI_GENERIC_PARMS ;
typedef struct tagMCI_GENERIC_PARMS {DWORD_PTR dwCallback ;}*LPMCI_GENERIC_PARMS ;

typedef struct tagMCI_OPEN_PARMSA {DWORD_PTR dwCallback ;MCIDEVICEID wDeviceID ;LPCSTR lpstrDeviceType ;LPCSTR lpstrElementName ;LPCSTR lpstrAlias ;}MCI_OPEN_PARMSA ;
typedef struct tagMCI_OPEN_PARMSA {DWORD_PTR dwCallback ;MCIDEVICEID wDeviceID ;LPCSTR lpstrDeviceType ;LPCSTR lpstrElementName ;LPCSTR lpstrAlias ;}*PMCI_OPEN_PARMSA ;
typedef struct tagMCI_OPEN_PARMSA {DWORD_PTR dwCallback ;MCIDEVICEID wDeviceID ;LPCSTR lpstrDeviceType ;LPCSTR lpstrElementName ;LPCSTR lpstrAlias ;}*LPMCI_OPEN_PARMSA ;

typedef struct tagMCI_OPEN_PARMSW {DWORD_PTR dwCallback ;MCIDEVICEID wDeviceID ;LPCWSTR lpstrDeviceType ;LPCWSTR lpstrElementName ;LPCWSTR lpstrAlias ;}MCI_OPEN_PARMSW ;
typedef struct tagMCI_OPEN_PARMSW {DWORD_PTR dwCallback ;MCIDEVICEID wDeviceID ;LPCWSTR lpstrDeviceType ;LPCWSTR lpstrElementName ;LPCWSTR lpstrAlias ;}*PMCI_OPEN_PARMSW ;
typedef struct tagMCI_OPEN_PARMSW {DWORD_PTR dwCallback ;MCIDEVICEID wDeviceID ;LPCWSTR lpstrDeviceType ;LPCWSTR lpstrElementName ;LPCWSTR lpstrAlias ;}*LPMCI_OPEN_PARMSW ;

typedef MCI_OPEN_PARMSA MCI_OPEN_PARMS ;
typedef PMCI_OPEN_PARMSA PMCI_OPEN_PARMS ;
typedef LPMCI_OPEN_PARMSA LPMCI_OPEN_PARMS ;
typedef struct tagMCI_PLAY_PARMS {DWORD_PTR dwCallback ;DWORD dwFrom ;DWORD dwTo ;}MCI_PLAY_PARMS ;
typedef struct tagMCI_PLAY_PARMS {DWORD_PTR dwCallback ;DWORD dwFrom ;DWORD dwTo ;}*PMCI_PLAY_PARMS ;
typedef struct tagMCI_PLAY_PARMS {DWORD_PTR dwCallback ;DWORD dwFrom ;DWORD dwTo ;}*LPMCI_PLAY_PARMS ;

typedef struct tagMCI_SEEK_PARMS {DWORD_PTR dwCallback ;DWORD dwTo ;}MCI_SEEK_PARMS ;
typedef struct tagMCI_SEEK_PARMS {DWORD_PTR dwCallback ;DWORD dwTo ;}*PMCI_SEEK_PARMS ;
typedef struct tagMCI_SEEK_PARMS {DWORD_PTR dwCallback ;DWORD dwTo ;}*LPMCI_SEEK_PARMS ;

typedef struct tagMCI_STATUS_PARMS {DWORD_PTR dwCallback ;DWORD_PTR dwReturn ;DWORD dwItem ;DWORD dwTrack ;}MCI_STATUS_PARMS ;
typedef struct tagMCI_STATUS_PARMS {DWORD_PTR dwCallback ;DWORD_PTR dwReturn ;DWORD dwItem ;DWORD dwTrack ;}*PMCI_STATUS_PARMS ;
typedef struct tagMCI_STATUS_PARMS {DWORD_PTR dwCallback ;DWORD_PTR dwReturn ;DWORD dwItem ;DWORD dwTrack ;}*LPMCI_STATUS_PARMS ;

typedef struct tagMCI_INFO_PARMSA {DWORD_PTR dwCallback ;LPSTR lpstrReturn ;DWORD dwRetSize ;}MCI_INFO_PARMSA ;
typedef struct tagMCI_INFO_PARMSA {DWORD_PTR dwCallback ;LPSTR lpstrReturn ;DWORD dwRetSize ;}*LPMCI_INFO_PARMSA ;

typedef struct tagMCI_INFO_PARMSW {DWORD_PTR dwCallback ;LPWSTR lpstrReturn ;DWORD dwRetSize ;}MCI_INFO_PARMSW ;
typedef struct tagMCI_INFO_PARMSW {DWORD_PTR dwCallback ;LPWSTR lpstrReturn ;DWORD dwRetSize ;}*LPMCI_INFO_PARMSW ;

typedef MCI_INFO_PARMSA MCI_INFO_PARMS ;
typedef LPMCI_INFO_PARMSA LPMCI_INFO_PARMS ;
typedef struct tagMCI_GETDEVCAPS_PARMS {DWORD_PTR dwCallback ;DWORD dwReturn ;DWORD dwItem ;}MCI_GETDEVCAPS_PARMS ;
typedef struct tagMCI_GETDEVCAPS_PARMS {DWORD_PTR dwCallback ;DWORD dwReturn ;DWORD dwItem ;}*PMCI_GETDEVCAPS_PARMS ;
typedef struct tagMCI_GETDEVCAPS_PARMS {DWORD_PTR dwCallback ;DWORD dwReturn ;DWORD dwItem ;}*LPMCI_GETDEVCAPS_PARMS ;

typedef struct tagMCI_SYSINFO_PARMSA {DWORD_PTR dwCallback ;LPSTR lpstrReturn ;DWORD dwRetSize ;DWORD dwNumber ;UINT wDeviceType ;}MCI_SYSINFO_PARMSA ;
typedef struct tagMCI_SYSINFO_PARMSA {DWORD_PTR dwCallback ;LPSTR lpstrReturn ;DWORD dwRetSize ;DWORD dwNumber ;UINT wDeviceType ;}*PMCI_SYSINFO_PARMSA ;
typedef struct tagMCI_SYSINFO_PARMSA {DWORD_PTR dwCallback ;LPSTR lpstrReturn ;DWORD dwRetSize ;DWORD dwNumber ;UINT wDeviceType ;}*LPMCI_SYSINFO_PARMSA ;

typedef struct tagMCI_SYSINFO_PARMSW {DWORD_PTR dwCallback ;LPWSTR lpstrReturn ;DWORD dwRetSize ;DWORD dwNumber ;UINT wDeviceType ;}MCI_SYSINFO_PARMSW ;
typedef struct tagMCI_SYSINFO_PARMSW {DWORD_PTR dwCallback ;LPWSTR lpstrReturn ;DWORD dwRetSize ;DWORD dwNumber ;UINT wDeviceType ;}*PMCI_SYSINFO_PARMSW ;
typedef struct tagMCI_SYSINFO_PARMSW {DWORD_PTR dwCallback ;LPWSTR lpstrReturn ;DWORD dwRetSize ;DWORD dwNumber ;UINT wDeviceType ;}*LPMCI_SYSINFO_PARMSW ;

typedef MCI_SYSINFO_PARMSA MCI_SYSINFO_PARMS ;
typedef PMCI_SYSINFO_PARMSA PMCI_SYSINFO_PARMS ;
typedef LPMCI_SYSINFO_PARMSA LPMCI_SYSINFO_PARMS ;
typedef struct tagMCI_SET_PARMS {DWORD_PTR dwCallback ;DWORD dwTimeFormat ;DWORD dwAudio ;}MCI_SET_PARMS ;
typedef struct tagMCI_SET_PARMS {DWORD_PTR dwCallback ;DWORD dwTimeFormat ;DWORD dwAudio ;}*PMCI_SET_PARMS ;
typedef struct tagMCI_SET_PARMS {DWORD_PTR dwCallback ;DWORD dwTimeFormat ;DWORD dwAudio ;}*LPMCI_SET_PARMS ;

typedef struct tagMCI_BREAK_PARMS {DWORD_PTR dwCallback ;int nVirtKey ;HWND hwndBreak ;}MCI_BREAK_PARMS ;
typedef struct tagMCI_BREAK_PARMS {DWORD_PTR dwCallback ;int nVirtKey ;HWND hwndBreak ;}*PMCI_BREAK_PARMS ;
typedef struct tagMCI_BREAK_PARMS {DWORD_PTR dwCallback ;int nVirtKey ;HWND hwndBreak ;}*LPMCI_BREAK_PARMS ;

typedef struct tagMCI_SAVE_PARMSA {DWORD_PTR dwCallback ;LPCSTR lpfilename ;}MCI_SAVE_PARMSA ;
typedef struct tagMCI_SAVE_PARMSA {DWORD_PTR dwCallback ;LPCSTR lpfilename ;}*PMCI_SAVE_PARMSA ;
typedef struct tagMCI_SAVE_PARMSA {DWORD_PTR dwCallback ;LPCSTR lpfilename ;}*LPMCI_SAVE_PARMSA ;

typedef struct tagMCI_SAVE_PARMSW {DWORD_PTR dwCallback ;LPCWSTR lpfilename ;}MCI_SAVE_PARMSW ;
typedef struct tagMCI_SAVE_PARMSW {DWORD_PTR dwCallback ;LPCWSTR lpfilename ;}*PMCI_SAVE_PARMSW ;
typedef struct tagMCI_SAVE_PARMSW {DWORD_PTR dwCallback ;LPCWSTR lpfilename ;}*LPMCI_SAVE_PARMSW ;

typedef MCI_SAVE_PARMSA MCI_SAVE_PARMS ;
typedef PMCI_SAVE_PARMSA PMCI_SAVE_PARMS ;
typedef LPMCI_SAVE_PARMSA LPMCI_SAVE_PARMS ;
typedef struct tagMCI_LOAD_PARMSA {DWORD_PTR dwCallback ;LPCSTR lpfilename ;}MCI_LOAD_PARMSA ;
typedef struct tagMCI_LOAD_PARMSA {DWORD_PTR dwCallback ;LPCSTR lpfilename ;}*PMCI_LOAD_PARMSA ;
typedef struct tagMCI_LOAD_PARMSA {DWORD_PTR dwCallback ;LPCSTR lpfilename ;}*LPMCI_LOAD_PARMSA ;

typedef struct tagMCI_LOAD_PARMSW {DWORD_PTR dwCallback ;LPCWSTR lpfilename ;}MCI_LOAD_PARMSW ;
typedef struct tagMCI_LOAD_PARMSW {DWORD_PTR dwCallback ;LPCWSTR lpfilename ;}*PMCI_LOAD_PARMSW ;
typedef struct tagMCI_LOAD_PARMSW {DWORD_PTR dwCallback ;LPCWSTR lpfilename ;}*LPMCI_LOAD_PARMSW ;

typedef MCI_LOAD_PARMSA MCI_LOAD_PARMS ;
typedef PMCI_LOAD_PARMSA PMCI_LOAD_PARMS ;
typedef LPMCI_LOAD_PARMSA LPMCI_LOAD_PARMS ;
typedef struct tagMCI_RECORD_PARMS {DWORD_PTR dwCallback ;DWORD dwFrom ;DWORD dwTo ;}MCI_RECORD_PARMS ;
typedef struct tagMCI_RECORD_PARMS {DWORD_PTR dwCallback ;DWORD dwFrom ;DWORD dwTo ;}*LPMCI_RECORD_PARMS ;

typedef struct tagMCI_VD_PLAY_PARMS {DWORD_PTR dwCallback ;DWORD dwFrom ;DWORD dwTo ;DWORD dwSpeed ;}MCI_VD_PLAY_PARMS ;
typedef struct tagMCI_VD_PLAY_PARMS {DWORD_PTR dwCallback ;DWORD dwFrom ;DWORD dwTo ;DWORD dwSpeed ;}*PMCI_VD_PLAY_PARMS ;
typedef struct tagMCI_VD_PLAY_PARMS {DWORD_PTR dwCallback ;DWORD dwFrom ;DWORD dwTo ;DWORD dwSpeed ;}*LPMCI_VD_PLAY_PARMS ;

typedef struct tagMCI_VD_STEP_PARMS {DWORD_PTR dwCallback ;DWORD dwFrames ;}MCI_VD_STEP_PARMS ;
typedef struct tagMCI_VD_STEP_PARMS {DWORD_PTR dwCallback ;DWORD dwFrames ;}*PMCI_VD_STEP_PARMS ;
typedef struct tagMCI_VD_STEP_PARMS {DWORD_PTR dwCallback ;DWORD dwFrames ;}*LPMCI_VD_STEP_PARMS ;

typedef struct tagMCI_VD_ESCAPE_PARMSA {DWORD_PTR dwCallback ;LPCSTR lpstrCommand ;}MCI_VD_ESCAPE_PARMSA ;
typedef struct tagMCI_VD_ESCAPE_PARMSA {DWORD_PTR dwCallback ;LPCSTR lpstrCommand ;}*PMCI_VD_ESCAPE_PARMSA ;
typedef struct tagMCI_VD_ESCAPE_PARMSA {DWORD_PTR dwCallback ;LPCSTR lpstrCommand ;}*LPMCI_VD_ESCAPE_PARMSA ;

typedef struct tagMCI_VD_ESCAPE_PARMSW {DWORD_PTR dwCallback ;LPCWSTR lpstrCommand ;}MCI_VD_ESCAPE_PARMSW ;
typedef struct tagMCI_VD_ESCAPE_PARMSW {DWORD_PTR dwCallback ;LPCWSTR lpstrCommand ;}*PMCI_VD_ESCAPE_PARMSW ;
typedef struct tagMCI_VD_ESCAPE_PARMSW {DWORD_PTR dwCallback ;LPCWSTR lpstrCommand ;}*LPMCI_VD_ESCAPE_PARMSW ;

typedef MCI_VD_ESCAPE_PARMSA MCI_VD_ESCAPE_PARMS ;
typedef PMCI_VD_ESCAPE_PARMSA PMCI_VD_ESCAPE_PARMS ;
typedef LPMCI_VD_ESCAPE_PARMSA LPMCI_VD_ESCAPE_PARMS ;
typedef struct tagMCI_WAVE_OPEN_PARMSA {DWORD_PTR dwCallback ;MCIDEVICEID wDeviceID ;LPCSTR lpstrDeviceType ;LPCSTR lpstrElementName ;LPCSTR lpstrAlias ;DWORD dwBufferSeconds ;}MCI_WAVE_OPEN_PARMSA ;
typedef struct tagMCI_WAVE_OPEN_PARMSA {DWORD_PTR dwCallback ;MCIDEVICEID wDeviceID ;LPCSTR lpstrDeviceType ;LPCSTR lpstrElementName ;LPCSTR lpstrAlias ;DWORD dwBufferSeconds ;}*PMCI_WAVE_OPEN_PARMSA ;
typedef struct tagMCI_WAVE_OPEN_PARMSA {DWORD_PTR dwCallback ;MCIDEVICEID wDeviceID ;LPCSTR lpstrDeviceType ;LPCSTR lpstrElementName ;LPCSTR lpstrAlias ;DWORD dwBufferSeconds ;}*LPMCI_WAVE_OPEN_PARMSA ;

typedef struct tagMCI_WAVE_OPEN_PARMSW {DWORD_PTR dwCallback ;MCIDEVICEID wDeviceID ;LPCWSTR lpstrDeviceType ;LPCWSTR lpstrElementName ;LPCWSTR lpstrAlias ;DWORD dwBufferSeconds ;}MCI_WAVE_OPEN_PARMSW ;
typedef struct tagMCI_WAVE_OPEN_PARMSW {DWORD_PTR dwCallback ;MCIDEVICEID wDeviceID ;LPCWSTR lpstrDeviceType ;LPCWSTR lpstrElementName ;LPCWSTR lpstrAlias ;DWORD dwBufferSeconds ;}*PMCI_WAVE_OPEN_PARMSW ;
typedef struct tagMCI_WAVE_OPEN_PARMSW {DWORD_PTR dwCallback ;MCIDEVICEID wDeviceID ;LPCWSTR lpstrDeviceType ;LPCWSTR lpstrElementName ;LPCWSTR lpstrAlias ;DWORD dwBufferSeconds ;}*LPMCI_WAVE_OPEN_PARMSW ;

typedef MCI_WAVE_OPEN_PARMSA MCI_WAVE_OPEN_PARMS ;
typedef PMCI_WAVE_OPEN_PARMSA PMCI_WAVE_OPEN_PARMS ;
typedef LPMCI_WAVE_OPEN_PARMSA LPMCI_WAVE_OPEN_PARMS ;
typedef struct tagMCI_WAVE_DELETE_PARMS {DWORD_PTR dwCallback ;DWORD dwFrom ;DWORD dwTo ;}MCI_WAVE_DELETE_PARMS ;
typedef struct tagMCI_WAVE_DELETE_PARMS {DWORD_PTR dwCallback ;DWORD dwFrom ;DWORD dwTo ;}*PMCI_WAVE_DELETE_PARMS ;
typedef struct tagMCI_WAVE_DELETE_PARMS {DWORD_PTR dwCallback ;DWORD dwFrom ;DWORD dwTo ;}*LPMCI_WAVE_DELETE_PARMS ;

typedef struct tagMCI_WAVE_SET_PARMS {DWORD_PTR dwCallback ;DWORD dwTimeFormat ;DWORD dwAudio ;UINT wInput ;UINT wOutput ;WORD wFormatTag ;WORD wReserved2 ;WORD nChannels ;WORD wReserved3 ;DWORD nSamplesPerSec ;DWORD nAvgBytesPerSec ;WORD nBlockAlign ;WORD wReserved4 ;WORD wBitsPerSample ;WORD wReserved5 ;}MCI_WAVE_SET_PARMS ;
typedef struct tagMCI_WAVE_SET_PARMS {DWORD_PTR dwCallback ;DWORD dwTimeFormat ;DWORD dwAudio ;UINT wInput ;UINT wOutput ;WORD wFormatTag ;WORD wReserved2 ;WORD nChannels ;WORD wReserved3 ;DWORD nSamplesPerSec ;DWORD nAvgBytesPerSec ;WORD nBlockAlign ;WORD wReserved4 ;WORD wBitsPerSample ;WORD wReserved5 ;}*PMCI_WAVE_SET_PARMS ;
typedef struct tagMCI_WAVE_SET_PARMS {DWORD_PTR dwCallback ;DWORD dwTimeFormat ;DWORD dwAudio ;UINT wInput ;UINT wOutput ;WORD wFormatTag ;WORD wReserved2 ;WORD nChannels ;WORD wReserved3 ;DWORD nSamplesPerSec ;DWORD nAvgBytesPerSec ;WORD nBlockAlign ;WORD wReserved4 ;WORD wBitsPerSample ;WORD wReserved5 ;}*LPMCI_WAVE_SET_PARMS ;

typedef struct tagMCI_SEQ_SET_PARMS {DWORD_PTR dwCallback ;DWORD dwTimeFormat ;DWORD dwAudio ;DWORD dwTempo ;DWORD dwPort ;DWORD dwSlave ;DWORD dwMaster ;DWORD dwOffset ;}MCI_SEQ_SET_PARMS ;
typedef struct tagMCI_SEQ_SET_PARMS {DWORD_PTR dwCallback ;DWORD dwTimeFormat ;DWORD dwAudio ;DWORD dwTempo ;DWORD dwPort ;DWORD dwSlave ;DWORD dwMaster ;DWORD dwOffset ;}*PMCI_SEQ_SET_PARMS ;
typedef struct tagMCI_SEQ_SET_PARMS {DWORD_PTR dwCallback ;DWORD dwTimeFormat ;DWORD dwAudio ;DWORD dwTempo ;DWORD dwPort ;DWORD dwSlave ;DWORD dwMaster ;DWORD dwOffset ;}*LPMCI_SEQ_SET_PARMS ;

typedef struct tagMCI_ANIM_OPEN_PARMSA {DWORD_PTR dwCallback ;MCIDEVICEID wDeviceID ;LPCSTR lpstrDeviceType ;LPCSTR lpstrElementName ;LPCSTR lpstrAlias ;DWORD dwStyle ;HWND hWndParent ;}MCI_ANIM_OPEN_PARMSA ;
typedef struct tagMCI_ANIM_OPEN_PARMSA {DWORD_PTR dwCallback ;MCIDEVICEID wDeviceID ;LPCSTR lpstrDeviceType ;LPCSTR lpstrElementName ;LPCSTR lpstrAlias ;DWORD dwStyle ;HWND hWndParent ;}*PMCI_ANIM_OPEN_PARMSA ;
typedef struct tagMCI_ANIM_OPEN_PARMSA {DWORD_PTR dwCallback ;MCIDEVICEID wDeviceID ;LPCSTR lpstrDeviceType ;LPCSTR lpstrElementName ;LPCSTR lpstrAlias ;DWORD dwStyle ;HWND hWndParent ;}*LPMCI_ANIM_OPEN_PARMSA ;

typedef struct tagMCI_ANIM_OPEN_PARMSW {DWORD_PTR dwCallback ;MCIDEVICEID wDeviceID ;LPCWSTR lpstrDeviceType ;LPCWSTR lpstrElementName ;LPCWSTR lpstrAlias ;DWORD dwStyle ;HWND hWndParent ;}MCI_ANIM_OPEN_PARMSW ;
typedef struct tagMCI_ANIM_OPEN_PARMSW {DWORD_PTR dwCallback ;MCIDEVICEID wDeviceID ;LPCWSTR lpstrDeviceType ;LPCWSTR lpstrElementName ;LPCWSTR lpstrAlias ;DWORD dwStyle ;HWND hWndParent ;}*PMCI_ANIM_OPEN_PARMSW ;
typedef struct tagMCI_ANIM_OPEN_PARMSW {DWORD_PTR dwCallback ;MCIDEVICEID wDeviceID ;LPCWSTR lpstrDeviceType ;LPCWSTR lpstrElementName ;LPCWSTR lpstrAlias ;DWORD dwStyle ;HWND hWndParent ;}*LPMCI_ANIM_OPEN_PARMSW ;

typedef MCI_ANIM_OPEN_PARMSA MCI_ANIM_OPEN_PARMS ;
typedef PMCI_ANIM_OPEN_PARMSA PMCI_ANIM_OPEN_PARMS ;
typedef LPMCI_ANIM_OPEN_PARMSA LPMCI_ANIM_OPEN_PARMS ;
typedef struct tagMCI_ANIM_PLAY_PARMS {DWORD_PTR dwCallback ;DWORD dwFrom ;DWORD dwTo ;DWORD dwSpeed ;}MCI_ANIM_PLAY_PARMS ;
typedef struct tagMCI_ANIM_PLAY_PARMS {DWORD_PTR dwCallback ;DWORD dwFrom ;DWORD dwTo ;DWORD dwSpeed ;}*PMCI_ANIM_PLAY_PARMS ;
typedef struct tagMCI_ANIM_PLAY_PARMS {DWORD_PTR dwCallback ;DWORD dwFrom ;DWORD dwTo ;DWORD dwSpeed ;}*LPMCI_ANIM_PLAY_PARMS ;

typedef struct tagMCI_ANIM_STEP_PARMS {DWORD_PTR dwCallback ;DWORD dwFrames ;}MCI_ANIM_STEP_PARMS ;
typedef struct tagMCI_ANIM_STEP_PARMS {DWORD_PTR dwCallback ;DWORD dwFrames ;}*PMCI_ANIM_STEP_PARMS ;
typedef struct tagMCI_ANIM_STEP_PARMS {DWORD_PTR dwCallback ;DWORD dwFrames ;}*LPMCI_ANIM_STEP_PARMS ;

typedef struct tagMCI_ANIM_WINDOW_PARMSA {DWORD_PTR dwCallback ;HWND hWnd ;UINT nCmdShow ;LPCSTR lpstrText ;}MCI_ANIM_WINDOW_PARMSA ;
typedef struct tagMCI_ANIM_WINDOW_PARMSA {DWORD_PTR dwCallback ;HWND hWnd ;UINT nCmdShow ;LPCSTR lpstrText ;}*PMCI_ANIM_WINDOW_PARMSA ;
typedef struct tagMCI_ANIM_WINDOW_PARMSA {DWORD_PTR dwCallback ;HWND hWnd ;UINT nCmdShow ;LPCSTR lpstrText ;}*LPMCI_ANIM_WINDOW_PARMSA ;

typedef struct tagMCI_ANIM_WINDOW_PARMSW {DWORD_PTR dwCallback ;HWND hWnd ;UINT nCmdShow ;LPCWSTR lpstrText ;}MCI_ANIM_WINDOW_PARMSW ;
typedef struct tagMCI_ANIM_WINDOW_PARMSW {DWORD_PTR dwCallback ;HWND hWnd ;UINT nCmdShow ;LPCWSTR lpstrText ;}*PMCI_ANIM_WINDOW_PARMSW ;
typedef struct tagMCI_ANIM_WINDOW_PARMSW {DWORD_PTR dwCallback ;HWND hWnd ;UINT nCmdShow ;LPCWSTR lpstrText ;}*LPMCI_ANIM_WINDOW_PARMSW ;

typedef MCI_ANIM_WINDOW_PARMSA MCI_ANIM_WINDOW_PARMS ;
typedef PMCI_ANIM_WINDOW_PARMSA PMCI_ANIM_WINDOW_PARMS ;
typedef LPMCI_ANIM_WINDOW_PARMSA LPMCI_ANIM_WINDOW_PARMS ;
typedef struct tagMCI_ANIM_RECT_PARMS {DWORD_PTR dwCallback ;RECT rc ;}MCI_ANIM_RECT_PARMS ;
typedef MCI_ANIM_RECT_PARMS *PMCI_ANIM_RECT_PARMS ;
typedef MCI_ANIM_RECT_PARMS *LPMCI_ANIM_RECT_PARMS ;
typedef struct tagMCI_ANIM_UPDATE_PARMS {DWORD_PTR dwCallback ;RECT rc ;HDC hDC ;}MCI_ANIM_UPDATE_PARMS ;
typedef struct tagMCI_ANIM_UPDATE_PARMS {DWORD_PTR dwCallback ;RECT rc ;HDC hDC ;}*PMCI_ANIM_UPDATE_PARMS ;
typedef struct tagMCI_ANIM_UPDATE_PARMS {DWORD_PTR dwCallback ;RECT rc ;HDC hDC ;}*LPMCI_ANIM_UPDATE_PARMS ;

typedef struct tagMCI_OVLY_OPEN_PARMSA {DWORD_PTR dwCallback ;MCIDEVICEID wDeviceID ;LPCSTR lpstrDeviceType ;LPCSTR lpstrElementName ;LPCSTR lpstrAlias ;DWORD dwStyle ;HWND hWndParent ;}MCI_OVLY_OPEN_PARMSA ;
typedef struct tagMCI_OVLY_OPEN_PARMSA {DWORD_PTR dwCallback ;MCIDEVICEID wDeviceID ;LPCSTR lpstrDeviceType ;LPCSTR lpstrElementName ;LPCSTR lpstrAlias ;DWORD dwStyle ;HWND hWndParent ;}*PMCI_OVLY_OPEN_PARMSA ;
typedef struct tagMCI_OVLY_OPEN_PARMSA {DWORD_PTR dwCallback ;MCIDEVICEID wDeviceID ;LPCSTR lpstrDeviceType ;LPCSTR lpstrElementName ;LPCSTR lpstrAlias ;DWORD dwStyle ;HWND hWndParent ;}*LPMCI_OVLY_OPEN_PARMSA ;

typedef struct tagMCI_OVLY_OPEN_PARMSW {DWORD_PTR dwCallback ;MCIDEVICEID wDeviceID ;LPCWSTR lpstrDeviceType ;LPCWSTR lpstrElementName ;LPCWSTR lpstrAlias ;DWORD dwStyle ;HWND hWndParent ;}MCI_OVLY_OPEN_PARMSW ;
typedef struct tagMCI_OVLY_OPEN_PARMSW {DWORD_PTR dwCallback ;MCIDEVICEID wDeviceID ;LPCWSTR lpstrDeviceType ;LPCWSTR lpstrElementName ;LPCWSTR lpstrAlias ;DWORD dwStyle ;HWND hWndParent ;}*PMCI_OVLY_OPEN_PARMSW ;
typedef struct tagMCI_OVLY_OPEN_PARMSW {DWORD_PTR dwCallback ;MCIDEVICEID wDeviceID ;LPCWSTR lpstrDeviceType ;LPCWSTR lpstrElementName ;LPCWSTR lpstrAlias ;DWORD dwStyle ;HWND hWndParent ;}*LPMCI_OVLY_OPEN_PARMSW ;

typedef MCI_OVLY_OPEN_PARMSA MCI_OVLY_OPEN_PARMS ;
typedef PMCI_OVLY_OPEN_PARMSA PMCI_OVLY_OPEN_PARMS ;
typedef LPMCI_OVLY_OPEN_PARMSA LPMCI_OVLY_OPEN_PARMS ;
typedef struct tagMCI_OVLY_WINDOW_PARMSA {DWORD_PTR dwCallback ;HWND hWnd ;UINT nCmdShow ;LPCSTR lpstrText ;}MCI_OVLY_WINDOW_PARMSA ;
typedef struct tagMCI_OVLY_WINDOW_PARMSA {DWORD_PTR dwCallback ;HWND hWnd ;UINT nCmdShow ;LPCSTR lpstrText ;}*PMCI_OVLY_WINDOW_PARMSA ;
typedef struct tagMCI_OVLY_WINDOW_PARMSA {DWORD_PTR dwCallback ;HWND hWnd ;UINT nCmdShow ;LPCSTR lpstrText ;}*LPMCI_OVLY_WINDOW_PARMSA ;

typedef struct tagMCI_OVLY_WINDOW_PARMSW {DWORD_PTR dwCallback ;HWND hWnd ;UINT nCmdShow ;LPCWSTR lpstrText ;}MCI_OVLY_WINDOW_PARMSW ;
typedef struct tagMCI_OVLY_WINDOW_PARMSW {DWORD_PTR dwCallback ;HWND hWnd ;UINT nCmdShow ;LPCWSTR lpstrText ;}*PMCI_OVLY_WINDOW_PARMSW ;
typedef struct tagMCI_OVLY_WINDOW_PARMSW {DWORD_PTR dwCallback ;HWND hWnd ;UINT nCmdShow ;LPCWSTR lpstrText ;}*LPMCI_OVLY_WINDOW_PARMSW ;

typedef MCI_OVLY_WINDOW_PARMSA MCI_OVLY_WINDOW_PARMS ;
typedef PMCI_OVLY_WINDOW_PARMSA PMCI_OVLY_WINDOW_PARMS ;
typedef LPMCI_OVLY_WINDOW_PARMSA LPMCI_OVLY_WINDOW_PARMS ;
typedef struct tagMCI_OVLY_RECT_PARMS {DWORD_PTR dwCallback ;RECT rc ;}MCI_OVLY_RECT_PARMS ;
typedef struct tagMCI_OVLY_RECT_PARMS {DWORD_PTR dwCallback ;RECT rc ;}*PMCI_OVLY_RECT_PARMS ;
typedef struct tagMCI_OVLY_RECT_PARMS {DWORD_PTR dwCallback ;RECT rc ;}*LPMCI_OVLY_RECT_PARMS ;

typedef struct tagMCI_OVLY_SAVE_PARMSA {DWORD_PTR dwCallback ;LPCSTR lpfilename ;RECT rc ;}MCI_OVLY_SAVE_PARMSA ;
typedef struct tagMCI_OVLY_SAVE_PARMSA {DWORD_PTR dwCallback ;LPCSTR lpfilename ;RECT rc ;}*PMCI_OVLY_SAVE_PARMSA ;
typedef struct tagMCI_OVLY_SAVE_PARMSA {DWORD_PTR dwCallback ;LPCSTR lpfilename ;RECT rc ;}*LPMCI_OVLY_SAVE_PARMSA ;

typedef struct tagMCI_OVLY_SAVE_PARMSW {DWORD_PTR dwCallback ;LPCWSTR lpfilename ;RECT rc ;}MCI_OVLY_SAVE_PARMSW ;
typedef struct tagMCI_OVLY_SAVE_PARMSW {DWORD_PTR dwCallback ;LPCWSTR lpfilename ;RECT rc ;}*PMCI_OVLY_SAVE_PARMSW ;
typedef struct tagMCI_OVLY_SAVE_PARMSW {DWORD_PTR dwCallback ;LPCWSTR lpfilename ;RECT rc ;}*LPMCI_OVLY_SAVE_PARMSW ;

typedef MCI_OVLY_SAVE_PARMSA MCI_OVLY_SAVE_PARMS ;
typedef PMCI_OVLY_SAVE_PARMSA PMCI_OVLY_SAVE_PARMS ;
typedef LPMCI_OVLY_SAVE_PARMSA LPMCI_OVLY_SAVE_PARMS ;
typedef struct tagMCI_OVLY_LOAD_PARMSA {DWORD_PTR dwCallback ;LPCSTR lpfilename ;RECT rc ;}MCI_OVLY_LOAD_PARMSA ;
typedef struct tagMCI_OVLY_LOAD_PARMSA {DWORD_PTR dwCallback ;LPCSTR lpfilename ;RECT rc ;}*PMCI_OVLY_LOAD_PARMSA ;
typedef struct tagMCI_OVLY_LOAD_PARMSA {DWORD_PTR dwCallback ;LPCSTR lpfilename ;RECT rc ;}*LPMCI_OVLY_LOAD_PARMSA ;

typedef struct tagMCI_OVLY_LOAD_PARMSW {DWORD_PTR dwCallback ;LPCWSTR lpfilename ;RECT rc ;}MCI_OVLY_LOAD_PARMSW ;
typedef struct tagMCI_OVLY_LOAD_PARMSW {DWORD_PTR dwCallback ;LPCWSTR lpfilename ;RECT rc ;}*PMCI_OVLY_LOAD_PARMSW ;
typedef struct tagMCI_OVLY_LOAD_PARMSW {DWORD_PTR dwCallback ;LPCWSTR lpfilename ;RECT rc ;}*LPMCI_OVLY_LOAD_PARMSW ;

typedef MCI_OVLY_LOAD_PARMSA MCI_OVLY_LOAD_PARMS ;
typedef PMCI_OVLY_LOAD_PARMSA PMCI_OVLY_LOAD_PARMS ;
typedef LPMCI_OVLY_LOAD_PARMSA LPMCI_OVLY_LOAD_PARMS ;
// m:\mingw\x86_64-w64-mingw32\include\nb30.h

typedef struct _NCB {UCHAR ncb_command ;UCHAR ncb_retcode ;UCHAR ncb_lsn ;UCHAR ncb_num ;PUCHAR ncb_buffer ;WORD ncb_length ;UCHAR ncb_callname [16 ];UCHAR ncb_name [16 ];UCHAR ncb_rto ;UCHAR ncb_sto ;void (*ncb_post )(struct _NCB *);UCHAR ncb_lana_num ;UCHAR ncb_cmd_cplt ;UCHAR ncb_reserve [18 ];HANDLE ncb_event ;}NCB ;
typedef struct _NCB {UCHAR ncb_command ;UCHAR ncb_retcode ;UCHAR ncb_lsn ;UCHAR ncb_num ;PUCHAR ncb_buffer ;WORD ncb_length ;UCHAR ncb_callname [16 ];UCHAR ncb_name [16 ];UCHAR ncb_rto ;UCHAR ncb_sto ;void (*ncb_post )(struct _NCB *);UCHAR ncb_lana_num ;UCHAR ncb_cmd_cplt ;UCHAR ncb_reserve [18 ];HANDLE ncb_event ;}*PNCB ;

typedef struct _ADAPTER_STATUS {UCHAR adapter_address [6 ];UCHAR rev_major ;UCHAR reserved0 ;UCHAR adapter_type ;UCHAR rev_minor ;WORD duration ;WORD frmr_recv ;WORD frmr_xmit ;WORD iframe_recv_err ;WORD xmit_aborts ;DWORD xmit_success ;DWORD recv_success ;WORD iframe_xmit_err ;WORD recv_buff_unavail ;WORD t1_timeouts ;WORD ti_timeouts ;DWORD reserved1 ;WORD free_ncbs ;WORD max_cfg_ncbs ;WORD max_ncbs ;WORD xmit_buf_unavail ;WORD max_dgram_size ;WORD pending_sess ;WORD max_cfg_sess ;WORD max_sess ;WORD max_sess_pkt_size ;WORD name_count ;}ADAPTER_STATUS ;
typedef struct _ADAPTER_STATUS {UCHAR adapter_address [6 ];UCHAR rev_major ;UCHAR reserved0 ;UCHAR adapter_type ;UCHAR rev_minor ;WORD duration ;WORD frmr_recv ;WORD frmr_xmit ;WORD iframe_recv_err ;WORD xmit_aborts ;DWORD xmit_success ;DWORD recv_success ;WORD iframe_xmit_err ;WORD recv_buff_unavail ;WORD t1_timeouts ;WORD ti_timeouts ;DWORD reserved1 ;WORD free_ncbs ;WORD max_cfg_ncbs ;WORD max_ncbs ;WORD xmit_buf_unavail ;WORD max_dgram_size ;WORD pending_sess ;WORD max_cfg_sess ;WORD max_sess ;WORD max_sess_pkt_size ;WORD name_count ;}*PADAPTER_STATUS ;

typedef struct _NAME_BUFFER {UCHAR name [16 ];UCHAR name_num ;UCHAR name_flags ;}NAME_BUFFER ;
typedef struct _NAME_BUFFER {UCHAR name [16 ];UCHAR name_num ;UCHAR name_flags ;}*PNAME_BUFFER ;

typedef struct _SESSION_HEADER {UCHAR sess_name ;UCHAR num_sess ;UCHAR rcv_dg_outstanding ;UCHAR rcv_any_outstanding ;}SESSION_HEADER ;
typedef struct _SESSION_HEADER {UCHAR sess_name ;UCHAR num_sess ;UCHAR rcv_dg_outstanding ;UCHAR rcv_any_outstanding ;}*PSESSION_HEADER ;

typedef struct _SESSION_BUFFER {UCHAR lsn ;UCHAR state ;UCHAR local_name [16 ];UCHAR remote_name [16 ];UCHAR rcvs_outstanding ;UCHAR sends_outstanding ;}SESSION_BUFFER ;
typedef struct _SESSION_BUFFER {UCHAR lsn ;UCHAR state ;UCHAR local_name [16 ];UCHAR remote_name [16 ];UCHAR rcvs_outstanding ;UCHAR sends_outstanding ;}*PSESSION_BUFFER ;

typedef struct _LANA_ENUM {UCHAR length ;UCHAR lana [255 ];}LANA_ENUM ;
typedef struct _LANA_ENUM {UCHAR length ;UCHAR lana [255 ];}*PLANA_ENUM ;

typedef struct _FIND_NAME_HEADER {WORD node_count ;UCHAR reserved ;UCHAR unique_group ;}FIND_NAME_HEADER ;
typedef struct _FIND_NAME_HEADER {WORD node_count ;UCHAR reserved ;UCHAR unique_group ;}*PFIND_NAME_HEADER ;

typedef struct _FIND_NAME_BUFFER {UCHAR length ;UCHAR access_control ;UCHAR frame_control ;UCHAR destination_addr [6 ];UCHAR source_addr [6 ];UCHAR routing_info [18 ];}FIND_NAME_BUFFER ;
typedef struct _FIND_NAME_BUFFER {UCHAR length ;UCHAR access_control ;UCHAR frame_control ;UCHAR destination_addr [6 ];UCHAR source_addr [6 ];UCHAR routing_info [18 ];}*PFIND_NAME_BUFFER ;

typedef struct _ACTION_HEADER {ULONG transport_id ;USHORT action_code ;USHORT reserved ;}ACTION_HEADER ;
typedef struct _ACTION_HEADER {ULONG transport_id ;USHORT action_code ;USHORT reserved ;}*PACTION_HEADER ;

UCHAR Netbios (PNCB pncb );
// m:\mingw\x86_64-w64-mingw32\include\rpc.h

typedef void *I_RPC_HANDLE ;
typedef long RPC_STATUS ;
// m:\mingw\x86_64-w64-mingw32\include\rpcdce.h

typedef unsigned char *RPC_CSTR ;
typedef unsigned short *RPC_WSTR ;
typedef I_RPC_HANDLE RPC_BINDING_HANDLE ;
typedef RPC_BINDING_HANDLE handle_t ;
typedef GUID UUID ;
typedef struct _RPC_BINDING_VECTOR {unsigned long Count ;RPC_BINDING_HANDLE BindingH [1 ];}RPC_BINDING_VECTOR ;
typedef struct _UUID_VECTOR {unsigned long Count ;UUID *Uuid [1 ];}UUID_VECTOR ;
typedef void *RPC_IF_HANDLE ;
typedef struct _RPC_IF_ID {UUID Uuid ;unsigned short VersMajor ;unsigned short VersMinor ;}RPC_IF_ID ;
typedef struct _RPC_PROTSEQ_VECTORA {unsigned int Count ;unsigned char *Protseq [1 ];}RPC_PROTSEQ_VECTORA ;
typedef struct _RPC_PROTSEQ_VECTORW {unsigned int Count ;unsigned short *Protseq [1 ];}RPC_PROTSEQ_VECTORW ;
typedef struct _RPC_POLICY {unsigned int Length ;unsigned long EndpointFlags ;unsigned long NICFlags ;}RPC_POLICY ;
typedef struct _RPC_POLICY {unsigned int Length ;unsigned long EndpointFlags ;unsigned long NICFlags ;}*PRPC_POLICY ;

typedef void RPC_OBJECT_INQ_FN (UUID *ObjectUuid ,UUID *TypeUuid ,RPC_STATUS *Status );
typedef RPC_STATUS RPC_IF_CALLBACK_FN (RPC_IF_HANDLE InterfaceUuid ,void *Context );
typedef void RPC_SECURITY_CALLBACK_FN (void *Context );
typedef struct {unsigned int Count ;unsigned long Stats [1 ];}RPC_STATS_VECTOR ;
typedef struct {unsigned long Count ;RPC_IF_ID *IfId [1 ];}RPC_IF_ID_VECTOR ;
RPC_STATUS RpcBindingCopy (RPC_BINDING_HANDLE SourceBinding ,RPC_BINDING_HANDLE *DestinationBinding );
RPC_STATUS RpcBindingFree (RPC_BINDING_HANDLE *Binding );
RPC_STATUS RpcBindingSetOption (RPC_BINDING_HANDLE hBinding ,unsigned long option ,ULONG_PTR optionValue );
RPC_STATUS RpcBindingInqOption (RPC_BINDING_HANDLE hBinding ,unsigned long option ,ULONG_PTR *pOptionValue );
RPC_STATUS RpcBindingFromStringBindingA (RPC_CSTR StringBinding ,RPC_BINDING_HANDLE *Binding );
RPC_STATUS RpcBindingFromStringBindingW (RPC_WSTR StringBinding ,RPC_BINDING_HANDLE *Binding );
RPC_STATUS RpcSsGetContextBinding (void *ContextHandle ,RPC_BINDING_HANDLE *Binding );
RPC_STATUS RpcBindingInqObject (RPC_BINDING_HANDLE Binding ,UUID *ObjectUuid );
RPC_STATUS RpcBindingReset (RPC_BINDING_HANDLE Binding );
RPC_STATUS RpcBindingSetObject (RPC_BINDING_HANDLE Binding ,UUID *ObjectUuid );
RPC_STATUS RpcMgmtInqDefaultProtectLevel (unsigned long AuthnSvc ,unsigned long *AuthnLevel );
RPC_STATUS RpcBindingToStringBindingA (RPC_BINDING_HANDLE Binding ,RPC_CSTR *StringBinding );
RPC_STATUS RpcBindingToStringBindingW (RPC_BINDING_HANDLE Binding ,RPC_WSTR *StringBinding );
RPC_STATUS RpcBindingVectorFree (RPC_BINDING_VECTOR **BindingVector );
RPC_STATUS RpcStringBindingComposeA (RPC_CSTR ObjUuid ,RPC_CSTR Protseq ,RPC_CSTR NetworkAddr ,RPC_CSTR Endpoint ,RPC_CSTR Options ,RPC_CSTR *StringBinding );
RPC_STATUS RpcStringBindingComposeW (RPC_WSTR ObjUuid ,RPC_WSTR Protseq ,RPC_WSTR NetworkAddr ,RPC_WSTR Endpoint ,RPC_WSTR Options ,RPC_WSTR *StringBinding );
RPC_STATUS RpcStringBindingParseA (RPC_CSTR StringBinding ,RPC_CSTR *ObjUuid ,RPC_CSTR *Protseq ,RPC_CSTR *NetworkAddr ,RPC_CSTR *Endpoint ,RPC_CSTR *NetworkOptions );
RPC_STATUS RpcStringBindingParseW (RPC_WSTR StringBinding ,RPC_WSTR *ObjUuid ,RPC_WSTR *Protseq ,RPC_WSTR *NetworkAddr ,RPC_WSTR *Endpoint ,RPC_WSTR *NetworkOptions );
RPC_STATUS RpcStringFreeA (RPC_CSTR *String );
RPC_STATUS RpcStringFreeW (RPC_WSTR *String );
RPC_STATUS RpcIfInqId (RPC_IF_HANDLE RpcIfHandle ,RPC_IF_ID *RpcIfId );
RPC_STATUS RpcNetworkIsProtseqValidA (RPC_CSTR Protseq );
RPC_STATUS RpcNetworkIsProtseqValidW (RPC_WSTR Protseq );
RPC_STATUS RpcMgmtInqComTimeout (RPC_BINDING_HANDLE Binding ,unsigned int *Timeout );
RPC_STATUS RpcMgmtSetComTimeout (RPC_BINDING_HANDLE Binding ,unsigned int Timeout );
RPC_STATUS RpcMgmtSetCancelTimeout (long Timeout );
RPC_STATUS RpcNetworkInqProtseqsA (RPC_PROTSEQ_VECTORA **ProtseqVector );
RPC_STATUS RpcNetworkInqProtseqsW (RPC_PROTSEQ_VECTORW **ProtseqVector );
RPC_STATUS RpcObjectInqType (UUID *ObjUuid ,UUID *TypeUuid );
RPC_STATUS RpcObjectSetInqFn (RPC_OBJECT_INQ_FN *InquiryFn );
RPC_STATUS RpcObjectSetType (UUID *ObjUuid ,UUID *TypeUuid );
RPC_STATUS RpcProtseqVectorFreeA (RPC_PROTSEQ_VECTORA **ProtseqVector );
RPC_STATUS RpcProtseqVectorFreeW (RPC_PROTSEQ_VECTORW **ProtseqVector );
RPC_STATUS RpcServerInqBindings (RPC_BINDING_VECTOR **BindingVector );
RPC_STATUS RpcServerInqIf (RPC_IF_HANDLE IfSpec ,UUID *MgrTypeUuid ,void **MgrEpv );
RPC_STATUS RpcServerListen (unsigned int MinimumCallThreads ,unsigned int MaxCalls ,unsigned int DontWait );
RPC_STATUS RpcServerRegisterIf (RPC_IF_HANDLE IfSpec ,UUID *MgrTypeUuid ,void *MgrEpv );
RPC_STATUS RpcServerRegisterIfEx (RPC_IF_HANDLE IfSpec ,UUID *MgrTypeUuid ,void *MgrEpv ,unsigned int Flags ,unsigned int MaxCalls ,RPC_IF_CALLBACK_FN *IfCallback );
RPC_STATUS RpcServerRegisterIf2 (RPC_IF_HANDLE IfSpec ,UUID *MgrTypeUuid ,void *MgrEpv ,unsigned int Flags ,unsigned int MaxCalls ,unsigned int MaxRpcSize ,RPC_IF_CALLBACK_FN *IfCallbackFn );
RPC_STATUS RpcServerUnregisterIf (RPC_IF_HANDLE IfSpec ,UUID *MgrTypeUuid ,unsigned int WaitForCallsToComplete );
RPC_STATUS RpcServerUnregisterIfEx (RPC_IF_HANDLE IfSpec ,UUID *MgrTypeUuid ,int RundownContextHandles );
RPC_STATUS RpcServerUseAllProtseqs (unsigned int MaxCalls ,void *SecurityDescriptor );
RPC_STATUS RpcServerUseAllProtseqsEx (unsigned int MaxCalls ,void *SecurityDescriptor ,PRPC_POLICY Policy );
RPC_STATUS RpcServerUseAllProtseqsIf (unsigned int MaxCalls ,RPC_IF_HANDLE IfSpec ,void *SecurityDescriptor );
RPC_STATUS RpcServerUseAllProtseqsIfEx (unsigned int MaxCalls ,RPC_IF_HANDLE IfSpec ,void *SecurityDescriptor ,PRPC_POLICY Policy );
RPC_STATUS RpcServerUseProtseqA (RPC_CSTR Protseq ,unsigned int MaxCalls ,void *SecurityDescriptor );
RPC_STATUS RpcServerUseProtseqExA (RPC_CSTR Protseq ,unsigned int MaxCalls ,void *SecurityDescriptor ,PRPC_POLICY Policy );
RPC_STATUS RpcServerUseProtseqW (RPC_WSTR Protseq ,unsigned int MaxCalls ,void *SecurityDescriptor );
RPC_STATUS RpcServerUseProtseqExW (RPC_WSTR Protseq ,unsigned int MaxCalls ,void *SecurityDescriptor ,PRPC_POLICY Policy );
RPC_STATUS RpcServerUseProtseqEpA (RPC_CSTR Protseq ,unsigned int MaxCalls ,RPC_CSTR Endpoint ,void *SecurityDescriptor );
RPC_STATUS RpcServerUseProtseqEpExA (RPC_CSTR Protseq ,unsigned int MaxCalls ,RPC_CSTR Endpoint ,void *SecurityDescriptor ,PRPC_POLICY Policy );
RPC_STATUS RpcServerUseProtseqEpW (RPC_WSTR Protseq ,unsigned int MaxCalls ,RPC_WSTR Endpoint ,void *SecurityDescriptor );
RPC_STATUS RpcServerUseProtseqEpExW (RPC_WSTR Protseq ,unsigned int MaxCalls ,RPC_WSTR Endpoint ,void *SecurityDescriptor ,PRPC_POLICY Policy );
RPC_STATUS RpcServerUseProtseqIfA (RPC_CSTR Protseq ,unsigned int MaxCalls ,RPC_IF_HANDLE IfSpec ,void *SecurityDescriptor );
RPC_STATUS RpcServerUseProtseqIfExA (RPC_CSTR Protseq ,unsigned int MaxCalls ,RPC_IF_HANDLE IfSpec ,void *SecurityDescriptor ,PRPC_POLICY Policy );
RPC_STATUS RpcServerUseProtseqIfW (RPC_WSTR Protseq ,unsigned int MaxCalls ,RPC_IF_HANDLE IfSpec ,void *SecurityDescriptor );
RPC_STATUS RpcServerUseProtseqIfExW (RPC_WSTR Protseq ,unsigned int MaxCalls ,RPC_IF_HANDLE IfSpec ,void *SecurityDescriptor ,PRPC_POLICY Policy );
void RpcServerYield ();
RPC_STATUS RpcMgmtStatsVectorFree (RPC_STATS_VECTOR **StatsVector );
RPC_STATUS RpcMgmtInqStats (RPC_BINDING_HANDLE Binding ,RPC_STATS_VECTOR **Statistics );
RPC_STATUS RpcMgmtIsServerListening (RPC_BINDING_HANDLE Binding );
RPC_STATUS RpcMgmtStopServerListening (RPC_BINDING_HANDLE Binding );
RPC_STATUS RpcMgmtWaitServerListen (void );
RPC_STATUS RpcMgmtSetServerStackSize (unsigned long ThreadStackSize );
void RpcSsDontSerializeContext (void );
RPC_STATUS RpcMgmtEnableIdleCleanup (void );
RPC_STATUS RpcMgmtInqIfIds (RPC_BINDING_HANDLE Binding ,RPC_IF_ID_VECTOR **IfIdVector );
RPC_STATUS RpcIfIdVectorFree (RPC_IF_ID_VECTOR **IfIdVector );
RPC_STATUS RpcMgmtInqServerPrincNameA (RPC_BINDING_HANDLE Binding ,unsigned long AuthnSvc ,RPC_CSTR *ServerPrincName );
RPC_STATUS RpcMgmtInqServerPrincNameW (RPC_BINDING_HANDLE Binding ,unsigned long AuthnSvc ,RPC_WSTR *ServerPrincName );
RPC_STATUS RpcServerInqDefaultPrincNameA (unsigned long AuthnSvc ,RPC_CSTR *PrincName );
RPC_STATUS RpcServerInqDefaultPrincNameW (unsigned long AuthnSvc ,RPC_WSTR *PrincName );
RPC_STATUS RpcEpResolveBinding (RPC_BINDING_HANDLE Binding ,RPC_IF_HANDLE IfSpec );
RPC_STATUS RpcNsBindingInqEntryNameA (RPC_BINDING_HANDLE Binding ,unsigned long EntryNameSyntax ,RPC_CSTR *EntryName );
RPC_STATUS RpcNsBindingInqEntryNameW (RPC_BINDING_HANDLE Binding ,unsigned long EntryNameSyntax ,RPC_WSTR *EntryName );
typedef void *RPC_AUTH_IDENTITY_HANDLE ;
typedef void *RPC_AUTHZ_HANDLE ;
typedef struct _RPC_SECURITY_QOS {unsigned long Version ;unsigned long Capabilities ;unsigned long IdentityTracking ;unsigned long ImpersonationType ;}RPC_SECURITY_QOS ;
typedef struct _RPC_SECURITY_QOS {unsigned long Version ;unsigned long Capabilities ;unsigned long IdentityTracking ;unsigned long ImpersonationType ;}*PRPC_SECURITY_QOS ;

typedef struct _SEC_WINNT_AUTH_IDENTITY_W {unsigned short *User ;unsigned long UserLength ;unsigned short *Domain ;unsigned long DomainLength ;unsigned short *Password ;unsigned long PasswordLength ;unsigned long Flags ;}SEC_WINNT_AUTH_IDENTITY_W ;
typedef struct _SEC_WINNT_AUTH_IDENTITY_W {unsigned short *User ;unsigned long UserLength ;unsigned short *Domain ;unsigned long DomainLength ;unsigned short *Password ;unsigned long PasswordLength ;unsigned long Flags ;}*PSEC_WINNT_AUTH_IDENTITY_W ;

typedef struct _SEC_WINNT_AUTH_IDENTITY_A {unsigned char *User ;unsigned long UserLength ;unsigned char *Domain ;unsigned long DomainLength ;unsigned char *Password ;unsigned long PasswordLength ;unsigned long Flags ;}SEC_WINNT_AUTH_IDENTITY_A ;
typedef struct _SEC_WINNT_AUTH_IDENTITY_A {unsigned char *User ;unsigned long UserLength ;unsigned char *Domain ;unsigned long DomainLength ;unsigned char *Password ;unsigned long PasswordLength ;unsigned long Flags ;}*PSEC_WINNT_AUTH_IDENTITY_A ;

typedef struct _RPC_HTTP_TRANSPORT_CREDENTIALS_W {SEC_WINNT_AUTH_IDENTITY_W *TransportCredentials ;unsigned long Flags ;unsigned long AuthenticationTarget ;unsigned long NumberOfAuthnSchemes ;unsigned long *AuthnSchemes ;unsigned short *ServerCertificateSubject ;}RPC_HTTP_TRANSPORT_CREDENTIALS_W ;
typedef struct _RPC_HTTP_TRANSPORT_CREDENTIALS_W {SEC_WINNT_AUTH_IDENTITY_W *TransportCredentials ;unsigned long Flags ;unsigned long AuthenticationTarget ;unsigned long NumberOfAuthnSchemes ;unsigned long *AuthnSchemes ;unsigned short *ServerCertificateSubject ;}*PRPC_HTTP_TRANSPORT_CREDENTIALS_W ;

typedef struct _RPC_HTTP_TRANSPORT_CREDENTIALS_A {SEC_WINNT_AUTH_IDENTITY_A *TransportCredentials ;unsigned long Flags ;unsigned long AuthenticationTarget ;unsigned long NumberOfAuthnSchemes ;unsigned long *AuthnSchemes ;unsigned char *ServerCertificateSubject ;}RPC_HTTP_TRANSPORT_CREDENTIALS_A ;
typedef struct _RPC_HTTP_TRANSPORT_CREDENTIALS_A {SEC_WINNT_AUTH_IDENTITY_A *TransportCredentials ;unsigned long Flags ;unsigned long AuthenticationTarget ;unsigned long NumberOfAuthnSchemes ;unsigned long *AuthnSchemes ;unsigned char *ServerCertificateSubject ;}*PRPC_HTTP_TRANSPORT_CREDENTIALS_A ;

typedef struct _RPC_SECURITY_QOS_V2_W {unsigned long Version ;unsigned long Capabilities ;unsigned long IdentityTracking ;unsigned long ImpersonationType ;unsigned long AdditionalSecurityInfoType ;union {RPC_HTTP_TRANSPORT_CREDENTIALS_W *HttpCredentials ;}u ;}RPC_SECURITY_QOS_V2_W ;
typedef struct _RPC_SECURITY_QOS_V2_W {unsigned long Version ;unsigned long Capabilities ;unsigned long IdentityTracking ;unsigned long ImpersonationType ;unsigned long AdditionalSecurityInfoType ;union {RPC_HTTP_TRANSPORT_CREDENTIALS_W *HttpCredentials ;}u ;}*PRPC_SECURITY_QOS_V2_W ;

typedef struct _RPC_SECURITY_QOS_V2_A {unsigned long Version ;unsigned long Capabilities ;unsigned long IdentityTracking ;unsigned long ImpersonationType ;unsigned long AdditionalSecurityInfoType ;union {RPC_HTTP_TRANSPORT_CREDENTIALS_A *HttpCredentials ;}u ;}RPC_SECURITY_QOS_V2_A ;
typedef struct _RPC_SECURITY_QOS_V2_A {unsigned long Version ;unsigned long Capabilities ;unsigned long IdentityTracking ;unsigned long ImpersonationType ;unsigned long AdditionalSecurityInfoType ;union {RPC_HTTP_TRANSPORT_CREDENTIALS_A *HttpCredentials ;}u ;}*PRPC_SECURITY_QOS_V2_A ;

typedef struct _RPC_SECURITY_QOS_V3_W {unsigned long Version ;unsigned long Capabilities ;unsigned long IdentityTracking ;unsigned long ImpersonationType ;unsigned long AdditionalSecurityInfoType ;union {RPC_HTTP_TRANSPORT_CREDENTIALS_W *HttpCredentials ;}u ;void *Sid ;}RPC_SECURITY_QOS_V3_W ;
typedef struct _RPC_SECURITY_QOS_V3_W {unsigned long Version ;unsigned long Capabilities ;unsigned long IdentityTracking ;unsigned long ImpersonationType ;unsigned long AdditionalSecurityInfoType ;union {RPC_HTTP_TRANSPORT_CREDENTIALS_W *HttpCredentials ;}u ;void *Sid ;}*PRPC_SECURITY_QOS_V3_W ;

typedef struct _RPC_SECURITY_QOS_V3_A {unsigned long Version ;unsigned long Capabilities ;unsigned long IdentityTracking ;unsigned long ImpersonationType ;unsigned long AdditionalSecurityInfoType ;union {RPC_HTTP_TRANSPORT_CREDENTIALS_A *HttpCredentials ;}u ;void *Sid ;}RPC_SECURITY_QOS_V3_A ;
typedef struct _RPC_SECURITY_QOS_V3_A {unsigned long Version ;unsigned long Capabilities ;unsigned long IdentityTracking ;unsigned long ImpersonationType ;unsigned long AdditionalSecurityInfoType ;union {RPC_HTTP_TRANSPORT_CREDENTIALS_A *HttpCredentials ;}u ;void *Sid ;}*PRPC_SECURITY_QOS_V3_A ;

typedef enum _RPC_HTTP_REDIRECTOR_STAGE {RPCHTTP_RS_REDIRECT =1 ,RPCHTTP_RS_ACCESS_1 ,RPCHTTP_RS_SESSION ,RPCHTTP_RS_ACCESS_2 ,RPCHTTP_RS_INTERFACE }RPC_HTTP_REDIRECTOR_STAGE ;
typedef RPC_STATUS (*RPC_NEW_HTTP_PROXY_CHANNEL )(RPC_HTTP_REDIRECTOR_STAGE RedirectorStage ,unsigned short *ServerName ,unsigned short *ServerPort ,unsigned short *RemoteUser ,unsigned short *AuthType ,void *ResourceUuid ,void *Metadata ,void *SessionId ,void *Interface ,void *Reserved ,unsigned long Flags ,unsigned short **NewServerName ,unsigned short **NewServerPort );
typedef void (*RPC_HTTP_PROXY_FREE_STRING )(unsigned short *String );
RPC_STATUS RpcImpersonateClient (RPC_BINDING_HANDLE BindingHandle );
RPC_STATUS RpcRevertToSelfEx (RPC_BINDING_HANDLE BindingHandle );
RPC_STATUS RpcRevertToSelf ();
RPC_STATUS RpcBindingInqAuthClientA (RPC_BINDING_HANDLE ClientBinding ,RPC_AUTHZ_HANDLE *Privs ,RPC_CSTR *ServerPrincName ,unsigned long *AuthnLevel ,unsigned long *AuthnSvc ,unsigned long *AuthzSvc );
RPC_STATUS RpcBindingInqAuthClientW (RPC_BINDING_HANDLE ClientBinding ,RPC_AUTHZ_HANDLE *Privs ,RPC_WSTR *ServerPrincName ,unsigned long *AuthnLevel ,unsigned long *AuthnSvc ,unsigned long *AuthzSvc );
RPC_STATUS RpcBindingInqAuthClientExA (RPC_BINDING_HANDLE ClientBinding ,RPC_AUTHZ_HANDLE *Privs ,RPC_CSTR *ServerPrincName ,unsigned long *AuthnLevel ,unsigned long *AuthnSvc ,unsigned long *AuthzSvc ,unsigned long Flags );
RPC_STATUS RpcBindingInqAuthClientExW (RPC_BINDING_HANDLE ClientBinding ,RPC_AUTHZ_HANDLE *Privs ,RPC_WSTR *ServerPrincName ,unsigned long *AuthnLevel ,unsigned long *AuthnSvc ,unsigned long *AuthzSvc ,unsigned long Flags );
RPC_STATUS RpcBindingInqAuthInfoA (RPC_BINDING_HANDLE Binding ,RPC_CSTR *ServerPrincName ,unsigned long *AuthnLevel ,unsigned long *AuthnSvc ,RPC_AUTH_IDENTITY_HANDLE *AuthIdentity ,unsigned long *AuthzSvc );
RPC_STATUS RpcBindingInqAuthInfoW (RPC_BINDING_HANDLE Binding ,RPC_WSTR *ServerPrincName ,unsigned long *AuthnLevel ,unsigned long *AuthnSvc ,RPC_AUTH_IDENTITY_HANDLE *AuthIdentity ,unsigned long *AuthzSvc );
RPC_STATUS RpcBindingSetAuthInfoA (RPC_BINDING_HANDLE Binding ,RPC_CSTR ServerPrincName ,unsigned long AuthnLevel ,unsigned long AuthnSvc ,RPC_AUTH_IDENTITY_HANDLE AuthIdentity ,unsigned long AuthzSvc );
RPC_STATUS RpcBindingSetAuthInfoExA (RPC_BINDING_HANDLE Binding ,RPC_CSTR ServerPrincName ,unsigned long AuthnLevel ,unsigned long AuthnSvc ,RPC_AUTH_IDENTITY_HANDLE AuthIdentity ,unsigned long AuthzSvc ,RPC_SECURITY_QOS *SecurityQos );
RPC_STATUS RpcBindingSetAuthInfoW (RPC_BINDING_HANDLE Binding ,RPC_WSTR ServerPrincName ,unsigned long AuthnLevel ,unsigned long AuthnSvc ,RPC_AUTH_IDENTITY_HANDLE AuthIdentity ,unsigned long AuthzSvc );
RPC_STATUS RpcBindingSetAuthInfoExW (RPC_BINDING_HANDLE Binding ,RPC_WSTR ServerPrincName ,unsigned long AuthnLevel ,unsigned long AuthnSvc ,RPC_AUTH_IDENTITY_HANDLE AuthIdentity ,unsigned long AuthzSvc ,RPC_SECURITY_QOS *SecurityQOS );
RPC_STATUS RpcBindingInqAuthInfoExA (RPC_BINDING_HANDLE Binding ,RPC_CSTR *ServerPrincName ,unsigned long *AuthnLevel ,unsigned long *AuthnSvc ,RPC_AUTH_IDENTITY_HANDLE *AuthIdentity ,unsigned long *AuthzSvc ,unsigned long RpcQosVersion ,RPC_SECURITY_QOS *SecurityQOS );
RPC_STATUS RpcBindingInqAuthInfoExW (RPC_BINDING_HANDLE Binding ,RPC_WSTR *ServerPrincName ,unsigned long *AuthnLevel ,unsigned long *AuthnSvc ,RPC_AUTH_IDENTITY_HANDLE *AuthIdentity ,unsigned long *AuthzSvc ,unsigned long RpcQosVersion ,RPC_SECURITY_QOS *SecurityQOS );
typedef void (*RPC_AUTH_KEY_RETRIEVAL_FN )(void *Arg ,unsigned short *ServerPrincName ,unsigned long KeyVer ,void **Key ,RPC_STATUS *Status );
RPC_STATUS RpcServerRegisterAuthInfoA (RPC_CSTR ServerPrincName ,unsigned long AuthnSvc ,RPC_AUTH_KEY_RETRIEVAL_FN GetKeyFn ,void *Arg );
RPC_STATUS RpcServerRegisterAuthInfoW (RPC_WSTR ServerPrincName ,unsigned long AuthnSvc ,RPC_AUTH_KEY_RETRIEVAL_FN GetKeyFn ,void *Arg );
typedef struct {unsigned char *UserName ;unsigned char *ComputerName ;unsigned short Privilege ;unsigned long AuthFlags ;}RPC_CLIENT_INFORMATION1 ;
typedef struct {unsigned char *UserName ;unsigned char *ComputerName ;unsigned short Privilege ;unsigned long AuthFlags ;}*PRPC_CLIENT_INFORMATION1 ;

RPC_STATUS RpcBindingServerFromClient (RPC_BINDING_HANDLE ClientBinding ,RPC_BINDING_HANDLE *ServerBinding );
void RpcRaiseException (RPC_STATUS exception );
RPC_STATUS RpcTestCancel ();
RPC_STATUS RpcServerTestCancel (RPC_BINDING_HANDLE BindingHandle );
RPC_STATUS RpcCancelThread (void *Thread );
RPC_STATUS RpcCancelThreadEx (void *Thread ,long Timeout );
RPC_STATUS UuidCreate (UUID *Uuid );
RPC_STATUS UuidCreateSequential (UUID *Uuid );
RPC_STATUS UuidToStringA (UUID *Uuid ,RPC_CSTR *StringUuid );
RPC_STATUS UuidFromStringA (RPC_CSTR StringUuid ,UUID *Uuid );
RPC_STATUS UuidToStringW (UUID *Uuid ,RPC_WSTR *StringUuid );
RPC_STATUS UuidFromStringW (RPC_WSTR StringUuid ,UUID *Uuid );
signed int UuidCompare (UUID *Uuid1 ,UUID *Uuid2 ,RPC_STATUS *Status );
RPC_STATUS UuidCreateNil (UUID *NilUuid );
int UuidEqual (UUID *Uuid1 ,UUID *Uuid2 ,RPC_STATUS *Status );
unsigned short UuidHash (UUID *Uuid ,RPC_STATUS *Status );
int UuidIsNil (UUID *Uuid ,RPC_STATUS *Status );
RPC_STATUS RpcEpRegisterNoReplaceA (RPC_IF_HANDLE IfSpec ,RPC_BINDING_VECTOR *BindingVector ,UUID_VECTOR *UuidVector ,RPC_CSTR Annotation );
RPC_STATUS RpcEpRegisterNoReplaceW (RPC_IF_HANDLE IfSpec ,RPC_BINDING_VECTOR *BindingVector ,UUID_VECTOR *UuidVector ,RPC_WSTR Annotation );
RPC_STATUS RpcEpRegisterA (RPC_IF_HANDLE IfSpec ,RPC_BINDING_VECTOR *BindingVector ,UUID_VECTOR *UuidVector ,RPC_CSTR Annotation );
RPC_STATUS RpcEpRegisterW (RPC_IF_HANDLE IfSpec ,RPC_BINDING_VECTOR *BindingVector ,UUID_VECTOR *UuidVector ,RPC_WSTR Annotation );
RPC_STATUS RpcEpUnregister (RPC_IF_HANDLE IfSpec ,RPC_BINDING_VECTOR *BindingVector ,UUID_VECTOR *UuidVector );
RPC_STATUS DceErrorInqTextA (RPC_STATUS RpcStatus ,RPC_CSTR ErrorText );
RPC_STATUS DceErrorInqTextW (RPC_STATUS RpcStatus ,RPC_WSTR ErrorText );
typedef I_RPC_HANDLE *RPC_EP_INQ_HANDLE ;
RPC_STATUS RpcMgmtEpEltInqBegin (RPC_BINDING_HANDLE EpBinding ,unsigned long InquiryType ,RPC_IF_ID *IfId ,unsigned long VersOption ,UUID *ObjectUuid ,RPC_EP_INQ_HANDLE *InquiryContext );
RPC_STATUS RpcMgmtEpEltInqDone (RPC_EP_INQ_HANDLE *InquiryContext );
RPC_STATUS RpcMgmtEpEltInqNextA (RPC_EP_INQ_HANDLE InquiryContext ,RPC_IF_ID *IfId ,RPC_BINDING_HANDLE *Binding ,UUID *ObjectUuid ,RPC_CSTR *Annotation );
RPC_STATUS RpcMgmtEpEltInqNextW (RPC_EP_INQ_HANDLE InquiryContext ,RPC_IF_ID *IfId ,RPC_BINDING_HANDLE *Binding ,UUID *ObjectUuid ,RPC_WSTR *Annotation );
RPC_STATUS RpcMgmtEpUnregister (RPC_BINDING_HANDLE EpBinding ,RPC_IF_ID *IfId ,RPC_BINDING_HANDLE Binding ,UUID *ObjectUuid );
typedef int (*RPC_MGMT_AUTHORIZATION_FN )(RPC_BINDING_HANDLE ClientBinding ,unsigned long RequestedMgmtOperation ,RPC_STATUS *Status );
RPC_STATUS RpcMgmtSetAuthorizationFn (RPC_MGMT_AUTHORIZATION_FN AuthorizationFn );
// m:\mingw\x86_64-w64-mingw32\include\rpcdcep.h

typedef struct _RPC_VERSION {unsigned short MajorVersion ;unsigned short MinorVersion ;}RPC_VERSION ;
typedef struct _RPC_SYNTAX_IDENTIFIER {GUID SyntaxGUID ;RPC_VERSION SyntaxVersion ;}RPC_SYNTAX_IDENTIFIER ;
typedef struct _RPC_SYNTAX_IDENTIFIER {GUID SyntaxGUID ;RPC_VERSION SyntaxVersion ;}*PRPC_SYNTAX_IDENTIFIER ;

typedef struct _RPC_MESSAGE {RPC_BINDING_HANDLE Handle ;unsigned long DataRepresentation ;void *Buffer ;unsigned int BufferLength ;unsigned int ProcNum ;PRPC_SYNTAX_IDENTIFIER TransferSyntax ;void *RpcInterfaceInformation ;void *ReservedForRuntime ;void *ManagerEpv ;void *ImportContext ;unsigned long RpcFlags ;}RPC_MESSAGE ;
typedef struct _RPC_MESSAGE {RPC_BINDING_HANDLE Handle ;unsigned long DataRepresentation ;void *Buffer ;unsigned int BufferLength ;unsigned int ProcNum ;PRPC_SYNTAX_IDENTIFIER TransferSyntax ;void *RpcInterfaceInformation ;void *ReservedForRuntime ;void *ManagerEpv ;void *ImportContext ;unsigned long RpcFlags ;}*PRPC_MESSAGE ;

typedef RPC_STATUS RPC_FORWARD_FUNCTION (UUID *InterfaceId ,RPC_VERSION *InterfaceVersion ,UUID *ObjectId ,unsigned char *Rpcpro ,void **ppDestEndpoint );
enum RPC_ADDRESS_CHANGE_TYPE {PROTOCOL_NOT_LOADED =1 ,PROTOCOL_LOADED ,PROTOCOL_ADDRESS_CHANGE };
typedef void RPC_ADDRESS_CHANGE_FN (void *arg );
typedef void (*RPC_DISPATCH_FUNCTION )(PRPC_MESSAGE Message );
typedef struct {unsigned int DispatchTableCount ;RPC_DISPATCH_FUNCTION *DispatchTable ;LONG_PTR Reserved ;}RPC_DISPATCH_TABLE ;
typedef struct {unsigned int DispatchTableCount ;RPC_DISPATCH_FUNCTION *DispatchTable ;LONG_PTR Reserved ;}*PRPC_DISPATCH_TABLE ;

typedef struct _RPC_PROTSEQ_ENDPOINT {unsigned char *RpcProtocolSequence ;unsigned char *Endpoint ;}RPC_PROTSEQ_ENDPOINT ;
typedef struct _RPC_PROTSEQ_ENDPOINT {unsigned char *RpcProtocolSequence ;unsigned char *Endpoint ;}*PRPC_PROTSEQ_ENDPOINT ;

typedef struct _RPC_SERVER_INTERFACE {unsigned int Length ;RPC_SYNTAX_IDENTIFIER InterfaceId ;RPC_SYNTAX_IDENTIFIER TransferSyntax ;PRPC_DISPATCH_TABLE DispatchTable ;unsigned int RpcProtseqEndpointCount ;PRPC_PROTSEQ_ENDPOINT RpcProtseqEndpoint ;void *DefaultManagerEpv ;void const *InterpreterInfo ;unsigned int Flags ;}RPC_SERVER_INTERFACE ;
typedef struct _RPC_SERVER_INTERFACE {unsigned int Length ;RPC_SYNTAX_IDENTIFIER InterfaceId ;RPC_SYNTAX_IDENTIFIER TransferSyntax ;PRPC_DISPATCH_TABLE DispatchTable ;unsigned int RpcProtseqEndpointCount ;PRPC_PROTSEQ_ENDPOINT RpcProtseqEndpoint ;void *DefaultManagerEpv ;void const *InterpreterInfo ;unsigned int Flags ;}*PRPC_SERVER_INTERFACE ;

typedef struct _RPC_CLIENT_INTERFACE {unsigned int Length ;RPC_SYNTAX_IDENTIFIER InterfaceId ;RPC_SYNTAX_IDENTIFIER TransferSyntax ;PRPC_DISPATCH_TABLE DispatchTable ;unsigned int RpcProtseqEndpointCount ;PRPC_PROTSEQ_ENDPOINT RpcProtseqEndpoint ;ULONG_PTR Reserved ;void const *InterpreterInfo ;unsigned int Flags ;}RPC_CLIENT_INTERFACE ;
typedef struct _RPC_CLIENT_INTERFACE {unsigned int Length ;RPC_SYNTAX_IDENTIFIER InterfaceId ;RPC_SYNTAX_IDENTIFIER TransferSyntax ;PRPC_DISPATCH_TABLE DispatchTable ;unsigned int RpcProtseqEndpointCount ;PRPC_PROTSEQ_ENDPOINT RpcProtseqEndpoint ;ULONG_PTR Reserved ;void const *InterpreterInfo ;unsigned int Flags ;}*PRPC_CLIENT_INTERFACE ;

RPC_STATUS I_RpcNegotiateTransferSyntax (RPC_MESSAGE *Message );
RPC_STATUS I_RpcGetBuffer (RPC_MESSAGE *Message );
RPC_STATUS I_RpcGetBufferWithObject (RPC_MESSAGE *Message ,UUID *ObjectUuid );
RPC_STATUS I_RpcSendReceive (RPC_MESSAGE *Message );
RPC_STATUS I_RpcFreeBuffer (RPC_MESSAGE *Message );
RPC_STATUS I_RpcSend (PRPC_MESSAGE Message );
RPC_STATUS I_RpcReceive (PRPC_MESSAGE Message ,unsigned int Size );
RPC_STATUS I_RpcFreePipeBuffer (RPC_MESSAGE *Message );
RPC_STATUS I_RpcReallocPipeBuffer (PRPC_MESSAGE Message ,unsigned int NewSize );
typedef void *I_RPC_MUTEX ;
void I_RpcRequestMutex (I_RPC_MUTEX *Mutex );
void I_RpcClearMutex (I_RPC_MUTEX Mutex );
void I_RpcDeleteMutex (I_RPC_MUTEX Mutex );
void *I_RpcAllocate (unsigned int Size );
void I_RpcFree (void *Object );
void I_RpcPauseExecution (unsigned long Milliseconds );
RPC_STATUS I_RpcGetExtendedError ();
typedef void (*PRPC_RUNDOWN )(void *AssociationContext );
RPC_STATUS I_RpcMonitorAssociation (RPC_BINDING_HANDLE Handle ,PRPC_RUNDOWN RundownRoutine ,void *Context );
RPC_STATUS I_RpcStopMonitorAssociation (RPC_BINDING_HANDLE Handle );
RPC_BINDING_HANDLE I_RpcGetCurrentCallHandle (void );
RPC_STATUS I_RpcGetAssociationContext (RPC_BINDING_HANDLE BindingHandle ,void **AssociationContext );
void *I_RpcGetServerContextList (RPC_BINDING_HANDLE BindingHandle );
void I_RpcSetServerContextList (RPC_BINDING_HANDLE BindingHandle ,void *ServerContextList );
RPC_STATUS I_RpcNsInterfaceExported (unsigned long EntryNameSyntax ,unsigned short *EntryName ,RPC_SERVER_INTERFACE *RpcInterfaceInformation );
RPC_STATUS I_RpcNsInterfaceUnexported (unsigned long EntryNameSyntax ,unsigned short *EntryName ,RPC_SERVER_INTERFACE *RpcInterfaceInformation );
RPC_STATUS I_RpcBindingToStaticStringBindingW (RPC_BINDING_HANDLE Binding ,unsigned short **StringBinding );
RPC_STATUS I_RpcBindingInqSecurityContext (RPC_BINDING_HANDLE Binding ,void **SecurityContextHandle );
RPC_STATUS I_RpcBindingInqWireIdForSnego (RPC_BINDING_HANDLE Binding ,RPC_CSTR WireId );
RPC_STATUS I_RpcBindingInqMarshalledTargetInfo (RPC_BINDING_HANDLE Binding ,unsigned long *MarshalledTargetInfoLength ,RPC_CSTR *MarshalledTargetInfo );
RPC_STATUS I_RpcBindingInqLocalClientPID (RPC_BINDING_HANDLE Binding ,unsigned long *Pid );
RPC_STATUS I_RpcBindingHandleToAsyncHandle (RPC_BINDING_HANDLE Binding ,void **AsyncHandle );
RPC_STATUS I_RpcNsBindingSetEntryNameW (RPC_BINDING_HANDLE Binding ,unsigned long EntryNameSyntax ,RPC_WSTR EntryName );
RPC_STATUS I_RpcNsBindingSetEntryNameA (RPC_BINDING_HANDLE Binding ,unsigned long EntryNameSyntax ,RPC_CSTR EntryName );
RPC_STATUS I_RpcServerUseProtseqEp2A (RPC_CSTR NetworkAddress ,RPC_CSTR Protseq ,unsigned int MaxCalls ,RPC_CSTR Endpoint ,void *SecurityDescriptor ,void *Policy );
RPC_STATUS I_RpcServerUseProtseqEp2W (RPC_WSTR NetworkAddress ,RPC_WSTR Protseq ,unsigned int MaxCalls ,RPC_WSTR Endpoint ,void *SecurityDescriptor ,void *Policy );
RPC_STATUS I_RpcServerUseProtseq2W (RPC_WSTR NetworkAddress ,RPC_WSTR Protseq ,unsigned int MaxCalls ,void *SecurityDescriptor ,void *Policy );
RPC_STATUS I_RpcServerUseProtseq2A (RPC_CSTR NetworkAddress ,RPC_CSTR Protseq ,unsigned int MaxCalls ,void *SecurityDescriptor ,void *Policy );
RPC_STATUS I_RpcBindingInqDynamicEndpointW (RPC_BINDING_HANDLE Binding ,RPC_WSTR *DynamicEndpoint );
RPC_STATUS I_RpcBindingInqDynamicEndpointA (RPC_BINDING_HANDLE Binding ,RPC_CSTR *DynamicEndpoint );
RPC_STATUS I_RpcServerCheckClientRestriction (RPC_BINDING_HANDLE Context );
RPC_STATUS I_RpcBindingInqTransportType (RPC_BINDING_HANDLE Binding ,unsigned int *Type );
typedef struct _RPC_TRANSFER_SYNTAX {UUID Uuid ;unsigned short VersMajor ;unsigned short VersMinor ;}RPC_TRANSFER_SYNTAX ;
RPC_STATUS I_RpcIfInqTransferSyntaxes (RPC_IF_HANDLE RpcIfHandle ,RPC_TRANSFER_SYNTAX *TransferSyntaxes ,unsigned int TransferSyntaxSize ,unsigned int *TransferSyntaxCount );
RPC_STATUS I_UuidCreate (UUID *Uuid );
RPC_STATUS I_RpcBindingCopy (RPC_BINDING_HANDLE SourceBinding ,RPC_BINDING_HANDLE *DestinationBinding );
RPC_STATUS I_RpcBindingIsClientLocal (RPC_BINDING_HANDLE BindingHandle ,unsigned int *ClientLocalFlag );
RPC_STATUS I_RpcBindingInqConnId (RPC_BINDING_HANDLE Binding ,void **ConnId ,int *pfFirstCall );
void I_RpcSsDontSerializeContext (void );
RPC_STATUS I_RpcLaunchDatagramReceiveThread (void *pAddress );
RPC_STATUS I_RpcServerRegisterForwardFunction (RPC_FORWARD_FUNCTION *pForwardFunction );
RPC_ADDRESS_CHANGE_FN *I_RpcServerInqAddressChangeFn ();
RPC_STATUS I_RpcServerSetAddressChangeFn (RPC_ADDRESS_CHANGE_FN *pAddressChangeFn );
RPC_STATUS I_RpcServerInqLocalConnAddress (RPC_BINDING_HANDLE Binding ,void *Buffer ,unsigned long *BufferSize ,unsigned long *AddressFormat );
void I_RpcSessionStrictContextHandle ();
RPC_STATUS I_RpcTurnOnEEInfoPropagation (void );
RPC_STATUS I_RpcConnectionInqSockBuffSize (unsigned long *RecvBuffSize ,unsigned long *SendBuffSize );
RPC_STATUS I_RpcConnectionSetSockBuffSize (unsigned long RecvBuffSize ,unsigned long SendBuffSize );
typedef void (*RPCLT_PDU_FILTER_FUNC )(void *Buffer ,unsigned int BufferLength ,int fDatagram );
typedef void (*RPC_SETFILTER_FUNC )(RPCLT_PDU_FILTER_FUNC pfnFilter );
RPC_STATUS I_RpcServerStartListening (void *hWnd );
RPC_STATUS I_RpcServerStopListening ();
typedef RPC_STATUS (*RPC_BLOCKING_FN )(void *hWnd ,void *Context ,void *hSyncEvent );
RPC_STATUS I_RpcBindingSetAsync (RPC_BINDING_HANDLE Binding ,RPC_BLOCKING_FN BlockingFn ,unsigned long ServerTid );
RPC_STATUS I_RpcSetThreadParams (int fClientFree ,void *Context ,void *hWndClient );
unsigned int I_RpcWindowProc (void *hWnd ,unsigned int Message ,unsigned int wParam ,unsigned long lParam );
RPC_STATUS I_RpcServerUnregisterEndpointA (RPC_CSTR Protseq ,RPC_CSTR Endpoint );
RPC_STATUS I_RpcServerUnregisterEndpointW (RPC_WSTR Protseq ,RPC_WSTR Endpoint );
RPC_STATUS I_RpcServerInqTransportType (unsigned int *Type );
long I_RpcMapWin32Status (RPC_STATUS Status );
typedef struct _RPC_C_OPT_METADATA_DESCRIPTOR {unsigned long BufferSize ;char *Buffer ;}RPC_C_OPT_METADATA_DESCRIPTOR ;
typedef struct _RDR_CALLOUT_STATE {RPC_STATUS LastError ;void *LastEEInfo ;RPC_HTTP_REDIRECTOR_STAGE LastCalledStage ;unsigned short *ServerName ;unsigned short *ServerPort ;unsigned short *RemoteUser ;unsigned short *AuthType ;unsigned char ResourceTypePresent ;unsigned char MetadataPresent ;unsigned char SessionIdPresent ;unsigned char InterfacePresent ;UUID ResourceType ;RPC_C_OPT_METADATA_DESCRIPTOR Metadata ;UUID SessionId ;RPC_SYNTAX_IDENTIFIER Interface ;void *CertContext ;}RDR_CALLOUT_STATE ;
typedef RPC_STATUS (*I_RpcProxyIsValidMachineFn )(char *pszMachine ,char *pszDotMachine ,unsigned long dwPortNumber );
typedef RPC_STATUS (*I_RpcProxyGetClientAddressFn )(void *Context ,char *Buffer ,unsigned long *BufferLength );
typedef RPC_STATUS (*I_RpcProxyGetConnectionTimeoutFn )(unsigned long *ConnectionTimeout );
typedef RPC_STATUS (*I_RpcPerformCalloutFn )(void *Context ,RDR_CALLOUT_STATE *CallOutState ,RPC_HTTP_REDIRECTOR_STAGE Stage );
typedef void (*I_RpcFreeCalloutStateFn )(RDR_CALLOUT_STATE *CallOutState );
typedef struct tagI_RpcProxyCallbackInterface {I_RpcProxyIsValidMachineFn IsValidMachineFn ;I_RpcProxyGetClientAddressFn GetClientAddressFn ;I_RpcProxyGetConnectionTimeoutFn GetConnectionTimeoutFn ;I_RpcPerformCalloutFn PerformCalloutFn ;I_RpcFreeCalloutStateFn FreeCalloutStateFn ;}I_RpcProxyCallbackInterface ;
RPC_STATUS I_RpcProxyNewConnection (unsigned long ConnectionType ,unsigned short *ServerAddress ,unsigned short *ServerPort ,unsigned short *MinConnTimeout ,void *ConnectionParameter ,RDR_CALLOUT_STATE *CallOutState ,I_RpcProxyCallbackInterface *ProxyCallbackInterface );
RPC_STATUS I_RpcReplyToClientWithStatus (void *ConnectionParameter ,RPC_STATUS RpcStatus );
void I_RpcRecordCalloutFailure (RPC_STATUS RpcStatus ,RDR_CALLOUT_STATE *CallOutState ,unsigned short *DllName );
// m:\mingw\x86_64-w64-mingw32\include\rpcnsi.h

typedef void *RPC_NS_HANDLE ;
RPC_STATUS RpcNsBindingExportA (unsigned long EntryNameSyntax ,RPC_CSTR EntryName ,RPC_IF_HANDLE IfSpec ,RPC_BINDING_VECTOR *BindingVec ,UUID_VECTOR *ObjectUuidVec );
RPC_STATUS RpcNsBindingUnexportA (unsigned long EntryNameSyntax ,RPC_CSTR EntryName ,RPC_IF_HANDLE IfSpec ,UUID_VECTOR *ObjectUuidVec );
RPC_STATUS RpcNsBindingExportW (unsigned long EntryNameSyntax ,RPC_WSTR EntryName ,RPC_IF_HANDLE IfSpec ,RPC_BINDING_VECTOR *BindingVec ,UUID_VECTOR *ObjectUuidVec );
RPC_STATUS RpcNsBindingUnexportW (unsigned long EntryNameSyntax ,RPC_WSTR EntryName ,RPC_IF_HANDLE IfSpec ,UUID_VECTOR *ObjectUuidVec );
RPC_STATUS RpcNsBindingExportPnPA (unsigned long EntryNameSyntax ,RPC_CSTR EntryName ,RPC_IF_HANDLE IfSpec ,UUID_VECTOR *ObjectVector );
RPC_STATUS RpcNsBindingUnexportPnPA (unsigned long EntryNameSyntax ,RPC_CSTR EntryName ,RPC_IF_HANDLE IfSpec ,UUID_VECTOR *ObjectVector );
RPC_STATUS RpcNsBindingExportPnPW (unsigned long EntryNameSyntax ,RPC_WSTR EntryName ,RPC_IF_HANDLE IfSpec ,UUID_VECTOR *ObjectVector );
RPC_STATUS RpcNsBindingUnexportPnPW (unsigned long EntryNameSyntax ,RPC_WSTR EntryName ,RPC_IF_HANDLE IfSpec ,UUID_VECTOR *ObjectVector );
RPC_STATUS RpcNsBindingLookupBeginA (unsigned long EntryNameSyntax ,RPC_CSTR EntryName ,RPC_IF_HANDLE IfSpec ,UUID *ObjUuid ,unsigned long BindingMaxCount ,RPC_NS_HANDLE *LookupContext );
RPC_STATUS RpcNsBindingLookupBeginW (unsigned long EntryNameSyntax ,RPC_WSTR EntryName ,RPC_IF_HANDLE IfSpec ,UUID *ObjUuid ,unsigned long BindingMaxCount ,RPC_NS_HANDLE *LookupContext );
RPC_STATUS RpcNsBindingLookupNext (RPC_NS_HANDLE LookupContext ,RPC_BINDING_VECTOR **BindingVec );
RPC_STATUS RpcNsBindingLookupDone (RPC_NS_HANDLE *LookupContext );
RPC_STATUS RpcNsGroupDeleteA (unsigned long GroupNameSyntax ,RPC_CSTR GroupName );
RPC_STATUS RpcNsGroupMbrAddA (unsigned long GroupNameSyntax ,RPC_CSTR GroupName ,unsigned long MemberNameSyntax ,RPC_CSTR MemberName );
RPC_STATUS RpcNsGroupMbrRemoveA (unsigned long GroupNameSyntax ,RPC_CSTR GroupName ,unsigned long MemberNameSyntax ,RPC_CSTR MemberName );
RPC_STATUS RpcNsGroupMbrInqBeginA (unsigned long GroupNameSyntax ,RPC_CSTR GroupName ,unsigned long MemberNameSyntax ,RPC_NS_HANDLE *InquiryContext );
RPC_STATUS RpcNsGroupMbrInqNextA (RPC_NS_HANDLE InquiryContext ,RPC_CSTR *MemberName );
RPC_STATUS RpcNsGroupDeleteW (unsigned long GroupNameSyntax ,RPC_WSTR GroupName );
RPC_STATUS RpcNsGroupMbrAddW (unsigned long GroupNameSyntax ,RPC_WSTR GroupName ,unsigned long MemberNameSyntax ,RPC_WSTR MemberName );
RPC_STATUS RpcNsGroupMbrRemoveW (unsigned long GroupNameSyntax ,RPC_WSTR GroupName ,unsigned long MemberNameSyntax ,RPC_WSTR MemberName );
RPC_STATUS RpcNsGroupMbrInqBeginW (unsigned long GroupNameSyntax ,RPC_WSTR GroupName ,unsigned long MemberNameSyntax ,RPC_NS_HANDLE *InquiryContext );
RPC_STATUS RpcNsGroupMbrInqNextW (RPC_NS_HANDLE InquiryContext ,RPC_WSTR *MemberName );
RPC_STATUS RpcNsGroupMbrInqDone (RPC_NS_HANDLE *InquiryContext );
RPC_STATUS RpcNsProfileDeleteA (unsigned long ProfileNameSyntax ,RPC_CSTR ProfileName );
RPC_STATUS RpcNsProfileEltAddA (unsigned long ProfileNameSyntax ,RPC_CSTR ProfileName ,RPC_IF_ID *IfId ,unsigned long MemberNameSyntax ,RPC_CSTR MemberName ,unsigned long Priority ,RPC_CSTR Annotation );
RPC_STATUS RpcNsProfileEltRemoveA (unsigned long ProfileNameSyntax ,RPC_CSTR ProfileName ,RPC_IF_ID *IfId ,unsigned long MemberNameSyntax ,RPC_CSTR MemberName );
RPC_STATUS RpcNsProfileEltInqBeginA (unsigned long ProfileNameSyntax ,RPC_CSTR ProfileName ,unsigned long InquiryType ,RPC_IF_ID *IfId ,unsigned long VersOption ,unsigned long MemberNameSyntax ,RPC_CSTR MemberName ,RPC_NS_HANDLE *InquiryContext );
RPC_STATUS RpcNsProfileEltInqNextA (RPC_NS_HANDLE InquiryContext ,RPC_IF_ID *IfId ,RPC_CSTR *MemberName ,unsigned long *Priority ,RPC_CSTR *Annotation );
RPC_STATUS RpcNsProfileDeleteW (unsigned long ProfileNameSyntax ,RPC_WSTR ProfileName );
RPC_STATUS RpcNsProfileEltAddW (unsigned long ProfileNameSyntax ,RPC_WSTR ProfileName ,RPC_IF_ID *IfId ,unsigned long MemberNameSyntax ,RPC_WSTR MemberName ,unsigned long Priority ,RPC_WSTR Annotation );
RPC_STATUS RpcNsProfileEltRemoveW (unsigned long ProfileNameSyntax ,RPC_WSTR ProfileName ,RPC_IF_ID *IfId ,unsigned long MemberNameSyntax ,RPC_WSTR MemberName );
RPC_STATUS RpcNsProfileEltInqBeginW (unsigned long ProfileNameSyntax ,RPC_WSTR ProfileName ,unsigned long InquiryType ,RPC_IF_ID *IfId ,unsigned long VersOption ,unsigned long MemberNameSyntax ,RPC_WSTR MemberName ,RPC_NS_HANDLE *InquiryContext );
RPC_STATUS RpcNsProfileEltInqNextW (RPC_NS_HANDLE InquiryContext ,RPC_IF_ID *IfId ,RPC_WSTR *MemberName ,unsigned long *Priority ,RPC_WSTR *Annotation );
RPC_STATUS RpcNsProfileEltInqDone (RPC_NS_HANDLE *InquiryContext );
RPC_STATUS RpcNsEntryObjectInqBeginA (unsigned long EntryNameSyntax ,RPC_CSTR EntryName ,RPC_NS_HANDLE *InquiryContext );
RPC_STATUS RpcNsEntryObjectInqBeginW (unsigned long EntryNameSyntax ,RPC_WSTR EntryName ,RPC_NS_HANDLE *InquiryContext );
RPC_STATUS RpcNsEntryObjectInqNext (RPC_NS_HANDLE InquiryContext ,UUID *ObjUuid );
RPC_STATUS RpcNsEntryObjectInqDone (RPC_NS_HANDLE *InquiryContext );
RPC_STATUS RpcNsEntryExpandNameA (unsigned long EntryNameSyntax ,RPC_CSTR EntryName ,RPC_CSTR *ExpandedName );
RPC_STATUS RpcNsMgmtBindingUnexportA (unsigned long EntryNameSyntax ,RPC_CSTR EntryName ,RPC_IF_ID *IfId ,unsigned long VersOption ,UUID_VECTOR *ObjectUuidVec );
RPC_STATUS RpcNsMgmtEntryCreateA (unsigned long EntryNameSyntax ,RPC_CSTR EntryName );
RPC_STATUS RpcNsMgmtEntryDeleteA (unsigned long EntryNameSyntax ,RPC_CSTR EntryName );
RPC_STATUS RpcNsMgmtEntryInqIfIdsA (unsigned long EntryNameSyntax ,RPC_CSTR EntryName ,RPC_IF_ID_VECTOR **IfIdVec );
RPC_STATUS RpcNsMgmtHandleSetExpAge (RPC_NS_HANDLE NsHandle ,unsigned long ExpirationAge );
RPC_STATUS RpcNsMgmtInqExpAge (unsigned long *ExpirationAge );
RPC_STATUS RpcNsMgmtSetExpAge (unsigned long ExpirationAge );
RPC_STATUS RpcNsEntryExpandNameW (unsigned long EntryNameSyntax ,RPC_WSTR EntryName ,RPC_WSTR *ExpandedName );
RPC_STATUS RpcNsMgmtBindingUnexportW (unsigned long EntryNameSyntax ,RPC_WSTR EntryName ,RPC_IF_ID *IfId ,unsigned long VersOption ,UUID_VECTOR *ObjectUuidVec );
RPC_STATUS RpcNsMgmtEntryCreateW (unsigned long EntryNameSyntax ,RPC_WSTR EntryName );
RPC_STATUS RpcNsMgmtEntryDeleteW (unsigned long EntryNameSyntax ,RPC_WSTR EntryName );
RPC_STATUS RpcNsMgmtEntryInqIfIdsW (unsigned long EntryNameSyntax ,RPC_WSTR EntryName ,RPC_IF_ID_VECTOR **IfIdVec );
RPC_STATUS RpcNsBindingImportBeginA (unsigned long EntryNameSyntax ,RPC_CSTR EntryName ,RPC_IF_HANDLE IfSpec ,UUID *ObjUuid ,RPC_NS_HANDLE *ImportContext );
RPC_STATUS RpcNsBindingImportBeginW (unsigned long EntryNameSyntax ,RPC_WSTR EntryName ,RPC_IF_HANDLE IfSpec ,UUID *ObjUuid ,RPC_NS_HANDLE *ImportContext );
RPC_STATUS RpcNsBindingImportNext (RPC_NS_HANDLE ImportContext ,RPC_BINDING_HANDLE *Binding );
RPC_STATUS RpcNsBindingImportDone (RPC_NS_HANDLE *ImportContext );
RPC_STATUS RpcNsBindingSelect (RPC_BINDING_VECTOR *BindingVec ,RPC_BINDING_HANDLE *Binding );
// m:\mingw\x86_64-w64-mingw32\include\shellapi.h

struct HDROP__ {int unused ;};
typedef struct HDROP__ *HDROP ;
UINT DragQueryFileA (HDROP hDrop ,UINT iFile ,LPSTR lpszFile ,UINT cch );
UINT DragQueryFileW (HDROP hDrop ,UINT iFile ,LPWSTR lpszFile ,UINT cch );
WINBOOL DragQueryPoint (HDROP hDrop ,POINT *ppt );
void DragFinish (HDROP hDrop );
void DragAcceptFiles (HWND hWnd ,WINBOOL fAccept );
HINSTANCE ShellExecuteA (HWND hwnd ,LPCSTR lpOperation ,LPCSTR lpFile ,LPCSTR lpParameters ,LPCSTR lpDirectory ,INT nShowCmd );
HINSTANCE ShellExecuteW (HWND hwnd ,LPCWSTR lpOperation ,LPCWSTR lpFile ,LPCWSTR lpParameters ,LPCWSTR lpDirectory ,INT nShowCmd );
HINSTANCE FindExecutableA (LPCSTR lpFile ,LPCSTR lpDirectory ,LPSTR lpResult );
HINSTANCE FindExecutableW (LPCWSTR lpFile ,LPCWSTR lpDirectory ,LPWSTR lpResult );
LPWSTR *CommandLineToArgvW (LPCWSTR lpCmdLine ,int *pNumArgs );
INT ShellAboutA (HWND hWnd ,LPCSTR szApp ,LPCSTR szOtherStuff ,HICON hIcon );
INT ShellAboutW (HWND hWnd ,LPCWSTR szApp ,LPCWSTR szOtherStuff ,HICON hIcon );
HICON DuplicateIcon (HINSTANCE hInst ,HICON hIcon );
HICON ExtractAssociatedIconA (HINSTANCE hInst ,LPSTR pszIconPath ,WORD *piIcon );
HICON ExtractAssociatedIconW (HINSTANCE hInst ,LPWSTR pszIconPath ,WORD *piIcon );
HICON ExtractAssociatedIconExA (HINSTANCE hInst ,LPSTR pszIconPath ,WORD *piIconIndex ,WORD *piIconId );
HICON ExtractAssociatedIconExW (HINSTANCE hInst ,LPWSTR pszIconPath ,WORD *piIconIndex ,WORD *piIconId );
HICON ExtractIconA (HINSTANCE hInst ,LPCSTR pszExeFileName ,UINT nIconIndex );
HICON ExtractIconW (HINSTANCE hInst ,LPCWSTR pszExeFileName ,UINT nIconIndex );
typedef struct _DRAGINFOA {UINT uSize ;POINT pt ;WINBOOL fNC ;LPSTR lpFileList ;DWORD grfKeyState ;}DRAGINFOA ;
typedef struct _DRAGINFOA {UINT uSize ;POINT pt ;WINBOOL fNC ;LPSTR lpFileList ;DWORD grfKeyState ;}*LPDRAGINFOA ;

typedef struct _DRAGINFOW {UINT uSize ;POINT pt ;WINBOOL fNC ;LPWSTR lpFileList ;DWORD grfKeyState ;}DRAGINFOW ;
typedef struct _DRAGINFOW {UINT uSize ;POINT pt ;WINBOOL fNC ;LPWSTR lpFileList ;DWORD grfKeyState ;}*LPDRAGINFOW ;

typedef DRAGINFOA DRAGINFO ;
typedef LPDRAGINFOA LPDRAGINFO ;
typedef struct _AppBarData {DWORD cbSize ;HWND hWnd ;UINT uCallbackMessage ;UINT uEdge ;RECT rc ;LPARAM lParam ;}APPBARDATA ;
typedef struct _AppBarData {DWORD cbSize ;HWND hWnd ;UINT uCallbackMessage ;UINT uEdge ;RECT rc ;LPARAM lParam ;}*PAPPBARDATA ;

UINT_PTR SHAppBarMessage (DWORD dwMessage ,PAPPBARDATA pData );
DWORD DoEnvironmentSubstA (LPSTR pszSrc ,UINT cchSrc );
DWORD DoEnvironmentSubstW (LPWSTR pszSrc ,UINT cchSrc );
UINT ExtractIconExA (LPCSTR lpszFile ,int nIconIndex ,HICON *phiconLarge ,HICON *phiconSmall ,UINT nIcons );
UINT ExtractIconExW (LPCWSTR lpszFile ,int nIconIndex ,HICON *phiconLarge ,HICON *phiconSmall ,UINT nIcons );
typedef WORD FILEOP_FLAGS ;
typedef WORD PRINTEROP_FLAGS ;
typedef struct _SHFILEOPSTRUCTA {HWND hwnd ;UINT wFunc ;LPCSTR pFrom ;LPCSTR pTo ;FILEOP_FLAGS fFlags ;WINBOOL fAnyOperationsAborted ;LPVOID hNameMappings ;PCSTR lpszProgressTitle ;}SHFILEOPSTRUCTA ;
typedef struct _SHFILEOPSTRUCTA {HWND hwnd ;UINT wFunc ;LPCSTR pFrom ;LPCSTR pTo ;FILEOP_FLAGS fFlags ;WINBOOL fAnyOperationsAborted ;LPVOID hNameMappings ;PCSTR lpszProgressTitle ;}*LPSHFILEOPSTRUCTA ;

typedef struct _SHFILEOPSTRUCTW {HWND hwnd ;UINT wFunc ;LPCWSTR pFrom ;LPCWSTR pTo ;FILEOP_FLAGS fFlags ;WINBOOL fAnyOperationsAborted ;LPVOID hNameMappings ;PCWSTR lpszProgressTitle ;}SHFILEOPSTRUCTW ;
typedef struct _SHFILEOPSTRUCTW {HWND hwnd ;UINT wFunc ;LPCWSTR pFrom ;LPCWSTR pTo ;FILEOP_FLAGS fFlags ;WINBOOL fAnyOperationsAborted ;LPVOID hNameMappings ;PCWSTR lpszProgressTitle ;}*LPSHFILEOPSTRUCTW ;

typedef SHFILEOPSTRUCTA SHFILEOPSTRUCT ;
typedef LPSHFILEOPSTRUCTA LPSHFILEOPSTRUCT ;
int SHFileOperationA (LPSHFILEOPSTRUCTA lpFileOp );
int SHFileOperationW (LPSHFILEOPSTRUCTW lpFileOp );
void SHFreeNameMappings (HANDLE hNameMappings );
typedef struct _SHNAMEMAPPINGA {LPSTR pszOldPath ;LPSTR pszNewPath ;int cchOldPath ;int cchNewPath ;}SHNAMEMAPPINGA ;
typedef struct _SHNAMEMAPPINGA {LPSTR pszOldPath ;LPSTR pszNewPath ;int cchOldPath ;int cchNewPath ;}*LPSHNAMEMAPPINGA ;

typedef struct _SHNAMEMAPPINGW {LPWSTR pszOldPath ;LPWSTR pszNewPath ;int cchOldPath ;int cchNewPath ;}SHNAMEMAPPINGW ;
typedef struct _SHNAMEMAPPINGW {LPWSTR pszOldPath ;LPWSTR pszNewPath ;int cchOldPath ;int cchNewPath ;}*LPSHNAMEMAPPINGW ;

typedef SHNAMEMAPPINGA SHNAMEMAPPING ;
typedef LPSHNAMEMAPPINGA LPSHNAMEMAPPING ;
typedef struct _SHELLEXECUTEINFOA {DWORD cbSize ;ULONG fMask ;HWND hwnd ;LPCSTR lpVerb ;LPCSTR lpFile ;LPCSTR lpParameters ;LPCSTR lpDirectory ;int nShow ;HINSTANCE hInstApp ;void *lpIDList ;LPCSTR lpClass ;HKEY hkeyClass ;DWORD dwHotKey ;union {HANDLE hIcon ;HANDLE hMonitor ;};HANDLE hProcess ;}SHELLEXECUTEINFOA ;
typedef struct _SHELLEXECUTEINFOA {DWORD cbSize ;ULONG fMask ;HWND hwnd ;LPCSTR lpVerb ;LPCSTR lpFile ;LPCSTR lpParameters ;LPCSTR lpDirectory ;int nShow ;HINSTANCE hInstApp ;void *lpIDList ;LPCSTR lpClass ;HKEY hkeyClass ;DWORD dwHotKey ;union {HANDLE hIcon ;HANDLE hMonitor ;};HANDLE hProcess ;}*LPSHELLEXECUTEINFOA ;

typedef struct _SHELLEXECUTEINFOW {DWORD cbSize ;ULONG fMask ;HWND hwnd ;LPCWSTR lpVerb ;LPCWSTR lpFile ;LPCWSTR lpParameters ;LPCWSTR lpDirectory ;int nShow ;HINSTANCE hInstApp ;void *lpIDList ;LPCWSTR lpClass ;HKEY hkeyClass ;DWORD dwHotKey ;union {HANDLE hIcon ;HANDLE hMonitor ;};HANDLE hProcess ;}SHELLEXECUTEINFOW ;
typedef struct _SHELLEXECUTEINFOW {DWORD cbSize ;ULONG fMask ;HWND hwnd ;LPCWSTR lpVerb ;LPCWSTR lpFile ;LPCWSTR lpParameters ;LPCWSTR lpDirectory ;int nShow ;HINSTANCE hInstApp ;void *lpIDList ;LPCWSTR lpClass ;HKEY hkeyClass ;DWORD dwHotKey ;union {HANDLE hIcon ;HANDLE hMonitor ;};HANDLE hProcess ;}*LPSHELLEXECUTEINFOW ;

typedef SHELLEXECUTEINFOA SHELLEXECUTEINFO ;
typedef LPSHELLEXECUTEINFOA LPSHELLEXECUTEINFO ;
WINBOOL ShellExecuteExA (SHELLEXECUTEINFOA *pExecInfo );
WINBOOL ShellExecuteExW (SHELLEXECUTEINFOW *pExecInfo );
typedef struct _SHCREATEPROCESSINFOW {DWORD cbSize ;ULONG fMask ;HWND hwnd ;LPCWSTR pszFile ;LPCWSTR pszParameters ;LPCWSTR pszCurrentDirectory ;HANDLE hUserToken ;LPSECURITY_ATTRIBUTES lpProcessAttributes ;LPSECURITY_ATTRIBUTES lpThreadAttributes ;WINBOOL bInheritHandles ;DWORD dwCreationFlags ;LPSTARTUPINFOW lpStartupInfo ;LPPROCESS_INFORMATION lpProcessInformation ;}SHCREATEPROCESSINFOW ;
typedef struct _SHCREATEPROCESSINFOW {DWORD cbSize ;ULONG fMask ;HWND hwnd ;LPCWSTR pszFile ;LPCWSTR pszParameters ;LPCWSTR pszCurrentDirectory ;HANDLE hUserToken ;LPSECURITY_ATTRIBUTES lpProcessAttributes ;LPSECURITY_ATTRIBUTES lpThreadAttributes ;WINBOOL bInheritHandles ;DWORD dwCreationFlags ;LPSTARTUPINFOW lpStartupInfo ;LPPROCESS_INFORMATION lpProcessInformation ;}*PSHCREATEPROCESSINFOW ;

WINBOOL SHCreateProcessAsUserW (PSHCREATEPROCESSINFOW pscpi );
typedef struct _SHQUERYRBINFO {DWORD cbSize ;long long i64Size ;long long i64NumItems ;}SHQUERYRBINFO ;
typedef struct _SHQUERYRBINFO {DWORD cbSize ;long long i64Size ;long long i64NumItems ;}*LPSHQUERYRBINFO ;

HRESULT SHQueryRecycleBinA (LPCSTR pszRootPath ,LPSHQUERYRBINFO pSHQueryRBInfo );
HRESULT SHQueryRecycleBinW (LPCWSTR pszRootPath ,LPSHQUERYRBINFO pSHQueryRBInfo );
HRESULT SHEmptyRecycleBinA (HWND hwnd ,LPCSTR pszRootPath ,DWORD dwFlags );
HRESULT SHEmptyRecycleBinW (HWND hwnd ,LPCWSTR pszRootPath ,DWORD dwFlags );
typedef struct _NOTIFYICONDATAA {DWORD cbSize ;HWND hWnd ;UINT uID ;UINT uFlags ;UINT uCallbackMessage ;HICON hIcon ;CHAR szTip [128 ];DWORD dwState ;DWORD dwStateMask ;CHAR szInfo [256 ];union {UINT uTimeout ;UINT uVersion ;};CHAR szInfoTitle [64 ];DWORD dwInfoFlags ;GUID guidItem ;}NOTIFYICONDATAA ;
typedef struct _NOTIFYICONDATAA {DWORD cbSize ;HWND hWnd ;UINT uID ;UINT uFlags ;UINT uCallbackMessage ;HICON hIcon ;CHAR szTip [128 ];DWORD dwState ;DWORD dwStateMask ;CHAR szInfo [256 ];union {UINT uTimeout ;UINT uVersion ;};CHAR szInfoTitle [64 ];DWORD dwInfoFlags ;GUID guidItem ;}*PNOTIFYICONDATAA ;

typedef struct _NOTIFYICONDATAW {DWORD cbSize ;HWND hWnd ;UINT uID ;UINT uFlags ;UINT uCallbackMessage ;HICON hIcon ;WCHAR szTip [128 ];DWORD dwState ;DWORD dwStateMask ;WCHAR szInfo [256 ];union {UINT uTimeout ;UINT uVersion ;};WCHAR szInfoTitle [64 ];DWORD dwInfoFlags ;GUID guidItem ;}NOTIFYICONDATAW ;
typedef struct _NOTIFYICONDATAW {DWORD cbSize ;HWND hWnd ;UINT uID ;UINT uFlags ;UINT uCallbackMessage ;HICON hIcon ;WCHAR szTip [128 ];DWORD dwState ;DWORD dwStateMask ;WCHAR szInfo [256 ];union {UINT uTimeout ;UINT uVersion ;};WCHAR szInfoTitle [64 ];DWORD dwInfoFlags ;GUID guidItem ;}*PNOTIFYICONDATAW ;

typedef NOTIFYICONDATAA NOTIFYICONDATA ;
typedef PNOTIFYICONDATAA PNOTIFYICONDATA ;
typedef struct _NOTIFYICONIDENTIFIER {DWORD cbSize ;HWND hWnd ;UINT uID ;GUID guidItem ;}NOTIFYICONIDENTIFIER ;
typedef struct _NOTIFYICONIDENTIFIER {DWORD cbSize ;HWND hWnd ;UINT uID ;GUID guidItem ;}*PNOTIFYICONIDENTIFIER ;

WINBOOL Shell_NotifyIconA (DWORD dwMessage ,PNOTIFYICONDATAA lpData );
WINBOOL Shell_NotifyIconW (DWORD dwMessage ,PNOTIFYICONDATAW lpData );
typedef struct _SHFILEINFOA {HICON hIcon ;int iIcon ;DWORD dwAttributes ;CHAR szDisplayName [260 ];CHAR szTypeName [80 ];}SHFILEINFOA ;
typedef struct _SHFILEINFOW {HICON hIcon ;int iIcon ;DWORD dwAttributes ;WCHAR szDisplayName [260 ];WCHAR szTypeName [80 ];}SHFILEINFOW ;
typedef SHFILEINFOA SHFILEINFO ;
DWORD_PTR SHGetFileInfoA (LPCSTR pszPath ,DWORD dwFileAttributes ,SHFILEINFOA *psfi ,UINT cbFileInfo ,UINT uFlags );
DWORD_PTR SHGetFileInfoW (LPCWSTR pszPath ,DWORD dwFileAttributes ,SHFILEINFOW *psfi ,UINT cbFileInfo ,UINT uFlags );
WINBOOL SHGetDiskFreeSpaceExA (LPCSTR pszDirectoryName ,ULARGE_INTEGER *pulFreeBytesAvailableToCaller ,ULARGE_INTEGER *pulTotalNumberOfBytes ,ULARGE_INTEGER *pulTotalNumberOfFreeBytes );
WINBOOL SHGetDiskFreeSpaceExW (LPCWSTR pszDirectoryName ,ULARGE_INTEGER *pulFreeBytesAvailableToCaller ,ULARGE_INTEGER *pulTotalNumberOfBytes ,ULARGE_INTEGER *pulTotalNumberOfFreeBytes );
WINBOOL SHGetNewLinkInfoA (LPCSTR pszLinkTo ,LPCSTR pszDir ,LPSTR pszName ,WINBOOL *pfMustCopy ,UINT uFlags );
WINBOOL SHGetNewLinkInfoW (LPCWSTR pszLinkTo ,LPCWSTR pszDir ,LPWSTR pszName ,WINBOOL *pfMustCopy ,UINT uFlags );
WINBOOL SHInvokePrinterCommandA (HWND hwnd ,UINT uAction ,LPCSTR lpBuf1 ,LPCSTR lpBuf2 ,WINBOOL fModal );
WINBOOL SHInvokePrinterCommandW (HWND hwnd ,UINT uAction ,LPCWSTR lpBuf1 ,LPCWSTR lpBuf2 ,WINBOOL fModal );
HRESULT SHLoadNonloadedIconOverlayIdentifiers (void );
HRESULT SHIsFileAvailableOffline (PCWSTR pwszPath ,DWORD *pdwStatus );
HRESULT SHSetLocalizedName (PCWSTR pszPath ,PCWSTR pszResModule ,int idsRes );
extern int ShellMessageBoxA (HINSTANCE hAppInst ,HWND hWnd ,LPCSTR lpcText ,LPCSTR lpcTitle ,UINT fuStyle ,...);
extern int ShellMessageBoxW (HINSTANCE hAppInst ,HWND hWnd ,LPCWSTR lpcText ,LPCWSTR lpcTitle ,UINT fuStyle ,...);
WINBOOL IsLFNDriveA (LPCSTR pszPath );
WINBOOL IsLFNDriveW (LPCWSTR pszPath );
extern HRESULT SHEnumerateUnreadMailAccountsA (HKEY hKeyUser ,DWORD dwIndex ,LPSTR pszMailAddress ,int cchMailAddress );
extern HRESULT SHEnumerateUnreadMailAccountsW (HKEY hKeyUser ,DWORD dwIndex ,LPWSTR pszMailAddress ,int cchMailAddress );
extern HRESULT SHGetUnreadMailCountA (HKEY hKeyUser ,LPCSTR pszMailAddress ,DWORD *pdwCount ,FILETIME *pFileTime ,LPSTR pszShellExecuteCommand ,int cchShellExecuteCommand );
extern HRESULT SHGetUnreadMailCountW (HKEY hKeyUser ,LPCWSTR pszMailAddress ,DWORD *pdwCount ,FILETIME *pFileTime ,LPWSTR pszShellExecuteCommand ,int cchShellExecuteCommand );
extern HRESULT SHSetUnreadMailCountA (LPCSTR pszMailAddress ,DWORD dwCount ,LPCSTR pszShellExecuteCommand );
extern HRESULT SHSetUnreadMailCountW (LPCWSTR pszMailAddress ,DWORD dwCount ,LPCWSTR pszShellExecuteCommand );
extern WINBOOL SHTestTokenMembership (HANDLE hToken ,ULONG ulRID );
HRESULT SHGetImageList (int iImageList ,const IID *const riid ,void **ppvObj );
typedef HRESULT (*PFNCANSHAREFOLDERW )(PCWSTR pszPath );
typedef HRESULT (*PFNSHOWSHAREFOLDERUIW )(HWND hwndParent ,PCWSTR pszPath );
// m:\mingw\x86_64-w64-mingw32\include\winperf.h

typedef struct _PERF_DATA_BLOCK {WCHAR Signature [4 ];DWORD LittleEndian ;DWORD Version ;DWORD Revision ;DWORD TotalByteLength ;DWORD HeaderLength ;DWORD NumObjectTypes ;LONG DefaultObject ;SYSTEMTIME SystemTime ;LARGE_INTEGER PerfTime ;LARGE_INTEGER PerfFreq ;LARGE_INTEGER PerfTime100nSec ;DWORD SystemNameLength ;DWORD SystemNameOffset ;}PERF_DATA_BLOCK ;
typedef struct _PERF_DATA_BLOCK {WCHAR Signature [4 ];DWORD LittleEndian ;DWORD Version ;DWORD Revision ;DWORD TotalByteLength ;DWORD HeaderLength ;DWORD NumObjectTypes ;LONG DefaultObject ;SYSTEMTIME SystemTime ;LARGE_INTEGER PerfTime ;LARGE_INTEGER PerfFreq ;LARGE_INTEGER PerfTime100nSec ;DWORD SystemNameLength ;DWORD SystemNameOffset ;}*PPERF_DATA_BLOCK ;

typedef struct _PERF_OBJECT_TYPE {DWORD TotalByteLength ;DWORD DefinitionLength ;DWORD HeaderLength ;DWORD ObjectNameTitleIndex ;DWORD ObjectNameTitle ;DWORD ObjectHelpTitleIndex ;DWORD ObjectHelpTitle ;DWORD DetailLevel ;DWORD NumCounters ;LONG DefaultCounter ;LONG NumInstances ;DWORD CodePage ;LARGE_INTEGER PerfTime ;LARGE_INTEGER PerfFreq ;}PERF_OBJECT_TYPE ;
typedef struct _PERF_OBJECT_TYPE {DWORD TotalByteLength ;DWORD DefinitionLength ;DWORD HeaderLength ;DWORD ObjectNameTitleIndex ;DWORD ObjectNameTitle ;DWORD ObjectHelpTitleIndex ;DWORD ObjectHelpTitle ;DWORD DetailLevel ;DWORD NumCounters ;LONG DefaultCounter ;LONG NumInstances ;DWORD CodePage ;LARGE_INTEGER PerfTime ;LARGE_INTEGER PerfFreq ;}*PPERF_OBJECT_TYPE ;

typedef struct _PERF_COUNTER_DEFINITION {DWORD ByteLength ;DWORD CounterNameTitleIndex ;DWORD CounterNameTitle ;DWORD CounterHelpTitleIndex ;DWORD CounterHelpTitle ;LONG DefaultScale ;DWORD DetailLevel ;DWORD CounterType ;DWORD CounterSize ;DWORD CounterOffset ;}PERF_COUNTER_DEFINITION ;
typedef struct _PERF_COUNTER_DEFINITION {DWORD ByteLength ;DWORD CounterNameTitleIndex ;DWORD CounterNameTitle ;DWORD CounterHelpTitleIndex ;DWORD CounterHelpTitle ;LONG DefaultScale ;DWORD DetailLevel ;DWORD CounterType ;DWORD CounterSize ;DWORD CounterOffset ;}*PPERF_COUNTER_DEFINITION ;

typedef struct _PERF_INSTANCE_DEFINITION {DWORD ByteLength ;DWORD ParentObjectTitleIndex ;DWORD ParentObjectInstance ;LONG UniqueID ;DWORD NameOffset ;DWORD NameLength ;}PERF_INSTANCE_DEFINITION ;
typedef struct _PERF_INSTANCE_DEFINITION {DWORD ByteLength ;DWORD ParentObjectTitleIndex ;DWORD ParentObjectInstance ;LONG UniqueID ;DWORD NameOffset ;DWORD NameLength ;}*PPERF_INSTANCE_DEFINITION ;

typedef struct _PERF_COUNTER_BLOCK {DWORD ByteLength ;}PERF_COUNTER_BLOCK ;
typedef struct _PERF_COUNTER_BLOCK {DWORD ByteLength ;}*PPERF_COUNTER_BLOCK ;

typedef DWORD (PM_OPEN_PROC )(LPWSTR );
typedef DWORD (PM_COLLECT_PROC )(LPWSTR ,LPVOID *,LPDWORD ,LPDWORD );
typedef DWORD (PM_CLOSE_PROC )(void );
typedef DWORD (PM_QUERY_PROC )(LPDWORD ,LPVOID *,LPDWORD ,LPDWORD );
// m:\mingw\x86_64-w64-mingw32\include\_bsd_types.h

typedef unsigned char u_char ;
typedef unsigned short u_short ;
typedef unsigned int u_int ;
typedef unsigned long u_long ;
typedef unsigned long long u_int64 ;
// m:\mingw\x86_64-w64-mingw32\include\inaddr.h

typedef struct in_addr {union {struct {u_char s_b1 ,s_b2 ,s_b3 ,s_b4 ;}S_un_b ;struct {u_short s_w1 ,s_w2 ;}S_un_w ;u_long S_addr ;}S_un ;}IN_ADDR ;
typedef struct in_addr {union {struct {u_char s_b1 ,s_b2 ,s_b3 ,s_b4 ;}S_un_b ;struct {u_short s_w1 ,s_w2 ;}S_un_w ;u_long S_addr ;}S_un ;}*PIN_ADDR ;
typedef struct in_addr {union {struct {u_char s_b1 ,s_b2 ,s_b3 ,s_b4 ;}S_un_b ;struct {u_short s_w1 ,s_w2 ;}S_un_w ;u_long S_addr ;}S_un ;}*LPIN_ADDR ;

// m:\mingw\x86_64-w64-mingw32\include\psdk_inc\_socket_types.h

typedef UINT_PTR SOCKET ;
// m:\mingw\x86_64-w64-mingw32\include\psdk_inc\_fd_types.h

typedef struct fd_set {u_int fd_count ;SOCKET fd_array [64 ];}fd_set ;
int __WSAFDIsSet (SOCKET ,fd_set *);
typedef struct fd_set FD_SET ;
typedef struct fd_set *PFD_SET ;
typedef struct fd_set *LPFD_SET ;
// m:\mingw\x86_64-w64-mingw32\include\psdk_inc\_ip_types.h

struct hostent {char *h_name ;char **h_aliases ;short h_addrtype ;short h_length ;char **h_addr_list ;};
struct netent {char *n_name ;char **n_aliases ;short n_addrtype ;u_long n_net ;};
struct servent {char *s_name ;char **s_aliases ;char *s_proto ;short s_port ;};
struct protoent {char *p_name ;char **p_aliases ;short p_proto ;};
struct sockproto {u_short sp_family ;u_short sp_protocol ;};
struct linger {u_short l_onoff ;u_short l_linger ;};
struct sockaddr {u_short sa_family ;char sa_data [14 ];};
struct sockaddr_in {short sin_family ;u_short sin_port ;struct in_addr sin_addr ;char sin_zero [8 ];};
typedef struct hostent HOSTENT ;
typedef struct hostent *PHOSTENT ;
typedef struct hostent *LPHOSTENT ;
typedef struct servent SERVENT ;
typedef struct servent *PSERVENT ;
typedef struct servent *LPSERVENT ;
typedef struct protoent PROTOENT ;
typedef struct protoent *PPROTOENT ;
typedef struct protoent *LPPROTOENT ;
typedef struct sockaddr SOCKADDR ;
typedef struct sockaddr *PSOCKADDR ;
typedef struct sockaddr *LPSOCKADDR ;
typedef struct sockaddr_in SOCKADDR_IN ;
typedef struct sockaddr_in *PSOCKADDR_IN ;
typedef struct sockaddr_in *LPSOCKADDR_IN ;
typedef struct linger LINGER ;
typedef struct linger *PLINGER ;
typedef struct linger *LPLINGER ;
typedef struct timeval TIMEVAL ;
typedef struct timeval *PTIMEVAL ;
typedef struct timeval *LPTIMEVAL ;
// m:\mingw\x86_64-w64-mingw32\include\psdk_inc\_ip_mreq1.h

struct ip_mreq {struct in_addr imr_multiaddr ;struct in_addr imr_interface ;};
// m:\mingw\x86_64-w64-mingw32\include\psdk_inc\_wsadata.h

typedef struct WSAData {WORD wVersion ;WORD wHighVersion ;unsigned short iMaxSockets ;unsigned short iMaxUdpDg ;char *lpVendorInfo ;char szDescription [257 ];char szSystemStatus [129 ];}WSADATA ;
typedef struct WSAData {WORD wVersion ;WORD wHighVersion ;unsigned short iMaxSockets ;unsigned short iMaxUdpDg ;char *lpVendorInfo ;char szDescription [257 ];char szSystemStatus [129 ];}*LPWSADATA ;

// m:\mingw\x86_64-w64-mingw32\include\psdk_inc\_xmitfile.h

typedef struct _TRANSMIT_FILE_BUFFERS {LPVOID Head ;DWORD HeadLength ;LPVOID Tail ;DWORD TailLength ;}TRANSMIT_FILE_BUFFERS ;
typedef struct _TRANSMIT_FILE_BUFFERS {LPVOID Head ;DWORD HeadLength ;LPVOID Tail ;DWORD TailLength ;}*PTRANSMIT_FILE_BUFFERS ;
typedef struct _TRANSMIT_FILE_BUFFERS {LPVOID Head ;DWORD HeadLength ;LPVOID Tail ;DWORD TailLength ;}*LPTRANSMIT_FILE_BUFFERS ;

// m:\mingw\x86_64-w64-mingw32\include\winsock.h

SOCKET accept (SOCKET s ,struct sockaddr *addr ,int *addrlen );
int bind (SOCKET s ,const struct sockaddr *name ,int namelen );
int closesocket (SOCKET s );
int connect (SOCKET s ,const struct sockaddr *name ,int namelen );
int ioctlsocket (SOCKET s ,long cmd ,u_long *argp );
int getpeername (SOCKET s ,struct sockaddr *name ,int *namelen );
int getsockname (SOCKET s ,struct sockaddr *name ,int *namelen );
int getsockopt (SOCKET s ,int level ,int optname ,char *optval ,int *optlen );
u_long htonl (u_long hostlong );
u_short htons (u_short hostshort );
unsigned long inet_addr (const char *cp );
char *inet_ntoa (struct in_addr in );
int listen (SOCKET s ,int backlog );
u_long ntohl (u_long netlong );
u_short ntohs (u_short netshort );
int recv (SOCKET s ,char *buf ,int len ,int flags );
int recvfrom (SOCKET s ,char *buf ,int len ,int flags ,struct sockaddr *from ,int *fromlen );
int select (int nfds ,fd_set *readfds ,fd_set *writefds ,fd_set *exceptfds ,const PTIMEVAL timeout );
int send (SOCKET s ,const char *buf ,int len ,int flags );
int sendto (SOCKET s ,const char *buf ,int len ,int flags ,const struct sockaddr *to ,int tolen );
int setsockopt (SOCKET s ,int level ,int optname ,const char *optval ,int optlen );
int shutdown (SOCKET s ,int how );
SOCKET socket (int af ,int type ,int protocol );
struct hostent *gethostbyaddr (const char *addr ,int len ,int type );
struct hostent *gethostbyname (const char *name );
int gethostname (char *name ,int namelen );
struct servent *getservbyport (int port ,const char *proto );
struct servent *getservbyname (const char *name ,const char *proto );
struct protoent *getprotobynumber (int number );
struct protoent *getprotobyname (const char *name );
int WSAStartup (WORD wVersionRequested ,LPWSADATA lpWSAData );
int WSACleanup (void );
void WSASetLastError (int iError );
int WSAGetLastError (void );
WINBOOL WSAIsBlocking (void );
int WSAUnhookBlockingHook (void );
FARPROC WSASetBlockingHook (FARPROC lpBlockFunc );
int WSACancelBlockingCall (void );
HANDLE WSAAsyncGetServByName (HWND hWnd ,u_int wMsg ,const char *name ,const char *proto ,char *buf ,int buflen );
HANDLE WSAAsyncGetServByPort (HWND hWnd ,u_int wMsg ,int port ,const char *proto ,char *buf ,int buflen );
HANDLE WSAAsyncGetProtoByName (HWND hWnd ,u_int wMsg ,const char *name ,char *buf ,int buflen );
HANDLE WSAAsyncGetProtoByNumber (HWND hWnd ,u_int wMsg ,int number ,char *buf ,int buflen );
HANDLE WSAAsyncGetHostByName (HWND hWnd ,u_int wMsg ,const char *name ,char *buf ,int buflen );
HANDLE WSAAsyncGetHostByAddr (HWND hWnd ,u_int wMsg ,const char *addr ,int len ,int type ,char *buf ,int buflen );
int WSACancelAsyncRequest (HANDLE hAsyncTaskHandle );
int WSAAsyncSelect (SOCKET s ,HWND hWnd ,u_int wMsg ,long lEvent );
int WSARecvEx (SOCKET s ,char *buf ,int len ,int *flags );
WINBOOL TransmitFile (SOCKET hSocket ,HANDLE hFile ,DWORD nNumberOfBytesToWrite ,DWORD nNumberOfBytesPerSend ,LPOVERLAPPED lpOverlapped ,LPTRANSMIT_FILE_BUFFERS lpTransmitBuffers ,DWORD dwReserved );
WINBOOL AcceptEx (SOCKET sListenSocket ,SOCKET sAcceptSocket ,PVOID lpOutputBuffer ,DWORD dwReceiveDataLength ,DWORD dwLocalAddressLength ,DWORD dwRemoteAddressLength ,LPDWORD lpdwBytesReceived ,LPOVERLAPPED lpOverlapped );
void GetAcceptExSockaddrs (PVOID lpOutputBuffer ,DWORD dwReceiveDataLength ,DWORD dwLocalAddressLength ,DWORD dwRemoteAddressLength ,struct sockaddr **LocalSockaddr ,LPINT LocalSockaddrLength ,struct sockaddr **RemoteSockaddr ,LPINT RemoteSockaddrLength );
// m:\mingw\x86_64-w64-mingw32\include\wincrypt.h

typedef unsigned int ALG_ID ;
typedef ULONG_PTR HCRYPTHASH ;
typedef ULONG_PTR HCRYPTKEY ;
typedef ULONG_PTR HCRYPTPROV ;
typedef struct _CMS_KEY_INFO {DWORD dwVersion ;ALG_ID Algid ;BYTE *pbOID ;DWORD cbOID ;}CMS_KEY_INFO ;
typedef struct _CMS_KEY_INFO {DWORD dwVersion ;ALG_ID Algid ;BYTE *pbOID ;DWORD cbOID ;}*PCMS_KEY_INFO ;

typedef struct _HMAC_Info {ALG_ID HashAlgid ;BYTE *pbInnerString ;DWORD cbInnerString ;BYTE *pbOuterString ;DWORD cbOuterString ;}HMAC_INFO ;
typedef struct _HMAC_Info {ALG_ID HashAlgid ;BYTE *pbInnerString ;DWORD cbInnerString ;BYTE *pbOuterString ;DWORD cbOuterString ;}*PHMAC_INFO ;

typedef struct _SCHANNEL_ALG {DWORD dwUse ;ALG_ID Algid ;DWORD cBits ;DWORD dwFlags ;DWORD dwReserved ;}SCHANNEL_ALG ;
typedef struct _SCHANNEL_ALG {DWORD dwUse ;ALG_ID Algid ;DWORD cBits ;DWORD dwFlags ;DWORD dwReserved ;}*PSCHANNEL_ALG ;

typedef struct _PROV_ENUMALGS {ALG_ID aiAlgid ;DWORD dwBitLen ;DWORD dwNameLen ;CHAR szName [20 ];}PROV_ENUMALGS ;
typedef struct _PROV_ENUMALGS_EX {ALG_ID aiAlgid ;DWORD dwDefaultLen ;DWORD dwMinLen ;DWORD dwMaxLen ;DWORD dwProtocols ;DWORD dwNameLen ;CHAR szName [20 ];DWORD dwLongNameLen ;CHAR szLongName [40 ];}PROV_ENUMALGS_EX ;
typedef struct _PUBLICKEYSTRUC {BYTE bType ;BYTE bVersion ;WORD reserved ;ALG_ID aiKeyAlg ;}BLOBHEADER ;
typedef struct _PUBLICKEYSTRUC {BYTE bType ;BYTE bVersion ;WORD reserved ;ALG_ID aiKeyAlg ;}PUBLICKEYSTRUC ;

typedef struct _RSAPUBKEY {DWORD magic ;DWORD bitlen ;DWORD pubexp ;}RSAPUBKEY ;
typedef struct _PUBKEY {DWORD magic ;DWORD bitlen ;}DHPUBKEY ;
typedef struct _PUBKEY {DWORD magic ;DWORD bitlen ;}DSSPUBKEY ;
typedef struct _PUBKEY {DWORD magic ;DWORD bitlen ;}KEAPUBKEY ;
typedef struct _PUBKEY {DWORD magic ;DWORD bitlen ;}TEKPUBKEY ;

typedef struct _DSSSEED {DWORD counter ;BYTE seed [20 ];}DSSSEED ;
typedef struct _PUBKEYVER3 {DWORD magic ;DWORD bitlenP ;DWORD bitlenQ ;DWORD bitlenJ ;DSSSEED DSSSeed ;}DHPUBKEY_VER3 ;
typedef struct _PUBKEYVER3 {DWORD magic ;DWORD bitlenP ;DWORD bitlenQ ;DWORD bitlenJ ;DSSSEED DSSSeed ;}DSSPUBKEY_VER3 ;

typedef struct _PRIVKEYVER3 {DWORD magic ;DWORD bitlenP ;DWORD bitlenQ ;DWORD bitlenJ ;DWORD bitlenX ;DSSSEED DSSSeed ;}DHPRIVKEY_VER3 ;
typedef struct _PRIVKEYVER3 {DWORD magic ;DWORD bitlenP ;DWORD bitlenQ ;DWORD bitlenJ ;DWORD bitlenX ;DSSSEED DSSSeed ;}DSSPRIVKEY_VER3 ;

typedef struct _KEY_TYPE_SUBTYPE {DWORD dwKeySpec ;GUID Type ;GUID Subtype ;}KEY_TYPE_SUBTYPE ;
typedef struct _KEY_TYPE_SUBTYPE {DWORD dwKeySpec ;GUID Type ;GUID Subtype ;}*PKEY_TYPE_SUBTYPE ;

typedef struct _CERT_FORTEZZA_DATA_PROP {unsigned char SerialNumber [8 ];int CertIndex ;unsigned char CertLabel [36 ];}CERT_FORTEZZA_DATA_PROP ;
typedef struct _CRYPT_RC4_KEY_STATE {unsigned char Key [16 ];unsigned char SBox [256 ];unsigned char i ;unsigned char j ;}CRYPT_RC4_KEY_STATE ;
typedef struct _CRYPT_RC4_KEY_STATE {unsigned char Key [16 ];unsigned char SBox [256 ];unsigned char i ;unsigned char j ;}*PCRYPT_RC4_KEY_STATE ;

typedef struct _CRYPT_DES_KEY_STATE {unsigned char Key [8 ];unsigned char IV [8 ];unsigned char Feedback [8 ];}CRYPT_DES_KEY_STATE ;
typedef struct _CRYPT_DES_KEY_STATE {unsigned char Key [8 ];unsigned char IV [8 ];unsigned char Feedback [8 ];}*PCRYPT_DES_KEY_STATE ;

typedef struct _CRYPT_3DES_KEY_STATE {unsigned char Key [24 ];unsigned char IV [8 ];unsigned char Feedback [8 ];}CRYPT_3DES_KEY_STATE ;
typedef struct _CRYPT_3DES_KEY_STATE {unsigned char Key [24 ];unsigned char IV [8 ];unsigned char Feedback [8 ];}*PCRYPT_3DES_KEY_STATE ;

typedef struct _CRYPTOAPI_BLOB {DWORD cbData ;BYTE *pbData ;}CRYPT_INTEGER_BLOB ;
typedef struct _CRYPTOAPI_BLOB {DWORD cbData ;BYTE *pbData ;}*PCRYPT_INTEGER_BLOB ;
typedef struct _CRYPTOAPI_BLOB {DWORD cbData ;BYTE *pbData ;}CRYPT_UINT_BLOB ;
typedef struct _CRYPTOAPI_BLOB {DWORD cbData ;BYTE *pbData ;}*PCRYPT_UINT_BLOB ;
typedef struct _CRYPTOAPI_BLOB {DWORD cbData ;BYTE *pbData ;}CRYPT_OBJID_BLOB ;
typedef struct _CRYPTOAPI_BLOB {DWORD cbData ;BYTE *pbData ;}*PCRYPT_OBJID_BLOB ;
typedef struct _CRYPTOAPI_BLOB {DWORD cbData ;BYTE *pbData ;}CERT_NAME_BLOB ;
typedef struct _CRYPTOAPI_BLOB {DWORD cbData ;BYTE *pbData ;}*PCERT_NAME_BLOB ;
typedef struct _CRYPTOAPI_BLOB {DWORD cbData ;BYTE *pbData ;}CERT_RDN_VALUE_BLOB ;
typedef struct _CRYPTOAPI_BLOB {DWORD cbData ;BYTE *pbData ;}*PCERT_RDN_VALUE_BLOB ;
typedef struct _CRYPTOAPI_BLOB {DWORD cbData ;BYTE *pbData ;}CERT_BLOB ;
typedef struct _CRYPTOAPI_BLOB {DWORD cbData ;BYTE *pbData ;}*PCERT_BLOB ;
typedef struct _CRYPTOAPI_BLOB {DWORD cbData ;BYTE *pbData ;}CRL_BLOB ;
typedef struct _CRYPTOAPI_BLOB {DWORD cbData ;BYTE *pbData ;}*PCRL_BLOB ;
typedef struct _CRYPTOAPI_BLOB {DWORD cbData ;BYTE *pbData ;}DATA_BLOB ;
typedef struct _CRYPTOAPI_BLOB {DWORD cbData ;BYTE *pbData ;}*PDATA_BLOB ;
typedef struct _CRYPTOAPI_BLOB {DWORD cbData ;BYTE *pbData ;}CRYPT_DATA_BLOB ;
typedef struct _CRYPTOAPI_BLOB {DWORD cbData ;BYTE *pbData ;}*PCRYPT_DATA_BLOB ;
typedef struct _CRYPTOAPI_BLOB {DWORD cbData ;BYTE *pbData ;}CRYPT_HASH_BLOB ;
typedef struct _CRYPTOAPI_BLOB {DWORD cbData ;BYTE *pbData ;}*PCRYPT_HASH_BLOB ;
typedef struct _CRYPTOAPI_BLOB {DWORD cbData ;BYTE *pbData ;}CRYPT_DIGEST_BLOB ;
typedef struct _CRYPTOAPI_BLOB {DWORD cbData ;BYTE *pbData ;}*PCRYPT_DIGEST_BLOB ;
typedef struct _CRYPTOAPI_BLOB {DWORD cbData ;BYTE *pbData ;}CRYPT_DER_BLOB ;
typedef struct _CRYPTOAPI_BLOB {DWORD cbData ;BYTE *pbData ;}*PCRYPT_DER_BLOB ;
typedef struct _CRYPTOAPI_BLOB {DWORD cbData ;BYTE *pbData ;}CRYPT_ATTR_BLOB ;
typedef struct _CRYPTOAPI_BLOB {DWORD cbData ;BYTE *pbData ;}*PCRYPT_ATTR_BLOB ;

typedef struct _CMS_DH_KEY_INFO {DWORD dwVersion ;ALG_ID Algid ;LPSTR pszContentEncObjId ;CRYPT_DATA_BLOB PubInfo ;void *pReserved ;}CMS_DH_KEY_INFO ;
typedef struct _CMS_DH_KEY_INFO {DWORD dwVersion ;ALG_ID Algid ;LPSTR pszContentEncObjId ;CRYPT_DATA_BLOB PubInfo ;void *pReserved ;}*PCMS_DH_KEY_INFO ;

WINBOOL CryptAcquireContextA (HCRYPTPROV *phProv ,LPCSTR szContainer ,LPCSTR szProvider ,DWORD dwProvType ,DWORD dwFlags );
WINBOOL CryptAcquireContextW (HCRYPTPROV *phProv ,LPCWSTR szContainer ,LPCWSTR szProvider ,DWORD dwProvType ,DWORD dwFlags );
WINBOOL CryptReleaseContext (HCRYPTPROV hProv ,DWORD dwFlags );
WINBOOL CryptGenKey (HCRYPTPROV hProv ,ALG_ID Algid ,DWORD dwFlags ,HCRYPTKEY *phKey );
WINBOOL CryptDeriveKey (HCRYPTPROV hProv ,ALG_ID Algid ,HCRYPTHASH hBaseData ,DWORD dwFlags ,HCRYPTKEY *phKey );
WINBOOL CryptDestroyKey (HCRYPTKEY hKey );
WINBOOL CryptSetKeyParam (HCRYPTKEY hKey ,DWORD dwParam ,const BYTE *pbData ,DWORD dwFlags );
WINBOOL CryptGetKeyParam (HCRYPTKEY hKey ,DWORD dwParam ,BYTE *pbData ,DWORD *pdwDataLen ,DWORD dwFlags );
WINBOOL CryptSetHashParam (HCRYPTHASH hHash ,DWORD dwParam ,const BYTE *pbData ,DWORD dwFlags );
WINBOOL CryptGetHashParam (HCRYPTHASH hHash ,DWORD dwParam ,BYTE *pbData ,DWORD *pdwDataLen ,DWORD dwFlags );
WINBOOL CryptSetProvParam (HCRYPTPROV hProv ,DWORD dwParam ,const BYTE *pbData ,DWORD dwFlags );
WINBOOL CryptGetProvParam (HCRYPTPROV hProv ,DWORD dwParam ,BYTE *pbData ,DWORD *pdwDataLen ,DWORD dwFlags );
WINBOOL CryptGenRandom (HCRYPTPROV hProv ,DWORD dwLen ,BYTE *pbBuffer );
WINBOOL CryptGetUserKey (HCRYPTPROV hProv ,DWORD dwKeySpec ,HCRYPTKEY *phUserKey );
WINBOOL CryptExportKey (HCRYPTKEY hKey ,HCRYPTKEY hExpKey ,DWORD dwBlobType ,DWORD dwFlags ,BYTE *pbData ,DWORD *pdwDataLen );
WINBOOL CryptImportKey (HCRYPTPROV hProv ,const BYTE *pbData ,DWORD dwDataLen ,HCRYPTKEY hPubKey ,DWORD dwFlags ,HCRYPTKEY *phKey );
WINBOOL CryptEncrypt (HCRYPTKEY hKey ,HCRYPTHASH hHash ,WINBOOL Final ,DWORD dwFlags ,BYTE *pbData ,DWORD *pdwDataLen ,DWORD dwBufLen );
WINBOOL CryptDecrypt (HCRYPTKEY hKey ,HCRYPTHASH hHash ,WINBOOL Final ,DWORD dwFlags ,BYTE *pbData ,DWORD *pdwDataLen );
WINBOOL CryptCreateHash (HCRYPTPROV hProv ,ALG_ID Algid ,HCRYPTKEY hKey ,DWORD dwFlags ,HCRYPTHASH *phHash );
WINBOOL CryptHashData (HCRYPTHASH hHash ,const BYTE *pbData ,DWORD dwDataLen ,DWORD dwFlags );
WINBOOL CryptHashSessionKey (HCRYPTHASH hHash ,HCRYPTKEY hKey ,DWORD dwFlags );
WINBOOL CryptDestroyHash (HCRYPTHASH hHash );
WINBOOL CryptSignHashA (HCRYPTHASH hHash ,DWORD dwKeySpec ,LPCSTR szDescription ,DWORD dwFlags ,BYTE *pbSignature ,DWORD *pdwSigLen );
WINBOOL CryptSignHashW (HCRYPTHASH hHash ,DWORD dwKeySpec ,LPCWSTR szDescription ,DWORD dwFlags ,BYTE *pbSignature ,DWORD *pdwSigLen );
WINBOOL CryptVerifySignatureA (HCRYPTHASH hHash ,const BYTE *pbSignature ,DWORD dwSigLen ,HCRYPTKEY hPubKey ,LPCSTR szDescription ,DWORD dwFlags );
WINBOOL CryptVerifySignatureW (HCRYPTHASH hHash ,const BYTE *pbSignature ,DWORD dwSigLen ,HCRYPTKEY hPubKey ,LPCWSTR szDescription ,DWORD dwFlags );
WINBOOL CryptSetProviderA (LPCSTR pszProvName ,DWORD dwProvType );
WINBOOL CryptSetProviderW (LPCWSTR pszProvName ,DWORD dwProvType );
WINBOOL CryptSetProviderExA (LPCSTR pszProvName ,DWORD dwProvType ,DWORD *pdwReserved ,DWORD dwFlags );
WINBOOL CryptSetProviderExW (LPCWSTR pszProvName ,DWORD dwProvType ,DWORD *pdwReserved ,DWORD dwFlags );
WINBOOL CryptGetDefaultProviderA (DWORD dwProvType ,DWORD *pdwReserved ,DWORD dwFlags ,LPSTR pszProvName ,DWORD *pcbProvName );
WINBOOL CryptGetDefaultProviderW (DWORD dwProvType ,DWORD *pdwReserved ,DWORD dwFlags ,LPWSTR pszProvName ,DWORD *pcbProvName );
WINBOOL CryptEnumProviderTypesA (DWORD dwIndex ,DWORD *pdwReserved ,DWORD dwFlags ,DWORD *pdwProvType ,LPSTR szTypeName ,DWORD *pcbTypeName );
WINBOOL CryptEnumProviderTypesW (DWORD dwIndex ,DWORD *pdwReserved ,DWORD dwFlags ,DWORD *pdwProvType ,LPWSTR szTypeName ,DWORD *pcbTypeName );
WINBOOL CryptEnumProvidersA (DWORD dwIndex ,DWORD *pdwReserved ,DWORD dwFlags ,DWORD *pdwProvType ,LPSTR szProvName ,DWORD *pcbProvName );
WINBOOL CryptEnumProvidersW (DWORD dwIndex ,DWORD *pdwReserved ,DWORD dwFlags ,DWORD *pdwProvType ,LPWSTR szProvName ,DWORD *pcbProvName );
WINBOOL CryptContextAddRef (HCRYPTPROV hProv ,DWORD *pdwReserved ,DWORD dwFlags );
WINBOOL CryptDuplicateKey (HCRYPTKEY hKey ,DWORD *pdwReserved ,DWORD dwFlags ,HCRYPTKEY *phKey );
WINBOOL CryptDuplicateHash (HCRYPTHASH hHash ,DWORD *pdwReserved ,DWORD dwFlags ,HCRYPTHASH *phHash );
WINBOOL GetEncSChannel (BYTE **pData ,DWORD *dwDecSize );
typedef ULONG_PTR HCRYPTPROV_OR_NCRYPT_KEY_HANDLE ;
typedef ULONG_PTR HCRYPTPROV_LEGACY ;
// m:\mingw\x86_64-w64-mingw32\include\bcrypt.h

typedef LONG NTSTATUS ;
typedef LONG *PNTSTATUS ;

typedef struct __BCRYPT_KEY_LENGTHS_STRUCT {ULONG dwMinLength ;ULONG dwMaxLength ;ULONG dwIncrement ;}BCRYPT_KEY_LENGTHS_STRUCT ;
typedef BCRYPT_KEY_LENGTHS_STRUCT BCRYPT_AUTH_TAG_LENGTHS_STRUCT ;
typedef struct _BCRYPT_OID {ULONG cbOID ;PUCHAR pbOID ;}BCRYPT_OID ;
typedef struct _BCRYPT_OID_LIST {ULONG dwOIDCount ;BCRYPT_OID *pOIDs ;}BCRYPT_OID_LIST ;
typedef struct _BCRYPT_PKCS1_PADDING_INFO {LPCWSTR pszAlgId ;}BCRYPT_PKCS1_PADDING_INFO ;
typedef struct _BCRYPT_PSS_PADDING_INFO {LPCWSTR pszAlgId ;ULONG cbSalt ;}BCRYPT_PSS_PADDING_INFO ;
typedef struct _BCRYPT_OAEP_PADDING_INFO {LPCWSTR pszAlgId ;PUCHAR pbLabel ;ULONG cbLabel ;}BCRYPT_OAEP_PADDING_INFO ;
typedef struct _BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO {ULONG cbSize ;ULONG dwInfoVersion ;PUCHAR pbNonce ;ULONG cbNonce ;PUCHAR pbAuthData ;ULONG cbAuthData ;PUCHAR pbTag ;ULONG cbTag ;PUCHAR pbMacContext ;ULONG cbMacContext ;ULONG cbAAD ;ULONGLONG cbData ;ULONG dwFlags ;}BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO ;
typedef struct _BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO {ULONG cbSize ;ULONG dwInfoVersion ;PUCHAR pbNonce ;ULONG cbNonce ;PUCHAR pbAuthData ;ULONG cbAuthData ;PUCHAR pbTag ;ULONG cbTag ;PUCHAR pbMacContext ;ULONG cbMacContext ;ULONG cbAAD ;ULONGLONG cbData ;ULONG dwFlags ;}*PBCRYPT_AUTHENTICATED_CIPHER_MODE_INFO ;

typedef struct _BCryptBuffer {ULONG cbBuffer ;ULONG BufferType ;PVOID pvBuffer ;}BCryptBuffer ;
typedef struct _BCryptBuffer {ULONG cbBuffer ;ULONG BufferType ;PVOID pvBuffer ;}*PBCryptBuffer ;

typedef struct _BCryptBufferDesc {ULONG ulVersion ;ULONG cBuffers ;PBCryptBuffer pBuffers ;}BCryptBufferDesc ;
typedef struct _BCryptBufferDesc {ULONG ulVersion ;ULONG cBuffers ;PBCryptBuffer pBuffers ;}*PBCryptBufferDesc ;

typedef PVOID BCRYPT_HANDLE ;
typedef PVOID BCRYPT_ALG_HANDLE ;
typedef PVOID BCRYPT_KEY_HANDLE ;
typedef PVOID BCRYPT_HASH_HANDLE ;
typedef PVOID BCRYPT_SECRET_HANDLE ;
typedef struct _BCRYPT_KEY_BLOB {ULONG Magic ;}BCRYPT_KEY_BLOB ;
typedef struct _BCRYPT_RSAKEY_BLOB {ULONG Magic ;ULONG BitLength ;ULONG cbPublicExp ;ULONG cbModulus ;ULONG cbPrime1 ;ULONG cbPrime2 ;}BCRYPT_RSAKEY_BLOB ;
typedef struct _BCRYPT_ECCKEY_BLOB {ULONG dwMagic ;ULONG cbKey ;}BCRYPT_ECCKEY_BLOB ;
typedef struct _BCRYPT_ECCKEY_BLOB {ULONG dwMagic ;ULONG cbKey ;}*PBCRYPT_ECCKEY_BLOB ;

typedef struct _BCRYPT_DH_KEY_BLOB {ULONG dwMagic ;ULONG cbKey ;}BCRYPT_DH_KEY_BLOB ;
typedef struct _BCRYPT_DH_KEY_BLOB {ULONG dwMagic ;ULONG cbKey ;}*PBCRYPT_DH_KEY_BLOB ;

typedef struct _BCRYPT_DH_PARAMETER_HEADER {ULONG cbLength ;ULONG dwMagic ;ULONG cbKeyLength ;}BCRYPT_DH_PARAMETER_HEADER ;
typedef struct _BCRYPT_DSA_KEY_BLOB {ULONG dwMagic ;ULONG cbKey ;UCHAR Count [4 ];UCHAR Seed [20 ];UCHAR q [20 ];}BCRYPT_DSA_KEY_BLOB ;
typedef struct _BCRYPT_DSA_KEY_BLOB {ULONG dwMagic ;ULONG cbKey ;UCHAR Count [4 ];UCHAR Seed [20 ];UCHAR q [20 ];}*PBCRYPT_DSA_KEY_BLOB ;

typedef enum {DSA_HASH_ALGORITHM_SHA1 ,DSA_HASH_ALGORITHM_SHA256 ,DSA_HASH_ALGORITHM_SHA512 }HASHALGORITHM_ENUM ;
typedef enum {DSA_FIPS186_2 ,DSA_FIPS186_3 }DSAFIPSVERSION_ENUM ;
typedef struct _BCRYPT_DSA_KEY_BLOB_V2 {ULONG dwMagic ;ULONG cbKey ;HASHALGORITHM_ENUM hashAlgorithm ;DSAFIPSVERSION_ENUM standardVersion ;ULONG cbSeedLength ;ULONG cbGroupSize ;UCHAR Count [4 ];}BCRYPT_DSA_KEY_BLOB_V2 ;
typedef struct _BCRYPT_DSA_KEY_BLOB_V2 {ULONG dwMagic ;ULONG cbKey ;HASHALGORITHM_ENUM hashAlgorithm ;DSAFIPSVERSION_ENUM standardVersion ;ULONG cbSeedLength ;ULONG cbGroupSize ;UCHAR Count [4 ];}*PBCRYPT_DSA_KEY_BLOB_V2 ;

typedef struct _BCRYPT_KEY_DATA_BLOB_HEADER {ULONG dwMagic ;ULONG dwVersion ;ULONG cbKeyData ;}BCRYPT_KEY_DATA_BLOB_HEADER ;
typedef struct _BCRYPT_KEY_DATA_BLOB_HEADER {ULONG dwMagic ;ULONG dwVersion ;ULONG cbKeyData ;}*PBCRYPT_KEY_DATA_BLOB_HEADER ;

typedef struct _BCRYPT_DSA_PARAMETER_HEADER {ULONG cbLength ;ULONG dwMagic ;ULONG cbKeyLength ;UCHAR Count [4 ];UCHAR Seed [20 ];UCHAR q [20 ];}BCRYPT_DSA_PARAMETER_HEADER ;
typedef struct _BCRYPT_DSA_PARAMETER_HEADER_V2 {ULONG cbLength ;ULONG dwMagic ;ULONG cbKeyLength ;HASHALGORITHM_ENUM hashAlgorithm ;DSAFIPSVERSION_ENUM standardVersion ;ULONG cbSeedLength ;ULONG cbGroupSize ;UCHAR Count [4 ];}BCRYPT_DSA_PARAMETER_HEADER_V2 ;
typedef struct _BCRYPT_ALGORITHM_IDENTIFIER {LPWSTR pszName ;ULONG dwClass ;ULONG dwFlags ;}BCRYPT_ALGORITHM_IDENTIFIER ;
typedef struct _BCRYPT_PROVIDER_NAME {LPWSTR pszProviderName ;}BCRYPT_PROVIDER_NAME ;
typedef struct _BCRYPT_INTERFACE_VERSION {USHORT MajorVersion ;USHORT MinorVersion ;}BCRYPT_INTERFACE_VERSION ;
typedef struct _BCRYPT_INTERFACE_VERSION {USHORT MajorVersion ;USHORT MinorVersion ;}*PBCRYPT_INTERFACE_VERSION ;

typedef struct _CRYPT_INTERFACE_REG {ULONG dwInterface ;ULONG dwFlags ;ULONG cFunctions ;PWSTR *rgpszFunctions ;}CRYPT_INTERFACE_REG ;
typedef struct _CRYPT_INTERFACE_REG {ULONG dwInterface ;ULONG dwFlags ;ULONG cFunctions ;PWSTR *rgpszFunctions ;}*PCRYPT_INTERFACE_REG ;

typedef struct _CRYPT_IMAGE_REG {PWSTR pszImage ;ULONG cInterfaces ;PCRYPT_INTERFACE_REG *rgpInterfaces ;}CRYPT_IMAGE_REG ;
typedef struct _CRYPT_IMAGE_REG {PWSTR pszImage ;ULONG cInterfaces ;PCRYPT_INTERFACE_REG *rgpInterfaces ;}*PCRYPT_IMAGE_REG ;

typedef struct _CRYPT_PROVIDER_REG {ULONG cAliases ;PWSTR *rgpszAliases ;PCRYPT_IMAGE_REG pUM ;PCRYPT_IMAGE_REG pKM ;}CRYPT_PROVIDER_REG ;
typedef struct _CRYPT_PROVIDER_REG {ULONG cAliases ;PWSTR *rgpszAliases ;PCRYPT_IMAGE_REG pUM ;PCRYPT_IMAGE_REG pKM ;}*PCRYPT_PROVIDER_REG ;

typedef struct _CRYPT_PROVIDERS {ULONG cProviders ;PWSTR *rgpszProviders ;}CRYPT_PROVIDERS ;
typedef struct _CRYPT_PROVIDERS {ULONG cProviders ;PWSTR *rgpszProviders ;}*PCRYPT_PROVIDERS ;

typedef struct _CRYPT_CONTEXT_CONFIG {ULONG dwFlags ;ULONG dwReserved ;}CRYPT_CONTEXT_CONFIG ;
typedef struct _CRYPT_CONTEXT_CONFIG {ULONG dwFlags ;ULONG dwReserved ;}*PCRYPT_CONTEXT_CONFIG ;

typedef struct _CRYPT_CONTEXT_FUNCTION_CONFIG {ULONG dwFlags ;ULONG dwReserved ;}CRYPT_CONTEXT_FUNCTION_CONFIG ;
typedef struct _CRYPT_CONTEXT_FUNCTION_CONFIG {ULONG dwFlags ;ULONG dwReserved ;}*PCRYPT_CONTEXT_FUNCTION_CONFIG ;

typedef struct _CRYPT_CONTEXTS {ULONG cContexts ;PWSTR *rgpszContexts ;}CRYPT_CONTEXTS ;
typedef struct _CRYPT_CONTEXTS {ULONG cContexts ;PWSTR *rgpszContexts ;}*PCRYPT_CONTEXTS ;

typedef struct _CRYPT_CONTEXT_FUNCTIONS {ULONG cFunctions ;PWSTR *rgpszFunctions ;}CRYPT_CONTEXT_FUNCTIONS ;
typedef struct _CRYPT_CONTEXT_FUNCTIONS {ULONG cFunctions ;PWSTR *rgpszFunctions ;}*PCRYPT_CONTEXT_FUNCTIONS ;

typedef struct _CRYPT_CONTEXT_FUNCTION_PROVIDERS {ULONG cProviders ;PWSTR *rgpszProviders ;}CRYPT_CONTEXT_FUNCTION_PROVIDERS ;
typedef struct _CRYPT_CONTEXT_FUNCTION_PROVIDERS {ULONG cProviders ;PWSTR *rgpszProviders ;}*PCRYPT_CONTEXT_FUNCTION_PROVIDERS ;

typedef struct _CRYPT_PROPERTY_REF {PWSTR pszProperty ;ULONG cbValue ;PUCHAR pbValue ;}CRYPT_PROPERTY_REF ;
typedef struct _CRYPT_PROPERTY_REF {PWSTR pszProperty ;ULONG cbValue ;PUCHAR pbValue ;}*PCRYPT_PROPERTY_REF ;

typedef struct _CRYPT_IMAGE_REF {PWSTR pszImage ;ULONG dwFlags ;}CRYPT_IMAGE_REF ;
typedef struct _CRYPT_IMAGE_REF {PWSTR pszImage ;ULONG dwFlags ;}*PCRYPT_IMAGE_REF ;

typedef struct _CRYPT_PROVIDER_REF {ULONG dwInterface ;PWSTR pszFunction ;PWSTR pszProvider ;ULONG cProperties ;PCRYPT_PROPERTY_REF *rgpProperties ;PCRYPT_IMAGE_REF pUM ;PCRYPT_IMAGE_REF pKM ;}CRYPT_PROVIDER_REF ;
typedef struct _CRYPT_PROVIDER_REF {ULONG dwInterface ;PWSTR pszFunction ;PWSTR pszProvider ;ULONG cProperties ;PCRYPT_PROPERTY_REF *rgpProperties ;PCRYPT_IMAGE_REF pUM ;PCRYPT_IMAGE_REF pKM ;}*PCRYPT_PROVIDER_REF ;

typedef struct _CRYPT_PROVIDER_REFS {ULONG cProviders ;PCRYPT_PROVIDER_REF *rgpProviders ;}CRYPT_PROVIDER_REFS ;
typedef struct _CRYPT_PROVIDER_REFS {ULONG cProviders ;PCRYPT_PROVIDER_REF *rgpProviders ;}*PCRYPT_PROVIDER_REFS ;

NTSTATUS BCryptOpenAlgorithmProvider (BCRYPT_ALG_HANDLE *phAlgorithm ,LPCWSTR pszAlgId ,LPCWSTR pszImplementation ,ULONG dwFlags );
NTSTATUS BCryptEnumAlgorithms (ULONG dwAlgOperations ,ULONG *pAlgCount ,BCRYPT_ALGORITHM_IDENTIFIER **ppAlgList ,ULONG dwFlags );
NTSTATUS BCryptEnumProviders (LPCWSTR pszAlgId ,ULONG *pImplCount ,BCRYPT_PROVIDER_NAME **ppImplList ,ULONG dwFlags );
NTSTATUS BCryptGetProperty (BCRYPT_HANDLE hObject ,LPCWSTR pszProperty ,PUCHAR pbOutput ,ULONG cbOutput ,ULONG *pcbResult ,ULONG dwFlags );
NTSTATUS BCryptSetProperty (BCRYPT_HANDLE hObject ,LPCWSTR pszProperty ,PUCHAR pbInput ,ULONG cbInput ,ULONG dwFlags );
NTSTATUS BCryptCloseAlgorithmProvider (BCRYPT_ALG_HANDLE hAlgorithm ,ULONG dwFlags );
void BCryptFreeBuffer (PVOID pvBuffer );
NTSTATUS BCryptGenerateSymmetricKey (BCRYPT_ALG_HANDLE hAlgorithm ,BCRYPT_KEY_HANDLE *phKey ,PUCHAR pbKeyObject ,ULONG cbKeyObject ,PUCHAR pbSecret ,ULONG cbSecret ,ULONG dwFlags );
NTSTATUS BCryptGenerateKeyPair (BCRYPT_ALG_HANDLE hAlgorithm ,BCRYPT_KEY_HANDLE *phKey ,ULONG dwLength ,ULONG dwFlags );
NTSTATUS BCryptEncrypt (BCRYPT_KEY_HANDLE hKey ,PUCHAR pbInput ,ULONG cbInput ,void *pPaddingInfo ,PUCHAR pbIV ,ULONG cbIV ,PUCHAR pbOutput ,ULONG cbOutput ,ULONG *pcbResult ,ULONG dwFlags );
NTSTATUS BCryptDecrypt (BCRYPT_KEY_HANDLE hKey ,PUCHAR pbInput ,ULONG cbInput ,void *pPaddingInfo ,PUCHAR pbIV ,ULONG cbIV ,PUCHAR pbOutput ,ULONG cbOutput ,ULONG *pcbResult ,ULONG dwFlags );
NTSTATUS BCryptExportKey (BCRYPT_KEY_HANDLE hKey ,BCRYPT_KEY_HANDLE hExportKey ,LPCWSTR pszBlobType ,PUCHAR pbOutput ,ULONG cbOutput ,ULONG *pcbResult ,ULONG dwFlags );
NTSTATUS BCryptImportKey (BCRYPT_ALG_HANDLE hAlgorithm ,BCRYPT_KEY_HANDLE hImportKey ,LPCWSTR pszBlobType ,BCRYPT_KEY_HANDLE *phKey ,PUCHAR pbKeyObject ,ULONG cbKeyObject ,PUCHAR pbInput ,ULONG cbInput ,ULONG dwFlags );
NTSTATUS BCryptImportKeyPair (BCRYPT_ALG_HANDLE hAlgorithm ,BCRYPT_KEY_HANDLE hImportKey ,LPCWSTR pszBlobType ,BCRYPT_KEY_HANDLE *phKey ,PUCHAR pbInput ,ULONG cbInput ,ULONG dwFlags );
NTSTATUS BCryptDuplicateKey (BCRYPT_KEY_HANDLE hKey ,BCRYPT_KEY_HANDLE *phNewKey ,PUCHAR pbKeyObject ,ULONG cbKeyObject ,ULONG dwFlags );
NTSTATUS BCryptFinalizeKeyPair (BCRYPT_KEY_HANDLE hKey ,ULONG dwFlags );
NTSTATUS BCryptDestroyKey (BCRYPT_KEY_HANDLE hKey );
NTSTATUS BCryptDestroySecret (BCRYPT_SECRET_HANDLE hSecret );
NTSTATUS BCryptSignHash (BCRYPT_KEY_HANDLE hKey ,void *pPaddingInfo ,PUCHAR pbInput ,ULONG cbInput ,PUCHAR pbOutput ,ULONG cbOutput ,ULONG *pcbResult ,ULONG dwFlags );
NTSTATUS BCryptVerifySignature (BCRYPT_KEY_HANDLE hKey ,void *pPaddingInfo ,PUCHAR pbHash ,ULONG cbHash ,PUCHAR pbSignature ,ULONG cbSignature ,ULONG dwFlags );
NTSTATUS BCryptSecretAgreement (BCRYPT_KEY_HANDLE hPrivKey ,BCRYPT_KEY_HANDLE hPubKey ,BCRYPT_SECRET_HANDLE *phAgreedSecret ,ULONG dwFlags );
NTSTATUS BCryptDeriveKey (BCRYPT_SECRET_HANDLE hSharedSecret ,LPCWSTR pwszKDF ,BCryptBufferDesc *pParameterList ,PUCHAR pbDerivedKey ,ULONG cbDerivedKey ,ULONG *pcbResult ,ULONG dwFlags );
NTSTATUS BCryptKeyDerivation (BCRYPT_KEY_HANDLE hKey ,BCryptBufferDesc *pParameterList ,PUCHAR pbDerivedKey ,ULONG cbDerivedKey ,ULONG *pcbResult ,ULONG dwFlags );
NTSTATUS BCryptCreateHash (BCRYPT_ALG_HANDLE hAlgorithm ,BCRYPT_HASH_HANDLE *phHash ,PUCHAR pbHashObject ,ULONG cbHashObject ,PUCHAR pbSecret ,ULONG cbSecret ,ULONG dwFlags );
NTSTATUS BCryptHashData (BCRYPT_HASH_HANDLE hHash ,PUCHAR pbInput ,ULONG cbInput ,ULONG dwFlags );
NTSTATUS BCryptFinishHash (BCRYPT_HASH_HANDLE hHash ,PUCHAR pbOutput ,ULONG cbOutput ,ULONG dwFlags );
NTSTATUS BCryptDuplicateHash (BCRYPT_HASH_HANDLE hHash ,BCRYPT_HASH_HANDLE *phNewHash ,PUCHAR pbHashObject ,ULONG cbHashObject ,ULONG dwFlags );
NTSTATUS BCryptDestroyHash (BCRYPT_HASH_HANDLE hHash );
NTSTATUS BCryptGenRandom (BCRYPT_ALG_HANDLE hAlgorithm ,PUCHAR pbBuffer ,ULONG cbBuffer ,ULONG dwFlags );
NTSTATUS BCryptDeriveKeyCapi (BCRYPT_HASH_HANDLE hHash ,BCRYPT_ALG_HANDLE hTargetAlg ,PUCHAR pbDerivedKey ,ULONG cbDerivedKey ,ULONG dwFlags );
NTSTATUS BCryptDeriveKeyPBKDF2 (BCRYPT_ALG_HANDLE hPrf ,PUCHAR pbPassword ,ULONG cbPassword ,PUCHAR pbSalt ,ULONG cbSalt ,ULONGLONG cIterations ,PUCHAR pbDerivedKey ,ULONG cbDerivedKey ,ULONG dwFlags );
NTSTATUS BCryptResolveProviders (LPCWSTR pszContext ,ULONG dwInterface ,LPCWSTR pszFunction ,LPCWSTR pszProvider ,ULONG dwMode ,ULONG dwFlags ,ULONG *pcbBuffer ,PCRYPT_PROVIDER_REFS *ppBuffer );
NTSTATUS BCryptGetFipsAlgorithmMode (BOOLEAN *pfEnabled );
NTSTATUS BCryptQueryProviderRegistration (LPCWSTR pszProvider ,ULONG dwMode ,ULONG dwInterface ,ULONG *pcbBuffer ,PCRYPT_PROVIDER_REG *ppBuffer );
NTSTATUS BCryptEnumRegisteredProviders (ULONG *pcbBuffer ,PCRYPT_PROVIDERS *ppBuffer );
NTSTATUS BCryptCreateContext (ULONG dwTable ,LPCWSTR pszContext ,PCRYPT_CONTEXT_CONFIG pConfig );
NTSTATUS BCryptDeleteContext (ULONG dwTable ,LPCWSTR pszContext );
NTSTATUS BCryptEnumContexts (ULONG dwTable ,ULONG *pcbBuffer ,PCRYPT_CONTEXTS *ppBuffer );
NTSTATUS BCryptConfigureContext (ULONG dwTable ,LPCWSTR pszContext ,PCRYPT_CONTEXT_CONFIG pConfig );
NTSTATUS BCryptQueryContextConfiguration (ULONG dwTable ,LPCWSTR pszContext ,ULONG *pcbBuffer ,PCRYPT_CONTEXT_CONFIG *ppBuffer );
NTSTATUS BCryptAddContextFunction (ULONG dwTable ,LPCWSTR pszContext ,ULONG dwInterface ,LPCWSTR pszFunction ,ULONG dwPosition );
NTSTATUS BCryptRemoveContextFunction (ULONG dwTable ,LPCWSTR pszContext ,ULONG dwInterface ,LPCWSTR pszFunction );
NTSTATUS BCryptEnumContextFunctions (ULONG dwTable ,LPCWSTR pszContext ,ULONG dwInterface ,ULONG *pcbBuffer ,PCRYPT_CONTEXT_FUNCTIONS *ppBuffer );
NTSTATUS BCryptConfigureContextFunction (ULONG dwTable ,LPCWSTR pszContext ,ULONG dwInterface ,LPCWSTR pszFunction ,PCRYPT_CONTEXT_FUNCTION_CONFIG pConfig );
NTSTATUS BCryptQueryContextFunctionConfiguration (ULONG dwTable ,LPCWSTR pszContext ,ULONG dwInterface ,LPCWSTR pszFunction ,ULONG *pcbBuffer ,PCRYPT_CONTEXT_FUNCTION_CONFIG *ppBuffer );
NTSTATUS BCryptEnumContextFunctionProviders (ULONG dwTable ,LPCWSTR pszContext ,ULONG dwInterface ,LPCWSTR pszFunction ,ULONG *pcbBuffer ,PCRYPT_CONTEXT_FUNCTION_PROVIDERS *ppBuffer );
NTSTATUS BCryptSetContextFunctionProperty (ULONG dwTable ,LPCWSTR pszContext ,ULONG dwInterface ,LPCWSTR pszFunction ,LPCWSTR pszProperty ,ULONG cbValue ,PUCHAR pbValue );
NTSTATUS BCryptQueryContextFunctionProperty (ULONG dwTable ,LPCWSTR pszContext ,ULONG dwInterface ,LPCWSTR pszFunction ,LPCWSTR pszProperty ,ULONG *pcbValue ,PUCHAR *ppbValue );
NTSTATUS BCryptRegisterConfigChangeNotify (HANDLE *phEvent );
// m:\mingw\x86_64-w64-mingw32\include\ncrypt.h

typedef LONG SECURITY_STATUS ;
typedef LPVOID (*PFN_NCRYPT_ALLOC )(SIZE_T cbSize );
typedef void (*PFN_NCRYPT_FREE )(LPVOID pv );
typedef struct NCRYPT_ALLOC_PARA {DWORD cbSize ;PFN_NCRYPT_ALLOC pfnAlloc ;PFN_NCRYPT_FREE pfnFree ;}NCRYPT_ALLOC_PARA ;
typedef BCryptBuffer NCryptBuffer ;
typedef BCryptBuffer *PNCryptBuffer ;
typedef BCryptBufferDesc NCryptBufferDesc ;
typedef BCryptBufferDesc *PNCryptBufferDesc ;
typedef ULONG_PTR NCRYPT_HANDLE ;
typedef ULONG_PTR NCRYPT_PROV_HANDLE ;
typedef ULONG_PTR NCRYPT_KEY_HANDLE ;
typedef ULONG_PTR NCRYPT_HASH_HANDLE ;
typedef ULONG_PTR NCRYPT_SECRET_HANDLE ;
typedef struct _NCryptAlgorithmName {LPWSTR pszName ;DWORD dwClass ;DWORD dwAlgOperations ;DWORD dwFlags ;}NCryptAlgorithmName ;
typedef struct NCryptKeyName {LPWSTR pszName ;LPWSTR pszAlgid ;DWORD dwLegacyKeySpec ;DWORD dwFlags ;}NCryptKeyName ;
typedef struct NCryptProviderName {LPWSTR pszName ;LPWSTR pszComment ;}NCryptProviderName ;
SECURITY_STATUS NCryptOpenStorageProvider (NCRYPT_PROV_HANDLE *phProvider ,LPCWSTR pszProviderName ,DWORD dwFlags );
SECURITY_STATUS NCryptEnumAlgorithms (NCRYPT_PROV_HANDLE hProvider ,DWORD dwAlgOperations ,DWORD *pdwAlgCount ,NCryptAlgorithmName **ppAlgList ,DWORD dwFlags );
SECURITY_STATUS NCryptIsAlgSupported (NCRYPT_PROV_HANDLE hProvider ,LPCWSTR pszAlgId ,DWORD dwFlags );
SECURITY_STATUS NCryptEnumKeys (NCRYPT_PROV_HANDLE hProvider ,LPCWSTR pszScope ,NCryptKeyName **ppKeyName ,PVOID *ppEnumState ,DWORD dwFlags );
SECURITY_STATUS NCryptEnumStorageProviders (DWORD *pdwProviderCount ,NCryptProviderName **ppProviderList ,DWORD dwFlags );
SECURITY_STATUS NCryptFreeBuffer (PVOID pvInput );
SECURITY_STATUS NCryptOpenKey (NCRYPT_PROV_HANDLE hProvider ,NCRYPT_KEY_HANDLE *phKey ,LPCWSTR pszKeyName ,DWORD dwLegacyKeySpec ,DWORD dwFlags );
SECURITY_STATUS NCryptCreatePersistedKey (NCRYPT_PROV_HANDLE hProvider ,NCRYPT_KEY_HANDLE *phKey ,LPCWSTR pszAlgId ,LPCWSTR pszKeyName ,DWORD dwLegacyKeySpec ,DWORD dwFlags );
typedef struct __NCRYPT_UI_POLICY {DWORD dwVersion ;DWORD dwFlags ;LPCWSTR pszCreationTitle ;LPCWSTR pszFriendlyName ;LPCWSTR pszDescription ;}NCRYPT_UI_POLICY ;
typedef struct __NCRYPT_SUPPORTED_LENGTHS {DWORD dwMinLength ;DWORD dwMaxLength ;DWORD dwIncrement ;DWORD dwDefaultLength ;}NCRYPT_SUPPORTED_LENGTHS ;
SECURITY_STATUS NCryptGetProperty (NCRYPT_HANDLE hObject ,LPCWSTR pszProperty ,PBYTE pbOutput ,DWORD cbOutput ,DWORD *pcbResult ,DWORD dwFlags );
SECURITY_STATUS NCryptSetProperty (NCRYPT_HANDLE hObject ,LPCWSTR pszProperty ,PBYTE pbInput ,DWORD cbInput ,DWORD dwFlags );
SECURITY_STATUS NCryptFinalizeKey (NCRYPT_KEY_HANDLE hKey ,DWORD dwFlags );
SECURITY_STATUS NCryptEncrypt (NCRYPT_KEY_HANDLE hKey ,PBYTE pbInput ,DWORD cbInput ,void *pPaddingInfo ,PBYTE pbOutput ,DWORD cbOutput ,DWORD *pcbResult ,DWORD dwFlags );
SECURITY_STATUS NCryptDecrypt (NCRYPT_KEY_HANDLE hKey ,PBYTE pbInput ,DWORD cbInput ,void *pPaddingInfo ,PBYTE pbOutput ,DWORD cbOutput ,DWORD *pcbResult ,DWORD dwFlags );
SECURITY_STATUS NCryptImportKey (NCRYPT_PROV_HANDLE hProvider ,NCRYPT_KEY_HANDLE hImportKey ,LPCWSTR pszBlobType ,NCryptBufferDesc *pParameterList ,NCRYPT_KEY_HANDLE *phKey ,PBYTE pbData ,DWORD cbData ,DWORD dwFlags );
SECURITY_STATUS NCryptExportKey (NCRYPT_KEY_HANDLE hKey ,NCRYPT_KEY_HANDLE hExportKey ,LPCWSTR pszBlobType ,NCryptBufferDesc *pParameterList ,PBYTE pbOutput ,DWORD cbOutput ,DWORD *pcbResult ,DWORD dwFlags );
SECURITY_STATUS NCryptSignHash (NCRYPT_KEY_HANDLE hKey ,void *pPaddingInfo ,PBYTE pbHashValue ,DWORD cbHashValue ,PBYTE pbSignature ,DWORD cbSignature ,DWORD *pcbResult ,DWORD dwFlags );
SECURITY_STATUS NCryptVerifySignature (NCRYPT_KEY_HANDLE hKey ,void *pPaddingInfo ,PBYTE pbHashValue ,DWORD cbHashValue ,PBYTE pbSignature ,DWORD cbSignature ,DWORD dwFlags );
SECURITY_STATUS NCryptDeleteKey (NCRYPT_KEY_HANDLE hKey ,DWORD dwFlags );
SECURITY_STATUS NCryptFreeObject (NCRYPT_HANDLE hObject );
WINBOOL NCryptIsKeyHandle (NCRYPT_KEY_HANDLE hKey );
SECURITY_STATUS NCryptTranslateHandle (NCRYPT_PROV_HANDLE *phProvider ,NCRYPT_KEY_HANDLE *phKey ,HCRYPTPROV hLegacyProv ,HCRYPTKEY hLegacyKey ,DWORD dwLegacyKeySpec ,DWORD dwFlags );
SECURITY_STATUS NCryptNotifyChangeKey (NCRYPT_PROV_HANDLE hProvider ,HANDLE *phEvent ,DWORD dwFlags );
SECURITY_STATUS NCryptSecretAgreement (NCRYPT_KEY_HANDLE hPrivKey ,NCRYPT_KEY_HANDLE hPubKey ,NCRYPT_SECRET_HANDLE *phAgreedSecret ,DWORD dwFlags );
SECURITY_STATUS NCryptDeriveKey (NCRYPT_SECRET_HANDLE hSharedSecret ,LPCWSTR pwszKDF ,NCryptBufferDesc *pParameterList ,PBYTE pbDerivedKey ,DWORD cbDerivedKey ,DWORD *pcbResult ,ULONG dwFlags );
// m:\mingw\x86_64-w64-mingw32\include\wincrypt.h

typedef struct _CRYPT_BIT_BLOB {DWORD cbData ;BYTE *pbData ;DWORD cUnusedBits ;}CRYPT_BIT_BLOB ;
typedef struct _CRYPT_BIT_BLOB {DWORD cbData ;BYTE *pbData ;DWORD cUnusedBits ;}*PCRYPT_BIT_BLOB ;

typedef struct _CRYPT_ALGORITHM_IDENTIFIER {LPSTR pszObjId ;CRYPT_OBJID_BLOB Parameters ;}CRYPT_ALGORITHM_IDENTIFIER ;
typedef struct _CRYPT_ALGORITHM_IDENTIFIER {LPSTR pszObjId ;CRYPT_OBJID_BLOB Parameters ;}*PCRYPT_ALGORITHM_IDENTIFIER ;

typedef struct _CRYPT_OBJID_TABLE {DWORD dwAlgId ;LPCSTR pszObjId ;}CRYPT_OBJID_TABLE ;
typedef struct _CRYPT_OBJID_TABLE {DWORD dwAlgId ;LPCSTR pszObjId ;}*PCRYPT_OBJID_TABLE ;

typedef struct _CRYPT_HASH_INFO {CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm ;CRYPT_HASH_BLOB Hash ;}CRYPT_HASH_INFO ;
typedef struct _CRYPT_HASH_INFO {CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm ;CRYPT_HASH_BLOB Hash ;}*PCRYPT_HASH_INFO ;

typedef struct _CERT_EXTENSION {LPSTR pszObjId ;WINBOOL fCritical ;CRYPT_OBJID_BLOB Value ;}CERT_EXTENSION ;
typedef struct _CERT_EXTENSION {LPSTR pszObjId ;WINBOOL fCritical ;CRYPT_OBJID_BLOB Value ;}*PCERT_EXTENSION ;

typedef const CERT_EXTENSION *PCCERT_EXTENSION ;
typedef struct _CRYPT_ATTRIBUTE_TYPE_VALUE {LPSTR pszObjId ;CRYPT_OBJID_BLOB Value ;}CRYPT_ATTRIBUTE_TYPE_VALUE ;
typedef struct _CRYPT_ATTRIBUTE_TYPE_VALUE {LPSTR pszObjId ;CRYPT_OBJID_BLOB Value ;}*PCRYPT_ATTRIBUTE_TYPE_VALUE ;

typedef struct _CRYPT_ATTRIBUTE {LPSTR pszObjId ;DWORD cValue ;PCRYPT_ATTR_BLOB rgValue ;}CRYPT_ATTRIBUTE ;
typedef struct _CRYPT_ATTRIBUTE {LPSTR pszObjId ;DWORD cValue ;PCRYPT_ATTR_BLOB rgValue ;}*PCRYPT_ATTRIBUTE ;

typedef struct _CRYPT_ATTRIBUTES {DWORD cAttr ;PCRYPT_ATTRIBUTE rgAttr ;}CRYPT_ATTRIBUTES ;
typedef struct _CRYPT_ATTRIBUTES {DWORD cAttr ;PCRYPT_ATTRIBUTE rgAttr ;}*PCRYPT_ATTRIBUTES ;

typedef struct _CERT_RDN_ATTR {LPSTR pszObjId ;DWORD dwValueType ;CERT_RDN_VALUE_BLOB Value ;}CERT_RDN_ATTR ;
typedef struct _CERT_RDN_ATTR {LPSTR pszObjId ;DWORD dwValueType ;CERT_RDN_VALUE_BLOB Value ;}*PCERT_RDN_ATTR ;

typedef struct _CERT_RDN {DWORD cRDNAttr ;PCERT_RDN_ATTR rgRDNAttr ;}CERT_RDN ;
typedef struct _CERT_RDN {DWORD cRDNAttr ;PCERT_RDN_ATTR rgRDNAttr ;}*PCERT_RDN ;

typedef struct _CERT_NAME_INFO {DWORD cRDN ;PCERT_RDN rgRDN ;}CERT_NAME_INFO ;
typedef struct _CERT_NAME_INFO {DWORD cRDN ;PCERT_RDN rgRDN ;}*PCERT_NAME_INFO ;

typedef struct _CERT_NAME_VALUE {DWORD dwValueType ;CERT_RDN_VALUE_BLOB Value ;}CERT_NAME_VALUE ;
typedef struct _CERT_NAME_VALUE {DWORD dwValueType ;CERT_RDN_VALUE_BLOB Value ;}*PCERT_NAME_VALUE ;

typedef struct _CERT_PUBLIC_KEY_INFO {CRYPT_ALGORITHM_IDENTIFIER Algorithm ;CRYPT_BIT_BLOB PublicKey ;}CERT_PUBLIC_KEY_INFO ;
typedef struct _CERT_PUBLIC_KEY_INFO {CRYPT_ALGORITHM_IDENTIFIER Algorithm ;CRYPT_BIT_BLOB PublicKey ;}*PCERT_PUBLIC_KEY_INFO ;

typedef struct _CRYPT_ECC_PRIVATE_KEY_INFO {DWORD dwVersion ;CRYPT_DER_BLOB PrivateKey ;LPSTR szCurveOid ;CRYPT_BIT_BLOB PublicKey ;}CRYPT_ECC_PRIVATE_KEY_INFO ;
typedef struct _CRYPT_ECC_PRIVATE_KEY_INFO {DWORD dwVersion ;CRYPT_DER_BLOB PrivateKey ;LPSTR szCurveOid ;CRYPT_BIT_BLOB PublicKey ;}*PCRYPT_ECC_PRIVATE_KEY_INFO ;

typedef struct _CRYPT_PRIVATE_KEY_INFO {DWORD Version ;CRYPT_ALGORITHM_IDENTIFIER Algorithm ;CRYPT_DER_BLOB PrivateKey ;PCRYPT_ATTRIBUTES pAttributes ;}CRYPT_PRIVATE_KEY_INFO ;
typedef struct _CRYPT_PRIVATE_KEY_INFO {DWORD Version ;CRYPT_ALGORITHM_IDENTIFIER Algorithm ;CRYPT_DER_BLOB PrivateKey ;PCRYPT_ATTRIBUTES pAttributes ;}*PCRYPT_PRIVATE_KEY_INFO ;

typedef struct _CRYPT_ENCRYPTED_PRIVATE_KEY_INFO {CRYPT_ALGORITHM_IDENTIFIER EncryptionAlgorithm ;CRYPT_DATA_BLOB EncryptedPrivateKey ;}CRYPT_ENCRYPTED_PRIVATE_KEY_INFO ;
typedef struct _CRYPT_ENCRYPTED_PRIVATE_KEY_INFO {CRYPT_ALGORITHM_IDENTIFIER EncryptionAlgorithm ;CRYPT_DATA_BLOB EncryptedPrivateKey ;}*PCRYPT_ENCRYPTED_PRIVATE_KEY_INFO ;

typedef WINBOOL (*PCRYPT_DECRYPT_PRIVATE_KEY_FUNC )(CRYPT_ALGORITHM_IDENTIFIER Algorithm ,CRYPT_DATA_BLOB EncryptedPrivateKey ,BYTE *pbClearTextKey ,DWORD *pcbClearTextKey ,LPVOID pVoidDecryptFunc );
typedef WINBOOL (*PCRYPT_ENCRYPT_PRIVATE_KEY_FUNC )(CRYPT_ALGORITHM_IDENTIFIER *pAlgorithm ,CRYPT_DATA_BLOB *pClearTextPrivateKey ,BYTE *pbEncryptedKey ,DWORD *pcbEncryptedKey ,LPVOID pVoidEncryptFunc );
typedef WINBOOL (*PCRYPT_RESOLVE_HCRYPTPROV_FUNC )(CRYPT_PRIVATE_KEY_INFO *pPrivateKeyInfo ,HCRYPTPROV *phCryptProv ,LPVOID pVoidResolveFunc );
typedef struct _CRYPT_PKCS8_IMPORT_PARAMS {CRYPT_DIGEST_BLOB PrivateKey ;PCRYPT_RESOLVE_HCRYPTPROV_FUNC pResolvehCryptProvFunc ;LPVOID pVoidResolveFunc ;PCRYPT_DECRYPT_PRIVATE_KEY_FUNC pDecryptPrivateKeyFunc ;LPVOID pVoidDecryptFunc ;}CRYPT_PKCS8_IMPORT_PARAMS ;
typedef struct _CRYPT_PKCS8_IMPORT_PARAMS {CRYPT_DIGEST_BLOB PrivateKey ;PCRYPT_RESOLVE_HCRYPTPROV_FUNC pResolvehCryptProvFunc ;LPVOID pVoidResolveFunc ;PCRYPT_DECRYPT_PRIVATE_KEY_FUNC pDecryptPrivateKeyFunc ;LPVOID pVoidDecryptFunc ;}*PCRYPT_PKCS8_IMPORT_PARAMS ;
typedef struct _CRYPT_PKCS8_IMPORT_PARAMS {CRYPT_DIGEST_BLOB PrivateKey ;PCRYPT_RESOLVE_HCRYPTPROV_FUNC pResolvehCryptProvFunc ;LPVOID pVoidResolveFunc ;PCRYPT_DECRYPT_PRIVATE_KEY_FUNC pDecryptPrivateKeyFunc ;LPVOID pVoidDecryptFunc ;}CRYPT_PRIVATE_KEY_BLOB_AND_PARAMS ;
typedef struct _CRYPT_PKCS8_IMPORT_PARAMS {CRYPT_DIGEST_BLOB PrivateKey ;PCRYPT_RESOLVE_HCRYPTPROV_FUNC pResolvehCryptProvFunc ;LPVOID pVoidResolveFunc ;PCRYPT_DECRYPT_PRIVATE_KEY_FUNC pDecryptPrivateKeyFunc ;LPVOID pVoidDecryptFunc ;}*PCRYPT_PRIVATE_KEY_BLOB_AND_PARAMS ;

typedef struct _CRYPT_PKCS8_EXPORT_PARAMS {HCRYPTPROV hCryptProv ;DWORD dwKeySpec ;LPSTR pszPrivateKeyObjId ;PCRYPT_ENCRYPT_PRIVATE_KEY_FUNC pEncryptPrivateKeyFunc ;LPVOID pVoidEncryptFunc ;}CRYPT_PKCS8_EXPORT_PARAMS ;
typedef struct _CRYPT_PKCS8_EXPORT_PARAMS {HCRYPTPROV hCryptProv ;DWORD dwKeySpec ;LPSTR pszPrivateKeyObjId ;PCRYPT_ENCRYPT_PRIVATE_KEY_FUNC pEncryptPrivateKeyFunc ;LPVOID pVoidEncryptFunc ;}*PCRYPT_PKCS8_EXPORT_PARAMS ;

typedef struct _CERT_INFO {DWORD dwVersion ;CRYPT_INTEGER_BLOB SerialNumber ;CRYPT_ALGORITHM_IDENTIFIER SignatureAlgorithm ;CERT_NAME_BLOB Issuer ;FILETIME NotBefore ;FILETIME NotAfter ;CERT_NAME_BLOB Subject ;CERT_PUBLIC_KEY_INFO SubjectPublicKeyInfo ;CRYPT_BIT_BLOB IssuerUniqueId ;CRYPT_BIT_BLOB SubjectUniqueId ;DWORD cExtension ;PCERT_EXTENSION rgExtension ;}CERT_INFO ;
typedef struct _CERT_INFO {DWORD dwVersion ;CRYPT_INTEGER_BLOB SerialNumber ;CRYPT_ALGORITHM_IDENTIFIER SignatureAlgorithm ;CERT_NAME_BLOB Issuer ;FILETIME NotBefore ;FILETIME NotAfter ;CERT_NAME_BLOB Subject ;CERT_PUBLIC_KEY_INFO SubjectPublicKeyInfo ;CRYPT_BIT_BLOB IssuerUniqueId ;CRYPT_BIT_BLOB SubjectUniqueId ;DWORD cExtension ;PCERT_EXTENSION rgExtension ;}*PCERT_INFO ;

typedef struct _CRL_ENTRY {CRYPT_INTEGER_BLOB SerialNumber ;FILETIME RevocationDate ;DWORD cExtension ;PCERT_EXTENSION rgExtension ;}CRL_ENTRY ;
typedef struct _CRL_ENTRY {CRYPT_INTEGER_BLOB SerialNumber ;FILETIME RevocationDate ;DWORD cExtension ;PCERT_EXTENSION rgExtension ;}*PCRL_ENTRY ;

typedef struct _CRL_INFO {DWORD dwVersion ;CRYPT_ALGORITHM_IDENTIFIER SignatureAlgorithm ;CERT_NAME_BLOB Issuer ;FILETIME ThisUpdate ;FILETIME NextUpdate ;DWORD cCRLEntry ;PCRL_ENTRY rgCRLEntry ;DWORD cExtension ;PCERT_EXTENSION rgExtension ;}CRL_INFO ;
typedef struct _CRL_INFO {DWORD dwVersion ;CRYPT_ALGORITHM_IDENTIFIER SignatureAlgorithm ;CERT_NAME_BLOB Issuer ;FILETIME ThisUpdate ;FILETIME NextUpdate ;DWORD cCRLEntry ;PCRL_ENTRY rgCRLEntry ;DWORD cExtension ;PCERT_EXTENSION rgExtension ;}*PCRL_INFO ;

typedef struct _CERT_OR_CRL_BLOB {DWORD dwChoice ;DWORD cbEncoded ;BYTE *pbEncoded ;}CERT_OR_CRL_BLOB ;
typedef struct _CERT_OR_CRL_BLOB {DWORD dwChoice ;DWORD cbEncoded ;BYTE *pbEncoded ;}*PCERT_OR_CRL_BLOB ;

typedef struct _CERT_OR_CRL_BUNDLE {DWORD cItem ;PCERT_OR_CRL_BLOB rgItem ;}CERT_OR_CRL_BUNDLE ;
typedef struct _CERT_OR_CRL_BUNDLE {DWORD cItem ;PCERT_OR_CRL_BLOB rgItem ;}*PCERT_OR_CRL_BUNDLE ;

typedef struct _CERT_REQUEST_INFO {DWORD dwVersion ;CERT_NAME_BLOB Subject ;CERT_PUBLIC_KEY_INFO SubjectPublicKeyInfo ;DWORD cAttribute ;PCRYPT_ATTRIBUTE rgAttribute ;}CERT_REQUEST_INFO ;
typedef struct _CERT_REQUEST_INFO {DWORD dwVersion ;CERT_NAME_BLOB Subject ;CERT_PUBLIC_KEY_INFO SubjectPublicKeyInfo ;DWORD cAttribute ;PCRYPT_ATTRIBUTE rgAttribute ;}*PCERT_REQUEST_INFO ;

typedef struct _CERT_KEYGEN_REQUEST_INFO {DWORD dwVersion ;CERT_PUBLIC_KEY_INFO SubjectPublicKeyInfo ;LPWSTR pwszChallengeString ;}CERT_KEYGEN_REQUEST_INFO ;
typedef struct _CERT_KEYGEN_REQUEST_INFO {DWORD dwVersion ;CERT_PUBLIC_KEY_INFO SubjectPublicKeyInfo ;LPWSTR pwszChallengeString ;}*PCERT_KEYGEN_REQUEST_INFO ;

typedef struct _CERT_SIGNED_CONTENT_INFO {CRYPT_DER_BLOB ToBeSigned ;CRYPT_ALGORITHM_IDENTIFIER SignatureAlgorithm ;CRYPT_BIT_BLOB Signature ;}CERT_SIGNED_CONTENT_INFO ;
typedef struct _CERT_SIGNED_CONTENT_INFO {CRYPT_DER_BLOB ToBeSigned ;CRYPT_ALGORITHM_IDENTIFIER SignatureAlgorithm ;CRYPT_BIT_BLOB Signature ;}*PCERT_SIGNED_CONTENT_INFO ;

typedef struct _CTL_USAGE {DWORD cUsageIdentifier ;LPSTR *rgpszUsageIdentifier ;}CTL_USAGE ;
typedef struct _CTL_USAGE {DWORD cUsageIdentifier ;LPSTR *rgpszUsageIdentifier ;}*PCTL_USAGE ;
typedef struct _CTL_USAGE {DWORD cUsageIdentifier ;LPSTR *rgpszUsageIdentifier ;}CERT_ENHKEY_USAGE ;
typedef struct _CTL_USAGE {DWORD cUsageIdentifier ;LPSTR *rgpszUsageIdentifier ;}*PCERT_ENHKEY_USAGE ;

typedef const CTL_USAGE *PCCTL_USAGE ;
typedef const CERT_ENHKEY_USAGE *PCCERT_ENHKEY_USAGE ;
typedef struct _CTL_ENTRY {CRYPT_DATA_BLOB SubjectIdentifier ;DWORD cAttribute ;PCRYPT_ATTRIBUTE rgAttribute ;}CTL_ENTRY ;
typedef struct _CTL_ENTRY {CRYPT_DATA_BLOB SubjectIdentifier ;DWORD cAttribute ;PCRYPT_ATTRIBUTE rgAttribute ;}*PCTL_ENTRY ;

typedef struct _CTL_INFO {DWORD dwVersion ;CTL_USAGE SubjectUsage ;CRYPT_DATA_BLOB ListIdentifier ;CRYPT_INTEGER_BLOB SequenceNumber ;FILETIME ThisUpdate ;FILETIME NextUpdate ;CRYPT_ALGORITHM_IDENTIFIER SubjectAlgorithm ;DWORD cCTLEntry ;PCTL_ENTRY rgCTLEntry ;DWORD cExtension ;PCERT_EXTENSION rgExtension ;}CTL_INFO ;
typedef struct _CTL_INFO {DWORD dwVersion ;CTL_USAGE SubjectUsage ;CRYPT_DATA_BLOB ListIdentifier ;CRYPT_INTEGER_BLOB SequenceNumber ;FILETIME ThisUpdate ;FILETIME NextUpdate ;CRYPT_ALGORITHM_IDENTIFIER SubjectAlgorithm ;DWORD cCTLEntry ;PCTL_ENTRY rgCTLEntry ;DWORD cExtension ;PCERT_EXTENSION rgExtension ;}*PCTL_INFO ;

typedef struct _CRYPT_TIME_STAMP_REQUEST_INFO {LPSTR pszTimeStampAlgorithm ;LPSTR pszContentType ;CRYPT_OBJID_BLOB Content ;DWORD cAttribute ;PCRYPT_ATTRIBUTE rgAttribute ;}CRYPT_TIME_STAMP_REQUEST_INFO ;
typedef struct _CRYPT_TIME_STAMP_REQUEST_INFO {LPSTR pszTimeStampAlgorithm ;LPSTR pszContentType ;CRYPT_OBJID_BLOB Content ;DWORD cAttribute ;PCRYPT_ATTRIBUTE rgAttribute ;}*PCRYPT_TIME_STAMP_REQUEST_INFO ;

typedef struct _CRYPT_ENROLLMENT_NAME_VALUE_PAIR {LPWSTR pwszName ;LPWSTR pwszValue ;}CRYPT_ENROLLMENT_NAME_VALUE_PAIR ;
typedef struct _CRYPT_ENROLLMENT_NAME_VALUE_PAIR {LPWSTR pwszName ;LPWSTR pwszValue ;}*PCRYPT_ENROLLMENT_NAME_VALUE_PAIR ;

typedef struct _CRYPT_CSP_PROVIDER {DWORD dwKeySpec ;LPWSTR pwszProviderName ;CRYPT_BIT_BLOB Signature ;}CRYPT_CSP_PROVIDER ;
typedef struct _CRYPT_CSP_PROVIDER {DWORD dwKeySpec ;LPWSTR pwszProviderName ;CRYPT_BIT_BLOB Signature ;}*PCRYPT_CSP_PROVIDER ;

WINBOOL CryptFormatObject (DWORD dwCertEncodingType ,DWORD dwFormatType ,DWORD dwFormatStrType ,void *pFormatStruct ,LPCSTR lpszStructType ,const BYTE *pbEncoded ,DWORD cbEncoded ,void *pbFormat ,DWORD *pcbFormat );
typedef LPVOID (*PFN_CRYPT_ALLOC )(size_t cbSize );
typedef void (*PFN_CRYPT_FREE )(LPVOID pv );
typedef struct _CRYPT_ENCODE_PARA {DWORD cbSize ;PFN_CRYPT_ALLOC pfnAlloc ;PFN_CRYPT_FREE pfnFree ;}CRYPT_ENCODE_PARA ;
typedef struct _CRYPT_ENCODE_PARA {DWORD cbSize ;PFN_CRYPT_ALLOC pfnAlloc ;PFN_CRYPT_FREE pfnFree ;}*PCRYPT_ENCODE_PARA ;

WINBOOL CryptEncodeObjectEx (DWORD dwCertEncodingType ,LPCSTR lpszStructType ,const void *pvStructInfo ,DWORD dwFlags ,PCRYPT_ENCODE_PARA pEncodePara ,void *pvEncoded ,DWORD *pcbEncoded );
WINBOOL CryptEncodeObject (DWORD dwCertEncodingType ,LPCSTR lpszStructType ,const void *pvStructInfo ,BYTE *pbEncoded ,DWORD *pcbEncoded );
typedef struct _CRYPT_DECODE_PARA {DWORD cbSize ;PFN_CRYPT_ALLOC pfnAlloc ;PFN_CRYPT_FREE pfnFree ;}CRYPT_DECODE_PARA ;
typedef struct _CRYPT_DECODE_PARA {DWORD cbSize ;PFN_CRYPT_ALLOC pfnAlloc ;PFN_CRYPT_FREE pfnFree ;}*PCRYPT_DECODE_PARA ;

WINBOOL CryptDecodeObjectEx (DWORD dwCertEncodingType ,LPCSTR lpszStructType ,const BYTE *pbEncoded ,DWORD cbEncoded ,DWORD dwFlags ,PCRYPT_DECODE_PARA pDecodePara ,void *pvStructInfo ,DWORD *pcbStructInfo );
WINBOOL CryptDecodeObject (DWORD dwCertEncodingType ,LPCSTR lpszStructType ,const BYTE *pbEncoded ,DWORD cbEncoded ,DWORD dwFlags ,void *pvStructInfo ,DWORD *pcbStructInfo );
typedef struct _CERT_EXTENSIONS {DWORD cExtension ;PCERT_EXTENSION rgExtension ;}CERT_EXTENSIONS ;
typedef struct _CERT_EXTENSIONS {DWORD cExtension ;PCERT_EXTENSION rgExtension ;}*PCERT_EXTENSIONS ;

typedef struct _CERT_AUTHORITY_KEY_ID_INFO {CRYPT_DATA_BLOB KeyId ;CERT_NAME_BLOB CertIssuer ;CRYPT_INTEGER_BLOB CertSerialNumber ;}CERT_AUTHORITY_KEY_ID_INFO ;
typedef struct _CERT_AUTHORITY_KEY_ID_INFO {CRYPT_DATA_BLOB KeyId ;CERT_NAME_BLOB CertIssuer ;CRYPT_INTEGER_BLOB CertSerialNumber ;}*PCERT_AUTHORITY_KEY_ID_INFO ;

typedef struct _CERT_PRIVATE_KEY_VALIDITY {FILETIME NotBefore ;FILETIME NotAfter ;}CERT_PRIVATE_KEY_VALIDITY ;
typedef struct _CERT_PRIVATE_KEY_VALIDITY {FILETIME NotBefore ;FILETIME NotAfter ;}*PCERT_PRIVATE_KEY_VALIDITY ;

typedef struct _CERT_KEY_ATTRIBUTES_INFO {CRYPT_DATA_BLOB KeyId ;CRYPT_BIT_BLOB IntendedKeyUsage ;PCERT_PRIVATE_KEY_VALIDITY pPrivateKeyUsagePeriod ;}CERT_KEY_ATTRIBUTES_INFO ;
typedef struct _CERT_KEY_ATTRIBUTES_INFO {CRYPT_DATA_BLOB KeyId ;CRYPT_BIT_BLOB IntendedKeyUsage ;PCERT_PRIVATE_KEY_VALIDITY pPrivateKeyUsagePeriod ;}*PCERT_KEY_ATTRIBUTES_INFO ;

typedef struct _CERT_POLICY_ID {DWORD cCertPolicyElementId ;LPSTR *rgpszCertPolicyElementId ;}CERT_POLICY_ID ;
typedef struct _CERT_POLICY_ID {DWORD cCertPolicyElementId ;LPSTR *rgpszCertPolicyElementId ;}*PCERT_POLICY_ID ;

typedef struct _CERT_KEY_USAGE_RESTRICTION_INFO {DWORD cCertPolicyId ;PCERT_POLICY_ID rgCertPolicyId ;CRYPT_BIT_BLOB RestrictedKeyUsage ;}CERT_KEY_USAGE_RESTRICTION_INFO ;
typedef struct _CERT_KEY_USAGE_RESTRICTION_INFO {DWORD cCertPolicyId ;PCERT_POLICY_ID rgCertPolicyId ;CRYPT_BIT_BLOB RestrictedKeyUsage ;}*PCERT_KEY_USAGE_RESTRICTION_INFO ;

typedef struct _CERT_OTHER_NAME {LPSTR pszObjId ;CRYPT_OBJID_BLOB Value ;}CERT_OTHER_NAME ;
typedef struct _CERT_OTHER_NAME {LPSTR pszObjId ;CRYPT_OBJID_BLOB Value ;}*PCERT_OTHER_NAME ;

typedef struct _CERT_ALT_NAME_ENTRY {DWORD dwAltNameChoice ;union {PCERT_OTHER_NAME pOtherName ;LPWSTR pwszRfc822Name ;LPWSTR pwszDNSName ;CERT_NAME_BLOB DirectoryName ;LPWSTR pwszURL ;CRYPT_DATA_BLOB IPAddress ;LPSTR pszRegisteredID ;};}CERT_ALT_NAME_ENTRY ;
typedef struct _CERT_ALT_NAME_ENTRY {DWORD dwAltNameChoice ;union {PCERT_OTHER_NAME pOtherName ;LPWSTR pwszRfc822Name ;LPWSTR pwszDNSName ;CERT_NAME_BLOB DirectoryName ;LPWSTR pwszURL ;CRYPT_DATA_BLOB IPAddress ;LPSTR pszRegisteredID ;};}*PCERT_ALT_NAME_ENTRY ;

typedef struct _CERT_ALT_NAME_INFO {DWORD cAltEntry ;PCERT_ALT_NAME_ENTRY rgAltEntry ;}CERT_ALT_NAME_INFO ;
typedef struct _CERT_ALT_NAME_INFO {DWORD cAltEntry ;PCERT_ALT_NAME_ENTRY rgAltEntry ;}*PCERT_ALT_NAME_INFO ;

typedef struct _CERT_BASIC_CONSTRAINTS_INFO {CRYPT_BIT_BLOB SubjectType ;WINBOOL fPathLenConstraint ;DWORD dwPathLenConstraint ;DWORD cSubtreesConstraint ;CERT_NAME_BLOB *rgSubtreesConstraint ;}CERT_BASIC_CONSTRAINTS_INFO ;
typedef struct _CERT_BASIC_CONSTRAINTS_INFO {CRYPT_BIT_BLOB SubjectType ;WINBOOL fPathLenConstraint ;DWORD dwPathLenConstraint ;DWORD cSubtreesConstraint ;CERT_NAME_BLOB *rgSubtreesConstraint ;}*PCERT_BASIC_CONSTRAINTS_INFO ;

typedef struct _CERT_BASIC_CONSTRAINTS2_INFO {WINBOOL fCA ;WINBOOL fPathLenConstraint ;DWORD dwPathLenConstraint ;}CERT_BASIC_CONSTRAINTS2_INFO ;
typedef struct _CERT_BASIC_CONSTRAINTS2_INFO {WINBOOL fCA ;WINBOOL fPathLenConstraint ;DWORD dwPathLenConstraint ;}*PCERT_BASIC_CONSTRAINTS2_INFO ;

typedef struct _CERT_POLICY_QUALIFIER_INFO {LPSTR pszPolicyQualifierId ;CRYPT_OBJID_BLOB Qualifier ;}CERT_POLICY_QUALIFIER_INFO ;
typedef struct _CERT_POLICY_QUALIFIER_INFO {LPSTR pszPolicyQualifierId ;CRYPT_OBJID_BLOB Qualifier ;}*PCERT_POLICY_QUALIFIER_INFO ;

typedef struct _CERT_POLICY_INFO {LPSTR pszPolicyIdentifier ;DWORD cPolicyQualifier ;CERT_POLICY_QUALIFIER_INFO *rgPolicyQualifier ;}CERT_POLICY_INFO ;
typedef struct _CERT_POLICY_INFO {LPSTR pszPolicyIdentifier ;DWORD cPolicyQualifier ;CERT_POLICY_QUALIFIER_INFO *rgPolicyQualifier ;}*PCERT_POLICY_INFO ;

typedef struct _CERT_POLICIES_INFO {DWORD cPolicyInfo ;CERT_POLICY_INFO *rgPolicyInfo ;}CERT_POLICIES_INFO ;
typedef struct _CERT_POLICIES_INFO {DWORD cPolicyInfo ;CERT_POLICY_INFO *rgPolicyInfo ;}*PCERT_POLICIES_INFO ;

typedef struct _CERT_POLICY_QUALIFIER_NOTICE_REFERENCE {LPSTR pszOrganization ;DWORD cNoticeNumbers ;int *rgNoticeNumbers ;}CERT_POLICY_QUALIFIER_NOTICE_REFERENCE ;
typedef struct _CERT_POLICY_QUALIFIER_NOTICE_REFERENCE {LPSTR pszOrganization ;DWORD cNoticeNumbers ;int *rgNoticeNumbers ;}*PCERT_POLICY_QUALIFIER_NOTICE_REFERENCE ;

typedef struct _CERT_POLICY_QUALIFIER_USER_NOTICE {CERT_POLICY_QUALIFIER_NOTICE_REFERENCE *pNoticeReference ;LPWSTR pszDisplayText ;}CERT_POLICY_QUALIFIER_USER_NOTICE ;
typedef struct _CERT_POLICY_QUALIFIER_USER_NOTICE {CERT_POLICY_QUALIFIER_NOTICE_REFERENCE *pNoticeReference ;LPWSTR pszDisplayText ;}*PCERT_POLICY_QUALIFIER_USER_NOTICE ;

typedef struct _CPS_URLS {LPWSTR pszURL ;CRYPT_ALGORITHM_IDENTIFIER *pAlgorithm ;CRYPT_DATA_BLOB *pDigest ;}CPS_URLS ;
typedef struct _CPS_URLS {LPWSTR pszURL ;CRYPT_ALGORITHM_IDENTIFIER *pAlgorithm ;CRYPT_DATA_BLOB *pDigest ;}*PCPS_URLS ;

typedef struct _CERT_POLICY95_QUALIFIER1 {LPWSTR pszPracticesReference ;LPSTR pszNoticeIdentifier ;LPSTR pszNSINoticeIdentifier ;DWORD cCPSURLs ;CPS_URLS *rgCPSURLs ;}CERT_POLICY95_QUALIFIER1 ;
typedef struct _CERT_POLICY95_QUALIFIER1 {LPWSTR pszPracticesReference ;LPSTR pszNoticeIdentifier ;LPSTR pszNSINoticeIdentifier ;DWORD cCPSURLs ;CPS_URLS *rgCPSURLs ;}*PCERT_POLICY95_QUALIFIER1 ;

typedef struct _CERT_POLICY_MAPPING {LPSTR pszIssuerDomainPolicy ;LPSTR pszSubjectDomainPolicy ;}CERT_POLICY_MAPPING ;
typedef struct _CERT_POLICY_MAPPING {LPSTR pszIssuerDomainPolicy ;LPSTR pszSubjectDomainPolicy ;}*PCERT_POLICY_MAPPING ;

typedef struct _CERT_POLICY_MAPPINGS_INFO {DWORD cPolicyMapping ;PCERT_POLICY_MAPPING rgPolicyMapping ;}CERT_POLICY_MAPPINGS_INFO ;
typedef struct _CERT_POLICY_MAPPINGS_INFO {DWORD cPolicyMapping ;PCERT_POLICY_MAPPING rgPolicyMapping ;}*PCERT_POLICY_MAPPINGS_INFO ;

typedef struct _CERT_POLICY_CONSTRAINTS_INFO {WINBOOL fRequireExplicitPolicy ;DWORD dwRequireExplicitPolicySkipCerts ;WINBOOL fInhibitPolicyMapping ;DWORD dwInhibitPolicyMappingSkipCerts ;}CERT_POLICY_CONSTRAINTS_INFO ;
typedef struct _CERT_POLICY_CONSTRAINTS_INFO {WINBOOL fRequireExplicitPolicy ;DWORD dwRequireExplicitPolicySkipCerts ;WINBOOL fInhibitPolicyMapping ;DWORD dwInhibitPolicyMappingSkipCerts ;}*PCERT_POLICY_CONSTRAINTS_INFO ;

typedef struct _CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY {LPSTR pszObjId ;DWORD cValue ;PCRYPT_DER_BLOB rgValue ;}CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY ;
typedef struct _CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY {LPSTR pszObjId ;DWORD cValue ;PCRYPT_DER_BLOB rgValue ;}*PCRYPT_CONTENT_INFO_SEQUENCE_OF_ANY ;

typedef struct _CRYPT_CONTENT_INFO {LPSTR pszObjId ;CRYPT_DER_BLOB Content ;}CRYPT_CONTENT_INFO ;
typedef struct _CRYPT_CONTENT_INFO {LPSTR pszObjId ;CRYPT_DER_BLOB Content ;}*PCRYPT_CONTENT_INFO ;

typedef struct _CRYPT_SEQUENCE_OF_ANY {DWORD cValue ;PCRYPT_DER_BLOB rgValue ;}CRYPT_SEQUENCE_OF_ANY ;
typedef struct _CRYPT_SEQUENCE_OF_ANY {DWORD cValue ;PCRYPT_DER_BLOB rgValue ;}*PCRYPT_SEQUENCE_OF_ANY ;

typedef struct _CERT_AUTHORITY_KEY_ID2_INFO {CRYPT_DATA_BLOB KeyId ;CERT_ALT_NAME_INFO AuthorityCertIssuer ;CRYPT_INTEGER_BLOB AuthorityCertSerialNumber ;}CERT_AUTHORITY_KEY_ID2_INFO ;
typedef struct _CERT_AUTHORITY_KEY_ID2_INFO {CRYPT_DATA_BLOB KeyId ;CERT_ALT_NAME_INFO AuthorityCertIssuer ;CRYPT_INTEGER_BLOB AuthorityCertSerialNumber ;}*PCERT_AUTHORITY_KEY_ID2_INFO ;

typedef struct _CERT_ACCESS_DESCRIPTION {LPSTR pszAccessMethod ;CERT_ALT_NAME_ENTRY AccessLocation ;}CERT_ACCESS_DESCRIPTION ;
typedef struct _CERT_ACCESS_DESCRIPTION {LPSTR pszAccessMethod ;CERT_ALT_NAME_ENTRY AccessLocation ;}*PCERT_ACCESS_DESCRIPTION ;

typedef struct _CERT_AUTHORITY_INFO_ACCESS {DWORD cAccDescr ;PCERT_ACCESS_DESCRIPTION rgAccDescr ;}CERT_AUTHORITY_INFO_ACCESS ;
typedef struct _CERT_AUTHORITY_INFO_ACCESS {DWORD cAccDescr ;PCERT_ACCESS_DESCRIPTION rgAccDescr ;}*PCERT_AUTHORITY_INFO_ACCESS ;

typedef CERT_AUTHORITY_INFO_ACCESS CERT_SUBJECT_INFO_ACCESS ;
typedef CERT_AUTHORITY_INFO_ACCESS *PCERT_SUBJECT_INFO_ACCESS ;

typedef struct _CRL_DIST_POINT_NAME {DWORD dwDistPointNameChoice ;union {CERT_ALT_NAME_INFO FullName ;};}CRL_DIST_POINT_NAME ;
typedef struct _CRL_DIST_POINT_NAME {DWORD dwDistPointNameChoice ;union {CERT_ALT_NAME_INFO FullName ;};}*PCRL_DIST_POINT_NAME ;

typedef struct _CRL_DIST_POINT {CRL_DIST_POINT_NAME DistPointName ;CRYPT_BIT_BLOB ReasonFlags ;CERT_ALT_NAME_INFO CRLIssuer ;}CRL_DIST_POINT ;
typedef struct _CRL_DIST_POINT {CRL_DIST_POINT_NAME DistPointName ;CRYPT_BIT_BLOB ReasonFlags ;CERT_ALT_NAME_INFO CRLIssuer ;}*PCRL_DIST_POINT ;

typedef struct _CRL_DIST_POINTS_INFO {DWORD cDistPoint ;PCRL_DIST_POINT rgDistPoint ;}CRL_DIST_POINTS_INFO ;
typedef struct _CRL_DIST_POINTS_INFO {DWORD cDistPoint ;PCRL_DIST_POINT rgDistPoint ;}*PCRL_DIST_POINTS_INFO ;

typedef struct _CROSS_CERT_DIST_POINTS_INFO {DWORD dwSyncDeltaTime ;DWORD cDistPoint ;PCERT_ALT_NAME_INFO rgDistPoint ;}CROSS_CERT_DIST_POINTS_INFO ;
typedef struct _CROSS_CERT_DIST_POINTS_INFO {DWORD dwSyncDeltaTime ;DWORD cDistPoint ;PCERT_ALT_NAME_INFO rgDistPoint ;}*PCROSS_CERT_DIST_POINTS_INFO ;

typedef struct _CERT_PAIR {CERT_BLOB Forward ;CERT_BLOB Reverse ;}CERT_PAIR ;
typedef struct _CERT_PAIR {CERT_BLOB Forward ;CERT_BLOB Reverse ;}*PCERT_PAIR ;

typedef struct _CRL_ISSUING_DIST_POINT {CRL_DIST_POINT_NAME DistPointName ;WINBOOL fOnlyContainsUserCerts ;WINBOOL fOnlyContainsCACerts ;CRYPT_BIT_BLOB OnlySomeReasonFlags ;WINBOOL fIndirectCRL ;}CRL_ISSUING_DIST_POINT ;
typedef struct _CRL_ISSUING_DIST_POINT {CRL_DIST_POINT_NAME DistPointName ;WINBOOL fOnlyContainsUserCerts ;WINBOOL fOnlyContainsCACerts ;CRYPT_BIT_BLOB OnlySomeReasonFlags ;WINBOOL fIndirectCRL ;}*PCRL_ISSUING_DIST_POINT ;

typedef struct _CERT_GENERAL_SUBTREE {CERT_ALT_NAME_ENTRY Base ;DWORD dwMinimum ;WINBOOL fMaximum ;DWORD dwMaximum ;}CERT_GENERAL_SUBTREE ;
typedef struct _CERT_GENERAL_SUBTREE {CERT_ALT_NAME_ENTRY Base ;DWORD dwMinimum ;WINBOOL fMaximum ;DWORD dwMaximum ;}*PCERT_GENERAL_SUBTREE ;

typedef struct _CERT_NAME_CONSTRAINTS_INFO {DWORD cPermittedSubtree ;PCERT_GENERAL_SUBTREE rgPermittedSubtree ;DWORD cExcludedSubtree ;PCERT_GENERAL_SUBTREE rgExcludedSubtree ;}CERT_NAME_CONSTRAINTS_INFO ;
typedef struct _CERT_NAME_CONSTRAINTS_INFO {DWORD cPermittedSubtree ;PCERT_GENERAL_SUBTREE rgPermittedSubtree ;DWORD cExcludedSubtree ;PCERT_GENERAL_SUBTREE rgExcludedSubtree ;}*PCERT_NAME_CONSTRAINTS_INFO ;

typedef struct _CERT_DSS_PARAMETERS {CRYPT_UINT_BLOB p ;CRYPT_UINT_BLOB q ;CRYPT_UINT_BLOB g ;}CERT_DSS_PARAMETERS ;
typedef struct _CERT_DSS_PARAMETERS {CRYPT_UINT_BLOB p ;CRYPT_UINT_BLOB q ;CRYPT_UINT_BLOB g ;}*PCERT_DSS_PARAMETERS ;

typedef struct _CERT_DH_PARAMETERS {CRYPT_UINT_BLOB p ;CRYPT_UINT_BLOB g ;}CERT_DH_PARAMETERS ;
typedef struct _CERT_DH_PARAMETERS {CRYPT_UINT_BLOB p ;CRYPT_UINT_BLOB g ;}*PCERT_DH_PARAMETERS ;

typedef struct _CERT_ECC_SIGNATURE {CRYPT_UINT_BLOB r ;CRYPT_UINT_BLOB s ;}CERT_ECC_SIGNATURE ;
typedef struct _CERT_ECC_SIGNATURE {CRYPT_UINT_BLOB r ;CRYPT_UINT_BLOB s ;}*PCERT_ECC_SIGNATURE ;

typedef struct _CERT_X942_DH_VALIDATION_PARAMS {CRYPT_BIT_BLOB seed ;DWORD pgenCounter ;}CERT_X942_DH_VALIDATION_PARAMS ;
typedef struct _CERT_X942_DH_VALIDATION_PARAMS {CRYPT_BIT_BLOB seed ;DWORD pgenCounter ;}*PCERT_X942_DH_VALIDATION_PARAMS ;

typedef struct _CERT_X942_DH_PARAMETERS {CRYPT_UINT_BLOB p ;CRYPT_UINT_BLOB g ;CRYPT_UINT_BLOB q ;CRYPT_UINT_BLOB j ;PCERT_X942_DH_VALIDATION_PARAMS pValidationParams ;}CERT_X942_DH_PARAMETERS ;
typedef struct _CERT_X942_DH_PARAMETERS {CRYPT_UINT_BLOB p ;CRYPT_UINT_BLOB g ;CRYPT_UINT_BLOB q ;CRYPT_UINT_BLOB j ;PCERT_X942_DH_VALIDATION_PARAMS pValidationParams ;}*PCERT_X942_DH_PARAMETERS ;

typedef struct _CRYPT_X942_OTHER_INFO {LPSTR pszContentEncryptionObjId ;BYTE rgbCounter [4 ];BYTE rgbKeyLength [4 ];CRYPT_DATA_BLOB PubInfo ;}CRYPT_X942_OTHER_INFO ;
typedef struct _CRYPT_X942_OTHER_INFO {LPSTR pszContentEncryptionObjId ;BYTE rgbCounter [4 ];BYTE rgbKeyLength [4 ];CRYPT_DATA_BLOB PubInfo ;}*PCRYPT_X942_OTHER_INFO ;

typedef struct _CRYPT_ECC_CMS_SHARED_INFO {CRYPT_ALGORITHM_IDENTIFIER Algorithm ;CRYPT_DATA_BLOB EntityUInfo ;BYTE rgbSuppPubInfo [4 ];}CRYPT_ECC_CMS_SHARED_INFO ;
typedef struct _CRYPT_ECC_CMS_SHARED_INFO {CRYPT_ALGORITHM_IDENTIFIER Algorithm ;CRYPT_DATA_BLOB EntityUInfo ;BYTE rgbSuppPubInfo [4 ];}*PCRYPT_ECC_CMS_SHARED_INFO ;

typedef struct _CRYPT_RC2_CBC_PARAMETERS {DWORD dwVersion ;WINBOOL fIV ;BYTE rgbIV [8 ];}CRYPT_RC2_CBC_PARAMETERS ;
typedef struct _CRYPT_RC2_CBC_PARAMETERS {DWORD dwVersion ;WINBOOL fIV ;BYTE rgbIV [8 ];}*PCRYPT_RC2_CBC_PARAMETERS ;

typedef struct _CRYPT_SMIME_CAPABILITY {LPSTR pszObjId ;CRYPT_OBJID_BLOB Parameters ;}CRYPT_SMIME_CAPABILITY ;
typedef struct _CRYPT_SMIME_CAPABILITY {LPSTR pszObjId ;CRYPT_OBJID_BLOB Parameters ;}*PCRYPT_SMIME_CAPABILITY ;

typedef struct _CRYPT_SMIME_CAPABILITIES {DWORD cCapability ;PCRYPT_SMIME_CAPABILITY rgCapability ;}CRYPT_SMIME_CAPABILITIES ;
typedef struct _CRYPT_SMIME_CAPABILITIES {DWORD cCapability ;PCRYPT_SMIME_CAPABILITY rgCapability ;}*PCRYPT_SMIME_CAPABILITIES ;

typedef struct _CERT_QC_STATEMENT {LPSTR pszStatementId ;CRYPT_OBJID_BLOB StatementInfo ;}CERT_QC_STATEMENT ;
typedef struct _CERT_QC_STATEMENT {LPSTR pszStatementId ;CRYPT_OBJID_BLOB StatementInfo ;}*PCERT_QC_STATEMENT ;

typedef struct _CERT_QC_STATEMENTS_EXT_INFO {DWORD cStatement ;PCERT_QC_STATEMENT rgStatement ;}CERT_QC_STATEMENTS_EXT_INFO ;
typedef struct _CERT_QC_STATEMENTS_EXT_INFO {DWORD cStatement ;PCERT_QC_STATEMENT rgStatement ;}*PCERT_QC_STATEMENTS_EXT_INFO ;

typedef struct _CRYPT_MASK_GEN_ALGORITHM {LPSTR pszObjId ;CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm ;}CRYPT_MASK_GEN_ALGORITHM ;
typedef struct _CRYPT_MASK_GEN_ALGORITHM {LPSTR pszObjId ;CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm ;}*PCRYPT_MASK_GEN_ALGORITHM ;

typedef struct _CRYPT_RSA_SSA_PSS_PARAMETERS {CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm ;CRYPT_MASK_GEN_ALGORITHM MaskGenAlgorithm ;DWORD dwSaltLength ;DWORD dwTrailerField ;}CRYPT_RSA_SSA_PSS_PARAMETERS ;
typedef struct _CRYPT_RSA_SSA_PSS_PARAMETERS {CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm ;CRYPT_MASK_GEN_ALGORITHM MaskGenAlgorithm ;DWORD dwSaltLength ;DWORD dwTrailerField ;}*PCRYPT_RSA_SSA_PSS_PARAMETERS ;

typedef struct _CRYPT_PSOURCE_ALGORITHM {LPSTR pszObjId ;CRYPT_DATA_BLOB EncodingParameters ;}CRYPT_PSOURCE_ALGORITHM ;
typedef struct _CRYPT_PSOURCE_ALGORITHM {LPSTR pszObjId ;CRYPT_DATA_BLOB EncodingParameters ;}*PCRYPT_PSOURCE_ALGORITHM ;

typedef struct _CRYPT_RSAES_OAEP_PARAMETERS {CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm ;CRYPT_MASK_GEN_ALGORITHM MaskGenAlgorithm ;CRYPT_PSOURCE_ALGORITHM PSourceAlgorithm ;}CRYPT_RSAES_OAEP_PARAMETERS ;
typedef struct _CRYPT_RSAES_OAEP_PARAMETERS {CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm ;CRYPT_MASK_GEN_ALGORITHM MaskGenAlgorithm ;CRYPT_PSOURCE_ALGORITHM PSourceAlgorithm ;}*PCRYPT_RSAES_OAEP_PARAMETERS ;

typedef struct _CMC_TAGGED_ATTRIBUTE {DWORD dwBodyPartID ;CRYPT_ATTRIBUTE Attribute ;}CMC_TAGGED_ATTRIBUTE ;
typedef struct _CMC_TAGGED_ATTRIBUTE {DWORD dwBodyPartID ;CRYPT_ATTRIBUTE Attribute ;}*PCMC_TAGGED_ATTRIBUTE ;

typedef struct _CMC_TAGGED_CERT_REQUEST {DWORD dwBodyPartID ;CRYPT_DER_BLOB SignedCertRequest ;}CMC_TAGGED_CERT_REQUEST ;
typedef struct _CMC_TAGGED_CERT_REQUEST {DWORD dwBodyPartID ;CRYPT_DER_BLOB SignedCertRequest ;}*PCMC_TAGGED_CERT_REQUEST ;

typedef struct _CMC_TAGGED_REQUEST {DWORD dwTaggedRequestChoice ;union {PCMC_TAGGED_CERT_REQUEST pTaggedCertRequest ;};}CMC_TAGGED_REQUEST ;
typedef struct _CMC_TAGGED_REQUEST {DWORD dwTaggedRequestChoice ;union {PCMC_TAGGED_CERT_REQUEST pTaggedCertRequest ;};}*PCMC_TAGGED_REQUEST ;

typedef struct _CMC_TAGGED_CONTENT_INFO {DWORD dwBodyPartID ;CRYPT_DER_BLOB EncodedContentInfo ;}CMC_TAGGED_CONTENT_INFO ;
typedef struct _CMC_TAGGED_CONTENT_INFO {DWORD dwBodyPartID ;CRYPT_DER_BLOB EncodedContentInfo ;}*PCMC_TAGGED_CONTENT_INFO ;

typedef struct _CMC_TAGGED_OTHER_MSG {DWORD dwBodyPartID ;LPSTR pszObjId ;CRYPT_OBJID_BLOB Value ;}CMC_TAGGED_OTHER_MSG ;
typedef struct _CMC_TAGGED_OTHER_MSG {DWORD dwBodyPartID ;LPSTR pszObjId ;CRYPT_OBJID_BLOB Value ;}*PCMC_TAGGED_OTHER_MSG ;

typedef struct _CMC_DATA_INFO {DWORD cTaggedAttribute ;PCMC_TAGGED_ATTRIBUTE rgTaggedAttribute ;DWORD cTaggedRequest ;PCMC_TAGGED_REQUEST rgTaggedRequest ;DWORD cTaggedContentInfo ;PCMC_TAGGED_CONTENT_INFO rgTaggedContentInfo ;DWORD cTaggedOtherMsg ;PCMC_TAGGED_OTHER_MSG rgTaggedOtherMsg ;}CMC_DATA_INFO ;
typedef struct _CMC_DATA_INFO {DWORD cTaggedAttribute ;PCMC_TAGGED_ATTRIBUTE rgTaggedAttribute ;DWORD cTaggedRequest ;PCMC_TAGGED_REQUEST rgTaggedRequest ;DWORD cTaggedContentInfo ;PCMC_TAGGED_CONTENT_INFO rgTaggedContentInfo ;DWORD cTaggedOtherMsg ;PCMC_TAGGED_OTHER_MSG rgTaggedOtherMsg ;}*PCMC_DATA_INFO ;

typedef struct _CMC_RESPONSE_INFO {DWORD cTaggedAttribute ;PCMC_TAGGED_ATTRIBUTE rgTaggedAttribute ;DWORD cTaggedContentInfo ;PCMC_TAGGED_CONTENT_INFO rgTaggedContentInfo ;DWORD cTaggedOtherMsg ;PCMC_TAGGED_OTHER_MSG rgTaggedOtherMsg ;}CMC_RESPONSE_INFO ;
typedef struct _CMC_RESPONSE_INFO {DWORD cTaggedAttribute ;PCMC_TAGGED_ATTRIBUTE rgTaggedAttribute ;DWORD cTaggedContentInfo ;PCMC_TAGGED_CONTENT_INFO rgTaggedContentInfo ;DWORD cTaggedOtherMsg ;PCMC_TAGGED_OTHER_MSG rgTaggedOtherMsg ;}*PCMC_RESPONSE_INFO ;

typedef struct _CMC_PEND_INFO {CRYPT_DATA_BLOB PendToken ;FILETIME PendTime ;}CMC_PEND_INFO ;
typedef struct _CMC_PEND_INFO {CRYPT_DATA_BLOB PendToken ;FILETIME PendTime ;}*PCMC_PEND_INFO ;

typedef struct _CMC_STATUS_INFO {DWORD dwStatus ;DWORD cBodyList ;DWORD *rgdwBodyList ;LPWSTR pwszStatusString ;DWORD dwOtherInfoChoice ;union {DWORD dwFailInfo ;PCMC_PEND_INFO pPendInfo ;};}CMC_STATUS_INFO ;
typedef struct _CMC_STATUS_INFO {DWORD dwStatus ;DWORD cBodyList ;DWORD *rgdwBodyList ;LPWSTR pwszStatusString ;DWORD dwOtherInfoChoice ;union {DWORD dwFailInfo ;PCMC_PEND_INFO pPendInfo ;};}*PCMC_STATUS_INFO ;

typedef struct _CMC_ADD_EXTENSIONS_INFO {DWORD dwCmcDataReference ;DWORD cCertReference ;DWORD *rgdwCertReference ;DWORD cExtension ;PCERT_EXTENSION rgExtension ;}CMC_ADD_EXTENSIONS_INFO ;
typedef struct _CMC_ADD_EXTENSIONS_INFO {DWORD dwCmcDataReference ;DWORD cCertReference ;DWORD *rgdwCertReference ;DWORD cExtension ;PCERT_EXTENSION rgExtension ;}*PCMC_ADD_EXTENSIONS_INFO ;

typedef struct _CMC_ADD_ATTRIBUTES_INFO {DWORD dwCmcDataReference ;DWORD cCertReference ;DWORD *rgdwCertReference ;DWORD cAttribute ;PCRYPT_ATTRIBUTE rgAttribute ;}CMC_ADD_ATTRIBUTES_INFO ;
typedef struct _CMC_ADD_ATTRIBUTES_INFO {DWORD dwCmcDataReference ;DWORD cCertReference ;DWORD *rgdwCertReference ;DWORD cAttribute ;PCRYPT_ATTRIBUTE rgAttribute ;}*PCMC_ADD_ATTRIBUTES_INFO ;

typedef struct _CERT_TEMPLATE_EXT {LPSTR pszObjId ;DWORD dwMajorVersion ;WINBOOL fMinorVersion ;DWORD dwMinorVersion ;}CERT_TEMPLATE_EXT ;
typedef struct _CERT_TEMPLATE_EXT {LPSTR pszObjId ;DWORD dwMajorVersion ;WINBOOL fMinorVersion ;DWORD dwMinorVersion ;}*PCERT_TEMPLATE_EXT ;

typedef struct _CERT_HASHED_URL {CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm ;CRYPT_HASH_BLOB Hash ;LPWSTR pwszUrl ;}CERT_HASHED_URL ;
typedef struct _CERT_HASHED_URL {CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm ;CRYPT_HASH_BLOB Hash ;LPWSTR pwszUrl ;}*PCERT_HASHED_URL ;

typedef struct _CERT_LOGOTYPE_DETAILS {LPWSTR pwszMimeType ;DWORD cHashedUrl ;PCERT_HASHED_URL rgHashedUrl ;}CERT_LOGOTYPE_DETAILS ;
typedef struct _CERT_LOGOTYPE_DETAILS {LPWSTR pwszMimeType ;DWORD cHashedUrl ;PCERT_HASHED_URL rgHashedUrl ;}*PCERT_LOGOTYPE_DETAILS ;

typedef struct _CERT_LOGOTYPE_REFERENCE {DWORD cHashedUrl ;PCERT_HASHED_URL rgHashedUrl ;}CERT_LOGOTYPE_REFERENCE ;
typedef struct _CERT_LOGOTYPE_REFERENCE {DWORD cHashedUrl ;PCERT_HASHED_URL rgHashedUrl ;}*PCERT_LOGOTYPE_REFERENCE ;

typedef struct _CERT_LOGOTYPE_IMAGE_INFO {DWORD dwLogotypeImageInfoChoice ;DWORD dwFileSize ;DWORD dwXSize ;DWORD dwYSize ;DWORD dwLogotypeImageResolutionChoice ;union {DWORD dwNumBits ;DWORD dwTableSize ;};LPWSTR pwszLanguage ;}CERT_LOGOTYPE_IMAGE_INFO ;
typedef struct _CERT_LOGOTYPE_IMAGE_INFO {DWORD dwLogotypeImageInfoChoice ;DWORD dwFileSize ;DWORD dwXSize ;DWORD dwYSize ;DWORD dwLogotypeImageResolutionChoice ;union {DWORD dwNumBits ;DWORD dwTableSize ;};LPWSTR pwszLanguage ;}*PCERT_LOGOTYPE_IMAGE_INFO ;

typedef struct _CERT_LOGOTYPE_IMAGE {CERT_LOGOTYPE_DETAILS LogotypeDetails ;PCERT_LOGOTYPE_IMAGE_INFO pLogotypeImageInfo ;}CERT_LOGOTYPE_IMAGE ;
typedef struct _CERT_LOGOTYPE_IMAGE {CERT_LOGOTYPE_DETAILS LogotypeDetails ;PCERT_LOGOTYPE_IMAGE_INFO pLogotypeImageInfo ;}*PCERT_LOGOTYPE_IMAGE ;

typedef struct _CERT_LOGOTYPE_AUDIO_INFO {DWORD dwFileSize ;DWORD dwPlayTime ;DWORD dwChannels ;DWORD dwSampleRate ;LPWSTR pwszLanguage ;}CERT_LOGOTYPE_AUDIO_INFO ;
typedef struct _CERT_LOGOTYPE_AUDIO_INFO {DWORD dwFileSize ;DWORD dwPlayTime ;DWORD dwChannels ;DWORD dwSampleRate ;LPWSTR pwszLanguage ;}*PCERT_LOGOTYPE_AUDIO_INFO ;

typedef struct _CERT_LOGOTYPE_AUDIO {CERT_LOGOTYPE_DETAILS LogotypeDetails ;PCERT_LOGOTYPE_AUDIO_INFO pLogotypeAudioInfo ;}CERT_LOGOTYPE_AUDIO ;
typedef struct _CERT_LOGOTYPE_AUDIO {CERT_LOGOTYPE_DETAILS LogotypeDetails ;PCERT_LOGOTYPE_AUDIO_INFO pLogotypeAudioInfo ;}*PCERT_LOGOTYPE_AUDIO ;

typedef struct _CERT_LOGOTYPE_DATA {DWORD cLogotypeImage ;PCERT_LOGOTYPE_IMAGE rgLogotypeImage ;DWORD cLogotypeAudio ;PCERT_LOGOTYPE_AUDIO rgLogotypeAudio ;}CERT_LOGOTYPE_DATA ;
typedef struct _CERT_LOGOTYPE_DATA {DWORD cLogotypeImage ;PCERT_LOGOTYPE_IMAGE rgLogotypeImage ;DWORD cLogotypeAudio ;PCERT_LOGOTYPE_AUDIO rgLogotypeAudio ;}*PCERT_LOGOTYPE_DATA ;

typedef struct _CERT_LOGOTYPE_INFO {DWORD dwLogotypeInfoChoice ;union {PCERT_LOGOTYPE_DATA pLogotypeDirectInfo ;PCERT_LOGOTYPE_REFERENCE pLogotypeIndirectInfo ;};}CERT_LOGOTYPE_INFO ;
typedef struct _CERT_LOGOTYPE_INFO {DWORD dwLogotypeInfoChoice ;union {PCERT_LOGOTYPE_DATA pLogotypeDirectInfo ;PCERT_LOGOTYPE_REFERENCE pLogotypeIndirectInfo ;};}*PCERT_LOGOTYPE_INFO ;

typedef struct _CERT_OTHER_LOGOTYPE_INFO {LPSTR pszObjId ;CERT_LOGOTYPE_INFO LogotypeInfo ;}CERT_OTHER_LOGOTYPE_INFO ;
typedef struct _CERT_OTHER_LOGOTYPE_INFO {LPSTR pszObjId ;CERT_LOGOTYPE_INFO LogotypeInfo ;}*PCERT_OTHER_LOGOTYPE_INFO ;

typedef struct _CERT_LOGOTYPE_EXT_INFO {DWORD cCommunityLogo ;PCERT_LOGOTYPE_INFO rgCommunityLogo ;PCERT_LOGOTYPE_INFO pIssuerLogo ;PCERT_LOGOTYPE_INFO pSubjectLogo ;DWORD cOtherLogo ;PCERT_OTHER_LOGOTYPE_INFO rgOtherLogo ;}CERT_LOGOTYPE_EXT_INFO ;
typedef struct _CERT_LOGOTYPE_EXT_INFO {DWORD cCommunityLogo ;PCERT_LOGOTYPE_INFO rgCommunityLogo ;PCERT_LOGOTYPE_INFO pIssuerLogo ;PCERT_LOGOTYPE_INFO pSubjectLogo ;DWORD cOtherLogo ;PCERT_OTHER_LOGOTYPE_INFO rgOtherLogo ;}*PCERT_LOGOTYPE_EXT_INFO ;

typedef struct _CERT_BIOMETRIC_DATA {DWORD dwTypeOfBiometricDataChoice ;union {DWORD dwPredefined ;LPSTR pszObjId ;};CERT_HASHED_URL HashedUrl ;}CERT_BIOMETRIC_DATA ;
typedef struct _CERT_BIOMETRIC_DATA {DWORD dwTypeOfBiometricDataChoice ;union {DWORD dwPredefined ;LPSTR pszObjId ;};CERT_HASHED_URL HashedUrl ;}*PCERT_BIOMETRIC_DATA ;

typedef struct _CERT_BIOMETRIC_EXT_INFO {DWORD cBiometricData ;PCERT_BIOMETRIC_DATA rgBiometricData ;}CERT_BIOMETRIC_EXT_INFO ;
typedef struct _CERT_BIOMETRIC_EXT_INFO {DWORD cBiometricData ;PCERT_BIOMETRIC_DATA rgBiometricData ;}*PCERT_BIOMETRIC_EXT_INFO ;

typedef struct _OCSP_SIGNATURE_INFO {CRYPT_ALGORITHM_IDENTIFIER SignatureAlgorithm ;CRYPT_BIT_BLOB Signature ;DWORD cCertEncoded ;PCERT_BLOB rgCertEncoded ;}OCSP_SIGNATURE_INFO ;
typedef struct _OCSP_SIGNATURE_INFO {CRYPT_ALGORITHM_IDENTIFIER SignatureAlgorithm ;CRYPT_BIT_BLOB Signature ;DWORD cCertEncoded ;PCERT_BLOB rgCertEncoded ;}*POCSP_SIGNATURE_INFO ;

typedef struct _OCSP_SIGNED_REQUEST_INFO {CRYPT_DER_BLOB ToBeSigned ;POCSP_SIGNATURE_INFO pOptionalSignatureInfo ;}OCSP_SIGNED_REQUEST_INFO ;
typedef struct _OCSP_SIGNED_REQUEST_INFO {CRYPT_DER_BLOB ToBeSigned ;POCSP_SIGNATURE_INFO pOptionalSignatureInfo ;}*POCSP_SIGNED_REQUEST_INFO ;

typedef struct _OCSP_CERT_ID {CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm ;CRYPT_HASH_BLOB IssuerNameHash ;CRYPT_HASH_BLOB IssuerKeyHash ;CRYPT_INTEGER_BLOB SerialNumber ;}OCSP_CERT_ID ;
typedef struct _OCSP_CERT_ID {CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm ;CRYPT_HASH_BLOB IssuerNameHash ;CRYPT_HASH_BLOB IssuerKeyHash ;CRYPT_INTEGER_BLOB SerialNumber ;}*POCSP_CERT_ID ;

typedef struct _OCSP_REQUEST_ENTRY {OCSP_CERT_ID CertId ;DWORD cExtension ;PCERT_EXTENSION rgExtension ;}OCSP_REQUEST_ENTRY ;
typedef struct _OCSP_REQUEST_ENTRY {OCSP_CERT_ID CertId ;DWORD cExtension ;PCERT_EXTENSION rgExtension ;}*POCSP_REQUEST_ENTRY ;

typedef struct _OCSP_REQUEST_INFO {DWORD dwVersion ;PCERT_ALT_NAME_ENTRY pRequestorName ;DWORD cRequestEntry ;POCSP_REQUEST_ENTRY rgRequestEntry ;DWORD cExtension ;PCERT_EXTENSION rgExtension ;}OCSP_REQUEST_INFO ;
typedef struct _OCSP_REQUEST_INFO {DWORD dwVersion ;PCERT_ALT_NAME_ENTRY pRequestorName ;DWORD cRequestEntry ;POCSP_REQUEST_ENTRY rgRequestEntry ;DWORD cExtension ;PCERT_EXTENSION rgExtension ;}*POCSP_REQUEST_INFO ;

typedef struct _OCSP_RESPONSE_INFO {DWORD dwStatus ;LPSTR pszObjId ;CRYPT_OBJID_BLOB Value ;}OCSP_RESPONSE_INFO ;
typedef struct _OCSP_RESPONSE_INFO {DWORD dwStatus ;LPSTR pszObjId ;CRYPT_OBJID_BLOB Value ;}*POCSP_RESPONSE_INFO ;

typedef struct _OCSP_BASIC_SIGNED_RESPONSE_INFO {CRYPT_DER_BLOB ToBeSigned ;OCSP_SIGNATURE_INFO SignatureInfo ;}OCSP_BASIC_SIGNED_RESPONSE_INFO ;
typedef struct _OCSP_BASIC_SIGNED_RESPONSE_INFO {CRYPT_DER_BLOB ToBeSigned ;OCSP_SIGNATURE_INFO SignatureInfo ;}*POCSP_BASIC_SIGNED_RESPONSE_INFO ;

typedef struct _OCSP_BASIC_REVOKED_INFO {FILETIME RevocationDate ;DWORD dwCrlReasonCode ;}OCSP_BASIC_REVOKED_INFO ;
typedef struct _OCSP_BASIC_REVOKED_INFO {FILETIME RevocationDate ;DWORD dwCrlReasonCode ;}*POCSP_BASIC_REVOKED_INFO ;

typedef struct _OCSP_BASIC_RESPONSE_ENTRY {OCSP_CERT_ID CertId ;DWORD dwCertStatus ;union {POCSP_BASIC_REVOKED_INFO pRevokedInfo ;};FILETIME ThisUpdate ;FILETIME NextUpdate ;DWORD cExtension ;PCERT_EXTENSION rgExtension ;}OCSP_BASIC_RESPONSE_ENTRY ;
typedef struct _OCSP_BASIC_RESPONSE_ENTRY {OCSP_CERT_ID CertId ;DWORD dwCertStatus ;union {POCSP_BASIC_REVOKED_INFO pRevokedInfo ;};FILETIME ThisUpdate ;FILETIME NextUpdate ;DWORD cExtension ;PCERT_EXTENSION rgExtension ;}*POCSP_BASIC_RESPONSE_ENTRY ;

typedef struct _OCSP_BASIC_RESPONSE_INFO {DWORD dwVersion ;DWORD dwResponderIdChoice ;union {CERT_NAME_BLOB ByNameResponderId ;CRYPT_HASH_BLOB ByKeyResponderId ;};FILETIME ProducedAt ;DWORD cResponseEntry ;POCSP_BASIC_RESPONSE_ENTRY rgResponseEntry ;DWORD cExtension ;PCERT_EXTENSION rgExtension ;}OCSP_BASIC_RESPONSE_INFO ;
typedef struct _OCSP_BASIC_RESPONSE_INFO {DWORD dwVersion ;DWORD dwResponderIdChoice ;union {CERT_NAME_BLOB ByNameResponderId ;CRYPT_HASH_BLOB ByKeyResponderId ;};FILETIME ProducedAt ;DWORD cResponseEntry ;POCSP_BASIC_RESPONSE_ENTRY rgResponseEntry ;DWORD cExtension ;PCERT_EXTENSION rgExtension ;}*POCSP_BASIC_RESPONSE_INFO ;

typedef void *HCRYPTOIDFUNCSET ;
typedef void *HCRYPTOIDFUNCADDR ;
typedef struct _CRYPT_OID_FUNC_ENTRY {LPCSTR pszOID ;void *pvFuncAddr ;}CRYPT_OID_FUNC_ENTRY ;
typedef struct _CRYPT_OID_FUNC_ENTRY {LPCSTR pszOID ;void *pvFuncAddr ;}*PCRYPT_OID_FUNC_ENTRY ;

WINBOOL CryptInstallOIDFunctionAddress (HMODULE hModule ,DWORD dwEncodingType ,LPCSTR pszFuncName ,DWORD cFuncEntry ,const CRYPT_OID_FUNC_ENTRY rgFuncEntry [],DWORD dwFlags );
HCRYPTOIDFUNCSET CryptInitOIDFunctionSet (LPCSTR pszFuncName ,DWORD dwFlags );
WINBOOL CryptGetOIDFunctionAddress (HCRYPTOIDFUNCSET hFuncSet ,DWORD dwEncodingType ,LPCSTR pszOID ,DWORD dwFlags ,void **ppvFuncAddr ,HCRYPTOIDFUNCADDR *phFuncAddr );
WINBOOL CryptGetDefaultOIDDllList (HCRYPTOIDFUNCSET hFuncSet ,DWORD dwEncodingType ,WCHAR *pwszDllList ,DWORD *pcchDllList );
WINBOOL CryptGetDefaultOIDFunctionAddress (HCRYPTOIDFUNCSET hFuncSet ,DWORD dwEncodingType ,LPCWSTR pwszDll ,DWORD dwFlags ,void **ppvFuncAddr ,HCRYPTOIDFUNCADDR *phFuncAddr );
WINBOOL CryptFreeOIDFunctionAddress (HCRYPTOIDFUNCADDR hFuncAddr ,DWORD dwFlags );
WINBOOL CryptRegisterOIDFunction (DWORD dwEncodingType ,LPCSTR pszFuncName ,LPCSTR pszOID ,LPCWSTR pwszDll ,LPCSTR pszOverrideFuncName );
WINBOOL CryptUnregisterOIDFunction (DWORD dwEncodingType ,LPCSTR pszFuncName ,LPCSTR pszOID );
WINBOOL CryptRegisterDefaultOIDFunction (DWORD dwEncodingType ,LPCSTR pszFuncName ,DWORD dwIndex ,LPCWSTR pwszDll );
WINBOOL CryptUnregisterDefaultOIDFunction (DWORD dwEncodingType ,LPCSTR pszFuncName ,LPCWSTR pwszDll );
WINBOOL CryptSetOIDFunctionValue (DWORD dwEncodingType ,LPCSTR pszFuncName ,LPCSTR pszOID ,LPCWSTR pwszValueName ,DWORD dwValueType ,const BYTE *pbValueData ,DWORD cbValueData );
WINBOOL CryptGetOIDFunctionValue (DWORD dwEncodingType ,LPCSTR pszFuncName ,LPCSTR pszOID ,LPCWSTR pwszValueName ,DWORD *pdwValueType ,BYTE *pbValueData ,DWORD *pcbValueData );
typedef WINBOOL (*PFN_CRYPT_ENUM_OID_FUNC )(DWORD dwEncodingType ,LPCSTR pszFuncName ,LPCSTR pszOID ,DWORD cValue ,const DWORD rgdwValueType [],LPCWSTR const rgpwszValueName [],const BYTE *const rgpbValueData [],const DWORD rgcbValueData [],void *pvArg );
WINBOOL CryptEnumOIDFunction (DWORD dwEncodingType ,LPCSTR pszFuncName ,LPCSTR pszOID ,DWORD dwFlags ,void *pvArg ,PFN_CRYPT_ENUM_OID_FUNC pfnEnumOIDFunc );
typedef struct _CRYPT_OID_INFO {DWORD cbSize ;LPCSTR pszOID ;LPCWSTR pwszName ;DWORD dwGroupId ;union {DWORD dwValue ;ALG_ID Algid ;DWORD dwLength ;};CRYPT_DATA_BLOB ExtraInfo ;}CRYPT_OID_INFO ;
typedef struct _CRYPT_OID_INFO {DWORD cbSize ;LPCSTR pszOID ;LPCWSTR pwszName ;DWORD dwGroupId ;union {DWORD dwValue ;ALG_ID Algid ;DWORD dwLength ;};CRYPT_DATA_BLOB ExtraInfo ;}*PCRYPT_OID_INFO ;

typedef const CRYPT_OID_INFO CCRYPT_OID_INFO ;
typedef const CRYPT_OID_INFO *PCCRYPT_OID_INFO ;

PCCRYPT_OID_INFO CryptFindOIDInfo (DWORD dwKeyType ,void *pvKey ,DWORD dwGroupId );
typedef WINBOOL (*PFN_CRYPT_ENUM_OID_INFO )(PCCRYPT_OID_INFO pInfo ,void *pvArg );
WINBOOL CryptRegisterOIDInfo (PCCRYPT_OID_INFO pInfo ,DWORD dwFlags );
WINBOOL CryptUnregisterOIDInfo (PCCRYPT_OID_INFO pInfo );
WINBOOL CryptEnumOIDInfo (DWORD dwGroupId ,DWORD dwFlags ,void *pvArg ,PFN_CRYPT_ENUM_OID_INFO pfnEnumOIDInfo );
LPCWSTR CryptFindLocalizedName (LPCWSTR pwszCryptName );
typedef struct _CERT_STRONG_SIGN_SERIALIZED_INFO {DWORD dwFlags ;LPWSTR pwszCNGSignHashAlgids ;LPWSTR pwszCNGPubKeyMinBitLengths ;}CERT_STRONG_SIGN_SERIALIZED_INFO ;
typedef struct _CERT_STRONG_SIGN_SERIALIZED_INFO {DWORD dwFlags ;LPWSTR pwszCNGSignHashAlgids ;LPWSTR pwszCNGPubKeyMinBitLengths ;}*PCERT_STRONG_SIGN_SERIALIZED_INFO ;

typedef struct _CERT_STRONG_SIGN_PARA {DWORD cbSize ;DWORD dwInfoChoice ;union {void *pvInfo ;PCERT_STRONG_SIGN_SERIALIZED_INFO pSerializedInfo ;LPSTR pszOID ;};}CERT_STRONG_SIGN_PARA ;
typedef struct _CERT_STRONG_SIGN_PARA {DWORD cbSize ;DWORD dwInfoChoice ;union {void *pvInfo ;PCERT_STRONG_SIGN_SERIALIZED_INFO pSerializedInfo ;LPSTR pszOID ;};}*PCERT_STRONG_SIGN_PARA ;

typedef const CERT_STRONG_SIGN_PARA *PCCERT_STRONG_SIGN_PARA ;
typedef void *HCRYPTMSG ;
typedef struct _CERT_ISSUER_SERIAL_NUMBER {CERT_NAME_BLOB Issuer ;CRYPT_INTEGER_BLOB SerialNumber ;}CERT_ISSUER_SERIAL_NUMBER ;
typedef struct _CERT_ISSUER_SERIAL_NUMBER {CERT_NAME_BLOB Issuer ;CRYPT_INTEGER_BLOB SerialNumber ;}*PCERT_ISSUER_SERIAL_NUMBER ;

typedef struct _CERT_ID {DWORD dwIdChoice ;union {CERT_ISSUER_SERIAL_NUMBER IssuerSerialNumber ;CRYPT_HASH_BLOB KeyId ;CRYPT_HASH_BLOB HashId ;};}CERT_ID ;
typedef struct _CERT_ID {DWORD dwIdChoice ;union {CERT_ISSUER_SERIAL_NUMBER IssuerSerialNumber ;CRYPT_HASH_BLOB KeyId ;CRYPT_HASH_BLOB HashId ;};}*PCERT_ID ;

typedef struct _CMSG_SIGNER_ENCODE_INFO {DWORD cbSize ;PCERT_INFO pCertInfo ;union {HCRYPTPROV hCryptProv ;NCRYPT_KEY_HANDLE hNCryptKey ;};DWORD dwKeySpec ;CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm ;void *pvHashAuxInfo ;DWORD cAuthAttr ;PCRYPT_ATTRIBUTE rgAuthAttr ;DWORD cUnauthAttr ;PCRYPT_ATTRIBUTE rgUnauthAttr ;}CMSG_SIGNER_ENCODE_INFO ;
typedef struct _CMSG_SIGNER_ENCODE_INFO {DWORD cbSize ;PCERT_INFO pCertInfo ;union {HCRYPTPROV hCryptProv ;NCRYPT_KEY_HANDLE hNCryptKey ;};DWORD dwKeySpec ;CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm ;void *pvHashAuxInfo ;DWORD cAuthAttr ;PCRYPT_ATTRIBUTE rgAuthAttr ;DWORD cUnauthAttr ;PCRYPT_ATTRIBUTE rgUnauthAttr ;}*PCMSG_SIGNER_ENCODE_INFO ;

typedef struct _CMSG_SIGNED_ENCODE_INFO {DWORD cbSize ;DWORD cSigners ;PCMSG_SIGNER_ENCODE_INFO rgSigners ;DWORD cCertEncoded ;PCERT_BLOB rgCertEncoded ;DWORD cCrlEncoded ;PCRL_BLOB rgCrlEncoded ;}CMSG_SIGNED_ENCODE_INFO ;
typedef struct _CMSG_SIGNED_ENCODE_INFO {DWORD cbSize ;DWORD cSigners ;PCMSG_SIGNER_ENCODE_INFO rgSigners ;DWORD cCertEncoded ;PCERT_BLOB rgCertEncoded ;DWORD cCrlEncoded ;PCRL_BLOB rgCrlEncoded ;}*PCMSG_SIGNED_ENCODE_INFO ;

typedef struct _CMSG_RECIPIENT_ENCODE_INFO CMSG_RECIPIENT_ENCODE_INFO ;
typedef struct _CMSG_RECIPIENT_ENCODE_INFO *PCMSG_RECIPIENT_ENCODE_INFO ;

typedef struct _CMSG_ENVELOPED_ENCODE_INFO {DWORD cbSize ;HCRYPTPROV_LEGACY hCryptProv ;CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm ;void *pvEncryptionAuxInfo ;DWORD cRecipients ;PCERT_INFO *rgpRecipients ;}CMSG_ENVELOPED_ENCODE_INFO ;
typedef struct _CMSG_ENVELOPED_ENCODE_INFO {DWORD cbSize ;HCRYPTPROV_LEGACY hCryptProv ;CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm ;void *pvEncryptionAuxInfo ;DWORD cRecipients ;PCERT_INFO *rgpRecipients ;}*PCMSG_ENVELOPED_ENCODE_INFO ;

typedef struct _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO {DWORD cbSize ;CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm ;void *pvKeyEncryptionAuxInfo ;HCRYPTPROV_LEGACY hCryptProv ;CRYPT_BIT_BLOB RecipientPublicKey ;CERT_ID RecipientId ;}CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO ;
typedef struct _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO {DWORD cbSize ;CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm ;void *pvKeyEncryptionAuxInfo ;HCRYPTPROV_LEGACY hCryptProv ;CRYPT_BIT_BLOB RecipientPublicKey ;CERT_ID RecipientId ;}*PCMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO ;

typedef struct _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO {DWORD cbSize ;CRYPT_BIT_BLOB RecipientPublicKey ;CERT_ID RecipientId ;FILETIME Date ;PCRYPT_ATTRIBUTE_TYPE_VALUE pOtherAttr ;}CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO ;
typedef struct _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO {DWORD cbSize ;CRYPT_BIT_BLOB RecipientPublicKey ;CERT_ID RecipientId ;FILETIME Date ;PCRYPT_ATTRIBUTE_TYPE_VALUE pOtherAttr ;}*PCMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO ;

typedef struct _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO {DWORD cbSize ;CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm ;void *pvKeyEncryptionAuxInfo ;CRYPT_ALGORITHM_IDENTIFIER KeyWrapAlgorithm ;void *pvKeyWrapAuxInfo ;HCRYPTPROV_LEGACY hCryptProv ;DWORD dwKeySpec ;DWORD dwKeyChoice ;union {PCRYPT_ALGORITHM_IDENTIFIER pEphemeralAlgorithm ;PCERT_ID pSenderId ;};CRYPT_DATA_BLOB UserKeyingMaterial ;DWORD cRecipientEncryptedKeys ;PCMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO *rgpRecipientEncryptedKeys ;}CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO ;
typedef struct _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO {DWORD cbSize ;CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm ;void *pvKeyEncryptionAuxInfo ;CRYPT_ALGORITHM_IDENTIFIER KeyWrapAlgorithm ;void *pvKeyWrapAuxInfo ;HCRYPTPROV_LEGACY hCryptProv ;DWORD dwKeySpec ;DWORD dwKeyChoice ;union {PCRYPT_ALGORITHM_IDENTIFIER pEphemeralAlgorithm ;PCERT_ID pSenderId ;};CRYPT_DATA_BLOB UserKeyingMaterial ;DWORD cRecipientEncryptedKeys ;PCMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO *rgpRecipientEncryptedKeys ;}*PCMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO ;

typedef struct _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO {DWORD cbSize ;CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm ;void *pvKeyEncryptionAuxInfo ;HCRYPTPROV hCryptProv ;DWORD dwKeyChoice ;union {HCRYPTKEY hKeyEncryptionKey ;void *pvKeyEncryptionKey ;};CRYPT_DATA_BLOB KeyId ;FILETIME Date ;PCRYPT_ATTRIBUTE_TYPE_VALUE pOtherAttr ;}CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO ;
typedef struct _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO {DWORD cbSize ;CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm ;void *pvKeyEncryptionAuxInfo ;HCRYPTPROV hCryptProv ;DWORD dwKeyChoice ;union {HCRYPTKEY hKeyEncryptionKey ;void *pvKeyEncryptionKey ;};CRYPT_DATA_BLOB KeyId ;FILETIME Date ;PCRYPT_ATTRIBUTE_TYPE_VALUE pOtherAttr ;}*PCMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO ;

struct _CMSG_RECIPIENT_ENCODE_INFO {DWORD dwRecipientChoice ;union {PCMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO pKeyTrans ;PCMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO pKeyAgree ;PCMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO pMailList ;};};
typedef struct _CMSG_RC2_AUX_INFO {DWORD cbSize ;DWORD dwBitLen ;}CMSG_RC2_AUX_INFO ;
typedef struct _CMSG_RC2_AUX_INFO {DWORD cbSize ;DWORD dwBitLen ;}*PCMSG_RC2_AUX_INFO ;

typedef struct _CMSG_SP3_COMPATIBLE_AUX_INFO {DWORD cbSize ;DWORD dwFlags ;}CMSG_SP3_COMPATIBLE_AUX_INFO ;
typedef struct _CMSG_SP3_COMPATIBLE_AUX_INFO {DWORD cbSize ;DWORD dwFlags ;}*PCMSG_SP3_COMPATIBLE_AUX_INFO ;

typedef struct _CMSG_RC4_AUX_INFO {DWORD cbSize ;DWORD dwBitLen ;}CMSG_RC4_AUX_INFO ;
typedef struct _CMSG_RC4_AUX_INFO {DWORD cbSize ;DWORD dwBitLen ;}*PCMSG_RC4_AUX_INFO ;

typedef struct _CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO {DWORD cbSize ;CMSG_SIGNED_ENCODE_INFO SignedInfo ;CMSG_ENVELOPED_ENCODE_INFO EnvelopedInfo ;}CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO ;
typedef struct _CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO {DWORD cbSize ;CMSG_SIGNED_ENCODE_INFO SignedInfo ;CMSG_ENVELOPED_ENCODE_INFO EnvelopedInfo ;}*PCMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO ;

typedef struct _CMSG_HASHED_ENCODE_INFO {DWORD cbSize ;HCRYPTPROV_LEGACY hCryptProv ;CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm ;void *pvHashAuxInfo ;}CMSG_HASHED_ENCODE_INFO ;
typedef struct _CMSG_HASHED_ENCODE_INFO {DWORD cbSize ;HCRYPTPROV_LEGACY hCryptProv ;CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm ;void *pvHashAuxInfo ;}*PCMSG_HASHED_ENCODE_INFO ;

typedef struct _CMSG_ENCRYPTED_ENCODE_INFO {DWORD cbSize ;CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm ;void *pvEncryptionAuxInfo ;}CMSG_ENCRYPTED_ENCODE_INFO ;
typedef struct _CMSG_ENCRYPTED_ENCODE_INFO {DWORD cbSize ;CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm ;void *pvEncryptionAuxInfo ;}*PCMSG_ENCRYPTED_ENCODE_INFO ;

typedef WINBOOL (*PFN_CMSG_STREAM_OUTPUT )(const void *pvArg ,BYTE *pbData ,DWORD cbData ,WINBOOL fFinal );
typedef struct _CMSG_STREAM_INFO {DWORD cbContent ;PFN_CMSG_STREAM_OUTPUT pfnStreamOutput ;void *pvArg ;}CMSG_STREAM_INFO ;
typedef struct _CMSG_STREAM_INFO {DWORD cbContent ;PFN_CMSG_STREAM_OUTPUT pfnStreamOutput ;void *pvArg ;}*PCMSG_STREAM_INFO ;

HCRYPTMSG CryptMsgOpenToEncode (DWORD dwMsgEncodingType ,DWORD dwFlags ,DWORD dwMsgType ,void const *pvMsgEncodeInfo ,LPSTR pszInnerContentObjID ,PCMSG_STREAM_INFO pStreamInfo );
DWORD CryptMsgCalculateEncodedLength (DWORD dwMsgEncodingType ,DWORD dwFlags ,DWORD dwMsgType ,void const *pvMsgEncodeInfo ,LPSTR pszInnerContentObjID ,DWORD cbData );
HCRYPTMSG CryptMsgOpenToDecode (DWORD dwMsgEncodingType ,DWORD dwFlags ,DWORD dwMsgType ,HCRYPTPROV_LEGACY hCryptProv ,PCERT_INFO pRecipientInfo ,PCMSG_STREAM_INFO pStreamInfo );
HCRYPTMSG CryptMsgDuplicate (HCRYPTMSG hCryptMsg );
WINBOOL CryptMsgClose (HCRYPTMSG hCryptMsg );
WINBOOL CryptMsgUpdate (HCRYPTMSG hCryptMsg ,const BYTE *pbData ,DWORD cbData ,WINBOOL fFinal );
WINBOOL CryptMsgGetParam (HCRYPTMSG hCryptMsg ,DWORD dwParamType ,DWORD dwIndex ,void *pvData ,DWORD *pcbData );
typedef struct _CMSG_SIGNER_INFO {DWORD dwVersion ;CERT_NAME_BLOB Issuer ;CRYPT_INTEGER_BLOB SerialNumber ;CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm ;CRYPT_ALGORITHM_IDENTIFIER HashEncryptionAlgorithm ;CRYPT_DATA_BLOB EncryptedHash ;CRYPT_ATTRIBUTES AuthAttrs ;CRYPT_ATTRIBUTES UnauthAttrs ;}CMSG_SIGNER_INFO ;
typedef struct _CMSG_SIGNER_INFO {DWORD dwVersion ;CERT_NAME_BLOB Issuer ;CRYPT_INTEGER_BLOB SerialNumber ;CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm ;CRYPT_ALGORITHM_IDENTIFIER HashEncryptionAlgorithm ;CRYPT_DATA_BLOB EncryptedHash ;CRYPT_ATTRIBUTES AuthAttrs ;CRYPT_ATTRIBUTES UnauthAttrs ;}*PCMSG_SIGNER_INFO ;

typedef struct _CMSG_CMS_SIGNER_INFO {DWORD dwVersion ;CERT_ID SignerId ;CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm ;CRYPT_ALGORITHM_IDENTIFIER HashEncryptionAlgorithm ;CRYPT_DATA_BLOB EncryptedHash ;CRYPT_ATTRIBUTES AuthAttrs ;CRYPT_ATTRIBUTES UnauthAttrs ;}CMSG_CMS_SIGNER_INFO ;
typedef struct _CMSG_CMS_SIGNER_INFO {DWORD dwVersion ;CERT_ID SignerId ;CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm ;CRYPT_ALGORITHM_IDENTIFIER HashEncryptionAlgorithm ;CRYPT_DATA_BLOB EncryptedHash ;CRYPT_ATTRIBUTES AuthAttrs ;CRYPT_ATTRIBUTES UnauthAttrs ;}*PCMSG_CMS_SIGNER_INFO ;

typedef CRYPT_ATTRIBUTES CMSG_ATTR ;
typedef CRYPT_ATTRIBUTES *PCMSG_ATTR ;
typedef struct _CMSG_KEY_TRANS_RECIPIENT_INFO {DWORD dwVersion ;CERT_ID RecipientId ;CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm ;CRYPT_DATA_BLOB EncryptedKey ;}CMSG_KEY_TRANS_RECIPIENT_INFO ;
typedef struct _CMSG_KEY_TRANS_RECIPIENT_INFO {DWORD dwVersion ;CERT_ID RecipientId ;CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm ;CRYPT_DATA_BLOB EncryptedKey ;}*PCMSG_KEY_TRANS_RECIPIENT_INFO ;

typedef struct _CMSG_RECIPIENT_ENCRYPTED_KEY_INFO {CERT_ID RecipientId ;CRYPT_DATA_BLOB EncryptedKey ;FILETIME Date ;PCRYPT_ATTRIBUTE_TYPE_VALUE pOtherAttr ;}CMSG_RECIPIENT_ENCRYPTED_KEY_INFO ;
typedef struct _CMSG_RECIPIENT_ENCRYPTED_KEY_INFO {CERT_ID RecipientId ;CRYPT_DATA_BLOB EncryptedKey ;FILETIME Date ;PCRYPT_ATTRIBUTE_TYPE_VALUE pOtherAttr ;}*PCMSG_RECIPIENT_ENCRYPTED_KEY_INFO ;

typedef struct _CMSG_KEY_AGREE_RECIPIENT_INFO {DWORD dwVersion ;DWORD dwOriginatorChoice ;union {CERT_ID OriginatorCertId ;CERT_PUBLIC_KEY_INFO OriginatorPublicKeyInfo ;};CRYPT_DATA_BLOB UserKeyingMaterial ;CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm ;DWORD cRecipientEncryptedKeys ;PCMSG_RECIPIENT_ENCRYPTED_KEY_INFO *rgpRecipientEncryptedKeys ;}CMSG_KEY_AGREE_RECIPIENT_INFO ;
typedef struct _CMSG_KEY_AGREE_RECIPIENT_INFO {DWORD dwVersion ;DWORD dwOriginatorChoice ;union {CERT_ID OriginatorCertId ;CERT_PUBLIC_KEY_INFO OriginatorPublicKeyInfo ;};CRYPT_DATA_BLOB UserKeyingMaterial ;CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm ;DWORD cRecipientEncryptedKeys ;PCMSG_RECIPIENT_ENCRYPTED_KEY_INFO *rgpRecipientEncryptedKeys ;}*PCMSG_KEY_AGREE_RECIPIENT_INFO ;

typedef struct _CMSG_MAIL_LIST_RECIPIENT_INFO {DWORD dwVersion ;CRYPT_DATA_BLOB KeyId ;CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm ;CRYPT_DATA_BLOB EncryptedKey ;FILETIME Date ;PCRYPT_ATTRIBUTE_TYPE_VALUE pOtherAttr ;}CMSG_MAIL_LIST_RECIPIENT_INFO ;
typedef struct _CMSG_MAIL_LIST_RECIPIENT_INFO {DWORD dwVersion ;CRYPT_DATA_BLOB KeyId ;CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm ;CRYPT_DATA_BLOB EncryptedKey ;FILETIME Date ;PCRYPT_ATTRIBUTE_TYPE_VALUE pOtherAttr ;}*PCMSG_MAIL_LIST_RECIPIENT_INFO ;

typedef struct _CMSG_CMS_RECIPIENT_INFO {DWORD dwRecipientChoice ;union {PCMSG_KEY_TRANS_RECIPIENT_INFO pKeyTrans ;PCMSG_KEY_AGREE_RECIPIENT_INFO pKeyAgree ;PCMSG_MAIL_LIST_RECIPIENT_INFO pMailList ;};}CMSG_CMS_RECIPIENT_INFO ;
typedef struct _CMSG_CMS_RECIPIENT_INFO {DWORD dwRecipientChoice ;union {PCMSG_KEY_TRANS_RECIPIENT_INFO pKeyTrans ;PCMSG_KEY_AGREE_RECIPIENT_INFO pKeyAgree ;PCMSG_MAIL_LIST_RECIPIENT_INFO pMailList ;};}*PCMSG_CMS_RECIPIENT_INFO ;

WINBOOL CryptMsgControl (HCRYPTMSG hCryptMsg ,DWORD dwFlags ,DWORD dwCtrlType ,void const *pvCtrlPara );
typedef struct _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA {DWORD cbSize ;HCRYPTPROV_LEGACY hCryptProv ;DWORD dwSignerIndex ;DWORD dwSignerType ;void *pvSigner ;}CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA ;
typedef struct _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA {DWORD cbSize ;HCRYPTPROV_LEGACY hCryptProv ;DWORD dwSignerIndex ;DWORD dwSignerType ;void *pvSigner ;}*PCMSG_CTRL_VERIFY_SIGNATURE_EX_PARA ;

typedef struct _CMSG_CTRL_DECRYPT_PARA {DWORD cbSize ;union {HCRYPTPROV hCryptProv ;NCRYPT_KEY_HANDLE hNCryptKey ;};DWORD dwKeySpec ;DWORD dwRecipientIndex ;}CMSG_CTRL_DECRYPT_PARA ;
typedef struct _CMSG_CTRL_DECRYPT_PARA {DWORD cbSize ;union {HCRYPTPROV hCryptProv ;NCRYPT_KEY_HANDLE hNCryptKey ;};DWORD dwKeySpec ;DWORD dwRecipientIndex ;}*PCMSG_CTRL_DECRYPT_PARA ;

typedef struct _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA {DWORD cbSize ;union {HCRYPTPROV hCryptProv ;NCRYPT_KEY_HANDLE hNCryptKey ;};DWORD dwKeySpec ;PCMSG_KEY_TRANS_RECIPIENT_INFO pKeyTrans ;DWORD dwRecipientIndex ;}CMSG_CTRL_KEY_TRANS_DECRYPT_PARA ;
typedef struct _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA {DWORD cbSize ;union {HCRYPTPROV hCryptProv ;NCRYPT_KEY_HANDLE hNCryptKey ;};DWORD dwKeySpec ;PCMSG_KEY_TRANS_RECIPIENT_INFO pKeyTrans ;DWORD dwRecipientIndex ;}*PCMSG_CTRL_KEY_TRANS_DECRYPT_PARA ;

typedef struct _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA {DWORD cbSize ;union {HCRYPTPROV hCryptProv ;NCRYPT_KEY_HANDLE hNCryptKey ;};DWORD dwKeySpec ;PCMSG_KEY_AGREE_RECIPIENT_INFO pKeyAgree ;DWORD dwRecipientIndex ;DWORD dwRecipientEncryptedKeyIndex ;CRYPT_BIT_BLOB OriginatorPublicKey ;}CMSG_CTRL_KEY_AGREE_DECRYPT_PARA ;
typedef struct _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA {DWORD cbSize ;union {HCRYPTPROV hCryptProv ;NCRYPT_KEY_HANDLE hNCryptKey ;};DWORD dwKeySpec ;PCMSG_KEY_AGREE_RECIPIENT_INFO pKeyAgree ;DWORD dwRecipientIndex ;DWORD dwRecipientEncryptedKeyIndex ;CRYPT_BIT_BLOB OriginatorPublicKey ;}*PCMSG_CTRL_KEY_AGREE_DECRYPT_PARA ;

typedef struct _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA {DWORD cbSize ;HCRYPTPROV hCryptProv ;PCMSG_MAIL_LIST_RECIPIENT_INFO pMailList ;DWORD dwRecipientIndex ;DWORD dwKeyChoice ;union {HCRYPTKEY hKeyEncryptionKey ;void *pvKeyEncryptionKey ;};}CMSG_CTRL_MAIL_LIST_DECRYPT_PARA ;
typedef struct _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA {DWORD cbSize ;HCRYPTPROV hCryptProv ;PCMSG_MAIL_LIST_RECIPIENT_INFO pMailList ;DWORD dwRecipientIndex ;DWORD dwKeyChoice ;union {HCRYPTKEY hKeyEncryptionKey ;void *pvKeyEncryptionKey ;};}*PCMSG_CTRL_MAIL_LIST_DECRYPT_PARA ;

typedef struct _CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA {DWORD cbSize ;DWORD dwSignerIndex ;CRYPT_DATA_BLOB blob ;}CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA ;
typedef struct _CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA {DWORD cbSize ;DWORD dwSignerIndex ;CRYPT_DATA_BLOB blob ;}*PCMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA ;

typedef struct _CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA {DWORD cbSize ;DWORD dwSignerIndex ;DWORD dwUnauthAttrIndex ;}CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA ;
typedef struct _CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA {DWORD cbSize ;DWORD dwSignerIndex ;DWORD dwUnauthAttrIndex ;}*PCMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA ;

WINBOOL CryptMsgVerifyCountersignatureEncoded (HCRYPTPROV_LEGACY hCryptProv ,DWORD dwEncodingType ,PBYTE pbSignerInfo ,DWORD cbSignerInfo ,PBYTE pbSignerInfoCountersignature ,DWORD cbSignerInfoCountersignature ,PCERT_INFO pciCountersigner );
WINBOOL CryptMsgVerifyCountersignatureEncodedEx (HCRYPTPROV_LEGACY hCryptProv ,DWORD dwEncodingType ,PBYTE pbSignerInfo ,DWORD cbSignerInfo ,PBYTE pbSignerInfoCountersignature ,DWORD cbSignerInfoCountersignature ,DWORD dwSignerType ,void *pvSigner ,DWORD dwFlags ,void *pvExtra );
WINBOOL CryptMsgCountersign (HCRYPTMSG hCryptMsg ,DWORD dwIndex ,DWORD cCountersigners ,PCMSG_SIGNER_ENCODE_INFO rgCountersigners );
WINBOOL CryptMsgCountersignEncoded (DWORD dwEncodingType ,PBYTE pbSignerInfo ,DWORD cbSignerInfo ,DWORD cCountersigners ,PCMSG_SIGNER_ENCODE_INFO rgCountersigners ,PBYTE pbCountersignature ,PDWORD pcbCountersignature );
typedef void *(*PFN_CMSG_ALLOC )(size_t cb );
typedef void (*PFN_CMSG_FREE )(void *pv );
typedef WINBOOL (*PFN_CMSG_GEN_ENCRYPT_KEY )(HCRYPTPROV *phCryptProv ,PCRYPT_ALGORITHM_IDENTIFIER paiEncrypt ,PVOID pvEncryptAuxInfo ,PCERT_PUBLIC_KEY_INFO pPublicKeyInfo ,PFN_CMSG_ALLOC pfnAlloc ,HCRYPTKEY *phEncryptKey ,PBYTE *ppbEncryptParameters ,PDWORD pcbEncryptParameters );
typedef WINBOOL (*PFN_CMSG_EXPORT_ENCRYPT_KEY )(HCRYPTPROV hCryptProv ,HCRYPTKEY hEncryptKey ,PCERT_PUBLIC_KEY_INFO pPublicKeyInfo ,PBYTE pbData ,PDWORD pcbData );
typedef WINBOOL (*PFN_CMSG_IMPORT_ENCRYPT_KEY )(HCRYPTPROV hCryptProv ,DWORD dwKeySpec ,PCRYPT_ALGORITHM_IDENTIFIER paiEncrypt ,PCRYPT_ALGORITHM_IDENTIFIER paiPubKey ,PBYTE pbEncodedKey ,DWORD cbEncodedKey ,HCRYPTKEY *phEncryptKey );
typedef struct _CMSG_CONTENT_ENCRYPT_INFO {DWORD cbSize ;HCRYPTPROV_LEGACY hCryptProv ;CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm ;void *pvEncryptionAuxInfo ;DWORD cRecipients ;PCMSG_RECIPIENT_ENCODE_INFO rgCmsRecipients ;PFN_CMSG_ALLOC pfnAlloc ;PFN_CMSG_FREE pfnFree ;DWORD dwEncryptFlags ;union {HCRYPTKEY hContentEncryptKey ;BCRYPT_KEY_HANDLE hCNGContentEncryptKey ;};DWORD dwFlags ;WINBOOL fCNG ;BYTE *pbCNGContentEncryptKeyObject ;BYTE *pbContentEncryptKey ;DWORD cbContentEncryptKey ;}CMSG_CONTENT_ENCRYPT_INFO ;
typedef struct _CMSG_CONTENT_ENCRYPT_INFO {DWORD cbSize ;HCRYPTPROV_LEGACY hCryptProv ;CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm ;void *pvEncryptionAuxInfo ;DWORD cRecipients ;PCMSG_RECIPIENT_ENCODE_INFO rgCmsRecipients ;PFN_CMSG_ALLOC pfnAlloc ;PFN_CMSG_FREE pfnFree ;DWORD dwEncryptFlags ;union {HCRYPTKEY hContentEncryptKey ;BCRYPT_KEY_HANDLE hCNGContentEncryptKey ;};DWORD dwFlags ;WINBOOL fCNG ;BYTE *pbCNGContentEncryptKeyObject ;BYTE *pbContentEncryptKey ;DWORD cbContentEncryptKey ;}*PCMSG_CONTENT_ENCRYPT_INFO ;

typedef WINBOOL (*PFN_CMSG_GEN_CONTENT_ENCRYPT_KEY )(PCMSG_CONTENT_ENCRYPT_INFO pContentEncryptInfo ,DWORD dwFlags ,void *pvReserved );
typedef struct _CMSG_KEY_TRANS_ENCRYPT_INFO {DWORD cbSize ;DWORD dwRecipientIndex ;CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm ;CRYPT_DATA_BLOB EncryptedKey ;DWORD dwFlags ;}CMSG_KEY_TRANS_ENCRYPT_INFO ;
typedef struct _CMSG_KEY_TRANS_ENCRYPT_INFO {DWORD cbSize ;DWORD dwRecipientIndex ;CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm ;CRYPT_DATA_BLOB EncryptedKey ;DWORD dwFlags ;}*PCMSG_KEY_TRANS_ENCRYPT_INFO ;

typedef WINBOOL (*PFN_CMSG_EXPORT_KEY_TRANS )(PCMSG_CONTENT_ENCRYPT_INFO pContentEncryptInfo ,PCMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO pKeyTransEncodeInfo ,PCMSG_KEY_TRANS_ENCRYPT_INFO pKeyTransEncryptInfo ,DWORD dwFlags ,void *pvReserved );
typedef struct _CMSG_KEY_AGREE_KEY_ENCRYPT_INFO {DWORD cbSize ;CRYPT_DATA_BLOB EncryptedKey ;}CMSG_KEY_AGREE_KEY_ENCRYPT_INFO ;
typedef struct _CMSG_KEY_AGREE_KEY_ENCRYPT_INFO {DWORD cbSize ;CRYPT_DATA_BLOB EncryptedKey ;}*PCMSG_KEY_AGREE_KEY_ENCRYPT_INFO ;

typedef struct _CMSG_KEY_AGREE_ENCRYPT_INFO {DWORD cbSize ;DWORD dwRecipientIndex ;CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm ;CRYPT_DATA_BLOB UserKeyingMaterial ;DWORD dwOriginatorChoice ;union {CERT_ID OriginatorCertId ;CERT_PUBLIC_KEY_INFO OriginatorPublicKeyInfo ;};DWORD cKeyAgreeKeyEncryptInfo ;PCMSG_KEY_AGREE_KEY_ENCRYPT_INFO *rgpKeyAgreeKeyEncryptInfo ;DWORD dwFlags ;}CMSG_KEY_AGREE_ENCRYPT_INFO ;
typedef struct _CMSG_KEY_AGREE_ENCRYPT_INFO {DWORD cbSize ;DWORD dwRecipientIndex ;CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm ;CRYPT_DATA_BLOB UserKeyingMaterial ;DWORD dwOriginatorChoice ;union {CERT_ID OriginatorCertId ;CERT_PUBLIC_KEY_INFO OriginatorPublicKeyInfo ;};DWORD cKeyAgreeKeyEncryptInfo ;PCMSG_KEY_AGREE_KEY_ENCRYPT_INFO *rgpKeyAgreeKeyEncryptInfo ;DWORD dwFlags ;}*PCMSG_KEY_AGREE_ENCRYPT_INFO ;

typedef WINBOOL (*PFN_CMSG_EXPORT_KEY_AGREE )(PCMSG_CONTENT_ENCRYPT_INFO pContentEncryptInfo ,PCMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO pKeyAgreeEncodeInfo ,PCMSG_KEY_AGREE_ENCRYPT_INFO pKeyAgreeEncryptInfo ,DWORD dwFlags ,void *pvReserved );
typedef struct _CMSG_MAIL_LIST_ENCRYPT_INFO {DWORD cbSize ;DWORD dwRecipientIndex ;CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm ;CRYPT_DATA_BLOB EncryptedKey ;DWORD dwFlags ;}CMSG_MAIL_LIST_ENCRYPT_INFO ;
typedef struct _CMSG_MAIL_LIST_ENCRYPT_INFO {DWORD cbSize ;DWORD dwRecipientIndex ;CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm ;CRYPT_DATA_BLOB EncryptedKey ;DWORD dwFlags ;}*PCMSG_MAIL_LIST_ENCRYPT_INFO ;

typedef WINBOOL (*PFN_CMSG_EXPORT_MAIL_LIST )(PCMSG_CONTENT_ENCRYPT_INFO pContentEncryptInfo ,PCMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO pMailListEncodeInfo ,PCMSG_MAIL_LIST_ENCRYPT_INFO pMailListEncryptInfo ,DWORD dwFlags ,void *pvReserved );
typedef WINBOOL (*PFN_CMSG_IMPORT_KEY_TRANS )(PCRYPT_ALGORITHM_IDENTIFIER pContentEncryptionAlgorithm ,PCMSG_CTRL_KEY_TRANS_DECRYPT_PARA pKeyTransDecryptPara ,DWORD dwFlags ,void *pvReserved ,HCRYPTKEY *phContentEncryptKey );
typedef WINBOOL (*PFN_CMSG_IMPORT_KEY_AGREE )(PCRYPT_ALGORITHM_IDENTIFIER pContentEncryptionAlgorithm ,PCMSG_CTRL_KEY_AGREE_DECRYPT_PARA pKeyAgreeDecryptPara ,DWORD dwFlags ,void *pvReserved ,HCRYPTKEY *phContentEncryptKey );
typedef WINBOOL (*PFN_CMSG_IMPORT_MAIL_LIST )(PCRYPT_ALGORITHM_IDENTIFIER pContentEncryptionAlgorithm ,PCMSG_CTRL_MAIL_LIST_DECRYPT_PARA pMailListDecryptPara ,DWORD dwFlags ,void *pvReserved ,HCRYPTKEY *phContentEncryptKey );
typedef struct _CMSG_CNG_CONTENT_DECRYPT_INFO {DWORD cbSize ;CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm ;PFN_CMSG_ALLOC pfnAlloc ;PFN_CMSG_FREE pfnFree ;NCRYPT_KEY_HANDLE hNCryptKey ;BYTE *pbContentEncryptKey ;DWORD cbContentEncryptKey ;BCRYPT_KEY_HANDLE hCNGContentEncryptKey ;BYTE *pbCNGContentEncryptKeyObject ;}CMSG_CNG_CONTENT_DECRYPT_INFO ;
typedef struct _CMSG_CNG_CONTENT_DECRYPT_INFO {DWORD cbSize ;CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm ;PFN_CMSG_ALLOC pfnAlloc ;PFN_CMSG_FREE pfnFree ;NCRYPT_KEY_HANDLE hNCryptKey ;BYTE *pbContentEncryptKey ;DWORD cbContentEncryptKey ;BCRYPT_KEY_HANDLE hCNGContentEncryptKey ;BYTE *pbCNGContentEncryptKeyObject ;}*PCMSG_CNG_CONTENT_DECRYPT_INFO ;

typedef WINBOOL (*PFN_CMSG_CNG_IMPORT_KEY_TRANS )(PCMSG_CNG_CONTENT_DECRYPT_INFO pCNGContentDecryptInfo ,PCMSG_CTRL_KEY_TRANS_DECRYPT_PARA pKeyTransDecryptPara ,DWORD dwFlags ,void *pvReserved );
typedef WINBOOL (*PFN_CMSG_CNG_IMPORT_KEY_AGREE )(PCMSG_CNG_CONTENT_DECRYPT_INFO pCNGContentDecryptInfo ,PCMSG_CTRL_KEY_AGREE_DECRYPT_PARA pKeyAgreeDecryptPara ,DWORD dwFlags ,void *pvReserved );
typedef WINBOOL (*PFN_CMSG_CNG_IMPORT_CONTENT_ENCRYPT_KEY )(PCMSG_CNG_CONTENT_DECRYPT_INFO pCNGContentDecryptInfo ,DWORD dwFlags ,void *pvReserved );
typedef void *HCERTSTORE ;
typedef struct _CERT_CONTEXT {DWORD dwCertEncodingType ;BYTE *pbCertEncoded ;DWORD cbCertEncoded ;PCERT_INFO pCertInfo ;HCERTSTORE hCertStore ;}CERT_CONTEXT ;
typedef struct _CERT_CONTEXT {DWORD dwCertEncodingType ;BYTE *pbCertEncoded ;DWORD cbCertEncoded ;PCERT_INFO pCertInfo ;HCERTSTORE hCertStore ;}*PCERT_CONTEXT ;

typedef const CERT_CONTEXT *PCCERT_CONTEXT ;
typedef struct _CRL_CONTEXT {DWORD dwCertEncodingType ;BYTE *pbCrlEncoded ;DWORD cbCrlEncoded ;PCRL_INFO pCrlInfo ;HCERTSTORE hCertStore ;}CRL_CONTEXT ;
typedef struct _CRL_CONTEXT {DWORD dwCertEncodingType ;BYTE *pbCrlEncoded ;DWORD cbCrlEncoded ;PCRL_INFO pCrlInfo ;HCERTSTORE hCertStore ;}*PCRL_CONTEXT ;

typedef const CRL_CONTEXT *PCCRL_CONTEXT ;
typedef struct _CTL_CONTEXT {DWORD dwMsgAndCertEncodingType ;BYTE *pbCtlEncoded ;DWORD cbCtlEncoded ;PCTL_INFO pCtlInfo ;HCERTSTORE hCertStore ;HCRYPTMSG hCryptMsg ;BYTE *pbCtlContent ;DWORD cbCtlContent ;}CTL_CONTEXT ;
typedef struct _CTL_CONTEXT {DWORD dwMsgAndCertEncodingType ;BYTE *pbCtlEncoded ;DWORD cbCtlEncoded ;PCTL_INFO pCtlInfo ;HCERTSTORE hCertStore ;HCRYPTMSG hCryptMsg ;BYTE *pbCtlContent ;DWORD cbCtlContent ;}*PCTL_CONTEXT ;

typedef const CTL_CONTEXT *PCCTL_CONTEXT ;
typedef struct _CRYPT_KEY_PROV_PARAM {DWORD dwParam ;BYTE *pbData ;DWORD cbData ;DWORD dwFlags ;}CRYPT_KEY_PROV_PARAM ;
typedef struct _CRYPT_KEY_PROV_PARAM {DWORD dwParam ;BYTE *pbData ;DWORD cbData ;DWORD dwFlags ;}*PCRYPT_KEY_PROV_PARAM ;

typedef struct _CRYPT_KEY_PROV_INFO {LPWSTR pwszContainerName ;LPWSTR pwszProvName ;DWORD dwProvType ;DWORD dwFlags ;DWORD cProvParam ;PCRYPT_KEY_PROV_PARAM rgProvParam ;DWORD dwKeySpec ;}CRYPT_KEY_PROV_INFO ;
typedef struct _CRYPT_KEY_PROV_INFO {LPWSTR pwszContainerName ;LPWSTR pwszProvName ;DWORD dwProvType ;DWORD dwFlags ;DWORD cProvParam ;PCRYPT_KEY_PROV_PARAM rgProvParam ;DWORD dwKeySpec ;}*PCRYPT_KEY_PROV_INFO ;

typedef struct _CERT_KEY_CONTEXT {DWORD cbSize ;union {HCRYPTPROV hCryptProv ;NCRYPT_KEY_HANDLE hNCryptKey ;};DWORD dwKeySpec ;}CERT_KEY_CONTEXT ;
typedef struct _CERT_KEY_CONTEXT {DWORD cbSize ;union {HCRYPTPROV hCryptProv ;NCRYPT_KEY_HANDLE hNCryptKey ;};DWORD dwKeySpec ;}*PCERT_KEY_CONTEXT ;

typedef struct _ROOT_INFO_LUID {DWORD LowPart ;LONG HighPart ;}ROOT_INFO_LUID ;
typedef struct _ROOT_INFO_LUID {DWORD LowPart ;LONG HighPart ;}*PROOT_INFO_LUID ;

typedef struct _CRYPT_SMART_CARD_ROOT_INFO {BYTE rgbCardID [16 ];ROOT_INFO_LUID luid ;}CRYPT_SMART_CARD_ROOT_INFO ;
typedef struct _CRYPT_SMART_CARD_ROOT_INFO {BYTE rgbCardID [16 ];ROOT_INFO_LUID luid ;}*PCRYPT_SMART_CARD_ROOT_INFO ;

typedef struct _CERT_SYSTEM_STORE_RELOCATE_PARA {union {HKEY hKeyBase ;void *pvBase ;};union {void *pvSystemStore ;LPCSTR pszSystemStore ;LPCWSTR pwszSystemStore ;};}CERT_SYSTEM_STORE_RELOCATE_PARA ;
typedef struct _CERT_SYSTEM_STORE_RELOCATE_PARA {union {HKEY hKeyBase ;void *pvBase ;};union {void *pvSystemStore ;LPCSTR pszSystemStore ;LPCWSTR pwszSystemStore ;};}*PCERT_SYSTEM_STORE_RELOCATE_PARA ;

typedef struct _CERT_REGISTRY_STORE_CLIENT_GPT_PARA {HKEY hKeyBase ;LPWSTR pwszRegPath ;}CERT_REGISTRY_STORE_CLIENT_GPT_PARA ;
typedef struct _CERT_REGISTRY_STORE_CLIENT_GPT_PARA {HKEY hKeyBase ;LPWSTR pwszRegPath ;}*PCERT_REGISTRY_STORE_CLIENT_GPT_PARA ;

typedef struct _CERT_REGISTRY_STORE_ROAMING_PARA {HKEY hKey ;LPWSTR pwszStoreDirectory ;}CERT_REGISTRY_STORE_ROAMING_PARA ;
typedef struct _CERT_REGISTRY_STORE_ROAMING_PARA {HKEY hKey ;LPWSTR pwszStoreDirectory ;}*PCERT_REGISTRY_STORE_ROAMING_PARA ;

typedef struct _CERT_LDAP_STORE_OPENED_PARA {void *pvLdapSessionHandle ;LPCWSTR pwszLdapUrl ;}CERT_LDAP_STORE_OPENED_PARA ;
typedef struct _CERT_LDAP_STORE_OPENED_PARA {void *pvLdapSessionHandle ;LPCWSTR pwszLdapUrl ;}*PCERT_LDAP_STORE_OPENED_PARA ;

HCERTSTORE CertOpenStore (LPCSTR lpszStoreProvider ,DWORD dwEncodingType ,HCRYPTPROV_LEGACY hCryptProv ,DWORD dwFlags ,const void *pvPara );
typedef void *HCERTSTOREPROV ;
typedef struct _CERT_STORE_PROV_INFO {DWORD cbSize ;DWORD cStoreProvFunc ;void **rgpvStoreProvFunc ;HCERTSTOREPROV hStoreProv ;DWORD dwStoreProvFlags ;HCRYPTOIDFUNCADDR hStoreProvFuncAddr2 ;}CERT_STORE_PROV_INFO ;
typedef struct _CERT_STORE_PROV_INFO {DWORD cbSize ;DWORD cStoreProvFunc ;void **rgpvStoreProvFunc ;HCERTSTOREPROV hStoreProv ;DWORD dwStoreProvFlags ;HCRYPTOIDFUNCADDR hStoreProvFuncAddr2 ;}*PCERT_STORE_PROV_INFO ;

typedef WINBOOL (*PFN_CERT_DLL_OPEN_STORE_PROV_FUNC )(LPCSTR lpszStoreProvider ,DWORD dwEncodingType ,HCRYPTPROV_LEGACY hCryptProv ,DWORD dwFlags ,const void *pvPara ,HCERTSTORE hCertStore ,PCERT_STORE_PROV_INFO pStoreProvInfo );
typedef void (*PFN_CERT_STORE_PROV_CLOSE )(HCERTSTOREPROV hStoreProv ,DWORD dwFlags );
typedef WINBOOL (*PFN_CERT_STORE_PROV_READ_CERT )(HCERTSTOREPROV hStoreProv ,PCCERT_CONTEXT pStoreCertContext ,DWORD dwFlags ,PCCERT_CONTEXT *ppProvCertContext );
typedef WINBOOL (*PFN_CERT_STORE_PROV_WRITE_CERT )(HCERTSTOREPROV hStoreProv ,PCCERT_CONTEXT pCertContext ,DWORD dwFlags );
typedef WINBOOL (*PFN_CERT_STORE_PROV_DELETE_CERT )(HCERTSTOREPROV hStoreProv ,PCCERT_CONTEXT pCertContext ,DWORD dwFlags );
typedef WINBOOL (*PFN_CERT_STORE_PROV_SET_CERT_PROPERTY )(HCERTSTOREPROV hStoreProv ,PCCERT_CONTEXT pCertContext ,DWORD dwPropId ,DWORD dwFlags ,const void *pvData );
typedef WINBOOL (*PFN_CERT_STORE_PROV_READ_CRL )(HCERTSTOREPROV hStoreProv ,PCCRL_CONTEXT pStoreCrlContext ,DWORD dwFlags ,PCCRL_CONTEXT *ppProvCrlContext );
typedef WINBOOL (*PFN_CERT_STORE_PROV_WRITE_CRL )(HCERTSTOREPROV hStoreProv ,PCCRL_CONTEXT pCrlContext ,DWORD dwFlags );
typedef WINBOOL (*PFN_CERT_STORE_PROV_DELETE_CRL )(HCERTSTOREPROV hStoreProv ,PCCRL_CONTEXT pCrlContext ,DWORD dwFlags );
typedef WINBOOL (*PFN_CERT_STORE_PROV_SET_CRL_PROPERTY )(HCERTSTOREPROV hStoreProv ,PCCRL_CONTEXT pCrlContext ,DWORD dwPropId ,DWORD dwFlags ,const void *pvData );
typedef WINBOOL (*PFN_CERT_STORE_PROV_READ_CTL )(HCERTSTOREPROV hStoreProv ,PCCTL_CONTEXT pStoreCtlContext ,DWORD dwFlags ,PCCTL_CONTEXT *ppProvCtlContext );
typedef WINBOOL (*PFN_CERT_STORE_PROV_WRITE_CTL )(HCERTSTOREPROV hStoreProv ,PCCTL_CONTEXT pCtlContext ,DWORD dwFlags );
typedef WINBOOL (*PFN_CERT_STORE_PROV_DELETE_CTL )(HCERTSTOREPROV hStoreProv ,PCCTL_CONTEXT pCtlContext ,DWORD dwFlags );
typedef WINBOOL (*PFN_CERT_STORE_PROV_SET_CTL_PROPERTY )(HCERTSTOREPROV hStoreProv ,PCCTL_CONTEXT pCtlContext ,DWORD dwPropId ,DWORD dwFlags ,const void *pvData );
typedef WINBOOL (*PFN_CERT_STORE_PROV_CONTROL )(HCERTSTOREPROV hStoreProv ,DWORD dwFlags ,DWORD dwCtrlType ,void const *pvCtrlPara );
typedef struct _CERT_STORE_PROV_FIND_INFO {DWORD cbSize ;DWORD dwMsgAndCertEncodingType ;DWORD dwFindFlags ;DWORD dwFindType ;const void *pvFindPara ;}CERT_STORE_PROV_FIND_INFO ;
typedef struct _CERT_STORE_PROV_FIND_INFO {DWORD cbSize ;DWORD dwMsgAndCertEncodingType ;DWORD dwFindFlags ;DWORD dwFindType ;const void *pvFindPara ;}*PCERT_STORE_PROV_FIND_INFO ;

typedef const CERT_STORE_PROV_FIND_INFO CCERT_STORE_PROV_FIND_INFO ;
typedef const CERT_STORE_PROV_FIND_INFO *PCCERT_STORE_PROV_FIND_INFO ;

typedef WINBOOL (*PFN_CERT_STORE_PROV_FIND_CERT )(HCERTSTOREPROV hStoreProv ,PCCERT_STORE_PROV_FIND_INFO pFindInfo ,PCCERT_CONTEXT pPrevCertContext ,DWORD dwFlags ,void **ppvStoreProvFindInfo ,PCCERT_CONTEXT *ppProvCertContext );
typedef WINBOOL (*PFN_CERT_STORE_PROV_FREE_FIND_CERT )(HCERTSTOREPROV hStoreProv ,PCCERT_CONTEXT pCertContext ,void *pvStoreProvFindInfo ,DWORD dwFlags );
typedef WINBOOL (*PFN_CERT_STORE_PROV_GET_CERT_PROPERTY )(HCERTSTOREPROV hStoreProv ,PCCERT_CONTEXT pCertContext ,DWORD dwPropId ,DWORD dwFlags ,void *pvData ,DWORD *pcbData );
typedef WINBOOL (*PFN_CERT_STORE_PROV_FIND_CRL )(HCERTSTOREPROV hStoreProv ,PCCERT_STORE_PROV_FIND_INFO pFindInfo ,PCCRL_CONTEXT pPrevCrlContext ,DWORD dwFlags ,void **ppvStoreProvFindInfo ,PCCRL_CONTEXT *ppProvCrlContext );
typedef WINBOOL (*PFN_CERT_STORE_PROV_FREE_FIND_CRL )(HCERTSTOREPROV hStoreProv ,PCCRL_CONTEXT pCrlContext ,void *pvStoreProvFindInfo ,DWORD dwFlags );
typedef WINBOOL (*PFN_CERT_STORE_PROV_GET_CRL_PROPERTY )(HCERTSTOREPROV hStoreProv ,PCCRL_CONTEXT pCrlContext ,DWORD dwPropId ,DWORD dwFlags ,void *pvData ,DWORD *pcbData );
typedef WINBOOL (*PFN_CERT_STORE_PROV_FIND_CTL )(HCERTSTOREPROV hStoreProv ,PCCERT_STORE_PROV_FIND_INFO pFindInfo ,PCCTL_CONTEXT pPrevCtlContext ,DWORD dwFlags ,void **ppvStoreProvFindInfo ,PCCTL_CONTEXT *ppProvCtlContext );
typedef WINBOOL (*PFN_CERT_STORE_PROV_FREE_FIND_CTL )(HCERTSTOREPROV hStoreProv ,PCCTL_CONTEXT pCtlContext ,void *pvStoreProvFindInfo ,DWORD dwFlags );
typedef WINBOOL (*PFN_CERT_STORE_PROV_GET_CTL_PROPERTY )(HCERTSTOREPROV hStoreProv ,PCCTL_CONTEXT pCtlContext ,DWORD dwPropId ,DWORD dwFlags ,void *pvData ,DWORD *pcbData );
HCERTSTORE CertDuplicateStore (HCERTSTORE hCertStore );
WINBOOL CertSaveStore (HCERTSTORE hCertStore ,DWORD dwEncodingType ,DWORD dwSaveAs ,DWORD dwSaveTo ,void *pvSaveToPara ,DWORD dwFlags );
WINBOOL CertCloseStore (HCERTSTORE hCertStore ,DWORD dwFlags );
PCCERT_CONTEXT CertGetSubjectCertificateFromStore (HCERTSTORE hCertStore ,DWORD dwCertEncodingType ,PCERT_INFO pCertId );
PCCERT_CONTEXT CertEnumCertificatesInStore (HCERTSTORE hCertStore ,PCCERT_CONTEXT pPrevCertContext );
PCCERT_CONTEXT CertFindCertificateInStore (HCERTSTORE hCertStore ,DWORD dwCertEncodingType ,DWORD dwFindFlags ,DWORD dwFindType ,const void *pvFindPara ,PCCERT_CONTEXT pPrevCertContext );
PCCERT_CONTEXT CertGetIssuerCertificateFromStore (HCERTSTORE hCertStore ,PCCERT_CONTEXT pSubjectContext ,PCCERT_CONTEXT pPrevIssuerContext ,DWORD *pdwFlags );
WINBOOL CertVerifySubjectCertificateContext (PCCERT_CONTEXT pSubject ,PCCERT_CONTEXT pIssuer ,DWORD *pdwFlags );
PCCERT_CONTEXT CertDuplicateCertificateContext (PCCERT_CONTEXT pCertContext );
PCCERT_CONTEXT CertCreateCertificateContext (DWORD dwCertEncodingType ,const BYTE *pbCertEncoded ,DWORD cbCertEncoded );
WINBOOL CertFreeCertificateContext (PCCERT_CONTEXT pCertContext );
WINBOOL CertSetCertificateContextProperty (PCCERT_CONTEXT pCertContext ,DWORD dwPropId ,DWORD dwFlags ,const void *pvData );
typedef struct _CRL_FIND_ISSUED_FOR_PARA {PCCERT_CONTEXT pSubjectCert ;PCCERT_CONTEXT pIssuerCert ;}CRL_FIND_ISSUED_FOR_PARA ;
typedef struct _CRL_FIND_ISSUED_FOR_PARA {PCCERT_CONTEXT pSubjectCert ;PCCERT_CONTEXT pIssuerCert ;}*PCRL_FIND_ISSUED_FOR_PARA ;

typedef struct _CTL_ANY_SUBJECT_INFO {CRYPT_ALGORITHM_IDENTIFIER SubjectAlgorithm ;CRYPT_DATA_BLOB SubjectIdentifier ;}CTL_ANY_SUBJECT_INFO ;
typedef struct _CTL_ANY_SUBJECT_INFO {CRYPT_ALGORITHM_IDENTIFIER SubjectAlgorithm ;CRYPT_DATA_BLOB SubjectIdentifier ;}*PCTL_ANY_SUBJECT_INFO ;

WINBOOL CertGetCertificateContextProperty (PCCERT_CONTEXT pCertContext ,DWORD dwPropId ,void *pvData ,DWORD *pcbData );
DWORD CertEnumCertificateContextProperties (PCCERT_CONTEXT pCertContext ,DWORD dwPropId );
WINBOOL CertCreateCTLEntryFromCertificateContextProperties (PCCERT_CONTEXT pCertContext ,DWORD cOptAttr ,PCRYPT_ATTRIBUTE rgOptAttr ,DWORD dwFlags ,void *pvReserved ,PCTL_ENTRY pCtlEntry ,DWORD *pcbCtlEntry );
WINBOOL CertSetCertificateContextPropertiesFromCTLEntry (PCCERT_CONTEXT pCertContext ,PCTL_ENTRY pCtlEntry ,DWORD dwFlags );
PCCRL_CONTEXT CertGetCRLFromStore (HCERTSTORE hCertStore ,PCCERT_CONTEXT pIssuerContext ,PCCRL_CONTEXT pPrevCrlContext ,DWORD *pdwFlags );
PCCRL_CONTEXT CertEnumCRLsInStore (HCERTSTORE hCertStore ,PCCRL_CONTEXT pPrevCrlContext );
PCCRL_CONTEXT CertFindCRLInStore (HCERTSTORE hCertStore ,DWORD dwCertEncodingType ,DWORD dwFindFlags ,DWORD dwFindType ,const void *pvFindPara ,PCCRL_CONTEXT pPrevCrlContext );
PCCRL_CONTEXT CertDuplicateCRLContext (PCCRL_CONTEXT pCrlContext );
PCCRL_CONTEXT CertCreateCRLContext (DWORD dwCertEncodingType ,const BYTE *pbCrlEncoded ,DWORD cbCrlEncoded );
WINBOOL CertFreeCRLContext (PCCRL_CONTEXT pCrlContext );
WINBOOL CertSetCRLContextProperty (PCCRL_CONTEXT pCrlContext ,DWORD dwPropId ,DWORD dwFlags ,const void *pvData );
WINBOOL CertGetCRLContextProperty (PCCRL_CONTEXT pCrlContext ,DWORD dwPropId ,void *pvData ,DWORD *pcbData );
DWORD CertEnumCRLContextProperties (PCCRL_CONTEXT pCrlContext ,DWORD dwPropId );
WINBOOL CertFindCertificateInCRL (PCCERT_CONTEXT pCert ,PCCRL_CONTEXT pCrlContext ,DWORD dwFlags ,void *pvReserved ,PCRL_ENTRY *ppCrlEntry );
WINBOOL CertIsValidCRLForCertificate (PCCERT_CONTEXT pCert ,PCCRL_CONTEXT pCrl ,DWORD dwFlags ,void *pvReserved );
WINBOOL CertAddEncodedCertificateToStore (HCERTSTORE hCertStore ,DWORD dwCertEncodingType ,const BYTE *pbCertEncoded ,DWORD cbCertEncoded ,DWORD dwAddDisposition ,PCCERT_CONTEXT *ppCertContext );
WINBOOL CertAddCertificateContextToStore (HCERTSTORE hCertStore ,PCCERT_CONTEXT pCertContext ,DWORD dwAddDisposition ,PCCERT_CONTEXT *ppStoreContext );
WINBOOL CertAddSerializedElementToStore (HCERTSTORE hCertStore ,const BYTE *pbElement ,DWORD cbElement ,DWORD dwAddDisposition ,DWORD dwFlags ,DWORD dwContextTypeFlags ,DWORD *pdwContextType ,const void **ppvContext );
WINBOOL CertDeleteCertificateFromStore (PCCERT_CONTEXT pCertContext );
WINBOOL CertAddEncodedCRLToStore (HCERTSTORE hCertStore ,DWORD dwCertEncodingType ,const BYTE *pbCrlEncoded ,DWORD cbCrlEncoded ,DWORD dwAddDisposition ,PCCRL_CONTEXT *ppCrlContext );
WINBOOL CertAddCRLContextToStore (HCERTSTORE hCertStore ,PCCRL_CONTEXT pCrlContext ,DWORD dwAddDisposition ,PCCRL_CONTEXT *ppStoreContext );
WINBOOL CertDeleteCRLFromStore (PCCRL_CONTEXT pCrlContext );
WINBOOL CertSerializeCertificateStoreElement (PCCERT_CONTEXT pCertContext ,DWORD dwFlags ,BYTE *pbElement ,DWORD *pcbElement );
WINBOOL CertSerializeCRLStoreElement (PCCRL_CONTEXT pCrlContext ,DWORD dwFlags ,BYTE *pbElement ,DWORD *pcbElement );
PCCTL_CONTEXT CertDuplicateCTLContext (PCCTL_CONTEXT pCtlContext );
PCCTL_CONTEXT CertCreateCTLContext (DWORD dwMsgAndCertEncodingType ,const BYTE *pbCtlEncoded ,DWORD cbCtlEncoded );
WINBOOL CertFreeCTLContext (PCCTL_CONTEXT pCtlContext );
WINBOOL CertSetCTLContextProperty (PCCTL_CONTEXT pCtlContext ,DWORD dwPropId ,DWORD dwFlags ,const void *pvData );
WINBOOL CertGetCTLContextProperty (PCCTL_CONTEXT pCtlContext ,DWORD dwPropId ,void *pvData ,DWORD *pcbData );
DWORD CertEnumCTLContextProperties (PCCTL_CONTEXT pCtlContext ,DWORD dwPropId );
PCCTL_CONTEXT CertEnumCTLsInStore (HCERTSTORE hCertStore ,PCCTL_CONTEXT pPrevCtlContext );
PCTL_ENTRY CertFindSubjectInCTL (DWORD dwEncodingType ,DWORD dwSubjectType ,void *pvSubject ,PCCTL_CONTEXT pCtlContext ,DWORD dwFlags );
PCCTL_CONTEXT CertFindCTLInStore (HCERTSTORE hCertStore ,DWORD dwMsgAndCertEncodingType ,DWORD dwFindFlags ,DWORD dwFindType ,const void *pvFindPara ,PCCTL_CONTEXT pPrevCtlContext );
typedef struct _CTL_FIND_USAGE_PARA {DWORD cbSize ;CTL_USAGE SubjectUsage ;CRYPT_DATA_BLOB ListIdentifier ;PCERT_INFO pSigner ;}CTL_FIND_USAGE_PARA ;
typedef struct _CTL_FIND_USAGE_PARA {DWORD cbSize ;CTL_USAGE SubjectUsage ;CRYPT_DATA_BLOB ListIdentifier ;PCERT_INFO pSigner ;}*PCTL_FIND_USAGE_PARA ;

typedef struct _CTL_FIND_SUBJECT_PARA {DWORD cbSize ;PCTL_FIND_USAGE_PARA pUsagePara ;DWORD dwSubjectType ;void *pvSubject ;}CTL_FIND_SUBJECT_PARA ;
typedef struct _CTL_FIND_SUBJECT_PARA {DWORD cbSize ;PCTL_FIND_USAGE_PARA pUsagePara ;DWORD dwSubjectType ;void *pvSubject ;}*PCTL_FIND_SUBJECT_PARA ;

typedef WINBOOL (*PFN_CERT_CREATE_CONTEXT_SORT_FUNC )(DWORD cbTotalEncoded ,DWORD cbRemainEncoded ,DWORD cEntry ,void *pvSort );
typedef struct _CERT_CREATE_CONTEXT_PARA {DWORD cbSize ;PFN_CRYPT_FREE pfnFree ;void *pvFree ;PFN_CERT_CREATE_CONTEXT_SORT_FUNC pfnSort ;void *pvSort ;}CERT_CREATE_CONTEXT_PARA ;
typedef struct _CERT_CREATE_CONTEXT_PARA {DWORD cbSize ;PFN_CRYPT_FREE pfnFree ;void *pvFree ;PFN_CERT_CREATE_CONTEXT_SORT_FUNC pfnSort ;void *pvSort ;}*PCERT_CREATE_CONTEXT_PARA ;

typedef struct _CERT_SYSTEM_STORE_INFO {DWORD cbSize ;}CERT_SYSTEM_STORE_INFO ;
typedef struct _CERT_SYSTEM_STORE_INFO {DWORD cbSize ;}*PCERT_SYSTEM_STORE_INFO ;

typedef struct _CERT_PHYSICAL_STORE_INFO {DWORD cbSize ;LPSTR pszOpenStoreProvider ;DWORD dwOpenEncodingType ;DWORD dwOpenFlags ;CRYPT_DATA_BLOB OpenParameters ;DWORD dwFlags ;DWORD dwPriority ;}CERT_PHYSICAL_STORE_INFO ;
typedef struct _CERT_PHYSICAL_STORE_INFO {DWORD cbSize ;LPSTR pszOpenStoreProvider ;DWORD dwOpenEncodingType ;DWORD dwOpenFlags ;CRYPT_DATA_BLOB OpenParameters ;DWORD dwFlags ;DWORD dwPriority ;}*PCERT_PHYSICAL_STORE_INFO ;

WINBOOL CertAddEncodedCTLToStore (HCERTSTORE hCertStore ,DWORD dwMsgAndCertEncodingType ,const BYTE *pbCtlEncoded ,DWORD cbCtlEncoded ,DWORD dwAddDisposition ,PCCTL_CONTEXT *ppCtlContext );
WINBOOL CertAddCTLContextToStore (HCERTSTORE hCertStore ,PCCTL_CONTEXT pCtlContext ,DWORD dwAddDisposition ,PCCTL_CONTEXT *ppStoreContext );
WINBOOL CertSerializeCTLStoreElement (PCCTL_CONTEXT pCtlContext ,DWORD dwFlags ,BYTE *pbElement ,DWORD *pcbElement );
WINBOOL CertDeleteCTLFromStore (PCCTL_CONTEXT pCtlContext );
WINBOOL CertAddCertificateLinkToStore (HCERTSTORE hCertStore ,PCCERT_CONTEXT pCertContext ,DWORD dwAddDisposition ,PCCERT_CONTEXT *ppStoreContext );
WINBOOL CertAddCRLLinkToStore (HCERTSTORE hCertStore ,PCCRL_CONTEXT pCrlContext ,DWORD dwAddDisposition ,PCCRL_CONTEXT *ppStoreContext );
WINBOOL CertAddCTLLinkToStore (HCERTSTORE hCertStore ,PCCTL_CONTEXT pCtlContext ,DWORD dwAddDisposition ,PCCTL_CONTEXT *ppStoreContext );
WINBOOL CertAddStoreToCollection (HCERTSTORE hCollectionStore ,HCERTSTORE hSiblingStore ,DWORD dwUpdateFlags ,DWORD dwPriority );
void CertRemoveStoreFromCollection (HCERTSTORE hCollectionStore ,HCERTSTORE hSiblingStore );
WINBOOL CertControlStore (HCERTSTORE hCertStore ,DWORD dwFlags ,DWORD dwCtrlType ,void const *pvCtrlPara );
WINBOOL CertSetStoreProperty (HCERTSTORE hCertStore ,DWORD dwPropId ,DWORD dwFlags ,const void *pvData );
WINBOOL CertGetStoreProperty (HCERTSTORE hCertStore ,DWORD dwPropId ,void *pvData ,DWORD *pcbData );
const void *CertCreateContext (DWORD dwContextType ,DWORD dwEncodingType ,const BYTE *pbEncoded ,DWORD cbEncoded ,DWORD dwFlags ,PCERT_CREATE_CONTEXT_PARA pCreatePara );
WINBOOL CertRegisterSystemStore (const void *pvSystemStore ,DWORD dwFlags ,PCERT_SYSTEM_STORE_INFO pStoreInfo ,void *pvReserved );
WINBOOL CertRegisterPhysicalStore (const void *pvSystemStore ,DWORD dwFlags ,LPCWSTR pwszStoreName ,PCERT_PHYSICAL_STORE_INFO pStoreInfo ,void *pvReserved );
WINBOOL CertUnregisterSystemStore (const void *pvSystemStore ,DWORD dwFlags );
WINBOOL CertUnregisterPhysicalStore (const void *pvSystemStore ,DWORD dwFlags ,LPCWSTR pwszStoreName );
typedef WINBOOL (*PFN_CERT_ENUM_SYSTEM_STORE_LOCATION )(LPCWSTR pwszStoreLocation ,DWORD dwFlags ,void *pvReserved ,void *pvArg );
typedef WINBOOL (*PFN_CERT_ENUM_SYSTEM_STORE )(const void *pvSystemStore ,DWORD dwFlags ,PCERT_SYSTEM_STORE_INFO pStoreInfo ,void *pvReserved ,void *pvArg );
typedef WINBOOL (*PFN_CERT_ENUM_PHYSICAL_STORE )(const void *pvSystemStore ,DWORD dwFlags ,LPCWSTR pwszStoreName ,PCERT_PHYSICAL_STORE_INFO pStoreInfo ,void *pvReserved ,void *pvArg );
WINBOOL CertEnumSystemStoreLocation (DWORD dwFlags ,void *pvArg ,PFN_CERT_ENUM_SYSTEM_STORE_LOCATION pfnEnum );
WINBOOL CertEnumSystemStore (DWORD dwFlags ,void *pvSystemStoreLocationPara ,void *pvArg ,PFN_CERT_ENUM_SYSTEM_STORE pfnEnum );
WINBOOL CertEnumPhysicalStore (const void *pvSystemStore ,DWORD dwFlags ,void *pvArg ,PFN_CERT_ENUM_PHYSICAL_STORE pfnEnum );
WINBOOL CertGetEnhancedKeyUsage (PCCERT_CONTEXT pCertContext ,DWORD dwFlags ,PCERT_ENHKEY_USAGE pUsage ,DWORD *pcbUsage );
WINBOOL CertSetEnhancedKeyUsage (PCCERT_CONTEXT pCertContext ,PCERT_ENHKEY_USAGE pUsage );
WINBOOL CertAddEnhancedKeyUsageIdentifier (PCCERT_CONTEXT pCertContext ,LPCSTR pszUsageIdentifier );
WINBOOL CertRemoveEnhancedKeyUsageIdentifier (PCCERT_CONTEXT pCertContext ,LPCSTR pszUsageIdentifier );
WINBOOL CertGetValidUsages (DWORD cCerts ,PCCERT_CONTEXT *rghCerts ,int *cNumOIDs ,LPSTR *rghOIDs ,DWORD *pcbOIDs );
WINBOOL CryptMsgGetAndVerifySigner (HCRYPTMSG hCryptMsg ,DWORD cSignerStore ,HCERTSTORE *rghSignerStore ,DWORD dwFlags ,PCCERT_CONTEXT *ppSigner ,DWORD *pdwSignerIndex );
WINBOOL CryptMsgSignCTL (DWORD dwMsgEncodingType ,BYTE *pbCtlContent ,DWORD cbCtlContent ,PCMSG_SIGNED_ENCODE_INFO pSignInfo ,DWORD dwFlags ,BYTE *pbEncoded ,DWORD *pcbEncoded );
WINBOOL CryptMsgEncodeAndSignCTL (DWORD dwMsgEncodingType ,PCTL_INFO pCtlInfo ,PCMSG_SIGNED_ENCODE_INFO pSignInfo ,DWORD dwFlags ,BYTE *pbEncoded ,DWORD *pcbEncoded );
WINBOOL CertFindSubjectInSortedCTL (PCRYPT_DATA_BLOB pSubjectIdentifier ,PCCTL_CONTEXT pCtlContext ,DWORD dwFlags ,void *pvReserved ,PCRYPT_DER_BLOB pEncodedAttributes );
WINBOOL CertEnumSubjectInSortedCTL (PCCTL_CONTEXT pCtlContext ,void **ppvNextSubject ,PCRYPT_DER_BLOB pSubjectIdentifier ,PCRYPT_DER_BLOB pEncodedAttributes );
typedef struct _CTL_VERIFY_USAGE_PARA {DWORD cbSize ;CRYPT_DATA_BLOB ListIdentifier ;DWORD cCtlStore ;HCERTSTORE *rghCtlStore ;DWORD cSignerStore ;HCERTSTORE *rghSignerStore ;}CTL_VERIFY_USAGE_PARA ;
typedef struct _CTL_VERIFY_USAGE_PARA {DWORD cbSize ;CRYPT_DATA_BLOB ListIdentifier ;DWORD cCtlStore ;HCERTSTORE *rghCtlStore ;DWORD cSignerStore ;HCERTSTORE *rghSignerStore ;}*PCTL_VERIFY_USAGE_PARA ;

typedef struct _CTL_VERIFY_USAGE_STATUS {DWORD cbSize ;DWORD dwError ;DWORD dwFlags ;PCCTL_CONTEXT *ppCtl ;DWORD dwCtlEntryIndex ;PCCERT_CONTEXT *ppSigner ;DWORD dwSignerIndex ;}CTL_VERIFY_USAGE_STATUS ;
typedef struct _CTL_VERIFY_USAGE_STATUS {DWORD cbSize ;DWORD dwError ;DWORD dwFlags ;PCCTL_CONTEXT *ppCtl ;DWORD dwCtlEntryIndex ;PCCERT_CONTEXT *ppSigner ;DWORD dwSignerIndex ;}*PCTL_VERIFY_USAGE_STATUS ;

WINBOOL CertVerifyCTLUsage (DWORD dwEncodingType ,DWORD dwSubjectType ,void *pvSubject ,PCTL_USAGE pSubjectUsage ,DWORD dwFlags ,PCTL_VERIFY_USAGE_PARA pVerifyUsagePara ,PCTL_VERIFY_USAGE_STATUS pVerifyUsageStatus );
typedef struct _CERT_REVOCATION_CRL_INFO {DWORD cbSize ;PCCRL_CONTEXT pBaseCrlContext ;PCCRL_CONTEXT pDeltaCrlContext ;PCRL_ENTRY pCrlEntry ;WINBOOL fDeltaCrlEntry ;}CERT_REVOCATION_CRL_INFO ;
typedef struct _CERT_REVOCATION_CRL_INFO {DWORD cbSize ;PCCRL_CONTEXT pBaseCrlContext ;PCCRL_CONTEXT pDeltaCrlContext ;PCRL_ENTRY pCrlEntry ;WINBOOL fDeltaCrlEntry ;}*PCERT_REVOCATION_CRL_INFO ;

typedef struct _CERT_REVOCATION_CHAIN_PARA CERT_REVOCATION_CHAIN_PARA ;
typedef struct _CERT_REVOCATION_CHAIN_PARA *PCERT_REVOCATION_CHAIN_PARA ;

typedef struct _CERT_REVOCATION_PARA {DWORD cbSize ;PCCERT_CONTEXT pIssuerCert ;DWORD cCertStore ;HCERTSTORE *rgCertStore ;HCERTSTORE hCrlStore ;LPFILETIME pftTimeToUse ;}CERT_REVOCATION_PARA ;
typedef struct _CERT_REVOCATION_PARA {DWORD cbSize ;PCCERT_CONTEXT pIssuerCert ;DWORD cCertStore ;HCERTSTORE *rgCertStore ;HCERTSTORE hCrlStore ;LPFILETIME pftTimeToUse ;}*PCERT_REVOCATION_PARA ;

typedef struct _CERT_REVOCATION_STATUS {DWORD cbSize ;DWORD dwIndex ;DWORD dwError ;DWORD dwReason ;WINBOOL fHasFreshnessTime ;DWORD dwFreshnessTime ;}CERT_REVOCATION_STATUS ;
typedef struct _CERT_REVOCATION_STATUS {DWORD cbSize ;DWORD dwIndex ;DWORD dwError ;DWORD dwReason ;WINBOOL fHasFreshnessTime ;DWORD dwFreshnessTime ;}*PCERT_REVOCATION_STATUS ;

typedef struct _CRYPT_VERIFY_CERT_SIGN_STRONG_PROPERTIES_INFO {CRYPT_DATA_BLOB CertSignHashCNGAlgPropData ;CRYPT_DATA_BLOB CertIssuerPubKeyBitLengthPropData ;}CRYPT_VERIFY_CERT_SIGN_STRONG_PROPERTIES_INFO ;
typedef struct _CRYPT_VERIFY_CERT_SIGN_STRONG_PROPERTIES_INFO {CRYPT_DATA_BLOB CertSignHashCNGAlgPropData ;CRYPT_DATA_BLOB CertIssuerPubKeyBitLengthPropData ;}*PCRYPT_VERIFY_CERT_SIGN_STRONG_PROPERTIES_INFO ;

typedef WINBOOL (*PFN_CRYPT_EXTRACT_ENCODED_SIGNATURE_PARAMETERS_FUNC )(DWORD dwCertEncodingType ,PCRYPT_ALGORITHM_IDENTIFIER pSignatureAlgorithm ,void **ppvDecodedSignPara ,LPWSTR *ppwszCNGHashAlgid );
typedef WINBOOL (*PFN_CRYPT_SIGN_AND_ENCODE_HASH_FUNC )(NCRYPT_KEY_HANDLE hKey ,DWORD dwCertEncodingType ,PCRYPT_ALGORITHM_IDENTIFIER pSignatureAlgorithm ,void *pvDecodedSignPara ,LPCWSTR pwszCNGPubKeyAlgid ,LPCWSTR pwszCNGHashAlgid ,BYTE *pbComputedHash ,DWORD cbComputedHash ,BYTE *pbSignature ,DWORD *pcbSignature );
typedef WINBOOL (*PFN_CRYPT_VERIFY_ENCODED_SIGNATURE_FUNC )(DWORD dwCertEncodingType ,PCERT_PUBLIC_KEY_INFO pPubKeyInfo ,PCRYPT_ALGORITHM_IDENTIFIER pSignatureAlgorithm ,void *pvDecodedSignPara ,LPCWSTR pwszCNGPubKeyAlgid ,LPCWSTR pwszCNGHashAlgid ,BYTE *pbComputedHash ,DWORD cbComputedHash ,BYTE *pbSignature ,DWORD cbSignature );
typedef void *HCRYPTDEFAULTCONTEXT ;
typedef struct _CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA {DWORD cOID ;LPSTR *rgpszOID ;}CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA ;
typedef struct _CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA {DWORD cOID ;LPSTR *rgpszOID ;}*PCRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA ;

WINBOOL CertVerifyRevocation (DWORD dwEncodingType ,DWORD dwRevType ,DWORD cContext ,PVOID rgpvContext [],DWORD dwFlags ,PCERT_REVOCATION_PARA pRevPara ,PCERT_REVOCATION_STATUS pRevStatus );
WINBOOL CertCompareIntegerBlob (PCRYPT_INTEGER_BLOB pInt1 ,PCRYPT_INTEGER_BLOB pInt2 );
WINBOOL CertCompareCertificate (DWORD dwCertEncodingType ,PCERT_INFO pCertId1 ,PCERT_INFO pCertId2 );
WINBOOL CertCompareCertificateName (DWORD dwCertEncodingType ,PCERT_NAME_BLOB pCertName1 ,PCERT_NAME_BLOB pCertName2 );
WINBOOL CertIsRDNAttrsInCertificateName (DWORD dwCertEncodingType ,DWORD dwFlags ,PCERT_NAME_BLOB pCertName ,PCERT_RDN pRDN );
WINBOOL CertComparePublicKeyInfo (DWORD dwCertEncodingType ,PCERT_PUBLIC_KEY_INFO pPublicKey1 ,PCERT_PUBLIC_KEY_INFO pPublicKey2 );
DWORD CertGetPublicKeyLength (DWORD dwCertEncodingType ,PCERT_PUBLIC_KEY_INFO pPublicKey );
WINBOOL CryptVerifyCertificateSignature (HCRYPTPROV_LEGACY hCryptProv ,DWORD dwCertEncodingType ,const BYTE *pbEncoded ,DWORD cbEncoded ,PCERT_PUBLIC_KEY_INFO pPublicKey );
WINBOOL CryptVerifyCertificateSignatureEx (HCRYPTPROV_LEGACY hCryptProv ,DWORD dwCertEncodingType ,DWORD dwSubjectType ,void *pvSubject ,DWORD dwIssuerType ,void *pvIssuer ,DWORD dwFlags ,void *pvExtra );
WINBOOL CertIsStrongHashToSign (PCCERT_STRONG_SIGN_PARA pStrongSignPara ,LPCWSTR pwszCNGHashAlgid ,PCCERT_CONTEXT pSigningCert );
WINBOOL CryptHashToBeSigned (HCRYPTPROV_LEGACY hCryptProv ,DWORD dwCertEncodingType ,const BYTE *pbEncoded ,DWORD cbEncoded ,BYTE *pbComputedHash ,DWORD *pcbComputedHash );
WINBOOL CryptHashCertificate (HCRYPTPROV_LEGACY hCryptProv ,ALG_ID Algid ,DWORD dwFlags ,const BYTE *pbEncoded ,DWORD cbEncoded ,BYTE *pbComputedHash ,DWORD *pcbComputedHash );
WINBOOL CryptSignCertificate (HCRYPTPROV_OR_NCRYPT_KEY_HANDLE hCryptProvOrNCryptKey ,DWORD dwKeySpec ,DWORD dwCertEncodingType ,const BYTE *pbEncodedToBeSigned ,DWORD cbEncodedToBeSigned ,PCRYPT_ALGORITHM_IDENTIFIER pSignatureAlgorithm ,const void *pvHashAuxInfo ,BYTE *pbSignature ,DWORD *pcbSignature );
WINBOOL CryptSignAndEncodeCertificate (HCRYPTPROV_OR_NCRYPT_KEY_HANDLE hCryptProvOrNCryptKey ,DWORD dwKeySpec ,DWORD dwCertEncodingType ,LPCSTR lpszStructType ,const void *pvStructInfo ,PCRYPT_ALGORITHM_IDENTIFIER pSignatureAlgorithm ,const void *pvHashAuxInfo ,BYTE *pbEncoded ,DWORD *pcbEncoded );
LONG CertVerifyTimeValidity (LPFILETIME pTimeToVerify ,PCERT_INFO pCertInfo );
LONG CertVerifyCRLTimeValidity (LPFILETIME pTimeToVerify ,PCRL_INFO pCrlInfo );
WINBOOL CertVerifyValidityNesting (PCERT_INFO pSubjectInfo ,PCERT_INFO pIssuerInfo );
WINBOOL CertVerifyCRLRevocation (DWORD dwCertEncodingType ,PCERT_INFO pCertId ,DWORD cCrlInfo ,PCRL_INFO rgpCrlInfo []);
LPCSTR CertAlgIdToOID (DWORD dwAlgId );
DWORD CertOIDToAlgId (LPCSTR pszObjId );
PCERT_EXTENSION CertFindExtension (LPCSTR pszObjId ,DWORD cExtensions ,CERT_EXTENSION rgExtensions []);
PCRYPT_ATTRIBUTE CertFindAttribute (LPCSTR pszObjId ,DWORD cAttr ,CRYPT_ATTRIBUTE rgAttr []);
PCERT_RDN_ATTR CertFindRDNAttr (LPCSTR pszObjId ,PCERT_NAME_INFO pName );
WINBOOL CertGetIntendedKeyUsage (DWORD dwCertEncodingType ,PCERT_INFO pCertInfo ,BYTE *pbKeyUsage ,DWORD cbKeyUsage );
WINBOOL CryptInstallDefaultContext (HCRYPTPROV hCryptProv ,DWORD dwDefaultType ,const void *pvDefaultPara ,DWORD dwFlags ,void *pvReserved ,HCRYPTDEFAULTCONTEXT *phDefaultContext );
WINBOOL CryptUninstallDefaultContext (HCRYPTDEFAULTCONTEXT hDefaultContext ,DWORD dwFlags ,void *pvReserved );
WINBOOL CryptExportPublicKeyInfo (HCRYPTPROV_OR_NCRYPT_KEY_HANDLE hCryptProvOrNCryptKey ,DWORD dwKeySpec ,DWORD dwCertEncodingType ,PCERT_PUBLIC_KEY_INFO pInfo ,DWORD *pcbInfo );
WINBOOL CryptExportPublicKeyInfoEx (HCRYPTPROV_OR_NCRYPT_KEY_HANDLE hCryptProvOrNCryptKey ,DWORD dwKeySpec ,DWORD dwCertEncodingType ,LPSTR pszPublicKeyObjId ,DWORD dwFlags ,void *pvAuxInfo ,PCERT_PUBLIC_KEY_INFO pInfo ,DWORD *pcbInfo );
typedef WINBOOL (*PFN_CRYPT_EXPORT_PUBLIC_KEY_INFO_EX2_FUNC )(NCRYPT_KEY_HANDLE hNCryptKey ,DWORD dwCertEncodingType ,LPSTR pszPublicKeyObjId ,DWORD dwFlags ,void *pvAuxInfo ,PCERT_PUBLIC_KEY_INFO pInfo ,DWORD *pcbInfo );
typedef WINBOOL (*PFN_IMPORT_PRIV_KEY_FUNC )(HCRYPTPROV hCryptProv ,CRYPT_PRIVATE_KEY_INFO *pPrivateKeyInfo ,DWORD dwFlags ,void *pvAuxInfo );
typedef WINBOOL (*PFN_EXPORT_PRIV_KEY_FUNC )(HCRYPTPROV hCryptProv ,DWORD dwKeySpec ,LPSTR pszPrivateKeyObjId ,DWORD dwFlags ,void *pvAuxInfo ,CRYPT_PRIVATE_KEY_INFO *pPrivateKeyInfo ,DWORD *pcbPrivateKeyInfo );
WINBOOL CryptImportPublicKeyInfo (HCRYPTPROV hCryptProv ,DWORD dwCertEncodingType ,PCERT_PUBLIC_KEY_INFO pInfo ,HCRYPTKEY *phKey );
WINBOOL CryptImportPublicKeyInfoEx (HCRYPTPROV hCryptProv ,DWORD dwCertEncodingType ,PCERT_PUBLIC_KEY_INFO pInfo ,ALG_ID aiKeyAlg ,DWORD dwFlags ,void *pvAuxInfo ,HCRYPTKEY *phKey );
WINBOOL CryptAcquireCertificatePrivateKey (PCCERT_CONTEXT pCert ,DWORD dwFlags ,void *pvParameters ,HCRYPTPROV_OR_NCRYPT_KEY_HANDLE *phCryptProvOrNCryptKey ,DWORD *pdwKeySpec ,WINBOOL *pfCallerFreeProvOrNCryptKey );
WINBOOL CryptFindCertificateKeyProvInfo (PCCERT_CONTEXT pCert ,DWORD dwFlags ,void *pvReserved );
WINBOOL CryptImportPKCS8 (CRYPT_PKCS8_IMPORT_PARAMS sPrivateKeyAndParams ,DWORD dwFlags ,HCRYPTPROV *phCryptProv ,void *pvAuxInfo );
WINBOOL CryptExportPKCS8 (HCRYPTPROV hCryptProv ,DWORD dwKeySpec ,LPSTR pszPrivateKeyObjId ,DWORD dwFlags ,void *pvAuxInfo ,BYTE *pbPrivateKeyBlob ,DWORD *pcbPrivateKeyBlob );
WINBOOL CryptExportPKCS8Ex (CRYPT_PKCS8_EXPORT_PARAMS *psExportParams ,DWORD dwFlags ,void *pvAuxInfo ,BYTE *pbPrivateKeyBlob ,DWORD *pcbPrivateKeyBlob );
WINBOOL CryptHashPublicKeyInfo (HCRYPTPROV_LEGACY hCryptProv ,ALG_ID Algid ,DWORD dwFlags ,DWORD dwCertEncodingType ,PCERT_PUBLIC_KEY_INFO pInfo ,BYTE *pbComputedHash ,DWORD *pcbComputedHash );
DWORD CertRDNValueToStrA (DWORD dwValueType ,PCERT_RDN_VALUE_BLOB pValue ,LPSTR psz ,DWORD csz );
DWORD CertRDNValueToStrW (DWORD dwValueType ,PCERT_RDN_VALUE_BLOB pValue ,LPWSTR psz ,DWORD csz );
DWORD CertNameToStrA (DWORD dwCertEncodingType ,PCERT_NAME_BLOB pName ,DWORD dwStrType ,LPSTR psz ,DWORD csz );
DWORD CertNameToStrW (DWORD dwCertEncodingType ,PCERT_NAME_BLOB pName ,DWORD dwStrType ,LPWSTR psz ,DWORD csz );
WINBOOL CertStrToNameA (DWORD dwCertEncodingType ,LPCSTR pszX500 ,DWORD dwStrType ,void *pvReserved ,BYTE *pbEncoded ,DWORD *pcbEncoded ,LPCSTR *ppszError );
WINBOOL CertStrToNameW (DWORD dwCertEncodingType ,LPCWSTR pszX500 ,DWORD dwStrType ,void *pvReserved ,BYTE *pbEncoded ,DWORD *pcbEncoded ,LPCWSTR *ppszError );
DWORD CertGetNameStringA (PCCERT_CONTEXT pCertContext ,DWORD dwType ,DWORD dwFlags ,void *pvTypePara ,LPSTR pszNameString ,DWORD cchNameString );
DWORD CertGetNameStringW (PCCERT_CONTEXT pCertContext ,DWORD dwType ,DWORD dwFlags ,void *pvTypePara ,LPWSTR pszNameString ,DWORD cchNameString );
typedef PCCERT_CONTEXT (*PFN_CRYPT_GET_SIGNER_CERTIFICATE )(void *pvGetArg ,DWORD dwCertEncodingType ,PCERT_INFO pSignerId ,HCERTSTORE hMsgCertStore );
typedef struct _CRYPT_SIGN_MESSAGE_PARA {DWORD cbSize ;DWORD dwMsgEncodingType ;PCCERT_CONTEXT pSigningCert ;CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm ;void *pvHashAuxInfo ;DWORD cMsgCert ;PCCERT_CONTEXT *rgpMsgCert ;DWORD cMsgCrl ;PCCRL_CONTEXT *rgpMsgCrl ;DWORD cAuthAttr ;PCRYPT_ATTRIBUTE rgAuthAttr ;DWORD cUnauthAttr ;PCRYPT_ATTRIBUTE rgUnauthAttr ;DWORD dwFlags ;DWORD dwInnerContentType ;}CRYPT_SIGN_MESSAGE_PARA ;
typedef struct _CRYPT_SIGN_MESSAGE_PARA {DWORD cbSize ;DWORD dwMsgEncodingType ;PCCERT_CONTEXT pSigningCert ;CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm ;void *pvHashAuxInfo ;DWORD cMsgCert ;PCCERT_CONTEXT *rgpMsgCert ;DWORD cMsgCrl ;PCCRL_CONTEXT *rgpMsgCrl ;DWORD cAuthAttr ;PCRYPT_ATTRIBUTE rgAuthAttr ;DWORD cUnauthAttr ;PCRYPT_ATTRIBUTE rgUnauthAttr ;DWORD dwFlags ;DWORD dwInnerContentType ;}*PCRYPT_SIGN_MESSAGE_PARA ;

typedef struct _CRYPT_VERIFY_MESSAGE_PARA {DWORD cbSize ;DWORD dwMsgAndCertEncodingType ;HCRYPTPROV_LEGACY hCryptProv ;PFN_CRYPT_GET_SIGNER_CERTIFICATE pfnGetSignerCertificate ;void *pvGetArg ;}CRYPT_VERIFY_MESSAGE_PARA ;
typedef struct _CRYPT_VERIFY_MESSAGE_PARA {DWORD cbSize ;DWORD dwMsgAndCertEncodingType ;HCRYPTPROV_LEGACY hCryptProv ;PFN_CRYPT_GET_SIGNER_CERTIFICATE pfnGetSignerCertificate ;void *pvGetArg ;}*PCRYPT_VERIFY_MESSAGE_PARA ;

typedef struct _CRYPT_ENCRYPT_MESSAGE_PARA {DWORD cbSize ;DWORD dwMsgEncodingType ;HCRYPTPROV_LEGACY hCryptProv ;CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm ;void *pvEncryptionAuxInfo ;DWORD dwFlags ;DWORD dwInnerContentType ;}CRYPT_ENCRYPT_MESSAGE_PARA ;
typedef struct _CRYPT_ENCRYPT_MESSAGE_PARA {DWORD cbSize ;DWORD dwMsgEncodingType ;HCRYPTPROV_LEGACY hCryptProv ;CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm ;void *pvEncryptionAuxInfo ;DWORD dwFlags ;DWORD dwInnerContentType ;}*PCRYPT_ENCRYPT_MESSAGE_PARA ;

typedef struct _CRYPT_DECRYPT_MESSAGE_PARA {DWORD cbSize ;DWORD dwMsgAndCertEncodingType ;DWORD cCertStore ;HCERTSTORE *rghCertStore ;}CRYPT_DECRYPT_MESSAGE_PARA ;
typedef struct _CRYPT_DECRYPT_MESSAGE_PARA {DWORD cbSize ;DWORD dwMsgAndCertEncodingType ;DWORD cCertStore ;HCERTSTORE *rghCertStore ;}*PCRYPT_DECRYPT_MESSAGE_PARA ;

typedef struct _CRYPT_HASH_MESSAGE_PARA {DWORD cbSize ;DWORD dwMsgEncodingType ;HCRYPTPROV_LEGACY hCryptProv ;CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm ;void *pvHashAuxInfo ;}CRYPT_HASH_MESSAGE_PARA ;
typedef struct _CRYPT_HASH_MESSAGE_PARA {DWORD cbSize ;DWORD dwMsgEncodingType ;HCRYPTPROV_LEGACY hCryptProv ;CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm ;void *pvHashAuxInfo ;}*PCRYPT_HASH_MESSAGE_PARA ;

typedef struct _CRYPT_KEY_SIGN_MESSAGE_PARA {DWORD cbSize ;DWORD dwMsgAndCertEncodingType ;union {HCRYPTPROV hCryptProv ;NCRYPT_KEY_HANDLE hNCryptKey ;};DWORD dwKeySpec ;CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm ;void *pvHashAuxInfo ;CRYPT_ALGORITHM_IDENTIFIER PubKeyAlgorithm ;}CRYPT_KEY_SIGN_MESSAGE_PARA ;
typedef struct _CRYPT_KEY_SIGN_MESSAGE_PARA {DWORD cbSize ;DWORD dwMsgAndCertEncodingType ;union {HCRYPTPROV hCryptProv ;NCRYPT_KEY_HANDLE hNCryptKey ;};DWORD dwKeySpec ;CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm ;void *pvHashAuxInfo ;CRYPT_ALGORITHM_IDENTIFIER PubKeyAlgorithm ;}*PCRYPT_KEY_SIGN_MESSAGE_PARA ;

typedef struct _CRYPT_KEY_VERIFY_MESSAGE_PARA {DWORD cbSize ;DWORD dwMsgEncodingType ;HCRYPTPROV_LEGACY hCryptProv ;}CRYPT_KEY_VERIFY_MESSAGE_PARA ;
typedef struct _CRYPT_KEY_VERIFY_MESSAGE_PARA {DWORD cbSize ;DWORD dwMsgEncodingType ;HCRYPTPROV_LEGACY hCryptProv ;}*PCRYPT_KEY_VERIFY_MESSAGE_PARA ;

typedef struct _CERT_CHAIN {DWORD cCerts ;PCERT_BLOB certs ;CRYPT_KEY_PROV_INFO keyLocatorInfo ;}CERT_CHAIN ;
typedef struct _CERT_CHAIN {DWORD cCerts ;PCERT_BLOB certs ;CRYPT_KEY_PROV_INFO keyLocatorInfo ;}*PCERT_CHAIN ;

WINBOOL CryptSignMessage (PCRYPT_SIGN_MESSAGE_PARA pSignPara ,WINBOOL fDetachedSignature ,DWORD cToBeSigned ,const BYTE *rgpbToBeSigned [],DWORD rgcbToBeSigned [],BYTE *pbSignedBlob ,DWORD *pcbSignedBlob );
WINBOOL CryptVerifyMessageSignature (PCRYPT_VERIFY_MESSAGE_PARA pVerifyPara ,DWORD dwSignerIndex ,const BYTE *pbSignedBlob ,DWORD cbSignedBlob ,BYTE *pbDecoded ,DWORD *pcbDecoded ,PCCERT_CONTEXT *ppSignerCert );
LONG CryptGetMessageSignerCount (DWORD dwMsgEncodingType ,const BYTE *pbSignedBlob ,DWORD cbSignedBlob );
HCERTSTORE CryptGetMessageCertificates (DWORD dwMsgAndCertEncodingType ,HCRYPTPROV_LEGACY hCryptProv ,DWORD dwFlags ,const BYTE *pbSignedBlob ,DWORD cbSignedBlob );
WINBOOL CryptVerifyDetachedMessageSignature (PCRYPT_VERIFY_MESSAGE_PARA pVerifyPara ,DWORD dwSignerIndex ,const BYTE *pbDetachedSignBlob ,DWORD cbDetachedSignBlob ,DWORD cToBeSigned ,const BYTE *rgpbToBeSigned [],DWORD rgcbToBeSigned [],PCCERT_CONTEXT *ppSignerCert );
WINBOOL CryptEncryptMessage (PCRYPT_ENCRYPT_MESSAGE_PARA pEncryptPara ,DWORD cRecipientCert ,PCCERT_CONTEXT rgpRecipientCert [],const BYTE *pbToBeEncrypted ,DWORD cbToBeEncrypted ,BYTE *pbEncryptedBlob ,DWORD *pcbEncryptedBlob );
WINBOOL CryptDecryptMessage (PCRYPT_DECRYPT_MESSAGE_PARA pDecryptPara ,const BYTE *pbEncryptedBlob ,DWORD cbEncryptedBlob ,BYTE *pbDecrypted ,DWORD *pcbDecrypted ,PCCERT_CONTEXT *ppXchgCert );
WINBOOL CryptSignAndEncryptMessage (PCRYPT_SIGN_MESSAGE_PARA pSignPara ,PCRYPT_ENCRYPT_MESSAGE_PARA pEncryptPara ,DWORD cRecipientCert ,PCCERT_CONTEXT rgpRecipientCert [],const BYTE *pbToBeSignedAndEncrypted ,DWORD cbToBeSignedAndEncrypted ,BYTE *pbSignedAndEncryptedBlob ,DWORD *pcbSignedAndEncryptedBlob );
WINBOOL CryptDecryptAndVerifyMessageSignature (PCRYPT_DECRYPT_MESSAGE_PARA pDecryptPara ,PCRYPT_VERIFY_MESSAGE_PARA pVerifyPara ,DWORD dwSignerIndex ,const BYTE *pbEncryptedBlob ,DWORD cbEncryptedBlob ,BYTE *pbDecrypted ,DWORD *pcbDecrypted ,PCCERT_CONTEXT *ppXchgCert ,PCCERT_CONTEXT *ppSignerCert );
WINBOOL CryptDecodeMessage (DWORD dwMsgTypeFlags ,PCRYPT_DECRYPT_MESSAGE_PARA pDecryptPara ,PCRYPT_VERIFY_MESSAGE_PARA pVerifyPara ,DWORD dwSignerIndex ,const BYTE *pbEncodedBlob ,DWORD cbEncodedBlob ,DWORD dwPrevInnerContentType ,DWORD *pdwMsgType ,DWORD *pdwInnerContentType ,BYTE *pbDecoded ,DWORD *pcbDecoded ,PCCERT_CONTEXT *ppXchgCert ,PCCERT_CONTEXT *ppSignerCert );
WINBOOL CryptHashMessage (PCRYPT_HASH_MESSAGE_PARA pHashPara ,WINBOOL fDetachedHash ,DWORD cToBeHashed ,const BYTE *rgpbToBeHashed [],DWORD rgcbToBeHashed [],BYTE *pbHashedBlob ,DWORD *pcbHashedBlob ,BYTE *pbComputedHash ,DWORD *pcbComputedHash );
WINBOOL CryptVerifyMessageHash (PCRYPT_HASH_MESSAGE_PARA pHashPara ,BYTE *pbHashedBlob ,DWORD cbHashedBlob ,BYTE *pbToBeHashed ,DWORD *pcbToBeHashed ,BYTE *pbComputedHash ,DWORD *pcbComputedHash );
WINBOOL CryptVerifyDetachedMessageHash (PCRYPT_HASH_MESSAGE_PARA pHashPara ,BYTE *pbDetachedHashBlob ,DWORD cbDetachedHashBlob ,DWORD cToBeHashed ,const BYTE *rgpbToBeHashed [],DWORD rgcbToBeHashed [],BYTE *pbComputedHash ,DWORD *pcbComputedHash );
WINBOOL CryptSignMessageWithKey (PCRYPT_KEY_SIGN_MESSAGE_PARA pSignPara ,const BYTE *pbToBeSigned ,DWORD cbToBeSigned ,BYTE *pbSignedBlob ,DWORD *pcbSignedBlob );
WINBOOL CryptVerifyMessageSignatureWithKey (PCRYPT_KEY_VERIFY_MESSAGE_PARA pVerifyPara ,PCERT_PUBLIC_KEY_INFO pPublicKeyInfo ,const BYTE *pbSignedBlob ,DWORD cbSignedBlob ,BYTE *pbDecoded ,DWORD *pcbDecoded );
HCERTSTORE CertOpenSystemStoreA (HCRYPTPROV_LEGACY hProv ,LPCSTR szSubsystemProtocol );
HCERTSTORE CertOpenSystemStoreW (HCRYPTPROV_LEGACY hProv ,LPCWSTR szSubsystemProtocol );
WINBOOL CertAddEncodedCertificateToSystemStoreA (LPCSTR szCertStoreName ,const BYTE *pbCertEncoded ,DWORD cbCertEncoded );
WINBOOL CertAddEncodedCertificateToSystemStoreW (LPCWSTR szCertStoreName ,const BYTE *pbCertEncoded ,DWORD cbCertEncoded );
HRESULT FindCertsByIssuer (PCERT_CHAIN pCertChains ,DWORD *pcbCertChains ,DWORD *pcCertChains ,BYTE *pbEncodedIssuerName ,DWORD cbEncodedIssuerName ,LPCWSTR pwszPurpose ,DWORD dwKeySpec );
WINBOOL CryptQueryObject (DWORD dwObjectType ,const void *pvObject ,DWORD dwExpectedContentTypeFlags ,DWORD dwExpectedFormatTypeFlags ,DWORD dwFlags ,DWORD *pdwMsgAndCertEncodingType ,DWORD *pdwContentType ,DWORD *pdwFormatType ,HCERTSTORE *phCertStore ,HCRYPTMSG *phMsg ,const void **ppvContext );
typedef HANDLE HCRYPTASYNC ;
typedef HANDLE *PHCRYPTASYNC ;

typedef void (*PFN_CRYPT_ASYNC_PARAM_FREE_FUNC )(LPSTR pszParamOid ,LPVOID pvParam );
LPVOID CryptMemAlloc (ULONG cbSize );
LPVOID CryptMemRealloc (LPVOID pv ,ULONG cbSize );
void CryptMemFree (LPVOID pv );
WINBOOL CryptCreateAsyncHandle (DWORD dwFlags ,PHCRYPTASYNC phAsync );
WINBOOL CryptSetAsyncParam (HCRYPTASYNC hAsync ,LPSTR pszParamOid ,LPVOID pvParam ,PFN_CRYPT_ASYNC_PARAM_FREE_FUNC pfnFree );
WINBOOL CryptGetAsyncParam (HCRYPTASYNC hAsync ,LPSTR pszParamOid ,LPVOID *ppvParam ,PFN_CRYPT_ASYNC_PARAM_FREE_FUNC *ppfnFree );
WINBOOL CryptCloseAsyncHandle (HCRYPTASYNC hAsync );
typedef struct _CRYPT_BLOB_ARRAY {DWORD cBlob ;PCRYPT_DATA_BLOB rgBlob ;}CRYPT_BLOB_ARRAY ;
typedef struct _CRYPT_BLOB_ARRAY {DWORD cBlob ;PCRYPT_DATA_BLOB rgBlob ;}*PCRYPT_BLOB_ARRAY ;

typedef struct _CRYPT_CREDENTIALS {DWORD cbSize ;LPCSTR pszCredentialsOid ;LPVOID pvCredentials ;}CRYPT_CREDENTIALS ;
typedef struct _CRYPT_CREDENTIALS {DWORD cbSize ;LPCSTR pszCredentialsOid ;LPVOID pvCredentials ;}*PCRYPT_CREDENTIALS ;

typedef struct _CRYPT_PASSWORD_CREDENTIALSA {DWORD cbSize ;LPSTR pszUsername ;LPSTR pszPassword ;}CRYPT_PASSWORD_CREDENTIALSA ;
typedef struct _CRYPT_PASSWORD_CREDENTIALSA {DWORD cbSize ;LPSTR pszUsername ;LPSTR pszPassword ;}*PCRYPT_PASSWORD_CREDENTIALSA ;

typedef struct _CRYPT_PASSWORD_CREDENTIALSW {DWORD cbSize ;LPWSTR pszUsername ;LPWSTR pszPassword ;}CRYPT_PASSWORD_CREDENTIALSW ;
typedef struct _CRYPT_PASSWORD_CREDENTIALSW {DWORD cbSize ;LPWSTR pszUsername ;LPWSTR pszPassword ;}*PCRYPT_PASSWORD_CREDENTIALSW ;

typedef CRYPT_PASSWORD_CREDENTIALSA CRYPT_PASSWORD_CREDENTIALS ;
typedef PCRYPT_PASSWORD_CREDENTIALSA PCRYPT_PASSWORD_CREDENTIALS ;
typedef void (*PFN_FREE_ENCODED_OBJECT_FUNC )(LPCSTR pszObjectOid ,PCRYPT_BLOB_ARRAY pObject ,LPVOID pvFreeContext );
typedef struct _CRYPTNET_URL_CACHE_PRE_FETCH_INFO {DWORD cbSize ;DWORD dwObjectType ;DWORD dwError ;DWORD dwReserved ;FILETIME ThisUpdateTime ;FILETIME NextUpdateTime ;FILETIME PublishTime ;}CRYPTNET_URL_CACHE_PRE_FETCH_INFO ;
typedef struct _CRYPTNET_URL_CACHE_PRE_FETCH_INFO {DWORD cbSize ;DWORD dwObjectType ;DWORD dwError ;DWORD dwReserved ;FILETIME ThisUpdateTime ;FILETIME NextUpdateTime ;FILETIME PublishTime ;}*PCRYPTNET_URL_CACHE_PRE_FETCH_INFO ;

typedef struct _CRYPTNET_URL_CACHE_FLUSH_INFO {DWORD cbSize ;DWORD dwExemptSeconds ;FILETIME ExpireTime ;}CRYPTNET_URL_CACHE_FLUSH_INFO ;
typedef struct _CRYPTNET_URL_CACHE_FLUSH_INFO {DWORD cbSize ;DWORD dwExemptSeconds ;FILETIME ExpireTime ;}*PCRYPTNET_URL_CACHE_FLUSH_INFO ;

typedef struct _CRYPTNET_URL_CACHE_RESPONSE_INFO {DWORD cbSize ;WORD wResponseType ;WORD wResponseFlags ;FILETIME LastModifiedTime ;DWORD dwMaxAge ;LPCWSTR pwszETag ;DWORD dwProxyId ;}CRYPTNET_URL_CACHE_RESPONSE_INFO ;
typedef struct _CRYPTNET_URL_CACHE_RESPONSE_INFO {DWORD cbSize ;WORD wResponseType ;WORD wResponseFlags ;FILETIME LastModifiedTime ;DWORD dwMaxAge ;LPCWSTR pwszETag ;DWORD dwProxyId ;}*PCRYPTNET_URL_CACHE_RESPONSE_INFO ;

typedef struct _CRYPT_RETRIEVE_AUX_INFO {DWORD cbSize ;FILETIME *pLastSyncTime ;DWORD dwMaxUrlRetrievalByteCount ;PCRYPTNET_URL_CACHE_PRE_FETCH_INFO pPreFetchInfo ;PCRYPTNET_URL_CACHE_FLUSH_INFO pFlushInfo ;PCRYPTNET_URL_CACHE_RESPONSE_INFO *ppResponseInfo ;LPWSTR pwszCacheFileNamePrefix ;LPFILETIME pftCacheResync ;WINBOOL fProxyCacheRetrieval ;DWORD dwHttpStatusCode ;}CRYPT_RETRIEVE_AUX_INFO ;
typedef struct _CRYPT_RETRIEVE_AUX_INFO {DWORD cbSize ;FILETIME *pLastSyncTime ;DWORD dwMaxUrlRetrievalByteCount ;PCRYPTNET_URL_CACHE_PRE_FETCH_INFO pPreFetchInfo ;PCRYPTNET_URL_CACHE_FLUSH_INFO pFlushInfo ;PCRYPTNET_URL_CACHE_RESPONSE_INFO *ppResponseInfo ;LPWSTR pwszCacheFileNamePrefix ;LPFILETIME pftCacheResync ;WINBOOL fProxyCacheRetrieval ;DWORD dwHttpStatusCode ;}*PCRYPT_RETRIEVE_AUX_INFO ;

WINBOOL CryptRetrieveObjectByUrlA (LPCSTR pszUrl ,LPCSTR pszObjectOid ,DWORD dwRetrievalFlags ,DWORD dwTimeout ,LPVOID *ppvObject ,HCRYPTASYNC hAsyncRetrieve ,PCRYPT_CREDENTIALS pCredentials ,LPVOID pvVerify ,PCRYPT_RETRIEVE_AUX_INFO pAuxInfo );
WINBOOL CryptRetrieveObjectByUrlW (LPCWSTR pszUrl ,LPCSTR pszObjectOid ,DWORD dwRetrievalFlags ,DWORD dwTimeout ,LPVOID *ppvObject ,HCRYPTASYNC hAsyncRetrieve ,PCRYPT_CREDENTIALS pCredentials ,LPVOID pvVerify ,PCRYPT_RETRIEVE_AUX_INFO pAuxInfo );
typedef WINBOOL (*PFN_CRYPT_CANCEL_RETRIEVAL )(DWORD dwFlags ,void *pvArg );
WINBOOL CryptInstallCancelRetrieval (PFN_CRYPT_CANCEL_RETRIEVAL pfnCancel ,const void *pvArg ,DWORD dwFlags ,void *pvReserved );
WINBOOL CryptUninstallCancelRetrieval (DWORD dwFlags ,void *pvReserved );
WINBOOL CryptCancelAsyncRetrieval (HCRYPTASYNC hAsyncRetrieval );
typedef void (*PFN_CRYPT_ASYNC_RETRIEVAL_COMPLETION_FUNC )(LPVOID pvCompletion ,DWORD dwCompletionCode ,LPCSTR pszUrl ,LPSTR pszObjectOid ,LPVOID pvObject );
typedef struct _CRYPT_ASYNC_RETRIEVAL_COMPLETION {PFN_CRYPT_ASYNC_RETRIEVAL_COMPLETION_FUNC pfnCompletion ;LPVOID pvCompletion ;}CRYPT_ASYNC_RETRIEVAL_COMPLETION ;
typedef struct _CRYPT_ASYNC_RETRIEVAL_COMPLETION {PFN_CRYPT_ASYNC_RETRIEVAL_COMPLETION_FUNC pfnCompletion ;LPVOID pvCompletion ;}*PCRYPT_ASYNC_RETRIEVAL_COMPLETION ;

typedef WINBOOL (*PFN_CANCEL_ASYNC_RETRIEVAL_FUNC )(HCRYPTASYNC hAsyncRetrieve );
typedef struct _CRYPT_URL_ARRAY {DWORD cUrl ;LPWSTR *rgwszUrl ;}CRYPT_URL_ARRAY ;
typedef struct _CRYPT_URL_ARRAY {DWORD cUrl ;LPWSTR *rgwszUrl ;}*PCRYPT_URL_ARRAY ;

typedef struct _CRYPT_URL_INFO {DWORD cbSize ;DWORD dwSyncDeltaTime ;DWORD cGroup ;DWORD *rgcGroupEntry ;}CRYPT_URL_INFO ;
typedef struct _CRYPT_URL_INFO {DWORD cbSize ;DWORD dwSyncDeltaTime ;DWORD cGroup ;DWORD *rgcGroupEntry ;}*PCRYPT_URL_INFO ;

WINBOOL CryptGetObjectUrl (LPCSTR pszUrlOid ,LPVOID pvPara ,DWORD dwFlags ,PCRYPT_URL_ARRAY pUrlArray ,DWORD *pcbUrlArray ,PCRYPT_URL_INFO pUrlInfo ,DWORD *pcbUrlInfo ,LPVOID pvReserved );
typedef struct _CERT_CRL_CONTEXT_PAIR {PCCERT_CONTEXT pCertContext ;PCCRL_CONTEXT pCrlContext ;}CERT_CRL_CONTEXT_PAIR ;
typedef struct _CERT_CRL_CONTEXT_PAIR {PCCERT_CONTEXT pCertContext ;PCCRL_CONTEXT pCrlContext ;}*PCERT_CRL_CONTEXT_PAIR ;

typedef const CERT_CRL_CONTEXT_PAIR *PCCERT_CRL_CONTEXT_PAIR ;
typedef struct _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO {DWORD cbSize ;int iDeltaCrlIndicator ;LPFILETIME pftCacheResync ;LPFILETIME pLastSyncTime ;LPFILETIME pMaxAgeTime ;PCERT_REVOCATION_CHAIN_PARA pChainPara ;PCRYPT_INTEGER_BLOB pDeltaCrlIndicator ;}CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO ;
typedef struct _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO {DWORD cbSize ;int iDeltaCrlIndicator ;LPFILETIME pftCacheResync ;LPFILETIME pLastSyncTime ;LPFILETIME pMaxAgeTime ;PCERT_REVOCATION_CHAIN_PARA pChainPara ;PCRYPT_INTEGER_BLOB pDeltaCrlIndicator ;}*PCRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO ;

typedef WINBOOL (*PFN_CRYPT_ENUM_KEYID_PROP )(const CRYPT_HASH_BLOB *pKeyIdentifier ,DWORD dwFlags ,void *pvReserved ,void *pvArg ,DWORD cProp ,DWORD *rgdwPropId ,void **rgpvData ,DWORD *rgcbData );
WINBOOL CryptGetTimeValidObject (LPCSTR pszTimeValidOid ,LPVOID pvPara ,PCCERT_CONTEXT pIssuer ,LPFILETIME pftValidFor ,DWORD dwFlags ,DWORD dwTimeout ,LPVOID *ppvObject ,PCRYPT_CREDENTIALS pCredentials ,PCRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO pExtraInfo );
WINBOOL CryptFlushTimeValidObject (LPCSTR pszFlushTimeValidOid ,LPVOID pvPara ,PCCERT_CONTEXT pIssuer ,DWORD dwFlags ,LPVOID pvReserved );
PCCERT_CONTEXT CertCreateSelfSignCertificate (HCRYPTPROV_OR_NCRYPT_KEY_HANDLE hCryptProvOrNCryptKey ,PCERT_NAME_BLOB pSubjectIssuerBlob ,DWORD dwFlags ,PCRYPT_KEY_PROV_INFO pKeyProvInfo ,PCRYPT_ALGORITHM_IDENTIFIER pSignatureAlgorithm ,PSYSTEMTIME pStartTime ,PSYSTEMTIME pEndTime ,PCERT_EXTENSIONS pExtensions );
WINBOOL CryptGetKeyIdentifierProperty (const CRYPT_HASH_BLOB *pKeyIdentifier ,DWORD dwPropId ,DWORD dwFlags ,LPCWSTR pwszComputerName ,void *pvReserved ,void *pvData ,DWORD *pcbData );
WINBOOL CryptSetKeyIdentifierProperty (const CRYPT_HASH_BLOB *pKeyIdentifier ,DWORD dwPropId ,DWORD dwFlags ,LPCWSTR pwszComputerName ,void *pvReserved ,const void *pvData );
WINBOOL CryptEnumKeyIdentifierProperties (const CRYPT_HASH_BLOB *pKeyIdentifier ,DWORD dwPropId ,DWORD dwFlags ,LPCWSTR pwszComputerName ,void *pvReserved ,void *pvArg ,PFN_CRYPT_ENUM_KEYID_PROP pfnEnum );
WINBOOL CryptCreateKeyIdentifierFromCSP (DWORD dwCertEncodingType ,LPCSTR pszPubKeyOID ,const PUBLICKEYSTRUC *pPubKeyStruc ,DWORD cbPubKeyStruc ,DWORD dwFlags ,void *pvReserved ,BYTE *pbHash ,DWORD *pcbHash );
typedef HANDLE HCERTCHAINENGINE ;
typedef struct _CERT_CHAIN_ENGINE_CONFIG {DWORD cbSize ;HCERTSTORE hRestrictedRoot ;HCERTSTORE hRestrictedTrust ;HCERTSTORE hRestrictedOther ;DWORD cAdditionalStore ;HCERTSTORE *rghAdditionalStore ;DWORD dwFlags ;DWORD dwUrlRetrievalTimeout ;DWORD MaximumCachedCertificates ;DWORD CycleDetectionModulus ;}CERT_CHAIN_ENGINE_CONFIG ;
typedef struct _CERT_CHAIN_ENGINE_CONFIG {DWORD cbSize ;HCERTSTORE hRestrictedRoot ;HCERTSTORE hRestrictedTrust ;HCERTSTORE hRestrictedOther ;DWORD cAdditionalStore ;HCERTSTORE *rghAdditionalStore ;DWORD dwFlags ;DWORD dwUrlRetrievalTimeout ;DWORD MaximumCachedCertificates ;DWORD CycleDetectionModulus ;}*PCERT_CHAIN_ENGINE_CONFIG ;

WINBOOL CertCreateCertificateChainEngine (PCERT_CHAIN_ENGINE_CONFIG pConfig ,HCERTCHAINENGINE *phChainEngine );
void CertFreeCertificateChainEngine (HCERTCHAINENGINE hChainEngine );
WINBOOL CertResyncCertificateChainEngine (HCERTCHAINENGINE hChainEngine );
typedef struct _CERT_TRUST_STATUS {DWORD dwErrorStatus ;DWORD dwInfoStatus ;}CERT_TRUST_STATUS ;
typedef struct _CERT_TRUST_STATUS {DWORD dwErrorStatus ;DWORD dwInfoStatus ;}*PCERT_TRUST_STATUS ;

typedef struct _CERT_REVOCATION_INFO {DWORD cbSize ;DWORD dwRevocationResult ;LPCSTR pszRevocationOid ;LPVOID pvOidSpecificInfo ;WINBOOL fHasFreshnessTime ;DWORD dwFreshnessTime ;PCERT_REVOCATION_CRL_INFO pCrlInfo ;}CERT_REVOCATION_INFO ;
typedef struct _CERT_REVOCATION_INFO {DWORD cbSize ;DWORD dwRevocationResult ;LPCSTR pszRevocationOid ;LPVOID pvOidSpecificInfo ;WINBOOL fHasFreshnessTime ;DWORD dwFreshnessTime ;PCERT_REVOCATION_CRL_INFO pCrlInfo ;}*PCERT_REVOCATION_INFO ;

typedef struct _CERT_TRUST_LIST_INFO {DWORD cbSize ;PCTL_ENTRY pCtlEntry ;PCCTL_CONTEXT pCtlContext ;}CERT_TRUST_LIST_INFO ;
typedef struct _CERT_TRUST_LIST_INFO {DWORD cbSize ;PCTL_ENTRY pCtlEntry ;PCCTL_CONTEXT pCtlContext ;}*PCERT_TRUST_LIST_INFO ;

typedef struct _CERT_CHAIN_ELEMENT {DWORD cbSize ;PCCERT_CONTEXT pCertContext ;CERT_TRUST_STATUS TrustStatus ;PCERT_REVOCATION_INFO pRevocationInfo ;PCERT_ENHKEY_USAGE pIssuanceUsage ;PCERT_ENHKEY_USAGE pApplicationUsage ;LPCWSTR pwszExtendedErrorInfo ;}CERT_CHAIN_ELEMENT ;
typedef struct _CERT_CHAIN_ELEMENT {DWORD cbSize ;PCCERT_CONTEXT pCertContext ;CERT_TRUST_STATUS TrustStatus ;PCERT_REVOCATION_INFO pRevocationInfo ;PCERT_ENHKEY_USAGE pIssuanceUsage ;PCERT_ENHKEY_USAGE pApplicationUsage ;LPCWSTR pwszExtendedErrorInfo ;}*PCERT_CHAIN_ELEMENT ;

typedef const CERT_CHAIN_ELEMENT *PCCERT_CHAIN_ELEMENT ;
typedef struct _CERT_SIMPLE_CHAIN {DWORD cbSize ;CERT_TRUST_STATUS TrustStatus ;DWORD cElement ;PCERT_CHAIN_ELEMENT *rgpElement ;PCERT_TRUST_LIST_INFO pTrustListInfo ;WINBOOL fHasRevocationFreshnessTime ;DWORD dwRevocationFreshnessTime ;}CERT_SIMPLE_CHAIN ;
typedef struct _CERT_SIMPLE_CHAIN {DWORD cbSize ;CERT_TRUST_STATUS TrustStatus ;DWORD cElement ;PCERT_CHAIN_ELEMENT *rgpElement ;PCERT_TRUST_LIST_INFO pTrustListInfo ;WINBOOL fHasRevocationFreshnessTime ;DWORD dwRevocationFreshnessTime ;}*PCERT_SIMPLE_CHAIN ;

typedef const CERT_SIMPLE_CHAIN *PCCERT_SIMPLE_CHAIN ;
typedef struct _CERT_CHAIN_CONTEXT CERT_CHAIN_CONTEXT ;
typedef struct _CERT_CHAIN_CONTEXT *PCERT_CHAIN_CONTEXT ;

typedef const CERT_CHAIN_CONTEXT *PCCERT_CHAIN_CONTEXT ;
struct _CERT_CHAIN_CONTEXT {DWORD cbSize ;CERT_TRUST_STATUS TrustStatus ;DWORD cChain ;PCERT_SIMPLE_CHAIN *rgpChain ;DWORD cLowerQualityChainContext ;PCCERT_CHAIN_CONTEXT *rgpLowerQualityChainContext ;WINBOOL fHasRevocationFreshnessTime ;DWORD dwRevocationFreshnessTime ;DWORD dwCreateFlags ;GUID ChainId ;};
typedef struct _CERT_USAGE_MATCH {DWORD dwType ;CERT_ENHKEY_USAGE Usage ;}CERT_USAGE_MATCH ;
typedef struct _CERT_USAGE_MATCH {DWORD dwType ;CERT_ENHKEY_USAGE Usage ;}*PCERT_USAGE_MATCH ;

typedef struct _CTL_USAGE_MATCH {DWORD dwType ;CTL_USAGE Usage ;}CTL_USAGE_MATCH ;
typedef struct _CTL_USAGE_MATCH {DWORD dwType ;CTL_USAGE Usage ;}*PCTL_USAGE_MATCH ;

typedef struct _CERT_CHAIN_PARA {DWORD cbSize ;CERT_USAGE_MATCH RequestedUsage ;}CERT_CHAIN_PARA ;
typedef struct _CERT_CHAIN_PARA {DWORD cbSize ;CERT_USAGE_MATCH RequestedUsage ;}*PCERT_CHAIN_PARA ;

WINBOOL CertGetCertificateChain (HCERTCHAINENGINE hChainEngine ,PCCERT_CONTEXT pCertContext ,LPFILETIME pTime ,HCERTSTORE hAdditionalStore ,PCERT_CHAIN_PARA pChainPara ,DWORD dwFlags ,LPVOID pvReserved ,PCCERT_CHAIN_CONTEXT *ppChainContext );
void CertFreeCertificateChain (PCCERT_CHAIN_CONTEXT pChainContext );
PCCERT_CHAIN_CONTEXT CertDuplicateCertificateChain (PCCERT_CHAIN_CONTEXT pChainContext );
struct _CERT_REVOCATION_CHAIN_PARA {DWORD cbSize ;HCERTCHAINENGINE hChainEngine ;HCERTSTORE hAdditionalStore ;DWORD dwChainFlags ;DWORD dwUrlRetrievalTimeout ;LPFILETIME pftCurrentTime ;LPFILETIME pftCacheResync ;DWORD cbMaxUrlRetrievalByteCount ;};
typedef struct _CRL_REVOCATION_INFO {PCRL_ENTRY pCrlEntry ;PCCRL_CONTEXT pCrlContext ;PCCERT_CHAIN_CONTEXT pCrlIssuerChain ;}CRL_REVOCATION_INFO ;
typedef struct _CRL_REVOCATION_INFO {PCRL_ENTRY pCrlEntry ;PCCRL_CONTEXT pCrlContext ;PCCERT_CHAIN_CONTEXT pCrlIssuerChain ;}*PCRL_REVOCATION_INFO ;

PCCERT_CHAIN_CONTEXT CertFindChainInStore (HCERTSTORE hCertStore ,DWORD dwCertEncodingType ,DWORD dwFindFlags ,DWORD dwFindType ,const void *pvFindPara ,PCCERT_CHAIN_CONTEXT pPrevChainContext );
typedef WINBOOL (*PFN_CERT_CHAIN_FIND_BY_ISSUER_CALLBACK )(PCCERT_CONTEXT pCert ,void *pvFindArg );
typedef struct _CERT_CHAIN_FIND_BY_ISSUER_PARA {DWORD cbSize ;LPCSTR pszUsageIdentifier ;DWORD dwKeySpec ;DWORD dwAcquirePrivateKeyFlags ;DWORD cIssuer ;CERT_NAME_BLOB *rgIssuer ;PFN_CERT_CHAIN_FIND_BY_ISSUER_CALLBACK pfnFindCallback ;void *pvFindArg ;}CERT_CHAIN_FIND_ISSUER_PARA ;
typedef struct _CERT_CHAIN_FIND_BY_ISSUER_PARA {DWORD cbSize ;LPCSTR pszUsageIdentifier ;DWORD dwKeySpec ;DWORD dwAcquirePrivateKeyFlags ;DWORD cIssuer ;CERT_NAME_BLOB *rgIssuer ;PFN_CERT_CHAIN_FIND_BY_ISSUER_CALLBACK pfnFindCallback ;void *pvFindArg ;}*PCERT_CHAIN_FIND_ISSUER_PARA ;
typedef struct _CERT_CHAIN_FIND_BY_ISSUER_PARA {DWORD cbSize ;LPCSTR pszUsageIdentifier ;DWORD dwKeySpec ;DWORD dwAcquirePrivateKeyFlags ;DWORD cIssuer ;CERT_NAME_BLOB *rgIssuer ;PFN_CERT_CHAIN_FIND_BY_ISSUER_CALLBACK pfnFindCallback ;void *pvFindArg ;}CERT_CHAIN_FIND_BY_ISSUER_PARA ;
typedef struct _CERT_CHAIN_FIND_BY_ISSUER_PARA {DWORD cbSize ;LPCSTR pszUsageIdentifier ;DWORD dwKeySpec ;DWORD dwAcquirePrivateKeyFlags ;DWORD cIssuer ;CERT_NAME_BLOB *rgIssuer ;PFN_CERT_CHAIN_FIND_BY_ISSUER_CALLBACK pfnFindCallback ;void *pvFindArg ;}*PCERT_CHAIN_FIND_BY_ISSUER_PARA ;

typedef struct _CERT_CHAIN_POLICY_PARA {DWORD cbSize ;DWORD dwFlags ;void *pvExtraPolicyPara ;}CERT_CHAIN_POLICY_PARA ;
typedef struct _CERT_CHAIN_POLICY_PARA {DWORD cbSize ;DWORD dwFlags ;void *pvExtraPolicyPara ;}*PCERT_CHAIN_POLICY_PARA ;

typedef struct _CERT_CHAIN_POLICY_STATUS {DWORD cbSize ;DWORD dwError ;LONG lChainIndex ;LONG lElementIndex ;void *pvExtraPolicyStatus ;}CERT_CHAIN_POLICY_STATUS ;
typedef struct _CERT_CHAIN_POLICY_STATUS {DWORD cbSize ;DWORD dwError ;LONG lChainIndex ;LONG lElementIndex ;void *pvExtraPolicyStatus ;}*PCERT_CHAIN_POLICY_STATUS ;

WINBOOL CertVerifyCertificateChainPolicy (LPCSTR pszPolicyOID ,PCCERT_CHAIN_CONTEXT pChainContext ,PCERT_CHAIN_POLICY_PARA pPolicyPara ,PCERT_CHAIN_POLICY_STATUS pPolicyStatus );
typedef struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA {DWORD cbSize ;DWORD dwRegPolicySettings ;PCMSG_SIGNER_INFO pSignerInfo ;}AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA ;
typedef struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA {DWORD cbSize ;DWORD dwRegPolicySettings ;PCMSG_SIGNER_INFO pSignerInfo ;}*PAUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA ;

typedef struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS {DWORD cbSize ;WINBOOL fCommercial ;}AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS ;
typedef struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS {DWORD cbSize ;WINBOOL fCommercial ;}*PAUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS ;

typedef struct _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA {DWORD cbSize ;DWORD dwRegPolicySettings ;WINBOOL fCommercial ;}AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA ;
typedef struct _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA {DWORD cbSize ;DWORD dwRegPolicySettings ;WINBOOL fCommercial ;}*PAUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA ;

typedef struct _HTTPSPolicyCallbackData {union {DWORD cbStruct ;DWORD cbSize ;};DWORD dwAuthType ;DWORD fdwChecks ;WCHAR *pwszServerName ;}HTTPSPolicyCallbackData ;
typedef struct _HTTPSPolicyCallbackData {union {DWORD cbStruct ;DWORD cbSize ;};DWORD dwAuthType ;DWORD fdwChecks ;WCHAR *pwszServerName ;}*PHTTPSPolicyCallbackData ;
typedef struct _HTTPSPolicyCallbackData {union {DWORD cbStruct ;DWORD cbSize ;};DWORD dwAuthType ;DWORD fdwChecks ;WCHAR *pwszServerName ;}SSL_EXTRA_CERT_CHAIN_POLICY_PARA ;
typedef struct _HTTPSPolicyCallbackData {union {DWORD cbStruct ;DWORD cbSize ;};DWORD dwAuthType ;DWORD fdwChecks ;WCHAR *pwszServerName ;}*PSSL_EXTRA_CERT_CHAIN_POLICY_PARA ;

typedef struct _EV_EXTRA_CERT_CHAIN_POLICY_PARA {DWORD cbSize ;DWORD dwRootProgramQualifierFlags ;}EV_EXTRA_CERT_CHAIN_POLICY_PARA ;
typedef struct _EV_EXTRA_CERT_CHAIN_POLICY_PARA {DWORD cbSize ;DWORD dwRootProgramQualifierFlags ;}*PEV_EXTRA_CERT_CHAIN_POLICY_PARA ;

typedef struct _EV_EXTRA_CERT_CHAIN_POLICY_STATUS {DWORD cbSize ;DWORD dwQualifiers ;DWORD dwIssuanceUsageIndex ;}EV_EXTRA_CERT_CHAIN_POLICY_STATUS ;
typedef struct _EV_EXTRA_CERT_CHAIN_POLICY_STATUS {DWORD cbSize ;DWORD dwQualifiers ;DWORD dwIssuanceUsageIndex ;}*PEV_EXTRA_CERT_CHAIN_POLICY_STATUS ;

WINBOOL CryptStringToBinaryA (LPCSTR pszString ,DWORD cchString ,DWORD dwFlags ,BYTE *pbBinary ,DWORD *pcbBinary ,DWORD *pdwSkip ,DWORD *pdwFlags );
WINBOOL CryptStringToBinaryW (LPCWSTR pszString ,DWORD cchString ,DWORD dwFlags ,BYTE *pbBinary ,DWORD *pcbBinary ,DWORD *pdwSkip ,DWORD *pdwFlags );
WINBOOL CryptBinaryToStringA (const BYTE *pbBinary ,DWORD cbBinary ,DWORD dwFlags ,LPSTR pszString ,DWORD *pcchString );
WINBOOL CryptBinaryToStringW (const BYTE *pbBinary ,DWORD cbBinary ,DWORD dwFlags ,LPWSTR pszString ,DWORD *pcchString );
typedef struct _CRYPT_PKCS12_PBE_PARAMS {int iIterations ;ULONG cbSalt ;}CRYPT_PKCS12_PBE_PARAMS ;
HCERTSTORE PFXImportCertStore (CRYPT_DATA_BLOB *pPFX ,LPCWSTR szPassword ,DWORD dwFlags );
WINBOOL PFXIsPFXBlob (CRYPT_DATA_BLOB *pPFX );
WINBOOL PFXVerifyPassword (CRYPT_DATA_BLOB *pPFX ,LPCWSTR szPassword ,DWORD dwFlags );
WINBOOL PFXExportCertStoreEx (HCERTSTORE hStore ,CRYPT_DATA_BLOB *pPFX ,LPCWSTR szPassword ,void *pvPara ,DWORD dwFlags );
WINBOOL PFXExportCertStore (HCERTSTORE hStore ,CRYPT_DATA_BLOB *pPFX ,LPCWSTR szPassword ,DWORD dwFlags );
WINBOOL CertRetrieveLogoOrBiometricInfo (PCCERT_CONTEXT pCertContext ,LPCSTR lpszLogoOrBiometricType ,DWORD dwRetrievalFlags ,DWORD dwTimeout ,DWORD dwFlags ,void *pvReserved ,BYTE **ppbData ,DWORD *pcbData ,LPWSTR *ppwszMimeType );
// m:\mingw\x86_64-w64-mingw32\include\dpapi.h

typedef struct _CRYPTPROTECT_PROMPTSTRUCT {DWORD cbSize ;DWORD dwPromptFlags ;HWND hwndApp ;LPCWSTR szPrompt ;}CRYPTPROTECT_PROMPTSTRUCT ;
typedef struct _CRYPTPROTECT_PROMPTSTRUCT {DWORD cbSize ;DWORD dwPromptFlags ;HWND hwndApp ;LPCWSTR szPrompt ;}*PCRYPTPROTECT_PROMPTSTRUCT ;

WINBOOL CryptProtectData (DATA_BLOB *pDataIn ,LPCWSTR szDataDescr ,DATA_BLOB *pOptionalEntropy ,PVOID pvReserved ,CRYPTPROTECT_PROMPTSTRUCT *pPromptStruct ,DWORD dwFlags ,DATA_BLOB *pDataOut );
WINBOOL CryptUnprotectData (DATA_BLOB *pDataIn ,LPWSTR *ppszDataDescr ,DATA_BLOB *pOptionalEntropy ,PVOID pvReserved ,CRYPTPROTECT_PROMPTSTRUCT *pPromptStruct ,DWORD dwFlags ,DATA_BLOB *pDataOut );
WINBOOL CryptProtectMemory (LPVOID pDataIn ,DWORD cbDataIn ,DWORD dwFlags );
WINBOOL CryptUnprotectMemory (LPVOID pDataIn ,DWORD cbDataIn ,DWORD dwFlags );
// m:\mingw\x86_64-w64-mingw32\include\winefs.h

typedef struct _CERTIFICATE_BLOB {DWORD dwCertEncodingType ;DWORD cbData ;PBYTE pbData ;}EFS_CERTIFICATE_BLOB ;
typedef struct _CERTIFICATE_BLOB {DWORD dwCertEncodingType ;DWORD cbData ;PBYTE pbData ;}*PEFS_CERTIFICATE_BLOB ;

typedef struct _EFS_HASH_BLOB {DWORD cbData ;PBYTE pbData ;}EFS_HASH_BLOB ;
typedef struct _EFS_HASH_BLOB {DWORD cbData ;PBYTE pbData ;}*PEFS_HASH_BLOB ;

typedef struct _EFS_RPC_BLOB {DWORD cbData ;PBYTE pbData ;}EFS_RPC_BLOB ;
typedef struct _EFS_RPC_BLOB {DWORD cbData ;PBYTE pbData ;}*PEFS_RPC_BLOB ;

typedef struct _EFS_KEY_INFO {DWORD dwVersion ;ULONG Entropy ;ALG_ID Algorithm ;ULONG KeyLength ;}EFS_KEY_INFO ;
typedef struct _EFS_KEY_INFO {DWORD dwVersion ;ULONG Entropy ;ALG_ID Algorithm ;ULONG KeyLength ;}*PEFS_KEY_INFO ;

typedef struct _ENCRYPTION_CERTIFICATE {DWORD cbTotalLength ;SID *pUserSid ;PEFS_CERTIFICATE_BLOB pCertBlob ;}ENCRYPTION_CERTIFICATE ;
typedef struct _ENCRYPTION_CERTIFICATE {DWORD cbTotalLength ;SID *pUserSid ;PEFS_CERTIFICATE_BLOB pCertBlob ;}*PENCRYPTION_CERTIFICATE ;

typedef struct _ENCRYPTION_CERTIFICATE_HASH {DWORD cbTotalLength ;SID *pUserSid ;PEFS_HASH_BLOB pHash ;LPWSTR lpDisplayInformation ;}ENCRYPTION_CERTIFICATE_HASH ;
typedef struct _ENCRYPTION_CERTIFICATE_HASH {DWORD cbTotalLength ;SID *pUserSid ;PEFS_HASH_BLOB pHash ;LPWSTR lpDisplayInformation ;}*PENCRYPTION_CERTIFICATE_HASH ;

typedef struct _ENCRYPTION_CERTIFICATE_HASH_LIST {DWORD nCert_Hash ;PENCRYPTION_CERTIFICATE_HASH *pUsers ;}ENCRYPTION_CERTIFICATE_HASH_LIST ;
typedef struct _ENCRYPTION_CERTIFICATE_HASH_LIST {DWORD nCert_Hash ;PENCRYPTION_CERTIFICATE_HASH *pUsers ;}*PENCRYPTION_CERTIFICATE_HASH_LIST ;

typedef struct _ENCRYPTION_CERTIFICATE_LIST {DWORD nUsers ;PENCRYPTION_CERTIFICATE *pUsers ;}ENCRYPTION_CERTIFICATE_LIST ;
typedef struct _ENCRYPTION_CERTIFICATE_LIST {DWORD nUsers ;PENCRYPTION_CERTIFICATE *pUsers ;}*PENCRYPTION_CERTIFICATE_LIST ;

DWORD QueryUsersOnEncryptedFile (LPCWSTR lpFileName ,PENCRYPTION_CERTIFICATE_HASH_LIST *pUsers );
DWORD QueryRecoveryAgentsOnEncryptedFile (LPCWSTR lpFileName ,PENCRYPTION_CERTIFICATE_HASH_LIST *pRecoveryAgents );
DWORD RemoveUsersFromEncryptedFile (LPCWSTR lpFileName ,PENCRYPTION_CERTIFICATE_HASH_LIST pHashes );
DWORD AddUsersToEncryptedFile (LPCWSTR lpFileName ,PENCRYPTION_CERTIFICATE_LIST pUsers );
DWORD SetUserFileEncryptionKey (PENCRYPTION_CERTIFICATE pEncryptionCertificate );
void FreeEncryptionCertificateHashList (PENCRYPTION_CERTIFICATE_HASH_LIST pHashes );
WINBOOL EncryptionDisable (LPCWSTR DirPath ,WINBOOL Disable );
DWORD DuplicateEncryptionInfoFile (LPCWSTR SrcFileName ,LPCWSTR DstFileName ,DWORD dwCreationDistribution ,DWORD dwAttributes ,const LPSECURITY_ATTRIBUTES lpSecurityAttributes );
// m:\mingw\x86_64-w64-mingw32\include\rpcnsip.h

typedef struct {RPC_NS_HANDLE LookupContext ;RPC_BINDING_HANDLE ProposedHandle ;RPC_BINDING_VECTOR *Bindings ;}RPC_IMPORT_CONTEXT_P ;
typedef struct {RPC_NS_HANDLE LookupContext ;RPC_BINDING_HANDLE ProposedHandle ;RPC_BINDING_VECTOR *Bindings ;}*PRPC_IMPORT_CONTEXT_P ;

RPC_STATUS I_RpcNsGetBuffer (PRPC_MESSAGE Message );
RPC_STATUS I_RpcNsSendReceive (PRPC_MESSAGE Message ,RPC_BINDING_HANDLE *Handle );
void I_RpcNsRaiseException (PRPC_MESSAGE Message ,RPC_STATUS Status );
RPC_STATUS I_RpcReBindBuffer (PRPC_MESSAGE Message );
RPC_STATUS I_NsServerBindSearch ();
RPC_STATUS I_NsClientBindSearch ();
void I_NsClientBindDone ();
// m:\mingw\x86_64-w64-mingw32\include\rpcndr.h

typedef unsigned char byte ;
typedef byte cs_byte ;
typedef unsigned char boolean ;
void *MIDL_user_allocate (SIZE_T );
void MIDL_user_free (void *);
typedef void *NDR_CCONTEXT ;
typedef struct _NDR_SCONTEXT {void *pad [2 ];void *userContext ;}*NDR_SCONTEXT ;
typedef void (*NDR_RUNDOWN )(void *context );
typedef void (*NDR_NOTIFY_ROUTINE )(void );
typedef void (*NDR_NOTIFY2_ROUTINE )(boolean flag );
typedef struct _SCONTEXT_QUEUE {unsigned long NumberOfObjects ;NDR_SCONTEXT *ArrayOfObjects ;}SCONTEXT_QUEUE ;
typedef struct _SCONTEXT_QUEUE {unsigned long NumberOfObjects ;NDR_SCONTEXT *ArrayOfObjects ;}*PSCONTEXT_QUEUE ;

RPC_BINDING_HANDLE NDRCContextBinding (NDR_CCONTEXT CContext );
void NDRCContextMarshall (NDR_CCONTEXT CContext ,void *pBuff );
void NDRCContextUnmarshall (NDR_CCONTEXT *pCContext ,RPC_BINDING_HANDLE hBinding ,void *pBuff ,unsigned long DataRepresentation );
void NDRSContextMarshall (NDR_SCONTEXT CContext ,void *pBuff ,NDR_RUNDOWN userRunDownIn );
NDR_SCONTEXT NDRSContextUnmarshall (void *pBuff ,unsigned long DataRepresentation );
void NDRSContextMarshallEx (RPC_BINDING_HANDLE BindingHandle ,NDR_SCONTEXT CContext ,void *pBuff ,NDR_RUNDOWN userRunDownIn );
void NDRSContextMarshall2 (RPC_BINDING_HANDLE BindingHandle ,NDR_SCONTEXT CContext ,void *pBuff ,NDR_RUNDOWN userRunDownIn ,void *CtxGuard ,unsigned long Flags );
NDR_SCONTEXT NDRSContextUnmarshallEx (RPC_BINDING_HANDLE BindingHandle ,void *pBuff ,unsigned long DataRepresentation );
NDR_SCONTEXT NDRSContextUnmarshall2 (RPC_BINDING_HANDLE BindingHandle ,void *pBuff ,unsigned long DataRepresentation ,void *CtxGuard ,unsigned long Flags );
void RpcSsDestroyClientContext (void **ContextHandle );
typedef unsigned long error_status_t ;
struct _MIDL_STUB_MESSAGE ;
struct _MIDL_STUB_DESC ;
struct _FULL_PTR_XLAT_TABLES ;
typedef unsigned char *RPC_BUFPTR ;
typedef unsigned long RPC_LENGTH ;
typedef void (*EXPR_EVAL )(struct _MIDL_STUB_MESSAGE *);
typedef const unsigned char *PFORMAT_STRING ;
typedef struct {long Dimension ;unsigned long *BufferConformanceMark ;unsigned long *BufferVarianceMark ;unsigned long *MaxCountArray ;unsigned long *OffsetArray ;unsigned long *ActualCountArray ;}ARRAY_INFO ;
typedef struct {long Dimension ;unsigned long *BufferConformanceMark ;unsigned long *BufferVarianceMark ;unsigned long *MaxCountArray ;unsigned long *OffsetArray ;unsigned long *ActualCountArray ;}*PARRAY_INFO ;

typedef struct _NDR_ASYNC_MESSAGE *PNDR_ASYNC_MESSAGE ;
typedef struct _NDR_CORRELATION_INFO *PNDR_CORRELATION_INFO ;
typedef struct {unsigned long WireCodeset ;unsigned long DesiredReceivingCodeset ;void *CSArrayInfo ;}CS_STUB_INFO ;
struct _MIDL_SYNTAX_INFO ;
typedef struct _MIDL_SYNTAX_INFO MIDL_SYNTAX_INFO ;
typedef struct _MIDL_SYNTAX_INFO *PMIDL_SYNTAX_INFO ;

struct NDR_ALLOC_ALL_NODES_CONTEXT ;
struct NDR_POINTER_QUEUE_STATE ;
struct _NDR_PROC_CONTEXT ;
typedef struct _MIDL_STUB_MESSAGE {PRPC_MESSAGE RpcMsg ;unsigned char *Buffer ;unsigned char *BufferStart ;unsigned char *BufferEnd ;unsigned char *BufferMark ;unsigned long BufferLength ;unsigned long MemorySize ;unsigned char *Memory ;unsigned char IsClient ;unsigned char Pad ;unsigned short uFlags2 ;int ReuseBuffer ;struct NDR_ALLOC_ALL_NODES_CONTEXT *pAllocAllNodesContext ;struct NDR_POINTER_QUEUE_STATE *pPointerQueueState ;int IgnoreEmbeddedPointers ;unsigned char *PointerBufferMark ;unsigned char fBufferValid ;unsigned char uFlags ;unsigned short UniquePtrCount ;ULONG_PTR MaxCount ;unsigned long Offset ;unsigned long ActualCount ;void *(*pfnAllocate )(size_t );void (*pfnFree )(void *);unsigned char *StackTop ;unsigned char *pPresentedType ;unsigned char *pTransmitType ;handle_t SavedHandle ;const struct _MIDL_STUB_DESC *StubDesc ;struct _FULL_PTR_XLAT_TABLES *FullPtrXlatTables ;unsigned long FullPtrRefId ;unsigned long PointerLength ;int fInDontFree :1 ;int fDontCallFreeInst :1 ;int fInOnlyParam :1 ;int fHasReturn :1 ;int fHasExtensions :1 ;int fHasNewCorrDesc :1 ;int fIsOicfServer :1 ;int fHasMemoryValidateCallback :1 ;int fUnused :8 ;int fUnused2 :16 ;unsigned long dwDestContext ;void *pvDestContext ;NDR_SCONTEXT *SavedContextHandles ;long ParamNumber ;struct IRpcChannelBuffer *pRpcChannelBuffer ;PARRAY_INFO pArrayInfo ;unsigned long *SizePtrCountArray ;unsigned long *SizePtrOffsetArray ;unsigned long *SizePtrLengthArray ;void *pArgQueue ;unsigned long dwStubPhase ;void *LowStackMark ;PNDR_ASYNC_MESSAGE pAsyncMsg ;PNDR_CORRELATION_INFO pCorrInfo ;unsigned char *pCorrMemory ;void *pMemoryList ;CS_STUB_INFO *pCSInfo ;unsigned char *ConformanceMark ;unsigned char *VarianceMark ;INT_PTR Unused ;struct _NDR_PROC_CONTEXT *pContext ;void *pUserMarshalList ;INT_PTR Reserved51_2 ;INT_PTR Reserved51_3 ;INT_PTR Reserved51_4 ;INT_PTR Reserved51_5 ;}MIDL_STUB_MESSAGE ;
typedef struct _MIDL_STUB_MESSAGE {PRPC_MESSAGE RpcMsg ;unsigned char *Buffer ;unsigned char *BufferStart ;unsigned char *BufferEnd ;unsigned char *BufferMark ;unsigned long BufferLength ;unsigned long MemorySize ;unsigned char *Memory ;unsigned char IsClient ;unsigned char Pad ;unsigned short uFlags2 ;int ReuseBuffer ;struct NDR_ALLOC_ALL_NODES_CONTEXT *pAllocAllNodesContext ;struct NDR_POINTER_QUEUE_STATE *pPointerQueueState ;int IgnoreEmbeddedPointers ;unsigned char *PointerBufferMark ;unsigned char fBufferValid ;unsigned char uFlags ;unsigned short UniquePtrCount ;ULONG_PTR MaxCount ;unsigned long Offset ;unsigned long ActualCount ;void *(*pfnAllocate )(size_t );void (*pfnFree )(void *);unsigned char *StackTop ;unsigned char *pPresentedType ;unsigned char *pTransmitType ;handle_t SavedHandle ;const struct _MIDL_STUB_DESC *StubDesc ;struct _FULL_PTR_XLAT_TABLES *FullPtrXlatTables ;unsigned long FullPtrRefId ;unsigned long PointerLength ;int fInDontFree :1 ;int fDontCallFreeInst :1 ;int fInOnlyParam :1 ;int fHasReturn :1 ;int fHasExtensions :1 ;int fHasNewCorrDesc :1 ;int fIsOicfServer :1 ;int fHasMemoryValidateCallback :1 ;int fUnused :8 ;int fUnused2 :16 ;unsigned long dwDestContext ;void *pvDestContext ;NDR_SCONTEXT *SavedContextHandles ;long ParamNumber ;struct IRpcChannelBuffer *pRpcChannelBuffer ;PARRAY_INFO pArrayInfo ;unsigned long *SizePtrCountArray ;unsigned long *SizePtrOffsetArray ;unsigned long *SizePtrLengthArray ;void *pArgQueue ;unsigned long dwStubPhase ;void *LowStackMark ;PNDR_ASYNC_MESSAGE pAsyncMsg ;PNDR_CORRELATION_INFO pCorrInfo ;unsigned char *pCorrMemory ;void *pMemoryList ;CS_STUB_INFO *pCSInfo ;unsigned char *ConformanceMark ;unsigned char *VarianceMark ;INT_PTR Unused ;struct _NDR_PROC_CONTEXT *pContext ;void *pUserMarshalList ;INT_PTR Reserved51_2 ;INT_PTR Reserved51_3 ;INT_PTR Reserved51_4 ;INT_PTR Reserved51_5 ;}*PMIDL_STUB_MESSAGE ;

typedef void *(*GENERIC_BINDING_ROUTINE )(void *);
typedef void (*GENERIC_UNBIND_ROUTINE )(void *,unsigned char *);
typedef struct _GENERIC_BINDING_ROUTINE_PAIR {GENERIC_BINDING_ROUTINE pfnBind ;GENERIC_UNBIND_ROUTINE pfnUnbind ;}GENERIC_BINDING_ROUTINE_PAIR ;
typedef struct _GENERIC_BINDING_ROUTINE_PAIR {GENERIC_BINDING_ROUTINE pfnBind ;GENERIC_UNBIND_ROUTINE pfnUnbind ;}*PGENERIC_BINDING_ROUTINE_PAIR ;

typedef struct __GENERIC_BINDING_INFO {void *pObj ;unsigned int Size ;GENERIC_BINDING_ROUTINE pfnBind ;GENERIC_UNBIND_ROUTINE pfnUnbind ;}GENERIC_BINDING_INFO ;
typedef struct __GENERIC_BINDING_INFO {void *pObj ;unsigned int Size ;GENERIC_BINDING_ROUTINE pfnBind ;GENERIC_UNBIND_ROUTINE pfnUnbind ;}*PGENERIC_BINDING_INFO ;

typedef void (*XMIT_HELPER_ROUTINE )(PMIDL_STUB_MESSAGE );
typedef struct _XMIT_ROUTINE_QUINTUPLE {XMIT_HELPER_ROUTINE pfnTranslateToXmit ;XMIT_HELPER_ROUTINE pfnTranslateFromXmit ;XMIT_HELPER_ROUTINE pfnFreeXmit ;XMIT_HELPER_ROUTINE pfnFreeInst ;}XMIT_ROUTINE_QUINTUPLE ;
typedef struct _XMIT_ROUTINE_QUINTUPLE {XMIT_HELPER_ROUTINE pfnTranslateToXmit ;XMIT_HELPER_ROUTINE pfnTranslateFromXmit ;XMIT_HELPER_ROUTINE pfnFreeXmit ;XMIT_HELPER_ROUTINE pfnFreeInst ;}*PXMIT_ROUTINE_QUINTUPLE ;

typedef ULONG (*USER_MARSHAL_SIZING_ROUTINE )(ULONG *,ULONG ,void *);
typedef unsigned char *(*USER_MARSHAL_MARSHALLING_ROUTINE )(ULONG *,unsigned char *,void *);
typedef unsigned char *(*USER_MARSHAL_UNMARSHALLING_ROUTINE )(ULONG *,unsigned char *,void *);
typedef void (*USER_MARSHAL_FREEING_ROUTINE )(ULONG *,void *);
typedef struct _USER_MARSHAL_ROUTINE_QUADRUPLE {USER_MARSHAL_SIZING_ROUTINE pfnBufferSize ;USER_MARSHAL_MARSHALLING_ROUTINE pfnMarshall ;USER_MARSHAL_UNMARSHALLING_ROUTINE pfnUnmarshall ;USER_MARSHAL_FREEING_ROUTINE pfnFree ;}USER_MARSHAL_ROUTINE_QUADRUPLE ;
typedef enum _USER_MARSHAL_CB_TYPE {USER_MARSHAL_CB_BUFFER_SIZE ,USER_MARSHAL_CB_MARSHALL ,USER_MARSHAL_CB_UNMARSHALL ,USER_MARSHAL_CB_FREE }USER_MARSHAL_CB_TYPE ;
typedef struct _USER_MARSHAL_CB {unsigned long Flags ;PMIDL_STUB_MESSAGE pStubMsg ;PFORMAT_STRING pReserve ;unsigned long Signature ;USER_MARSHAL_CB_TYPE CBType ;PFORMAT_STRING pFormat ;PFORMAT_STRING pTypeFormat ;}USER_MARSHAL_CB ;
typedef struct _MALLOC_FREE_STRUCT {void *(*pfnAllocate )(size_t );void (*pfnFree )(void *);}MALLOC_FREE_STRUCT ;
typedef struct _COMM_FAULT_OFFSETS {short CommOffset ;short FaultOffset ;}COMM_FAULT_OFFSETS ;
typedef enum _IDL_CS_CONVERT {IDL_CS_NO_CONVERT ,IDL_CS_IN_PLACE_CONVERT ,IDL_CS_NEW_BUFFER_CONVERT }IDL_CS_CONVERT ;
typedef void (*CS_TYPE_NET_SIZE_ROUTINE )(RPC_BINDING_HANDLE hBinding ,unsigned long ulNetworkCodeSet ,unsigned long ulLocalBufferSize ,IDL_CS_CONVERT *conversionType ,unsigned long *pulNetworkBufferSize ,error_status_t *pStatus );
typedef void (*CS_TYPE_LOCAL_SIZE_ROUTINE )(RPC_BINDING_HANDLE hBinding ,unsigned long ulNetworkCodeSet ,unsigned long ulNetworkBufferSize ,IDL_CS_CONVERT *conversionType ,unsigned long *pulLocalBufferSize ,error_status_t *pStatus );
typedef void (*CS_TYPE_TO_NETCS_ROUTINE )(RPC_BINDING_HANDLE hBinding ,unsigned long ulNetworkCodeSet ,void *pLocalData ,unsigned long ulLocalDataLength ,byte *pNetworkData ,unsigned long *pulNetworkDataLength ,error_status_t *pStatus );
typedef void (*CS_TYPE_FROM_NETCS_ROUTINE )(RPC_BINDING_HANDLE hBinding ,unsigned long ulNetworkCodeSet ,byte *pNetworkData ,unsigned long ulNetworkDataLength ,unsigned long ulLocalBufferSize ,void *pLocalData ,unsigned long *pulLocalDataLength ,error_status_t *pStatus );
typedef void (*CS_TAG_GETTING_ROUTINE )(RPC_BINDING_HANDLE hBinding ,int fServerSide ,unsigned long *pulSendingTag ,unsigned long *pulDesiredReceivingTag ,unsigned long *pulReceivingTag ,error_status_t *pStatus );
void RpcCsGetTags (RPC_BINDING_HANDLE hBinding ,int fServerSide ,unsigned long *pulSendingTag ,unsigned long *pulDesiredReceivingTag ,unsigned long *pulReceivingTag ,error_status_t *pStatus );
typedef struct _NDR_CS_SIZE_CONVERT_ROUTINES {CS_TYPE_NET_SIZE_ROUTINE pfnNetSize ;CS_TYPE_TO_NETCS_ROUTINE pfnToNetCs ;CS_TYPE_LOCAL_SIZE_ROUTINE pfnLocalSize ;CS_TYPE_FROM_NETCS_ROUTINE pfnFromNetCs ;}NDR_CS_SIZE_CONVERT_ROUTINES ;
typedef struct _NDR_CS_ROUTINES {NDR_CS_SIZE_CONVERT_ROUTINES *pSizeConvertRoutines ;CS_TAG_GETTING_ROUTINE *pTagGettingRoutines ;}NDR_CS_ROUTINES ;
typedef struct _MIDL_STUB_DESC {void *RpcInterfaceInformation ;void *(*pfnAllocate )(size_t );void (*pfnFree )(void *);union {handle_t *pAutoHandle ;handle_t *pPrimitiveHandle ;PGENERIC_BINDING_INFO pGenericBindingInfo ;}IMPLICIT_HANDLE_INFO ;const NDR_RUNDOWN *apfnNdrRundownRoutines ;const GENERIC_BINDING_ROUTINE_PAIR *aGenericBindingRoutinePairs ;const EXPR_EVAL *apfnExprEval ;const XMIT_ROUTINE_QUINTUPLE *aXmitQuintuple ;const unsigned char *pFormatTypes ;int fCheckBounds ;unsigned long Version ;MALLOC_FREE_STRUCT *pMallocFreeStruct ;long MIDLVersion ;const COMM_FAULT_OFFSETS *CommFaultOffsets ;const USER_MARSHAL_ROUTINE_QUADRUPLE *aUserMarshalQuadruple ;const NDR_NOTIFY_ROUTINE *NotifyRoutineTable ;ULONG_PTR mFlags ;const NDR_CS_ROUTINES *CsRoutineTables ;void *Reserved4 ;ULONG_PTR Reserved5 ;}MIDL_STUB_DESC ;
typedef const MIDL_STUB_DESC *PMIDL_STUB_DESC ;
typedef void *PMIDL_XMIT_TYPE ;
typedef struct _MIDL_FORMAT_STRING {short Pad ;unsigned char Format [];}MIDL_FORMAT_STRING ;
typedef void (*STUB_THUNK )(PMIDL_STUB_MESSAGE );
typedef long (*SERVER_ROUTINE )();
typedef struct _MIDL_SERVER_INFO_ {PMIDL_STUB_DESC pStubDesc ;const SERVER_ROUTINE *DispatchTable ;PFORMAT_STRING ProcString ;const unsigned short *FmtStringOffset ;const STUB_THUNK *ThunkTable ;PRPC_SYNTAX_IDENTIFIER pTransferSyntax ;ULONG_PTR nCount ;PMIDL_SYNTAX_INFO pSyntaxInfo ;}MIDL_SERVER_INFO ;
typedef struct _MIDL_SERVER_INFO_ {PMIDL_STUB_DESC pStubDesc ;const SERVER_ROUTINE *DispatchTable ;PFORMAT_STRING ProcString ;const unsigned short *FmtStringOffset ;const STUB_THUNK *ThunkTable ;PRPC_SYNTAX_IDENTIFIER pTransferSyntax ;ULONG_PTR nCount ;PMIDL_SYNTAX_INFO pSyntaxInfo ;}*PMIDL_SERVER_INFO ;

typedef struct _MIDL_STUBLESS_PROXY_INFO {PMIDL_STUB_DESC pStubDesc ;PFORMAT_STRING ProcFormatString ;const unsigned short *FormatStringOffset ;PRPC_SYNTAX_IDENTIFIER pTransferSyntax ;ULONG_PTR nCount ;PMIDL_SYNTAX_INFO pSyntaxInfo ;}MIDL_STUBLESS_PROXY_INFO ;
typedef MIDL_STUBLESS_PROXY_INFO *PMIDL_STUBLESS_PROXY_INFO ;
struct _MIDL_SYNTAX_INFO {RPC_SYNTAX_IDENTIFIER TransferSyntax ;RPC_DISPATCH_TABLE *DispatchTable ;PFORMAT_STRING ProcString ;const unsigned short *FmtStringOffset ;PFORMAT_STRING TypeString ;const void *aUserMarshalQuadruple ;ULONG_PTR pReserved1 ;ULONG_PTR pReserved2 ;};
typedef unsigned short *PARAM_OFFSETTABLE ;
typedef unsigned short *PPARAM_OFFSETTABLE ;

typedef union _CLIENT_CALL_RETURN {void *Pointer ;LONG_PTR Simple ;}CLIENT_CALL_RETURN ;
typedef enum {XLAT_SERVER =1 ,XLAT_CLIENT }XLAT_SIDE ;
typedef struct _FULL_PTR_TO_REFID_ELEMENT {struct _FULL_PTR_TO_REFID_ELEMENT *Next ;void *Pointer ;unsigned long RefId ;unsigned char State ;}FULL_PTR_TO_REFID_ELEMENT ;
typedef struct _FULL_PTR_TO_REFID_ELEMENT {struct _FULL_PTR_TO_REFID_ELEMENT *Next ;void *Pointer ;unsigned long RefId ;unsigned char State ;}*PFULL_PTR_TO_REFID_ELEMENT ;

typedef struct _FULL_PTR_XLAT_TABLES {struct {void **XlatTable ;unsigned char *StateTable ;unsigned long NumberOfEntries ;}RefIdToPointer ;struct {PFULL_PTR_TO_REFID_ELEMENT *XlatTable ;unsigned long NumberOfBuckets ;unsigned long HashMask ;}PointerToRefId ;unsigned long NextRefId ;XLAT_SIDE XlatSide ;}FULL_PTR_XLAT_TABLES ;
typedef struct _FULL_PTR_XLAT_TABLES {struct {void **XlatTable ;unsigned char *StateTable ;unsigned long NumberOfEntries ;}RefIdToPointer ;struct {PFULL_PTR_TO_REFID_ELEMENT *XlatTable ;unsigned long NumberOfBuckets ;unsigned long HashMask ;}PointerToRefId ;unsigned long NextRefId ;XLAT_SIDE XlatSide ;}*PFULL_PTR_XLAT_TABLES ;

RPC_STATUS NdrClientGetSupportedSyntaxes (RPC_CLIENT_INTERFACE *pInf ,unsigned long *pCount ,MIDL_SYNTAX_INFO **pArr );
RPC_STATUS NdrServerGetSupportedSyntaxes (RPC_SERVER_INTERFACE *pInf ,unsigned long *pCount ,MIDL_SYNTAX_INFO **pArr ,unsigned long *pPreferSyntaxIndex );
void NdrSimpleTypeMarshall (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pMemory ,unsigned char FormatChar );
unsigned char *NdrPointerMarshall (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pMemory ,PFORMAT_STRING pFormat );
unsigned char *NdrCsArrayMarshall (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pMemory ,PFORMAT_STRING pFormat );
unsigned char *NdrCsTagMarshall (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pMemory ,PFORMAT_STRING pFormat );
unsigned char *NdrSimpleStructMarshall (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pMemory ,PFORMAT_STRING pFormat );
unsigned char *NdrConformantStructMarshall (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pMemory ,PFORMAT_STRING pFormat );
unsigned char *NdrConformantVaryingStructMarshall (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pMemory ,PFORMAT_STRING pFormat );
unsigned char *NdrComplexStructMarshall (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pMemory ,PFORMAT_STRING pFormat );
unsigned char *NdrFixedArrayMarshall (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pMemory ,PFORMAT_STRING pFormat );
unsigned char *NdrConformantArrayMarshall (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pMemory ,PFORMAT_STRING pFormat );
unsigned char *NdrConformantVaryingArrayMarshall (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pMemory ,PFORMAT_STRING pFormat );
unsigned char *NdrVaryingArrayMarshall (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pMemory ,PFORMAT_STRING pFormat );
unsigned char *NdrComplexArrayMarshall (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pMemory ,PFORMAT_STRING pFormat );
unsigned char *NdrNonConformantStringMarshall (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pMemory ,PFORMAT_STRING pFormat );
unsigned char *NdrConformantStringMarshall (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pMemory ,PFORMAT_STRING pFormat );
unsigned char *NdrEncapsulatedUnionMarshall (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pMemory ,PFORMAT_STRING pFormat );
unsigned char *NdrNonEncapsulatedUnionMarshall (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pMemory ,PFORMAT_STRING pFormat );
unsigned char *NdrByteCountPointerMarshall (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pMemory ,PFORMAT_STRING pFormat );
unsigned char *NdrXmitOrRepAsMarshall (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pMemory ,PFORMAT_STRING pFormat );
unsigned char *NdrUserMarshalMarshall (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pMemory ,PFORMAT_STRING pFormat );
unsigned char *NdrInterfacePointerMarshall (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pMemory ,PFORMAT_STRING pFormat );
void NdrClientContextMarshall (PMIDL_STUB_MESSAGE pStubMsg ,NDR_CCONTEXT ContextHandle ,int fCheck );
void NdrServerContextMarshall (PMIDL_STUB_MESSAGE pStubMsg ,NDR_SCONTEXT ContextHandle ,NDR_RUNDOWN RundownRoutine );
void NdrServerContextNewMarshall (PMIDL_STUB_MESSAGE pStubMsg ,NDR_SCONTEXT ContextHandle ,NDR_RUNDOWN RundownRoutine ,PFORMAT_STRING pFormat );
void NdrSimpleTypeUnmarshall (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pMemory ,unsigned char FormatChar );
unsigned char *NdrCsArrayUnmarshall (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char **ppMemory ,PFORMAT_STRING pFormat ,unsigned char fMustAlloc );
unsigned char *NdrCsTagUnmarshall (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char **ppMemory ,PFORMAT_STRING pFormat ,unsigned char fMustAlloc );
unsigned char *NdrRangeUnmarshall (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char **ppMemory ,PFORMAT_STRING pFormat ,unsigned char fMustAlloc );
void NdrCorrelationInitialize (PMIDL_STUB_MESSAGE pStubMsg ,void *pMemory ,unsigned long CacheSize ,unsigned long flags );
void NdrCorrelationPass (PMIDL_STUB_MESSAGE pStubMsg );
void NdrCorrelationFree (PMIDL_STUB_MESSAGE pStubMsg );
unsigned char *NdrPointerUnmarshall (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char **ppMemory ,PFORMAT_STRING pFormat ,unsigned char fMustAlloc );
unsigned char *NdrSimpleStructUnmarshall (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char **ppMemory ,PFORMAT_STRING pFormat ,unsigned char fMustAlloc );
unsigned char *NdrConformantStructUnmarshall (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char **ppMemory ,PFORMAT_STRING pFormat ,unsigned char fMustAlloc );
unsigned char *NdrConformantVaryingStructUnmarshall (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char **ppMemory ,PFORMAT_STRING pFormat ,unsigned char fMustAlloc );
unsigned char *NdrComplexStructUnmarshall (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char **ppMemory ,PFORMAT_STRING pFormat ,unsigned char fMustAlloc );
unsigned char *NdrFixedArrayUnmarshall (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char **ppMemory ,PFORMAT_STRING pFormat ,unsigned char fMustAlloc );
unsigned char *NdrConformantArrayUnmarshall (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char **ppMemory ,PFORMAT_STRING pFormat ,unsigned char fMustAlloc );
unsigned char *NdrConformantVaryingArrayUnmarshall (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char **ppMemory ,PFORMAT_STRING pFormat ,unsigned char fMustAlloc );
unsigned char *NdrVaryingArrayUnmarshall (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char **ppMemory ,PFORMAT_STRING pFormat ,unsigned char fMustAlloc );
unsigned char *NdrComplexArrayUnmarshall (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char **ppMemory ,PFORMAT_STRING pFormat ,unsigned char fMustAlloc );
unsigned char *NdrNonConformantStringUnmarshall (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char **ppMemory ,PFORMAT_STRING pFormat ,unsigned char fMustAlloc );
unsigned char *NdrConformantStringUnmarshall (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char **ppMemory ,PFORMAT_STRING pFormat ,unsigned char fMustAlloc );
unsigned char *NdrEncapsulatedUnionUnmarshall (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char **ppMemory ,PFORMAT_STRING pFormat ,unsigned char fMustAlloc );
unsigned char *NdrNonEncapsulatedUnionUnmarshall (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char **ppMemory ,PFORMAT_STRING pFormat ,unsigned char fMustAlloc );
unsigned char *NdrByteCountPointerUnmarshall (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char **ppMemory ,PFORMAT_STRING pFormat ,unsigned char fMustAlloc );
unsigned char *NdrXmitOrRepAsUnmarshall (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char **ppMemory ,PFORMAT_STRING pFormat ,unsigned char fMustAlloc );
unsigned char *NdrUserMarshalUnmarshall (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char **ppMemory ,PFORMAT_STRING pFormat ,unsigned char fMustAlloc );
unsigned char *NdrInterfacePointerUnmarshall (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char **ppMemory ,PFORMAT_STRING pFormat ,unsigned char fMustAlloc );
void NdrClientContextUnmarshall (PMIDL_STUB_MESSAGE pStubMsg ,NDR_CCONTEXT *pContextHandle ,RPC_BINDING_HANDLE BindHandle );
NDR_SCONTEXT NdrServerContextUnmarshall (PMIDL_STUB_MESSAGE pStubMsg );
NDR_SCONTEXT NdrContextHandleInitialize (PMIDL_STUB_MESSAGE pStubMsg ,PFORMAT_STRING pFormat );
NDR_SCONTEXT NdrServerContextNewUnmarshall (PMIDL_STUB_MESSAGE pStubMsg ,PFORMAT_STRING pFormat );
void NdrPointerBufferSize (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pMemory ,PFORMAT_STRING pFormat );
void NdrCsArrayBufferSize (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pMemory ,PFORMAT_STRING pFormat );
void NdrCsTagBufferSize (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pMemory ,PFORMAT_STRING pFormat );
void NdrSimpleStructBufferSize (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pMemory ,PFORMAT_STRING pFormat );
void NdrConformantStructBufferSize (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pMemory ,PFORMAT_STRING pFormat );
void NdrConformantVaryingStructBufferSize (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pMemory ,PFORMAT_STRING pFormat );
void NdrComplexStructBufferSize (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pMemory ,PFORMAT_STRING pFormat );
void NdrFixedArrayBufferSize (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pMemory ,PFORMAT_STRING pFormat );
void NdrConformantArrayBufferSize (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pMemory ,PFORMAT_STRING pFormat );
void NdrConformantVaryingArrayBufferSize (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pMemory ,PFORMAT_STRING pFormat );
void NdrVaryingArrayBufferSize (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pMemory ,PFORMAT_STRING pFormat );
void NdrComplexArrayBufferSize (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pMemory ,PFORMAT_STRING pFormat );
void NdrConformantStringBufferSize (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pMemory ,PFORMAT_STRING pFormat );
void NdrNonConformantStringBufferSize (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pMemory ,PFORMAT_STRING pFormat );
void NdrEncapsulatedUnionBufferSize (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pMemory ,PFORMAT_STRING pFormat );
void NdrNonEncapsulatedUnionBufferSize (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pMemory ,PFORMAT_STRING pFormat );
void NdrByteCountPointerBufferSize (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pMemory ,PFORMAT_STRING pFormat );
void NdrXmitOrRepAsBufferSize (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pMemory ,PFORMAT_STRING pFormat );
void NdrUserMarshalBufferSize (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pMemory ,PFORMAT_STRING pFormat );
void NdrInterfacePointerBufferSize (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pMemory ,PFORMAT_STRING pFormat );
void NdrContextHandleSize (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pMemory ,PFORMAT_STRING pFormat );
unsigned long NdrPointerMemorySize (PMIDL_STUB_MESSAGE pStubMsg ,PFORMAT_STRING pFormat );
unsigned long NdrCsArrayMemorySize (PMIDL_STUB_MESSAGE pStubMsg ,PFORMAT_STRING pFormat );
unsigned long NdrCsTagMemorySize (PMIDL_STUB_MESSAGE pStubMsg ,PFORMAT_STRING pFormat );
unsigned long NdrSimpleStructMemorySize (PMIDL_STUB_MESSAGE pStubMsg ,PFORMAT_STRING pFormat );
unsigned long NdrConformantStructMemorySize (PMIDL_STUB_MESSAGE pStubMsg ,PFORMAT_STRING pFormat );
unsigned long NdrConformantVaryingStructMemorySize (PMIDL_STUB_MESSAGE pStubMsg ,PFORMAT_STRING pFormat );
unsigned long NdrComplexStructMemorySize (PMIDL_STUB_MESSAGE pStubMsg ,PFORMAT_STRING pFormat );
unsigned long NdrFixedArrayMemorySize (PMIDL_STUB_MESSAGE pStubMsg ,PFORMAT_STRING pFormat );
unsigned long NdrConformantArrayMemorySize (PMIDL_STUB_MESSAGE pStubMsg ,PFORMAT_STRING pFormat );
unsigned long NdrConformantVaryingArrayMemorySize (PMIDL_STUB_MESSAGE pStubMsg ,PFORMAT_STRING pFormat );
unsigned long NdrVaryingArrayMemorySize (PMIDL_STUB_MESSAGE pStubMsg ,PFORMAT_STRING pFormat );
unsigned long NdrComplexArrayMemorySize (PMIDL_STUB_MESSAGE pStubMsg ,PFORMAT_STRING pFormat );
unsigned long NdrConformantStringMemorySize (PMIDL_STUB_MESSAGE pStubMsg ,PFORMAT_STRING pFormat );
unsigned long NdrNonConformantStringMemorySize (PMIDL_STUB_MESSAGE pStubMsg ,PFORMAT_STRING pFormat );
unsigned long NdrEncapsulatedUnionMemorySize (PMIDL_STUB_MESSAGE pStubMsg ,PFORMAT_STRING pFormat );
unsigned long NdrNonEncapsulatedUnionMemorySize (PMIDL_STUB_MESSAGE pStubMsg ,PFORMAT_STRING pFormat );
unsigned long NdrXmitOrRepAsMemorySize (PMIDL_STUB_MESSAGE pStubMsg ,PFORMAT_STRING pFormat );
unsigned long NdrUserMarshalMemorySize (PMIDL_STUB_MESSAGE pStubMsg ,PFORMAT_STRING pFormat );
unsigned long NdrInterfacePointerMemorySize (PMIDL_STUB_MESSAGE pStubMsg ,PFORMAT_STRING pFormat );
void NdrPointerFree (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pMemory ,PFORMAT_STRING pFormat );
void NdrCsArrayFree (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pMemory ,PFORMAT_STRING pFormat );
void NdrSimpleStructFree (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pMemory ,PFORMAT_STRING pFormat );
void NdrConformantStructFree (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pMemory ,PFORMAT_STRING pFormat );
void NdrConformantVaryingStructFree (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pMemory ,PFORMAT_STRING pFormat );
void NdrComplexStructFree (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pMemory ,PFORMAT_STRING pFormat );
void NdrFixedArrayFree (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pMemory ,PFORMAT_STRING pFormat );
void NdrConformantArrayFree (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pMemory ,PFORMAT_STRING pFormat );
void NdrConformantVaryingArrayFree (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pMemory ,PFORMAT_STRING pFormat );
void NdrVaryingArrayFree (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pMemory ,PFORMAT_STRING pFormat );
void NdrComplexArrayFree (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pMemory ,PFORMAT_STRING pFormat );
void NdrEncapsulatedUnionFree (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pMemory ,PFORMAT_STRING pFormat );
void NdrNonEncapsulatedUnionFree (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pMemory ,PFORMAT_STRING pFormat );
void NdrByteCountPointerFree (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pMemory ,PFORMAT_STRING pFormat );
void NdrXmitOrRepAsFree (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pMemory ,PFORMAT_STRING pFormat );
void NdrUserMarshalFree (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pMemory ,PFORMAT_STRING pFormat );
void NdrInterfacePointerFree (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pMemory ,PFORMAT_STRING pFormat );
void NdrConvert2 (PMIDL_STUB_MESSAGE pStubMsg ,PFORMAT_STRING pFormat ,long NumberParams );
void NdrConvert (PMIDL_STUB_MESSAGE pStubMsg ,PFORMAT_STRING pFormat );
unsigned char *NdrUserMarshalSimpleTypeConvert (unsigned long *pFlags ,unsigned char *pBuffer ,unsigned char FormatChar );
void NdrClientInitializeNew (PRPC_MESSAGE pRpcMsg ,PMIDL_STUB_MESSAGE pStubMsg ,PMIDL_STUB_DESC pStubDescriptor ,unsigned int ProcNum );
unsigned char *NdrServerInitializeNew (PRPC_MESSAGE pRpcMsg ,PMIDL_STUB_MESSAGE pStubMsg ,PMIDL_STUB_DESC pStubDescriptor );
void NdrServerInitializePartial (PRPC_MESSAGE pRpcMsg ,PMIDL_STUB_MESSAGE pStubMsg ,PMIDL_STUB_DESC pStubDescriptor ,unsigned long RequestedBufferSize );
void NdrClientInitialize (PRPC_MESSAGE pRpcMsg ,PMIDL_STUB_MESSAGE pStubMsg ,PMIDL_STUB_DESC pStubDescriptor ,unsigned int ProcNum );
unsigned char *NdrServerInitialize (PRPC_MESSAGE pRpcMsg ,PMIDL_STUB_MESSAGE pStubMsg ,PMIDL_STUB_DESC pStubDescriptor );
unsigned char *NdrServerInitializeUnmarshall (PMIDL_STUB_MESSAGE pStubMsg ,PMIDL_STUB_DESC pStubDescriptor ,PRPC_MESSAGE pRpcMsg );
void NdrServerInitializeMarshall (PRPC_MESSAGE pRpcMsg ,PMIDL_STUB_MESSAGE pStubMsg );
unsigned char *NdrGetBuffer (PMIDL_STUB_MESSAGE pStubMsg ,unsigned long BufferLength ,RPC_BINDING_HANDLE Handle );
unsigned char *NdrNsGetBuffer (PMIDL_STUB_MESSAGE pStubMsg ,unsigned long BufferLength ,RPC_BINDING_HANDLE Handle );
unsigned char *NdrSendReceive (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pBufferEnd );
unsigned char *NdrNsSendReceive (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char *pBufferEnd ,RPC_BINDING_HANDLE *pAutoHandle );
void NdrFreeBuffer (PMIDL_STUB_MESSAGE pStubMsg );
RPC_STATUS NdrGetDcomProtocolVersion (PMIDL_STUB_MESSAGE pStubMsg ,RPC_VERSION *pVersion );
CLIENT_CALL_RETURN NdrClientCall2 (PMIDL_STUB_DESC pStubDescriptor ,PFORMAT_STRING pFormat ,...);
CLIENT_CALL_RETURN NdrClientCall (PMIDL_STUB_DESC pStubDescriptor ,PFORMAT_STRING pFormat ,...);
CLIENT_CALL_RETURN NdrAsyncClientCall (PMIDL_STUB_DESC pStubDescriptor ,PFORMAT_STRING pFormat ,...);
CLIENT_CALL_RETURN NdrDcomAsyncClientCall (PMIDL_STUB_DESC pStubDescriptor ,PFORMAT_STRING pFormat ,...);
typedef enum {STUB_UNMARSHAL ,STUB_CALL_SERVER ,STUB_MARSHAL ,STUB_CALL_SERVER_NO_HRESULT }STUB_PHASE ;
typedef enum {PROXY_CALCSIZE ,PROXY_GETBUFFER ,PROXY_MARSHAL ,PROXY_SENDRECEIVE ,PROXY_UNMARSHAL }PROXY_PHASE ;
struct IRpcStubBuffer ;
void NdrAsyncServerCall (PRPC_MESSAGE pRpcMsg );
long NdrAsyncStubCall (struct IRpcStubBuffer *pThis ,struct IRpcChannelBuffer *pChannel ,PRPC_MESSAGE pRpcMsg ,unsigned long *pdwStubPhase );
long NdrDcomAsyncStubCall (struct IRpcStubBuffer *pThis ,struct IRpcChannelBuffer *pChannel ,PRPC_MESSAGE pRpcMsg ,unsigned long *pdwStubPhase );
long NdrStubCall2 (struct IRpcStubBuffer *pThis ,struct IRpcChannelBuffer *pChannel ,PRPC_MESSAGE pRpcMsg ,unsigned long *pdwStubPhase );
void NdrServerCall2 (PRPC_MESSAGE pRpcMsg );
long NdrStubCall (struct IRpcStubBuffer *pThis ,struct IRpcChannelBuffer *pChannel ,PRPC_MESSAGE pRpcMsg ,unsigned long *pdwStubPhase );
void NdrServerCall (PRPC_MESSAGE pRpcMsg );
int NdrServerUnmarshall (struct IRpcChannelBuffer *pChannel ,PRPC_MESSAGE pRpcMsg ,PMIDL_STUB_MESSAGE pStubMsg ,PMIDL_STUB_DESC pStubDescriptor ,PFORMAT_STRING pFormat ,void *pParamList );
void NdrServerMarshall (struct IRpcStubBuffer *pThis ,struct IRpcChannelBuffer *pChannel ,PMIDL_STUB_MESSAGE pStubMsg ,PFORMAT_STRING pFormat );
RPC_STATUS NdrMapCommAndFaultStatus (PMIDL_STUB_MESSAGE pStubMsg ,unsigned long *pCommStatus ,unsigned long *pFaultStatus ,RPC_STATUS Status );
int NdrSH_UPDecision (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char **pPtrInMem ,RPC_BUFPTR pBuffer );
int NdrSH_TLUPDecision (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char **pPtrInMem );
int NdrSH_TLUPDecisionBuffer (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char **pPtrInMem );
int NdrSH_IfAlloc (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char **pPtrInMem ,unsigned long Count );
int NdrSH_IfAllocRef (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char **pPtrInMem ,unsigned long Count );
int NdrSH_IfAllocSet (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char **pPtrInMem ,unsigned long Count );
RPC_BUFPTR NdrSH_IfCopy (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char **pPtrInMem ,unsigned long Count );
RPC_BUFPTR NdrSH_IfAllocCopy (PMIDL_STUB_MESSAGE pStubMsg ,unsigned char **pPtrInMem ,unsigned long Count );
unsigned long NdrSH_Copy (unsigned char *pStubMsg ,unsigned char *pPtrInMem ,unsigned long Count );
void NdrSH_IfFree (PMIDL_STUB_MESSAGE pMessage ,unsigned char *pPtr );
RPC_BUFPTR NdrSH_StringMarshall (PMIDL_STUB_MESSAGE pMessage ,unsigned char *pMemory ,unsigned long Count ,int Size );
RPC_BUFPTR NdrSH_StringUnMarshall (PMIDL_STUB_MESSAGE pMessage ,unsigned char **pMemory ,int Size );
typedef void *RPC_SS_THREAD_HANDLE ;
typedef void *RPC_CLIENT_ALLOC (size_t Size );
typedef void RPC_CLIENT_FREE (void *Ptr );
void *RpcSsAllocate (size_t Size );
void RpcSsDisableAllocate (void );
void RpcSsEnableAllocate (void );
void RpcSsFree (void *NodeToFree );
RPC_SS_THREAD_HANDLE RpcSsGetThreadHandle (void );
void RpcSsSetClientAllocFree (RPC_CLIENT_ALLOC *ClientAlloc ,RPC_CLIENT_FREE *ClientFree );
void RpcSsSetThreadHandle (RPC_SS_THREAD_HANDLE Id );
void RpcSsSwapClientAllocFree (RPC_CLIENT_ALLOC *ClientAlloc ,RPC_CLIENT_FREE *ClientFree ,RPC_CLIENT_ALLOC **OldClientAlloc ,RPC_CLIENT_FREE **OldClientFree );
void *RpcSmAllocate (size_t Size ,RPC_STATUS *pStatus );
RPC_STATUS RpcSmClientFree (void *pNodeToFree );
RPC_STATUS RpcSmDestroyClientContext (void **ContextHandle );
RPC_STATUS RpcSmDisableAllocate (void );
RPC_STATUS RpcSmEnableAllocate (void );
RPC_STATUS RpcSmFree (void *NodeToFree );
RPC_SS_THREAD_HANDLE RpcSmGetThreadHandle (RPC_STATUS *pStatus );
RPC_STATUS RpcSmSetClientAllocFree (RPC_CLIENT_ALLOC *ClientAlloc ,RPC_CLIENT_FREE *ClientFree );
RPC_STATUS RpcSmSetThreadHandle (RPC_SS_THREAD_HANDLE Id );
RPC_STATUS RpcSmSwapClientAllocFree (RPC_CLIENT_ALLOC *ClientAlloc ,RPC_CLIENT_FREE *ClientFree ,RPC_CLIENT_ALLOC **OldClientAlloc ,RPC_CLIENT_FREE **OldClientFree );
void NdrRpcSsEnableAllocate (PMIDL_STUB_MESSAGE pMessage );
void NdrRpcSsDisableAllocate (PMIDL_STUB_MESSAGE pMessage );
void NdrRpcSmSetClientToOsf (PMIDL_STUB_MESSAGE pMessage );
void *NdrRpcSmClientAllocate (size_t Size );
void NdrRpcSmClientFree (void *NodeToFree );
void *NdrRpcSsDefaultAllocate (size_t Size );
void NdrRpcSsDefaultFree (void *NodeToFree );
PFULL_PTR_XLAT_TABLES NdrFullPointerXlatInit (unsigned long NumberOfPointers ,XLAT_SIDE XlatSide );
void NdrFullPointerXlatFree (PFULL_PTR_XLAT_TABLES pXlatTables );
int NdrFullPointerQueryPointer (PFULL_PTR_XLAT_TABLES pXlatTables ,void *pPointer ,unsigned char QueryType ,unsigned long *pRefId );
int NdrFullPointerQueryRefId (PFULL_PTR_XLAT_TABLES pXlatTables ,unsigned long RefId ,unsigned char QueryType ,void **ppPointer );
void NdrFullPointerInsertRefId (PFULL_PTR_XLAT_TABLES pXlatTables ,unsigned long RefId ,void *pPointer );
int NdrFullPointerFree (PFULL_PTR_XLAT_TABLES pXlatTables ,void *Pointer );
void *NdrAllocate (PMIDL_STUB_MESSAGE pStubMsg ,size_t Len );
void NdrClearOutParameters (PMIDL_STUB_MESSAGE pStubMsg ,PFORMAT_STRING pFormat ,void *ArgAddr );
void *NdrOleAllocate (size_t Size );
void NdrOleFree (void *NodeToFree );
typedef struct _NDR_USER_MARSHAL_INFO_LEVEL1 {void *Buffer ;unsigned long BufferSize ;void *(*pfnAllocate )(size_t );void (*pfnFree )(void *);struct IRpcChannelBuffer *pRpcChannelBuffer ;ULONG_PTR Reserved [5 ];}NDR_USER_MARSHAL_INFO_LEVEL1 ;
typedef struct _NDR_USER_MARSHAL_INFO {unsigned long InformationLevel ;union {NDR_USER_MARSHAL_INFO_LEVEL1 Level1 ;};}NDR_USER_MARSHAL_INFO ;
RPC_STATUS NdrGetUserMarshalInfo (unsigned long *pFlags ,unsigned long InformationLevel ,NDR_USER_MARSHAL_INFO *pMarshalInfo );
RPC_STATUS NdrCreateServerInterfaceFromStub (struct IRpcStubBuffer *pStub ,RPC_SERVER_INTERFACE *pServerIf );
CLIENT_CALL_RETURN NdrClientCall3 (MIDL_STUBLESS_PROXY_INFO *pProxyInfo ,unsigned long nProcNum ,void *pReturnValue ,...);
CLIENT_CALL_RETURN Ndr64AsyncClientCall (MIDL_STUBLESS_PROXY_INFO *pProxyInfo ,unsigned long nProcNum ,void *pReturnValue ,...);
CLIENT_CALL_RETURN Ndr64DcomAsyncClientCall (MIDL_STUBLESS_PROXY_INFO *pProxyInfo ,unsigned long nProcNum ,void *pReturnValue ,...);
struct IRpcStubBuffer ;
void Ndr64AsyncServerCall (PRPC_MESSAGE pRpcMsg );
void Ndr64AsyncServerCall64 (PRPC_MESSAGE pRpcMsg );
void Ndr64AsyncServerCallAll (PRPC_MESSAGE pRpcMsg );
long Ndr64AsyncStubCall (struct IRpcStubBuffer *pThis ,struct IRpcChannelBuffer *pChannel ,PRPC_MESSAGE pRpcMsg ,unsigned long *pdwStubPhase );
long Ndr64DcomAsyncStubCall (struct IRpcStubBuffer *pThis ,struct IRpcChannelBuffer *pChannel ,PRPC_MESSAGE pRpcMsg ,unsigned long *pdwStubPhase );
long NdrStubCall3 (struct IRpcStubBuffer *pThis ,struct IRpcChannelBuffer *pChannel ,PRPC_MESSAGE pRpcMsg ,unsigned long *pdwStubPhase );
void NdrServerCallAll (PRPC_MESSAGE pRpcMsg );
void NdrServerCallNdr64 (PRPC_MESSAGE pRpcMsg );
void NdrServerCall3 (PRPC_MESSAGE pRpcMsg );
void NdrPartialIgnoreClientMarshall (PMIDL_STUB_MESSAGE pStubMsg ,void *pMemory );
void NdrPartialIgnoreServerUnmarshall (PMIDL_STUB_MESSAGE pStubMsg ,void **ppMemory );
void NdrPartialIgnoreClientBufferSize (PMIDL_STUB_MESSAGE pStubMsg ,void *pMemory );
void NdrPartialIgnoreServerInitialize (PMIDL_STUB_MESSAGE pStubMsg ,void **ppMemory ,PFORMAT_STRING pFormat );
void RpcUserFree (handle_t AsyncHandle ,void *pBuffer );
// m:\mingw\x86_64-w64-mingw32\include\wtypesbase.h

extern RPC_IF_HANDLE IWinTypesBase_v0_1_c_ifspec ;
extern RPC_IF_HANDLE IWinTypesBase_v0_1_s_ifspec ;
typedef WCHAR OLECHAR ;
typedef OLECHAR *LPOLESTR ;
typedef const OLECHAR *LPCOLESTR ;
typedef unsigned char UCHAR ;
typedef short SHORT ;
typedef unsigned short USHORT ;
typedef DWORD ULONG ;
typedef double DOUBLE ;
typedef struct _COAUTHIDENTITY {USHORT *User ;ULONG UserLength ;USHORT *Domain ;ULONG DomainLength ;USHORT *Password ;ULONG PasswordLength ;ULONG Flags ;}COAUTHIDENTITY ;
typedef struct _COAUTHINFO {DWORD dwAuthnSvc ;DWORD dwAuthzSvc ;LPWSTR pwszServerPrincName ;DWORD dwAuthnLevel ;DWORD dwImpersonationLevel ;COAUTHIDENTITY *pAuthIdentityData ;DWORD dwCapabilities ;}COAUTHINFO ;
typedef LONG SCODE ;
typedef SCODE *PSCODE ;
typedef enum tagMEMCTX {MEMCTX_TASK =1 ,MEMCTX_SHARED =2 ,MEMCTX_MACSYSTEM =3 ,MEMCTX_UNKNOWN =-1 ,MEMCTX_SAME =-2 }MEMCTX ;
typedef enum tagCLSCTX {CLSCTX_INPROC_SERVER =1 ,CLSCTX_INPROC_HANDLER =2 ,CLSCTX_LOCAL_SERVER =4 ,CLSCTX_INPROC_SERVER16 =8 ,CLSCTX_REMOTE_SERVER =16 ,CLSCTX_INPROC_HANDLER16 =32 ,CLSCTX_RESERVED1 =64 ,CLSCTX_RESERVED2 =128 ,CLSCTX_RESERVED3 =256 ,CLSCTX_RESERVED4 =512 ,CLSCTX_NO_CODE_DOWNLOAD =1024 ,CLSCTX_RESERVED5 =2048 ,CLSCTX_NO_CUSTOM_MARSHAL =4096 ,CLSCTX_ENABLE_CODE_DOWNLOAD =8192 ,CLSCTX_NO_FAILURE_LOG =16384 ,CLSCTX_DISABLE_AAA =32768 ,CLSCTX_ENABLE_AAA =65536 ,CLSCTX_FROM_DEFAULT_CONTEXT =131072 ,CLSCTX_ACTIVATE_32_BIT_SERVER =262144 ,CLSCTX_ACTIVATE_64_BIT_SERVER =524288 ,CLSCTX_ENABLE_CLOAKING =1048576 ,CLSCTX_APPCONTAINER =4194304 ,CLSCTX_ACTIVATE_AAA_AS_IU =8388608 ,CLSCTX_PS_DLL =-2147483648 }CLSCTX ;
typedef enum tagMSHLFLAGS {MSHLFLAGS_NORMAL =0 ,MSHLFLAGS_TABLESTRONG =1 ,MSHLFLAGS_TABLEWEAK =2 ,MSHLFLAGS_NOPING =4 ,MSHLFLAGS_RESERVED1 =8 ,MSHLFLAGS_RESERVED2 =16 ,MSHLFLAGS_RESERVED3 =32 ,MSHLFLAGS_RESERVED4 =64 }MSHLFLAGS ;
typedef enum tagMSHCTX {MSHCTX_LOCAL =0 ,MSHCTX_NOSHAREDMEM =1 ,MSHCTX_DIFFERENTMACHINE =2 ,MSHCTX_INPROC =3 ,MSHCTX_CROSSCTX =4 }MSHCTX ;
typedef struct _BYTE_BLOB {ULONG clSize ;byte abData [1 ];}BYTE_BLOB ;
typedef BYTE_BLOB *UP_BYTE_BLOB ;
typedef struct _WORD_BLOB {ULONG clSize ;unsigned short asData [1 ];}WORD_BLOB ;
typedef WORD_BLOB *UP_WORD_BLOB ;
typedef struct _DWORD_BLOB {ULONG clSize ;ULONG alData [1 ];}DWORD_BLOB ;
typedef DWORD_BLOB *UP_DWORD_BLOB ;
typedef struct _FLAGGED_BYTE_BLOB {ULONG fFlags ;ULONG clSize ;byte abData [1 ];}FLAGGED_BYTE_BLOB ;
typedef FLAGGED_BYTE_BLOB *UP_FLAGGED_BYTE_BLOB ;
typedef struct _FLAGGED_WORD_BLOB {ULONG fFlags ;ULONG clSize ;unsigned short asData [1 ];}FLAGGED_WORD_BLOB ;
typedef FLAGGED_WORD_BLOB *UP_FLAGGED_WORD_BLOB ;
typedef struct _BYTE_SIZEDARR {ULONG clSize ;byte *pData ;}BYTE_SIZEDARR ;
typedef struct _SHORT_SIZEDARR {ULONG clSize ;unsigned short *pData ;}WORD_SIZEDARR ;
typedef struct _LONG_SIZEDARR {ULONG clSize ;ULONG *pData ;}DWORD_SIZEDARR ;
typedef struct _HYPER_SIZEDARR {ULONG clSize ;long long *pData ;}HYPER_SIZEDARR ;
typedef boolean BOOLEAN ;
typedef struct tagBLOB {ULONG cbSize ;BYTE *pBlobData ;}BLOB ;
typedef struct tagBLOB *LPBLOB ;
// m:\mingw\x86_64-w64-mingw32\include\wtypes.h

extern RPC_IF_HANDLE IWinTypes_v0_1_c_ifspec ;
extern RPC_IF_HANDLE IWinTypes_v0_1_s_ifspec ;
typedef struct tagRemHGLOBAL {LONG fNullHGlobal ;ULONG cbData ;byte data [1 ];}RemHGLOBAL ;
typedef struct tagRemHMETAFILEPICT {LONG mm ;LONG xExt ;LONG yExt ;ULONG cbData ;byte data [1 ];}RemHMETAFILEPICT ;
typedef struct tagRemHENHMETAFILE {ULONG cbData ;byte data [1 ];}RemHENHMETAFILE ;
typedef struct tagRemHBITMAP {ULONG cbData ;byte data [1 ];}RemHBITMAP ;
typedef struct tagRemHPALETTE {ULONG cbData ;byte data [1 ];}RemHPALETTE ;
typedef struct tagRemBRUSH {ULONG cbData ;byte data [1 ];}RemHBRUSH ;
typedef enum tagDVASPECT {DVASPECT_CONTENT =1 ,DVASPECT_THUMBNAIL =2 ,DVASPECT_ICON =4 ,DVASPECT_DOCPRINT =8 }DVASPECT ;
typedef enum tagSTGC {STGC_DEFAULT =0 ,STGC_OVERWRITE =1 ,STGC_ONLYIFCURRENT =2 ,STGC_DANGEROUSLYCOMMITMERELYTODISKCACHE =4 ,STGC_CONSOLIDATE =8 }STGC ;
typedef enum tagSTGMOVE {STGMOVE_MOVE =0 ,STGMOVE_COPY =1 ,STGMOVE_SHALLOWCOPY =2 }STGMOVE ;
typedef enum tagSTATFLAG {STATFLAG_DEFAULT =0 ,STATFLAG_NONAME =1 ,STATFLAG_NOOPEN =2 }STATFLAG ;
typedef void *HCONTEXT ;
typedef struct _userCLIPFORMAT {LONG fContext ;union {DWORD dwValue ;wchar_t *pwszName ;}u ;}userCLIPFORMAT ;
typedef userCLIPFORMAT *wireCLIPFORMAT ;
typedef WORD CLIPFORMAT ;
typedef struct _GDI_NONREMOTE {LONG fContext ;union {LONG hInproc ;DWORD_BLOB *hRemote ;}u ;}GDI_NONREMOTE ;
typedef struct _userHGLOBAL {LONG fContext ;union {LONG hInproc ;FLAGGED_BYTE_BLOB *hRemote ;INT64 hInproc64 ;}u ;}userHGLOBAL ;
typedef userHGLOBAL *wireHGLOBAL ;
typedef struct _userHMETAFILE {LONG fContext ;union {LONG hInproc ;BYTE_BLOB *hRemote ;INT64 hInproc64 ;}u ;}userHMETAFILE ;
typedef struct _remoteMETAFILEPICT {LONG mm ;LONG xExt ;LONG yExt ;userHMETAFILE *hMF ;}remoteMETAFILEPICT ;
typedef struct _userHMETAFILEPICT {LONG fContext ;union {LONG hInproc ;remoteMETAFILEPICT *hRemote ;INT64 hInproc64 ;}u ;}userHMETAFILEPICT ;
typedef struct _userHENHMETAFILE {LONG fContext ;union {LONG hInproc ;BYTE_BLOB *hRemote ;INT64 hInproc64 ;}u ;}userHENHMETAFILE ;
typedef struct _userBITMAP {LONG bmType ;LONG bmWidth ;LONG bmHeight ;LONG bmWidthBytes ;WORD bmPlanes ;WORD bmBitsPixel ;ULONG cbSize ;byte pBuffer [1 ];}userBITMAP ;
typedef struct _userHBITMAP {LONG fContext ;union {LONG hInproc ;userBITMAP *hRemote ;INT64 hInproc64 ;}u ;}userHBITMAP ;
typedef struct _userHPALETTE {LONG fContext ;union {LONG hInproc ;LOGPALETTE *hRemote ;INT64 hInproc64 ;}u ;}userHPALETTE ;
typedef struct _RemotableHandle {LONG fContext ;union {LONG hInproc ;LONG hRemote ;}u ;}RemotableHandle ;
typedef RemotableHandle *wireHWND ;
typedef RemotableHandle *wireHMENU ;
typedef RemotableHandle *wireHACCEL ;
typedef RemotableHandle *wireHBRUSH ;
typedef RemotableHandle *wireHFONT ;
typedef RemotableHandle *wireHDC ;
typedef RemotableHandle *wireHICON ;
typedef RemotableHandle *wireHRGN ;
typedef RemotableHandle *wireHMONITOR ;
typedef userHBITMAP *wireHBITMAP ;
typedef userHPALETTE *wireHPALETTE ;
typedef userHENHMETAFILE *wireHENHMETAFILE ;
typedef userHMETAFILE *wireHMETAFILE ;
typedef userHMETAFILEPICT *wireHMETAFILEPICT ;
typedef void *HMETAFILEPICT ;
typedef double DATE ;
typedef union tagCY {struct {unsigned long Lo ;long Hi ;};LONGLONG int64 ;}CY ;
typedef CY *LPCY ;
typedef struct tagDEC {USHORT wReserved ;union {struct {BYTE scale ;BYTE sign ;};USHORT signscale ;};ULONG Hi32 ;union {struct {ULONG Lo32 ;ULONG Mid32 ;};ULONGLONG Lo64 ;};}DECIMAL ;
typedef DECIMAL *LPDECIMAL ;
typedef FLAGGED_WORD_BLOB *wireBSTR ;
typedef OLECHAR *BSTR ;
typedef BSTR *LPBSTR ;
typedef short VARIANT_BOOL ;
typedef struct tagBSTRBLOB {ULONG cbSize ;BYTE *pData ;}BSTRBLOB ;
typedef struct tagBSTRBLOB *LPBSTRBLOB ;
typedef struct tagCLIPDATA {ULONG cbSize ;LONG ulClipFmt ;BYTE *pClipData ;}CLIPDATA ;
typedef unsigned short VARTYPE ;
enum VARENUM {VT_EMPTY =0 ,VT_NULL =1 ,VT_I2 =2 ,VT_I4 =3 ,VT_R4 =4 ,VT_R8 =5 ,VT_CY =6 ,VT_DATE =7 ,VT_BSTR =8 ,VT_DISPATCH =9 ,VT_ERROR =10 ,VT_BOOL =11 ,VT_VARIANT =12 ,VT_UNKNOWN =13 ,VT_DECIMAL =14 ,VT_I1 =16 ,VT_UI1 =17 ,VT_UI2 =18 ,VT_UI4 =19 ,VT_I8 =20 ,VT_UI8 =21 ,VT_INT =22 ,VT_UINT =23 ,VT_VOID =24 ,VT_HRESULT =25 ,VT_PTR =26 ,VT_SAFEARRAY =27 ,VT_CARRAY =28 ,VT_USERDEFINED =29 ,VT_LPSTR =30 ,VT_LPWSTR =31 ,VT_RECORD =36 ,VT_INT_PTR =37 ,VT_UINT_PTR =38 ,VT_FILETIME =64 ,VT_BLOB =65 ,VT_STREAM =66 ,VT_STORAGE =67 ,VT_STREAMED_OBJECT =68 ,VT_STORED_OBJECT =69 ,VT_BLOB_OBJECT =70 ,VT_CF =71 ,VT_CLSID =72 ,VT_VERSIONED_STREAM =73 ,VT_BSTR_BLOB =4095 ,VT_VECTOR =4096 ,VT_ARRAY =8192 ,VT_BYREF =16384 ,VT_RESERVED =32768 ,VT_ILLEGAL =65535 ,VT_ILLEGALMASKED =4095 ,VT_TYPEMASK =4095 };
typedef ULONG PROPID ;
typedef struct _tagpropertykey {GUID fmtid ;DWORD pid ;}PROPERTYKEY ;
typedef struct tagCSPLATFORM {DWORD dwPlatformId ;DWORD dwVersionHi ;DWORD dwVersionLo ;DWORD dwProcessorArch ;}CSPLATFORM ;
typedef struct tagQUERYCONTEXT {DWORD dwContext ;CSPLATFORM Platform ;LCID Locale ;DWORD dwVersionHi ;DWORD dwVersionLo ;}QUERYCONTEXT ;
typedef enum tagTYSPEC {TYSPEC_CLSID =0 ,TYSPEC_FILEEXT =1 ,TYSPEC_MIMETYPE =2 ,TYSPEC_FILENAME =3 ,TYSPEC_PROGID =4 ,TYSPEC_PACKAGENAME =5 ,TYSPEC_OBJECTID =6 }TYSPEC ;
typedef struct __WIDL_wtypes_generated_name_00000001 {DWORD tyspec ;union {CLSID clsid ;LPOLESTR pFileExt ;LPOLESTR pMimeType ;LPOLESTR pProgId ;LPOLESTR pFileName ;struct {LPOLESTR pPackageName ;GUID PolicyId ;}ByName ;struct {GUID ObjectId ;GUID PolicyId ;}ByObjectId ;}tagged_union ;}uCLSSPEC ;
// m:\mingw\x86_64-w64-mingw32\include\winioctl.h

extern const GUID GUID_DEVINTERFACE_DISK ;
extern const GUID GUID_DEVINTERFACE_CDROM ;
extern const GUID GUID_DEVINTERFACE_PARTITION ;
extern const GUID GUID_DEVINTERFACE_TAPE ;
extern const GUID GUID_DEVINTERFACE_WRITEONCEDISK ;
extern const GUID GUID_DEVINTERFACE_VOLUME ;
extern const GUID GUID_DEVINTERFACE_MEDIUMCHANGER ;
extern const GUID GUID_DEVINTERFACE_FLOPPY ;
extern const GUID GUID_DEVINTERFACE_CDCHANGER ;
extern const GUID GUID_DEVINTERFACE_STORAGEPORT ;
extern const GUID GUID_DEVINTERFACE_COMPORT ;
extern const GUID GUID_DEVINTERFACE_SERENUM_BUS_ENUMERATOR ;
typedef struct _STORAGE_READ_CAPACITY {ULONG Version ;ULONG Size ;ULONG BlockLength ;LARGE_INTEGER NumberOfBlocks ;LARGE_INTEGER DiskLength ;}STORAGE_READ_CAPACITY ;
typedef struct _STORAGE_READ_CAPACITY {ULONG Version ;ULONG Size ;ULONG BlockLength ;LARGE_INTEGER NumberOfBlocks ;LARGE_INTEGER DiskLength ;}*PSTORAGE_READ_CAPACITY ;

typedef struct _STORAGE_HOTPLUG_INFO {DWORD Size ;BOOLEAN MediaRemovable ;BOOLEAN MediaHotplug ;BOOLEAN DeviceHotplug ;BOOLEAN WriteCacheEnableOverride ;}STORAGE_HOTPLUG_INFO ;
typedef struct _STORAGE_HOTPLUG_INFO {DWORD Size ;BOOLEAN MediaRemovable ;BOOLEAN MediaHotplug ;BOOLEAN DeviceHotplug ;BOOLEAN WriteCacheEnableOverride ;}*PSTORAGE_HOTPLUG_INFO ;

typedef struct _STORAGE_DEVICE_NUMBER {DWORD DeviceType ;DWORD DeviceNumber ;DWORD PartitionNumber ;}STORAGE_DEVICE_NUMBER ;
typedef struct _STORAGE_DEVICE_NUMBER {DWORD DeviceType ;DWORD DeviceNumber ;DWORD PartitionNumber ;}*PSTORAGE_DEVICE_NUMBER ;

typedef struct _STORAGE_BUS_RESET_REQUEST {BYTE PathId ;}STORAGE_BUS_RESET_REQUEST ;
typedef struct _STORAGE_BUS_RESET_REQUEST {BYTE PathId ;}*PSTORAGE_BUS_RESET_REQUEST ;

typedef struct STORAGE_BREAK_RESERVATION_REQUEST {DWORD Length ;BYTE _unused ;BYTE PathId ;BYTE TargetId ;BYTE Lun ;}STORAGE_BREAK_RESERVATION_REQUEST ;
typedef struct STORAGE_BREAK_RESERVATION_REQUEST {DWORD Length ;BYTE _unused ;BYTE PathId ;BYTE TargetId ;BYTE Lun ;}*PSTORAGE_BREAK_RESERVATION_REQUEST ;

typedef struct _PREVENT_MEDIA_REMOVAL {BOOLEAN PreventMediaRemoval ;}PREVENT_MEDIA_REMOVAL ;
typedef struct _PREVENT_MEDIA_REMOVAL {BOOLEAN PreventMediaRemoval ;}*PPREVENT_MEDIA_REMOVAL ;

typedef struct _CLASS_MEDIA_CHANGE_CONTEXT {DWORD MediaChangeCount ;DWORD NewState ;}CLASS_MEDIA_CHANGE_CONTEXT ;
typedef struct _CLASS_MEDIA_CHANGE_CONTEXT {DWORD MediaChangeCount ;DWORD NewState ;}*PCLASS_MEDIA_CHANGE_CONTEXT ;

typedef struct _TAPE_STATISTICS {DWORD Version ;DWORD Flags ;LARGE_INTEGER RecoveredWrites ;LARGE_INTEGER UnrecoveredWrites ;LARGE_INTEGER RecoveredReads ;LARGE_INTEGER UnrecoveredReads ;BYTE CompressionRatioReads ;BYTE CompressionRatioWrites ;}TAPE_STATISTICS ;
typedef struct _TAPE_STATISTICS {DWORD Version ;DWORD Flags ;LARGE_INTEGER RecoveredWrites ;LARGE_INTEGER UnrecoveredWrites ;LARGE_INTEGER RecoveredReads ;LARGE_INTEGER UnrecoveredReads ;BYTE CompressionRatioReads ;BYTE CompressionRatioWrites ;}*PTAPE_STATISTICS ;

typedef struct _TAPE_GET_STATISTICS {DWORD Operation ;}TAPE_GET_STATISTICS ;
typedef struct _TAPE_GET_STATISTICS {DWORD Operation ;}*PTAPE_GET_STATISTICS ;

typedef enum _STORAGE_MEDIA_TYPE {DDS_4mm =32 ,MiniQic ,Travan ,QIC ,MP_8mm ,AME_8mm ,AIT1_8mm ,DLT ,NCTP ,IBM_3480 ,IBM_3490E ,IBM_Magstar_3590 ,IBM_Magstar_MP ,STK_DATA_D3 ,SONY_DTF ,DV_6mm ,DMI ,SONY_D2 ,CLEANER_CARTRIDGE ,CD_ROM ,CD_R ,CD_RW ,DVD_ROM ,DVD_R ,DVD_RW ,MO_3_RW ,MO_5_WO ,MO_5_RW ,MO_5_LIMDOW ,PC_5_WO ,PC_5_RW ,PD_5_RW ,ABL_5_WO ,PINNACLE_APEX_5_RW ,SONY_12_WO ,PHILIPS_12_WO ,HITACHI_12_WO ,CYGNET_12_WO ,KODAK_14_WO ,MO_NFR_525 ,NIKON_12_RW ,IOMEGA_ZIP ,IOMEGA_JAZ ,SYQUEST_EZ135 ,SYQUEST_EZFLYER ,SYQUEST_SYJET ,AVATAR_F2 ,MP2_8mm ,DST_S ,DST_M ,DST_L ,VXATape_1 ,VXATape_2 ,STK_9840 ,LTO_Ultrium ,LTO_Accelis ,DVD_RAM ,AIT_8mm ,ADR_1 ,ADR_2 ,STK_9940 ,SAIT ,VXATape }STORAGE_MEDIA_TYPE ;
typedef enum _STORAGE_MEDIA_TYPE *PSTORAGE_MEDIA_TYPE ;

typedef enum _STORAGE_BUS_TYPE {BusTypeUnknown =0 ,BusTypeScsi =1 ,BusTypeAtapi =2 ,BusTypeAta =3 ,BusType1394 =4 ,BusTypeSsa =5 ,BusTypeFibre =6 ,BusTypeUsb =7 ,BusTypeRAID =8 ,BusTypeMax ,BusTypeMaxReserved =127 }STORAGE_BUS_TYPE ;
typedef enum _STORAGE_BUS_TYPE *PSTORAGE_BUS_TYPE ;

typedef struct _DEVICE_MEDIA_INFO {union {struct {LARGE_INTEGER Cylinders ;STORAGE_MEDIA_TYPE MediaType ;DWORD TracksPerCylinder ;DWORD SectorsPerTrack ;DWORD BytesPerSector ;DWORD NumberMediaSides ;DWORD MediaCharacteristics ;}DiskInfo ;struct {LARGE_INTEGER Cylinders ;STORAGE_MEDIA_TYPE MediaType ;DWORD TracksPerCylinder ;DWORD SectorsPerTrack ;DWORD BytesPerSector ;DWORD NumberMediaSides ;DWORD MediaCharacteristics ;}RemovableDiskInfo ;struct {STORAGE_MEDIA_TYPE MediaType ;DWORD MediaCharacteristics ;DWORD CurrentBlockSize ;STORAGE_BUS_TYPE BusType ;union {struct {BYTE MediumType ;BYTE DensityCode ;}ScsiInformation ;}BusSpecificData ;}TapeInfo ;}DeviceSpecific ;}DEVICE_MEDIA_INFO ;
typedef struct _DEVICE_MEDIA_INFO {union {struct {LARGE_INTEGER Cylinders ;STORAGE_MEDIA_TYPE MediaType ;DWORD TracksPerCylinder ;DWORD SectorsPerTrack ;DWORD BytesPerSector ;DWORD NumberMediaSides ;DWORD MediaCharacteristics ;}DiskInfo ;struct {LARGE_INTEGER Cylinders ;STORAGE_MEDIA_TYPE MediaType ;DWORD TracksPerCylinder ;DWORD SectorsPerTrack ;DWORD BytesPerSector ;DWORD NumberMediaSides ;DWORD MediaCharacteristics ;}RemovableDiskInfo ;struct {STORAGE_MEDIA_TYPE MediaType ;DWORD MediaCharacteristics ;DWORD CurrentBlockSize ;STORAGE_BUS_TYPE BusType ;union {struct {BYTE MediumType ;BYTE DensityCode ;}ScsiInformation ;}BusSpecificData ;}TapeInfo ;}DeviceSpecific ;}*PDEVICE_MEDIA_INFO ;

typedef struct _GET_MEDIA_TYPES {DWORD DeviceType ;DWORD MediaInfoCount ;DEVICE_MEDIA_INFO MediaInfo [1 ];}GET_MEDIA_TYPES ;
typedef struct _GET_MEDIA_TYPES {DWORD DeviceType ;DWORD MediaInfoCount ;DEVICE_MEDIA_INFO MediaInfo [1 ];}*PGET_MEDIA_TYPES ;

typedef struct _STORAGE_PREDICT_FAILURE {DWORD PredictFailure ;BYTE VendorSpecific [512 ];}STORAGE_PREDICT_FAILURE ;
typedef struct _STORAGE_PREDICT_FAILURE {DWORD PredictFailure ;BYTE VendorSpecific [512 ];}*PSTORAGE_PREDICT_FAILURE ;

typedef enum _MEDIA_TYPE {Unknown ,F5_1Pt2_512 ,F3_1Pt44_512 ,F3_2Pt88_512 ,F3_20Pt8_512 ,F3_720_512 ,F5_360_512 ,F5_320_512 ,F5_320_1024 ,F5_180_512 ,F5_160_512 ,RemovableMedia ,FixedMedia ,F3_120M_512 ,F3_640_512 ,F5_640_512 ,F5_720_512 ,F3_1Pt2_512 ,F3_1Pt23_1024 ,F5_1Pt23_1024 ,F3_128Mb_512 ,F3_230Mb_512 ,F8_256_128 ,F3_200Mb_512 ,F3_240M_512 ,F3_32M_512 }MEDIA_TYPE ;
typedef enum _MEDIA_TYPE *PMEDIA_TYPE ;

typedef struct _FORMAT_PARAMETERS {MEDIA_TYPE MediaType ;DWORD StartCylinderNumber ;DWORD EndCylinderNumber ;DWORD StartHeadNumber ;DWORD EndHeadNumber ;}FORMAT_PARAMETERS ;
typedef struct _FORMAT_PARAMETERS {MEDIA_TYPE MediaType ;DWORD StartCylinderNumber ;DWORD EndCylinderNumber ;DWORD StartHeadNumber ;DWORD EndHeadNumber ;}*PFORMAT_PARAMETERS ;

typedef WORD BAD_TRACK_NUMBER ;
typedef WORD *PBAD_TRACK_NUMBER ;
typedef struct _FORMAT_EX_PARAMETERS {MEDIA_TYPE MediaType ;DWORD StartCylinderNumber ;DWORD EndCylinderNumber ;DWORD StartHeadNumber ;DWORD EndHeadNumber ;WORD FormatGapLength ;WORD SectorsPerTrack ;WORD SectorNumber [1 ];}FORMAT_EX_PARAMETERS ;
typedef struct _FORMAT_EX_PARAMETERS {MEDIA_TYPE MediaType ;DWORD StartCylinderNumber ;DWORD EndCylinderNumber ;DWORD StartHeadNumber ;DWORD EndHeadNumber ;WORD FormatGapLength ;WORD SectorsPerTrack ;WORD SectorNumber [1 ];}*PFORMAT_EX_PARAMETERS ;

typedef struct _DISK_GEOMETRY {LARGE_INTEGER Cylinders ;MEDIA_TYPE MediaType ;DWORD TracksPerCylinder ;DWORD SectorsPerTrack ;DWORD BytesPerSector ;}DISK_GEOMETRY ;
typedef struct _DISK_GEOMETRY {LARGE_INTEGER Cylinders ;MEDIA_TYPE MediaType ;DWORD TracksPerCylinder ;DWORD SectorsPerTrack ;DWORD BytesPerSector ;}*PDISK_GEOMETRY ;

typedef struct _PARTITION_INFORMATION {LARGE_INTEGER StartingOffset ;LARGE_INTEGER PartitionLength ;DWORD HiddenSectors ;DWORD PartitionNumber ;BYTE PartitionType ;BOOLEAN BootIndicator ;BOOLEAN RecognizedPartition ;BOOLEAN RewritePartition ;}PARTITION_INFORMATION ;
typedef struct _PARTITION_INFORMATION {LARGE_INTEGER StartingOffset ;LARGE_INTEGER PartitionLength ;DWORD HiddenSectors ;DWORD PartitionNumber ;BYTE PartitionType ;BOOLEAN BootIndicator ;BOOLEAN RecognizedPartition ;BOOLEAN RewritePartition ;}*PPARTITION_INFORMATION ;

typedef struct _SET_PARTITION_INFORMATION {BYTE PartitionType ;}SET_PARTITION_INFORMATION ;
typedef struct _SET_PARTITION_INFORMATION {BYTE PartitionType ;}*PSET_PARTITION_INFORMATION ;

typedef struct _DRIVE_LAYOUT_INFORMATION {DWORD PartitionCount ;DWORD Signature ;PARTITION_INFORMATION PartitionEntry [1 ];}DRIVE_LAYOUT_INFORMATION ;
typedef struct _DRIVE_LAYOUT_INFORMATION {DWORD PartitionCount ;DWORD Signature ;PARTITION_INFORMATION PartitionEntry [1 ];}*PDRIVE_LAYOUT_INFORMATION ;

typedef struct _VERIFY_INFORMATION {LARGE_INTEGER StartingOffset ;DWORD Length ;}VERIFY_INFORMATION ;
typedef struct _VERIFY_INFORMATION {LARGE_INTEGER StartingOffset ;DWORD Length ;}*PVERIFY_INFORMATION ;

typedef struct _REASSIGN_BLOCKS {WORD Reserved ;WORD Count ;DWORD BlockNumber [1 ];}REASSIGN_BLOCKS ;
typedef struct _REASSIGN_BLOCKS {WORD Reserved ;WORD Count ;DWORD BlockNumber [1 ];}*PREASSIGN_BLOCKS ;

typedef struct _REASSIGN_BLOCKS_EX {WORD Reserved ;WORD Count ;LARGE_INTEGER BlockNumber [1 ];}REASSIGN_BLOCKS_EX ;
typedef struct _REASSIGN_BLOCKS_EX {WORD Reserved ;WORD Count ;LARGE_INTEGER BlockNumber [1 ];}*PREASSIGN_BLOCKS_EX ;

typedef enum _PARTITION_STYLE {PARTITION_STYLE_MBR ,PARTITION_STYLE_GPT ,PARTITION_STYLE_RAW }PARTITION_STYLE ;
typedef struct _PARTITION_INFORMATION_GPT {GUID PartitionType ;GUID PartitionId ;DWORD64 Attributes ;WCHAR Name [36 ];}PARTITION_INFORMATION_GPT ;
typedef struct _PARTITION_INFORMATION_GPT {GUID PartitionType ;GUID PartitionId ;DWORD64 Attributes ;WCHAR Name [36 ];}*PPARTITION_INFORMATION_GPT ;

typedef struct _PARTITION_INFORMATION_MBR {BYTE PartitionType ;BOOLEAN BootIndicator ;BOOLEAN RecognizedPartition ;DWORD HiddenSectors ;}PARTITION_INFORMATION_MBR ;
typedef struct _PARTITION_INFORMATION_MBR {BYTE PartitionType ;BOOLEAN BootIndicator ;BOOLEAN RecognizedPartition ;DWORD HiddenSectors ;}*PPARTITION_INFORMATION_MBR ;

typedef SET_PARTITION_INFORMATION SET_PARTITION_INFORMATION_MBR ;
typedef PARTITION_INFORMATION_GPT SET_PARTITION_INFORMATION_GPT ;
typedef struct _SET_PARTITION_INFORMATION_EX {PARTITION_STYLE PartitionStyle ;union {SET_PARTITION_INFORMATION_MBR Mbr ;SET_PARTITION_INFORMATION_GPT Gpt ;};}SET_PARTITION_INFORMATION_EX ;
typedef struct _SET_PARTITION_INFORMATION_EX {PARTITION_STYLE PartitionStyle ;union {SET_PARTITION_INFORMATION_MBR Mbr ;SET_PARTITION_INFORMATION_GPT Gpt ;};}*PSET_PARTITION_INFORMATION_EX ;

typedef struct _CREATE_DISK_GPT {GUID DiskId ;DWORD MaxPartitionCount ;}CREATE_DISK_GPT ;
typedef struct _CREATE_DISK_GPT {GUID DiskId ;DWORD MaxPartitionCount ;}*PCREATE_DISK_GPT ;

typedef struct _CREATE_DISK_MBR {DWORD Signature ;}CREATE_DISK_MBR ;
typedef struct _CREATE_DISK_MBR {DWORD Signature ;}*PCREATE_DISK_MBR ;

typedef struct _CREATE_DISK {PARTITION_STYLE PartitionStyle ;union {CREATE_DISK_MBR Mbr ;CREATE_DISK_GPT Gpt ;};}CREATE_DISK ;
typedef struct _CREATE_DISK {PARTITION_STYLE PartitionStyle ;union {CREATE_DISK_MBR Mbr ;CREATE_DISK_GPT Gpt ;};}*PCREATE_DISK ;

typedef struct _GET_LENGTH_INFORMATION {LARGE_INTEGER Length ;}GET_LENGTH_INFORMATION ;
typedef struct _GET_LENGTH_INFORMATION {LARGE_INTEGER Length ;}*PGET_LENGTH_INFORMATION ;

typedef struct _PARTITION_INFORMATION_EX {PARTITION_STYLE PartitionStyle ;LARGE_INTEGER StartingOffset ;LARGE_INTEGER PartitionLength ;DWORD PartitionNumber ;BOOLEAN RewritePartition ;union {PARTITION_INFORMATION_MBR Mbr ;PARTITION_INFORMATION_GPT Gpt ;};}PARTITION_INFORMATION_EX ;
typedef struct _PARTITION_INFORMATION_EX {PARTITION_STYLE PartitionStyle ;LARGE_INTEGER StartingOffset ;LARGE_INTEGER PartitionLength ;DWORD PartitionNumber ;BOOLEAN RewritePartition ;union {PARTITION_INFORMATION_MBR Mbr ;PARTITION_INFORMATION_GPT Gpt ;};}*PPARTITION_INFORMATION_EX ;

typedef struct _DRIVE_LAYOUT_INFORMATION_GPT {GUID DiskId ;LARGE_INTEGER StartingUsableOffset ;LARGE_INTEGER UsableLength ;DWORD MaxPartitionCount ;}DRIVE_LAYOUT_INFORMATION_GPT ;
typedef struct _DRIVE_LAYOUT_INFORMATION_GPT {GUID DiskId ;LARGE_INTEGER StartingUsableOffset ;LARGE_INTEGER UsableLength ;DWORD MaxPartitionCount ;}*PDRIVE_LAYOUT_INFORMATION_GPT ;

typedef struct _DRIVE_LAYOUT_INFORMATION_MBR {DWORD Signature ;}DRIVE_LAYOUT_INFORMATION_MBR ;
typedef struct _DRIVE_LAYOUT_INFORMATION_MBR {DWORD Signature ;}*PDRIVE_LAYOUT_INFORMATION_MBR ;

typedef struct _DRIVE_LAYOUT_INFORMATION_EX {DWORD PartitionStyle ;DWORD PartitionCount ;union {DRIVE_LAYOUT_INFORMATION_MBR Mbr ;DRIVE_LAYOUT_INFORMATION_GPT Gpt ;};PARTITION_INFORMATION_EX PartitionEntry [1 ];}DRIVE_LAYOUT_INFORMATION_EX ;
typedef struct _DRIVE_LAYOUT_INFORMATION_EX {DWORD PartitionStyle ;DWORD PartitionCount ;union {DRIVE_LAYOUT_INFORMATION_MBR Mbr ;DRIVE_LAYOUT_INFORMATION_GPT Gpt ;};PARTITION_INFORMATION_EX PartitionEntry [1 ];}*PDRIVE_LAYOUT_INFORMATION_EX ;

typedef enum _DETECTION_TYPE {DetectNone ,DetectInt13 ,DetectExInt13 }DETECTION_TYPE ;
typedef struct _DISK_INT13_INFO {WORD DriveSelect ;DWORD MaxCylinders ;WORD SectorsPerTrack ;WORD MaxHeads ;WORD NumberDrives ;}DISK_INT13_INFO ;
typedef struct _DISK_INT13_INFO {WORD DriveSelect ;DWORD MaxCylinders ;WORD SectorsPerTrack ;WORD MaxHeads ;WORD NumberDrives ;}*PDISK_INT13_INFO ;

typedef struct _DISK_EX_INT13_INFO {WORD ExBufferSize ;WORD ExFlags ;DWORD ExCylinders ;DWORD ExHeads ;DWORD ExSectorsPerTrack ;DWORD64 ExSectorsPerDrive ;WORD ExSectorSize ;WORD ExReserved ;}DISK_EX_INT13_INFO ;
typedef struct _DISK_EX_INT13_INFO {WORD ExBufferSize ;WORD ExFlags ;DWORD ExCylinders ;DWORD ExHeads ;DWORD ExSectorsPerTrack ;DWORD64 ExSectorsPerDrive ;WORD ExSectorSize ;WORD ExReserved ;}*PDISK_EX_INT13_INFO ;

typedef struct _DISK_DETECTION_INFO {DWORD SizeOfDetectInfo ;DETECTION_TYPE DetectionType ;union {struct {DISK_INT13_INFO Int13 ;DISK_EX_INT13_INFO ExInt13 ;};};}DISK_DETECTION_INFO ;
typedef struct _DISK_DETECTION_INFO {DWORD SizeOfDetectInfo ;DETECTION_TYPE DetectionType ;union {struct {DISK_INT13_INFO Int13 ;DISK_EX_INT13_INFO ExInt13 ;};};}*PDISK_DETECTION_INFO ;

typedef struct _DISK_PARTITION_INFO {DWORD SizeOfPartitionInfo ;PARTITION_STYLE PartitionStyle ;union {struct {DWORD Signature ;DWORD CheckSum ;}Mbr ;struct {GUID DiskId ;}Gpt ;};}DISK_PARTITION_INFO ;
typedef struct _DISK_PARTITION_INFO {DWORD SizeOfPartitionInfo ;PARTITION_STYLE PartitionStyle ;union {struct {DWORD Signature ;DWORD CheckSum ;}Mbr ;struct {GUID DiskId ;}Gpt ;};}*PDISK_PARTITION_INFO ;

typedef struct _DISK_GEOMETRY_EX {DISK_GEOMETRY Geometry ;LARGE_INTEGER DiskSize ;BYTE Data [1 ];}DISK_GEOMETRY_EX ;
typedef struct _DISK_GEOMETRY_EX {DISK_GEOMETRY Geometry ;LARGE_INTEGER DiskSize ;BYTE Data [1 ];}*PDISK_GEOMETRY_EX ;

typedef struct _DISK_CONTROLLER_NUMBER {DWORD ControllerNumber ;DWORD DiskNumber ;}DISK_CONTROLLER_NUMBER ;
typedef struct _DISK_CONTROLLER_NUMBER {DWORD ControllerNumber ;DWORD DiskNumber ;}*PDISK_CONTROLLER_NUMBER ;

typedef enum {EqualPriority ,KeepPrefetchedData ,KeepReadData }DISK_CACHE_RETENTION_PRIORITY ;
typedef struct _DISK_CACHE_INFORMATION {BOOLEAN ParametersSavable ;BOOLEAN ReadCacheEnabled ;BOOLEAN WriteCacheEnabled ;DISK_CACHE_RETENTION_PRIORITY ReadRetentionPriority ;DISK_CACHE_RETENTION_PRIORITY WriteRetentionPriority ;WORD DisablePrefetchTransferLength ;BOOLEAN PrefetchScalar ;union {struct {WORD Minimum ;WORD Maximum ;WORD MaximumBlocks ;}ScalarPrefetch ;struct {WORD Minimum ;WORD Maximum ;}BlockPrefetch ;};}DISK_CACHE_INFORMATION ;
typedef struct _DISK_CACHE_INFORMATION {BOOLEAN ParametersSavable ;BOOLEAN ReadCacheEnabled ;BOOLEAN WriteCacheEnabled ;DISK_CACHE_RETENTION_PRIORITY ReadRetentionPriority ;DISK_CACHE_RETENTION_PRIORITY WriteRetentionPriority ;WORD DisablePrefetchTransferLength ;BOOLEAN PrefetchScalar ;union {struct {WORD Minimum ;WORD Maximum ;WORD MaximumBlocks ;}ScalarPrefetch ;struct {WORD Minimum ;WORD Maximum ;}BlockPrefetch ;};}*PDISK_CACHE_INFORMATION ;

typedef struct _DISK_GROW_PARTITION {DWORD PartitionNumber ;LARGE_INTEGER BytesToGrow ;}DISK_GROW_PARTITION ;
typedef struct _DISK_GROW_PARTITION {DWORD PartitionNumber ;LARGE_INTEGER BytesToGrow ;}*PDISK_GROW_PARTITION ;

typedef struct _HISTOGRAM_BUCKET {DWORD Reads ;DWORD Writes ;}HISTOGRAM_BUCKET ;
typedef struct _HISTOGRAM_BUCKET {DWORD Reads ;DWORD Writes ;}*PHISTOGRAM_BUCKET ;

typedef struct _DISK_HISTOGRAM {LARGE_INTEGER DiskSize ;LARGE_INTEGER Start ;LARGE_INTEGER End ;LARGE_INTEGER Average ;LARGE_INTEGER AverageRead ;LARGE_INTEGER AverageWrite ;DWORD Granularity ;DWORD Size ;DWORD ReadCount ;DWORD WriteCount ;PHISTOGRAM_BUCKET Histogram ;}DISK_HISTOGRAM ;
typedef struct _DISK_HISTOGRAM {LARGE_INTEGER DiskSize ;LARGE_INTEGER Start ;LARGE_INTEGER End ;LARGE_INTEGER Average ;LARGE_INTEGER AverageRead ;LARGE_INTEGER AverageWrite ;DWORD Granularity ;DWORD Size ;DWORD ReadCount ;DWORD WriteCount ;PHISTOGRAM_BUCKET Histogram ;}*PDISK_HISTOGRAM ;

typedef struct _DISK_PERFORMANCE {LARGE_INTEGER BytesRead ;LARGE_INTEGER BytesWritten ;LARGE_INTEGER ReadTime ;LARGE_INTEGER WriteTime ;LARGE_INTEGER IdleTime ;DWORD ReadCount ;DWORD WriteCount ;DWORD QueueDepth ;DWORD SplitCount ;LARGE_INTEGER QueryTime ;DWORD StorageDeviceNumber ;WCHAR StorageManagerName [8 ];}DISK_PERFORMANCE ;
typedef struct _DISK_PERFORMANCE {LARGE_INTEGER BytesRead ;LARGE_INTEGER BytesWritten ;LARGE_INTEGER ReadTime ;LARGE_INTEGER WriteTime ;LARGE_INTEGER IdleTime ;DWORD ReadCount ;DWORD WriteCount ;DWORD QueueDepth ;DWORD SplitCount ;LARGE_INTEGER QueryTime ;DWORD StorageDeviceNumber ;WCHAR StorageManagerName [8 ];}*PDISK_PERFORMANCE ;

typedef struct _DISK_RECORD {LARGE_INTEGER ByteOffset ;LARGE_INTEGER StartTime ;LARGE_INTEGER EndTime ;PVOID VirtualAddress ;DWORD NumberOfBytes ;BYTE DeviceNumber ;BOOLEAN ReadRequest ;}DISK_RECORD ;
typedef struct _DISK_RECORD {LARGE_INTEGER ByteOffset ;LARGE_INTEGER StartTime ;LARGE_INTEGER EndTime ;PVOID VirtualAddress ;DWORD NumberOfBytes ;BYTE DeviceNumber ;BOOLEAN ReadRequest ;}*PDISK_RECORD ;

typedef struct _DISK_LOGGING {BYTE Function ;PVOID BufferAddress ;DWORD BufferSize ;}DISK_LOGGING ;
typedef struct _DISK_LOGGING {BYTE Function ;PVOID BufferAddress ;DWORD BufferSize ;}*PDISK_LOGGING ;

typedef enum _BIN_TYPES {RequestSize ,RequestLocation }BIN_TYPES ;
typedef struct _BIN_RANGE {LARGE_INTEGER StartValue ;LARGE_INTEGER Length ;}BIN_RANGE ;
typedef struct _BIN_RANGE {LARGE_INTEGER StartValue ;LARGE_INTEGER Length ;}*PBIN_RANGE ;

typedef struct _PERF_BIN {DWORD NumberOfBins ;DWORD TypeOfBin ;BIN_RANGE BinsRanges [1 ];}PERF_BIN ;
typedef struct _PERF_BIN {DWORD NumberOfBins ;DWORD TypeOfBin ;BIN_RANGE BinsRanges [1 ];}*PPERF_BIN ;

typedef struct _BIN_COUNT {BIN_RANGE BinRange ;DWORD BinCount ;}BIN_COUNT ;
typedef struct _BIN_COUNT {BIN_RANGE BinRange ;DWORD BinCount ;}*PBIN_COUNT ;

typedef struct _BIN_RESULTS {DWORD NumberOfBins ;BIN_COUNT BinCounts [1 ];}BIN_RESULTS ;
typedef struct _BIN_RESULTS {DWORD NumberOfBins ;BIN_COUNT BinCounts [1 ];}*PBIN_RESULTS ;

typedef struct _GETVERSIONINPARAMS {BYTE bVersion ;BYTE bRevision ;BYTE bReserved ;BYTE bIDEDeviceMap ;DWORD fCapabilities ;DWORD dwReserved [4 ];}GETVERSIONINPARAMS ;
typedef struct _GETVERSIONINPARAMS {BYTE bVersion ;BYTE bRevision ;BYTE bReserved ;BYTE bIDEDeviceMap ;DWORD fCapabilities ;DWORD dwReserved [4 ];}*PGETVERSIONINPARAMS ;
typedef struct _GETVERSIONINPARAMS {BYTE bVersion ;BYTE bRevision ;BYTE bReserved ;BYTE bIDEDeviceMap ;DWORD fCapabilities ;DWORD dwReserved [4 ];}*LPGETVERSIONINPARAMS ;

typedef struct _IDEREGS {BYTE bFeaturesReg ;BYTE bSectorCountReg ;BYTE bSectorNumberReg ;BYTE bCylLowReg ;BYTE bCylHighReg ;BYTE bDriveHeadReg ;BYTE bCommandReg ;BYTE bReserved ;}IDEREGS ;
typedef struct _IDEREGS {BYTE bFeaturesReg ;BYTE bSectorCountReg ;BYTE bSectorNumberReg ;BYTE bCylLowReg ;BYTE bCylHighReg ;BYTE bDriveHeadReg ;BYTE bCommandReg ;BYTE bReserved ;}*PIDEREGS ;
typedef struct _IDEREGS {BYTE bFeaturesReg ;BYTE bSectorCountReg ;BYTE bSectorNumberReg ;BYTE bCylLowReg ;BYTE bCylHighReg ;BYTE bDriveHeadReg ;BYTE bCommandReg ;BYTE bReserved ;}*LPIDEREGS ;

typedef struct _SENDCMDINPARAMS {DWORD cBufferSize ;IDEREGS irDriveRegs ;BYTE bDriveNumber ;BYTE bReserved [3 ];DWORD dwReserved [4 ];BYTE bBuffer [1 ];}SENDCMDINPARAMS ;
typedef struct _SENDCMDINPARAMS {DWORD cBufferSize ;IDEREGS irDriveRegs ;BYTE bDriveNumber ;BYTE bReserved [3 ];DWORD dwReserved [4 ];BYTE bBuffer [1 ];}*PSENDCMDINPARAMS ;
typedef struct _SENDCMDINPARAMS {DWORD cBufferSize ;IDEREGS irDriveRegs ;BYTE bDriveNumber ;BYTE bReserved [3 ];DWORD dwReserved [4 ];BYTE bBuffer [1 ];}*LPSENDCMDINPARAMS ;

typedef struct _DRIVERSTATUS {BYTE bDriverError ;BYTE bIDEError ;BYTE bReserved [2 ];DWORD dwReserved [2 ];}DRIVERSTATUS ;
typedef struct _DRIVERSTATUS {BYTE bDriverError ;BYTE bIDEError ;BYTE bReserved [2 ];DWORD dwReserved [2 ];}*PDRIVERSTATUS ;
typedef struct _DRIVERSTATUS {BYTE bDriverError ;BYTE bIDEError ;BYTE bReserved [2 ];DWORD dwReserved [2 ];}*LPDRIVERSTATUS ;

typedef struct _SENDCMDOUTPARAMS {DWORD cBufferSize ;DRIVERSTATUS DriverStatus ;BYTE bBuffer [1 ];}SENDCMDOUTPARAMS ;
typedef struct _SENDCMDOUTPARAMS {DWORD cBufferSize ;DRIVERSTATUS DriverStatus ;BYTE bBuffer [1 ];}*PSENDCMDOUTPARAMS ;
typedef struct _SENDCMDOUTPARAMS {DWORD cBufferSize ;DRIVERSTATUS DriverStatus ;BYTE bBuffer [1 ];}*LPSENDCMDOUTPARAMS ;

typedef enum _ELEMENT_TYPE {AllElements ,ChangerTransport ,ChangerSlot ,ChangerIEPort ,ChangerDrive ,ChangerDoor ,ChangerKeypad ,ChangerMaxElement }ELEMENT_TYPE ;
typedef enum _ELEMENT_TYPE *PELEMENT_TYPE ;

typedef struct _CHANGER_ELEMENT {ELEMENT_TYPE ElementType ;DWORD ElementAddress ;}CHANGER_ELEMENT ;
typedef struct _CHANGER_ELEMENT {ELEMENT_TYPE ElementType ;DWORD ElementAddress ;}*PCHANGER_ELEMENT ;

typedef struct _CHANGER_ELEMENT_LIST {CHANGER_ELEMENT Element ;DWORD NumberOfElements ;}CHANGER_ELEMENT_LIST ;
typedef struct _CHANGER_ELEMENT_LIST {CHANGER_ELEMENT Element ;DWORD NumberOfElements ;}*PCHANGER_ELEMENT_LIST ;

typedef struct _GET_CHANGER_PARAMETERS {DWORD Size ;WORD NumberTransportElements ;WORD NumberStorageElements ;WORD NumberCleanerSlots ;WORD NumberIEElements ;WORD NumberDataTransferElements ;WORD NumberOfDoors ;WORD FirstSlotNumber ;WORD FirstDriveNumber ;WORD FirstTransportNumber ;WORD FirstIEPortNumber ;WORD FirstCleanerSlotAddress ;WORD MagazineSize ;DWORD DriveCleanTimeout ;DWORD Features0 ;DWORD Features1 ;BYTE MoveFromTransport ;BYTE MoveFromSlot ;BYTE MoveFromIePort ;BYTE MoveFromDrive ;BYTE ExchangeFromTransport ;BYTE ExchangeFromSlot ;BYTE ExchangeFromIePort ;BYTE ExchangeFromDrive ;BYTE LockUnlockCapabilities ;BYTE PositionCapabilities ;BYTE Reserved1 [2 ];DWORD Reserved2 [2 ];}GET_CHANGER_PARAMETERS ;
typedef struct _GET_CHANGER_PARAMETERS {DWORD Size ;WORD NumberTransportElements ;WORD NumberStorageElements ;WORD NumberCleanerSlots ;WORD NumberIEElements ;WORD NumberDataTransferElements ;WORD NumberOfDoors ;WORD FirstSlotNumber ;WORD FirstDriveNumber ;WORD FirstTransportNumber ;WORD FirstIEPortNumber ;WORD FirstCleanerSlotAddress ;WORD MagazineSize ;DWORD DriveCleanTimeout ;DWORD Features0 ;DWORD Features1 ;BYTE MoveFromTransport ;BYTE MoveFromSlot ;BYTE MoveFromIePort ;BYTE MoveFromDrive ;BYTE ExchangeFromTransport ;BYTE ExchangeFromSlot ;BYTE ExchangeFromIePort ;BYTE ExchangeFromDrive ;BYTE LockUnlockCapabilities ;BYTE PositionCapabilities ;BYTE Reserved1 [2 ];DWORD Reserved2 [2 ];}*PGET_CHANGER_PARAMETERS ;

typedef struct _CHANGER_PRODUCT_DATA {BYTE VendorId [8 ];BYTE ProductId [16 ];BYTE Revision [4 ];BYTE SerialNumber [32 ];BYTE DeviceType ;}CHANGER_PRODUCT_DATA ;
typedef struct _CHANGER_PRODUCT_DATA {BYTE VendorId [8 ];BYTE ProductId [16 ];BYTE Revision [4 ];BYTE SerialNumber [32 ];BYTE DeviceType ;}*PCHANGER_PRODUCT_DATA ;

typedef struct _CHANGER_SET_ACCESS {CHANGER_ELEMENT Element ;DWORD Control ;}CHANGER_SET_ACCESS ;
typedef struct _CHANGER_SET_ACCESS {CHANGER_ELEMENT Element ;DWORD Control ;}*PCHANGER_SET_ACCESS ;

typedef struct _CHANGER_READ_ELEMENT_STATUS {CHANGER_ELEMENT_LIST ElementList ;BOOLEAN VolumeTagInfo ;}CHANGER_READ_ELEMENT_STATUS ;
typedef struct _CHANGER_READ_ELEMENT_STATUS {CHANGER_ELEMENT_LIST ElementList ;BOOLEAN VolumeTagInfo ;}*PCHANGER_READ_ELEMENT_STATUS ;

typedef struct _CHANGER_ELEMENT_STATUS {CHANGER_ELEMENT Element ;CHANGER_ELEMENT SrcElementAddress ;DWORD Flags ;DWORD ExceptionCode ;BYTE TargetId ;BYTE Lun ;WORD Reserved ;BYTE PrimaryVolumeID [36 ];BYTE AlternateVolumeID [36 ];}CHANGER_ELEMENT_STATUS ;
typedef struct _CHANGER_ELEMENT_STATUS {CHANGER_ELEMENT Element ;CHANGER_ELEMENT SrcElementAddress ;DWORD Flags ;DWORD ExceptionCode ;BYTE TargetId ;BYTE Lun ;WORD Reserved ;BYTE PrimaryVolumeID [36 ];BYTE AlternateVolumeID [36 ];}*PCHANGER_ELEMENT_STATUS ;

typedef struct _CHANGER_ELEMENT_STATUS_EX {CHANGER_ELEMENT Element ;CHANGER_ELEMENT SrcElementAddress ;DWORD Flags ;DWORD ExceptionCode ;BYTE TargetId ;BYTE Lun ;WORD Reserved ;BYTE PrimaryVolumeID [36 ];BYTE AlternateVolumeID [36 ];BYTE VendorIdentification [8 ];BYTE ProductIdentification [16 ];BYTE SerialNumber [32 ];}CHANGER_ELEMENT_STATUS_EX ;
typedef struct _CHANGER_ELEMENT_STATUS_EX {CHANGER_ELEMENT Element ;CHANGER_ELEMENT SrcElementAddress ;DWORD Flags ;DWORD ExceptionCode ;BYTE TargetId ;BYTE Lun ;WORD Reserved ;BYTE PrimaryVolumeID [36 ];BYTE AlternateVolumeID [36 ];BYTE VendorIdentification [8 ];BYTE ProductIdentification [16 ];BYTE SerialNumber [32 ];}*PCHANGER_ELEMENT_STATUS_EX ;

typedef struct _CHANGER_INITIALIZE_ELEMENT_STATUS {CHANGER_ELEMENT_LIST ElementList ;BOOLEAN BarCodeScan ;}CHANGER_INITIALIZE_ELEMENT_STATUS ;
typedef struct _CHANGER_INITIALIZE_ELEMENT_STATUS {CHANGER_ELEMENT_LIST ElementList ;BOOLEAN BarCodeScan ;}*PCHANGER_INITIALIZE_ELEMENT_STATUS ;

typedef struct _CHANGER_SET_POSITION {CHANGER_ELEMENT Transport ;CHANGER_ELEMENT Destination ;BOOLEAN Flip ;}CHANGER_SET_POSITION ;
typedef struct _CHANGER_SET_POSITION {CHANGER_ELEMENT Transport ;CHANGER_ELEMENT Destination ;BOOLEAN Flip ;}*PCHANGER_SET_POSITION ;

typedef struct _CHANGER_EXCHANGE_MEDIUM {CHANGER_ELEMENT Transport ;CHANGER_ELEMENT Source ;CHANGER_ELEMENT Destination1 ;CHANGER_ELEMENT Destination2 ;BOOLEAN Flip1 ;BOOLEAN Flip2 ;}CHANGER_EXCHANGE_MEDIUM ;
typedef struct _CHANGER_EXCHANGE_MEDIUM {CHANGER_ELEMENT Transport ;CHANGER_ELEMENT Source ;CHANGER_ELEMENT Destination1 ;CHANGER_ELEMENT Destination2 ;BOOLEAN Flip1 ;BOOLEAN Flip2 ;}*PCHANGER_EXCHANGE_MEDIUM ;

typedef struct _CHANGER_MOVE_MEDIUM {CHANGER_ELEMENT Transport ;CHANGER_ELEMENT Source ;CHANGER_ELEMENT Destination ;BOOLEAN Flip ;}CHANGER_MOVE_MEDIUM ;
typedef struct _CHANGER_MOVE_MEDIUM {CHANGER_ELEMENT Transport ;CHANGER_ELEMENT Source ;CHANGER_ELEMENT Destination ;BOOLEAN Flip ;}*PCHANGER_MOVE_MEDIUM ;

typedef struct _CHANGER_SEND_VOLUME_TAG_INFORMATION {CHANGER_ELEMENT StartingElement ;DWORD ActionCode ;BYTE VolumeIDTemplate [40 ];}CHANGER_SEND_VOLUME_TAG_INFORMATION ;
typedef struct _CHANGER_SEND_VOLUME_TAG_INFORMATION {CHANGER_ELEMENT StartingElement ;DWORD ActionCode ;BYTE VolumeIDTemplate [40 ];}*PCHANGER_SEND_VOLUME_TAG_INFORMATION ;

typedef struct _READ_ELEMENT_ADDRESS_INFO {DWORD NumberOfElements ;CHANGER_ELEMENT_STATUS ElementStatus [1 ];}READ_ELEMENT_ADDRESS_INFO ;
typedef struct _READ_ELEMENT_ADDRESS_INFO {DWORD NumberOfElements ;CHANGER_ELEMENT_STATUS ElementStatus [1 ];}*PREAD_ELEMENT_ADDRESS_INFO ;

typedef enum _CHANGER_DEVICE_PROBLEM_TYPE {DeviceProblemNone ,DeviceProblemHardware ,DeviceProblemCHMError ,DeviceProblemDoorOpen ,DeviceProblemCalibrationError ,DeviceProblemTargetFailure ,DeviceProblemCHMMoveError ,DeviceProblemCHMZeroError ,DeviceProblemCartridgeInsertError ,DeviceProblemPositionError ,DeviceProblemSensorError ,DeviceProblemCartridgeEjectError ,DeviceProblemGripperError ,DeviceProblemDriveError }CHANGER_DEVICE_PROBLEM_TYPE ;
typedef enum _CHANGER_DEVICE_PROBLEM_TYPE *PCHANGER_DEVICE_PROBLEM_TYPE ;

typedef struct _PATHNAME_BUFFER {DWORD PathNameLength ;WCHAR Name [1 ];}PATHNAME_BUFFER ;
typedef struct _PATHNAME_BUFFER {DWORD PathNameLength ;WCHAR Name [1 ];}*PPATHNAME_BUFFER ;

typedef struct _FSCTL_QUERY_FAT_BPB_BUFFER {BYTE First0x24BytesOfBootSector [36 ];}FSCTL_QUERY_FAT_BPB_BUFFER ;
typedef struct _FSCTL_QUERY_FAT_BPB_BUFFER {BYTE First0x24BytesOfBootSector [36 ];}*PFSCTL_QUERY_FAT_BPB_BUFFER ;

typedef struct {LARGE_INTEGER VolumeSerialNumber ;LARGE_INTEGER NumberSectors ;LARGE_INTEGER TotalClusters ;LARGE_INTEGER FreeClusters ;LARGE_INTEGER TotalReserved ;DWORD BytesPerSector ;DWORD BytesPerCluster ;DWORD BytesPerFileRecordSegment ;DWORD ClustersPerFileRecordSegment ;LARGE_INTEGER MftValidDataLength ;LARGE_INTEGER MftStartLcn ;LARGE_INTEGER Mft2StartLcn ;LARGE_INTEGER MftZoneStart ;LARGE_INTEGER MftZoneEnd ;}NTFS_VOLUME_DATA_BUFFER ;
typedef struct {LARGE_INTEGER VolumeSerialNumber ;LARGE_INTEGER NumberSectors ;LARGE_INTEGER TotalClusters ;LARGE_INTEGER FreeClusters ;LARGE_INTEGER TotalReserved ;DWORD BytesPerSector ;DWORD BytesPerCluster ;DWORD BytesPerFileRecordSegment ;DWORD ClustersPerFileRecordSegment ;LARGE_INTEGER MftValidDataLength ;LARGE_INTEGER MftStartLcn ;LARGE_INTEGER Mft2StartLcn ;LARGE_INTEGER MftZoneStart ;LARGE_INTEGER MftZoneEnd ;}*PNTFS_VOLUME_DATA_BUFFER ;

typedef struct {DWORD ByteCount ;WORD MajorVersion ;WORD MinorVersion ;}NTFS_EXTENDED_VOLUME_DATA ;
typedef struct {DWORD ByteCount ;WORD MajorVersion ;WORD MinorVersion ;}*PNTFS_EXTENDED_VOLUME_DATA ;

typedef struct {LARGE_INTEGER StartingLcn ;}STARTING_LCN_INPUT_BUFFER ;
typedef struct {LARGE_INTEGER StartingLcn ;}*PSTARTING_LCN_INPUT_BUFFER ;

typedef struct {LARGE_INTEGER StartingLcn ;LARGE_INTEGER BitmapSize ;BYTE Buffer [1 ];}VOLUME_BITMAP_BUFFER ;
typedef struct {LARGE_INTEGER StartingLcn ;LARGE_INTEGER BitmapSize ;BYTE Buffer [1 ];}*PVOLUME_BITMAP_BUFFER ;

typedef struct {LARGE_INTEGER StartingVcn ;}STARTING_VCN_INPUT_BUFFER ;
typedef struct {LARGE_INTEGER StartingVcn ;}*PSTARTING_VCN_INPUT_BUFFER ;

typedef struct RETRIEVAL_POINTERS_BUFFER {DWORD ExtentCount ;LARGE_INTEGER StartingVcn ;struct {LARGE_INTEGER NextVcn ;LARGE_INTEGER Lcn ;}Extents [1 ];}RETRIEVAL_POINTERS_BUFFER ;
typedef struct RETRIEVAL_POINTERS_BUFFER {DWORD ExtentCount ;LARGE_INTEGER StartingVcn ;struct {LARGE_INTEGER NextVcn ;LARGE_INTEGER Lcn ;}Extents [1 ];}*PRETRIEVAL_POINTERS_BUFFER ;

typedef struct {LARGE_INTEGER FileReferenceNumber ;}NTFS_FILE_RECORD_INPUT_BUFFER ;
typedef struct {LARGE_INTEGER FileReferenceNumber ;}*PNTFS_FILE_RECORD_INPUT_BUFFER ;

typedef struct {LARGE_INTEGER FileReferenceNumber ;DWORD FileRecordLength ;BYTE FileRecordBuffer [1 ];}NTFS_FILE_RECORD_OUTPUT_BUFFER ;
typedef struct {LARGE_INTEGER FileReferenceNumber ;DWORD FileRecordLength ;BYTE FileRecordBuffer [1 ];}*PNTFS_FILE_RECORD_OUTPUT_BUFFER ;

typedef struct {HANDLE FileHandle ;LARGE_INTEGER StartingVcn ;LARGE_INTEGER StartingLcn ;DWORD ClusterCount ;}MOVE_FILE_DATA ;
typedef struct {HANDLE FileHandle ;LARGE_INTEGER StartingVcn ;LARGE_INTEGER StartingLcn ;DWORD ClusterCount ;}*PMOVE_FILE_DATA ;

typedef struct _MOVE_FILE_DATA32 {UINT32 FileHandle ;LARGE_INTEGER StartingVcn ;LARGE_INTEGER StartingLcn ;DWORD ClusterCount ;}MOVE_FILE_DATA32 ;
typedef struct _MOVE_FILE_DATA32 {UINT32 FileHandle ;LARGE_INTEGER StartingVcn ;LARGE_INTEGER StartingLcn ;DWORD ClusterCount ;}*PMOVE_FILE_DATA32 ;

typedef struct {DWORD Restart ;SID Sid ;}FIND_BY_SID_DATA ;
typedef struct {DWORD Restart ;SID Sid ;}*PFIND_BY_SID_DATA ;

typedef struct {DWORD NextEntryOffset ;DWORD FileIndex ;DWORD FileNameLength ;WCHAR FileName [1 ];}FIND_BY_SID_OUTPUT ;
typedef struct {DWORD NextEntryOffset ;DWORD FileIndex ;DWORD FileNameLength ;WCHAR FileName [1 ];}*PFIND_BY_SID_OUTPUT ;

typedef struct {DWORDLONG StartFileReferenceNumber ;USN LowUsn ;USN HighUsn ;}MFT_ENUM_DATA ;
typedef struct {DWORDLONG StartFileReferenceNumber ;USN LowUsn ;USN HighUsn ;}*PMFT_ENUM_DATA ;

typedef struct {DWORDLONG MaximumSize ;DWORDLONG AllocationDelta ;}CREATE_USN_JOURNAL_DATA ;
typedef struct {DWORDLONG MaximumSize ;DWORDLONG AllocationDelta ;}*PCREATE_USN_JOURNAL_DATA ;

typedef struct {USN StartUsn ;DWORD ReasonMask ;DWORD ReturnOnlyOnClose ;DWORDLONG Timeout ;DWORDLONG BytesToWaitFor ;DWORDLONG UsnJournalID ;}READ_USN_JOURNAL_DATA ;
typedef struct {USN StartUsn ;DWORD ReasonMask ;DWORD ReturnOnlyOnClose ;DWORDLONG Timeout ;DWORDLONG BytesToWaitFor ;DWORDLONG UsnJournalID ;}*PREAD_USN_JOURNAL_DATA ;

typedef struct {DWORD RecordLength ;WORD MajorVersion ;WORD MinorVersion ;DWORDLONG FileReferenceNumber ;DWORDLONG ParentFileReferenceNumber ;USN Usn ;LARGE_INTEGER TimeStamp ;DWORD Reason ;DWORD SourceInfo ;DWORD SecurityId ;DWORD FileAttributes ;WORD FileNameLength ;WORD FileNameOffset ;WCHAR FileName [1 ];}USN_RECORD ;
typedef struct {DWORD RecordLength ;WORD MajorVersion ;WORD MinorVersion ;DWORDLONG FileReferenceNumber ;DWORDLONG ParentFileReferenceNumber ;USN Usn ;LARGE_INTEGER TimeStamp ;DWORD Reason ;DWORD SourceInfo ;DWORD SecurityId ;DWORD FileAttributes ;WORD FileNameLength ;WORD FileNameOffset ;WCHAR FileName [1 ];}*PUSN_RECORD ;

typedef struct {DWORDLONG UsnJournalID ;USN FirstUsn ;USN NextUsn ;USN LowestValidUsn ;USN MaxUsn ;DWORDLONG MaximumSize ;DWORDLONG AllocationDelta ;}USN_JOURNAL_DATA ;
typedef struct {DWORDLONG UsnJournalID ;USN FirstUsn ;USN NextUsn ;USN LowestValidUsn ;USN MaxUsn ;DWORDLONG MaximumSize ;DWORDLONG AllocationDelta ;}*PUSN_JOURNAL_DATA ;

typedef struct {DWORDLONG UsnJournalID ;DWORD DeleteFlags ;}DELETE_USN_JOURNAL_DATA ;
typedef struct {DWORDLONG UsnJournalID ;DWORD DeleteFlags ;}*PDELETE_USN_JOURNAL_DATA ;

typedef struct {DWORD UsnSourceInfo ;HANDLE VolumeHandle ;DWORD HandleInfo ;}MARK_HANDLE_INFO ;
typedef struct {DWORD UsnSourceInfo ;HANDLE VolumeHandle ;DWORD HandleInfo ;}*PMARK_HANDLE_INFO ;

typedef struct {DWORD UsnSourceInfo ;UINT32 VolumeHandle ;DWORD HandleInfo ;}MARK_HANDLE_INFO32 ;
typedef struct {DWORD UsnSourceInfo ;UINT32 VolumeHandle ;DWORD HandleInfo ;}*PMARK_HANDLE_INFO32 ;

typedef struct {ACCESS_MASK DesiredAccess ;DWORD SecurityIds [1 ];}BULK_SECURITY_TEST_DATA ;
typedef struct {ACCESS_MASK DesiredAccess ;DWORD SecurityIds [1 ];}*PBULK_SECURITY_TEST_DATA ;

typedef struct _FILE_PREFETCH {DWORD Type ;DWORD Count ;DWORDLONG Prefetch [1 ];}FILE_PREFETCH ;
typedef struct _FILE_PREFETCH {DWORD Type ;DWORD Count ;DWORDLONG Prefetch [1 ];}*PFILE_PREFETCH ;

typedef struct _FILESYSTEM_STATISTICS {WORD FileSystemType ;WORD Version ;DWORD SizeOfCompleteStructure ;DWORD UserFileReads ;DWORD UserFileReadBytes ;DWORD UserDiskReads ;DWORD UserFileWrites ;DWORD UserFileWriteBytes ;DWORD UserDiskWrites ;DWORD MetaDataReads ;DWORD MetaDataReadBytes ;DWORD MetaDataDiskReads ;DWORD MetaDataWrites ;DWORD MetaDataWriteBytes ;DWORD MetaDataDiskWrites ;}FILESYSTEM_STATISTICS ;
typedef struct _FILESYSTEM_STATISTICS {WORD FileSystemType ;WORD Version ;DWORD SizeOfCompleteStructure ;DWORD UserFileReads ;DWORD UserFileReadBytes ;DWORD UserDiskReads ;DWORD UserFileWrites ;DWORD UserFileWriteBytes ;DWORD UserDiskWrites ;DWORD MetaDataReads ;DWORD MetaDataReadBytes ;DWORD MetaDataDiskReads ;DWORD MetaDataWrites ;DWORD MetaDataWriteBytes ;DWORD MetaDataDiskWrites ;}*PFILESYSTEM_STATISTICS ;

typedef struct _FAT_STATISTICS {DWORD CreateHits ;DWORD SuccessfulCreates ;DWORD FailedCreates ;DWORD NonCachedReads ;DWORD NonCachedReadBytes ;DWORD NonCachedWrites ;DWORD NonCachedWriteBytes ;DWORD NonCachedDiskReads ;DWORD NonCachedDiskWrites ;}FAT_STATISTICS ;
typedef struct _FAT_STATISTICS {DWORD CreateHits ;DWORD SuccessfulCreates ;DWORD FailedCreates ;DWORD NonCachedReads ;DWORD NonCachedReadBytes ;DWORD NonCachedWrites ;DWORD NonCachedWriteBytes ;DWORD NonCachedDiskReads ;DWORD NonCachedDiskWrites ;}*PFAT_STATISTICS ;

typedef struct _EXFAT_STATISTICS {DWORD CreateHits ;DWORD SuccessfulCreates ;DWORD FailedCreates ;DWORD NonCachedReads ;DWORD NonCachedReadBytes ;DWORD NonCachedWrites ;DWORD NonCachedWriteBytes ;DWORD NonCachedDiskReads ;DWORD NonCachedDiskWrites ;}EXFAT_STATISTICS ;
typedef struct _EXFAT_STATISTICS {DWORD CreateHits ;DWORD SuccessfulCreates ;DWORD FailedCreates ;DWORD NonCachedReads ;DWORD NonCachedReadBytes ;DWORD NonCachedWrites ;DWORD NonCachedWriteBytes ;DWORD NonCachedDiskReads ;DWORD NonCachedDiskWrites ;}*PEXFAT_STATISTICS ;

typedef struct _NTFS_STATISTICS {DWORD LogFileFullExceptions ;DWORD OtherExceptions ;DWORD MftReads ;DWORD MftReadBytes ;DWORD MftWrites ;DWORD MftWriteBytes ;struct {WORD Write ;WORD Create ;WORD SetInfo ;WORD Flush ;}MftWritesUserLevel ;WORD MftWritesFlushForLogFileFull ;WORD MftWritesLazyWriter ;WORD MftWritesUserRequest ;DWORD Mft2Writes ;DWORD Mft2WriteBytes ;struct {WORD Write ;WORD Create ;WORD SetInfo ;WORD Flush ;}Mft2WritesUserLevel ;WORD Mft2WritesFlushForLogFileFull ;WORD Mft2WritesLazyWriter ;WORD Mft2WritesUserRequest ;DWORD RootIndexReads ;DWORD RootIndexReadBytes ;DWORD RootIndexWrites ;DWORD RootIndexWriteBytes ;DWORD BitmapReads ;DWORD BitmapReadBytes ;DWORD BitmapWrites ;DWORD BitmapWriteBytes ;WORD BitmapWritesFlushForLogFileFull ;WORD BitmapWritesLazyWriter ;WORD BitmapWritesUserRequest ;struct {WORD Write ;WORD Create ;WORD SetInfo ;}BitmapWritesUserLevel ;DWORD MftBitmapReads ;DWORD MftBitmapReadBytes ;DWORD MftBitmapWrites ;DWORD MftBitmapWriteBytes ;WORD MftBitmapWritesFlushForLogFileFull ;WORD MftBitmapWritesLazyWriter ;WORD MftBitmapWritesUserRequest ;struct {WORD Write ;WORD Create ;WORD SetInfo ;WORD Flush ;}MftBitmapWritesUserLevel ;DWORD UserIndexReads ;DWORD UserIndexReadBytes ;DWORD UserIndexWrites ;DWORD UserIndexWriteBytes ;DWORD LogFileReads ;DWORD LogFileReadBytes ;DWORD LogFileWrites ;DWORD LogFileWriteBytes ;struct {DWORD Calls ;DWORD Clusters ;DWORD Hints ;DWORD RunsReturned ;DWORD HintsHonored ;DWORD HintsClusters ;DWORD Cache ;DWORD CacheClusters ;DWORD CacheMiss ;DWORD CacheMissClusters ;}Allocate ;}NTFS_STATISTICS ;
typedef struct _NTFS_STATISTICS {DWORD LogFileFullExceptions ;DWORD OtherExceptions ;DWORD MftReads ;DWORD MftReadBytes ;DWORD MftWrites ;DWORD MftWriteBytes ;struct {WORD Write ;WORD Create ;WORD SetInfo ;WORD Flush ;}MftWritesUserLevel ;WORD MftWritesFlushForLogFileFull ;WORD MftWritesLazyWriter ;WORD MftWritesUserRequest ;DWORD Mft2Writes ;DWORD Mft2WriteBytes ;struct {WORD Write ;WORD Create ;WORD SetInfo ;WORD Flush ;}Mft2WritesUserLevel ;WORD Mft2WritesFlushForLogFileFull ;WORD Mft2WritesLazyWriter ;WORD Mft2WritesUserRequest ;DWORD RootIndexReads ;DWORD RootIndexReadBytes ;DWORD RootIndexWrites ;DWORD RootIndexWriteBytes ;DWORD BitmapReads ;DWORD BitmapReadBytes ;DWORD BitmapWrites ;DWORD BitmapWriteBytes ;WORD BitmapWritesFlushForLogFileFull ;WORD BitmapWritesLazyWriter ;WORD BitmapWritesUserRequest ;struct {WORD Write ;WORD Create ;WORD SetInfo ;}BitmapWritesUserLevel ;DWORD MftBitmapReads ;DWORD MftBitmapReadBytes ;DWORD MftBitmapWrites ;DWORD MftBitmapWriteBytes ;WORD MftBitmapWritesFlushForLogFileFull ;WORD MftBitmapWritesLazyWriter ;WORD MftBitmapWritesUserRequest ;struct {WORD Write ;WORD Create ;WORD SetInfo ;WORD Flush ;}MftBitmapWritesUserLevel ;DWORD UserIndexReads ;DWORD UserIndexReadBytes ;DWORD UserIndexWrites ;DWORD UserIndexWriteBytes ;DWORD LogFileReads ;DWORD LogFileReadBytes ;DWORD LogFileWrites ;DWORD LogFileWriteBytes ;struct {DWORD Calls ;DWORD Clusters ;DWORD Hints ;DWORD RunsReturned ;DWORD HintsHonored ;DWORD HintsClusters ;DWORD Cache ;DWORD CacheClusters ;DWORD CacheMiss ;DWORD CacheMissClusters ;}Allocate ;}*PNTFS_STATISTICS ;

typedef struct _FILE_OBJECTID_BUFFER {BYTE ObjectId [16 ];union {struct {BYTE BirthVolumeId [16 ];BYTE BirthObjectId [16 ];BYTE DomainId [16 ];};BYTE ExtendedInfo [48 ];};}FILE_OBJECTID_BUFFER ;
typedef struct _FILE_OBJECTID_BUFFER {BYTE ObjectId [16 ];union {struct {BYTE BirthVolumeId [16 ];BYTE BirthObjectId [16 ];BYTE DomainId [16 ];};BYTE ExtendedInfo [48 ];};}*PFILE_OBJECTID_BUFFER ;

typedef struct _FILE_SET_SPARSE_BUFFER {BOOLEAN SetSparse ;}FILE_SET_SPARSE_BUFFER ;
typedef struct _FILE_SET_SPARSE_BUFFER {BOOLEAN SetSparse ;}*PFILE_SET_SPARSE_BUFFER ;

typedef struct _FILE_ZERO_DATA_INFORMATION {LARGE_INTEGER FileOffset ;LARGE_INTEGER BeyondFinalZero ;}FILE_ZERO_DATA_INFORMATION ;
typedef struct _FILE_ZERO_DATA_INFORMATION {LARGE_INTEGER FileOffset ;LARGE_INTEGER BeyondFinalZero ;}*PFILE_ZERO_DATA_INFORMATION ;

typedef struct _FILE_ALLOCATED_RANGE_BUFFER {LARGE_INTEGER FileOffset ;LARGE_INTEGER Length ;}FILE_ALLOCATED_RANGE_BUFFER ;
typedef struct _FILE_ALLOCATED_RANGE_BUFFER {LARGE_INTEGER FileOffset ;LARGE_INTEGER Length ;}*PFILE_ALLOCATED_RANGE_BUFFER ;

typedef struct _ENCRYPTION_BUFFER {DWORD EncryptionOperation ;BYTE Private [1 ];}ENCRYPTION_BUFFER ;
typedef struct _ENCRYPTION_BUFFER {DWORD EncryptionOperation ;BYTE Private [1 ];}*PENCRYPTION_BUFFER ;

typedef struct _DECRYPTION_STATUS_BUFFER {BOOLEAN NoEncryptedStreams ;}DECRYPTION_STATUS_BUFFER ;
typedef struct _DECRYPTION_STATUS_BUFFER {BOOLEAN NoEncryptedStreams ;}*PDECRYPTION_STATUS_BUFFER ;

typedef struct _REQUEST_RAW_ENCRYPTED_DATA {LONGLONG FileOffset ;DWORD Length ;}REQUEST_RAW_ENCRYPTED_DATA ;
typedef struct _REQUEST_RAW_ENCRYPTED_DATA {LONGLONG FileOffset ;DWORD Length ;}*PREQUEST_RAW_ENCRYPTED_DATA ;

typedef struct _ENCRYPTED_DATA_INFO {DWORDLONG StartingFileOffset ;DWORD OutputBufferOffset ;DWORD BytesWithinFileSize ;DWORD BytesWithinValidDataLength ;WORD CompressionFormat ;BYTE DataUnitShift ;BYTE ChunkShift ;BYTE ClusterShift ;BYTE EncryptionFormat ;WORD NumberOfDataBlocks ;DWORD DataBlockSize [1 ];}ENCRYPTED_DATA_INFO ;
typedef ENCRYPTED_DATA_INFO *PENCRYPTED_DATA_INFO ;
typedef struct _PLEX_READ_DATA_REQUEST {LARGE_INTEGER ByteOffset ;DWORD ByteLength ;DWORD PlexNumber ;}PLEX_READ_DATA_REQUEST ;
typedef struct _PLEX_READ_DATA_REQUEST {LARGE_INTEGER ByteOffset ;DWORD ByteLength ;DWORD PlexNumber ;}*PPLEX_READ_DATA_REQUEST ;

typedef struct _SI_COPYFILE {DWORD SourceFileNameLength ;DWORD DestinationFileNameLength ;DWORD Flags ;WCHAR FileNameBuffer [1 ];}SI_COPYFILE ;
typedef struct _SI_COPYFILE {DWORD SourceFileNameLength ;DWORD DestinationFileNameLength ;DWORD Flags ;WCHAR FileNameBuffer [1 ];}*PSI_COPYFILE ;

typedef struct _STORAGE_DESCRIPTOR_HEADER {DWORD Version ;DWORD Size ;}STORAGE_DESCRIPTOR_HEADER ;
typedef struct _STORAGE_DESCRIPTOR_HEADER {DWORD Version ;DWORD Size ;}*PSTORAGE_DESCRIPTOR_HEADER ;

typedef enum _STORAGE_PROPERTY_ID {StorageDeviceProperty =0 ,StorageAdapterProperty =1 ,StorageDeviceIdProperty =2 ,StorageDeviceUniqueIdProperty =3 ,StorageDeviceWriteCacheProperty =4 ,StorageMiniportProperty =5 ,StorageAccessAlignmentProperty =6 ,StorageDeviceSeekPenaltyProperty =7 ,StorageDeviceTrimProperty =8 }STORAGE_PROPERTY_ID ;
typedef enum _STORAGE_PROPERTY_ID *PSTORAGE_PROPERTY_ID ;

typedef enum _STORAGE_QUERY_TYPE {PropertyStandardQuery =0 ,PropertyExistsQuery =1 ,PropertyMaskQuery =2 ,PropertyQueryMaxDefined =3 }STORAGE_QUERY_TYPE ;
typedef enum _STORAGE_QUERY_TYPE *PSTORAGE_QUERY_TYPE ;

typedef struct _STORAGE_PROPERTY_QUERY {STORAGE_PROPERTY_ID PropertyId ;STORAGE_QUERY_TYPE QueryType ;BYTE AdditionalParameters [1 ];}STORAGE_PROPERTY_QUERY ;
typedef struct _STORAGE_PROPERTY_QUERY {STORAGE_PROPERTY_ID PropertyId ;STORAGE_QUERY_TYPE QueryType ;BYTE AdditionalParameters [1 ];}*PSTORAGE_PROPERTY_QUERY ;

typedef struct _STORAGE_DEVICE_DESCRIPTOR {DWORD Version ;DWORD Size ;BYTE DeviceType ;BYTE DeviceTypeModifier ;BOOLEAN RemovableMedia ;BOOLEAN CommandQueueing ;DWORD VendorIdOffset ;DWORD ProductIdOffset ;DWORD ProductRevisionOffset ;DWORD SerialNumberOffset ;STORAGE_BUS_TYPE BusType ;DWORD RawPropertiesLength ;BYTE RawDeviceProperties [1 ];}STORAGE_DEVICE_DESCRIPTOR ;
typedef struct _STORAGE_DEVICE_DESCRIPTOR {DWORD Version ;DWORD Size ;BYTE DeviceType ;BYTE DeviceTypeModifier ;BOOLEAN RemovableMedia ;BOOLEAN CommandQueueing ;DWORD VendorIdOffset ;DWORD ProductIdOffset ;DWORD ProductRevisionOffset ;DWORD SerialNumberOffset ;STORAGE_BUS_TYPE BusType ;DWORD RawPropertiesLength ;BYTE RawDeviceProperties [1 ];}*PSTORAGE_DEVICE_DESCRIPTOR ;

typedef struct _STORAGE_ADAPTER_DESCRIPTOR {DWORD Version ;DWORD Size ;DWORD MaximumTransferLength ;DWORD MaximumPhysicalPages ;DWORD AlignmentMask ;BOOLEAN AdapterUsesPio ;BOOLEAN AdapterScansDown ;BOOLEAN CommandQueueing ;BOOLEAN AcceleratedTransfer ;BYTE BusType ;WORD BusMajorVersion ;WORD BusMinorVersion ;}STORAGE_ADAPTER_DESCRIPTOR ;
typedef struct _STORAGE_ADAPTER_DESCRIPTOR {DWORD Version ;DWORD Size ;DWORD MaximumTransferLength ;DWORD MaximumPhysicalPages ;DWORD AlignmentMask ;BOOLEAN AdapterUsesPio ;BOOLEAN AdapterScansDown ;BOOLEAN CommandQueueing ;BOOLEAN AcceleratedTransfer ;BYTE BusType ;WORD BusMajorVersion ;WORD BusMinorVersion ;}*PSTORAGE_ADAPTER_DESCRIPTOR ;

typedef struct _STORAGE_DEVICE_ID_DESCRIPTOR {DWORD Version ;DWORD Size ;DWORD NumberOfIdentifiers ;BYTE Identifiers [1 ];}STORAGE_DEVICE_ID_DESCRIPTOR ;
typedef struct _STORAGE_DEVICE_ID_DESCRIPTOR {DWORD Version ;DWORD Size ;DWORD NumberOfIdentifiers ;BYTE Identifiers [1 ];}*PSTORAGE_DEVICE_ID_DESCRIPTOR ;

typedef struct _VOLUME_GET_GPT_ATTRIBUTES_INFORMATION {ULONGLONG GptAttributes ;}VOLUME_GET_GPT_ATTRIBUTES_INFORMATION ;
typedef struct _VOLUME_GET_GPT_ATTRIBUTES_INFORMATION {ULONGLONG GptAttributes ;}*PVOLUME_GET_GPT_ATTRIBUTES_INFORMATION ;

typedef struct _DISK_EXTENT {DWORD DiskNumber ;LARGE_INTEGER StartingOffset ;LARGE_INTEGER ExtentLength ;}DISK_EXTENT ;
typedef struct _DISK_EXTENT {DWORD DiskNumber ;LARGE_INTEGER StartingOffset ;LARGE_INTEGER ExtentLength ;}*PDISK_EXTENT ;

typedef struct _VOLUME_DISK_EXTENTS {DWORD NumberOfDiskExtents ;DISK_EXTENT Extents [1 ];}VOLUME_DISK_EXTENTS ;
typedef struct _VOLUME_DISK_EXTENTS {DWORD NumberOfDiskExtents ;DISK_EXTENT Extents [1 ];}*PVOLUME_DISK_EXTENTS ;

// m:\mingw\x86_64-w64-mingw32\include\winsmcrd.h

typedef WORD UWORD ;
typedef struct _SCARD_IO_REQUEST {DWORD dwProtocol ;DWORD cbPciLength ;}SCARD_IO_REQUEST ;
typedef struct _SCARD_IO_REQUEST {DWORD dwProtocol ;DWORD cbPciLength ;}*PSCARD_IO_REQUEST ;
typedef struct _SCARD_IO_REQUEST {DWORD dwProtocol ;DWORD cbPciLength ;}*LPSCARD_IO_REQUEST ;

typedef const SCARD_IO_REQUEST *LPCSCARD_IO_REQUEST ;
typedef struct {BYTE bCla ,bIns ,bP1 ,bP2 ,bP3 ;}SCARD_T0_COMMAND ;
typedef struct {BYTE bCla ,bIns ,bP1 ,bP2 ,bP3 ;}*LPSCARD_T0_COMMAND ;

typedef struct {SCARD_IO_REQUEST ioRequest ;BYTE bSw1 ,bSw2 ;union {SCARD_T0_COMMAND CmdBytes ;BYTE rgbHeader [5 ];};}SCARD_T0_REQUEST ;
typedef SCARD_T0_REQUEST *PSCARD_T0_REQUEST ;
typedef SCARD_T0_REQUEST *LPSCARD_T0_REQUEST ;

typedef struct {SCARD_IO_REQUEST ioRequest ;}SCARD_T1_REQUEST ;
typedef SCARD_T1_REQUEST *PSCARD_T1_REQUEST ;
typedef SCARD_T1_REQUEST *LPSCARD_T1_REQUEST ;

// m:\mingw\x86_64-w64-mingw32\include\winscard.h

typedef const BYTE *LPCBYTE ;
extern const SCARD_IO_REQUEST g_rgSCardT0Pci ,g_rgSCardT1Pci ,g_rgSCardRawPci ;
typedef ULONG_PTR SCARDCONTEXT ;
typedef SCARDCONTEXT *PSCARDCONTEXT ;
typedef SCARDCONTEXT *LPSCARDCONTEXT ;

typedef ULONG_PTR SCARDHANDLE ;
typedef SCARDHANDLE *PSCARDHANDLE ;
typedef SCARDHANDLE *LPSCARDHANDLE ;

extern LONG SCardEstablishContext (DWORD dwScope ,LPCVOID pvReserved1 ,LPCVOID pvReserved2 ,LPSCARDCONTEXT phContext );
extern LONG SCardReleaseContext (SCARDCONTEXT hContext );
extern LONG SCardIsValidContext (SCARDCONTEXT hContext );
extern LONG SCardListReaderGroupsA (SCARDCONTEXT hContext ,LPSTR mszGroups ,LPDWORD pcchGroups );
extern LONG SCardListReaderGroupsW (SCARDCONTEXT hContext ,LPWSTR mszGroups ,LPDWORD pcchGroups );
extern LONG SCardListReadersA (SCARDCONTEXT hContext ,LPCSTR mszGroups ,LPSTR mszReaders ,LPDWORD pcchReaders );
extern LONG SCardListReadersW (SCARDCONTEXT hContext ,LPCWSTR mszGroups ,LPWSTR mszReaders ,LPDWORD pcchReaders );
extern LONG SCardListCardsA (SCARDCONTEXT hContext ,LPCBYTE pbAtr ,LPCGUID rgquidInterfaces ,DWORD cguidInterfaceCount ,LPSTR mszCards ,LPDWORD pcchCards );
extern LONG SCardListCardsW (SCARDCONTEXT hContext ,LPCBYTE pbAtr ,LPCGUID rgquidInterfaces ,DWORD cguidInterfaceCount ,LPWSTR mszCards ,LPDWORD pcchCards );
extern LONG SCardListInterfacesA (SCARDCONTEXT hContext ,LPCSTR szCard ,LPGUID pguidInterfaces ,LPDWORD pcguidInterfaces );
extern LONG SCardListInterfacesW (SCARDCONTEXT hContext ,LPCWSTR szCard ,LPGUID pguidInterfaces ,LPDWORD pcguidInterfaces );
extern LONG SCardGetProviderIdA (SCARDCONTEXT hContext ,LPCSTR szCard ,LPGUID pguidProviderId );
extern LONG SCardGetProviderIdW (SCARDCONTEXT hContext ,LPCWSTR szCard ,LPGUID pguidProviderId );
extern LONG SCardGetCardTypeProviderNameA (SCARDCONTEXT hContext ,LPCSTR szCardName ,DWORD dwProviderId ,LPSTR szProvider ,LPDWORD pcchProvider );
extern LONG SCardGetCardTypeProviderNameW (SCARDCONTEXT hContext ,LPCWSTR szCardName ,DWORD dwProviderId ,LPWSTR szProvider ,LPDWORD pcchProvider );
extern LONG SCardIntroduceReaderGroupA (SCARDCONTEXT hContext ,LPCSTR szGroupName );
extern LONG SCardIntroduceReaderGroupW (SCARDCONTEXT hContext ,LPCWSTR szGroupName );
extern LONG SCardForgetReaderGroupA (SCARDCONTEXT hContext ,LPCSTR szGroupName );
extern LONG SCardForgetReaderGroupW (SCARDCONTEXT hContext ,LPCWSTR szGroupName );
extern LONG SCardIntroduceReaderA (SCARDCONTEXT hContext ,LPCSTR szReaderName ,LPCSTR szDeviceName );
extern LONG SCardIntroduceReaderW (SCARDCONTEXT hContext ,LPCWSTR szReaderName ,LPCWSTR szDeviceName );
extern LONG SCardForgetReaderA (SCARDCONTEXT hContext ,LPCSTR szReaderName );
extern LONG SCardForgetReaderW (SCARDCONTEXT hContext ,LPCWSTR szReaderName );
extern LONG SCardAddReaderToGroupA (SCARDCONTEXT hContext ,LPCSTR szReaderName ,LPCSTR szGroupName );
extern LONG SCardAddReaderToGroupW (SCARDCONTEXT hContext ,LPCWSTR szReaderName ,LPCWSTR szGroupName );
extern LONG SCardRemoveReaderFromGroupA (SCARDCONTEXT hContext ,LPCSTR szReaderName ,LPCSTR szGroupName );
extern LONG SCardRemoveReaderFromGroupW (SCARDCONTEXT hContext ,LPCWSTR szReaderName ,LPCWSTR szGroupName );
extern LONG SCardIntroduceCardTypeA (SCARDCONTEXT hContext ,LPCSTR szCardName ,LPCGUID pguidPrimaryProvider ,LPCGUID rgguidInterfaces ,DWORD dwInterfaceCount ,LPCBYTE pbAtr ,LPCBYTE pbAtrMask ,DWORD cbAtrLen );
extern LONG SCardIntroduceCardTypeW (SCARDCONTEXT hContext ,LPCWSTR szCardName ,LPCGUID pguidPrimaryProvider ,LPCGUID rgguidInterfaces ,DWORD dwInterfaceCount ,LPCBYTE pbAtr ,LPCBYTE pbAtrMask ,DWORD cbAtrLen );
extern LONG SCardSetCardTypeProviderNameA (SCARDCONTEXT hContext ,LPCSTR szCardName ,DWORD dwProviderId ,LPCSTR szProvider );
extern LONG SCardSetCardTypeProviderNameW (SCARDCONTEXT hContext ,LPCWSTR szCardName ,DWORD dwProviderId ,LPCWSTR szProvider );
extern LONG SCardForgetCardTypeA (SCARDCONTEXT hContext ,LPCSTR szCardName );
extern LONG SCardForgetCardTypeW (SCARDCONTEXT hContext ,LPCWSTR szCardName );
extern LONG SCardFreeMemory (SCARDCONTEXT hContext ,LPCVOID pvMem );
extern HANDLE SCardAccessStartedEvent (void );
extern void SCardReleaseStartedEvent (void );
typedef struct {LPCSTR szReader ;LPVOID pvUserData ;DWORD dwCurrentState ;DWORD dwEventState ;DWORD cbAtr ;BYTE rgbAtr [36 ];}SCARD_READERSTATEA ;
typedef struct {LPCSTR szReader ;LPVOID pvUserData ;DWORD dwCurrentState ;DWORD dwEventState ;DWORD cbAtr ;BYTE rgbAtr [36 ];}*PSCARD_READERSTATEA ;
typedef struct {LPCSTR szReader ;LPVOID pvUserData ;DWORD dwCurrentState ;DWORD dwEventState ;DWORD cbAtr ;BYTE rgbAtr [36 ];}*LPSCARD_READERSTATEA ;

typedef struct {LPCWSTR szReader ;LPVOID pvUserData ;DWORD dwCurrentState ;DWORD dwEventState ;DWORD cbAtr ;BYTE rgbAtr [36 ];}SCARD_READERSTATEW ;
typedef struct {LPCWSTR szReader ;LPVOID pvUserData ;DWORD dwCurrentState ;DWORD dwEventState ;DWORD cbAtr ;BYTE rgbAtr [36 ];}*PSCARD_READERSTATEW ;
typedef struct {LPCWSTR szReader ;LPVOID pvUserData ;DWORD dwCurrentState ;DWORD dwEventState ;DWORD cbAtr ;BYTE rgbAtr [36 ];}*LPSCARD_READERSTATEW ;

typedef SCARD_READERSTATEA SCARD_READERSTATE ;
typedef PSCARD_READERSTATEA PSCARD_READERSTATE ;
typedef LPSCARD_READERSTATEA LPSCARD_READERSTATE ;
extern LONG SCardLocateCardsA (SCARDCONTEXT hContext ,LPCSTR mszCards ,LPSCARD_READERSTATEA rgReaderStates ,DWORD cReaders );
extern LONG SCardLocateCardsW (SCARDCONTEXT hContext ,LPCWSTR mszCards ,LPSCARD_READERSTATEW rgReaderStates ,DWORD cReaders );
typedef struct _SCARD_ATRMASK {DWORD cbAtr ;BYTE rgbAtr [36 ];BYTE rgbMask [36 ];}SCARD_ATRMASK ;
typedef struct _SCARD_ATRMASK {DWORD cbAtr ;BYTE rgbAtr [36 ];BYTE rgbMask [36 ];}*PSCARD_ATRMASK ;
typedef struct _SCARD_ATRMASK {DWORD cbAtr ;BYTE rgbAtr [36 ];BYTE rgbMask [36 ];}*LPSCARD_ATRMASK ;

extern LONG SCardLocateCardsByATRA (SCARDCONTEXT hContext ,LPSCARD_ATRMASK rgAtrMasks ,DWORD cAtrs ,LPSCARD_READERSTATEA rgReaderStates ,DWORD cReaders );
extern LONG SCardLocateCardsByATRW (SCARDCONTEXT hContext ,LPSCARD_ATRMASK rgAtrMasks ,DWORD cAtrs ,LPSCARD_READERSTATEW rgReaderStates ,DWORD cReaders );
extern LONG SCardGetStatusChangeA (SCARDCONTEXT hContext ,DWORD dwTimeout ,LPSCARD_READERSTATEA rgReaderStates ,DWORD cReaders );
extern LONG SCardGetStatusChangeW (SCARDCONTEXT hContext ,DWORD dwTimeout ,LPSCARD_READERSTATEW rgReaderStates ,DWORD cReaders );
extern LONG SCardCancel (SCARDCONTEXT hContext );
extern LONG SCardConnectA (SCARDCONTEXT hContext ,LPCSTR szReader ,DWORD dwShareMode ,DWORD dwPreferredProtocols ,LPSCARDHANDLE phCard ,LPDWORD pdwActiveProtocol );
extern LONG SCardConnectW (SCARDCONTEXT hContext ,LPCWSTR szReader ,DWORD dwShareMode ,DWORD dwPreferredProtocols ,LPSCARDHANDLE phCard ,LPDWORD pdwActiveProtocol );
extern LONG SCardReconnect (SCARDHANDLE hCard ,DWORD dwShareMode ,DWORD dwPreferredProtocols ,DWORD dwInitialization ,LPDWORD pdwActiveProtocol );
extern LONG SCardDisconnect (SCARDHANDLE hCard ,DWORD dwDisposition );
extern LONG SCardBeginTransaction (SCARDHANDLE hCard );
extern LONG SCardEndTransaction (SCARDHANDLE hCard ,DWORD dwDisposition );
extern LONG SCardCancelTransaction (SCARDHANDLE hCard );
extern LONG SCardState (SCARDHANDLE hCard ,LPDWORD pdwState ,LPDWORD pdwProtocol ,LPBYTE pbAtr ,LPDWORD pcbAtrLen );
extern LONG SCardStatusA (SCARDHANDLE hCard ,LPSTR szReaderName ,LPDWORD pcchReaderLen ,LPDWORD pdwState ,LPDWORD pdwProtocol ,LPBYTE pbAtr ,LPDWORD pcbAtrLen );
extern LONG SCardStatusW (SCARDHANDLE hCard ,LPWSTR szReaderName ,LPDWORD pcchReaderLen ,LPDWORD pdwState ,LPDWORD pdwProtocol ,LPBYTE pbAtr ,LPDWORD pcbAtrLen );
extern LONG SCardTransmit (SCARDHANDLE hCard ,LPCSCARD_IO_REQUEST pioSendPci ,LPCBYTE pbSendBuffer ,DWORD cbSendLength ,LPSCARD_IO_REQUEST pioRecvPci ,LPBYTE pbRecvBuffer ,LPDWORD pcbRecvLength );
extern LONG SCardControl (SCARDHANDLE hCard ,DWORD dwControlCode ,LPCVOID lpInBuffer ,DWORD nInBufferSize ,LPVOID lpOutBuffer ,DWORD nOutBufferSize ,LPDWORD lpBytesReturned );
extern LONG SCardGetAttrib (SCARDHANDLE hCard ,DWORD dwAttrId ,LPBYTE pbAttr ,LPDWORD pcbAttrLen );
extern LONG SCardSetAttrib (SCARDHANDLE hCard ,DWORD dwAttrId ,LPCBYTE pbAttr ,DWORD cbAttrLen );
typedef SCARDHANDLE (*LPOCNCONNPROCA )(SCARDCONTEXT ,LPSTR ,LPSTR ,PVOID );
typedef SCARDHANDLE (*LPOCNCONNPROCW )(SCARDCONTEXT ,LPWSTR ,LPWSTR ,PVOID );
typedef WINBOOL (*LPOCNCHKPROC )(SCARDCONTEXT ,SCARDHANDLE ,PVOID );
typedef void (*LPOCNDSCPROC )(SCARDCONTEXT ,SCARDHANDLE ,PVOID );
typedef struct {DWORD dwStructSize ;LPSTR lpstrGroupNames ;DWORD nMaxGroupNames ;LPCGUID rgguidInterfaces ;DWORD cguidInterfaces ;LPSTR lpstrCardNames ;DWORD nMaxCardNames ;LPOCNCHKPROC lpfnCheck ;LPOCNCONNPROCA lpfnConnect ;LPOCNDSCPROC lpfnDisconnect ;LPVOID pvUserData ;DWORD dwShareMode ;DWORD dwPreferredProtocols ;}OPENCARD_SEARCH_CRITERIAA ;
typedef struct {DWORD dwStructSize ;LPSTR lpstrGroupNames ;DWORD nMaxGroupNames ;LPCGUID rgguidInterfaces ;DWORD cguidInterfaces ;LPSTR lpstrCardNames ;DWORD nMaxCardNames ;LPOCNCHKPROC lpfnCheck ;LPOCNCONNPROCA lpfnConnect ;LPOCNDSCPROC lpfnDisconnect ;LPVOID pvUserData ;DWORD dwShareMode ;DWORD dwPreferredProtocols ;}*POPENCARD_SEARCH_CRITERIAA ;
typedef struct {DWORD dwStructSize ;LPSTR lpstrGroupNames ;DWORD nMaxGroupNames ;LPCGUID rgguidInterfaces ;DWORD cguidInterfaces ;LPSTR lpstrCardNames ;DWORD nMaxCardNames ;LPOCNCHKPROC lpfnCheck ;LPOCNCONNPROCA lpfnConnect ;LPOCNDSCPROC lpfnDisconnect ;LPVOID pvUserData ;DWORD dwShareMode ;DWORD dwPreferredProtocols ;}*LPOPENCARD_SEARCH_CRITERIAA ;

typedef struct {DWORD dwStructSize ;LPWSTR lpstrGroupNames ;DWORD nMaxGroupNames ;LPCGUID rgguidInterfaces ;DWORD cguidInterfaces ;LPWSTR lpstrCardNames ;DWORD nMaxCardNames ;LPOCNCHKPROC lpfnCheck ;LPOCNCONNPROCW lpfnConnect ;LPOCNDSCPROC lpfnDisconnect ;LPVOID pvUserData ;DWORD dwShareMode ;DWORD dwPreferredProtocols ;}OPENCARD_SEARCH_CRITERIAW ;
typedef struct {DWORD dwStructSize ;LPWSTR lpstrGroupNames ;DWORD nMaxGroupNames ;LPCGUID rgguidInterfaces ;DWORD cguidInterfaces ;LPWSTR lpstrCardNames ;DWORD nMaxCardNames ;LPOCNCHKPROC lpfnCheck ;LPOCNCONNPROCW lpfnConnect ;LPOCNDSCPROC lpfnDisconnect ;LPVOID pvUserData ;DWORD dwShareMode ;DWORD dwPreferredProtocols ;}*POPENCARD_SEARCH_CRITERIAW ;
typedef struct {DWORD dwStructSize ;LPWSTR lpstrGroupNames ;DWORD nMaxGroupNames ;LPCGUID rgguidInterfaces ;DWORD cguidInterfaces ;LPWSTR lpstrCardNames ;DWORD nMaxCardNames ;LPOCNCHKPROC lpfnCheck ;LPOCNCONNPROCW lpfnConnect ;LPOCNDSCPROC lpfnDisconnect ;LPVOID pvUserData ;DWORD dwShareMode ;DWORD dwPreferredProtocols ;}*LPOPENCARD_SEARCH_CRITERIAW ;

typedef OPENCARD_SEARCH_CRITERIAA OPENCARD_SEARCH_CRITERIA ;
typedef POPENCARD_SEARCH_CRITERIAA POPENCARD_SEARCH_CRITERIA ;
typedef LPOPENCARD_SEARCH_CRITERIAA LPOPENCARD_SEARCH_CRITERIA ;
typedef struct {DWORD dwStructSize ;SCARDCONTEXT hSCardContext ;HWND hwndOwner ;DWORD dwFlags ;LPCSTR lpstrTitle ;LPCSTR lpstrSearchDesc ;HICON hIcon ;POPENCARD_SEARCH_CRITERIAA pOpenCardSearchCriteria ;LPOCNCONNPROCA lpfnConnect ;LPVOID pvUserData ;DWORD dwShareMode ;DWORD dwPreferredProtocols ;LPSTR lpstrRdr ;DWORD nMaxRdr ;LPSTR lpstrCard ;DWORD nMaxCard ;DWORD dwActiveProtocol ;SCARDHANDLE hCardHandle ;}OPENCARDNAME_EXA ;
typedef struct {DWORD dwStructSize ;SCARDCONTEXT hSCardContext ;HWND hwndOwner ;DWORD dwFlags ;LPCSTR lpstrTitle ;LPCSTR lpstrSearchDesc ;HICON hIcon ;POPENCARD_SEARCH_CRITERIAA pOpenCardSearchCriteria ;LPOCNCONNPROCA lpfnConnect ;LPVOID pvUserData ;DWORD dwShareMode ;DWORD dwPreferredProtocols ;LPSTR lpstrRdr ;DWORD nMaxRdr ;LPSTR lpstrCard ;DWORD nMaxCard ;DWORD dwActiveProtocol ;SCARDHANDLE hCardHandle ;}*POPENCARDNAME_EXA ;
typedef struct {DWORD dwStructSize ;SCARDCONTEXT hSCardContext ;HWND hwndOwner ;DWORD dwFlags ;LPCSTR lpstrTitle ;LPCSTR lpstrSearchDesc ;HICON hIcon ;POPENCARD_SEARCH_CRITERIAA pOpenCardSearchCriteria ;LPOCNCONNPROCA lpfnConnect ;LPVOID pvUserData ;DWORD dwShareMode ;DWORD dwPreferredProtocols ;LPSTR lpstrRdr ;DWORD nMaxRdr ;LPSTR lpstrCard ;DWORD nMaxCard ;DWORD dwActiveProtocol ;SCARDHANDLE hCardHandle ;}*LPOPENCARDNAME_EXA ;

typedef struct {DWORD dwStructSize ;SCARDCONTEXT hSCardContext ;HWND hwndOwner ;DWORD dwFlags ;LPCWSTR lpstrTitle ;LPCWSTR lpstrSearchDesc ;HICON hIcon ;POPENCARD_SEARCH_CRITERIAW pOpenCardSearchCriteria ;LPOCNCONNPROCW lpfnConnect ;LPVOID pvUserData ;DWORD dwShareMode ;DWORD dwPreferredProtocols ;LPWSTR lpstrRdr ;DWORD nMaxRdr ;LPWSTR lpstrCard ;DWORD nMaxCard ;DWORD dwActiveProtocol ;SCARDHANDLE hCardHandle ;}OPENCARDNAME_EXW ;
typedef struct {DWORD dwStructSize ;SCARDCONTEXT hSCardContext ;HWND hwndOwner ;DWORD dwFlags ;LPCWSTR lpstrTitle ;LPCWSTR lpstrSearchDesc ;HICON hIcon ;POPENCARD_SEARCH_CRITERIAW pOpenCardSearchCriteria ;LPOCNCONNPROCW lpfnConnect ;LPVOID pvUserData ;DWORD dwShareMode ;DWORD dwPreferredProtocols ;LPWSTR lpstrRdr ;DWORD nMaxRdr ;LPWSTR lpstrCard ;DWORD nMaxCard ;DWORD dwActiveProtocol ;SCARDHANDLE hCardHandle ;}*POPENCARDNAME_EXW ;
typedef struct {DWORD dwStructSize ;SCARDCONTEXT hSCardContext ;HWND hwndOwner ;DWORD dwFlags ;LPCWSTR lpstrTitle ;LPCWSTR lpstrSearchDesc ;HICON hIcon ;POPENCARD_SEARCH_CRITERIAW pOpenCardSearchCriteria ;LPOCNCONNPROCW lpfnConnect ;LPVOID pvUserData ;DWORD dwShareMode ;DWORD dwPreferredProtocols ;LPWSTR lpstrRdr ;DWORD nMaxRdr ;LPWSTR lpstrCard ;DWORD nMaxCard ;DWORD dwActiveProtocol ;SCARDHANDLE hCardHandle ;}*LPOPENCARDNAME_EXW ;

typedef OPENCARDNAME_EXA OPENCARDNAME_EX ;
typedef POPENCARDNAME_EXA POPENCARDNAME_EX ;
typedef LPOPENCARDNAME_EXA LPOPENCARDNAME_EX ;
extern LONG SCardUIDlgSelectCardA (LPOPENCARDNAME_EXA );
extern LONG SCardUIDlgSelectCardW (LPOPENCARDNAME_EXW );
typedef struct {DWORD dwStructSize ;HWND hwndOwner ;SCARDCONTEXT hSCardContext ;LPSTR lpstrGroupNames ;DWORD nMaxGroupNames ;LPSTR lpstrCardNames ;DWORD nMaxCardNames ;LPCGUID rgguidInterfaces ;DWORD cguidInterfaces ;LPSTR lpstrRdr ;DWORD nMaxRdr ;LPSTR lpstrCard ;DWORD nMaxCard ;LPCSTR lpstrTitle ;DWORD dwFlags ;LPVOID pvUserData ;DWORD dwShareMode ;DWORD dwPreferredProtocols ;DWORD dwActiveProtocol ;LPOCNCONNPROCA lpfnConnect ;LPOCNCHKPROC lpfnCheck ;LPOCNDSCPROC lpfnDisconnect ;SCARDHANDLE hCardHandle ;}OPENCARDNAMEA ;
typedef struct {DWORD dwStructSize ;HWND hwndOwner ;SCARDCONTEXT hSCardContext ;LPSTR lpstrGroupNames ;DWORD nMaxGroupNames ;LPSTR lpstrCardNames ;DWORD nMaxCardNames ;LPCGUID rgguidInterfaces ;DWORD cguidInterfaces ;LPSTR lpstrRdr ;DWORD nMaxRdr ;LPSTR lpstrCard ;DWORD nMaxCard ;LPCSTR lpstrTitle ;DWORD dwFlags ;LPVOID pvUserData ;DWORD dwShareMode ;DWORD dwPreferredProtocols ;DWORD dwActiveProtocol ;LPOCNCONNPROCA lpfnConnect ;LPOCNCHKPROC lpfnCheck ;LPOCNDSCPROC lpfnDisconnect ;SCARDHANDLE hCardHandle ;}*POPENCARDNAMEA ;
typedef struct {DWORD dwStructSize ;HWND hwndOwner ;SCARDCONTEXT hSCardContext ;LPSTR lpstrGroupNames ;DWORD nMaxGroupNames ;LPSTR lpstrCardNames ;DWORD nMaxCardNames ;LPCGUID rgguidInterfaces ;DWORD cguidInterfaces ;LPSTR lpstrRdr ;DWORD nMaxRdr ;LPSTR lpstrCard ;DWORD nMaxCard ;LPCSTR lpstrTitle ;DWORD dwFlags ;LPVOID pvUserData ;DWORD dwShareMode ;DWORD dwPreferredProtocols ;DWORD dwActiveProtocol ;LPOCNCONNPROCA lpfnConnect ;LPOCNCHKPROC lpfnCheck ;LPOCNDSCPROC lpfnDisconnect ;SCARDHANDLE hCardHandle ;}*LPOPENCARDNAMEA ;

typedef struct {DWORD dwStructSize ;HWND hwndOwner ;SCARDCONTEXT hSCardContext ;LPWSTR lpstrGroupNames ;DWORD nMaxGroupNames ;LPWSTR lpstrCardNames ;DWORD nMaxCardNames ;LPCGUID rgguidInterfaces ;DWORD cguidInterfaces ;LPWSTR lpstrRdr ;DWORD nMaxRdr ;LPWSTR lpstrCard ;DWORD nMaxCard ;LPCWSTR lpstrTitle ;DWORD dwFlags ;LPVOID pvUserData ;DWORD dwShareMode ;DWORD dwPreferredProtocols ;DWORD dwActiveProtocol ;LPOCNCONNPROCW lpfnConnect ;LPOCNCHKPROC lpfnCheck ;LPOCNDSCPROC lpfnDisconnect ;SCARDHANDLE hCardHandle ;}OPENCARDNAMEW ;
typedef struct {DWORD dwStructSize ;HWND hwndOwner ;SCARDCONTEXT hSCardContext ;LPWSTR lpstrGroupNames ;DWORD nMaxGroupNames ;LPWSTR lpstrCardNames ;DWORD nMaxCardNames ;LPCGUID rgguidInterfaces ;DWORD cguidInterfaces ;LPWSTR lpstrRdr ;DWORD nMaxRdr ;LPWSTR lpstrCard ;DWORD nMaxCard ;LPCWSTR lpstrTitle ;DWORD dwFlags ;LPVOID pvUserData ;DWORD dwShareMode ;DWORD dwPreferredProtocols ;DWORD dwActiveProtocol ;LPOCNCONNPROCW lpfnConnect ;LPOCNCHKPROC lpfnCheck ;LPOCNDSCPROC lpfnDisconnect ;SCARDHANDLE hCardHandle ;}*POPENCARDNAMEW ;
typedef struct {DWORD dwStructSize ;HWND hwndOwner ;SCARDCONTEXT hSCardContext ;LPWSTR lpstrGroupNames ;DWORD nMaxGroupNames ;LPWSTR lpstrCardNames ;DWORD nMaxCardNames ;LPCGUID rgguidInterfaces ;DWORD cguidInterfaces ;LPWSTR lpstrRdr ;DWORD nMaxRdr ;LPWSTR lpstrCard ;DWORD nMaxCard ;LPCWSTR lpstrTitle ;DWORD dwFlags ;LPVOID pvUserData ;DWORD dwShareMode ;DWORD dwPreferredProtocols ;DWORD dwActiveProtocol ;LPOCNCONNPROCW lpfnConnect ;LPOCNCHKPROC lpfnCheck ;LPOCNDSCPROC lpfnDisconnect ;SCARDHANDLE hCardHandle ;}*LPOPENCARDNAMEW ;

typedef OPENCARDNAMEA OPENCARDNAME ;
typedef POPENCARDNAMEA POPENCARDNAME ;
typedef LPOPENCARDNAMEA LPOPENCARDNAME ;
extern LONG GetOpenCardNameA (LPOPENCARDNAMEA );
extern LONG GetOpenCardNameW (LPOPENCARDNAMEW );
extern LONG SCardDlgExtendedError (void );
// m:\mingw\x86_64-w64-mingw32\include\prsht.h

struct _PSP ;
struct _PROPSHEETPAGEA ;
struct _PROPSHEETPAGEW ;
typedef struct _PSP *HPROPSHEETPAGE ;
typedef UINT (*LPFNPSPCALLBACKA )(HWND hwnd ,UINT uMsg ,struct _PROPSHEETPAGEA *ppsp );
typedef UINT (*LPFNPSPCALLBACKW )(HWND hwnd ,UINT uMsg ,struct _PROPSHEETPAGEW *ppsp );
typedef LPCDLGTEMPLATE PROPSHEETPAGE_RESOURCE ;
typedef struct _PROPSHEETPAGEA_V1 {DWORD dwSize ,dwFlags ;HINSTANCE hInstance ;union {LPCSTR pszTemplate ;PROPSHEETPAGE_RESOURCE pResource ;};union {HICON hIcon ;LPCSTR pszIcon ;};LPCSTR pszTitle ;DLGPROC pfnDlgProc ;LPARAM lParam ;LPFNPSPCALLBACKA pfnCallback ;UINT *pcRefParent ;}PROPSHEETPAGEA_V1 ;
typedef struct _PROPSHEETPAGEA_V1 {DWORD dwSize ,dwFlags ;HINSTANCE hInstance ;union {LPCSTR pszTemplate ;PROPSHEETPAGE_RESOURCE pResource ;};union {HICON hIcon ;LPCSTR pszIcon ;};LPCSTR pszTitle ;DLGPROC pfnDlgProc ;LPARAM lParam ;LPFNPSPCALLBACKA pfnCallback ;UINT *pcRefParent ;}*LPPROPSHEETPAGEA_V1 ;

typedef const PROPSHEETPAGEA_V1 *LPCPROPSHEETPAGEA_V1 ;
typedef struct _PROPSHEETPAGEA_V2 {DWORD dwSize ,dwFlags ;HINSTANCE hInstance ;union {LPCSTR pszTemplate ;PROPSHEETPAGE_RESOURCE pResource ;};union {HICON hIcon ;LPCSTR pszIcon ;};LPCSTR pszTitle ;DLGPROC pfnDlgProc ;LPARAM lParam ;LPFNPSPCALLBACKA pfnCallback ;UINT *pcRefParent ;LPCSTR pszHeaderTitle ;LPCSTR pszHeaderSubTitle ;}PROPSHEETPAGEA_V2 ;
typedef struct _PROPSHEETPAGEA_V2 {DWORD dwSize ,dwFlags ;HINSTANCE hInstance ;union {LPCSTR pszTemplate ;PROPSHEETPAGE_RESOURCE pResource ;};union {HICON hIcon ;LPCSTR pszIcon ;};LPCSTR pszTitle ;DLGPROC pfnDlgProc ;LPARAM lParam ;LPFNPSPCALLBACKA pfnCallback ;UINT *pcRefParent ;LPCSTR pszHeaderTitle ;LPCSTR pszHeaderSubTitle ;}*LPPROPSHEETPAGEA_V2 ;

typedef const PROPSHEETPAGEA_V2 *LPCPROPSHEETPAGEA_V2 ;
typedef struct _PROPSHEETPAGEA {DWORD dwSize ,dwFlags ;HINSTANCE hInstance ;union {LPCSTR pszTemplate ;PROPSHEETPAGE_RESOURCE pResource ;};union {HICON hIcon ;LPCSTR pszIcon ;};LPCSTR pszTitle ;DLGPROC pfnDlgProc ;LPARAM lParam ;LPFNPSPCALLBACKA pfnCallback ;UINT *pcRefParent ;LPCSTR pszHeaderTitle ;LPCSTR pszHeaderSubTitle ;HANDLE hActCtx ;}PROPSHEETPAGEA_V3 ;
typedef struct _PROPSHEETPAGEA {DWORD dwSize ,dwFlags ;HINSTANCE hInstance ;union {LPCSTR pszTemplate ;PROPSHEETPAGE_RESOURCE pResource ;};union {HICON hIcon ;LPCSTR pszIcon ;};LPCSTR pszTitle ;DLGPROC pfnDlgProc ;LPARAM lParam ;LPFNPSPCALLBACKA pfnCallback ;UINT *pcRefParent ;LPCSTR pszHeaderTitle ;LPCSTR pszHeaderSubTitle ;HANDLE hActCtx ;}*LPPROPSHEETPAGEA_V3 ;

typedef const PROPSHEETPAGEA_V3 *LPCPROPSHEETPAGEA_V3 ;
typedef struct _PROPSHEETPAGEW_V1 {DWORD dwSize ,dwFlags ;HINSTANCE hInstance ;union {LPCWSTR pszTemplate ;PROPSHEETPAGE_RESOURCE pResource ;};union {HICON hIcon ;LPCWSTR pszIcon ;};LPCWSTR pszTitle ;DLGPROC pfnDlgProc ;LPARAM lParam ;LPFNPSPCALLBACKW pfnCallback ;UINT *pcRefParent ;}PROPSHEETPAGEW_V1 ;
typedef struct _PROPSHEETPAGEW_V1 {DWORD dwSize ,dwFlags ;HINSTANCE hInstance ;union {LPCWSTR pszTemplate ;PROPSHEETPAGE_RESOURCE pResource ;};union {HICON hIcon ;LPCWSTR pszIcon ;};LPCWSTR pszTitle ;DLGPROC pfnDlgProc ;LPARAM lParam ;LPFNPSPCALLBACKW pfnCallback ;UINT *pcRefParent ;}*LPPROPSHEETPAGEW_V1 ;

typedef const PROPSHEETPAGEW_V1 *LPCPROPSHEETPAGEW_V1 ;
typedef struct _PROPSHEETPAGEW_V2 {DWORD dwSize ,dwFlags ;HINSTANCE hInstance ;union {LPCWSTR pszTemplate ;PROPSHEETPAGE_RESOURCE pResource ;};union {HICON hIcon ;LPCWSTR pszIcon ;};LPCWSTR pszTitle ;DLGPROC pfnDlgProc ;LPARAM lParam ;LPFNPSPCALLBACKW pfnCallback ;UINT *pcRefParent ;LPCWSTR pszHeaderTitle ;LPCWSTR pszHeaderSubTitle ;}PROPSHEETPAGEW_V2 ;
typedef struct _PROPSHEETPAGEW_V2 {DWORD dwSize ,dwFlags ;HINSTANCE hInstance ;union {LPCWSTR pszTemplate ;PROPSHEETPAGE_RESOURCE pResource ;};union {HICON hIcon ;LPCWSTR pszIcon ;};LPCWSTR pszTitle ;DLGPROC pfnDlgProc ;LPARAM lParam ;LPFNPSPCALLBACKW pfnCallback ;UINT *pcRefParent ;LPCWSTR pszHeaderTitle ;LPCWSTR pszHeaderSubTitle ;}*LPPROPSHEETPAGEW_V2 ;

typedef const PROPSHEETPAGEW_V2 *LPCPROPSHEETPAGEW_V2 ;
typedef struct _PROPSHEETPAGEW {DWORD dwSize ,dwFlags ;HINSTANCE hInstance ;union {LPCWSTR pszTemplate ;PROPSHEETPAGE_RESOURCE pResource ;};union {HICON hIcon ;LPCWSTR pszIcon ;};LPCWSTR pszTitle ;DLGPROC pfnDlgProc ;LPARAM lParam ;LPFNPSPCALLBACKW pfnCallback ;UINT *pcRefParent ;LPCWSTR pszHeaderTitle ;LPCWSTR pszHeaderSubTitle ;HANDLE hActCtx ;}PROPSHEETPAGEW_V3 ;
typedef struct _PROPSHEETPAGEW {DWORD dwSize ,dwFlags ;HINSTANCE hInstance ;union {LPCWSTR pszTemplate ;PROPSHEETPAGE_RESOURCE pResource ;};union {HICON hIcon ;LPCWSTR pszIcon ;};LPCWSTR pszTitle ;DLGPROC pfnDlgProc ;LPARAM lParam ;LPFNPSPCALLBACKW pfnCallback ;UINT *pcRefParent ;LPCWSTR pszHeaderTitle ;LPCWSTR pszHeaderSubTitle ;HANDLE hActCtx ;}*LPPROPSHEETPAGEW_V3 ;

typedef const PROPSHEETPAGEW_V3 *LPCPROPSHEETPAGEW_V3 ;
typedef PROPSHEETPAGEA_V3 PROPSHEETPAGEA_LATEST ;
typedef PROPSHEETPAGEW_V3 PROPSHEETPAGEW_LATEST ;
typedef LPPROPSHEETPAGEA_V3 LPPROPSHEETPAGEA_LATEST ;
typedef LPPROPSHEETPAGEW_V3 LPPROPSHEETPAGEW_LATEST ;
typedef LPCPROPSHEETPAGEA_V3 LPCPROPSHEETPAGEA_LATEST ;
typedef LPCPROPSHEETPAGEW_V3 LPCPROPSHEETPAGEW_LATEST ;
typedef PROPSHEETPAGEA_V3 PROPSHEETPAGEA ;
typedef PROPSHEETPAGEW_V3 PROPSHEETPAGEW ;
typedef LPPROPSHEETPAGEA_V3 LPPROPSHEETPAGEA ;
typedef LPPROPSHEETPAGEW_V3 LPPROPSHEETPAGEW ;
typedef LPCPROPSHEETPAGEA_V3 LPCPROPSHEETPAGEA ;
typedef LPCPROPSHEETPAGEW_V3 LPCPROPSHEETPAGEW ;
typedef int (*PFNPROPSHEETCALLBACK )(HWND ,UINT ,LPARAM );
typedef struct _PROPSHEETHEADERA {DWORD dwSize ;DWORD dwFlags ;HWND hwndParent ;HINSTANCE hInstance ;union {HICON hIcon ;LPCSTR pszIcon ;};LPCSTR pszCaption ;UINT nPages ;union {UINT nStartPage ;LPCSTR pStartPage ;};union {LPCPROPSHEETPAGEA ppsp ;HPROPSHEETPAGE *phpage ;};PFNPROPSHEETCALLBACK pfnCallback ;union {HBITMAP hbmWatermark ;LPCSTR pszbmWatermark ;};HPALETTE hplWatermark ;union {HBITMAP hbmHeader ;LPCSTR pszbmHeader ;};}PROPSHEETHEADERA ;
typedef struct _PROPSHEETHEADERA {DWORD dwSize ;DWORD dwFlags ;HWND hwndParent ;HINSTANCE hInstance ;union {HICON hIcon ;LPCSTR pszIcon ;};LPCSTR pszCaption ;UINT nPages ;union {UINT nStartPage ;LPCSTR pStartPage ;};union {LPCPROPSHEETPAGEA ppsp ;HPROPSHEETPAGE *phpage ;};PFNPROPSHEETCALLBACK pfnCallback ;union {HBITMAP hbmWatermark ;LPCSTR pszbmWatermark ;};HPALETTE hplWatermark ;union {HBITMAP hbmHeader ;LPCSTR pszbmHeader ;};}*LPPROPSHEETHEADERA ;

typedef const PROPSHEETHEADERA *LPCPROPSHEETHEADERA ;
typedef struct _PROPSHEETHEADERW {DWORD dwSize ;DWORD dwFlags ;HWND hwndParent ;HINSTANCE hInstance ;union {HICON hIcon ;LPCWSTR pszIcon ;};LPCWSTR pszCaption ;UINT nPages ;union {UINT nStartPage ;LPCWSTR pStartPage ;};union {LPCPROPSHEETPAGEW ppsp ;HPROPSHEETPAGE *phpage ;};PFNPROPSHEETCALLBACK pfnCallback ;union {HBITMAP hbmWatermark ;LPCWSTR pszbmWatermark ;};HPALETTE hplWatermark ;union {HBITMAP hbmHeader ;LPCWSTR pszbmHeader ;};}PROPSHEETHEADERW ;
typedef struct _PROPSHEETHEADERW {DWORD dwSize ;DWORD dwFlags ;HWND hwndParent ;HINSTANCE hInstance ;union {HICON hIcon ;LPCWSTR pszIcon ;};LPCWSTR pszCaption ;UINT nPages ;union {UINT nStartPage ;LPCWSTR pStartPage ;};union {LPCPROPSHEETPAGEW ppsp ;HPROPSHEETPAGE *phpage ;};PFNPROPSHEETCALLBACK pfnCallback ;union {HBITMAP hbmWatermark ;LPCWSTR pszbmWatermark ;};HPALETTE hplWatermark ;union {HBITMAP hbmHeader ;LPCWSTR pszbmHeader ;};}*LPPROPSHEETHEADERW ;

typedef const PROPSHEETHEADERW *LPCPROPSHEETHEADERW ;
HPROPSHEETPAGE CreatePropertySheetPageA (LPCPROPSHEETPAGEA constPropSheetPagePointer );
HPROPSHEETPAGE CreatePropertySheetPageW (LPCPROPSHEETPAGEW constPropSheetPagePointer );
WINBOOL DestroyPropertySheetPage (HPROPSHEETPAGE );
INT_PTR PropertySheetA (LPCPROPSHEETHEADERA );
INT_PTR PropertySheetW (LPCPROPSHEETHEADERW );
typedef WINBOOL (*LPFNADDPROPSHEETPAGE )(HPROPSHEETPAGE ,LPARAM );
typedef WINBOOL (*LPFNADDPROPSHEETPAGES )(LPVOID ,LPFNADDPROPSHEETPAGE ,LPARAM );
typedef struct _PSHNOTIFY {NMHDR hdr ;LPARAM lParam ;}PSHNOTIFY ;
typedef struct _PSHNOTIFY {NMHDR hdr ;LPARAM lParam ;}*LPPSHNOTIFY ;

// m:\mingw\x86_64-w64-mingw32\include\winspool.h

typedef struct _PRINTER_INFO_1A {DWORD Flags ;LPSTR pDescription ;LPSTR pName ;LPSTR pComment ;}PRINTER_INFO_1A ;
typedef struct _PRINTER_INFO_1A {DWORD Flags ;LPSTR pDescription ;LPSTR pName ;LPSTR pComment ;}*PPRINTER_INFO_1A ;
typedef struct _PRINTER_INFO_1A {DWORD Flags ;LPSTR pDescription ;LPSTR pName ;LPSTR pComment ;}*LPPRINTER_INFO_1A ;

typedef struct _PRINTER_INFO_1W {DWORD Flags ;LPWSTR pDescription ;LPWSTR pName ;LPWSTR pComment ;}PRINTER_INFO_1W ;
typedef struct _PRINTER_INFO_1W {DWORD Flags ;LPWSTR pDescription ;LPWSTR pName ;LPWSTR pComment ;}*PPRINTER_INFO_1W ;
typedef struct _PRINTER_INFO_1W {DWORD Flags ;LPWSTR pDescription ;LPWSTR pName ;LPWSTR pComment ;}*LPPRINTER_INFO_1W ;

typedef PRINTER_INFO_1A PRINTER_INFO_1 ;
typedef PPRINTER_INFO_1A PPRINTER_INFO_1 ;
typedef LPPRINTER_INFO_1A LPPRINTER_INFO_1 ;
typedef struct _PRINTER_INFO_2A {LPSTR pServerName ;LPSTR pPrinterName ;LPSTR pShareName ;LPSTR pPortName ;LPSTR pDriverName ;LPSTR pComment ;LPSTR pLocation ;LPDEVMODEA pDevMode ;LPSTR pSepFile ;LPSTR pPrintProcessor ;LPSTR pDatatype ;LPSTR pParameters ;PSECURITY_DESCRIPTOR pSecurityDescriptor ;DWORD Attributes ;DWORD Priority ;DWORD DefaultPriority ;DWORD StartTime ;DWORD UntilTime ;DWORD Status ;DWORD cJobs ;DWORD AveragePPM ;}PRINTER_INFO_2A ;
typedef struct _PRINTER_INFO_2A {LPSTR pServerName ;LPSTR pPrinterName ;LPSTR pShareName ;LPSTR pPortName ;LPSTR pDriverName ;LPSTR pComment ;LPSTR pLocation ;LPDEVMODEA pDevMode ;LPSTR pSepFile ;LPSTR pPrintProcessor ;LPSTR pDatatype ;LPSTR pParameters ;PSECURITY_DESCRIPTOR pSecurityDescriptor ;DWORD Attributes ;DWORD Priority ;DWORD DefaultPriority ;DWORD StartTime ;DWORD UntilTime ;DWORD Status ;DWORD cJobs ;DWORD AveragePPM ;}*PPRINTER_INFO_2A ;
typedef struct _PRINTER_INFO_2A {LPSTR pServerName ;LPSTR pPrinterName ;LPSTR pShareName ;LPSTR pPortName ;LPSTR pDriverName ;LPSTR pComment ;LPSTR pLocation ;LPDEVMODEA pDevMode ;LPSTR pSepFile ;LPSTR pPrintProcessor ;LPSTR pDatatype ;LPSTR pParameters ;PSECURITY_DESCRIPTOR pSecurityDescriptor ;DWORD Attributes ;DWORD Priority ;DWORD DefaultPriority ;DWORD StartTime ;DWORD UntilTime ;DWORD Status ;DWORD cJobs ;DWORD AveragePPM ;}*LPPRINTER_INFO_2A ;

typedef struct _PRINTER_INFO_2W {LPWSTR pServerName ;LPWSTR pPrinterName ;LPWSTR pShareName ;LPWSTR pPortName ;LPWSTR pDriverName ;LPWSTR pComment ;LPWSTR pLocation ;LPDEVMODEW pDevMode ;LPWSTR pSepFile ;LPWSTR pPrintProcessor ;LPWSTR pDatatype ;LPWSTR pParameters ;PSECURITY_DESCRIPTOR pSecurityDescriptor ;DWORD Attributes ;DWORD Priority ;DWORD DefaultPriority ;DWORD StartTime ;DWORD UntilTime ;DWORD Status ;DWORD cJobs ;DWORD AveragePPM ;}PRINTER_INFO_2W ;
typedef struct _PRINTER_INFO_2W {LPWSTR pServerName ;LPWSTR pPrinterName ;LPWSTR pShareName ;LPWSTR pPortName ;LPWSTR pDriverName ;LPWSTR pComment ;LPWSTR pLocation ;LPDEVMODEW pDevMode ;LPWSTR pSepFile ;LPWSTR pPrintProcessor ;LPWSTR pDatatype ;LPWSTR pParameters ;PSECURITY_DESCRIPTOR pSecurityDescriptor ;DWORD Attributes ;DWORD Priority ;DWORD DefaultPriority ;DWORD StartTime ;DWORD UntilTime ;DWORD Status ;DWORD cJobs ;DWORD AveragePPM ;}*PPRINTER_INFO_2W ;
typedef struct _PRINTER_INFO_2W {LPWSTR pServerName ;LPWSTR pPrinterName ;LPWSTR pShareName ;LPWSTR pPortName ;LPWSTR pDriverName ;LPWSTR pComment ;LPWSTR pLocation ;LPDEVMODEW pDevMode ;LPWSTR pSepFile ;LPWSTR pPrintProcessor ;LPWSTR pDatatype ;LPWSTR pParameters ;PSECURITY_DESCRIPTOR pSecurityDescriptor ;DWORD Attributes ;DWORD Priority ;DWORD DefaultPriority ;DWORD StartTime ;DWORD UntilTime ;DWORD Status ;DWORD cJobs ;DWORD AveragePPM ;}*LPPRINTER_INFO_2W ;

typedef PRINTER_INFO_2A PRINTER_INFO_2 ;
typedef PPRINTER_INFO_2A PPRINTER_INFO_2 ;
typedef LPPRINTER_INFO_2A LPPRINTER_INFO_2 ;
typedef struct _PRINTER_INFO_3 {PSECURITY_DESCRIPTOR pSecurityDescriptor ;}PRINTER_INFO_3 ;
typedef struct _PRINTER_INFO_3 {PSECURITY_DESCRIPTOR pSecurityDescriptor ;}*PPRINTER_INFO_3 ;
typedef struct _PRINTER_INFO_3 {PSECURITY_DESCRIPTOR pSecurityDescriptor ;}*LPPRINTER_INFO_3 ;

typedef struct _PRINTER_INFO_4A {LPSTR pPrinterName ;LPSTR pServerName ;DWORD Attributes ;}PRINTER_INFO_4A ;
typedef struct _PRINTER_INFO_4A {LPSTR pPrinterName ;LPSTR pServerName ;DWORD Attributes ;}*PPRINTER_INFO_4A ;
typedef struct _PRINTER_INFO_4A {LPSTR pPrinterName ;LPSTR pServerName ;DWORD Attributes ;}*LPPRINTER_INFO_4A ;

typedef struct _PRINTER_INFO_4W {LPWSTR pPrinterName ;LPWSTR pServerName ;DWORD Attributes ;}PRINTER_INFO_4W ;
typedef struct _PRINTER_INFO_4W {LPWSTR pPrinterName ;LPWSTR pServerName ;DWORD Attributes ;}*PPRINTER_INFO_4W ;
typedef struct _PRINTER_INFO_4W {LPWSTR pPrinterName ;LPWSTR pServerName ;DWORD Attributes ;}*LPPRINTER_INFO_4W ;

typedef PRINTER_INFO_4A PRINTER_INFO_4 ;
typedef PPRINTER_INFO_4A PPRINTER_INFO_4 ;
typedef LPPRINTER_INFO_4A LPPRINTER_INFO_4 ;
typedef struct _PRINTER_INFO_5A {LPSTR pPrinterName ;LPSTR pPortName ;DWORD Attributes ;DWORD DeviceNotSelectedTimeout ;DWORD TransmissionRetryTimeout ;}PRINTER_INFO_5A ;
typedef struct _PRINTER_INFO_5A {LPSTR pPrinterName ;LPSTR pPortName ;DWORD Attributes ;DWORD DeviceNotSelectedTimeout ;DWORD TransmissionRetryTimeout ;}*PPRINTER_INFO_5A ;
typedef struct _PRINTER_INFO_5A {LPSTR pPrinterName ;LPSTR pPortName ;DWORD Attributes ;DWORD DeviceNotSelectedTimeout ;DWORD TransmissionRetryTimeout ;}*LPPRINTER_INFO_5A ;

typedef struct _PRINTER_INFO_5W {LPWSTR pPrinterName ;LPWSTR pPortName ;DWORD Attributes ;DWORD DeviceNotSelectedTimeout ;DWORD TransmissionRetryTimeout ;}PRINTER_INFO_5W ;
typedef struct _PRINTER_INFO_5W {LPWSTR pPrinterName ;LPWSTR pPortName ;DWORD Attributes ;DWORD DeviceNotSelectedTimeout ;DWORD TransmissionRetryTimeout ;}*PPRINTER_INFO_5W ;
typedef struct _PRINTER_INFO_5W {LPWSTR pPrinterName ;LPWSTR pPortName ;DWORD Attributes ;DWORD DeviceNotSelectedTimeout ;DWORD TransmissionRetryTimeout ;}*LPPRINTER_INFO_5W ;

typedef PRINTER_INFO_5A PRINTER_INFO_5 ;
typedef PPRINTER_INFO_5A PPRINTER_INFO_5 ;
typedef LPPRINTER_INFO_5A LPPRINTER_INFO_5 ;
typedef struct _PRINTER_INFO_6 {DWORD dwStatus ;}PRINTER_INFO_6 ;
typedef struct _PRINTER_INFO_6 {DWORD dwStatus ;}*PPRINTER_INFO_6 ;
typedef struct _PRINTER_INFO_6 {DWORD dwStatus ;}*LPPRINTER_INFO_6 ;

typedef struct _PRINTER_INFO_7A {LPSTR pszObjectGUID ;DWORD dwAction ;}PRINTER_INFO_7A ;
typedef struct _PRINTER_INFO_7A {LPSTR pszObjectGUID ;DWORD dwAction ;}*PPRINTER_INFO_7A ;
typedef struct _PRINTER_INFO_7A {LPSTR pszObjectGUID ;DWORD dwAction ;}*LPPRINTER_INFO_7A ;

typedef struct _PRINTER_INFO_7W {LPWSTR pszObjectGUID ;DWORD dwAction ;}PRINTER_INFO_7W ;
typedef struct _PRINTER_INFO_7W {LPWSTR pszObjectGUID ;DWORD dwAction ;}*PPRINTER_INFO_7W ;
typedef struct _PRINTER_INFO_7W {LPWSTR pszObjectGUID ;DWORD dwAction ;}*LPPRINTER_INFO_7W ;

typedef PRINTER_INFO_7A PRINTER_INFO_7 ;
typedef PPRINTER_INFO_7A PPRINTER_INFO_7 ;
typedef LPPRINTER_INFO_7A LPPRINTER_INFO_7 ;
typedef struct _PRINTER_INFO_8A {LPDEVMODEA pDevMode ;}PRINTER_INFO_8A ;
typedef struct _PRINTER_INFO_8A {LPDEVMODEA pDevMode ;}*PPRINTER_INFO_8A ;
typedef struct _PRINTER_INFO_8A {LPDEVMODEA pDevMode ;}*LPPRINTER_INFO_8A ;

typedef struct _PRINTER_INFO_8W {LPDEVMODEW pDevMode ;}PRINTER_INFO_8W ;
typedef struct _PRINTER_INFO_8W {LPDEVMODEW pDevMode ;}*PPRINTER_INFO_8W ;
typedef struct _PRINTER_INFO_8W {LPDEVMODEW pDevMode ;}*LPPRINTER_INFO_8W ;

typedef PRINTER_INFO_8A PRINTER_INFO_8 ;
typedef PPRINTER_INFO_8A PPRINTER_INFO_8 ;
typedef LPPRINTER_INFO_8A LPPRINTER_INFO_8 ;
typedef struct _PRINTER_INFO_9A {LPDEVMODEA pDevMode ;}PRINTER_INFO_9A ;
typedef struct _PRINTER_INFO_9A {LPDEVMODEA pDevMode ;}*PPRINTER_INFO_9A ;
typedef struct _PRINTER_INFO_9A {LPDEVMODEA pDevMode ;}*LPPRINTER_INFO_9A ;

typedef struct _PRINTER_INFO_9W {LPDEVMODEW pDevMode ;}PRINTER_INFO_9W ;
typedef struct _PRINTER_INFO_9W {LPDEVMODEW pDevMode ;}*PPRINTER_INFO_9W ;
typedef struct _PRINTER_INFO_9W {LPDEVMODEW pDevMode ;}*LPPRINTER_INFO_9W ;

typedef PRINTER_INFO_9A PRINTER_INFO_9 ;
typedef PPRINTER_INFO_9A PPRINTER_INFO_9 ;
typedef LPPRINTER_INFO_9A LPPRINTER_INFO_9 ;
typedef struct _JOB_INFO_1A {DWORD JobId ;LPSTR pPrinterName ;LPSTR pMachineName ;LPSTR pUserName ;LPSTR pDocument ;LPSTR pDatatype ;LPSTR pStatus ;DWORD Status ;DWORD Priority ;DWORD Position ;DWORD TotalPages ;DWORD PagesPrinted ;SYSTEMTIME Submitted ;}JOB_INFO_1A ;
typedef struct _JOB_INFO_1A {DWORD JobId ;LPSTR pPrinterName ;LPSTR pMachineName ;LPSTR pUserName ;LPSTR pDocument ;LPSTR pDatatype ;LPSTR pStatus ;DWORD Status ;DWORD Priority ;DWORD Position ;DWORD TotalPages ;DWORD PagesPrinted ;SYSTEMTIME Submitted ;}*PJOB_INFO_1A ;
typedef struct _JOB_INFO_1A {DWORD JobId ;LPSTR pPrinterName ;LPSTR pMachineName ;LPSTR pUserName ;LPSTR pDocument ;LPSTR pDatatype ;LPSTR pStatus ;DWORD Status ;DWORD Priority ;DWORD Position ;DWORD TotalPages ;DWORD PagesPrinted ;SYSTEMTIME Submitted ;}*LPJOB_INFO_1A ;

typedef struct _JOB_INFO_1W {DWORD JobId ;LPWSTR pPrinterName ;LPWSTR pMachineName ;LPWSTR pUserName ;LPWSTR pDocument ;LPWSTR pDatatype ;LPWSTR pStatus ;DWORD Status ;DWORD Priority ;DWORD Position ;DWORD TotalPages ;DWORD PagesPrinted ;SYSTEMTIME Submitted ;}JOB_INFO_1W ;
typedef struct _JOB_INFO_1W {DWORD JobId ;LPWSTR pPrinterName ;LPWSTR pMachineName ;LPWSTR pUserName ;LPWSTR pDocument ;LPWSTR pDatatype ;LPWSTR pStatus ;DWORD Status ;DWORD Priority ;DWORD Position ;DWORD TotalPages ;DWORD PagesPrinted ;SYSTEMTIME Submitted ;}*PJOB_INFO_1W ;
typedef struct _JOB_INFO_1W {DWORD JobId ;LPWSTR pPrinterName ;LPWSTR pMachineName ;LPWSTR pUserName ;LPWSTR pDocument ;LPWSTR pDatatype ;LPWSTR pStatus ;DWORD Status ;DWORD Priority ;DWORD Position ;DWORD TotalPages ;DWORD PagesPrinted ;SYSTEMTIME Submitted ;}*LPJOB_INFO_1W ;

typedef JOB_INFO_1A JOB_INFO_1 ;
typedef PJOB_INFO_1A PJOB_INFO_1 ;
typedef LPJOB_INFO_1A LPJOB_INFO_1 ;
typedef struct _JOB_INFO_2A {DWORD JobId ;LPSTR pPrinterName ;LPSTR pMachineName ;LPSTR pUserName ;LPSTR pDocument ;LPSTR pNotifyName ;LPSTR pDatatype ;LPSTR pPrintProcessor ;LPSTR pParameters ;LPSTR pDriverName ;LPDEVMODEA pDevMode ;LPSTR pStatus ;PSECURITY_DESCRIPTOR pSecurityDescriptor ;DWORD Status ;DWORD Priority ;DWORD Position ;DWORD StartTime ;DWORD UntilTime ;DWORD TotalPages ;DWORD Size ;SYSTEMTIME Submitted ;DWORD Time ;DWORD PagesPrinted ;}JOB_INFO_2A ;
typedef struct _JOB_INFO_2A {DWORD JobId ;LPSTR pPrinterName ;LPSTR pMachineName ;LPSTR pUserName ;LPSTR pDocument ;LPSTR pNotifyName ;LPSTR pDatatype ;LPSTR pPrintProcessor ;LPSTR pParameters ;LPSTR pDriverName ;LPDEVMODEA pDevMode ;LPSTR pStatus ;PSECURITY_DESCRIPTOR pSecurityDescriptor ;DWORD Status ;DWORD Priority ;DWORD Position ;DWORD StartTime ;DWORD UntilTime ;DWORD TotalPages ;DWORD Size ;SYSTEMTIME Submitted ;DWORD Time ;DWORD PagesPrinted ;}*PJOB_INFO_2A ;
typedef struct _JOB_INFO_2A {DWORD JobId ;LPSTR pPrinterName ;LPSTR pMachineName ;LPSTR pUserName ;LPSTR pDocument ;LPSTR pNotifyName ;LPSTR pDatatype ;LPSTR pPrintProcessor ;LPSTR pParameters ;LPSTR pDriverName ;LPDEVMODEA pDevMode ;LPSTR pStatus ;PSECURITY_DESCRIPTOR pSecurityDescriptor ;DWORD Status ;DWORD Priority ;DWORD Position ;DWORD StartTime ;DWORD UntilTime ;DWORD TotalPages ;DWORD Size ;SYSTEMTIME Submitted ;DWORD Time ;DWORD PagesPrinted ;}*LPJOB_INFO_2A ;

typedef struct _JOB_INFO_2W {DWORD JobId ;LPWSTR pPrinterName ;LPWSTR pMachineName ;LPWSTR pUserName ;LPWSTR pDocument ;LPWSTR pNotifyName ;LPWSTR pDatatype ;LPWSTR pPrintProcessor ;LPWSTR pParameters ;LPWSTR pDriverName ;LPDEVMODEW pDevMode ;LPWSTR pStatus ;PSECURITY_DESCRIPTOR pSecurityDescriptor ;DWORD Status ;DWORD Priority ;DWORD Position ;DWORD StartTime ;DWORD UntilTime ;DWORD TotalPages ;DWORD Size ;SYSTEMTIME Submitted ;DWORD Time ;DWORD PagesPrinted ;}JOB_INFO_2W ;
typedef struct _JOB_INFO_2W {DWORD JobId ;LPWSTR pPrinterName ;LPWSTR pMachineName ;LPWSTR pUserName ;LPWSTR pDocument ;LPWSTR pNotifyName ;LPWSTR pDatatype ;LPWSTR pPrintProcessor ;LPWSTR pParameters ;LPWSTR pDriverName ;LPDEVMODEW pDevMode ;LPWSTR pStatus ;PSECURITY_DESCRIPTOR pSecurityDescriptor ;DWORD Status ;DWORD Priority ;DWORD Position ;DWORD StartTime ;DWORD UntilTime ;DWORD TotalPages ;DWORD Size ;SYSTEMTIME Submitted ;DWORD Time ;DWORD PagesPrinted ;}*PJOB_INFO_2W ;
typedef struct _JOB_INFO_2W {DWORD JobId ;LPWSTR pPrinterName ;LPWSTR pMachineName ;LPWSTR pUserName ;LPWSTR pDocument ;LPWSTR pNotifyName ;LPWSTR pDatatype ;LPWSTR pPrintProcessor ;LPWSTR pParameters ;LPWSTR pDriverName ;LPDEVMODEW pDevMode ;LPWSTR pStatus ;PSECURITY_DESCRIPTOR pSecurityDescriptor ;DWORD Status ;DWORD Priority ;DWORD Position ;DWORD StartTime ;DWORD UntilTime ;DWORD TotalPages ;DWORD Size ;SYSTEMTIME Submitted ;DWORD Time ;DWORD PagesPrinted ;}*LPJOB_INFO_2W ;

typedef JOB_INFO_2A JOB_INFO_2 ;
typedef PJOB_INFO_2A PJOB_INFO_2 ;
typedef LPJOB_INFO_2A LPJOB_INFO_2 ;
typedef struct _JOB_INFO_3 {DWORD JobId ;DWORD NextJobId ;DWORD Reserved ;}JOB_INFO_3 ;
typedef struct _JOB_INFO_3 {DWORD JobId ;DWORD NextJobId ;DWORD Reserved ;}*PJOB_INFO_3 ;
typedef struct _JOB_INFO_3 {DWORD JobId ;DWORD NextJobId ;DWORD Reserved ;}*LPJOB_INFO_3 ;

typedef struct _ADDJOB_INFO_1A {LPSTR Path ;DWORD JobId ;}ADDJOB_INFO_1A ;
typedef struct _ADDJOB_INFO_1A {LPSTR Path ;DWORD JobId ;}*PADDJOB_INFO_1A ;
typedef struct _ADDJOB_INFO_1A {LPSTR Path ;DWORD JobId ;}*LPADDJOB_INFO_1A ;

typedef struct _ADDJOB_INFO_1W {LPWSTR Path ;DWORD JobId ;}ADDJOB_INFO_1W ;
typedef struct _ADDJOB_INFO_1W {LPWSTR Path ;DWORD JobId ;}*PADDJOB_INFO_1W ;
typedef struct _ADDJOB_INFO_1W {LPWSTR Path ;DWORD JobId ;}*LPADDJOB_INFO_1W ;

typedef ADDJOB_INFO_1A ADDJOB_INFO_1 ;
typedef PADDJOB_INFO_1A PADDJOB_INFO_1 ;
typedef LPADDJOB_INFO_1A LPADDJOB_INFO_1 ;
typedef struct _DRIVER_INFO_1A {LPSTR pName ;}DRIVER_INFO_1A ;
typedef struct _DRIVER_INFO_1A {LPSTR pName ;}*PDRIVER_INFO_1A ;
typedef struct _DRIVER_INFO_1A {LPSTR pName ;}*LPDRIVER_INFO_1A ;

typedef struct _DRIVER_INFO_1W {LPWSTR pName ;}DRIVER_INFO_1W ;
typedef struct _DRIVER_INFO_1W {LPWSTR pName ;}*PDRIVER_INFO_1W ;
typedef struct _DRIVER_INFO_1W {LPWSTR pName ;}*LPDRIVER_INFO_1W ;

typedef DRIVER_INFO_1A DRIVER_INFO_1 ;
typedef PDRIVER_INFO_1A PDRIVER_INFO_1 ;
typedef LPDRIVER_INFO_1A LPDRIVER_INFO_1 ;
typedef struct _DRIVER_INFO_2A {DWORD cVersion ;LPSTR pName ;LPSTR pEnvironment ;LPSTR pDriverPath ;LPSTR pDataFile ;LPSTR pConfigFile ;}DRIVER_INFO_2A ;
typedef struct _DRIVER_INFO_2A {DWORD cVersion ;LPSTR pName ;LPSTR pEnvironment ;LPSTR pDriverPath ;LPSTR pDataFile ;LPSTR pConfigFile ;}*PDRIVER_INFO_2A ;
typedef struct _DRIVER_INFO_2A {DWORD cVersion ;LPSTR pName ;LPSTR pEnvironment ;LPSTR pDriverPath ;LPSTR pDataFile ;LPSTR pConfigFile ;}*LPDRIVER_INFO_2A ;

typedef struct _DRIVER_INFO_2W {DWORD cVersion ;LPWSTR pName ;LPWSTR pEnvironment ;LPWSTR pDriverPath ;LPWSTR pDataFile ;LPWSTR pConfigFile ;}DRIVER_INFO_2W ;
typedef struct _DRIVER_INFO_2W {DWORD cVersion ;LPWSTR pName ;LPWSTR pEnvironment ;LPWSTR pDriverPath ;LPWSTR pDataFile ;LPWSTR pConfigFile ;}*PDRIVER_INFO_2W ;
typedef struct _DRIVER_INFO_2W {DWORD cVersion ;LPWSTR pName ;LPWSTR pEnvironment ;LPWSTR pDriverPath ;LPWSTR pDataFile ;LPWSTR pConfigFile ;}*LPDRIVER_INFO_2W ;

typedef DRIVER_INFO_2A DRIVER_INFO_2 ;
typedef PDRIVER_INFO_2A PDRIVER_INFO_2 ;
typedef LPDRIVER_INFO_2A LPDRIVER_INFO_2 ;
typedef struct _DRIVER_INFO_3A {DWORD cVersion ;LPSTR pName ;LPSTR pEnvironment ;LPSTR pDriverPath ;LPSTR pDataFile ;LPSTR pConfigFile ;LPSTR pHelpFile ;LPSTR pDependentFiles ;LPSTR pMonitorName ;LPSTR pDefaultDataType ;}DRIVER_INFO_3A ;
typedef struct _DRIVER_INFO_3A {DWORD cVersion ;LPSTR pName ;LPSTR pEnvironment ;LPSTR pDriverPath ;LPSTR pDataFile ;LPSTR pConfigFile ;LPSTR pHelpFile ;LPSTR pDependentFiles ;LPSTR pMonitorName ;LPSTR pDefaultDataType ;}*PDRIVER_INFO_3A ;
typedef struct _DRIVER_INFO_3A {DWORD cVersion ;LPSTR pName ;LPSTR pEnvironment ;LPSTR pDriverPath ;LPSTR pDataFile ;LPSTR pConfigFile ;LPSTR pHelpFile ;LPSTR pDependentFiles ;LPSTR pMonitorName ;LPSTR pDefaultDataType ;}*LPDRIVER_INFO_3A ;

typedef struct _DRIVER_INFO_3W {DWORD cVersion ;LPWSTR pName ;LPWSTR pEnvironment ;LPWSTR pDriverPath ;LPWSTR pDataFile ;LPWSTR pConfigFile ;LPWSTR pHelpFile ;LPWSTR pDependentFiles ;LPWSTR pMonitorName ;LPWSTR pDefaultDataType ;}DRIVER_INFO_3W ;
typedef struct _DRIVER_INFO_3W {DWORD cVersion ;LPWSTR pName ;LPWSTR pEnvironment ;LPWSTR pDriverPath ;LPWSTR pDataFile ;LPWSTR pConfigFile ;LPWSTR pHelpFile ;LPWSTR pDependentFiles ;LPWSTR pMonitorName ;LPWSTR pDefaultDataType ;}*PDRIVER_INFO_3W ;
typedef struct _DRIVER_INFO_3W {DWORD cVersion ;LPWSTR pName ;LPWSTR pEnvironment ;LPWSTR pDriverPath ;LPWSTR pDataFile ;LPWSTR pConfigFile ;LPWSTR pHelpFile ;LPWSTR pDependentFiles ;LPWSTR pMonitorName ;LPWSTR pDefaultDataType ;}*LPDRIVER_INFO_3W ;

typedef DRIVER_INFO_3A DRIVER_INFO_3 ;
typedef PDRIVER_INFO_3A PDRIVER_INFO_3 ;
typedef LPDRIVER_INFO_3A LPDRIVER_INFO_3 ;
typedef struct _DRIVER_INFO_4A {DWORD cVersion ;LPSTR pName ;LPSTR pEnvironment ;LPSTR pDriverPath ;LPSTR pDataFile ;LPSTR pConfigFile ;LPSTR pHelpFile ;LPSTR pDependentFiles ;LPSTR pMonitorName ;LPSTR pDefaultDataType ;LPSTR pszzPreviousNames ;}DRIVER_INFO_4A ;
typedef struct _DRIVER_INFO_4A {DWORD cVersion ;LPSTR pName ;LPSTR pEnvironment ;LPSTR pDriverPath ;LPSTR pDataFile ;LPSTR pConfigFile ;LPSTR pHelpFile ;LPSTR pDependentFiles ;LPSTR pMonitorName ;LPSTR pDefaultDataType ;LPSTR pszzPreviousNames ;}*PDRIVER_INFO_4A ;
typedef struct _DRIVER_INFO_4A {DWORD cVersion ;LPSTR pName ;LPSTR pEnvironment ;LPSTR pDriverPath ;LPSTR pDataFile ;LPSTR pConfigFile ;LPSTR pHelpFile ;LPSTR pDependentFiles ;LPSTR pMonitorName ;LPSTR pDefaultDataType ;LPSTR pszzPreviousNames ;}*LPDRIVER_INFO_4A ;

typedef struct _DRIVER_INFO_4W {DWORD cVersion ;LPWSTR pName ;LPWSTR pEnvironment ;LPWSTR pDriverPath ;LPWSTR pDataFile ;LPWSTR pConfigFile ;LPWSTR pHelpFile ;LPWSTR pDependentFiles ;LPWSTR pMonitorName ;LPWSTR pDefaultDataType ;LPWSTR pszzPreviousNames ;}DRIVER_INFO_4W ;
typedef struct _DRIVER_INFO_4W {DWORD cVersion ;LPWSTR pName ;LPWSTR pEnvironment ;LPWSTR pDriverPath ;LPWSTR pDataFile ;LPWSTR pConfigFile ;LPWSTR pHelpFile ;LPWSTR pDependentFiles ;LPWSTR pMonitorName ;LPWSTR pDefaultDataType ;LPWSTR pszzPreviousNames ;}*PDRIVER_INFO_4W ;
typedef struct _DRIVER_INFO_4W {DWORD cVersion ;LPWSTR pName ;LPWSTR pEnvironment ;LPWSTR pDriverPath ;LPWSTR pDataFile ;LPWSTR pConfigFile ;LPWSTR pHelpFile ;LPWSTR pDependentFiles ;LPWSTR pMonitorName ;LPWSTR pDefaultDataType ;LPWSTR pszzPreviousNames ;}*LPDRIVER_INFO_4W ;

typedef DRIVER_INFO_4A DRIVER_INFO_4 ;
typedef PDRIVER_INFO_4A PDRIVER_INFO_4 ;
typedef LPDRIVER_INFO_4A LPDRIVER_INFO_4 ;
typedef struct _DRIVER_INFO_5A {DWORD cVersion ;LPSTR pName ;LPSTR pEnvironment ;LPSTR pDriverPath ;LPSTR pDataFile ;LPSTR pConfigFile ;DWORD dwDriverAttributes ;DWORD dwConfigVersion ;DWORD dwDriverVersion ;}DRIVER_INFO_5A ;
typedef struct _DRIVER_INFO_5A {DWORD cVersion ;LPSTR pName ;LPSTR pEnvironment ;LPSTR pDriverPath ;LPSTR pDataFile ;LPSTR pConfigFile ;DWORD dwDriverAttributes ;DWORD dwConfigVersion ;DWORD dwDriverVersion ;}*PDRIVER_INFO_5A ;
typedef struct _DRIVER_INFO_5A {DWORD cVersion ;LPSTR pName ;LPSTR pEnvironment ;LPSTR pDriverPath ;LPSTR pDataFile ;LPSTR pConfigFile ;DWORD dwDriverAttributes ;DWORD dwConfigVersion ;DWORD dwDriverVersion ;}*LPDRIVER_INFO_5A ;

typedef struct _DRIVER_INFO_5W {DWORD cVersion ;LPWSTR pName ;LPWSTR pEnvironment ;LPWSTR pDriverPath ;LPWSTR pDataFile ;LPWSTR pConfigFile ;DWORD dwDriverAttributes ;DWORD dwConfigVersion ;DWORD dwDriverVersion ;}DRIVER_INFO_5W ;
typedef struct _DRIVER_INFO_5W {DWORD cVersion ;LPWSTR pName ;LPWSTR pEnvironment ;LPWSTR pDriverPath ;LPWSTR pDataFile ;LPWSTR pConfigFile ;DWORD dwDriverAttributes ;DWORD dwConfigVersion ;DWORD dwDriverVersion ;}*PDRIVER_INFO_5W ;
typedef struct _DRIVER_INFO_5W {DWORD cVersion ;LPWSTR pName ;LPWSTR pEnvironment ;LPWSTR pDriverPath ;LPWSTR pDataFile ;LPWSTR pConfigFile ;DWORD dwDriverAttributes ;DWORD dwConfigVersion ;DWORD dwDriverVersion ;}*LPDRIVER_INFO_5W ;

typedef DRIVER_INFO_5A DRIVER_INFO_5 ;
typedef PDRIVER_INFO_5A PDRIVER_INFO_5 ;
typedef LPDRIVER_INFO_5A LPDRIVER_INFO_5 ;
typedef struct _DRIVER_INFO_6A {DWORD cVersion ;LPSTR pName ;LPSTR pEnvironment ;LPSTR pDriverPath ;LPSTR pDataFile ;LPSTR pConfigFile ;LPSTR pHelpFile ;LPSTR pDependentFiles ;LPSTR pMonitorName ;LPSTR pDefaultDataType ;LPSTR pszzPreviousNames ;FILETIME ftDriverDate ;DWORDLONG dwlDriverVersion ;LPSTR pszMfgName ;LPSTR pszOEMUrl ;LPSTR pszHardwareID ;LPSTR pszProvider ;}DRIVER_INFO_6A ;
typedef struct _DRIVER_INFO_6A {DWORD cVersion ;LPSTR pName ;LPSTR pEnvironment ;LPSTR pDriverPath ;LPSTR pDataFile ;LPSTR pConfigFile ;LPSTR pHelpFile ;LPSTR pDependentFiles ;LPSTR pMonitorName ;LPSTR pDefaultDataType ;LPSTR pszzPreviousNames ;FILETIME ftDriverDate ;DWORDLONG dwlDriverVersion ;LPSTR pszMfgName ;LPSTR pszOEMUrl ;LPSTR pszHardwareID ;LPSTR pszProvider ;}*PDRIVER_INFO_6A ;
typedef struct _DRIVER_INFO_6A {DWORD cVersion ;LPSTR pName ;LPSTR pEnvironment ;LPSTR pDriverPath ;LPSTR pDataFile ;LPSTR pConfigFile ;LPSTR pHelpFile ;LPSTR pDependentFiles ;LPSTR pMonitorName ;LPSTR pDefaultDataType ;LPSTR pszzPreviousNames ;FILETIME ftDriverDate ;DWORDLONG dwlDriverVersion ;LPSTR pszMfgName ;LPSTR pszOEMUrl ;LPSTR pszHardwareID ;LPSTR pszProvider ;}*LPDRIVER_INFO_6A ;

typedef struct _DRIVER_INFO_6W {DWORD cVersion ;LPWSTR pName ;LPWSTR pEnvironment ;LPWSTR pDriverPath ;LPWSTR pDataFile ;LPWSTR pConfigFile ;LPWSTR pHelpFile ;LPWSTR pDependentFiles ;LPWSTR pMonitorName ;LPWSTR pDefaultDataType ;LPWSTR pszzPreviousNames ;FILETIME ftDriverDate ;DWORDLONG dwlDriverVersion ;LPWSTR pszMfgName ;LPWSTR pszOEMUrl ;LPWSTR pszHardwareID ;LPWSTR pszProvider ;}DRIVER_INFO_6W ;
typedef struct _DRIVER_INFO_6W {DWORD cVersion ;LPWSTR pName ;LPWSTR pEnvironment ;LPWSTR pDriverPath ;LPWSTR pDataFile ;LPWSTR pConfigFile ;LPWSTR pHelpFile ;LPWSTR pDependentFiles ;LPWSTR pMonitorName ;LPWSTR pDefaultDataType ;LPWSTR pszzPreviousNames ;FILETIME ftDriverDate ;DWORDLONG dwlDriverVersion ;LPWSTR pszMfgName ;LPWSTR pszOEMUrl ;LPWSTR pszHardwareID ;LPWSTR pszProvider ;}*PDRIVER_INFO_6W ;
typedef struct _DRIVER_INFO_6W {DWORD cVersion ;LPWSTR pName ;LPWSTR pEnvironment ;LPWSTR pDriverPath ;LPWSTR pDataFile ;LPWSTR pConfigFile ;LPWSTR pHelpFile ;LPWSTR pDependentFiles ;LPWSTR pMonitorName ;LPWSTR pDefaultDataType ;LPWSTR pszzPreviousNames ;FILETIME ftDriverDate ;DWORDLONG dwlDriverVersion ;LPWSTR pszMfgName ;LPWSTR pszOEMUrl ;LPWSTR pszHardwareID ;LPWSTR pszProvider ;}*LPDRIVER_INFO_6W ;

typedef DRIVER_INFO_6A DRIVER_INFO_6 ;
typedef PDRIVER_INFO_6A PDRIVER_INFO_6 ;
typedef LPDRIVER_INFO_6A LPDRIVER_INFO_6 ;
typedef struct _DOC_INFO_1A {LPSTR pDocName ;LPSTR pOutputFile ;LPSTR pDatatype ;}DOC_INFO_1A ;
typedef struct _DOC_INFO_1A {LPSTR pDocName ;LPSTR pOutputFile ;LPSTR pDatatype ;}*PDOC_INFO_1A ;
typedef struct _DOC_INFO_1A {LPSTR pDocName ;LPSTR pOutputFile ;LPSTR pDatatype ;}*LPDOC_INFO_1A ;

typedef struct _DOC_INFO_1W {LPWSTR pDocName ;LPWSTR pOutputFile ;LPWSTR pDatatype ;}DOC_INFO_1W ;
typedef struct _DOC_INFO_1W {LPWSTR pDocName ;LPWSTR pOutputFile ;LPWSTR pDatatype ;}*PDOC_INFO_1W ;
typedef struct _DOC_INFO_1W {LPWSTR pDocName ;LPWSTR pOutputFile ;LPWSTR pDatatype ;}*LPDOC_INFO_1W ;

typedef DOC_INFO_1A DOC_INFO_1 ;
typedef PDOC_INFO_1A PDOC_INFO_1 ;
typedef LPDOC_INFO_1A LPDOC_INFO_1 ;
typedef struct _FORM_INFO_1A {DWORD Flags ;LPSTR pName ;SIZEL Size ;RECTL ImageableArea ;}FORM_INFO_1A ;
typedef struct _FORM_INFO_1A {DWORD Flags ;LPSTR pName ;SIZEL Size ;RECTL ImageableArea ;}*PFORM_INFO_1A ;
typedef struct _FORM_INFO_1A {DWORD Flags ;LPSTR pName ;SIZEL Size ;RECTL ImageableArea ;}*LPFORM_INFO_1A ;

typedef struct _FORM_INFO_1W {DWORD Flags ;LPWSTR pName ;SIZEL Size ;RECTL ImageableArea ;}FORM_INFO_1W ;
typedef struct _FORM_INFO_1W {DWORD Flags ;LPWSTR pName ;SIZEL Size ;RECTL ImageableArea ;}*PFORM_INFO_1W ;
typedef struct _FORM_INFO_1W {DWORD Flags ;LPWSTR pName ;SIZEL Size ;RECTL ImageableArea ;}*LPFORM_INFO_1W ;

typedef FORM_INFO_1A FORM_INFO_1 ;
typedef PFORM_INFO_1A PFORM_INFO_1 ;
typedef LPFORM_INFO_1A LPFORM_INFO_1 ;
typedef struct _DOC_INFO_2A {LPSTR pDocName ;LPSTR pOutputFile ;LPSTR pDatatype ;DWORD dwMode ;DWORD JobId ;}DOC_INFO_2A ;
typedef struct _DOC_INFO_2A {LPSTR pDocName ;LPSTR pOutputFile ;LPSTR pDatatype ;DWORD dwMode ;DWORD JobId ;}*PDOC_INFO_2A ;
typedef struct _DOC_INFO_2A {LPSTR pDocName ;LPSTR pOutputFile ;LPSTR pDatatype ;DWORD dwMode ;DWORD JobId ;}*LPDOC_INFO_2A ;

typedef struct _DOC_INFO_2W {LPWSTR pDocName ;LPWSTR pOutputFile ;LPWSTR pDatatype ;DWORD dwMode ;DWORD JobId ;}DOC_INFO_2W ;
typedef struct _DOC_INFO_2W {LPWSTR pDocName ;LPWSTR pOutputFile ;LPWSTR pDatatype ;DWORD dwMode ;DWORD JobId ;}*PDOC_INFO_2W ;
typedef struct _DOC_INFO_2W {LPWSTR pDocName ;LPWSTR pOutputFile ;LPWSTR pDatatype ;DWORD dwMode ;DWORD JobId ;}*LPDOC_INFO_2W ;

typedef DOC_INFO_2A DOC_INFO_2 ;
typedef PDOC_INFO_2A PDOC_INFO_2 ;
typedef LPDOC_INFO_2A LPDOC_INFO_2 ;
typedef struct _DOC_INFO_3A {LPSTR pDocName ;LPSTR pOutputFile ;LPSTR pDatatype ;DWORD dwFlags ;}DOC_INFO_3A ;
typedef struct _DOC_INFO_3A {LPSTR pDocName ;LPSTR pOutputFile ;LPSTR pDatatype ;DWORD dwFlags ;}*PDOC_INFO_3A ;
typedef struct _DOC_INFO_3A {LPSTR pDocName ;LPSTR pOutputFile ;LPSTR pDatatype ;DWORD dwFlags ;}*LPDOC_INFO_3A ;

typedef struct _DOC_INFO_3W {LPWSTR pDocName ;LPWSTR pOutputFile ;LPWSTR pDatatype ;DWORD dwFlags ;}DOC_INFO_3W ;
typedef struct _DOC_INFO_3W {LPWSTR pDocName ;LPWSTR pOutputFile ;LPWSTR pDatatype ;DWORD dwFlags ;}*PDOC_INFO_3W ;
typedef struct _DOC_INFO_3W {LPWSTR pDocName ;LPWSTR pOutputFile ;LPWSTR pDatatype ;DWORD dwFlags ;}*LPDOC_INFO_3W ;

typedef DOC_INFO_3A DOC_INFO_3 ;
typedef PDOC_INFO_3A PDOC_INFO_3 ;
typedef LPDOC_INFO_3A LPDOC_INFO_3 ;
typedef struct _PRINTPROCESSOR_INFO_1A {LPSTR pName ;}PRINTPROCESSOR_INFO_1A ;
typedef struct _PRINTPROCESSOR_INFO_1A {LPSTR pName ;}*PPRINTPROCESSOR_INFO_1A ;
typedef struct _PRINTPROCESSOR_INFO_1A {LPSTR pName ;}*LPPRINTPROCESSOR_INFO_1A ;

typedef struct _PRINTPROCESSOR_INFO_1W {LPWSTR pName ;}PRINTPROCESSOR_INFO_1W ;
typedef struct _PRINTPROCESSOR_INFO_1W {LPWSTR pName ;}*PPRINTPROCESSOR_INFO_1W ;
typedef struct _PRINTPROCESSOR_INFO_1W {LPWSTR pName ;}*LPPRINTPROCESSOR_INFO_1W ;

typedef PRINTPROCESSOR_INFO_1A PRINTPROCESSOR_INFO_1 ;
typedef PPRINTPROCESSOR_INFO_1A PPRINTPROCESSOR_INFO_1 ;
typedef LPPRINTPROCESSOR_INFO_1A LPPRINTPROCESSOR_INFO_1 ;
typedef struct _PRINTPROCESSOR_CAPS_1 {DWORD dwLevel ;DWORD dwNupOptions ;DWORD dwPageOrderFlags ;DWORD dwNumberOfCopies ;}PRINTPROCESSOR_CAPS_1 ;
typedef struct _PRINTPROCESSOR_CAPS_1 {DWORD dwLevel ;DWORD dwNupOptions ;DWORD dwPageOrderFlags ;DWORD dwNumberOfCopies ;}*PPRINTPROCESSOR_CAPS_1 ;

typedef struct _PORT_INFO_1A {LPSTR pName ;}PORT_INFO_1A ;
typedef struct _PORT_INFO_1A {LPSTR pName ;}*PPORT_INFO_1A ;
typedef struct _PORT_INFO_1A {LPSTR pName ;}*LPPORT_INFO_1A ;

typedef struct _PORT_INFO_1W {LPWSTR pName ;}PORT_INFO_1W ;
typedef struct _PORT_INFO_1W {LPWSTR pName ;}*PPORT_INFO_1W ;
typedef struct _PORT_INFO_1W {LPWSTR pName ;}*LPPORT_INFO_1W ;

typedef PORT_INFO_1A PORT_INFO_1 ;
typedef PPORT_INFO_1A PPORT_INFO_1 ;
typedef LPPORT_INFO_1A LPPORT_INFO_1 ;
typedef struct _PORT_INFO_2A {LPSTR pPortName ;LPSTR pMonitorName ;LPSTR pDescription ;DWORD fPortType ;DWORD Reserved ;}PORT_INFO_2A ;
typedef struct _PORT_INFO_2A {LPSTR pPortName ;LPSTR pMonitorName ;LPSTR pDescription ;DWORD fPortType ;DWORD Reserved ;}*PPORT_INFO_2A ;
typedef struct _PORT_INFO_2A {LPSTR pPortName ;LPSTR pMonitorName ;LPSTR pDescription ;DWORD fPortType ;DWORD Reserved ;}*LPPORT_INFO_2A ;

typedef struct _PORT_INFO_2W {LPWSTR pPortName ;LPWSTR pMonitorName ;LPWSTR pDescription ;DWORD fPortType ;DWORD Reserved ;}PORT_INFO_2W ;
typedef struct _PORT_INFO_2W {LPWSTR pPortName ;LPWSTR pMonitorName ;LPWSTR pDescription ;DWORD fPortType ;DWORD Reserved ;}*PPORT_INFO_2W ;
typedef struct _PORT_INFO_2W {LPWSTR pPortName ;LPWSTR pMonitorName ;LPWSTR pDescription ;DWORD fPortType ;DWORD Reserved ;}*LPPORT_INFO_2W ;

typedef PORT_INFO_2A PORT_INFO_2 ;
typedef PPORT_INFO_2A PPORT_INFO_2 ;
typedef LPPORT_INFO_2A LPPORT_INFO_2 ;
typedef struct _PORT_INFO_3A {DWORD dwStatus ;LPSTR pszStatus ;DWORD dwSeverity ;}PORT_INFO_3A ;
typedef struct _PORT_INFO_3A {DWORD dwStatus ;LPSTR pszStatus ;DWORD dwSeverity ;}*PPORT_INFO_3A ;
typedef struct _PORT_INFO_3A {DWORD dwStatus ;LPSTR pszStatus ;DWORD dwSeverity ;}*LPPORT_INFO_3A ;

typedef struct _PORT_INFO_3W {DWORD dwStatus ;LPWSTR pszStatus ;DWORD dwSeverity ;}PORT_INFO_3W ;
typedef struct _PORT_INFO_3W {DWORD dwStatus ;LPWSTR pszStatus ;DWORD dwSeverity ;}*PPORT_INFO_3W ;
typedef struct _PORT_INFO_3W {DWORD dwStatus ;LPWSTR pszStatus ;DWORD dwSeverity ;}*LPPORT_INFO_3W ;

typedef PORT_INFO_3A PORT_INFO_3 ;
typedef PPORT_INFO_3A PPORT_INFO_3 ;
typedef LPPORT_INFO_3A LPPORT_INFO_3 ;
typedef struct _MONITOR_INFO_1A {LPSTR pName ;}MONITOR_INFO_1A ;
typedef struct _MONITOR_INFO_1A {LPSTR pName ;}*PMONITOR_INFO_1A ;
typedef struct _MONITOR_INFO_1A {LPSTR pName ;}*LPMONITOR_INFO_1A ;

typedef struct _MONITOR_INFO_1W {LPWSTR pName ;}MONITOR_INFO_1W ;
typedef struct _MONITOR_INFO_1W {LPWSTR pName ;}*PMONITOR_INFO_1W ;
typedef struct _MONITOR_INFO_1W {LPWSTR pName ;}*LPMONITOR_INFO_1W ;

typedef MONITOR_INFO_1A MONITOR_INFO_1 ;
typedef PMONITOR_INFO_1A PMONITOR_INFO_1 ;
typedef LPMONITOR_INFO_1A LPMONITOR_INFO_1 ;
typedef struct _MONITOR_INFO_2A {LPSTR pName ;LPSTR pEnvironment ;LPSTR pDLLName ;}MONITOR_INFO_2A ;
typedef struct _MONITOR_INFO_2A {LPSTR pName ;LPSTR pEnvironment ;LPSTR pDLLName ;}*PMONITOR_INFO_2A ;
typedef struct _MONITOR_INFO_2A {LPSTR pName ;LPSTR pEnvironment ;LPSTR pDLLName ;}*LPMONITOR_INFO_2A ;

typedef struct _MONITOR_INFO_2W {LPWSTR pName ;LPWSTR pEnvironment ;LPWSTR pDLLName ;}MONITOR_INFO_2W ;
typedef struct _MONITOR_INFO_2W {LPWSTR pName ;LPWSTR pEnvironment ;LPWSTR pDLLName ;}*PMONITOR_INFO_2W ;
typedef struct _MONITOR_INFO_2W {LPWSTR pName ;LPWSTR pEnvironment ;LPWSTR pDLLName ;}*LPMONITOR_INFO_2W ;

typedef MONITOR_INFO_2A MONITOR_INFO_2 ;
typedef PMONITOR_INFO_2A PMONITOR_INFO_2 ;
typedef LPMONITOR_INFO_2A LPMONITOR_INFO_2 ;
typedef struct _DATATYPES_INFO_1A {LPSTR pName ;}DATATYPES_INFO_1A ;
typedef struct _DATATYPES_INFO_1A {LPSTR pName ;}*PDATATYPES_INFO_1A ;
typedef struct _DATATYPES_INFO_1A {LPSTR pName ;}*LPDATATYPES_INFO_1A ;

typedef struct _DATATYPES_INFO_1W {LPWSTR pName ;}DATATYPES_INFO_1W ;
typedef struct _DATATYPES_INFO_1W {LPWSTR pName ;}*PDATATYPES_INFO_1W ;
typedef struct _DATATYPES_INFO_1W {LPWSTR pName ;}*LPDATATYPES_INFO_1W ;

typedef DATATYPES_INFO_1A DATATYPES_INFO_1 ;
typedef PDATATYPES_INFO_1A PDATATYPES_INFO_1 ;
typedef LPDATATYPES_INFO_1A LPDATATYPES_INFO_1 ;
typedef struct _PRINTER_DEFAULTSA {LPSTR pDatatype ;LPDEVMODEA pDevMode ;ACCESS_MASK DesiredAccess ;}PRINTER_DEFAULTSA ;
typedef struct _PRINTER_DEFAULTSA {LPSTR pDatatype ;LPDEVMODEA pDevMode ;ACCESS_MASK DesiredAccess ;}*PPRINTER_DEFAULTSA ;
typedef struct _PRINTER_DEFAULTSA {LPSTR pDatatype ;LPDEVMODEA pDevMode ;ACCESS_MASK DesiredAccess ;}*LPPRINTER_DEFAULTSA ;

typedef struct _PRINTER_DEFAULTSW {LPWSTR pDatatype ;LPDEVMODEW pDevMode ;ACCESS_MASK DesiredAccess ;}PRINTER_DEFAULTSW ;
typedef struct _PRINTER_DEFAULTSW {LPWSTR pDatatype ;LPDEVMODEW pDevMode ;ACCESS_MASK DesiredAccess ;}*PPRINTER_DEFAULTSW ;
typedef struct _PRINTER_DEFAULTSW {LPWSTR pDatatype ;LPDEVMODEW pDevMode ;ACCESS_MASK DesiredAccess ;}*LPPRINTER_DEFAULTSW ;

typedef PRINTER_DEFAULTSA PRINTER_DEFAULTS ;
typedef PPRINTER_DEFAULTSA PPRINTER_DEFAULTS ;
typedef LPPRINTER_DEFAULTSA LPPRINTER_DEFAULTS ;
typedef struct _PRINTER_ENUM_VALUESA {LPSTR pValueName ;DWORD cbValueName ;DWORD dwType ;LPBYTE pData ;DWORD cbData ;}PRINTER_ENUM_VALUESA ;
typedef struct _PRINTER_ENUM_VALUESA {LPSTR pValueName ;DWORD cbValueName ;DWORD dwType ;LPBYTE pData ;DWORD cbData ;}*PPRINTER_ENUM_VALUESA ;
typedef struct _PRINTER_ENUM_VALUESA {LPSTR pValueName ;DWORD cbValueName ;DWORD dwType ;LPBYTE pData ;DWORD cbData ;}*LPPRINTER_ENUM_VALUESA ;

typedef struct _PRINTER_ENUM_VALUESW {LPWSTR pValueName ;DWORD cbValueName ;DWORD dwType ;LPBYTE pData ;DWORD cbData ;}PRINTER_ENUM_VALUESW ;
typedef struct _PRINTER_ENUM_VALUESW {LPWSTR pValueName ;DWORD cbValueName ;DWORD dwType ;LPBYTE pData ;DWORD cbData ;}*PPRINTER_ENUM_VALUESW ;
typedef struct _PRINTER_ENUM_VALUESW {LPWSTR pValueName ;DWORD cbValueName ;DWORD dwType ;LPBYTE pData ;DWORD cbData ;}*LPPRINTER_ENUM_VALUESW ;

typedef PRINTER_ENUM_VALUESA PRINTER_ENUM_VALUES ;
typedef PPRINTER_ENUM_VALUESA PPRINTER_ENUM_VALUES ;
typedef LPPRINTER_ENUM_VALUESA LPPRINTER_ENUM_VALUES ;
WINBOOL EnumPrintersA (DWORD Flags ,LPSTR Name ,DWORD Level ,LPBYTE pPrinterEnum ,DWORD cbBuf ,LPDWORD pcbNeeded ,LPDWORD pcReturned );
WINBOOL EnumPrintersW (DWORD Flags ,LPWSTR Name ,DWORD Level ,LPBYTE pPrinterEnum ,DWORD cbBuf ,LPDWORD pcbNeeded ,LPDWORD pcReturned );
WINBOOL OpenPrinterA (LPSTR pPrinterName ,LPHANDLE phPrinter ,LPPRINTER_DEFAULTSA pDefault );
WINBOOL OpenPrinterW (LPWSTR pPrinterName ,LPHANDLE phPrinter ,LPPRINTER_DEFAULTSW pDefault );
WINBOOL ResetPrinterA (HANDLE hPrinter ,LPPRINTER_DEFAULTSA pDefault );
WINBOOL ResetPrinterW (HANDLE hPrinter ,LPPRINTER_DEFAULTSW pDefault );
WINBOOL SetJobA (HANDLE hPrinter ,DWORD JobId ,DWORD Level ,LPBYTE pJob ,DWORD Command );
WINBOOL SetJobW (HANDLE hPrinter ,DWORD JobId ,DWORD Level ,LPBYTE pJob ,DWORD Command );
WINBOOL GetJobA (HANDLE hPrinter ,DWORD JobId ,DWORD Level ,LPBYTE pJob ,DWORD cbBuf ,LPDWORD pcbNeeded );
WINBOOL GetJobW (HANDLE hPrinter ,DWORD JobId ,DWORD Level ,LPBYTE pJob ,DWORD cbBuf ,LPDWORD pcbNeeded );
WINBOOL EnumJobsA (HANDLE hPrinter ,DWORD FirstJob ,DWORD NoJobs ,DWORD Level ,LPBYTE pJob ,DWORD cbBuf ,LPDWORD pcbNeeded ,LPDWORD pcReturned );
WINBOOL EnumJobsW (HANDLE hPrinter ,DWORD FirstJob ,DWORD NoJobs ,DWORD Level ,LPBYTE pJob ,DWORD cbBuf ,LPDWORD pcbNeeded ,LPDWORD pcReturned );
HANDLE AddPrinterA (LPSTR pName ,DWORD Level ,LPBYTE pPrinter );
HANDLE AddPrinterW (LPWSTR pName ,DWORD Level ,LPBYTE pPrinter );
WINBOOL DeletePrinter (HANDLE hPrinter );
WINBOOL SetPrinterA (HANDLE hPrinter ,DWORD Level ,LPBYTE pPrinter ,DWORD Command );
WINBOOL SetPrinterW (HANDLE hPrinter ,DWORD Level ,LPBYTE pPrinter ,DWORD Command );
WINBOOL GetPrinterA (HANDLE hPrinter ,DWORD Level ,LPBYTE pPrinter ,DWORD cbBuf ,LPDWORD pcbNeeded );
WINBOOL GetPrinterW (HANDLE hPrinter ,DWORD Level ,LPBYTE pPrinter ,DWORD cbBuf ,LPDWORD pcbNeeded );
WINBOOL AddPrinterDriverA (LPSTR pName ,DWORD Level ,LPBYTE pDriverInfo );
WINBOOL AddPrinterDriverW (LPWSTR pName ,DWORD Level ,LPBYTE pDriverInfo );
WINBOOL AddPrinterDriverExA (LPSTR pName ,DWORD Level ,LPBYTE pDriverInfo ,DWORD dwFileCopyFlags );
WINBOOL AddPrinterDriverExW (LPWSTR pName ,DWORD Level ,LPBYTE pDriverInfo ,DWORD dwFileCopyFlags );
WINBOOL EnumPrinterDriversA (LPSTR pName ,LPSTR pEnvironment ,DWORD Level ,LPBYTE pDriverInfo ,DWORD cbBuf ,LPDWORD pcbNeeded ,LPDWORD pcReturned );
WINBOOL EnumPrinterDriversW (LPWSTR pName ,LPWSTR pEnvironment ,DWORD Level ,LPBYTE pDriverInfo ,DWORD cbBuf ,LPDWORD pcbNeeded ,LPDWORD pcReturned );
WINBOOL GetPrinterDriverA (HANDLE hPrinter ,LPSTR pEnvironment ,DWORD Level ,LPBYTE pDriverInfo ,DWORD cbBuf ,LPDWORD pcbNeeded );
WINBOOL GetPrinterDriverW (HANDLE hPrinter ,LPWSTR pEnvironment ,DWORD Level ,LPBYTE pDriverInfo ,DWORD cbBuf ,LPDWORD pcbNeeded );
WINBOOL GetPrinterDriverDirectoryA (LPSTR pName ,LPSTR pEnvironment ,DWORD Level ,LPBYTE pDriverDirectory ,DWORD cbBuf ,LPDWORD pcbNeeded );
WINBOOL GetPrinterDriverDirectoryW (LPWSTR pName ,LPWSTR pEnvironment ,DWORD Level ,LPBYTE pDriverDirectory ,DWORD cbBuf ,LPDWORD pcbNeeded );
WINBOOL DeletePrinterDriverA (LPSTR pName ,LPSTR pEnvironment ,LPSTR pDriverName );
WINBOOL DeletePrinterDriverW (LPWSTR pName ,LPWSTR pEnvironment ,LPWSTR pDriverName );
WINBOOL DeletePrinterDriverExA (LPSTR pName ,LPSTR pEnvironment ,LPSTR pDriverName ,DWORD dwDeleteFlag ,DWORD dwVersionFlag );
WINBOOL DeletePrinterDriverExW (LPWSTR pName ,LPWSTR pEnvironment ,LPWSTR pDriverName ,DWORD dwDeleteFlag ,DWORD dwVersionFlag );
WINBOOL AddPrintProcessorA (LPSTR pName ,LPSTR pEnvironment ,LPSTR pPathName ,LPSTR pPrintProcessorName );
WINBOOL AddPrintProcessorW (LPWSTR pName ,LPWSTR pEnvironment ,LPWSTR pPathName ,LPWSTR pPrintProcessorName );
WINBOOL EnumPrintProcessorsA (LPSTR pName ,LPSTR pEnvironment ,DWORD Level ,LPBYTE pPrintProcessorInfo ,DWORD cbBuf ,LPDWORD pcbNeeded ,LPDWORD pcReturned );
WINBOOL EnumPrintProcessorsW (LPWSTR pName ,LPWSTR pEnvironment ,DWORD Level ,LPBYTE pPrintProcessorInfo ,DWORD cbBuf ,LPDWORD pcbNeeded ,LPDWORD pcReturned );
WINBOOL GetPrintProcessorDirectoryA (LPSTR pName ,LPSTR pEnvironment ,DWORD Level ,LPBYTE pPrintProcessorInfo ,DWORD cbBuf ,LPDWORD pcbNeeded );
WINBOOL GetPrintProcessorDirectoryW (LPWSTR pName ,LPWSTR pEnvironment ,DWORD Level ,LPBYTE pPrintProcessorInfo ,DWORD cbBuf ,LPDWORD pcbNeeded );
WINBOOL EnumPrintProcessorDatatypesA (LPSTR pName ,LPSTR pPrintProcessorName ,DWORD Level ,LPBYTE pDatatypes ,DWORD cbBuf ,LPDWORD pcbNeeded ,LPDWORD pcReturned );
WINBOOL EnumPrintProcessorDatatypesW (LPWSTR pName ,LPWSTR pPrintProcessorName ,DWORD Level ,LPBYTE pDatatypes ,DWORD cbBuf ,LPDWORD pcbNeeded ,LPDWORD pcReturned );
WINBOOL DeletePrintProcessorA (LPSTR pName ,LPSTR pEnvironment ,LPSTR pPrintProcessorName );
WINBOOL DeletePrintProcessorW (LPWSTR pName ,LPWSTR pEnvironment ,LPWSTR pPrintProcessorName );
DWORD StartDocPrinterA (HANDLE hPrinter ,DWORD Level ,LPBYTE pDocInfo );
DWORD StartDocPrinterW (HANDLE hPrinter ,DWORD Level ,LPBYTE pDocInfo );
WINBOOL StartPagePrinter (HANDLE hPrinter );
WINBOOL WritePrinter (HANDLE hPrinter ,LPVOID pBuf ,DWORD cbBuf ,LPDWORD pcWritten );
WINBOOL FlushPrinter (HANDLE hPrinter ,LPVOID pBuf ,DWORD cbBuf ,LPDWORD pcWritten ,DWORD cSleep );
WINBOOL EndPagePrinter (HANDLE hPrinter );
WINBOOL AbortPrinter (HANDLE hPrinter );
WINBOOL ReadPrinter (HANDLE hPrinter ,LPVOID pBuf ,DWORD cbBuf ,LPDWORD pNoBytesRead );
WINBOOL EndDocPrinter (HANDLE hPrinter );
WINBOOL AddJobA (HANDLE hPrinter ,DWORD Level ,LPBYTE pData ,DWORD cbBuf ,LPDWORD pcbNeeded );
WINBOOL AddJobW (HANDLE hPrinter ,DWORD Level ,LPBYTE pData ,DWORD cbBuf ,LPDWORD pcbNeeded );
WINBOOL ScheduleJob (HANDLE hPrinter ,DWORD JobId );
WINBOOL PrinterProperties (HWND hWnd ,HANDLE hPrinter );
LONG DocumentPropertiesA (HWND hWnd ,HANDLE hPrinter ,LPSTR pDeviceName ,PDEVMODEA pDevModeOutput ,PDEVMODEA pDevModeInput ,DWORD fMode );
LONG DocumentPropertiesW (HWND hWnd ,HANDLE hPrinter ,LPWSTR pDeviceName ,PDEVMODEW pDevModeOutput ,PDEVMODEW pDevModeInput ,DWORD fMode );
LONG AdvancedDocumentPropertiesA (HWND hWnd ,HANDLE hPrinter ,LPSTR pDeviceName ,PDEVMODEA pDevModeOutput ,PDEVMODEA pDevModeInput );
LONG AdvancedDocumentPropertiesW (HWND hWnd ,HANDLE hPrinter ,LPWSTR pDeviceName ,PDEVMODEW pDevModeOutput ,PDEVMODEW pDevModeInput );
LONG ExtDeviceMode (HWND hWnd ,HANDLE hInst ,LPDEVMODEA pDevModeOutput ,LPSTR pDeviceName ,LPSTR pPort ,LPDEVMODEA pDevModeInput ,LPSTR pProfile ,DWORD fMode );
DWORD GetPrinterDataA (HANDLE hPrinter ,LPSTR pValueName ,LPDWORD pType ,LPBYTE pData ,DWORD nSize ,LPDWORD pcbNeeded );
DWORD GetPrinterDataW (HANDLE hPrinter ,LPWSTR pValueName ,LPDWORD pType ,LPBYTE pData ,DWORD nSize ,LPDWORD pcbNeeded );
DWORD GetPrinterDataExA (HANDLE hPrinter ,LPCSTR pKeyName ,LPCSTR pValueName ,LPDWORD pType ,LPBYTE pData ,DWORD nSize ,LPDWORD pcbNeeded );
DWORD GetPrinterDataExW (HANDLE hPrinter ,LPCWSTR pKeyName ,LPCWSTR pValueName ,LPDWORD pType ,LPBYTE pData ,DWORD nSize ,LPDWORD pcbNeeded );
DWORD EnumPrinterDataA (HANDLE hPrinter ,DWORD dwIndex ,LPSTR pValueName ,DWORD cbValueName ,LPDWORD pcbValueName ,LPDWORD pType ,LPBYTE pData ,DWORD cbData ,LPDWORD pcbData );
DWORD EnumPrinterDataW (HANDLE hPrinter ,DWORD dwIndex ,LPWSTR pValueName ,DWORD cbValueName ,LPDWORD pcbValueName ,LPDWORD pType ,LPBYTE pData ,DWORD cbData ,LPDWORD pcbData );
DWORD EnumPrinterDataExA (HANDLE hPrinter ,LPCSTR pKeyName ,LPBYTE pEnumValues ,DWORD cbEnumValues ,LPDWORD pcbEnumValues ,LPDWORD pnEnumValues );
DWORD EnumPrinterDataExW (HANDLE hPrinter ,LPCWSTR pKeyName ,LPBYTE pEnumValues ,DWORD cbEnumValues ,LPDWORD pcbEnumValues ,LPDWORD pnEnumValues );
DWORD EnumPrinterKeyA (HANDLE hPrinter ,LPCSTR pKeyName ,LPSTR pSubkey ,DWORD cbSubkey ,LPDWORD pcbSubkey );
DWORD EnumPrinterKeyW (HANDLE hPrinter ,LPCWSTR pKeyName ,LPWSTR pSubkey ,DWORD cbSubkey ,LPDWORD pcbSubkey );
DWORD SetPrinterDataA (HANDLE hPrinter ,LPSTR pValueName ,DWORD Type ,LPBYTE pData ,DWORD cbData );
DWORD SetPrinterDataW (HANDLE hPrinter ,LPWSTR pValueName ,DWORD Type ,LPBYTE pData ,DWORD cbData );
DWORD SetPrinterDataExA (HANDLE hPrinter ,LPCSTR pKeyName ,LPCSTR pValueName ,DWORD Type ,LPBYTE pData ,DWORD cbData );
DWORD SetPrinterDataExW (HANDLE hPrinter ,LPCWSTR pKeyName ,LPCWSTR pValueName ,DWORD Type ,LPBYTE pData ,DWORD cbData );
DWORD DeletePrinterDataA (HANDLE hPrinter ,LPSTR pValueName );
DWORD DeletePrinterDataW (HANDLE hPrinter ,LPWSTR pValueName );
DWORD DeletePrinterDataExA (HANDLE hPrinter ,LPCSTR pKeyName ,LPCSTR pValueName );
DWORD DeletePrinterDataExW (HANDLE hPrinter ,LPCWSTR pKeyName ,LPCWSTR pValueName );
DWORD DeletePrinterKeyA (HANDLE hPrinter ,LPCSTR pKeyName );
DWORD DeletePrinterKeyW (HANDLE hPrinter ,LPCWSTR pKeyName );
typedef struct _PRINTER_NOTIFY_OPTIONS_TYPE {WORD Type ;WORD Reserved0 ;DWORD Reserved1 ;DWORD Reserved2 ;DWORD Count ;PWORD pFields ;}PRINTER_NOTIFY_OPTIONS_TYPE ;
typedef struct _PRINTER_NOTIFY_OPTIONS_TYPE {WORD Type ;WORD Reserved0 ;DWORD Reserved1 ;DWORD Reserved2 ;DWORD Count ;PWORD pFields ;}*PPRINTER_NOTIFY_OPTIONS_TYPE ;
typedef struct _PRINTER_NOTIFY_OPTIONS_TYPE {WORD Type ;WORD Reserved0 ;DWORD Reserved1 ;DWORD Reserved2 ;DWORD Count ;PWORD pFields ;}*LPPRINTER_NOTIFY_OPTIONS_TYPE ;

typedef struct _PRINTER_NOTIFY_OPTIONS {DWORD Version ;DWORD Flags ;DWORD Count ;PPRINTER_NOTIFY_OPTIONS_TYPE pTypes ;}PRINTER_NOTIFY_OPTIONS ;
typedef struct _PRINTER_NOTIFY_OPTIONS {DWORD Version ;DWORD Flags ;DWORD Count ;PPRINTER_NOTIFY_OPTIONS_TYPE pTypes ;}*PPRINTER_NOTIFY_OPTIONS ;
typedef struct _PRINTER_NOTIFY_OPTIONS {DWORD Version ;DWORD Flags ;DWORD Count ;PPRINTER_NOTIFY_OPTIONS_TYPE pTypes ;}*LPPRINTER_NOTIFY_OPTIONS ;

typedef struct _PRINTER_NOTIFY_INFO_DATA {WORD Type ;WORD Field ;DWORD Reserved ;DWORD Id ;union {DWORD adwData [2 ];struct {DWORD cbBuf ;LPVOID pBuf ;}Data ;}NotifyData ;}PRINTER_NOTIFY_INFO_DATA ;
typedef struct _PRINTER_NOTIFY_INFO_DATA {WORD Type ;WORD Field ;DWORD Reserved ;DWORD Id ;union {DWORD adwData [2 ];struct {DWORD cbBuf ;LPVOID pBuf ;}Data ;}NotifyData ;}*PPRINTER_NOTIFY_INFO_DATA ;
typedef struct _PRINTER_NOTIFY_INFO_DATA {WORD Type ;WORD Field ;DWORD Reserved ;DWORD Id ;union {DWORD adwData [2 ];struct {DWORD cbBuf ;LPVOID pBuf ;}Data ;}NotifyData ;}*LPPRINTER_NOTIFY_INFO_DATA ;

typedef struct _PRINTER_NOTIFY_INFO {DWORD Version ;DWORD Flags ;DWORD Count ;PRINTER_NOTIFY_INFO_DATA aData [1 ];}PRINTER_NOTIFY_INFO ;
typedef struct _PRINTER_NOTIFY_INFO {DWORD Version ;DWORD Flags ;DWORD Count ;PRINTER_NOTIFY_INFO_DATA aData [1 ];}*PPRINTER_NOTIFY_INFO ;
typedef struct _PRINTER_NOTIFY_INFO {DWORD Version ;DWORD Flags ;DWORD Count ;PRINTER_NOTIFY_INFO_DATA aData [1 ];}*LPPRINTER_NOTIFY_INFO ;

typedef struct _BINARY_CONTAINER {DWORD cbBuf ;LPBYTE pData ;}BINARY_CONTAINER ;
typedef struct _BINARY_CONTAINER {DWORD cbBuf ;LPBYTE pData ;}*PBINARY_CONTAINER ;

typedef struct _BIDI_DATA {DWORD dwBidiType ;union {WINBOOL bData ;LONG iData ;LPWSTR sData ;FLOAT fData ;BINARY_CONTAINER biData ;}u ;}BIDI_DATA ;
typedef struct _BIDI_DATA {DWORD dwBidiType ;union {WINBOOL bData ;LONG iData ;LPWSTR sData ;FLOAT fData ;BINARY_CONTAINER biData ;}u ;}*PBIDI_DATA ;
typedef struct _BIDI_DATA {DWORD dwBidiType ;union {WINBOOL bData ;LONG iData ;LPWSTR sData ;FLOAT fData ;BINARY_CONTAINER biData ;}u ;}*LPBIDI_DATA ;

typedef struct _BIDI_REQUEST_DATA {DWORD dwReqNumber ;LPWSTR pSchema ;BIDI_DATA data ;}BIDI_REQUEST_DATA ;
typedef struct _BIDI_REQUEST_DATA {DWORD dwReqNumber ;LPWSTR pSchema ;BIDI_DATA data ;}*PBIDI_REQUEST_DATA ;
typedef struct _BIDI_REQUEST_DATA {DWORD dwReqNumber ;LPWSTR pSchema ;BIDI_DATA data ;}*LPBIDI_REQUEST_DATA ;

typedef struct _BIDI_REQUEST_CONTAINER {DWORD Version ;DWORD Flags ;DWORD Count ;BIDI_REQUEST_DATA aData [1 ];}BIDI_REQUEST_CONTAINER ;
typedef struct _BIDI_REQUEST_CONTAINER {DWORD Version ;DWORD Flags ;DWORD Count ;BIDI_REQUEST_DATA aData [1 ];}*PBIDI_REQUEST_CONTAINER ;
typedef struct _BIDI_REQUEST_CONTAINER {DWORD Version ;DWORD Flags ;DWORD Count ;BIDI_REQUEST_DATA aData [1 ];}*LPBIDI_REQUEST_CONTAINER ;

typedef struct _BIDI_RESPONSE_DATA {DWORD dwResult ;DWORD dwReqNumber ;LPWSTR pSchema ;BIDI_DATA data ;}BIDI_RESPONSE_DATA ;
typedef struct _BIDI_RESPONSE_DATA {DWORD dwResult ;DWORD dwReqNumber ;LPWSTR pSchema ;BIDI_DATA data ;}*PBIDI_RESPONSE_DATA ;
typedef struct _BIDI_RESPONSE_DATA {DWORD dwResult ;DWORD dwReqNumber ;LPWSTR pSchema ;BIDI_DATA data ;}*LPBIDI_RESPONSE_DATA ;

typedef struct _BIDI_RESPONSE_CONTAINER {DWORD Version ;DWORD Flags ;DWORD Count ;BIDI_RESPONSE_DATA aData [1 ];}BIDI_RESPONSE_CONTAINER ;
typedef struct _BIDI_RESPONSE_CONTAINER {DWORD Version ;DWORD Flags ;DWORD Count ;BIDI_RESPONSE_DATA aData [1 ];}*PBIDI_RESPONSE_CONTAINER ;
typedef struct _BIDI_RESPONSE_CONTAINER {DWORD Version ;DWORD Flags ;DWORD Count ;BIDI_RESPONSE_DATA aData [1 ];}*LPBIDI_RESPONSE_CONTAINER ;

typedef enum {BIDI_NULL =0 ,BIDI_INT =1 ,BIDI_FLOAT =2 ,BIDI_BOOL =3 ,BIDI_STRING =4 ,BIDI_TEXT =5 ,BIDI_ENUM =6 ,BIDI_BLOB =7 }BIDI_TYPE ;
DWORD WaitForPrinterChange (HANDLE hPrinter ,DWORD Flags );
HANDLE FindFirstPrinterChangeNotification (HANDLE hPrinter ,DWORD fdwFlags ,DWORD fdwOptions ,LPVOID pPrinterNotifyOptions );
WINBOOL FindNextPrinterChangeNotification (HANDLE hChange ,PDWORD pdwChange ,LPVOID pPrinterNotifyOptions ,LPVOID *ppPrinterNotifyInfo );
WINBOOL FreePrinterNotifyInfo (PPRINTER_NOTIFY_INFO pPrinterNotifyInfo );
WINBOOL FindClosePrinterChangeNotification (HANDLE hChange );
DWORD PrinterMessageBoxA (HANDLE hPrinter ,DWORD Error ,HWND hWnd ,LPSTR pText ,LPSTR pCaption ,DWORD dwType );
DWORD PrinterMessageBoxW (HANDLE hPrinter ,DWORD Error ,HWND hWnd ,LPWSTR pText ,LPWSTR pCaption ,DWORD dwType );
WINBOOL ClosePrinter (HANDLE hPrinter );
WINBOOL AddFormA (HANDLE hPrinter ,DWORD Level ,LPBYTE pForm );
WINBOOL AddFormW (HANDLE hPrinter ,DWORD Level ,LPBYTE pForm );
WINBOOL DeleteFormA (HANDLE hPrinter ,LPSTR pFormName );
WINBOOL DeleteFormW (HANDLE hPrinter ,LPWSTR pFormName );
WINBOOL GetFormA (HANDLE hPrinter ,LPSTR pFormName ,DWORD Level ,LPBYTE pForm ,DWORD cbBuf ,LPDWORD pcbNeeded );
WINBOOL GetFormW (HANDLE hPrinter ,LPWSTR pFormName ,DWORD Level ,LPBYTE pForm ,DWORD cbBuf ,LPDWORD pcbNeeded );
WINBOOL SetFormA (HANDLE hPrinter ,LPSTR pFormName ,DWORD Level ,LPBYTE pForm );
WINBOOL SetFormW (HANDLE hPrinter ,LPWSTR pFormName ,DWORD Level ,LPBYTE pForm );
WINBOOL EnumFormsA (HANDLE hPrinter ,DWORD Level ,LPBYTE pForm ,DWORD cbBuf ,LPDWORD pcbNeeded ,LPDWORD pcReturned );
WINBOOL EnumFormsW (HANDLE hPrinter ,DWORD Level ,LPBYTE pForm ,DWORD cbBuf ,LPDWORD pcbNeeded ,LPDWORD pcReturned );
WINBOOL EnumMonitorsA (LPSTR pName ,DWORD Level ,LPBYTE pMonitor ,DWORD cbBuf ,LPDWORD pcbNeeded ,LPDWORD pcReturned );
WINBOOL EnumMonitorsW (LPWSTR pName ,DWORD Level ,LPBYTE pMonitor ,DWORD cbBuf ,LPDWORD pcbNeeded ,LPDWORD pcReturned );
WINBOOL AddMonitorA (LPSTR pName ,DWORD Level ,LPBYTE pMonitorInfo );
WINBOOL AddMonitorW (LPWSTR pName ,DWORD Level ,LPBYTE pMonitorInfo );
WINBOOL DeleteMonitorA (LPSTR pName ,LPSTR pEnvironment ,LPSTR pMonitorName );
WINBOOL DeleteMonitorW (LPWSTR pName ,LPWSTR pEnvironment ,LPWSTR pMonitorName );
WINBOOL EnumPortsA (LPSTR pName ,DWORD Level ,LPBYTE pPorts ,DWORD cbBuf ,LPDWORD pcbNeeded ,LPDWORD pcReturned );
WINBOOL EnumPortsW (LPWSTR pName ,DWORD Level ,LPBYTE pPorts ,DWORD cbBuf ,LPDWORD pcbNeeded ,LPDWORD pcReturned );
WINBOOL AddPortA (LPSTR pName ,HWND hWnd ,LPSTR pMonitorName );
WINBOOL AddPortW (LPWSTR pName ,HWND hWnd ,LPWSTR pMonitorName );
WINBOOL ConfigurePortA (LPSTR pName ,HWND hWnd ,LPSTR pPortName );
WINBOOL ConfigurePortW (LPWSTR pName ,HWND hWnd ,LPWSTR pPortName );
WINBOOL DeletePortA (LPSTR pName ,HWND hWnd ,LPSTR pPortName );
WINBOOL DeletePortW (LPWSTR pName ,HWND hWnd ,LPWSTR pPortName );
WINBOOL XcvDataW (HANDLE hXcv ,PCWSTR pszDataName ,PBYTE pInputData ,DWORD cbInputData ,PBYTE pOutputData ,DWORD cbOutputData ,PDWORD pcbOutputNeeded ,PDWORD pdwStatus );
WINBOOL GetDefaultPrinterA (LPSTR pszBuffer ,LPDWORD pcchBuffer );
WINBOOL GetDefaultPrinterW (LPWSTR pszBuffer ,LPDWORD pcchBuffer );
WINBOOL SetDefaultPrinterA (LPCSTR pszPrinter );
WINBOOL SetDefaultPrinterW (LPCWSTR pszPrinter );
WINBOOL SetPortA (LPSTR pName ,LPSTR pPortName ,DWORD dwLevel ,LPBYTE pPortInfo );
WINBOOL SetPortW (LPWSTR pName ,LPWSTR pPortName ,DWORD dwLevel ,LPBYTE pPortInfo );
WINBOOL AddPrinterConnectionA (LPSTR pName );
WINBOOL AddPrinterConnectionW (LPWSTR pName );
WINBOOL DeletePrinterConnectionA (LPSTR pName );
WINBOOL DeletePrinterConnectionW (LPWSTR pName );
HANDLE ConnectToPrinterDlg (HWND hwnd ,DWORD Flags );
typedef struct _PROVIDOR_INFO_1A {LPSTR pName ;LPSTR pEnvironment ;LPSTR pDLLName ;}PROVIDOR_INFO_1A ;
typedef struct _PROVIDOR_INFO_1A {LPSTR pName ;LPSTR pEnvironment ;LPSTR pDLLName ;}*PPROVIDOR_INFO_1A ;
typedef struct _PROVIDOR_INFO_1A {LPSTR pName ;LPSTR pEnvironment ;LPSTR pDLLName ;}*LPPROVIDOR_INFO_1A ;

typedef struct _PROVIDOR_INFO_1W {LPWSTR pName ;LPWSTR pEnvironment ;LPWSTR pDLLName ;}PROVIDOR_INFO_1W ;
typedef struct _PROVIDOR_INFO_1W {LPWSTR pName ;LPWSTR pEnvironment ;LPWSTR pDLLName ;}*PPROVIDOR_INFO_1W ;
typedef struct _PROVIDOR_INFO_1W {LPWSTR pName ;LPWSTR pEnvironment ;LPWSTR pDLLName ;}*LPPROVIDOR_INFO_1W ;

typedef PROVIDOR_INFO_1A PROVIDOR_INFO_1 ;
typedef PPROVIDOR_INFO_1A PPROVIDOR_INFO_1 ;
typedef LPPROVIDOR_INFO_1A LPPROVIDOR_INFO_1 ;
typedef struct _PROVIDOR_INFO_2A {LPSTR pOrder ;}PROVIDOR_INFO_2A ;
typedef struct _PROVIDOR_INFO_2A {LPSTR pOrder ;}*PPROVIDOR_INFO_2A ;
typedef struct _PROVIDOR_INFO_2A {LPSTR pOrder ;}*LPPROVIDOR_INFO_2A ;

typedef struct _PROVIDOR_INFO_2W {LPWSTR pOrder ;}PROVIDOR_INFO_2W ;
typedef struct _PROVIDOR_INFO_2W {LPWSTR pOrder ;}*PPROVIDOR_INFO_2W ;
typedef struct _PROVIDOR_INFO_2W {LPWSTR pOrder ;}*LPPROVIDOR_INFO_2W ;

typedef PROVIDOR_INFO_2A PROVIDOR_INFO_2 ;
typedef PPROVIDOR_INFO_2A PPROVIDOR_INFO_2 ;
typedef LPPROVIDOR_INFO_2A LPPROVIDOR_INFO_2 ;
WINBOOL AddPrintProvidorA (LPSTR pName ,DWORD level ,LPBYTE pProvidorInfo );
WINBOOL AddPrintProvidorW (LPWSTR pName ,DWORD level ,LPBYTE pProvidorInfo );
WINBOOL DeletePrintProvidorA (LPSTR pName ,LPSTR pEnvironment ,LPSTR pPrintProvidorName );
WINBOOL DeletePrintProvidorW (LPWSTR pName ,LPWSTR pEnvironment ,LPWSTR pPrintProvidorName );
WINBOOL IsValidDevmodeA (PDEVMODEA pDevmode ,size_t DevmodeSize );
WINBOOL IsValidDevmodeW (PDEVMODEW pDevmode ,size_t DevmodeSize );
// m:\mingw\x86_64-w64-mingw32\include\commdlg.h

extern const GUID IID_IPrintDialogCallback ;
extern const GUID IID_IPrintDialogServices ;
typedef UINT_PTR (*LPOFNHOOKPROC )(HWND ,UINT ,WPARAM ,LPARAM );
typedef struct tagOFN_NT4A {DWORD lStructSize ;HWND hwndOwner ;HINSTANCE hInstance ;LPCSTR lpstrFilter ;LPSTR lpstrCustomFilter ;DWORD nMaxCustFilter ;DWORD nFilterIndex ;LPSTR lpstrFile ;DWORD nMaxFile ;LPSTR lpstrFileTitle ;DWORD nMaxFileTitle ;LPCSTR lpstrInitialDir ;LPCSTR lpstrTitle ;DWORD Flags ;WORD nFileOffset ;WORD nFileExtension ;LPCSTR lpstrDefExt ;LPARAM lCustData ;LPOFNHOOKPROC lpfnHook ;LPCSTR lpTemplateName ;}OPENFILENAME_NT4A ;
typedef struct tagOFN_NT4A {DWORD lStructSize ;HWND hwndOwner ;HINSTANCE hInstance ;LPCSTR lpstrFilter ;LPSTR lpstrCustomFilter ;DWORD nMaxCustFilter ;DWORD nFilterIndex ;LPSTR lpstrFile ;DWORD nMaxFile ;LPSTR lpstrFileTitle ;DWORD nMaxFileTitle ;LPCSTR lpstrInitialDir ;LPCSTR lpstrTitle ;DWORD Flags ;WORD nFileOffset ;WORD nFileExtension ;LPCSTR lpstrDefExt ;LPARAM lCustData ;LPOFNHOOKPROC lpfnHook ;LPCSTR lpTemplateName ;}*LPOPENFILENAME_NT4A ;

typedef struct tagOFN_NT4W {DWORD lStructSize ;HWND hwndOwner ;HINSTANCE hInstance ;LPCWSTR lpstrFilter ;LPWSTR lpstrCustomFilter ;DWORD nMaxCustFilter ;DWORD nFilterIndex ;LPWSTR lpstrFile ;DWORD nMaxFile ;LPWSTR lpstrFileTitle ;DWORD nMaxFileTitle ;LPCWSTR lpstrInitialDir ;LPCWSTR lpstrTitle ;DWORD Flags ;WORD nFileOffset ;WORD nFileExtension ;LPCWSTR lpstrDefExt ;LPARAM lCustData ;LPOFNHOOKPROC lpfnHook ;LPCWSTR lpTemplateName ;}OPENFILENAME_NT4W ;
typedef struct tagOFN_NT4W {DWORD lStructSize ;HWND hwndOwner ;HINSTANCE hInstance ;LPCWSTR lpstrFilter ;LPWSTR lpstrCustomFilter ;DWORD nMaxCustFilter ;DWORD nFilterIndex ;LPWSTR lpstrFile ;DWORD nMaxFile ;LPWSTR lpstrFileTitle ;DWORD nMaxFileTitle ;LPCWSTR lpstrInitialDir ;LPCWSTR lpstrTitle ;DWORD Flags ;WORD nFileOffset ;WORD nFileExtension ;LPCWSTR lpstrDefExt ;LPARAM lCustData ;LPOFNHOOKPROC lpfnHook ;LPCWSTR lpTemplateName ;}*LPOPENFILENAME_NT4W ;

typedef OPENFILENAME_NT4A OPENFILENAME_NT4 ;
typedef LPOPENFILENAME_NT4A LPOPENFILENAME_NT4 ;
typedef struct tagOFNA {DWORD lStructSize ;HWND hwndOwner ;HINSTANCE hInstance ;LPCSTR lpstrFilter ;LPSTR lpstrCustomFilter ;DWORD nMaxCustFilter ;DWORD nFilterIndex ;LPSTR lpstrFile ;DWORD nMaxFile ;LPSTR lpstrFileTitle ;DWORD nMaxFileTitle ;LPCSTR lpstrInitialDir ;LPCSTR lpstrTitle ;DWORD Flags ;WORD nFileOffset ;WORD nFileExtension ;LPCSTR lpstrDefExt ;LPARAM lCustData ;LPOFNHOOKPROC lpfnHook ;LPCSTR lpTemplateName ;void *pvReserved ;DWORD dwReserved ;DWORD FlagsEx ;}OPENFILENAMEA ;
typedef struct tagOFNA {DWORD lStructSize ;HWND hwndOwner ;HINSTANCE hInstance ;LPCSTR lpstrFilter ;LPSTR lpstrCustomFilter ;DWORD nMaxCustFilter ;DWORD nFilterIndex ;LPSTR lpstrFile ;DWORD nMaxFile ;LPSTR lpstrFileTitle ;DWORD nMaxFileTitle ;LPCSTR lpstrInitialDir ;LPCSTR lpstrTitle ;DWORD Flags ;WORD nFileOffset ;WORD nFileExtension ;LPCSTR lpstrDefExt ;LPARAM lCustData ;LPOFNHOOKPROC lpfnHook ;LPCSTR lpTemplateName ;void *pvReserved ;DWORD dwReserved ;DWORD FlagsEx ;}*LPOPENFILENAMEA ;

typedef struct tagOFNW {DWORD lStructSize ;HWND hwndOwner ;HINSTANCE hInstance ;LPCWSTR lpstrFilter ;LPWSTR lpstrCustomFilter ;DWORD nMaxCustFilter ;DWORD nFilterIndex ;LPWSTR lpstrFile ;DWORD nMaxFile ;LPWSTR lpstrFileTitle ;DWORD nMaxFileTitle ;LPCWSTR lpstrInitialDir ;LPCWSTR lpstrTitle ;DWORD Flags ;WORD nFileOffset ;WORD nFileExtension ;LPCWSTR lpstrDefExt ;LPARAM lCustData ;LPOFNHOOKPROC lpfnHook ;LPCWSTR lpTemplateName ;void *pvReserved ;DWORD dwReserved ;DWORD FlagsEx ;}OPENFILENAMEW ;
typedef struct tagOFNW {DWORD lStructSize ;HWND hwndOwner ;HINSTANCE hInstance ;LPCWSTR lpstrFilter ;LPWSTR lpstrCustomFilter ;DWORD nMaxCustFilter ;DWORD nFilterIndex ;LPWSTR lpstrFile ;DWORD nMaxFile ;LPWSTR lpstrFileTitle ;DWORD nMaxFileTitle ;LPCWSTR lpstrInitialDir ;LPCWSTR lpstrTitle ;DWORD Flags ;WORD nFileOffset ;WORD nFileExtension ;LPCWSTR lpstrDefExt ;LPARAM lCustData ;LPOFNHOOKPROC lpfnHook ;LPCWSTR lpTemplateName ;void *pvReserved ;DWORD dwReserved ;DWORD FlagsEx ;}*LPOPENFILENAMEW ;

typedef OPENFILENAMEA OPENFILENAME ;
typedef LPOPENFILENAMEA LPOPENFILENAME ;
WINBOOL GetOpenFileNameA (LPOPENFILENAMEA );
WINBOOL GetOpenFileNameW (LPOPENFILENAMEW );
WINBOOL GetSaveFileNameA (LPOPENFILENAMEA );
WINBOOL GetSaveFileNameW (LPOPENFILENAMEW );
short GetFileTitleA (LPCSTR ,LPSTR ,WORD );
short GetFileTitleW (LPCWSTR ,LPWSTR ,WORD );
typedef UINT_PTR (*LPCCHOOKPROC )(HWND ,UINT ,WPARAM ,LPARAM );
typedef struct _OFNOTIFYA {NMHDR hdr ;LPOPENFILENAMEA lpOFN ;LPSTR pszFile ;}OFNOTIFYA ;
typedef struct _OFNOTIFYA {NMHDR hdr ;LPOPENFILENAMEA lpOFN ;LPSTR pszFile ;}*LPOFNOTIFYA ;

typedef struct _OFNOTIFYW {NMHDR hdr ;LPOPENFILENAMEW lpOFN ;LPWSTR pszFile ;}OFNOTIFYW ;
typedef struct _OFNOTIFYW {NMHDR hdr ;LPOPENFILENAMEW lpOFN ;LPWSTR pszFile ;}*LPOFNOTIFYW ;

typedef OFNOTIFYA OFNOTIFY ;
typedef LPOFNOTIFYA LPOFNOTIFY ;
typedef struct _OFNOTIFYEXA {NMHDR hdr ;LPOPENFILENAMEA lpOFN ;LPVOID psf ;LPVOID pidl ;}OFNOTIFYEXA ;
typedef struct _OFNOTIFYEXA {NMHDR hdr ;LPOPENFILENAMEA lpOFN ;LPVOID psf ;LPVOID pidl ;}*LPOFNOTIFYEXA ;

typedef struct _OFNOTIFYEXW {NMHDR hdr ;LPOPENFILENAMEW lpOFN ;LPVOID psf ;LPVOID pidl ;}OFNOTIFYEXW ;
typedef struct _OFNOTIFYEXW {NMHDR hdr ;LPOPENFILENAMEW lpOFN ;LPVOID psf ;LPVOID pidl ;}*LPOFNOTIFYEXW ;

typedef OFNOTIFYEXA OFNOTIFYEX ;
typedef LPOFNOTIFYEXA LPOFNOTIFYEX ;
typedef struct tagCHOOSECOLORA {DWORD lStructSize ;HWND hwndOwner ;HWND hInstance ;COLORREF rgbResult ;COLORREF *lpCustColors ;DWORD Flags ;LPARAM lCustData ;LPCCHOOKPROC lpfnHook ;LPCSTR lpTemplateName ;}CHOOSECOLORA ;
typedef struct tagCHOOSECOLORA {DWORD lStructSize ;HWND hwndOwner ;HWND hInstance ;COLORREF rgbResult ;COLORREF *lpCustColors ;DWORD Flags ;LPARAM lCustData ;LPCCHOOKPROC lpfnHook ;LPCSTR lpTemplateName ;}*LPCHOOSECOLORA ;

typedef struct tagCHOOSECOLORW {DWORD lStructSize ;HWND hwndOwner ;HWND hInstance ;COLORREF rgbResult ;COLORREF *lpCustColors ;DWORD Flags ;LPARAM lCustData ;LPCCHOOKPROC lpfnHook ;LPCWSTR lpTemplateName ;}CHOOSECOLORW ;
typedef struct tagCHOOSECOLORW {DWORD lStructSize ;HWND hwndOwner ;HWND hInstance ;COLORREF rgbResult ;COLORREF *lpCustColors ;DWORD Flags ;LPARAM lCustData ;LPCCHOOKPROC lpfnHook ;LPCWSTR lpTemplateName ;}*LPCHOOSECOLORW ;

typedef CHOOSECOLORA CHOOSECOLOR ;
typedef LPCHOOSECOLORA LPCHOOSECOLOR ;
WINBOOL ChooseColorA (LPCHOOSECOLORA );
WINBOOL ChooseColorW (LPCHOOSECOLORW );
typedef UINT_PTR (*LPFRHOOKPROC )(HWND ,UINT ,WPARAM ,LPARAM );
typedef struct tagFINDREPLACEA {DWORD lStructSize ;HWND hwndOwner ;HINSTANCE hInstance ;DWORD Flags ;LPSTR lpstrFindWhat ;LPSTR lpstrReplaceWith ;WORD wFindWhatLen ;WORD wReplaceWithLen ;LPARAM lCustData ;LPFRHOOKPROC lpfnHook ;LPCSTR lpTemplateName ;}FINDREPLACEA ;
typedef struct tagFINDREPLACEA {DWORD lStructSize ;HWND hwndOwner ;HINSTANCE hInstance ;DWORD Flags ;LPSTR lpstrFindWhat ;LPSTR lpstrReplaceWith ;WORD wFindWhatLen ;WORD wReplaceWithLen ;LPARAM lCustData ;LPFRHOOKPROC lpfnHook ;LPCSTR lpTemplateName ;}*LPFINDREPLACEA ;

typedef struct tagFINDREPLACEW {DWORD lStructSize ;HWND hwndOwner ;HINSTANCE hInstance ;DWORD Flags ;LPWSTR lpstrFindWhat ;LPWSTR lpstrReplaceWith ;WORD wFindWhatLen ;WORD wReplaceWithLen ;LPARAM lCustData ;LPFRHOOKPROC lpfnHook ;LPCWSTR lpTemplateName ;}FINDREPLACEW ;
typedef struct tagFINDREPLACEW {DWORD lStructSize ;HWND hwndOwner ;HINSTANCE hInstance ;DWORD Flags ;LPWSTR lpstrFindWhat ;LPWSTR lpstrReplaceWith ;WORD wFindWhatLen ;WORD wReplaceWithLen ;LPARAM lCustData ;LPFRHOOKPROC lpfnHook ;LPCWSTR lpTemplateName ;}*LPFINDREPLACEW ;

typedef FINDREPLACEA FINDREPLACE ;
typedef LPFINDREPLACEA LPFINDREPLACE ;
HWND FindTextA (LPFINDREPLACEA );
HWND FindTextW (LPFINDREPLACEW );
HWND ReplaceTextA (LPFINDREPLACEA );
HWND ReplaceTextW (LPFINDREPLACEW );
typedef UINT_PTR (*LPCFHOOKPROC )(HWND ,UINT ,WPARAM ,LPARAM );
typedef struct tagCHOOSEFONTA {DWORD lStructSize ;HWND hwndOwner ;HDC hDC ;LPLOGFONTA lpLogFont ;INT iPointSize ;DWORD Flags ;COLORREF rgbColors ;LPARAM lCustData ;LPCFHOOKPROC lpfnHook ;LPCSTR lpTemplateName ;HINSTANCE hInstance ;LPSTR lpszStyle ;WORD nFontType ;WORD ___MISSING_ALIGNMENT__ ;INT nSizeMin ;INT nSizeMax ;}CHOOSEFONTA ;
typedef struct tagCHOOSEFONTA {DWORD lStructSize ;HWND hwndOwner ;HDC hDC ;LPLOGFONTA lpLogFont ;INT iPointSize ;DWORD Flags ;COLORREF rgbColors ;LPARAM lCustData ;LPCFHOOKPROC lpfnHook ;LPCSTR lpTemplateName ;HINSTANCE hInstance ;LPSTR lpszStyle ;WORD nFontType ;WORD ___MISSING_ALIGNMENT__ ;INT nSizeMin ;INT nSizeMax ;}*LPCHOOSEFONTA ;

typedef struct tagCHOOSEFONTW {DWORD lStructSize ;HWND hwndOwner ;HDC hDC ;LPLOGFONTW lpLogFont ;INT iPointSize ;DWORD Flags ;COLORREF rgbColors ;LPARAM lCustData ;LPCFHOOKPROC lpfnHook ;LPCWSTR lpTemplateName ;HINSTANCE hInstance ;LPWSTR lpszStyle ;WORD nFontType ;WORD ___MISSING_ALIGNMENT__ ;INT nSizeMin ;INT nSizeMax ;}CHOOSEFONTW ;
typedef struct tagCHOOSEFONTW {DWORD lStructSize ;HWND hwndOwner ;HDC hDC ;LPLOGFONTW lpLogFont ;INT iPointSize ;DWORD Flags ;COLORREF rgbColors ;LPARAM lCustData ;LPCFHOOKPROC lpfnHook ;LPCWSTR lpTemplateName ;HINSTANCE hInstance ;LPWSTR lpszStyle ;WORD nFontType ;WORD ___MISSING_ALIGNMENT__ ;INT nSizeMin ;INT nSizeMax ;}*LPCHOOSEFONTW ;

typedef CHOOSEFONTA CHOOSEFONT ;
typedef LPCHOOSEFONTA LPCHOOSEFONT ;
WINBOOL ChooseFontA (LPCHOOSEFONTA );
WINBOOL ChooseFontW (LPCHOOSEFONTW );
typedef UINT_PTR (*LPPRINTHOOKPROC )(HWND ,UINT ,WPARAM ,LPARAM );
typedef UINT_PTR (*LPSETUPHOOKPROC )(HWND ,UINT ,WPARAM ,LPARAM );
typedef struct tagPDA {DWORD lStructSize ;HWND hwndOwner ;HGLOBAL hDevMode ;HGLOBAL hDevNames ;HDC hDC ;DWORD Flags ;WORD nFromPage ;WORD nToPage ;WORD nMinPage ;WORD nMaxPage ;WORD nCopies ;HINSTANCE hInstance ;LPARAM lCustData ;LPPRINTHOOKPROC lpfnPrintHook ;LPSETUPHOOKPROC lpfnSetupHook ;LPCSTR lpPrintTemplateName ;LPCSTR lpSetupTemplateName ;HGLOBAL hPrintTemplate ;HGLOBAL hSetupTemplate ;}PRINTDLGA ;
typedef struct tagPDA {DWORD lStructSize ;HWND hwndOwner ;HGLOBAL hDevMode ;HGLOBAL hDevNames ;HDC hDC ;DWORD Flags ;WORD nFromPage ;WORD nToPage ;WORD nMinPage ;WORD nMaxPage ;WORD nCopies ;HINSTANCE hInstance ;LPARAM lCustData ;LPPRINTHOOKPROC lpfnPrintHook ;LPSETUPHOOKPROC lpfnSetupHook ;LPCSTR lpPrintTemplateName ;LPCSTR lpSetupTemplateName ;HGLOBAL hPrintTemplate ;HGLOBAL hSetupTemplate ;}*LPPRINTDLGA ;

typedef struct tagPDW {DWORD lStructSize ;HWND hwndOwner ;HGLOBAL hDevMode ;HGLOBAL hDevNames ;HDC hDC ;DWORD Flags ;WORD nFromPage ;WORD nToPage ;WORD nMinPage ;WORD nMaxPage ;WORD nCopies ;HINSTANCE hInstance ;LPARAM lCustData ;LPPRINTHOOKPROC lpfnPrintHook ;LPSETUPHOOKPROC lpfnSetupHook ;LPCWSTR lpPrintTemplateName ;LPCWSTR lpSetupTemplateName ;HGLOBAL hPrintTemplate ;HGLOBAL hSetupTemplate ;}PRINTDLGW ;
typedef struct tagPDW {DWORD lStructSize ;HWND hwndOwner ;HGLOBAL hDevMode ;HGLOBAL hDevNames ;HDC hDC ;DWORD Flags ;WORD nFromPage ;WORD nToPage ;WORD nMinPage ;WORD nMaxPage ;WORD nCopies ;HINSTANCE hInstance ;LPARAM lCustData ;LPPRINTHOOKPROC lpfnPrintHook ;LPSETUPHOOKPROC lpfnSetupHook ;LPCWSTR lpPrintTemplateName ;LPCWSTR lpSetupTemplateName ;HGLOBAL hPrintTemplate ;HGLOBAL hSetupTemplate ;}*LPPRINTDLGW ;

typedef PRINTDLGA PRINTDLG ;
typedef LPPRINTDLGA LPPRINTDLG ;
WINBOOL PrintDlgA (LPPRINTDLGA );
WINBOOL PrintDlgW (LPPRINTDLGW );
typedef struct tagDEVNAMES {WORD wDriverOffset ;WORD wDeviceOffset ;WORD wOutputOffset ;WORD wDefault ;}DEVNAMES ;
typedef struct tagDEVNAMES {WORD wDriverOffset ;WORD wDeviceOffset ;WORD wOutputOffset ;WORD wDefault ;}*LPDEVNAMES ;

DWORD CommDlgExtendedError (void );
typedef UINT_PTR (*LPPAGEPAINTHOOK )(HWND ,UINT ,WPARAM ,LPARAM );
typedef UINT_PTR (*LPPAGESETUPHOOK )(HWND ,UINT ,WPARAM ,LPARAM );
typedef struct tagPSDA {DWORD lStructSize ;HWND hwndOwner ;HGLOBAL hDevMode ;HGLOBAL hDevNames ;DWORD Flags ;POINT ptPaperSize ;RECT rtMinMargin ;RECT rtMargin ;HINSTANCE hInstance ;LPARAM lCustData ;LPPAGESETUPHOOK lpfnPageSetupHook ;LPPAGEPAINTHOOK lpfnPagePaintHook ;LPCSTR lpPageSetupTemplateName ;HGLOBAL hPageSetupTemplate ;}PAGESETUPDLGA ;
typedef struct tagPSDA {DWORD lStructSize ;HWND hwndOwner ;HGLOBAL hDevMode ;HGLOBAL hDevNames ;DWORD Flags ;POINT ptPaperSize ;RECT rtMinMargin ;RECT rtMargin ;HINSTANCE hInstance ;LPARAM lCustData ;LPPAGESETUPHOOK lpfnPageSetupHook ;LPPAGEPAINTHOOK lpfnPagePaintHook ;LPCSTR lpPageSetupTemplateName ;HGLOBAL hPageSetupTemplate ;}*LPPAGESETUPDLGA ;

typedef struct tagPSDW {DWORD lStructSize ;HWND hwndOwner ;HGLOBAL hDevMode ;HGLOBAL hDevNames ;DWORD Flags ;POINT ptPaperSize ;RECT rtMinMargin ;RECT rtMargin ;HINSTANCE hInstance ;LPARAM lCustData ;LPPAGESETUPHOOK lpfnPageSetupHook ;LPPAGEPAINTHOOK lpfnPagePaintHook ;LPCWSTR lpPageSetupTemplateName ;HGLOBAL hPageSetupTemplate ;}PAGESETUPDLGW ;
typedef struct tagPSDW {DWORD lStructSize ;HWND hwndOwner ;HGLOBAL hDevMode ;HGLOBAL hDevNames ;DWORD Flags ;POINT ptPaperSize ;RECT rtMinMargin ;RECT rtMargin ;HINSTANCE hInstance ;LPARAM lCustData ;LPPAGESETUPHOOK lpfnPageSetupHook ;LPPAGEPAINTHOOK lpfnPagePaintHook ;LPCWSTR lpPageSetupTemplateName ;HGLOBAL hPageSetupTemplate ;}*LPPAGESETUPDLGW ;

typedef PAGESETUPDLGA PAGESETUPDLG ;
typedef LPPAGESETUPDLGA LPPAGESETUPDLG ;
WINBOOL PageSetupDlgA (LPPAGESETUPDLGA );
WINBOOL PageSetupDlgW (LPPAGESETUPDLGW );
// m:\mingw\x86_64-w64-mingw32\include\winsvc.h

typedef struct _SERVICE_DESCRIPTIONA {LPSTR lpDescription ;}SERVICE_DESCRIPTIONA ;
typedef struct _SERVICE_DESCRIPTIONA {LPSTR lpDescription ;}*LPSERVICE_DESCRIPTIONA ;

typedef struct _SERVICE_DESCRIPTIONW {LPWSTR lpDescription ;}SERVICE_DESCRIPTIONW ;
typedef struct _SERVICE_DESCRIPTIONW {LPWSTR lpDescription ;}*LPSERVICE_DESCRIPTIONW ;

typedef SERVICE_DESCRIPTIONA SERVICE_DESCRIPTION ;
typedef LPSERVICE_DESCRIPTIONA LPSERVICE_DESCRIPTION ;
typedef enum _SC_ACTION_TYPE {SC_ACTION_NONE =0 ,SC_ACTION_RESTART =1 ,SC_ACTION_REBOOT =2 ,SC_ACTION_RUN_COMMAND =3 }SC_ACTION_TYPE ;
typedef struct _SC_ACTION {SC_ACTION_TYPE Type ;DWORD Delay ;}SC_ACTION ;
typedef struct _SC_ACTION {SC_ACTION_TYPE Type ;DWORD Delay ;}*LPSC_ACTION ;

typedef struct _SERVICE_FAILURE_ACTIONSA {DWORD dwResetPeriod ;LPSTR lpRebootMsg ;LPSTR lpCommand ;DWORD cActions ;SC_ACTION *lpsaActions ;}SERVICE_FAILURE_ACTIONSA ;
typedef struct _SERVICE_FAILURE_ACTIONSA {DWORD dwResetPeriod ;LPSTR lpRebootMsg ;LPSTR lpCommand ;DWORD cActions ;SC_ACTION *lpsaActions ;}*LPSERVICE_FAILURE_ACTIONSA ;

typedef struct _SERVICE_FAILURE_ACTIONSW {DWORD dwResetPeriod ;LPWSTR lpRebootMsg ;LPWSTR lpCommand ;DWORD cActions ;SC_ACTION *lpsaActions ;}SERVICE_FAILURE_ACTIONSW ;
typedef struct _SERVICE_FAILURE_ACTIONSW {DWORD dwResetPeriod ;LPWSTR lpRebootMsg ;LPWSTR lpCommand ;DWORD cActions ;SC_ACTION *lpsaActions ;}*LPSERVICE_FAILURE_ACTIONSW ;

typedef SERVICE_FAILURE_ACTIONSA SERVICE_FAILURE_ACTIONS ;
typedef LPSERVICE_FAILURE_ACTIONSA LPSERVICE_FAILURE_ACTIONS ;
struct SC_HANDLE__ {int unused ;};
typedef struct SC_HANDLE__ *SC_HANDLE ;
typedef SC_HANDLE *LPSC_HANDLE ;
struct SERVICE_STATUS_HANDLE__ {int unused ;};
typedef struct SERVICE_STATUS_HANDLE__ *SERVICE_STATUS_HANDLE ;
typedef enum _SC_STATUS_TYPE {SC_STATUS_PROCESS_INFO =0 }SC_STATUS_TYPE ;
typedef enum _SC_ENUM_TYPE {SC_ENUM_PROCESS_INFO =0 }SC_ENUM_TYPE ;
typedef struct _SERVICE_STATUS {DWORD dwServiceType ;DWORD dwCurrentState ;DWORD dwControlsAccepted ;DWORD dwWin32ExitCode ;DWORD dwServiceSpecificExitCode ;DWORD dwCheckPoint ;DWORD dwWaitHint ;}SERVICE_STATUS ;
typedef struct _SERVICE_STATUS {DWORD dwServiceType ;DWORD dwCurrentState ;DWORD dwControlsAccepted ;DWORD dwWin32ExitCode ;DWORD dwServiceSpecificExitCode ;DWORD dwCheckPoint ;DWORD dwWaitHint ;}*LPSERVICE_STATUS ;

typedef struct _SERVICE_STATUS_PROCESS {DWORD dwServiceType ;DWORD dwCurrentState ;DWORD dwControlsAccepted ;DWORD dwWin32ExitCode ;DWORD dwServiceSpecificExitCode ;DWORD dwCheckPoint ;DWORD dwWaitHint ;DWORD dwProcessId ;DWORD dwServiceFlags ;}SERVICE_STATUS_PROCESS ;
typedef struct _SERVICE_STATUS_PROCESS {DWORD dwServiceType ;DWORD dwCurrentState ;DWORD dwControlsAccepted ;DWORD dwWin32ExitCode ;DWORD dwServiceSpecificExitCode ;DWORD dwCheckPoint ;DWORD dwWaitHint ;DWORD dwProcessId ;DWORD dwServiceFlags ;}*LPSERVICE_STATUS_PROCESS ;

typedef struct _ENUM_SERVICE_STATUSA {LPSTR lpServiceName ;LPSTR lpDisplayName ;SERVICE_STATUS ServiceStatus ;}ENUM_SERVICE_STATUSA ;
typedef struct _ENUM_SERVICE_STATUSA {LPSTR lpServiceName ;LPSTR lpDisplayName ;SERVICE_STATUS ServiceStatus ;}*LPENUM_SERVICE_STATUSA ;

typedef struct _ENUM_SERVICE_STATUSW {LPWSTR lpServiceName ;LPWSTR lpDisplayName ;SERVICE_STATUS ServiceStatus ;}ENUM_SERVICE_STATUSW ;
typedef struct _ENUM_SERVICE_STATUSW {LPWSTR lpServiceName ;LPWSTR lpDisplayName ;SERVICE_STATUS ServiceStatus ;}*LPENUM_SERVICE_STATUSW ;

typedef ENUM_SERVICE_STATUSA ENUM_SERVICE_STATUS ;
typedef LPENUM_SERVICE_STATUSA LPENUM_SERVICE_STATUS ;
typedef struct _ENUM_SERVICE_STATUS_PROCESSA {LPSTR lpServiceName ;LPSTR lpDisplayName ;SERVICE_STATUS_PROCESS ServiceStatusProcess ;}ENUM_SERVICE_STATUS_PROCESSA ;
typedef struct _ENUM_SERVICE_STATUS_PROCESSA {LPSTR lpServiceName ;LPSTR lpDisplayName ;SERVICE_STATUS_PROCESS ServiceStatusProcess ;}*LPENUM_SERVICE_STATUS_PROCESSA ;

typedef struct _ENUM_SERVICE_STATUS_PROCESSW {LPWSTR lpServiceName ;LPWSTR lpDisplayName ;SERVICE_STATUS_PROCESS ServiceStatusProcess ;}ENUM_SERVICE_STATUS_PROCESSW ;
typedef struct _ENUM_SERVICE_STATUS_PROCESSW {LPWSTR lpServiceName ;LPWSTR lpDisplayName ;SERVICE_STATUS_PROCESS ServiceStatusProcess ;}*LPENUM_SERVICE_STATUS_PROCESSW ;

typedef ENUM_SERVICE_STATUS_PROCESSA ENUM_SERVICE_STATUS_PROCESS ;
typedef LPENUM_SERVICE_STATUS_PROCESSA LPENUM_SERVICE_STATUS_PROCESS ;
typedef LPVOID SC_LOCK ;
typedef struct _QUERY_SERVICE_LOCK_STATUSA {DWORD fIsLocked ;LPSTR lpLockOwner ;DWORD dwLockDuration ;}QUERY_SERVICE_LOCK_STATUSA ;
typedef struct _QUERY_SERVICE_LOCK_STATUSA {DWORD fIsLocked ;LPSTR lpLockOwner ;DWORD dwLockDuration ;}*LPQUERY_SERVICE_LOCK_STATUSA ;

typedef struct _QUERY_SERVICE_LOCK_STATUSW {DWORD fIsLocked ;LPWSTR lpLockOwner ;DWORD dwLockDuration ;}QUERY_SERVICE_LOCK_STATUSW ;
typedef struct _QUERY_SERVICE_LOCK_STATUSW {DWORD fIsLocked ;LPWSTR lpLockOwner ;DWORD dwLockDuration ;}*LPQUERY_SERVICE_LOCK_STATUSW ;

typedef QUERY_SERVICE_LOCK_STATUSA QUERY_SERVICE_LOCK_STATUS ;
typedef LPQUERY_SERVICE_LOCK_STATUSA LPQUERY_SERVICE_LOCK_STATUS ;
typedef struct _QUERY_SERVICE_CONFIGA {DWORD dwServiceType ;DWORD dwStartType ;DWORD dwErrorControl ;LPSTR lpBinaryPathName ;LPSTR lpLoadOrderGroup ;DWORD dwTagId ;LPSTR lpDependencies ;LPSTR lpServiceStartName ;LPSTR lpDisplayName ;}QUERY_SERVICE_CONFIGA ;
typedef struct _QUERY_SERVICE_CONFIGA {DWORD dwServiceType ;DWORD dwStartType ;DWORD dwErrorControl ;LPSTR lpBinaryPathName ;LPSTR lpLoadOrderGroup ;DWORD dwTagId ;LPSTR lpDependencies ;LPSTR lpServiceStartName ;LPSTR lpDisplayName ;}*LPQUERY_SERVICE_CONFIGA ;

typedef struct _QUERY_SERVICE_CONFIGW {DWORD dwServiceType ;DWORD dwStartType ;DWORD dwErrorControl ;LPWSTR lpBinaryPathName ;LPWSTR lpLoadOrderGroup ;DWORD dwTagId ;LPWSTR lpDependencies ;LPWSTR lpServiceStartName ;LPWSTR lpDisplayName ;}QUERY_SERVICE_CONFIGW ;
typedef struct _QUERY_SERVICE_CONFIGW {DWORD dwServiceType ;DWORD dwStartType ;DWORD dwErrorControl ;LPWSTR lpBinaryPathName ;LPWSTR lpLoadOrderGroup ;DWORD dwTagId ;LPWSTR lpDependencies ;LPWSTR lpServiceStartName ;LPWSTR lpDisplayName ;}*LPQUERY_SERVICE_CONFIGW ;

typedef QUERY_SERVICE_CONFIGA QUERY_SERVICE_CONFIG ;
typedef LPQUERY_SERVICE_CONFIGA LPQUERY_SERVICE_CONFIG ;
typedef void (*LPSERVICE_MAIN_FUNCTIONW )(DWORD dwNumServicesArgs ,LPWSTR *lpServiceArgVectors );
typedef void (*LPSERVICE_MAIN_FUNCTIONA )(DWORD dwNumServicesArgs ,LPSTR *lpServiceArgVectors );
typedef struct _SERVICE_TABLE_ENTRYA {LPSTR lpServiceName ;LPSERVICE_MAIN_FUNCTIONA lpServiceProc ;}SERVICE_TABLE_ENTRYA ;
typedef struct _SERVICE_TABLE_ENTRYA {LPSTR lpServiceName ;LPSERVICE_MAIN_FUNCTIONA lpServiceProc ;}*LPSERVICE_TABLE_ENTRYA ;

typedef struct _SERVICE_TABLE_ENTRYW {LPWSTR lpServiceName ;LPSERVICE_MAIN_FUNCTIONW lpServiceProc ;}SERVICE_TABLE_ENTRYW ;
typedef struct _SERVICE_TABLE_ENTRYW {LPWSTR lpServiceName ;LPSERVICE_MAIN_FUNCTIONW lpServiceProc ;}*LPSERVICE_TABLE_ENTRYW ;

typedef SERVICE_TABLE_ENTRYA SERVICE_TABLE_ENTRY ;
typedef LPSERVICE_TABLE_ENTRYA LPSERVICE_TABLE_ENTRY ;
typedef void (*LPHANDLER_FUNCTION )(DWORD dwControl );
typedef DWORD (*LPHANDLER_FUNCTION_EX )(DWORD dwControl ,DWORD dwEventType ,LPVOID lpEventData ,LPVOID lpContext );
WINBOOL ChangeServiceConfigA (SC_HANDLE hService ,DWORD dwServiceType ,DWORD dwStartType ,DWORD dwErrorControl ,LPCSTR lpBinaryPathName ,LPCSTR lpLoadOrderGroup ,LPDWORD lpdwTagId ,LPCSTR lpDependencies ,LPCSTR lpServiceStartName ,LPCSTR lpPassword ,LPCSTR lpDisplayName );
WINBOOL ChangeServiceConfigW (SC_HANDLE hService ,DWORD dwServiceType ,DWORD dwStartType ,DWORD dwErrorControl ,LPCWSTR lpBinaryPathName ,LPCWSTR lpLoadOrderGroup ,LPDWORD lpdwTagId ,LPCWSTR lpDependencies ,LPCWSTR lpServiceStartName ,LPCWSTR lpPassword ,LPCWSTR lpDisplayName );
WINBOOL ChangeServiceConfig2A (SC_HANDLE hService ,DWORD dwInfoLevel ,LPVOID lpInfo );
WINBOOL ChangeServiceConfig2W (SC_HANDLE hService ,DWORD dwInfoLevel ,LPVOID lpInfo );
WINBOOL CloseServiceHandle (SC_HANDLE hSCObject );
WINBOOL ControlService (SC_HANDLE hService ,DWORD dwControl ,LPSERVICE_STATUS lpServiceStatus );
SC_HANDLE CreateServiceA (SC_HANDLE hSCManager ,LPCSTR lpServiceName ,LPCSTR lpDisplayName ,DWORD dwDesiredAccess ,DWORD dwServiceType ,DWORD dwStartType ,DWORD dwErrorControl ,LPCSTR lpBinaryPathName ,LPCSTR lpLoadOrderGroup ,LPDWORD lpdwTagId ,LPCSTR lpDependencies ,LPCSTR lpServiceStartName ,LPCSTR lpPassword );
SC_HANDLE CreateServiceW (SC_HANDLE hSCManager ,LPCWSTR lpServiceName ,LPCWSTR lpDisplayName ,DWORD dwDesiredAccess ,DWORD dwServiceType ,DWORD dwStartType ,DWORD dwErrorControl ,LPCWSTR lpBinaryPathName ,LPCWSTR lpLoadOrderGroup ,LPDWORD lpdwTagId ,LPCWSTR lpDependencies ,LPCWSTR lpServiceStartName ,LPCWSTR lpPassword );
WINBOOL DeleteService (SC_HANDLE hService );
WINBOOL EnumDependentServicesA (SC_HANDLE hService ,DWORD dwServiceState ,LPENUM_SERVICE_STATUSA lpServices ,DWORD cbBufSize ,LPDWORD pcbBytesNeeded ,LPDWORD lpServicesReturned );
WINBOOL EnumDependentServicesW (SC_HANDLE hService ,DWORD dwServiceState ,LPENUM_SERVICE_STATUSW lpServices ,DWORD cbBufSize ,LPDWORD pcbBytesNeeded ,LPDWORD lpServicesReturned );
WINBOOL EnumServicesStatusA (SC_HANDLE hSCManager ,DWORD dwServiceType ,DWORD dwServiceState ,LPENUM_SERVICE_STATUSA lpServices ,DWORD cbBufSize ,LPDWORD pcbBytesNeeded ,LPDWORD lpServicesReturned ,LPDWORD lpResumeHandle );
WINBOOL EnumServicesStatusW (SC_HANDLE hSCManager ,DWORD dwServiceType ,DWORD dwServiceState ,LPENUM_SERVICE_STATUSW lpServices ,DWORD cbBufSize ,LPDWORD pcbBytesNeeded ,LPDWORD lpServicesReturned ,LPDWORD lpResumeHandle );
WINBOOL EnumServicesStatusExA (SC_HANDLE hSCManager ,SC_ENUM_TYPE InfoLevel ,DWORD dwServiceType ,DWORD dwServiceState ,LPBYTE lpServices ,DWORD cbBufSize ,LPDWORD pcbBytesNeeded ,LPDWORD lpServicesReturned ,LPDWORD lpResumeHandle ,LPCSTR pszGroupName );
WINBOOL EnumServicesStatusExW (SC_HANDLE hSCManager ,SC_ENUM_TYPE InfoLevel ,DWORD dwServiceType ,DWORD dwServiceState ,LPBYTE lpServices ,DWORD cbBufSize ,LPDWORD pcbBytesNeeded ,LPDWORD lpServicesReturned ,LPDWORD lpResumeHandle ,LPCWSTR pszGroupName );
WINBOOL GetServiceKeyNameA (SC_HANDLE hSCManager ,LPCSTR lpDisplayName ,LPSTR lpServiceName ,LPDWORD lpcchBuffer );
WINBOOL GetServiceKeyNameW (SC_HANDLE hSCManager ,LPCWSTR lpDisplayName ,LPWSTR lpServiceName ,LPDWORD lpcchBuffer );
WINBOOL GetServiceDisplayNameA (SC_HANDLE hSCManager ,LPCSTR lpServiceName ,LPSTR lpDisplayName ,LPDWORD lpcchBuffer );
WINBOOL GetServiceDisplayNameW (SC_HANDLE hSCManager ,LPCWSTR lpServiceName ,LPWSTR lpDisplayName ,LPDWORD lpcchBuffer );
SC_LOCK LockServiceDatabase (SC_HANDLE hSCManager );
WINBOOL NotifyBootConfigStatus (WINBOOL BootAcceptable );
SC_HANDLE OpenSCManagerA (LPCSTR lpMachineName ,LPCSTR lpDatabaseName ,DWORD dwDesiredAccess );
SC_HANDLE OpenSCManagerW (LPCWSTR lpMachineName ,LPCWSTR lpDatabaseName ,DWORD dwDesiredAccess );
SC_HANDLE OpenServiceA (SC_HANDLE hSCManager ,LPCSTR lpServiceName ,DWORD dwDesiredAccess );
SC_HANDLE OpenServiceW (SC_HANDLE hSCManager ,LPCWSTR lpServiceName ,DWORD dwDesiredAccess );
WINBOOL QueryServiceConfigA (SC_HANDLE hService ,LPQUERY_SERVICE_CONFIGA lpServiceConfig ,DWORD cbBufSize ,LPDWORD pcbBytesNeeded );
WINBOOL QueryServiceConfigW (SC_HANDLE hService ,LPQUERY_SERVICE_CONFIGW lpServiceConfig ,DWORD cbBufSize ,LPDWORD pcbBytesNeeded );
WINBOOL QueryServiceConfig2A (SC_HANDLE hService ,DWORD dwInfoLevel ,LPBYTE lpBuffer ,DWORD cbBufSize ,LPDWORD pcbBytesNeeded );
WINBOOL QueryServiceConfig2W (SC_HANDLE hService ,DWORD dwInfoLevel ,LPBYTE lpBuffer ,DWORD cbBufSize ,LPDWORD pcbBytesNeeded );
WINBOOL QueryServiceLockStatusA (SC_HANDLE hSCManager ,LPQUERY_SERVICE_LOCK_STATUSA lpLockStatus ,DWORD cbBufSize ,LPDWORD pcbBytesNeeded );
WINBOOL QueryServiceLockStatusW (SC_HANDLE hSCManager ,LPQUERY_SERVICE_LOCK_STATUSW lpLockStatus ,DWORD cbBufSize ,LPDWORD pcbBytesNeeded );
WINBOOL QueryServiceObjectSecurity (SC_HANDLE hService ,SECURITY_INFORMATION dwSecurityInformation ,PSECURITY_DESCRIPTOR lpSecurityDescriptor ,DWORD cbBufSize ,LPDWORD pcbBytesNeeded );
WINBOOL QueryServiceStatus (SC_HANDLE hService ,LPSERVICE_STATUS lpServiceStatus );
WINBOOL QueryServiceStatusEx (SC_HANDLE hService ,SC_STATUS_TYPE InfoLevel ,LPBYTE lpBuffer ,DWORD cbBufSize ,LPDWORD pcbBytesNeeded );
SERVICE_STATUS_HANDLE RegisterServiceCtrlHandlerA (LPCSTR lpServiceName ,LPHANDLER_FUNCTION lpHandlerProc );
SERVICE_STATUS_HANDLE RegisterServiceCtrlHandlerW (LPCWSTR lpServiceName ,LPHANDLER_FUNCTION lpHandlerProc );
SERVICE_STATUS_HANDLE RegisterServiceCtrlHandlerExA (LPCSTR lpServiceName ,LPHANDLER_FUNCTION_EX lpHandlerProc ,LPVOID lpContext );
SERVICE_STATUS_HANDLE RegisterServiceCtrlHandlerExW (LPCWSTR lpServiceName ,LPHANDLER_FUNCTION_EX lpHandlerProc ,LPVOID lpContext );
WINBOOL SetServiceObjectSecurity (SC_HANDLE hService ,SECURITY_INFORMATION dwSecurityInformation ,PSECURITY_DESCRIPTOR lpSecurityDescriptor );
WINBOOL SetServiceStatus (SERVICE_STATUS_HANDLE hServiceStatus ,LPSERVICE_STATUS lpServiceStatus );
WINBOOL StartServiceCtrlDispatcherA (const SERVICE_TABLE_ENTRYA *lpServiceStartTable );
WINBOOL StartServiceCtrlDispatcherW (const SERVICE_TABLE_ENTRYW *lpServiceStartTable );
WINBOOL StartServiceA (SC_HANDLE hService ,DWORD dwNumServiceArgs ,LPCSTR *lpServiceArgVectors );
WINBOOL StartServiceW (SC_HANDLE hService ,DWORD dwNumServiceArgs ,LPCWSTR *lpServiceArgVectors );
WINBOOL UnlockServiceDatabase (SC_LOCK ScLock );
// m:\mingw\x86_64-w64-mingw32\include\mcx.h

typedef struct _MODEMDEVCAPS {DWORD dwActualSize ;DWORD dwRequiredSize ;DWORD dwDevSpecificOffset ;DWORD dwDevSpecificSize ;DWORD dwModemProviderVersion ;DWORD dwModemManufacturerOffset ;DWORD dwModemManufacturerSize ;DWORD dwModemModelOffset ;DWORD dwModemModelSize ;DWORD dwModemVersionOffset ;DWORD dwModemVersionSize ;DWORD dwDialOptions ;DWORD dwCallSetupFailTimer ;DWORD dwInactivityTimeout ;DWORD dwSpeakerVolume ;DWORD dwSpeakerMode ;DWORD dwModemOptions ;DWORD dwMaxDTERate ;DWORD dwMaxDCERate ;BYTE abVariablePortion [1 ];}MODEMDEVCAPS ;
typedef struct _MODEMDEVCAPS {DWORD dwActualSize ;DWORD dwRequiredSize ;DWORD dwDevSpecificOffset ;DWORD dwDevSpecificSize ;DWORD dwModemProviderVersion ;DWORD dwModemManufacturerOffset ;DWORD dwModemManufacturerSize ;DWORD dwModemModelOffset ;DWORD dwModemModelSize ;DWORD dwModemVersionOffset ;DWORD dwModemVersionSize ;DWORD dwDialOptions ;DWORD dwCallSetupFailTimer ;DWORD dwInactivityTimeout ;DWORD dwSpeakerVolume ;DWORD dwSpeakerMode ;DWORD dwModemOptions ;DWORD dwMaxDTERate ;DWORD dwMaxDCERate ;BYTE abVariablePortion [1 ];}*PMODEMDEVCAPS ;
typedef struct _MODEMDEVCAPS {DWORD dwActualSize ;DWORD dwRequiredSize ;DWORD dwDevSpecificOffset ;DWORD dwDevSpecificSize ;DWORD dwModemProviderVersion ;DWORD dwModemManufacturerOffset ;DWORD dwModemManufacturerSize ;DWORD dwModemModelOffset ;DWORD dwModemModelSize ;DWORD dwModemVersionOffset ;DWORD dwModemVersionSize ;DWORD dwDialOptions ;DWORD dwCallSetupFailTimer ;DWORD dwInactivityTimeout ;DWORD dwSpeakerVolume ;DWORD dwSpeakerMode ;DWORD dwModemOptions ;DWORD dwMaxDTERate ;DWORD dwMaxDCERate ;BYTE abVariablePortion [1 ];}*LPMODEMDEVCAPS ;

typedef struct _MODEMSETTINGS {DWORD dwActualSize ;DWORD dwRequiredSize ;DWORD dwDevSpecificOffset ;DWORD dwDevSpecificSize ;DWORD dwCallSetupFailTimer ;DWORD dwInactivityTimeout ;DWORD dwSpeakerVolume ;DWORD dwSpeakerMode ;DWORD dwPreferredModemOptions ;DWORD dwNegotiatedModemOptions ;DWORD dwNegotiatedDCERate ;BYTE abVariablePortion [1 ];}MODEMSETTINGS ;
typedef struct _MODEMSETTINGS {DWORD dwActualSize ;DWORD dwRequiredSize ;DWORD dwDevSpecificOffset ;DWORD dwDevSpecificSize ;DWORD dwCallSetupFailTimer ;DWORD dwInactivityTimeout ;DWORD dwSpeakerVolume ;DWORD dwSpeakerMode ;DWORD dwPreferredModemOptions ;DWORD dwNegotiatedModemOptions ;DWORD dwNegotiatedDCERate ;BYTE abVariablePortion [1 ];}*PMODEMSETTINGS ;
typedef struct _MODEMSETTINGS {DWORD dwActualSize ;DWORD dwRequiredSize ;DWORD dwDevSpecificOffset ;DWORD dwDevSpecificSize ;DWORD dwCallSetupFailTimer ;DWORD dwInactivityTimeout ;DWORD dwSpeakerVolume ;DWORD dwSpeakerMode ;DWORD dwPreferredModemOptions ;DWORD dwNegotiatedModemOptions ;DWORD dwNegotiatedDCERate ;BYTE abVariablePortion [1 ];}*LPMODEMSETTINGS ;

// m:\mingw\x86_64-w64-mingw32\include\imm.h

struct HIMC__ {int unused ;};
typedef struct HIMC__ *HIMC ;
struct HIMCC__ {int unused ;};
typedef struct HIMCC__ *HIMCC ;
typedef HKL *LPHKL ;
typedef struct tagCOMPOSITIONFORM {DWORD dwStyle ;POINT ptCurrentPos ;RECT rcArea ;}COMPOSITIONFORM ;
typedef struct tagCOMPOSITIONFORM {DWORD dwStyle ;POINT ptCurrentPos ;RECT rcArea ;}*PCOMPOSITIONFORM ;
typedef struct tagCOMPOSITIONFORM {DWORD dwStyle ;POINT ptCurrentPos ;RECT rcArea ;}*NPCOMPOSITIONFORM ;
typedef struct tagCOMPOSITIONFORM {DWORD dwStyle ;POINT ptCurrentPos ;RECT rcArea ;}*LPCOMPOSITIONFORM ;

typedef struct tagCANDIDATEFORM {DWORD dwIndex ;DWORD dwStyle ;POINT ptCurrentPos ;RECT rcArea ;}CANDIDATEFORM ;
typedef struct tagCANDIDATEFORM {DWORD dwIndex ;DWORD dwStyle ;POINT ptCurrentPos ;RECT rcArea ;}*PCANDIDATEFORM ;
typedef struct tagCANDIDATEFORM {DWORD dwIndex ;DWORD dwStyle ;POINT ptCurrentPos ;RECT rcArea ;}*NPCANDIDATEFORM ;
typedef struct tagCANDIDATEFORM {DWORD dwIndex ;DWORD dwStyle ;POINT ptCurrentPos ;RECT rcArea ;}*LPCANDIDATEFORM ;

typedef struct tagCANDIDATELIST {DWORD dwSize ;DWORD dwStyle ;DWORD dwCount ;DWORD dwSelection ;DWORD dwPageStart ;DWORD dwPageSize ;DWORD dwOffset [1 ];}CANDIDATELIST ;
typedef struct tagCANDIDATELIST {DWORD dwSize ;DWORD dwStyle ;DWORD dwCount ;DWORD dwSelection ;DWORD dwPageStart ;DWORD dwPageSize ;DWORD dwOffset [1 ];}*PCANDIDATELIST ;
typedef struct tagCANDIDATELIST {DWORD dwSize ;DWORD dwStyle ;DWORD dwCount ;DWORD dwSelection ;DWORD dwPageStart ;DWORD dwPageSize ;DWORD dwOffset [1 ];}*NPCANDIDATELIST ;
typedef struct tagCANDIDATELIST {DWORD dwSize ;DWORD dwStyle ;DWORD dwCount ;DWORD dwSelection ;DWORD dwPageStart ;DWORD dwPageSize ;DWORD dwOffset [1 ];}*LPCANDIDATELIST ;

typedef struct tagREGISTERWORDA {LPSTR lpReading ;LPSTR lpWord ;}REGISTERWORDA ;
typedef struct tagREGISTERWORDA {LPSTR lpReading ;LPSTR lpWord ;}*PREGISTERWORDA ;
typedef struct tagREGISTERWORDA {LPSTR lpReading ;LPSTR lpWord ;}*NPREGISTERWORDA ;
typedef struct tagREGISTERWORDA {LPSTR lpReading ;LPSTR lpWord ;}*LPREGISTERWORDA ;

typedef struct tagREGISTERWORDW {LPWSTR lpReading ;LPWSTR lpWord ;}REGISTERWORDW ;
typedef struct tagREGISTERWORDW {LPWSTR lpReading ;LPWSTR lpWord ;}*PREGISTERWORDW ;
typedef struct tagREGISTERWORDW {LPWSTR lpReading ;LPWSTR lpWord ;}*NPREGISTERWORDW ;
typedef struct tagREGISTERWORDW {LPWSTR lpReading ;LPWSTR lpWord ;}*LPREGISTERWORDW ;

typedef REGISTERWORDA REGISTERWORD ;
typedef PREGISTERWORDA PREGISTERWORD ;
typedef NPREGISTERWORDA NPREGISTERWORD ;
typedef LPREGISTERWORDA LPREGISTERWORD ;
typedef struct tagRECONVERTSTRING {DWORD dwSize ;DWORD dwVersion ;DWORD dwStrLen ;DWORD dwStrOffset ;DWORD dwCompStrLen ;DWORD dwCompStrOffset ;DWORD dwTargetStrLen ;DWORD dwTargetStrOffset ;}RECONVERTSTRING ;
typedef struct tagRECONVERTSTRING {DWORD dwSize ;DWORD dwVersion ;DWORD dwStrLen ;DWORD dwStrOffset ;DWORD dwCompStrLen ;DWORD dwCompStrOffset ;DWORD dwTargetStrLen ;DWORD dwTargetStrOffset ;}*PRECONVERTSTRING ;
typedef struct tagRECONVERTSTRING {DWORD dwSize ;DWORD dwVersion ;DWORD dwStrLen ;DWORD dwStrOffset ;DWORD dwCompStrLen ;DWORD dwCompStrOffset ;DWORD dwTargetStrLen ;DWORD dwTargetStrOffset ;}*NPRECONVERTSTRING ;
typedef struct tagRECONVERTSTRING {DWORD dwSize ;DWORD dwVersion ;DWORD dwStrLen ;DWORD dwStrOffset ;DWORD dwCompStrLen ;DWORD dwCompStrOffset ;DWORD dwTargetStrLen ;DWORD dwTargetStrOffset ;}*LPRECONVERTSTRING ;

typedef struct tagSTYLEBUFA {DWORD dwStyle ;CHAR szDescription [32 ];}STYLEBUFA ;
typedef struct tagSTYLEBUFA {DWORD dwStyle ;CHAR szDescription [32 ];}*PSTYLEBUFA ;
typedef struct tagSTYLEBUFA {DWORD dwStyle ;CHAR szDescription [32 ];}*NPSTYLEBUFA ;
typedef struct tagSTYLEBUFA {DWORD dwStyle ;CHAR szDescription [32 ];}*LPSTYLEBUFA ;

typedef struct tagSTYLEBUFW {DWORD dwStyle ;WCHAR szDescription [32 ];}STYLEBUFW ;
typedef struct tagSTYLEBUFW {DWORD dwStyle ;WCHAR szDescription [32 ];}*PSTYLEBUFW ;
typedef struct tagSTYLEBUFW {DWORD dwStyle ;WCHAR szDescription [32 ];}*NPSTYLEBUFW ;
typedef struct tagSTYLEBUFW {DWORD dwStyle ;WCHAR szDescription [32 ];}*LPSTYLEBUFW ;

typedef STYLEBUFA STYLEBUF ;
typedef PSTYLEBUFA PSTYLEBUF ;
typedef NPSTYLEBUFA NPSTYLEBUF ;
typedef LPSTYLEBUFA LPSTYLEBUF ;
typedef struct tagIMEMENUITEMINFOA {UINT cbSize ;UINT fType ;UINT fState ;UINT wID ;HBITMAP hbmpChecked ;HBITMAP hbmpUnchecked ;DWORD dwItemData ;CHAR szString [80 ];HBITMAP hbmpItem ;}IMEMENUITEMINFOA ;
typedef struct tagIMEMENUITEMINFOA {UINT cbSize ;UINT fType ;UINT fState ;UINT wID ;HBITMAP hbmpChecked ;HBITMAP hbmpUnchecked ;DWORD dwItemData ;CHAR szString [80 ];HBITMAP hbmpItem ;}*PIMEMENUITEMINFOA ;
typedef struct tagIMEMENUITEMINFOA {UINT cbSize ;UINT fType ;UINT fState ;UINT wID ;HBITMAP hbmpChecked ;HBITMAP hbmpUnchecked ;DWORD dwItemData ;CHAR szString [80 ];HBITMAP hbmpItem ;}*NPIMEMENUITEMINFOA ;
typedef struct tagIMEMENUITEMINFOA {UINT cbSize ;UINT fType ;UINT fState ;UINT wID ;HBITMAP hbmpChecked ;HBITMAP hbmpUnchecked ;DWORD dwItemData ;CHAR szString [80 ];HBITMAP hbmpItem ;}*LPIMEMENUITEMINFOA ;

typedef struct tagIMEMENUITEMINFOW {UINT cbSize ;UINT fType ;UINT fState ;UINT wID ;HBITMAP hbmpChecked ;HBITMAP hbmpUnchecked ;DWORD dwItemData ;WCHAR szString [80 ];HBITMAP hbmpItem ;}IMEMENUITEMINFOW ;
typedef struct tagIMEMENUITEMINFOW {UINT cbSize ;UINT fType ;UINT fState ;UINT wID ;HBITMAP hbmpChecked ;HBITMAP hbmpUnchecked ;DWORD dwItemData ;WCHAR szString [80 ];HBITMAP hbmpItem ;}*PIMEMENUITEMINFOW ;
typedef struct tagIMEMENUITEMINFOW {UINT cbSize ;UINT fType ;UINT fState ;UINT wID ;HBITMAP hbmpChecked ;HBITMAP hbmpUnchecked ;DWORD dwItemData ;WCHAR szString [80 ];HBITMAP hbmpItem ;}*NPIMEMENUITEMINFOW ;
typedef struct tagIMEMENUITEMINFOW {UINT cbSize ;UINT fType ;UINT fState ;UINT wID ;HBITMAP hbmpChecked ;HBITMAP hbmpUnchecked ;DWORD dwItemData ;WCHAR szString [80 ];HBITMAP hbmpItem ;}*LPIMEMENUITEMINFOW ;

typedef IMEMENUITEMINFOA IMEMENUITEMINFO ;
typedef PIMEMENUITEMINFOA PIMEMENUITEMINFO ;
typedef NPIMEMENUITEMINFOA NPIMEMENUITEMINFO ;
typedef LPIMEMENUITEMINFOA LPIMEMENUITEMINFO ;
typedef struct tagIMECHARPOSITION {DWORD dwSize ;DWORD dwCharPos ;POINT pt ;UINT cLineHeight ;RECT rcDocument ;}IMECHARPOSITION ;
typedef struct tagIMECHARPOSITION {DWORD dwSize ;DWORD dwCharPos ;POINT pt ;UINT cLineHeight ;RECT rcDocument ;}*PIMECHARPOSITION ;
typedef struct tagIMECHARPOSITION {DWORD dwSize ;DWORD dwCharPos ;POINT pt ;UINT cLineHeight ;RECT rcDocument ;}*NPIMECHARPOSITION ;
typedef struct tagIMECHARPOSITION {DWORD dwSize ;DWORD dwCharPos ;POINT pt ;UINT cLineHeight ;RECT rcDocument ;}*LPIMECHARPOSITION ;

typedef WINBOOL (*IMCENUMPROC )(HIMC ,LPARAM );
HKL ImmInstallIMEA (LPCSTR lpszIMEFileName ,LPCSTR lpszLayoutText );
HKL ImmInstallIMEW (LPCWSTR lpszIMEFileName ,LPCWSTR lpszLayoutText );
HWND ImmGetDefaultIMEWnd (HWND );
UINT ImmGetDescriptionA (HKL ,LPSTR ,UINT uBufLen );
UINT ImmGetDescriptionW (HKL ,LPWSTR ,UINT uBufLen );
UINT ImmGetIMEFileNameA (HKL ,LPSTR ,UINT uBufLen );
UINT ImmGetIMEFileNameW (HKL ,LPWSTR ,UINT uBufLen );
DWORD ImmGetProperty (HKL ,DWORD );
WINBOOL ImmIsIME (HKL );
WINBOOL ImmSimulateHotKey (HWND ,DWORD );
HIMC ImmCreateContext (void );
WINBOOL ImmDestroyContext (HIMC );
HIMC ImmGetContext (HWND );
WINBOOL ImmReleaseContext (HWND ,HIMC );
HIMC ImmAssociateContext (HWND ,HIMC );
WINBOOL ImmAssociateContextEx (HWND ,HIMC ,DWORD );
LONG ImmGetCompositionStringA (HIMC ,DWORD ,LPVOID ,DWORD );
LONG ImmGetCompositionStringW (HIMC ,DWORD ,LPVOID ,DWORD );
WINBOOL ImmSetCompositionStringA (HIMC ,DWORD dwIndex ,LPVOID lpComp ,DWORD ,LPVOID lpRead ,DWORD );
WINBOOL ImmSetCompositionStringW (HIMC ,DWORD dwIndex ,LPVOID lpComp ,DWORD ,LPVOID lpRead ,DWORD );
DWORD ImmGetCandidateListCountA (HIMC ,LPDWORD lpdwListCount );
DWORD ImmGetCandidateListCountW (HIMC ,LPDWORD lpdwListCount );
DWORD ImmGetCandidateListA (HIMC ,DWORD deIndex ,LPCANDIDATELIST ,DWORD dwBufLen );
DWORD ImmGetCandidateListW (HIMC ,DWORD deIndex ,LPCANDIDATELIST ,DWORD dwBufLen );
DWORD ImmGetGuideLineA (HIMC ,DWORD dwIndex ,LPSTR ,DWORD dwBufLen );
DWORD ImmGetGuideLineW (HIMC ,DWORD dwIndex ,LPWSTR ,DWORD dwBufLen );
WINBOOL ImmGetConversionStatus (HIMC ,LPDWORD ,LPDWORD );
WINBOOL ImmSetConversionStatus (HIMC ,DWORD ,DWORD );
WINBOOL ImmGetOpenStatus (HIMC );
WINBOOL ImmSetOpenStatus (HIMC ,WINBOOL );
WINBOOL ImmGetCompositionFontA (HIMC ,LPLOGFONTA );
WINBOOL ImmGetCompositionFontW (HIMC ,LPLOGFONTW );
WINBOOL ImmSetCompositionFontA (HIMC ,LPLOGFONTA );
WINBOOL ImmSetCompositionFontW (HIMC ,LPLOGFONTW );
typedef int (*REGISTERWORDENUMPROCA )(LPCSTR ,DWORD ,LPCSTR ,LPVOID );
typedef int (*REGISTERWORDENUMPROCW )(LPCWSTR ,DWORD ,LPCWSTR ,LPVOID );
WINBOOL ImmConfigureIMEA (HKL ,HWND ,DWORD ,LPVOID );
WINBOOL ImmConfigureIMEW (HKL ,HWND ,DWORD ,LPVOID );
LRESULT ImmEscapeA (HKL ,HIMC ,UINT ,LPVOID );
LRESULT ImmEscapeW (HKL ,HIMC ,UINT ,LPVOID );
DWORD ImmGetConversionListA (HKL ,HIMC ,LPCSTR ,LPCANDIDATELIST ,DWORD dwBufLen ,UINT uFlag );
DWORD ImmGetConversionListW (HKL ,HIMC ,LPCWSTR ,LPCANDIDATELIST ,DWORD dwBufLen ,UINT uFlag );
WINBOOL ImmNotifyIME (HIMC ,DWORD dwAction ,DWORD dwIndex ,DWORD dwValue );
WINBOOL ImmGetStatusWindowPos (HIMC ,LPPOINT );
WINBOOL ImmSetStatusWindowPos (HIMC ,LPPOINT );
WINBOOL ImmGetCompositionWindow (HIMC ,LPCOMPOSITIONFORM );
WINBOOL ImmSetCompositionWindow (HIMC ,LPCOMPOSITIONFORM );
WINBOOL ImmGetCandidateWindow (HIMC ,DWORD ,LPCANDIDATEFORM );
WINBOOL ImmSetCandidateWindow (HIMC ,LPCANDIDATEFORM );
WINBOOL ImmIsUIMessageA (HWND ,UINT ,WPARAM ,LPARAM );
WINBOOL ImmIsUIMessageW (HWND ,UINT ,WPARAM ,LPARAM );
UINT ImmGetVirtualKey (HWND );
WINBOOL ImmRegisterWordA (HKL ,LPCSTR lpszReading ,DWORD ,LPCSTR lpszRegister );
WINBOOL ImmRegisterWordW (HKL ,LPCWSTR lpszReading ,DWORD ,LPCWSTR lpszRegister );
WINBOOL ImmUnregisterWordA (HKL ,LPCSTR lpszReading ,DWORD ,LPCSTR lpszUnregister );
WINBOOL ImmUnregisterWordW (HKL ,LPCWSTR lpszReading ,DWORD ,LPCWSTR lpszUnregister );
UINT ImmGetRegisterWordStyleA (HKL ,UINT nItem ,LPSTYLEBUFA );
UINT ImmGetRegisterWordStyleW (HKL ,UINT nItem ,LPSTYLEBUFW );
UINT ImmEnumRegisterWordA (HKL ,REGISTERWORDENUMPROCA ,LPCSTR lpszReading ,DWORD ,LPCSTR lpszRegister ,LPVOID );
UINT ImmEnumRegisterWordW (HKL ,REGISTERWORDENUMPROCW ,LPCWSTR lpszReading ,DWORD ,LPCWSTR lpszRegister ,LPVOID );
WINBOOL ImmDisableIME (DWORD );
WINBOOL ImmEnumInputContext (DWORD idThread ,IMCENUMPROC lpfn ,LPARAM lParam );
DWORD ImmGetImeMenuItemsA (HIMC ,DWORD ,DWORD ,LPIMEMENUITEMINFOA ,LPIMEMENUITEMINFOA ,DWORD );
DWORD ImmGetImeMenuItemsW (HIMC ,DWORD ,DWORD ,LPIMEMENUITEMINFOW ,LPIMEMENUITEMINFOW ,DWORD );
WINBOOL ImmDisableTextFrameService (DWORD idThread );
#define ABE_BOTTOM (3)
#define ABE_LEFT (0)
#define ABE_RIGHT (2)
#define ABE_TOP (1)
#define ABM_ACTIVATE (6)
#define ABM_GETAUTOHIDEBAR (7)
#define ABM_GETSTATE (4)
#define ABM_GETTASKBARPOS (5)
#define ABM_NEW (0)
#define ABM_QUERYPOS (2)
#define ABM_REMOVE (1)
#define ABM_SETAUTOHIDEBAR (8)
#define ABM_SETPOS (3)
#define ABM_SETSTATE (10)
#define ABM_WINDOWPOSCHANGED (9)
#define ABN_FULLSCREENAPP (2)
#define ABN_POSCHANGED (1)
#define ABN_STATECHANGE (0)
#define ABN_WINDOWARRANGE (3)
#define ABORTDOC (2)
#define ABOVE_NORMAL_PRIORITY_CLASS (32768)
#define ABSOLUTE (1)
#define ABS_ALWAYSONTOP (2)
#define ABS_AUTOHIDE (1)
#define ACCESS_ALLOWED_ACE_TYPE (0)
#define ACCESS_ALLOWED_CALLBACK_ACE_TYPE (9)
#define ACCESS_ALLOWED_CALLBACK_OBJECT_ACE_TYPE (11)
#define ACCESS_ALLOWED_COMPOUND_ACE_TYPE (4)
#define ACCESS_ALLOWED_OBJECT_ACE_TYPE (5)
#define ACCESS_DENIED_ACE_TYPE (1)
#define ACCESS_DENIED_CALLBACK_ACE_TYPE (10)
#define ACCESS_DENIED_CALLBACK_OBJECT_ACE_TYPE (12)
#define ACCESS_DENIED_OBJECT_ACE_TYPE (6)
#define ACCESS_DS_OBJECT_TYPE_NAME_A "Directory Service Object"
#define ACCESS_DS_OBJECT_TYPE_NAME_W "Directory Service Object"
#define ACCESS_DS_SOURCE_A "DS"
#define ACCESS_DS_SOURCE_W "DS"
#define ACCESS_FILTERKEYS (2)
#define ACCESS_MAX_LEVEL (4)
#define ACCESS_MAX_MS_ACE_TYPE (8)
#define ACCESS_MAX_MS_OBJECT_ACE_TYPE (8)
#define ACCESS_MAX_MS_V2_ACE_TYPE (3)
#define ACCESS_MAX_MS_V3_ACE_TYPE (4)
#define ACCESS_MAX_MS_V4_ACE_TYPE (8)
#define ACCESS_MAX_MS_V5_ACE_TYPE (19)
#define ACCESS_MIN_MS_ACE_TYPE (0)
#define ACCESS_MIN_MS_OBJECT_ACE_TYPE (5)
#define ACCESS_MOUSEKEYS (3)
#define ACCESS_OBJECT_GUID (0)
#define ACCESS_PROPERTY_GUID (2)
#define ACCESS_PROPERTY_SET_GUID (1)
#define ACCESS_REASON_DATA_MASK (65535)
#define ACCESS_REASON_EXDATA_MASK (2130706432)
#define ACCESS_REASON_STAGING_MASK (2147483648u)
#define ACCESS_REASON_TYPE_MASK (16711680)
#define ACCESS_STICKYKEYS (1)
#define ACCESS_SYSTEM_SECURITY (16777216l)
#define ACE_INHERITED_OBJECT_TYPE_PRESENT (2)
#define ACE_OBJECT_TYPE_PRESENT (1)
#define ACL_REVISION (2)
#define ACL_REVISION1 (1)
#define ACL_REVISION2 (2)
#define ACL_REVISION3 (3)
#define ACL_REVISION4 (4)
#define ACL_REVISION_DS (4)
#define ACPI_PPM_HARDWARE_ALL (254)
#define ACPI_PPM_SOFTWARE_ALL (252)
#define ACPI_PPM_SOFTWARE_ANY (253)
#define ACTCTX_FLAG_APPLICATION_NAME_VALID (32)
#define ACTCTX_FLAG_ASSEMBLY_DIRECTORY_VALID (4)
#define ACTCTX_FLAG_HMODULE_VALID (128)
#define ACTCTX_FLAG_LANGID_VALID (2)
#define ACTCTX_FLAG_PROCESSOR_ARCHITECTURE_VALID (1)
#define ACTCTX_FLAG_RESOURCE_NAME_VALID (8)
#define ACTCTX_FLAG_SET_PROCESS_DEFAULT (16)
#define ACTCTX_FLAG_SOURCE_IS_ASSEMBLYREF (64)
#define ACTIVATIONCONTEXTINFOCLASS ACTIVATION_CONTEXT_INFO_CLASS
#define ACTIVATION_CONTEXT_BASIC_INFORMATION_DEFINED (1)
#define ACTIVATION_CONTEXT_PATH_TYPE_ASSEMBLYREF (4)
#define ACTIVATION_CONTEXT_PATH_TYPE_NONE (1)
#define ACTIVATION_CONTEXT_PATH_TYPE_URL (3)
#define ACTIVATION_CONTEXT_PATH_TYPE_WIN32_FILE (2)
#define ACTIVATION_CONTEXT_SECTION_APPLICATION_SETTINGS (10)
#define ACTIVATION_CONTEXT_SECTION_ASSEMBLY_INFORMATION (1)
#define ACTIVATION_CONTEXT_SECTION_CLR_SURROGATES (9)
#define ACTIVATION_CONTEXT_SECTION_COMPATIBILITY_INFO (11)
#define ACTIVATION_CONTEXT_SECTION_COM_INTERFACE_REDIRECTION (5)
#define ACTIVATION_CONTEXT_SECTION_COM_PROGID_REDIRECTION (7)
#define ACTIVATION_CONTEXT_SECTION_COM_SERVER_REDIRECTION (4)
#define ACTIVATION_CONTEXT_SECTION_COM_TYPE_LIBRARY_REDIRECTION (6)
#define ACTIVATION_CONTEXT_SECTION_DLL_REDIRECTION (2)
#define ACTIVATION_CONTEXT_SECTION_GLOBAL_OBJECT_RENAME_TABLE (8)
#define ACTIVATION_CONTEXT_SECTION_WINDOW_CLASS_REDIRECTION (3)
#define AC_LINE_BACKUP_POWER (2)
#define AC_LINE_OFFLINE (0)
#define AC_LINE_ONLINE (1)
#define AC_LINE_UNKNOWN (255)
#define AC_SRC_ALPHA (1)
#define AC_SRC_OVER (0)
#define ADDRESS_TAG_BIT (4398046511104ull)
#define AD_CLOCKWISE (2)
#define AD_COUNTERCLOCKWISE (1)
#define AF_APPLETALK (16)
#define AF_BAN (21)
#define AF_CCITT (10)
#define AF_CHAOS (5)
#define AF_DATAKIT (9)
#define AF_DECnet (12)
#define AF_DLI (13)
#define AF_ECMA (8)
#define AF_FIREFOX (19)
#define AF_HYLINK (15)
#define AF_IMPLINK (3)
#define AF_INET (2)
#define AF_IPX (6)
#define AF_ISO (7)
#define AF_LAT (14)
#define AF_MAX (22)
#define AF_NETBIOS (17)
#define AF_NS (6)
#define AF_OSI AF_ISO
#define AF_PUP (4)
#define AF_SNA (11)
#define AF_UNIX (1)
#define AF_UNKNOWN1 (20)
#define AF_UNSPEC (0)
#define AF_VOICEVIEW (18)
#define ALERT_SYSTEM_CRITICAL (5)
#define ALERT_SYSTEM_ERROR (3)
#define ALERT_SYSTEM_INFORMATIONAL (1)
#define ALERT_SYSTEM_QUERY (4)
#define ALERT_SYSTEM_WARNING (2)
#define ALGIDDEF 
#define ALG_CLASS_ALL (57344)
#define ALG_CLASS_ANY (0)
#define ALG_CLASS_DATA_ENCRYPT (24576)
#define ALG_CLASS_HASH (32768)
#define ALG_CLASS_KEY_EXCHANGE (40960)
#define ALG_CLASS_MSG_ENCRYPT (16384)
#define ALG_CLASS_SIGNATURE (8192)
#define ALG_SID_3DES (3)
#define ALG_SID_3DES_112 (9)
#define ALG_SID_AES (17)
#define ALG_SID_AES_128 (14)
#define ALG_SID_AES_192 (15)
#define ALG_SID_AES_256 (16)
#define ALG_SID_AGREED_KEY_ANY (3)
#define ALG_SID_ANY (0)
#define ALG_SID_CAST (6)
#define ALG_SID_CYLINK_MEK (12)
#define ALG_SID_DES (1)
#define ALG_SID_DESX (4)
#define ALG_SID_DH_EPHEM (2)
#define ALG_SID_DH_SANDF (1)
#define ALG_SID_DSS_ANY (0)
#define ALG_SID_DSS_DMS (2)
#define ALG_SID_DSS_PKCS (1)
#define ALG_SID_EXAMPLE (80)
#define ALG_SID_HASH_REPLACE_OWF (11)
#define ALG_SID_HMAC (9)
#define ALG_SID_IDEA (5)
#define ALG_SID_KEA (4)
#define ALG_SID_MAC (5)
#define ALG_SID_MD2 (1)
#define ALG_SID_MD4 (2)
#define ALG_SID_MD5 (3)
#define ALG_SID_PCT1_MASTER (4)
#define ALG_SID_RC2 (2)
#define ALG_SID_RC4 (1)
#define ALG_SID_RC5 (13)
#define ALG_SID_RIPEMD (6)
#define ALG_SID_RIPEMD160 (7)
#define ALG_SID_RSA_ANY (0)
#define ALG_SID_RSA_ENTRUST (3)
#define ALG_SID_RSA_MSATWORK (2)
#define ALG_SID_RSA_PGP (4)
#define ALG_SID_RSA_PKCS (1)
#define ALG_SID_SAFERSK128 (8)
#define ALG_SID_SAFERSK64 (7)
#define ALG_SID_SCHANNEL_ENC_KEY (7)
#define ALG_SID_SCHANNEL_MAC_KEY (3)
#define ALG_SID_SCHANNEL_MASTER_HASH (2)
#define ALG_SID_SEAL (2)
#define ALG_SID_SHA (4)
#define ALG_SID_SHA1 (4)
#define ALG_SID_SHA_256 (12)
#define ALG_SID_SHA_384 (13)
#define ALG_SID_SHA_512 (14)
#define ALG_SID_SKIPJACK (10)
#define ALG_SID_SSL2_MASTER (5)
#define ALG_SID_SSL3SHAMD5 (8)
#define ALG_SID_SSL3_MASTER (1)
#define ALG_SID_TEK (11)
#define ALG_SID_TLS1PRF (10)
#define ALG_SID_TLS1_MASTER (6)
#define ALG_TYPE_ANY (0)
#define ALG_TYPE_BLOCK (1536)
#define ALG_TYPE_DH (2560)
#define ALG_TYPE_DSS (512)
#define ALG_TYPE_RSA (1024)
#define ALG_TYPE_SECURECHANNEL (3072)
#define ALG_TYPE_STREAM (2048)
#define ALIGNMENT_MACHINE 
#define ALL_TRANSPORTS "M\x00\x00\x00"
#define ALTERNATE (1)
#define ANONYMOUS_LOGON_LUID { 0x3e6 , 0x0 }
#define ANSI_CHARSET (0)
#define ANSI_FIXED_FONT (11)
#define ANSI_NULL ( ( CHAR ) 0 )
#define ANSI_VAR_FONT (12)
#define ANTIALIASED_QUALITY (4)
#define ANYSIZE_ARRAY (1)
#define APD_COPY_ALL_FILES (4)
#define APD_COPY_FROM_DIRECTORY (16)
#define APD_COPY_NEW_FILES (8)
#define APD_STRICT_DOWNGRADE (2)
#define APD_STRICT_UPGRADE (1)
#define APIENTRY WINAPI
#define APIPRIVATE __stdcall
#define APPCLASS_MASK __MSABI_LONG ( 0x0000000F )
#define APPCLASS_MONITOR __MSABI_LONG ( 0x00000001 )
#define APPCLASS_STANDARD __MSABI_LONG ( 0x00000000 )
#define APPCMD_CLIENTONLY __MSABI_LONG ( 0x00000010 )
#define APPCMD_FILTERINITS __MSABI_LONG ( 0x00000020 )
#define APPCMD_MASK __MSABI_LONG ( 0x00000FF0 )
#define APPCOMMAND_BASS_BOOST (20)
#define APPCOMMAND_BASS_DOWN (19)
#define APPCOMMAND_BASS_UP (21)
#define APPCOMMAND_BROWSER_BACKWARD (1)
#define APPCOMMAND_BROWSER_FAVORITES (6)
#define APPCOMMAND_BROWSER_FORWARD (2)
#define APPCOMMAND_BROWSER_HOME (7)
#define APPCOMMAND_BROWSER_REFRESH (3)
#define APPCOMMAND_BROWSER_SEARCH (5)
#define APPCOMMAND_BROWSER_STOP (4)
#define APPCOMMAND_CLOSE (31)
#define APPCOMMAND_COPY (36)
#define APPCOMMAND_CORRECTION_LIST (45)
#define APPCOMMAND_CUT (37)
#define APPCOMMAND_DICTATE_OR_COMMAND_CONTROL_TOGGLE (43)
#define APPCOMMAND_FIND (28)
#define APPCOMMAND_FORWARD_MAIL (40)
#define APPCOMMAND_HELP (27)
#define APPCOMMAND_LAUNCH_APP1 (17)
#define APPCOMMAND_LAUNCH_APP2 (18)
#define APPCOMMAND_LAUNCH_MAIL (15)
#define APPCOMMAND_LAUNCH_MEDIA_SELECT (16)
#define APPCOMMAND_MEDIA_CHANNEL_DOWN (52)
#define APPCOMMAND_MEDIA_CHANNEL_UP (51)
#define APPCOMMAND_MEDIA_FAST_FORWARD (49)
#define APPCOMMAND_MEDIA_NEXTTRACK (11)
#define APPCOMMAND_MEDIA_PAUSE (47)
#define APPCOMMAND_MEDIA_PLAY (46)
#define APPCOMMAND_MEDIA_PLAY_PAUSE (14)
#define APPCOMMAND_MEDIA_PREVIOUSTRACK (12)
#define APPCOMMAND_MEDIA_RECORD (48)
#define APPCOMMAND_MEDIA_REWIND (50)
#define APPCOMMAND_MEDIA_STOP (13)
#define APPCOMMAND_MICROPHONE_VOLUME_DOWN (25)
#define APPCOMMAND_MICROPHONE_VOLUME_MUTE (24)
#define APPCOMMAND_MICROPHONE_VOLUME_UP (26)
#define APPCOMMAND_MIC_ON_OFF_TOGGLE (44)
#define APPCOMMAND_NEW (29)
#define APPCOMMAND_OPEN (30)
#define APPCOMMAND_PASTE (38)
#define APPCOMMAND_PRINT (33)
#define APPCOMMAND_REDO (35)
#define APPCOMMAND_REPLY_TO_MAIL (39)
#define APPCOMMAND_SAVE (32)
#define APPCOMMAND_SEND_MAIL (41)
#define APPCOMMAND_SPELL_CHECK (42)
#define APPCOMMAND_TREBLE_DOWN (22)
#define APPCOMMAND_TREBLE_UP (23)
#define APPCOMMAND_UNDO (34)
#define APPCOMMAND_VOLUME_DOWN (9)
#define APPCOMMAND_VOLUME_MUTE (8)
#define APPCOMMAND_VOLUME_UP (10)
#define APPIDREGFLAGS_ACTIVATE_IUSERVER_INDESKTOP (1)
#define APPIDREGFLAGS_ISSUE_ACTIVATION_RPC_AT_IDENTIFY (4)
#define APPIDREGFLAGS_IUSERVER_ACTIVATE_IN_CLIENT_SESSION_ONLY (32)
#define APPIDREGFLAGS_IUSERVER_SELF_SID_IN_LAUNCH_PERMISSION (16)
#define APPIDREGFLAGS_IUSERVER_UNMODIFIED_LOGON_TOKEN (8)
#define APPIDREGFLAGS_RESERVED1 (64)
#define APPIDREGFLAGS_SECURE_SERVER_PROCESS_SD_AND_BIND (2)
#define APPLICATION_ERROR_MASK (536870912)
#define APPLICATION_VERIFIER_ACCESS_VIOLATION (2)
#define APPLICATION_VERIFIER_BAD_HEAP_HANDLE (5)
#define APPLICATION_VERIFIER_COM_API_IN_DLLMAIN (1025)
#define APPLICATION_VERIFIER_COM_CF_SUCCESS_WITH_NULL (1034)
#define APPLICATION_VERIFIER_COM_ERROR (1024)
#define APPLICATION_VERIFIER_COM_GCO_SUCCESS_WITH_NULL (1035)
#define APPLICATION_VERIFIER_COM_HOLDING_LOCKS_ON_CALL (1040)
#define APPLICATION_VERIFIER_COM_NULL_DACL (1030)
#define APPLICATION_VERIFIER_COM_OBJECT_IN_FREED_MEMORY (1036)
#define APPLICATION_VERIFIER_COM_OBJECT_IN_UNLOADED_DLL (1037)
#define APPLICATION_VERIFIER_COM_SMUGGLED_PROXY (1033)
#define APPLICATION_VERIFIER_COM_SMUGGLED_WRAPPER (1032)
#define APPLICATION_VERIFIER_COM_UNBALANCED_COINIT (1027)
#define APPLICATION_VERIFIER_COM_UNBALANCED_OLEINIT (1028)
#define APPLICATION_VERIFIER_COM_UNBALANCED_SWC (1029)
#define APPLICATION_VERIFIER_COM_UNHANDLED_EXCEPTION (1026)
#define APPLICATION_VERIFIER_COM_UNSAFE_IMPERSONATION (1031)
#define APPLICATION_VERIFIER_COM_VTBL_IN_FREED_MEMORY (1038)
#define APPLICATION_VERIFIER_COM_VTBL_IN_UNLOADED_DLL (1039)
#define APPLICATION_VERIFIER_CONTINUABLE_BREAK (268435456)
#define APPLICATION_VERIFIER_CORRUPTED_FREED_HEAP_BLOCK (14)
#define APPLICATION_VERIFIER_CORRUPTED_HEAP_BLOCK (8)
#define APPLICATION_VERIFIER_CORRUPTED_HEAP_BLOCK_END_STAMP (17)
#define APPLICATION_VERIFIER_CORRUPTED_HEAP_BLOCK_EXCEPTION_RAISED_FOR_HEADER (11)
#define APPLICATION_VERIFIER_CORRUPTED_HEAP_BLOCK_EXCEPTION_RAISED_FOR_PROBING (12)
#define APPLICATION_VERIFIER_CORRUPTED_HEAP_BLOCK_HEADER (13)
#define APPLICATION_VERIFIER_CORRUPTED_HEAP_BLOCK_PREFIX (18)
#define APPLICATION_VERIFIER_CORRUPTED_HEAP_BLOCK_START_STAMP (16)
#define APPLICATION_VERIFIER_CORRUPTED_HEAP_BLOCK_SUFFIX (15)
#define APPLICATION_VERIFIER_CORRUPTED_HEAP_LIST (20)
#define APPLICATION_VERIFIER_DESTROY_PROCESS_HEAP (9)
#define APPLICATION_VERIFIER_DOUBLE_FREE (7)
#define APPLICATION_VERIFIER_EXIT_THREAD_OWNS_LOCK (512)
#define APPLICATION_VERIFIER_EXTREME_SIZE_REQUEST (4)
#define APPLICATION_VERIFIER_FIRST_CHANCE_ACCESS_VIOLATION (19)
#define APPLICATION_VERIFIER_INCORRECT_WAIT_CALL (770)
#define APPLICATION_VERIFIER_INTERNAL_ERROR (2147483648u)
#define APPLICATION_VERIFIER_INTERNAL_WARNING (1073741824)
#define APPLICATION_VERIFIER_INVALID_ALLOCMEM (1537)
#define APPLICATION_VERIFIER_INVALID_EXIT_PROCESS_CALL (258)
#define APPLICATION_VERIFIER_INVALID_FREEMEM (1536)
#define APPLICATION_VERIFIER_INVALID_HANDLE (768)
#define APPLICATION_VERIFIER_INVALID_MAPVIEW (1538)
#define APPLICATION_VERIFIER_INVALID_TLS_VALUE (769)
#define APPLICATION_VERIFIER_LOCK_ALREADY_INITIALIZED (529)
#define APPLICATION_VERIFIER_LOCK_CORRUPTED (517)
#define APPLICATION_VERIFIER_LOCK_DOUBLE_INITIALIZE (515)
#define APPLICATION_VERIFIER_LOCK_INVALID_LOCK_COUNT (520)
#define APPLICATION_VERIFIER_LOCK_INVALID_OWNER (518)
#define APPLICATION_VERIFIER_LOCK_INVALID_RECURSION_COUNT (519)
#define APPLICATION_VERIFIER_LOCK_IN_FREED_HEAP (514)
#define APPLICATION_VERIFIER_LOCK_IN_FREED_MEMORY (516)
#define APPLICATION_VERIFIER_LOCK_IN_FREED_VMEM (530)
#define APPLICATION_VERIFIER_LOCK_IN_UNLOADED_DLL (513)
#define APPLICATION_VERIFIER_LOCK_IN_UNMAPPED_MEM (531)
#define APPLICATION_VERIFIER_LOCK_NOT_INITIALIZED (528)
#define APPLICATION_VERIFIER_LOCK_OVER_RELEASED (521)
#define APPLICATION_VERIFIER_NO_BREAK (536870912)
#define APPLICATION_VERIFIER_NULL_HANDLE (771)
#define APPLICATION_VERIFIER_PROBE_FREE_MEM (1540)
#define APPLICATION_VERIFIER_PROBE_GUARD_PAGE (1541)
#define APPLICATION_VERIFIER_PROBE_INVALID_ADDRESS (1539)
#define APPLICATION_VERIFIER_PROBE_INVALID_START_OR_SIZE (1543)
#define APPLICATION_VERIFIER_PROBE_NULL (1542)
#define APPLICATION_VERIFIER_RPC_ERROR (1280)
#define APPLICATION_VERIFIER_SIZE_HEAP_UNEXPECTED_EXCEPTION (1560)
#define APPLICATION_VERIFIER_STACK_OVERFLOW (257)
#define APPLICATION_VERIFIER_SWITCHED_HEAP_HANDLE (6)
#define APPLICATION_VERIFIER_TERMINATE_THREAD_CALL (256)
#define APPLICATION_VERIFIER_THREAD_NOT_LOCK_OWNER (532)
#define APPLICATION_VERIFIER_UNEXPECTED_EXCEPTION (10)
#define APPLICATION_VERIFIER_UNKNOWN_ERROR (1)
#define APPLICATION_VERIFIER_UNSYNCHRONIZED_ACCESS (3)
#define APPLICATION_VERIFIER_WAIT_IN_DLLMAIN (772)
#define APPMODEL_ERROR_NO_APPLICATION __MSABI_LONG ( 15703 )
#define APPMODEL_ERROR_NO_PACKAGE __MSABI_LONG ( 15700 )
#define APPMODEL_ERROR_PACKAGE_IDENTITY_CORRUPT __MSABI_LONG ( 15702 )
#define APPMODEL_ERROR_PACKAGE_RUNTIME_CORRUPT __MSABI_LONG ( 15701 )
#define ARABIC_CHARSET (178)
#define ARRAYSIZE(A) RTL_NUMBER_OF_V2 ( A )
#define ARW_BOTTOMLEFT __MSABI_LONG ( 0x0000 )
#define ARW_BOTTOMRIGHT __MSABI_LONG ( 0x0001 )
#define ARW_DOWN __MSABI_LONG ( 0x0004 )
#define ARW_HIDE __MSABI_LONG ( 0x0008 )
#define ARW_LEFT __MSABI_LONG ( 0x0000 )
#define ARW_RIGHT __MSABI_LONG ( 0x0000 )
#define ARW_STARTMASK __MSABI_LONG ( 0x0003 )
#define ARW_STARTRIGHT __MSABI_LONG ( 0x0001 )
#define ARW_STARTTOP __MSABI_LONG ( 0x0002 )
#define ARW_TOPLEFT __MSABI_LONG ( 0x0002 )
#define ARW_TOPRIGHT __MSABI_LONG ( 0x0003 )
#define ARW_UP __MSABI_LONG ( 0x0004 )
#define ASFW_ANY (-1)
#define ASPECTX (40)
#define ASPECTXY (44)
#define ASPECTY (42)
#define ASPECT_FILTERING (1)
#define ASSEMBLY_DLL_REDIRECTION_DETAILED_INFORMATION ASSEMBLY_FILE_DETAILED_INFORMATION
#define ASSERT_ALTERNATE (9)
#define ASSERT_PRIMARY (8)
#define ASYNCH (128)
#define ATAPI_ID_CMD (161)
#define ATF_ONOFFFEEDBACK (2)
#define ATF_TIMEOUTON (1)
#define ATOM_FLAG_GLOBAL (2)
#define ATTACH_PARENT_PROCESS (-1)
#define ATTRIBUTE_SECURITY_INFORMATION (32l)
#define ATTR_CONVERTED (2)
#define ATTR_FIXEDCONVERTED (5)
#define ATTR_INPUT (0)
#define ATTR_INPUT_ERROR (4)
#define ATTR_TARGET_CONVERTED (1)
#define ATTR_TARGET_NOTCONVERTED (3)
#define AT_KEYEXCHANGE (1)
#define AT_SIGNATURE (2)
#define AUDIT_ALLOW_NO_PRIVILEGE (1)
#define AUTHTYPE_CLIENT (1)
#define AUTHTYPE_SERVER (2)
#define AUXCAPS_AUXIN (2)
#define AUXCAPS_CDAUDIO (1)
#define AUXCAPS_LRVOLUME (2)
#define AUXCAPS_VOLUME (1)
#define AUX_MAPPER (-1)
#define AW_ACTIVATE (131072)
#define AW_BLEND (524288)
#define AW_CENTER (16)
#define AW_HIDE (65536)
#define AW_HOR_NEGATIVE (2)
#define AW_HOR_POSITIVE (1)
#define AW_SLIDE (262144)
#define AW_VER_NEGATIVE (8)
#define AW_VER_POSITIVE (4)
#define AbnormalTermination _abnormal_termination
#define AbortSystemShutdown __MINGW_NAME_AW ( AbortSystemShutdown )
#define AccessCheckAndAuditAlarm AccessCheckAndAuditAlarmA
#define AccessCheckByTypeAndAuditAlarm AccessCheckByTypeAndAuditAlarmA
#define AccessCheckByTypeResultListAndAuditAlarm AccessCheckByTypeResultListAndAuditAlarmA
#define AccessCheckByTypeResultListAndAuditAlarmByHandle AccessCheckByTypeResultListAndAuditAlarmByHandleA
#define AddAtom __MINGW_NAME_AW ( AddAtom )
#define AddConsoleAlias __MINGW_NAME_AW ( AddConsoleAlias )
#define AddFontResource __MINGW_NAME_AW ( AddFontResource )
#define AddFontResourceEx __MINGW_NAME_AW ( AddFontResourceEx )
#define AddForm __MINGW_NAME_AW ( AddForm )
#define AddJob __MINGW_NAME_AW ( AddJob )
#define AddMonitor __MINGW_NAME_AW ( AddMonitor )
#define AddPort __MINGW_NAME_AW ( AddPort )
#define AddPrintProcessor __MINGW_NAME_AW ( AddPrintProcessor )
#define AddPrintProvidor __MINGW_NAME_AW ( AddPrintProvidor )
#define AddPrinter __MINGW_NAME_AW ( AddPrinter )
#define AddPrinterConnection __MINGW_NAME_AW ( AddPrinterConnection )
#define AddPrinterDriver __MINGW_NAME_AW ( AddPrinterDriver )
#define AddPrinterDriverEx __MINGW_NAME_AW ( AddPrinterDriverEx )
#define AdvancedDocumentProperties __MINGW_NAME_AW ( AdvancedDocumentProperties )
#define AnsiLower CharLowerA
#define AnsiLowerBuff CharLowerBuffA
#define AnsiNext CharNextA
#define AnsiPrev CharPrevA
#define AnsiToOem CharToOemA
#define AnsiToOemBuff CharToOemBuffA
#define AnsiUpper CharUpperA
#define AnsiUpperBuff CharUpperBuffA
#define AppendMenu __MINGW_NAME_AW ( AppendMenu )
#define BACKGROUND_BLUE (16)
#define BACKGROUND_GREEN (32)
#define BACKGROUND_INTENSITY (128)
#define BACKGROUND_RED (64)
#define BACKUP_ALTERNATE_DATA (4)
#define BACKUP_DATA (1)
#define BACKUP_EA_DATA (2)
#define BACKUP_INVALID (0)
#define BACKUP_LINK (5)
#define BACKUP_OBJECT_ID (7)
#define BACKUP_PROPERTY_DATA (6)
#define BACKUP_REPARSE_DATA (8)
#define BACKUP_SECURITY_DATA (3)
#define BACKUP_SECURITY_INFORMATION (65536l)
#define BACKUP_SPARSE_BLOCK (9)
#define BACKUP_TXFS_DATA (10)
#define BALTIC_CHARSET (186)
#define BANDINFO (24)
#define BASETYPES 
#define BASE_SEARCH_PATH_DISABLE_SAFE_SEARCHMODE (65536)
#define BASE_SEARCH_PATH_ENABLE_SAFE_SEARCHMODE (1)
#define BASE_SEARCH_PATH_INVALID_FLAGS (-98306)
#define BASE_SEARCH_PATH_PERMANENT (32768)
#define BASIC_CONSTRAINTS_CERT_CHAIN_POLICY_CA_FLAG (2147483648u)
#define BASIC_CONSTRAINTS_CERT_CHAIN_POLICY_END_ENTITY_FLAG (1073741824)
#define BATTERY_DISCHARGE_FLAGS_ENABLE (2147483648u)
#define BATTERY_DISCHARGE_FLAGS_EVENTCODE_MASK (7)
#define BATTERY_FLAG_CHARGING (8)
#define BATTERY_FLAG_CRITICAL (4)
#define BATTERY_FLAG_HIGH (1)
#define BATTERY_FLAG_LOW (2)
#define BATTERY_FLAG_NO_BATTERY (128)
#define BATTERY_FLAG_UNKNOWN (255)
#define BATTERY_LIFE_UNKNOWN (4294967295u)
#define BATTERY_PERCENTAGE_UNKNOWN (255)
#define BAUD_075 ( ( DWORD ) 0x1 )
#define BAUD_110 ( ( DWORD ) 0x2 )
#define BAUD_115200 ( ( DWORD ) 0x20000 )
#define BAUD_1200 ( ( DWORD ) 0x40 )
#define BAUD_128K ( ( DWORD ) 0x10000 )
#define BAUD_134_5 ( ( DWORD ) 0x4 )
#define BAUD_14400 ( ( DWORD ) 0x1000 )
#define BAUD_150 ( ( DWORD ) 0x8 )
#define BAUD_1800 ( ( DWORD ) 0x80 )
#define BAUD_19200 ( ( DWORD ) 0x2000 )
#define BAUD_2400 ( ( DWORD ) 0x100 )
#define BAUD_300 ( ( DWORD ) 0x10 )
#define BAUD_38400 ( ( DWORD ) 0x4000 )
#define BAUD_4800 ( ( DWORD ) 0x200 )
#define BAUD_56K ( ( DWORD ) 0x8000 )
#define BAUD_57600 ( ( DWORD ) 0x40000 )
#define BAUD_600 ( ( DWORD ) 0x20 )
#define BAUD_7200 ( ( DWORD ) 0x400 )
#define BAUD_9600 ( ( DWORD ) 0x800 )
#define BAUD_USER ( ( DWORD ) 0x10000000 )
#define BCRYPTBUFFER_VERSION (0)
#define BCRYPT_3DES_112_ALGORITHM "3DES_112"
#define BCRYPT_3DES_ALGORITHM "3DES"
#define BCRYPT_AES_ALGORITHM "AES"
#define BCRYPT_AES_CMAC_ALGORITHM "AES-CMAC"
#define BCRYPT_AES_GMAC_ALGORITHM "AES-GMAC"
#define BCRYPT_AES_WRAP_KEY_BLOB "Rfc3565KeyWrapBlob"
#define BCRYPT_ALGORITHM_NAME "AlgorithmName"
#define BCRYPT_ALG_HANDLE_HMAC_FLAG (8)
#define BCRYPT_ASYMMETRIC_ENCRYPTION_INTERFACE (3)
#define BCRYPT_ASYMMETRIC_ENCRYPTION_INTERFACE_VERSION_1 BCRYPT_MAKE_INTERFACE_VERSION ( 1 , 0 )
#define BCRYPT_ASYMMETRIC_ENCRYPTION_OPERATION (4)
#define BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO_VERSION (1)
#define BCRYPT_AUTH_MODE_CHAIN_CALLS_FLAG (1)
#define BCRYPT_AUTH_MODE_IN_PROGRESS_FLAG (2)
#define BCRYPT_AUTH_TAG_LENGTH "AuthTagLength"
#define BCRYPT_BLOCK_LENGTH "BlockLength"
#define BCRYPT_BLOCK_PADDING (1)
#define BCRYPT_BLOCK_SIZE_LIST "BlockSizeList"
#define BCRYPT_BUFFERS_LOCKED_FLAG (64)
#define BCRYPT_CAPI_AES_FLAG (16)
#define BCRYPT_CAPI_KDF_ALGORITHM "CAPI_KDF"
#define BCRYPT_CHAINING_MODE "ChainingMode"
#define BCRYPT_CHAIN_MODE_CBC "ChainingModeCBC"
#define BCRYPT_CHAIN_MODE_CCM "ChainingModeCCM"
#define BCRYPT_CHAIN_MODE_CFB "ChainingModeCFB"
#define BCRYPT_CHAIN_MODE_ECB "ChainingModeECB"
#define BCRYPT_CHAIN_MODE_GCM "ChainingModeGCM"
#define BCRYPT_CHAIN_MODE_NA "ChainingModeN/A"
#define BCRYPT_CIPHER_INTERFACE (1)
#define BCRYPT_CIPHER_INTERFACE_VERSION_1 BCRYPT_MAKE_INTERFACE_VERSION ( 1 , 0 )
#define BCRYPT_CIPHER_OPERATION (1)
#define BCRYPT_DESX_ALGORITHM "DESX"
#define BCRYPT_DES_ALGORITHM "DES"
#define BCRYPT_DH_ALGORITHM "DH"
#define BCRYPT_DH_PARAMETERS "DHParameters"
#define BCRYPT_DH_PARAMETERS_MAGIC (1297107012)
#define BCRYPT_DH_PRIVATE_BLOB "DHPRIVATEBLOB"
#define BCRYPT_DH_PRIVATE_MAGIC (1448101956)
#define BCRYPT_DH_PUBLIC_BLOB "DHPUBLICBLOB"
#define BCRYPT_DH_PUBLIC_MAGIC (1112557636)
#define BCRYPT_DSA_ALGORITHM "DSA"
#define BCRYPT_DSA_PARAMETERS "DSAParameters"
#define BCRYPT_DSA_PARAMETERS_MAGIC (1297109828)
#define BCRYPT_DSA_PARAMETERS_MAGIC_V2 (843927620)
#define BCRYPT_DSA_PRIVATE_BLOB "DSAPRIVATEBLOB"
#define BCRYPT_DSA_PRIVATE_MAGIC (1448104772)
#define BCRYPT_DSA_PRIVATE_MAGIC_V2 (844517444)
#define BCRYPT_DSA_PUBLIC_BLOB "DSAPUBLICBLOB"
#define BCRYPT_DSA_PUBLIC_MAGIC (1112560452)
#define BCRYPT_DSA_PUBLIC_MAGIC_V2 (843206724)
#define BCRYPT_ECCPRIVATE_BLOB "ECCPRIVATEBLOB"
#define BCRYPT_ECCPUBLIC_BLOB "ECCPUBLICBLOB"
#define BCRYPT_ECDH_P256_ALGORITHM "ECDH_P256"
#define BCRYPT_ECDH_P384_ALGORITHM "ECDH_P384"
#define BCRYPT_ECDH_P521_ALGORITHM "ECDH_P521"
#define BCRYPT_ECDH_PRIVATE_P256_MAGIC (843793221)
#define BCRYPT_ECDH_PRIVATE_P384_MAGIC (877347653)
#define BCRYPT_ECDH_PRIVATE_P521_MAGIC (910902085)
#define BCRYPT_ECDH_PUBLIC_P256_MAGIC (827016005)
#define BCRYPT_ECDH_PUBLIC_P384_MAGIC (860570437)
#define BCRYPT_ECDH_PUBLIC_P521_MAGIC (894124869)
#define BCRYPT_ECDSA_P256_ALGORITHM "ECDSA_P256"
#define BCRYPT_ECDSA_P384_ALGORITHM "ECDSA_P384"
#define BCRYPT_ECDSA_P521_ALGORITHM "ECDSA_P521"
#define BCRYPT_ECDSA_PRIVATE_P256_MAGIC (844317509)
#define BCRYPT_ECDSA_PRIVATE_P384_MAGIC (877871941)
#define BCRYPT_ECDSA_PRIVATE_P521_MAGIC (911426373)
#define BCRYPT_ECDSA_PUBLIC_P256_MAGIC (827540293)
#define BCRYPT_ECDSA_PUBLIC_P384_MAGIC (861094725)
#define BCRYPT_ECDSA_PUBLIC_P521_MAGIC (894649157)
#define BCRYPT_EFFECTIVE_KEY_LENGTH "EffectiveKeyLength"
#define BCRYPT_GLOBAL_PARAMETERS "SecretAgreementParam"
#define BCRYPT_HASH_BLOCK_LENGTH "HashBlockLength"
#define BCRYPT_HASH_INTERFACE (2)
#define BCRYPT_HASH_INTERFACE_VERSION_1 BCRYPT_MAKE_INTERFACE_VERSION ( 1 , 0 )
#define BCRYPT_HASH_LENGTH "HashDigestLength"
#define BCRYPT_HASH_OID_LIST "HashOIDList"
#define BCRYPT_HASH_OPERATION (2)
#define BCRYPT_HASH_REUSABLE_FLAG (32)
#define BCRYPT_INITIALIZATION_VECTOR "IV"
#define BCRYPT_INIT_AUTH_MODE_INFO(_AUTH_INFO_STRUCT_) RtlZeroMemory ( ( & _AUTH_INFO_STRUCT_ ) , sizeof ( BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO ) ) ; ( _AUTH_INFO_STRUCT_ ) . cbSize = sizeof ( BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO ) ; ( _AUTH_INFO_STRUCT_ ) . dwInfoVersion = BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO_VERSION ;
#define BCRYPT_IS_INTERFACE_VERSION_COMPATIBLE(loader, provider) ( ( loader ) . MajorVersion <= ( provider ) . MajorVersion )
#define BCRYPT_IS_KEYED_HASH "IsKeyedHash"
#define BCRYPT_IS_REUSABLE_HASH "IsReusableHash"
#define BCRYPT_KDF_HASH "HASH"
#define BCRYPT_KDF_HMAC "HMAC"
#define BCRYPT_KDF_SP80056A_CONCAT "SP800_56A_CONCAT"
#define BCRYPT_KDF_TLS_PRF "TLS_PRF"
#define BCRYPT_KEY_DATA_BLOB "KeyDataBlob"
#define BCRYPT_KEY_DATA_BLOB_MAGIC (1296188491)
#define BCRYPT_KEY_DATA_BLOB_VERSION1 (1)
#define BCRYPT_KEY_DERIVATION_INTERFACE (7)
#define BCRYPT_KEY_DERIVATION_OPERATION (64)
#define BCRYPT_KEY_LENGTH "KeyLength"
#define BCRYPT_KEY_LENGTHS "KeyLengths"
#define BCRYPT_KEY_OBJECT_LENGTH "KeyObjectLength"
#define BCRYPT_KEY_STRENGTH "KeyStrength"
#define BCRYPT_MAKE_INTERFACE_VERSION(major, minor) { ( USHORT ) major , ( USHORT ) minor }
#define BCRYPT_MD2_ALGORITHM "MD2"
#define BCRYPT_MD4_ALGORITHM "MD4"
#define BCRYPT_MD5_ALGORITHM "MD5"
#define BCRYPT_MESSAGE_BLOCK_LENGTH "MessageBlockLength"
#define BCRYPT_NO_KEY_VALIDATION (8)
#define BCRYPT_OBJECT_ALIGNMENT (16)
#define BCRYPT_OBJECT_LENGTH "ObjectLength"
#define BCRYPT_OPAQUE_KEY_BLOB "OpaqueKeyBlob"
#define BCRYPT_PADDING_SCHEMES "PaddingSchemes"
#define BCRYPT_PAD_NONE (1)
#define BCRYPT_PAD_OAEP (4)
#define BCRYPT_PAD_PKCS1 (2)
#define BCRYPT_PAD_PSS (8)
#define BCRYPT_PBKDF2_ALGORITHM "PBKDF2"
#define BCRYPT_PCP_PLATFORM_TYPE_PROPERTY "PCP_PLATFORM_TYPE"
#define BCRYPT_PCP_PROVIDER_VERSION_PROPERTY "PCP_PROVIDER_VERSION"
#define BCRYPT_PRIMITIVE_TYPE "PrimitiveType"
#define BCRYPT_PRIVATE_KEY "PrivKeyVal"
#define BCRYPT_PRIVATE_KEY_BLOB "PRIVATEBLOB"
#define BCRYPT_PRIVATE_KEY_FLAG (2)
#define BCRYPT_PROVIDER_HANDLE "ProviderHandle"
#define BCRYPT_PROV_DISPATCH (1)
#define BCRYPT_PUBLIC_KEY_BLOB "PUBLICBLOB"
#define BCRYPT_PUBLIC_KEY_FLAG (1)
#define BCRYPT_RC2_ALGORITHM "RC2"
#define BCRYPT_RC4_ALGORITHM "RC4"
#define BCRYPT_RNG_ALGORITHM "RNG"
#define BCRYPT_RNG_DUAL_EC_ALGORITHM "DUALECRNG"
#define BCRYPT_RNG_FIPS186_DSA_ALGORITHM "FIPS186DSARNG"
#define BCRYPT_RNG_INTERFACE (6)
#define BCRYPT_RNG_INTERFACE_VERSION_1 BCRYPT_MAKE_INTERFACE_VERSION ( 1 , 0 )
#define BCRYPT_RNG_OPERATION (32)
#define BCRYPT_RNG_USE_ENTROPY_IN_BUFFER (1)
#define BCRYPT_RSAFULLPRIVATE_BLOB "RSAFULLPRIVATEBLOB"
#define BCRYPT_RSAFULLPRIVATE_MAGIC (859919186)
#define BCRYPT_RSAPRIVATE_BLOB "RSAPRIVATEBLOB"
#define BCRYPT_RSAPRIVATE_MAGIC (843141970)
#define BCRYPT_RSAPUBLIC_BLOB "RSAPUBLICBLOB"
#define BCRYPT_RSAPUBLIC_MAGIC (826364754)
#define BCRYPT_RSA_ALGORITHM "RSA"
#define BCRYPT_RSA_SIGN_ALGORITHM "RSA_SIGN"
#define BCRYPT_SECRET_AGREEMENT_INTERFACE (4)
#define BCRYPT_SECRET_AGREEMENT_INTERFACE_VERSION_1 BCRYPT_MAKE_INTERFACE_VERSION ( 1 , 0 )
#define BCRYPT_SECRET_AGREEMENT_OPERATION (8)
#define BCRYPT_SHA1_ALGORITHM "SHA1"
#define BCRYPT_SHA256_ALGORITHM "SHA256"
#define BCRYPT_SHA384_ALGORITHM "SHA384"
#define BCRYPT_SHA512_ALGORITHM "SHA512"
#define BCRYPT_SIGNATURE_INTERFACE (5)
#define BCRYPT_SIGNATURE_INTERFACE_VERSION_1 BCRYPT_MAKE_INTERFACE_VERSION ( 1 , 0 )
#define BCRYPT_SIGNATURE_LENGTH "SignatureLength"
#define BCRYPT_SIGNATURE_OPERATION (16)
#define BCRYPT_SP800108_CTR_HMAC_ALGORITHM "SP800_108_CTR_HMAC"
#define BCRYPT_SP80056A_CONCAT_ALGORITHM "SP800_56A_CONCAT"
#define BCRYPT_STRUCT_ALIGNMENT 
#define BCRYPT_SUCCESS(Status) ( ( ( NTSTATUS ) ( Status ) ) >= 0 )
#define BCRYPT_SUPPORTED_PAD_OAEP (8)
#define BCRYPT_SUPPORTED_PAD_PKCS1_ENC (2)
#define BCRYPT_SUPPORTED_PAD_PKCS1_SIG (4)
#define BCRYPT_SUPPORTED_PAD_PSS (16)
#define BCRYPT_SUPPORTED_PAD_ROUTER (1)
#define BCRYPT_USE_SYSTEM_PREFERRED_RNG (2)
#define BDR_INNER (12)
#define BDR_OUTER (3)
#define BDR_RAISED (5)
#define BDR_RAISEDINNER (4)
#define BDR_RAISEDOUTER (1)
#define BDR_SUNKEN (10)
#define BDR_SUNKENINNER (8)
#define BDR_SUNKENOUTER (2)
#define BEGIN_PATH (4096)
#define BELOW_NORMAL_PRIORITY_CLASS (16384)
#define BF_ADJUST (8192)
#define BF_BOTTOM (8)
#define BF_BOTTOMLEFT (9)
#define BF_BOTTOMRIGHT (12)
#define BF_DIAGONAL (16)
#define BF_DIAGONAL_ENDBOTTOMLEFT (25)
#define BF_DIAGONAL_ENDBOTTOMRIGHT (28)
#define BF_DIAGONAL_ENDTOPLEFT (19)
#define BF_DIAGONAL_ENDTOPRIGHT (22)
#define BF_FLAT (16384)
#define BF_LEFT (1)
#define BF_MIDDLE (2048)
#define BF_MONO (32768)
#define BF_RECT (15)
#define BF_RIGHT (4)
#define BF_SOFT (4096)
#define BF_TOP (2)
#define BF_TOPLEFT (3)
#define BF_TOPRIGHT (6)
#define BIDI_ACCESS_ADMINISTRATOR (1)
#define BIDI_ACCESS_USER (2)
#define BIDI_ACTION_ENUM_SCHEMA "EnumSchema"
#define BIDI_ACTION_GET "Get"
#define BIDI_ACTION_GET_ALL "GetAll"
#define BIDI_ACTION_SET "Set"
#define BITSPIXEL (12)
#define BI_BITFIELDS __MSABI_LONG ( 3 )
#define BI_JPEG __MSABI_LONG ( 4 )
#define BI_PNG __MSABI_LONG ( 5 )
#define BI_RGB __MSABI_LONG ( 0 )
#define BI_RLE4 __MSABI_LONG ( 2 )
#define BI_RLE8 __MSABI_LONG ( 1 )
#define BKMODE_LAST (2)
#define BLACKNESS ( DWORD ) 0x00000042
#define BLACKONWHITE (1)
#define BLACK_BRUSH (4)
#define BLACK_PEN (7)
#define BLTALIGNMENT (119)
#define BM_CLICK (245)
#define BM_GETCHECK (240)
#define BM_GETIMAGE (246)
#define BM_GETSTATE (242)
#define BM_SETCHECK (241)
#define BM_SETIMAGE (247)
#define BM_SETSTATE (243)
#define BM_SETSTYLE (244)
#define BN_CLICKED (0)
#define BN_DBLCLK BN_DOUBLECLICKED
#define BN_DISABLE (4)
#define BN_DOUBLECLICKED (5)
#define BN_HILITE (2)
#define BN_KILLFOCUS (7)
#define BN_PAINT (1)
#define BN_PUSHED BN_HILITE
#define BN_SETFOCUS (6)
#define BN_UNHILITE (3)
#define BN_UNPUSHED BN_UNHILITE
#define BOLD_FONTTYPE (256)
#define BOOL WINBOOL
#define BROADCAST_QUERY_DENY (1112363332)
#define BSF_ALLOWSFW (128)
#define BSF_FLUSHDISK (4)
#define BSF_FORCEIFHUNG (32)
#define BSF_IGNORECURRENTTASK (2)
#define BSF_LUID (1024)
#define BSF_NOHANG (8)
#define BSF_NOTIMEOUTIFNOTHUNG (64)
#define BSF_POSTMESSAGE (16)
#define BSF_QUERY (1)
#define BSF_RETURNHDESK (512)
#define BSF_SENDNOTIFYMESSAGE (256)
#define BSM_ALLCOMPONENTS (0)
#define BSM_ALLDESKTOPS (16)
#define BSM_APPLICATIONS (8)
#define BSM_INSTALLABLEDRIVERS (4)
#define BSM_NETDRIVER (2)
#define BSM_VXDS (1)
#define BST_CHECKED (1)
#define BST_FOCUS (8)
#define BST_INDETERMINATE (2)
#define BST_PUSHED (4)
#define BST_UNCHECKED (0)
#define BS_3STATE __MSABI_LONG ( 0x00000005 )
#define BS_AUTO3STATE __MSABI_LONG ( 0x00000006 )
#define BS_AUTOCHECKBOX __MSABI_LONG ( 0x00000003 )
#define BS_AUTORADIOBUTTON __MSABI_LONG ( 0x00000009 )
#define BS_BITMAP __MSABI_LONG ( 0x00000080 )
#define BS_BOTTOM __MSABI_LONG ( 0x00000800 )
#define BS_CENTER __MSABI_LONG ( 0x00000300 )
#define BS_CHECKBOX __MSABI_LONG ( 0x00000002 )
#define BS_DEFPUSHBUTTON __MSABI_LONG ( 0x00000001 )
#define BS_DIBPATTERN (5)
#define BS_DIBPATTERN8X8 (8)
#define BS_DIBPATTERNPT (6)
#define BS_FLAT __MSABI_LONG ( 0x00008000 )
#define BS_GROUPBOX __MSABI_LONG ( 0x00000007 )
#define BS_HATCHED (2)
#define BS_HOLLOW BS_NULL
#define BS_ICON __MSABI_LONG ( 0x00000040 )
#define BS_INDEXED (4)
#define BS_LEFT __MSABI_LONG ( 0x00000100 )
#define BS_LEFTTEXT __MSABI_LONG ( 0x00000020 )
#define BS_MONOPATTERN (9)
#define BS_MULTILINE __MSABI_LONG ( 0x00002000 )
#define BS_NOTIFY __MSABI_LONG ( 0x00004000 )
#define BS_NULL (1)
#define BS_OWNERDRAW __MSABI_LONG ( 0x0000000B )
#define BS_PATTERN (3)
#define BS_PATTERN8X8 (7)
#define BS_PUSHBOX __MSABI_LONG ( 0x0000000A )
#define BS_PUSHBUTTON __MSABI_LONG ( 0x00000000 )
#define BS_PUSHLIKE __MSABI_LONG ( 0x00001000 )
#define BS_RADIOBUTTON __MSABI_LONG ( 0x00000004 )
#define BS_RIGHT __MSABI_LONG ( 0x00000200 )
#define BS_RIGHTBUTTON BS_LEFTTEXT
#define BS_SOLID (0)
#define BS_TEXT __MSABI_LONG ( 0x00000000 )
#define BS_TOP __MSABI_LONG ( 0x00000400 )
#define BS_TYPEMASK __MSABI_LONG ( 0x0000000F )
#define BS_USERBUTTON __MSABI_LONG ( 0x00000008 )
#define BS_VCENTER __MSABI_LONG ( 0x00000C00 )
#define BTYPE(x) ( ( x ) & N_BTMASK )
#define BackupEventLog __MINGW_NAME_AW ( BackupEventLog )
#define BeginUpdateResource __MINGW_NAME_AW ( BeginUpdateResource )
#define BitScanForward _BitScanForward
#define BitScanForward64 _BitScanForward64
#define BitScanReverse _BitScanReverse
#define BitScanReverse64 _BitScanReverse64
#define BitTest _bittest
#define BitTest64 _bittest64
#define BitTestAndComplement _bittestandcomplement
#define BitTestAndComplement64 _bittestandcomplement64
#define BitTestAndReset _bittestandreset
#define BitTestAndReset64 _bittestandreset64
#define BitTestAndSet _bittestandset
#define BitTestAndSet64 _bittestandset64
#define BroadcastSystemMessage __MINGW_NAME_AW ( BroadcastSystemMessage )
#define BroadcastSystemMessageEx __MINGW_NAME_AW ( BroadcastSystemMessageEx )
#define BuildCommDCB __MINGW_NAME_AW ( BuildCommDCB )
#define BuildCommDCBAndTimeouts __MINGW_NAME_AW ( BuildCommDCBAndTimeouts )
#define C1_ALPHA (256)
#define C1_BLANK (64)
#define C1_CNTRL (32)
#define C1_DEFINED (512)
#define C1_DIGIT (4)
#define C1_LOWER (2)
#define C1_PUNCT (16)
#define C1_SPACE (8)
#define C1_UPPER (1)
#define C1_XDIGIT (128)
#define C2_ARABICNUMBER (6)
#define C2_BLOCKSEPARATOR (8)
#define C2_COMMONSEPARATOR (7)
#define C2_EUROPENUMBER (3)
#define C2_EUROPESEPARATOR (4)
#define C2_EUROPETERMINATOR (5)
#define C2_LEFTTORIGHT (1)
#define C2_NOTAPPLICABLE (0)
#define C2_OTHERNEUTRAL (11)
#define C2_RIGHTTOLEFT (2)
#define C2_SEGMENTSEPARATOR (9)
#define C2_WHITESPACE (10)
#define C3_ALPHA (32768)
#define C3_DIACRITIC (2)
#define C3_FULLWIDTH (128)
#define C3_HALFWIDTH (64)
#define C3_HIGHSURROGATE (2048)
#define C3_HIRAGANA (32)
#define C3_IDEOGRAPH (256)
#define C3_KASHIDA (512)
#define C3_KATAKANA (16)
#define C3_LEXICAL (1024)
#define C3_LOWSURROGATE (4096)
#define C3_NONSPACING (1)
#define C3_NOTAPPLICABLE (0)
#define C3_SYMBOL (8)
#define C3_VOWELMARK (4)
#define CACHE_E_FIRST __MSABI_LONG ( 0x80040170 )
#define CACHE_E_LAST __MSABI_LONG ( 0x8004017F )
#define CACHE_E_NOCACHE_UPDATED _HRESULT_TYPEDEF_ ( 0x80040170 )
#define CACHE_FULLY_ASSOCIATIVE (255)
#define CACHE_S_FIRST __MSABI_LONG ( 0x00040170 )
#define CACHE_S_FORMATETC_NOTSUPPORTED _HRESULT_TYPEDEF_ ( 0x00040170 )
#define CACHE_S_LAST __MSABI_LONG ( 0x0004017F )
#define CACHE_S_SAMECACHE _HRESULT_TYPEDEF_ ( 0x00040171 )
#define CACHE_S_SOMECACHES_NOTUPDATED _HRESULT_TYPEDEF_ ( 0x00040172 )
#define CADV_LATEACK (65535)
#define CALERT_SYSTEM (6)
#define CALG_3DES (26115)
#define CALG_3DES_112 (26121)
#define CALG_AES (26129)
#define CALG_AES_128 (26126)
#define CALG_AES_192 (26127)
#define CALG_AES_256 (26128)
#define CALG_AGREEDKEY_ANY (43523)
#define CALG_CYLINK_MEK (26124)
#define CALG_DES (26113)
#define CALG_DESX (26116)
#define CALG_DH_EPHEM (43522)
#define CALG_DH_SF (43521)
#define CALG_DSS_SIGN (8704)
#define CALG_HASH_REPLACE_OWF (32779)
#define CALG_HMAC (32777)
#define CALG_HUGHES_MD5 (40963)
#define CALG_KEA_KEYX (43524)
#define CALG_MAC (32773)
#define CALG_MD2 (32769)
#define CALG_MD4 (32770)
#define CALG_MD5 (32771)
#define CALG_NO_SIGN (8192)
#define CALG_OID_INFO_CNG_ONLY (4294967295u)
#define CALG_OID_INFO_PARAMETERS (4294967294u)
#define CALG_PCT1_MASTER (19460)
#define CALG_RC2 (26114)
#define CALG_RC4 (26625)
#define CALG_RC5 (26125)
#define CALG_RSA_KEYX (41984)
#define CALG_RSA_SIGN (9216)
#define CALG_SCHANNEL_ENC_KEY (19463)
#define CALG_SCHANNEL_MAC_KEY (19459)
#define CALG_SCHANNEL_MASTER_HASH (19458)
#define CALG_SEAL (26626)
#define CALG_SHA (32772)
#define CALG_SHA1 (32772)
#define CALG_SHA_256 (32780)
#define CALG_SHA_384 (32781)
#define CALG_SHA_512 (32782)
#define CALG_SKIPJACK (26122)
#define CALG_SSL2_MASTER (19461)
#define CALG_SSL3_MASTER (19457)
#define CALG_SSL3_SHAMD5 (32776)
#define CALG_TEK (26123)
#define CALG_TLS1PRF (32778)
#define CALG_TLS1_MASTER (19462)
#define CALINFO_ENUMPROC CALINFO_ENUMPROCA
#define CALINFO_ENUMPROCEX CALINFO_ENUMPROCEXA
#define CALLBACK __stdcall
#define CALLBACK_CHUNK_FINISHED (0)
#define CALLBACK_EVENT __MSABI_LONG ( 0x00050000 )
#define CALLBACK_FUNCTION __MSABI_LONG ( 0x00030000 )
#define CALLBACK_NULL __MSABI_LONG ( 0x00000000 )
#define CALLBACK_STREAM_SWITCH (1)
#define CALLBACK_TASK __MSABI_LONG ( 0x00020000 )
#define CALLBACK_THREAD (131072l)
#define CALLBACK_TYPEMASK __MSABI_LONG ( 0x00070000 )
#define CALLBACK_WINDOW __MSABI_LONG ( 0x00010000 )
#define CALL_PENDING (2)
#define CAL_GREGORIAN (1)
#define CAL_GREGORIAN_ARABIC (10)
#define CAL_GREGORIAN_ME_FRENCH (9)
#define CAL_GREGORIAN_US (2)
#define CAL_GREGORIAN_XLIT_ENGLISH (11)
#define CAL_GREGORIAN_XLIT_FRENCH (12)
#define CAL_HEBREW (8)
#define CAL_HIJRI (6)
#define CAL_ICALINTVALUE (1)
#define CAL_ITWODIGITYEARMAX (48)
#define CAL_IYEAROFFSETRANGE (3)
#define CAL_JAPAN (3)
#define CAL_KOREA (5)
#define CAL_NOUSEROVERRIDE LOCALE_NOUSEROVERRIDE
#define CAL_RETURN_NUMBER LOCALE_RETURN_NUMBER
#define CAL_SABBREVDAYNAME1 (14)
#define CAL_SABBREVDAYNAME2 (15)
#define CAL_SABBREVDAYNAME3 (16)
#define CAL_SABBREVDAYNAME4 (17)
#define CAL_SABBREVDAYNAME5 (18)
#define CAL_SABBREVDAYNAME6 (19)
#define CAL_SABBREVDAYNAME7 (20)
#define CAL_SABBREVMONTHNAME1 (34)
#define CAL_SABBREVMONTHNAME10 (43)
#define CAL_SABBREVMONTHNAME11 (44)
#define CAL_SABBREVMONTHNAME12 (45)
#define CAL_SABBREVMONTHNAME13 (46)
#define CAL_SABBREVMONTHNAME2 (35)
#define CAL_SABBREVMONTHNAME3 (36)
#define CAL_SABBREVMONTHNAME4 (37)
#define CAL_SABBREVMONTHNAME5 (38)
#define CAL_SABBREVMONTHNAME6 (39)
#define CAL_SABBREVMONTHNAME7 (40)
#define CAL_SABBREVMONTHNAME8 (41)
#define CAL_SABBREVMONTHNAME9 (42)
#define CAL_SCALNAME (2)
#define CAL_SDAYNAME1 (7)
#define CAL_SDAYNAME2 (8)
#define CAL_SDAYNAME3 (9)
#define CAL_SDAYNAME4 (10)
#define CAL_SDAYNAME5 (11)
#define CAL_SDAYNAME6 (12)
#define CAL_SDAYNAME7 (13)
#define CAL_SERASTRING (4)
#define CAL_SLONGDATE (6)
#define CAL_SMONTHNAME1 (21)
#define CAL_SMONTHNAME10 (30)
#define CAL_SMONTHNAME11 (31)
#define CAL_SMONTHNAME12 (32)
#define CAL_SMONTHNAME13 (33)
#define CAL_SMONTHNAME2 (22)
#define CAL_SMONTHNAME3 (23)
#define CAL_SMONTHNAME4 (24)
#define CAL_SMONTHNAME5 (25)
#define CAL_SMONTHNAME6 (26)
#define CAL_SMONTHNAME7 (27)
#define CAL_SMONTHNAME8 (28)
#define CAL_SMONTHNAME9 (29)
#define CAL_SSHORTDATE (5)
#define CAL_SYEARMONTH (47)
#define CAL_TAIWAN (4)
#define CAL_THAI (7)
#define CAL_UMALQURA (23)
#define CAL_USE_CP_ACP LOCALE_USE_CP_ACP
#define CAPSLOCK_ON (128)
#define CAPTUREBLT ( DWORD ) 0x40000000
#define CAP_ATAPI_ID_CMD (2)
#define CAP_ATA_ID_CMD (1)
#define CAP_SMART_CMD (4)
#define CAT_E_CATIDNOEXIST _HRESULT_TYPEDEF_ ( 0x80040160 )
#define CAT_E_FIRST __MSABI_LONG ( 0x80040160 )
#define CAT_E_LAST __MSABI_LONG ( 0x80040161 )
#define CAT_E_NODESCRIPTION _HRESULT_TYPEDEF_ ( 0x80040161 )
#define CA_LOG_FILTER (2)
#define CA_NEGATIVE (1)
#define CBF_FAIL_ADVISES (16384)
#define CBF_FAIL_ALLSVRXACTIONS (258048)
#define CBF_FAIL_CONNECTIONS (8192)
#define CBF_FAIL_EXECUTES (32768)
#define CBF_FAIL_POKES (65536)
#define CBF_FAIL_REQUESTS (131072)
#define CBF_FAIL_SELFCONNECTIONS (4096)
#define CBF_SKIP_ALLNOTIFICATIONS (3932160)
#define CBF_SKIP_CONNECT_CONFIRMS (262144)
#define CBF_SKIP_DISCONNECTS (2097152)
#define CBF_SKIP_REGISTRATIONS (524288)
#define CBF_SKIP_UNREGISTRATIONS (1048576)
#define CBM_INIT __MSABI_LONG ( 0x04 )
#define CBN_CLOSEUP (8)
#define CBN_DBLCLK (2)
#define CBN_DROPDOWN (7)
#define CBN_EDITCHANGE (5)
#define CBN_EDITUPDATE (6)
#define CBN_ERRSPACE (-1)
#define CBN_KILLFOCUS (4)
#define CBN_SELCHANGE (1)
#define CBN_SELENDCANCEL (10)
#define CBN_SELENDOK (9)
#define CBN_SETFOCUS (3)
#define CBPCLIPDATA(clipdata) ( ( clipdata ) . cbSize - sizeof ( ( clipdata ) . ulClipFmt ) )
#define CBR_110 (110)
#define CBR_115200 (115200)
#define CBR_1200 (1200)
#define CBR_128000 (128000)
#define CBR_14400 (14400)
#define CBR_19200 (19200)
#define CBR_2400 (2400)
#define CBR_256000 (256000)
#define CBR_300 (300)
#define CBR_38400 (38400)
#define CBR_4800 (4800)
#define CBR_56000 (56000)
#define CBR_57600 (57600)
#define CBR_600 (600)
#define CBR_9600 (9600)
#define CBR_BLOCK (-1)
#define CBS_AUTOHSCROLL __MSABI_LONG ( 0x0040 )
#define CBS_DISABLENOSCROLL __MSABI_LONG ( 0x0800 )
#define CBS_DROPDOWN __MSABI_LONG ( 0x0002 )
#define CBS_DROPDOWNLIST __MSABI_LONG ( 0x0003 )
#define CBS_HASSTRINGS __MSABI_LONG ( 0x0200 )
#define CBS_LOWERCASE __MSABI_LONG ( 0x4000 )
#define CBS_NOINTEGRALHEIGHT __MSABI_LONG ( 0x0400 )
#define CBS_OEMCONVERT __MSABI_LONG ( 0x0080 )
#define CBS_OWNERDRAWFIXED __MSABI_LONG ( 0x0010 )
#define CBS_OWNERDRAWVARIABLE __MSABI_LONG ( 0x0020 )
#define CBS_SIMPLE __MSABI_LONG ( 0x0001 )
#define CBS_SORT __MSABI_LONG ( 0x0100 )
#define CBS_UPPERCASE __MSABI_LONG ( 0x2000 )
#define CB_ADDSTRING (323)
#define CB_DELETESTRING (324)
#define CB_DIR (325)
#define CB_ERR (-1)
#define CB_ERRSPACE (-2)
#define CB_FINDSTRING (332)
#define CB_FINDSTRINGEXACT (344)
#define CB_GETCOMBOBOXINFO (356)
#define CB_GETCOUNT (326)
#define CB_GETCURSEL (327)
#define CB_GETDROPPEDCONTROLRECT (338)
#define CB_GETDROPPEDSTATE (343)
#define CB_GETDROPPEDWIDTH (351)
#define CB_GETEDITSEL (320)
#define CB_GETEXTENDEDUI (342)
#define CB_GETHORIZONTALEXTENT (349)
#define CB_GETITEMDATA (336)
#define CB_GETITEMHEIGHT (340)
#define CB_GETLBTEXT (328)
#define CB_GETLBTEXTLEN (329)
#define CB_GETLOCALE (346)
#define CB_GETTOPINDEX (347)
#define CB_INITSTORAGE (353)
#define CB_INSERTSTRING (330)
#define CB_LIMITTEXT (321)
#define CB_MSGMAX (357)
#define CB_OKAY (0)
#define CB_RESETCONTENT (331)
#define CB_SELECTSTRING (333)
#define CB_SETCURSEL (334)
#define CB_SETDROPPEDWIDTH (352)
#define CB_SETEDITSEL (322)
#define CB_SETEXTENDEDUI (341)
#define CB_SETHORIZONTALEXTENT (350)
#define CB_SETITEMDATA (337)
#define CB_SETITEMHEIGHT (339)
#define CB_SETLOCALE (345)
#define CB_SETTOPINDEX (348)
#define CB_SHOWDROPDOWN (335)
#define CCHDEVICENAME (32)
#define CCHFORMNAME (32)
#define CCHILDREN_SCROLLBAR (5)
#define CCHILDREN_TITLEBAR (5)
#define CCSIZEOF_STRUCT(structname, member) ( ( ( int ) ( ( LPBYTE ) ( & ( ( structname * ) 0 ) -> member ) - ( ( LPBYTE ) ( ( structname * ) 0 ) ) ) ) + sizeof ( ( ( structname * ) 0 ) -> member ) )
#define CC_ANYCOLOR (256)
#define CC_CHORD (4)
#define CC_CIRCLES (1)
#define CC_ELLIPSES (8)
#define CC_ENABLEHOOK (16)
#define CC_ENABLETEMPLATE (32)
#define CC_ENABLETEMPLATEHANDLE (64)
#define CC_FULLOPEN (2)
#define CC_INTERIORS (128)
#define CC_NONE (0)
#define CC_PIE (2)
#define CC_PREVENTFULLOPEN (4)
#define CC_RGBINIT (1)
#define CC_ROUNDRECT (256)
#define CC_SHOWHELP (8)
#define CC_SOLIDCOLOR (128)
#define CC_STYLED (32)
#define CC_WIDE (16)
#define CC_WIDESTYLED (64)
#define CDECL 
#define CDM_FIRST (1124)
#define CDM_GETFILEPATH (1125)
#define CDM_GETFOLDERIDLIST (1127)
#define CDM_GETFOLDERPATH (1126)
#define CDM_GETSPEC (1124)
#define CDM_HIDECONTROL (1129)
#define CDM_LAST (1224)
#define CDM_SETCONTROLTEXT (1128)
#define CDM_SETDEFEXT (1130)
#define CDN_FILEOK (4294966690u)
#define CDN_FIRST (4294966695u)
#define CDN_FOLDERCHANGE (4294966693u)
#define CDN_HELP (4294966691u)
#define CDN_INCLUDEITEM (4294966688u)
#define CDN_INITDONE (4294966695u)
#define CDN_LAST (4294966597u)
#define CDN_SELCHANGE (4294966694u)
#define CDN_SHAREVIOLATION (4294966692u)
#define CDN_TYPECHANGE (4294966689u)
#define CDSIZEOF_STRUCT(structname, member) ( ( ( int ) ( ( LPBYTE ) ( & ( ( structname * ) 0 ) -> member ) - ( ( LPBYTE ) ( ( structname * ) 0 ) ) ) ) + sizeof ( ( ( structname * ) 0 ) -> member ) )
#define CDS_FULLSCREEN (4)
#define CDS_GLOBAL (8)
#define CDS_NORESET (268435456)
#define CDS_RESET (1073741824)
#define CDS_RESET_EX (536870912)
#define CDS_SET_PRIMARY (16)
#define CDS_TEST (2)
#define CDS_UPDATEREGISTRY (1)
#define CDS_VIDEOPARAMETERS (32)
#define CD_LBSELADD (2)
#define CD_LBSELCHANGE (0)
#define CD_LBSELNOITEMS (-1)
#define CD_LBSELSUB (1)
#define CERTSRV_E_ALIGNMENT_FAULT _HRESULT_TYPEDEF_ ( 0x80094010 )
#define CERTSRV_E_ARCHIVED_KEY_REQUIRED _HRESULT_TYPEDEF_ ( 0x80094804 )
#define CERTSRV_E_ARCHIVED_KEY_UNEXPECTED _HRESULT_TYPEDEF_ ( 0x80094810 )
#define CERTSRV_E_BAD_RENEWAL_CERT_ATTRIBUTE _HRESULT_TYPEDEF_ ( 0x8009400E )
#define CERTSRV_E_BAD_RENEWAL_SUBJECT _HRESULT_TYPEDEF_ ( 0x80094806 )
#define CERTSRV_E_BAD_REQUESTSTATUS _HRESULT_TYPEDEF_ ( 0x80094003 )
#define CERTSRV_E_BAD_REQUESTSUBJECT _HRESULT_TYPEDEF_ ( 0x80094001 )
#define CERTSRV_E_BAD_REQUEST_KEY_ARCHIVAL _HRESULT_TYPEDEF_ ( 0x8009400C )
#define CERTSRV_E_BAD_TEMPLATE_VERSION _HRESULT_TYPEDEF_ ( 0x80094807 )
#define CERTSRV_E_CERT_TYPE_OVERLAP _HRESULT_TYPEDEF_ ( 0x80094814 )
#define CERTSRV_E_DOWNLEVEL_DC_SSL_OR_UPGRADE _HRESULT_TYPEDEF_ ( 0x80094013 )
#define CERTSRV_E_ENCODING_LENGTH _HRESULT_TYPEDEF_ ( 0x80094007 )
#define CERTSRV_E_ENROLL_DENIED _HRESULT_TYPEDEF_ ( 0x80094011 )
#define CERTSRV_E_INVALID_CA_CERTIFICATE _HRESULT_TYPEDEF_ ( 0x80094005 )
#define CERTSRV_E_ISSUANCE_POLICY_REQUIRED _HRESULT_TYPEDEF_ ( 0x8009480C )
#define CERTSRV_E_KEY_ARCHIVAL_NOT_CONFIGURED _HRESULT_TYPEDEF_ ( 0x8009400A )
#define CERTSRV_E_KEY_LENGTH _HRESULT_TYPEDEF_ ( 0x80094811 )
#define CERTSRV_E_NO_CAADMIN_DEFINED _HRESULT_TYPEDEF_ ( 0x8009400D )
#define CERTSRV_E_NO_CERT_TYPE _HRESULT_TYPEDEF_ ( 0x80094801 )
#define CERTSRV_E_NO_DB_SESSIONS _HRESULT_TYPEDEF_ ( 0x8009400F )
#define CERTSRV_E_NO_REQUEST _HRESULT_TYPEDEF_ ( 0x80094002 )
#define CERTSRV_E_NO_VALID_KRA _HRESULT_TYPEDEF_ ( 0x8009400B )
#define CERTSRV_E_PROPERTY_EMPTY _HRESULT_TYPEDEF_ ( 0x80094004 )
#define CERTSRV_E_RESTRICTEDOFFICER _HRESULT_TYPEDEF_ ( 0x80094009 )
#define CERTSRV_E_ROLECONFLICT _HRESULT_TYPEDEF_ ( 0x80094008 )
#define CERTSRV_E_SERVER_SUSPENDED _HRESULT_TYPEDEF_ ( 0x80094006 )
#define CERTSRV_E_SIGNATURE_COUNT _HRESULT_TYPEDEF_ ( 0x8009480A )
#define CERTSRV_E_SIGNATURE_POLICY_REQUIRED _HRESULT_TYPEDEF_ ( 0x80094809 )
#define CERTSRV_E_SIGNATURE_REJECTED _HRESULT_TYPEDEF_ ( 0x8009480B )
#define CERTSRV_E_SMIME_REQUIRED _HRESULT_TYPEDEF_ ( 0x80094805 )
#define CERTSRV_E_SUBJECT_ALT_NAME_REQUIRED _HRESULT_TYPEDEF_ ( 0x80094803 )
#define CERTSRV_E_SUBJECT_DIRECTORY_GUID_REQUIRED _HRESULT_TYPEDEF_ ( 0x8009480E )
#define CERTSRV_E_SUBJECT_DNS_REQUIRED _HRESULT_TYPEDEF_ ( 0x8009480F )
#define CERTSRV_E_SUBJECT_EMAIL_REQUIRED _HRESULT_TYPEDEF_ ( 0x80094812 )
#define CERTSRV_E_SUBJECT_UPN_REQUIRED _HRESULT_TYPEDEF_ ( 0x8009480D )
#define CERTSRV_E_TEMPLATE_CONFLICT _HRESULT_TYPEDEF_ ( 0x80094802 )
#define CERTSRV_E_TEMPLATE_DENIED _HRESULT_TYPEDEF_ ( 0x80094012 )
#define CERTSRV_E_TEMPLATE_POLICY_REQUIRED _HRESULT_TYPEDEF_ ( 0x80094808 )
#define CERTSRV_E_UNKNOWN_CERT_TYPE _HRESULT_TYPEDEF_ ( 0x80094813 )
#define CERTSRV_E_UNSUPPORTED_CERT_TYPE _HRESULT_TYPEDEF_ ( 0x80094800 )
#define CERT_ACCESS_STATE_GP_SYSTEM_STORE_FLAG (8)
#define CERT_ACCESS_STATE_LM_SYSTEM_STORE_FLAG (4)
#define CERT_ACCESS_STATE_PROP_ID (14)
#define CERT_ACCESS_STATE_SHARED_USER_FLAG (16)
#define CERT_ACCESS_STATE_SYSTEM_STORE_FLAG (2)
#define CERT_ACCESS_STATE_WRITE_PERSIST_FLAG (1)
#define CERT_AIA_URL_RETRIEVED_PROP_ID (67)
#define CERT_ALT_NAME_DIRECTORY_NAME (5)
#define CERT_ALT_NAME_DNS_NAME (3)
#define CERT_ALT_NAME_EDI_PARTY_NAME (6)
#define CERT_ALT_NAME_ENTRY_ERR_INDEX_MASK (255)
#define CERT_ALT_NAME_ENTRY_ERR_INDEX_SHIFT (16)
#define CERT_ALT_NAME_IP_ADDRESS (8)
#define CERT_ALT_NAME_OTHER_NAME (1)
#define CERT_ALT_NAME_REGISTERED_ID (9)
#define CERT_ALT_NAME_RFC822_NAME (2)
#define CERT_ALT_NAME_URL (7)
#define CERT_ALT_NAME_VALUE_ERR_INDEX_MASK (65535)
#define CERT_ALT_NAME_VALUE_ERR_INDEX_SHIFT (0)
#define CERT_ALT_NAME_X400_ADDRESS (4)
#define CERT_ARCHIVED_KEY_HASH_PROP_ID (65)
#define CERT_ARCHIVED_PROP_ID (19)
#define CERT_AUTHORITY_INFO_ACCESS_PROP_ID (68)
#define CERT_AUTH_ROOT_AUTO_UPDATE_DISABLE_PARTIAL_CHAIN_LOGGING_FLAG (2)
#define CERT_AUTH_ROOT_AUTO_UPDATE_DISABLE_UNTRUSTED_ROOT_LOGGING_FLAG (1)
#define CERT_AUTH_ROOT_AUTO_UPDATE_ENCODED_CTL_VALUE_NAME "EncodedCtl"
#define CERT_AUTH_ROOT_AUTO_UPDATE_FLAGS_VALUE_NAME "Flags"
#define CERT_AUTH_ROOT_AUTO_UPDATE_LAST_SYNC_TIME_VALUE_NAME "LastSyncTime"
#define CERT_AUTH_ROOT_AUTO_UPDATE_LOCAL_MACHINE_REGPATH CERT_AUTO_UPDATE_LOCAL_MACHINE_REGPATH
#define CERT_AUTH_ROOT_AUTO_UPDATE_ROOT_DIR_URL_VALUE_NAME CERT_AUTO_UPDATE_ROOT_DIR_URL_VALUE_NAME
#define CERT_AUTH_ROOT_AUTO_UPDATE_SYNC_DELTA_TIME_VALUE_NAME "SyncDeltaTime"
#define CERT_AUTH_ROOT_CAB_FILENAME "authrootstl.cab"
#define CERT_AUTH_ROOT_CERT_EXT ".crt"
#define CERT_AUTH_ROOT_CTL_FILENAME "authroot.stl"
#define CERT_AUTH_ROOT_CTL_FILENAME_A "authroot.stl"
#define CERT_AUTH_ROOT_SEQ_FILENAME "authrootseq.txt"
#define CERT_AUTH_ROOT_SHA256_HASH_PROP_ID (98)
#define CERT_AUTO_ENROLL_PROP_ID (21)
#define CERT_AUTO_ENROLL_RETRY_PROP_ID (66)
#define CERT_AUTO_UPDATE_DISABLE_RANDOM_QUERY_STRING_FLAG (4)
#define CERT_AUTO_UPDATE_LOCAL_MACHINE_REGPATH CERT_LOCAL_MACHINE_SYSTEM_STORE_REGPATH L"\\AuthRoot\\AutoUpdate"
#define CERT_AUTO_UPDATE_ROOT_DIR_URL_VALUE_NAME "RootDirUrl"
#define CERT_BACKED_UP_PROP_ID (69)
#define CERT_BIOMETRIC_OID_DATA_CHOICE (2)
#define CERT_BIOMETRIC_PICTURE_TYPE (0)
#define CERT_BIOMETRIC_PREDEFINED_DATA_CHOICE (1)
#define CERT_BIOMETRIC_SIGNATURE_TYPE (1)
#define CERT_BUNDLE_CERTIFICATE (0)
#define CERT_BUNDLE_CRL (1)
#define CERT_CASE_INSENSITIVE_IS_RDN_ATTRS_FLAG (2)
#define CERT_CA_DISABLE_CRL_PROP_ID (82)
#define CERT_CA_OCSP_AUTHORITY_INFO_ACCESS_PROP_ID (81)
#define CERT_CA_SUBJECT_FLAG (128)
#define CERT_CEP_PROP_ID (87)
#define CERT_CHAIN_CACHE_END_CERT (1)
#define CERT_CHAIN_CACHE_ONLY_URL_RETRIEVAL (4)
#define CERT_CHAIN_CACHE_RESYNC_FILETIME_VALUE_NAME "ChainCacheResyncFiletime"
#define CERT_CHAIN_CONFIG_REGPATH "Software\\Microsoft\\Cryptography\\OID\\EncodingType 0\\CertDllCreateCertificateChainEngine\\Config"
#define CERT_CHAIN_CRL_VALIDITY_EXT_PERIOD_HOURS_DEFAULT (12)
#define CERT_CHAIN_CRL_VALIDITY_EXT_PERIOD_HOURS_VALUE_NAME "CRLValidityExtensionPeriod"
#define CERT_CHAIN_CROSS_CERT_DOWNLOAD_INTERVAL_HOURS_DEFAULT (168)
#define CERT_CHAIN_CROSS_CERT_DOWNLOAD_INTERVAL_HOURS_VALUE_NAME "CrossCertDownloadIntervalHours"
#define CERT_CHAIN_DISABLE_AIA_URL_RETRIEVAL_VALUE_NAME "DisableAIAUrlRetrieval"
#define CERT_CHAIN_DISABLE_AUTH_ROOT_AUTO_UPDATE (256)
#define CERT_CHAIN_DISABLE_CA_NAME_CONSTRAINTS_VALUE_NAME "DisableCANameConstraints"
#define CERT_CHAIN_DISABLE_MANDATORY_BASIC_CONSTRAINTS_VALUE_NAME "DisableMandatoryBasicConstraints"
#define CERT_CHAIN_DISABLE_MD2_MD4 (4096)
#define CERT_CHAIN_DISABLE_MY_PEER_TRUST (2048)
#define CERT_CHAIN_DISABLE_PASS1_QUALITY_FILTERING (64)
#define CERT_CHAIN_DISABLE_UNSUPPORTED_CRITICAL_EXTENSIONS_VALUE_NAME "DisableUnsupportedCriticalExtensions"
#define CERT_CHAIN_ENABLE_CACHE_AUTO_UPDATE (16)
#define CERT_CHAIN_ENABLE_MD2_MD4_FLAG (1)
#define CERT_CHAIN_ENABLE_ONLY_WEAK_LOGGING_FLAG (8)
#define CERT_CHAIN_ENABLE_PEER_TRUST (1024)
#define CERT_CHAIN_ENABLE_SHARE_STORE (32)
#define CERT_CHAIN_ENABLE_WEAK_LOGGING_FLAG (4)
#define CERT_CHAIN_ENABLE_WEAK_RSA_ROOT_FLAG (2)
#define CERT_CHAIN_ENABLE_WEAK_SIGNATURE_FLAGS_VALUE_NAME "EnableWeakSignatureFlags"
#define CERT_CHAIN_FIND_BY_ISSUER (1)
#define CERT_CHAIN_FIND_BY_ISSUER_CACHE_ONLY_FLAG (32768)
#define CERT_CHAIN_FIND_BY_ISSUER_CACHE_ONLY_URL_FLAG (4)
#define CERT_CHAIN_FIND_BY_ISSUER_COMPARE_KEY_FLAG (1)
#define CERT_CHAIN_FIND_BY_ISSUER_COMPLEX_CHAIN_FLAG (2)
#define CERT_CHAIN_FIND_BY_ISSUER_LOCAL_MACHINE_FLAG (8)
#define CERT_CHAIN_FIND_BY_ISSUER_NO_KEY_FLAG (16384)
#define CERT_CHAIN_MAX_AIA_URL_COUNT_IN_CERT_DEFAULT (5)
#define CERT_CHAIN_MAX_AIA_URL_COUNT_IN_CERT_VALUE_NAME "MaxAIAUrlCountInCert"
#define CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_BYTE_COUNT_DEFAULT (100000)
#define CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_BYTE_COUNT_VALUE_NAME "MaxAIAUrlRetrievalByteCount"
#define CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_CERT_COUNT_DEFAULT (10)
#define CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_CERT_COUNT_VALUE_NAME "MaxAIAUrlRetrievalCertCount"
#define CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_COUNT_PER_CHAIN_DEFAULT (3)
#define CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_COUNT_PER_CHAIN_VALUE_NAME "MaxAIAUrlRetrievalCountPerChain"
#define CERT_CHAIN_MAX_URL_RETRIEVAL_BYTE_COUNT_DEFAULT (104857600)
#define CERT_CHAIN_MAX_URL_RETRIEVAL_BYTE_COUNT_VALUE_NAME "MaxUrlRetrievalByteCount"
#define CERT_CHAIN_MIN_RSA_PUB_KEY_BIT_LENGTH_DEFAULT (1023)
#define CERT_CHAIN_MIN_RSA_PUB_KEY_BIT_LENGTH_DISABLE (4294967295u)
#define CERT_CHAIN_MIN_RSA_PUB_KEY_BIT_LENGTH_VALUE_NAME "MinRsaPubKeyBitLength"
#define CERT_CHAIN_OCSP_VALIDITY_SECONDS_DEFAULT (43200)
#define CERT_CHAIN_OCSP_VALIDITY_SECONDS_VALUE_NAME "OcspValiditySeconds"
#define CERT_CHAIN_OPTIONS_VALUE_NAME "Options"
#define CERT_CHAIN_OPTION_DISABLE_AIA_URL_RETRIEVAL (2)
#define CERT_CHAIN_OPTION_ENABLE_SIA_URL_RETRIEVAL (4)
#define CERT_CHAIN_POLICY_ALLOW_TESTROOT_FLAG (32768)
#define CERT_CHAIN_POLICY_ALLOW_UNKNOWN_CA_FLAG (16)
#define CERT_CHAIN_POLICY_AUTHENTICODE ( ( LPCSTR ) 2 )
#define CERT_CHAIN_POLICY_AUTHENTICODE_TS ( ( LPCSTR ) 3 )
#define CERT_CHAIN_POLICY_BASE ( ( LPCSTR ) 1 )
#define CERT_CHAIN_POLICY_BASIC_CONSTRAINTS ( ( LPCSTR ) 5 )
#define CERT_CHAIN_POLICY_EV ( ( LPCSTR ) 8 )
#define CERT_CHAIN_POLICY_IGNORE_ALL_NOT_TIME_VALID_FLAGS (7)
#define CERT_CHAIN_POLICY_IGNORE_ALL_REV_UNKNOWN_FLAGS (3840)
#define CERT_CHAIN_POLICY_IGNORE_CA_REV_UNKNOWN_FLAG (1024)
#define CERT_CHAIN_POLICY_IGNORE_CTL_NOT_TIME_VALID_FLAG (2)
#define CERT_CHAIN_POLICY_IGNORE_CTL_SIGNER_REV_UNKNOWN_FLAG (512)
#define CERT_CHAIN_POLICY_IGNORE_END_REV_UNKNOWN_FLAG (256)
#define CERT_CHAIN_POLICY_IGNORE_INVALID_BASIC_CONSTRAINTS_FLAG (8)
#define CERT_CHAIN_POLICY_IGNORE_INVALID_NAME_FLAG (64)
#define CERT_CHAIN_POLICY_IGNORE_INVALID_POLICY_FLAG (128)
#define CERT_CHAIN_POLICY_IGNORE_NOT_SUPPORTED_CRITICAL_EXT_FLAG (8192)
#define CERT_CHAIN_POLICY_IGNORE_NOT_TIME_NESTED_FLAG (4)
#define CERT_CHAIN_POLICY_IGNORE_NOT_TIME_VALID_FLAG (1)
#define CERT_CHAIN_POLICY_IGNORE_PEER_TRUST_FLAG (4096)
#define CERT_CHAIN_POLICY_IGNORE_ROOT_REV_UNKNOWN_FLAG (2048)
#define CERT_CHAIN_POLICY_IGNORE_WRONG_USAGE_FLAG (32)
#define CERT_CHAIN_POLICY_MICROSOFT_ROOT ( ( LPCSTR ) 7 )
#define CERT_CHAIN_POLICY_NT_AUTH ( ( LPCSTR ) 6 )
#define CERT_CHAIN_POLICY_SSL ( ( LPCSTR ) 4 )
#define CERT_CHAIN_POLICY_TRUST_TESTROOT_FLAG (16384)
#define CERT_CHAIN_RETURN_LOWER_QUALITY_CONTEXTS (128)
#define CERT_CHAIN_REVOCATION_ACCUMULATIVE_TIMEOUT (134217728)
#define CERT_CHAIN_REVOCATION_CHECK_CACHE_ONLY (2147483648u)
#define CERT_CHAIN_REVOCATION_CHECK_CHAIN (536870912)
#define CERT_CHAIN_REVOCATION_CHECK_CHAIN_EXCLUDE_ROOT (1073741824)
#define CERT_CHAIN_REVOCATION_CHECK_END_CERT (268435456)
#define CERT_CHAIN_REVOCATION_CHECK_OCSP_CERT (67108864)
#define CERT_CHAIN_REV_ACCUMULATIVE_URL_RETRIEVAL_TIMEOUT_MILLISECONDS_DEFAULT (20000)
#define CERT_CHAIN_REV_ACCUMULATIVE_URL_RETRIEVAL_TIMEOUT_MILLISECONDS_VALUE_NAME "ChainRevAccumulativeUrlRetrievalTimeoutMilliseconds"
#define CERT_CHAIN_STRONG_SIGN_DISABLE_END_CHECK_FLAG (1)
#define CERT_CHAIN_THREAD_STORE_SYNC (2)
#define CERT_CHAIN_TIMESTAMP_TIME (512)
#define CERT_CHAIN_URL_RETRIEVAL_TIMEOUT_MILLISECONDS_DEFAULT (15000)
#define CERT_CHAIN_URL_RETRIEVAL_TIMEOUT_MILLISECONDS_VALUE_NAME "ChainUrlRetrievalTimeoutMilliseconds"
#define CERT_CHAIN_USE_LOCAL_MACHINE_STORE (8)
#define CERT_CHAIN_WEAK_RSA_PUB_KEY_TIME_DEFAULT (129067776000000000ull)
#define CERT_CHAIN_WEAK_RSA_PUB_KEY_TIME_VALUE_NAME "WeakRsaPubKeyTime"
#define CERT_CHAIN_WEAK_SIGNATURE_LOG_DIR_VALUE_NAME "WeakSignatureLogDir"
#define CERT_CLOSE_STORE_CHECK_FLAG (2)
#define CERT_CLOSE_STORE_FORCE_FLAG (1)
#define CERT_COMPARE_ANY (0)
#define CERT_COMPARE_ATTR (3)
#define CERT_COMPARE_CERT_ID (16)
#define CERT_COMPARE_CROSS_CERT_DIST_POINTS (17)
#define CERT_COMPARE_CTL_USAGE CERT_COMPARE_ENHKEY_USAGE
#define CERT_COMPARE_ENHKEY_USAGE (10)
#define CERT_COMPARE_EXISTING (13)
#define CERT_COMPARE_HASH CERT_COMPARE_SHA1_HASH
#define CERT_COMPARE_HASH_STR (20)
#define CERT_COMPARE_HAS_PRIVATE_KEY (21)
#define CERT_COMPARE_ISSUER_OF (12)
#define CERT_COMPARE_KEY_IDENTIFIER (15)
#define CERT_COMPARE_KEY_SPEC (9)
#define CERT_COMPARE_MASK (65535)
#define CERT_COMPARE_MD5_HASH (4)
#define CERT_COMPARE_NAME (2)
#define CERT_COMPARE_NAME_STR_A (7)
#define CERT_COMPARE_NAME_STR_W (8)
#define CERT_COMPARE_PROPERTY (5)
#define CERT_COMPARE_PUBKEY_MD5_HASH (18)
#define CERT_COMPARE_PUBLIC_KEY (6)
#define CERT_COMPARE_SHA1_HASH (1)
#define CERT_COMPARE_SHIFT (16)
#define CERT_COMPARE_SIGNATURE_HASH (14)
#define CERT_COMPARE_SUBJECT_CERT (11)
#define CERT_COMPARE_SUBJECT_INFO_ACCESS (19)
#define CERT_CONTEXT_REVOCATION_TYPE (1)
#define CERT_CREATE_CONTEXT_NOCOPY_FLAG (1)
#define CERT_CREATE_CONTEXT_NO_ENTRY_FLAG (8)
#define CERT_CREATE_CONTEXT_NO_HCRYPTMSG_FLAG (4)
#define CERT_CREATE_CONTEXT_SORTED_FLAG (2)
#define CERT_CREATE_SELFSIGN_NO_KEY_INFO (2)
#define CERT_CREATE_SELFSIGN_NO_SIGN (1)
#define CERT_CROSS_CERT_DIST_POINTS_PROP_ID (23)
#define CERT_CTL_USAGE_PROP_ID CERT_ENHKEY_USAGE_PROP_ID
#define CERT_DATA_ENCIPHERMENT_KEY_USAGE (16)
#define CERT_DATE_STAMP_PROP_ID (27)
#define CERT_DECIPHER_ONLY_KEY_USAGE (128)
#define CERT_DEFAULT_OID_PUBLIC_KEY_SIGN szOID_RSA_RSA
#define CERT_DEFAULT_OID_PUBLIC_KEY_XCHG szOID_RSA_RSA
#define CERT_DESCRIPTION_PROP_ID (13)
#define CERT_DIGITAL_SIGNATURE_KEY_USAGE (128)
#define CERT_DISABLE_ROOT_AUTO_UPDATE_REGPATH CERT_GROUP_POLICY_SYSTEM_STORE_REGPATH L"\\AuthRoot"
#define CERT_DISABLE_ROOT_AUTO_UPDATE_VALUE_NAME "DisableRootAutoUpdate"
#define CERT_DISALLOWED_CERT_AUTO_UPDATE_ENCODED_CTL_VALUE_NAME "DisallowedCertEncodedCtl"
#define CERT_DISALLOWED_CERT_AUTO_UPDATE_LAST_SYNC_TIME_VALUE_NAME "DisallowedCertLastSyncTime"
#define CERT_DISALLOWED_CERT_AUTO_UPDATE_LIST_IDENTIFIER "DisallowedCert_AutoUpdate_1"
#define CERT_DISALLOWED_CERT_AUTO_UPDATE_SYNC_DELTA_TIME_VALUE_NAME "DisallowedCertSyncDeltaTime"
#define CERT_DISALLOWED_CERT_CAB_FILENAME "disallowedcertstl.cab"
#define CERT_DISALLOWED_CERT_CTL_FILENAME "disallowedcert.stl"
#define CERT_DISALLOWED_CERT_CTL_FILENAME_A "disallowedcert.stl"
#define CERT_DISALLOWED_FILETIME_PROP_ID (104)
#define CERT_DSS_R_LEN (20)
#define CERT_DSS_SIGNATURE_LEN (40)
#define CERT_DSS_S_LEN (20)
#define CERT_EFSBLOB_REGPATH CERT_GROUP_POLICY_SYSTEM_STORE_REGPATH L"\\EFS"
#define CERT_EFSBLOB_VALUE_NAME "EFSBlob"
#define CERT_EFS_PROP_ID (17)
#define CERT_ENCIPHER_ONLY_KEY_USAGE (1)
#define CERT_ENCODING_TYPE_MASK (65535)
#define CERT_END_ENTITY_SUBJECT_FLAG (64)
#define CERT_ENHKEY_USAGE_PROP_ID (9)
#define CERT_ENROLLMENT_PROP_ID (26)
#define CERT_EXCLUDED_SUBTREE_BIT __MSABI_LONG ( 0x80000000 )
#define CERT_EXTENDED_ERROR_INFO_PROP_ID (30)
#define CERT_E_CHAINING _HRESULT_TYPEDEF_ ( 0x800B010A )
#define CERT_E_CN_NO_MATCH _HRESULT_TYPEDEF_ ( 0x800B010F )
#define CERT_E_CRITICAL _HRESULT_TYPEDEF_ ( 0x800B0105 )
#define CERT_E_EXPIRED _HRESULT_TYPEDEF_ ( 0x800B0101 )
#define CERT_E_INVALID_NAME _HRESULT_TYPEDEF_ ( 0x800B0114 )
#define CERT_E_INVALID_POLICY _HRESULT_TYPEDEF_ ( 0x800B0113 )
#define CERT_E_ISSUERCHAINING _HRESULT_TYPEDEF_ ( 0x800B0107 )
#define CERT_E_MALFORMED _HRESULT_TYPEDEF_ ( 0x800B0108 )
#define CERT_E_PATHLENCONST _HRESULT_TYPEDEF_ ( 0x800B0104 )
#define CERT_E_PURPOSE _HRESULT_TYPEDEF_ ( 0x800B0106 )
#define CERT_E_REVOCATION_FAILURE _HRESULT_TYPEDEF_ ( 0x800B010E )
#define CERT_E_REVOKED _HRESULT_TYPEDEF_ ( 0x800B010C )
#define CERT_E_ROLE _HRESULT_TYPEDEF_ ( 0x800B0103 )
#define CERT_E_UNTRUSTEDCA _HRESULT_TYPEDEF_ ( 0x800B0112 )
#define CERT_E_UNTRUSTEDROOT _HRESULT_TYPEDEF_ ( 0x800B0109 )
#define CERT_E_UNTRUSTEDTESTROOT _HRESULT_TYPEDEF_ ( 0x800B010D )
#define CERT_E_VALIDITYPERIODNESTING _HRESULT_TYPEDEF_ ( 0x800B0102 )
#define CERT_E_WRONG_USAGE _HRESULT_TYPEDEF_ ( 0x800B0110 )
#define CERT_FILE_STORE_COMMIT_ENABLE_FLAG (65536)
#define CERT_FIND_ANY (0)
#define CERT_FIND_CERT_ID (1048576)
#define CERT_FIND_CROSS_CERT_DIST_POINTS (1114112)
#define CERT_FIND_CTL_USAGE CERT_FIND_ENHKEY_USAGE
#define CERT_FIND_ENHKEY_USAGE (655360)
#define CERT_FIND_EXISTING (851968)
#define CERT_FIND_EXT_ONLY_CTL_USAGE_FLAG CERT_FIND_EXT_ONLY_ENHKEY_USAGE_FLAG
#define CERT_FIND_EXT_ONLY_ENHKEY_USAGE_FLAG (2)
#define CERT_FIND_HASH CERT_FIND_SHA1_HASH
#define CERT_FIND_HASH_STR (1310720)
#define CERT_FIND_HAS_PRIVATE_KEY (1376256)
#define CERT_FIND_ISSUER_ATTR (196612)
#define CERT_FIND_ISSUER_NAME (131076)
#define CERT_FIND_ISSUER_OF (786432)
#define CERT_FIND_ISSUER_STR CERT_FIND_ISSUER_STR_W
#define CERT_FIND_ISSUER_STR_A (458756)
#define CERT_FIND_ISSUER_STR_W (524292)
#define CERT_FIND_KEY_IDENTIFIER (983040)
#define CERT_FIND_KEY_SPEC (589824)
#define CERT_FIND_MD5_HASH (262144)
#define CERT_FIND_NO_CTL_USAGE_FLAG CERT_FIND_NO_ENHKEY_USAGE_FLAG
#define CERT_FIND_NO_ENHKEY_USAGE_FLAG (8)
#define CERT_FIND_OPTIONAL_CTL_USAGE_FLAG CERT_FIND_OPTIONAL_ENHKEY_USAGE_FLAG
#define CERT_FIND_OPTIONAL_ENHKEY_USAGE_FLAG (1)
#define CERT_FIND_OR_CTL_USAGE_FLAG CERT_FIND_OR_ENHKEY_USAGE_FLAG
#define CERT_FIND_OR_ENHKEY_USAGE_FLAG (16)
#define CERT_FIND_PROPERTY (327680)
#define CERT_FIND_PROP_ONLY_CTL_USAGE_FLAG CERT_FIND_PROP_ONLY_ENHKEY_USAGE_FLAG
#define CERT_FIND_PROP_ONLY_ENHKEY_USAGE_FLAG (4)
#define CERT_FIND_PUBKEY_MD5_HASH (1179648)
#define CERT_FIND_PUBLIC_KEY (393216)
#define CERT_FIND_SHA1_HASH (65536)
#define CERT_FIND_SIGNATURE_HASH (917504)
#define CERT_FIND_SUBJECT_ATTR (196615)
#define CERT_FIND_SUBJECT_CERT (720896)
#define CERT_FIND_SUBJECT_INFO_ACCESS (1245184)
#define CERT_FIND_SUBJECT_NAME (131079)
#define CERT_FIND_SUBJECT_STR CERT_FIND_SUBJECT_STR_W
#define CERT_FIND_SUBJECT_STR_A (458759)
#define CERT_FIND_SUBJECT_STR_W (524295)
#define CERT_FIND_VALID_CTL_USAGE_FLAG CERT_FIND_VALID_ENHKEY_USAGE_FLAG
#define CERT_FIND_VALID_ENHKEY_USAGE_FLAG (32)
#define CERT_FIRST_RESERVED_PROP_ID (107)
#define CERT_FIRST_USER_PROP_ID (32768)
#define CERT_FORTEZZA_DATA_PROP_ID (18)
#define CERT_FRIENDLY_NAME_PROP_ID (11)
#define CERT_GROUP_POLICY_CHAIN_CONFIG_REGPATH CERT_GROUP_POLICY_SYSTEM_STORE_REGPATH L"\\ChainEngine\\Config"
#define CERT_GROUP_POLICY_SYSTEM_STORE_REGPATH "Software\\Policies\\Microsoft\\SystemCertificates"
#define CERT_HASH_PROP_ID CERT_SHA1_HASH_PROP_ID
#define CERT_HCRYPTPROV_OR_NCRYPT_KEY_HANDLE_PROP_ID (79)
#define CERT_HCRYPTPROV_TRANSFER_PROP_ID (100)
#define CERT_ID_ISSUER_SERIAL_NUMBER (1)
#define CERT_ID_KEY_IDENTIFIER (2)
#define CERT_ID_SHA1_HASH (3)
#define CERT_IE30_RESERVED_PROP_ID (7)
#define CERT_IE_DIRTY_FLAGS_REGPATH "Software\\Microsoft\\Cryptography\\IEDirtyFlags"
#define CERT_INFO_EXTENSION_FLAG (11)
#define CERT_INFO_ISSUER_FLAG (4)
#define CERT_INFO_ISSUER_UNIQUE_ID_FLAG (9)
#define CERT_INFO_NOT_AFTER_FLAG (6)
#define CERT_INFO_NOT_BEFORE_FLAG (5)
#define CERT_INFO_SERIAL_NUMBER_FLAG (2)
#define CERT_INFO_SIGNATURE_ALGORITHM_FLAG (3)
#define CERT_INFO_SUBJECT_FLAG (7)
#define CERT_INFO_SUBJECT_PUBLIC_KEY_INFO_FLAG (8)
#define CERT_INFO_SUBJECT_UNIQUE_ID_FLAG (10)
#define CERT_INFO_VERSION_FLAG (1)
#define CERT_ISSUER_CHAIN_PUB_KEY_CNG_ALG_BIT_LENGTH_PROP_ID (96)
#define CERT_ISSUER_CHAIN_SIGN_HASH_CNG_ALG_PROP_ID (95)
#define CERT_ISSUER_PUBLIC_KEY_MD5_HASH_PROP_ID (24)
#define CERT_ISSUER_PUB_KEY_BIT_LENGTH_PROP_ID (94)
#define CERT_ISSUER_SERIAL_NUMBER_MD5_HASH_PROP_ID (28)
#define CERT_KEYGEN_REQUEST_V1 (0)
#define CERT_KEY_AGREEMENT_KEY_USAGE (8)
#define CERT_KEY_CERT_SIGN_KEY_USAGE (4)
#define CERT_KEY_CONTEXT_PROP_ID (5)
#define CERT_KEY_ENCIPHERMENT_KEY_USAGE (32)
#define CERT_KEY_IDENTIFIER_PROP_ID (20)
#define CERT_KEY_PROV_HANDLE_PROP_ID (1)
#define CERT_KEY_PROV_INFO_PROP_ID (2)
#define CERT_KEY_REPAIR_ATTEMPTED_PROP_ID (103)
#define CERT_KEY_SPEC_PROP_ID (6)
#define CERT_LAST_RESERVED_PROP_ID (32767)
#define CERT_LAST_USER_PROP_ID (65535)
#define CERT_LDAP_STORE_AREC_EXCLUSIVE_FLAG (131072)
#define CERT_LDAP_STORE_OPENED_FLAG (262144)
#define CERT_LDAP_STORE_SIGN_FLAG (65536)
#define CERT_LDAP_STORE_UNBIND_FLAG (524288)
#define CERT_LOCAL_MACHINE_SYSTEM_STORE_REGPATH "Software\\Microsoft\\SystemCertificates"
#define CERT_LOGOTYPE_BITS_IMAGE_RESOLUTION_CHOICE (1)
#define CERT_LOGOTYPE_COLOR_IMAGE_INFO_CHOICE (2)
#define CERT_LOGOTYPE_DIRECT_INFO_CHOICE (1)
#define CERT_LOGOTYPE_GRAY_SCALE_IMAGE_INFO_CHOICE (1)
#define CERT_LOGOTYPE_INDIRECT_INFO_CHOICE (2)
#define CERT_LOGOTYPE_NO_IMAGE_RESOLUTION_CHOICE (0)
#define CERT_LOGOTYPE_TABLE_SIZE_IMAGE_RESOLUTION_CHOICE (2)
#define CERT_MAX_ASN_ENCODED_DSS_SIGNATURE_LEN (48)
#define CERT_MD5_HASH_PROP_ID (4)
#define CERT_NAME_ATTR_TYPE (3)
#define CERT_NAME_DISABLE_IE4_UTF8_FLAG (65536)
#define CERT_NAME_DNS_TYPE (6)
#define CERT_NAME_EMAIL_TYPE (1)
#define CERT_NAME_FRIENDLY_DISPLAY_TYPE (5)
#define CERT_NAME_ISSUER_FLAG (1)
#define CERT_NAME_RDN_TYPE (2)
#define CERT_NAME_SEARCH_ALL_NAMES_FLAG (2)
#define CERT_NAME_SIMPLE_DISPLAY_TYPE (4)
#define CERT_NAME_STR_COMMA_FLAG (67108864)
#define CERT_NAME_STR_CRLF_FLAG (134217728)
#define CERT_NAME_STR_DISABLE_IE4_UTF8_FLAG (65536)
#define CERT_NAME_STR_DISABLE_UTF8_DIR_STR_FLAG (1048576)
#define CERT_NAME_STR_ENABLE_PUNYCODE_FLAG (2097152)
#define CERT_NAME_STR_ENABLE_T61_UNICODE_FLAG (131072)
#define CERT_NAME_STR_ENABLE_UTF8_UNICODE_FLAG (262144)
#define CERT_NAME_STR_FORCE_UTF8_DIR_STR_FLAG (524288)
#define CERT_NAME_STR_FORWARD_FLAG (16777216)
#define CERT_NAME_STR_NO_PLUS_FLAG (536870912)
#define CERT_NAME_STR_NO_QUOTING_FLAG (268435456)
#define CERT_NAME_STR_REVERSE_FLAG (33554432)
#define CERT_NAME_STR_SEMICOLON_FLAG (1073741824)
#define CERT_NAME_UPN_TYPE (8)
#define CERT_NAME_URL_TYPE (7)
#define CERT_NCRYPT_KEY_HANDLE_PROP_ID (78)
#define CERT_NCRYPT_KEY_HANDLE_TRANSFER_PROP_ID (99)
#define CERT_NCRYPT_KEY_SPEC (4294967295u)
#define CERT_NEW_KEY_PROP_ID (74)
#define CERT_NEXT_UPDATE_LOCATION_PROP_ID (10)
#define CERT_NON_REPUDIATION_KEY_USAGE (64)
#define CERT_NO_AUTO_EXPIRE_CHECK_PROP_ID (77)
#define CERT_NO_EXPIRE_NOTIFICATION_PROP_ID (97)
#define CERT_OCM_SUBCOMPONENTS_LOCAL_MACHINE_REGPATH "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Setup\\OC Manager\\Subcomponents"
#define CERT_OCM_SUBCOMPONENTS_ROOT_AUTO_UPDATE_VALUE_NAME "RootAutoUpdate"
#define CERT_OCSP_CACHE_PREFIX_PROP_ID (75)
#define CERT_OCSP_RESPONSE_PROP_ID (70)
#define CERT_OFFLINE_CRL_SIGN_KEY_USAGE (2)
#define CERT_OID_NAME_STR (2)
#define CERT_PHYSICAL_STORE_ADD_ENABLE_FLAG (1)
#define CERT_PHYSICAL_STORE_AUTH_ROOT_NAME ".AuthRoot"
#define CERT_PHYSICAL_STORE_DEFAULT_NAME ".Default"
#define CERT_PHYSICAL_STORE_DS_USER_CERTIFICATE_NAME ".UserCertificate"
#define CERT_PHYSICAL_STORE_ENTERPRISE_NAME ".Enterprise"
#define CERT_PHYSICAL_STORE_GROUP_POLICY_NAME ".GroupPolicy"
#define CERT_PHYSICAL_STORE_INSERT_COMPUTER_NAME_ENABLE_FLAG (8)
#define CERT_PHYSICAL_STORE_LOCAL_MACHINE_GROUP_POLICY_NAME ".LocalMachineGroupPolicy"
#define CERT_PHYSICAL_STORE_LOCAL_MACHINE_NAME ".LocalMachine"
#define CERT_PHYSICAL_STORE_OPEN_DISABLE_FLAG (2)
#define CERT_PHYSICAL_STORE_PREDEFINED_ENUM_FLAG (1)
#define CERT_PHYSICAL_STORE_REMOTE_OPEN_DISABLE_FLAG (4)
#define CERT_PHYSICAL_STORE_SMART_CARD_NAME ".SmartCard"
#define CERT_PROT_ROOT_DISABLE_CURRENT_USER_FLAG (1)
#define CERT_PROT_ROOT_DISABLE_LM_AUTH_FLAG (8)
#define CERT_PROT_ROOT_DISABLE_NOT_DEFINED_NAME_CONSTRAINT_FLAG (32)
#define CERT_PROT_ROOT_DISABLE_NT_AUTH_REQUIRED_FLAG (16)
#define CERT_PROT_ROOT_DISABLE_PEER_TRUST (65536)
#define CERT_PROT_ROOT_FLAGS_REGPATH CERT_GROUP_POLICY_SYSTEM_STORE_REGPATH L"\\Root\\ProtectedRoots"
#define CERT_PROT_ROOT_FLAGS_VALUE_NAME "Flags"
#define CERT_PROT_ROOT_INHIBIT_ADD_AT_INIT_FLAG (2)
#define CERT_PROT_ROOT_INHIBIT_PURGE_LM_FLAG (4)
#define CERT_PROT_ROOT_ONLY_LM_GPT_FLAG (8)
#define CERT_PROT_ROOT_PEER_USAGES_DEFAULT_A szOID_PKIX_KP_CLIENT_AUTH "\0" szOID_PKIX_KP_EMAIL_PROTECTION "\0" szOID_KP_EFS "\0"
#define CERT_PROT_ROOT_PEER_USAGES_VALUE_NAME "PeerUsages"
#define CERT_PROT_ROOT_PEER_USAGES_VALUE_NAME_A "PeerUsages"
#define CERT_PUBKEY_ALG_PARA_PROP_ID (22)
#define CERT_PUBKEY_HASH_RESERVED_PROP_ID (8)
#define CERT_PUB_KEY_CNG_ALG_BIT_LENGTH_PROP_ID (93)
#define CERT_PVK_FILE_PROP_ID (12)
#define CERT_QUERY_CONTENT_CERT (1)
#define CERT_QUERY_CONTENT_CERT_PAIR (13)
#define CERT_QUERY_CONTENT_CRL (3)
#define CERT_QUERY_CONTENT_CTL (2)
#define CERT_QUERY_CONTENT_FLAG_ALL (16382)
#define CERT_QUERY_CONTENT_FLAG_ALL_ISSUER_CERT (818)
#define CERT_QUERY_CONTENT_FLAG_CERT (2)
#define CERT_QUERY_CONTENT_FLAG_CERT_PAIR (8192)
#define CERT_QUERY_CONTENT_FLAG_CRL (8)
#define CERT_QUERY_CONTENT_FLAG_CTL (4)
#define CERT_QUERY_CONTENT_FLAG_PFX (4096)
#define CERT_QUERY_CONTENT_FLAG_PFX_AND_LOAD (16384)
#define CERT_QUERY_CONTENT_FLAG_PKCS10 (2048)
#define CERT_QUERY_CONTENT_FLAG_PKCS7_SIGNED (256)
#define CERT_QUERY_CONTENT_FLAG_PKCS7_SIGNED_EMBED (1024)
#define CERT_QUERY_CONTENT_FLAG_PKCS7_UNSIGNED (512)
#define CERT_QUERY_CONTENT_FLAG_SERIALIZED_CERT (32)
#define CERT_QUERY_CONTENT_FLAG_SERIALIZED_CRL (128)
#define CERT_QUERY_CONTENT_FLAG_SERIALIZED_CTL (64)
#define CERT_QUERY_CONTENT_FLAG_SERIALIZED_STORE (16)
#define CERT_QUERY_CONTENT_PFX (12)
#define CERT_QUERY_CONTENT_PFX_AND_LOAD (14)
#define CERT_QUERY_CONTENT_PKCS10 (11)
#define CERT_QUERY_CONTENT_PKCS7_SIGNED (8)
#define CERT_QUERY_CONTENT_PKCS7_SIGNED_EMBED (10)
#define CERT_QUERY_CONTENT_PKCS7_UNSIGNED (9)
#define CERT_QUERY_CONTENT_SERIALIZED_CERT (5)
#define CERT_QUERY_CONTENT_SERIALIZED_CRL (7)
#define CERT_QUERY_CONTENT_SERIALIZED_CTL (6)
#define CERT_QUERY_CONTENT_SERIALIZED_STORE (4)
#define CERT_QUERY_FORMAT_ASN_ASCII_HEX_ENCODED (3)
#define CERT_QUERY_FORMAT_BASE64_ENCODED (2)
#define CERT_QUERY_FORMAT_BINARY (1)
#define CERT_QUERY_FORMAT_FLAG_ALL (14)
#define CERT_QUERY_FORMAT_FLAG_ASN_ASCII_HEX_ENCODED (8)
#define CERT_QUERY_FORMAT_FLAG_BASE64_ENCODED (4)
#define CERT_QUERY_FORMAT_FLAG_BINARY (2)
#define CERT_QUERY_OBJECT_BLOB (2)
#define CERT_QUERY_OBJECT_FILE (1)
#define CERT_RDN_ANY_TYPE (0)
#define CERT_RDN_BMP_STRING (12)
#define CERT_RDN_DISABLE_CHECK_TYPE_FLAG (1073741824)
#define CERT_RDN_DISABLE_IE4_UTF8_FLAG (16777216)
#define CERT_RDN_ENABLE_PUNYCODE_FLAG (33554432)
#define CERT_RDN_ENABLE_T61_UNICODE_FLAG (2147483648u)
#define CERT_RDN_ENABLE_UTF8_UNICODE_FLAG (536870912)
#define CERT_RDN_ENCODED_BLOB (1)
#define CERT_RDN_FLAGS_MASK (4278190080u)
#define CERT_RDN_FORCE_UTF8_UNICODE_FLAG (268435456)
#define CERT_RDN_GENERAL_STRING (10)
#define CERT_RDN_GRAPHIC_STRING (8)
#define CERT_RDN_IA5_STRING (7)
#define CERT_RDN_INT4_STRING (11)
#define CERT_RDN_ISO646_STRING (9)
#define CERT_RDN_NUMERIC_STRING (3)
#define CERT_RDN_OCTET_STRING (2)
#define CERT_RDN_PRINTABLE_STRING (4)
#define CERT_RDN_T61_STRING (5)
#define CERT_RDN_TELETEX_STRING (5)
#define CERT_RDN_TYPE_MASK (255)
#define CERT_RDN_UNICODE_STRING (12)
#define CERT_RDN_UNIVERSAL_STRING (11)
#define CERT_RDN_UTF8_STRING (13)
#define CERT_RDN_VIDEOTEX_STRING (6)
#define CERT_RDN_VISIBLE_STRING (9)
#define CERT_REGISTRY_STORE_CLIENT_GPT_FLAG (2147483648u)
#define CERT_REGISTRY_STORE_EXTERNAL_FLAG (1048576)
#define CERT_REGISTRY_STORE_LM_GPT_FLAG (16777216)
#define CERT_REGISTRY_STORE_MY_IE_DIRTY_FLAG (524288)
#define CERT_REGISTRY_STORE_REMOTE_FLAG (65536)
#define CERT_REGISTRY_STORE_ROAMING_FLAG (262144)
#define CERT_REGISTRY_STORE_SERIALIZED_FLAG (131072)
#define CERT_RENEWAL_PROP_ID (64)
#define CERT_REQUEST_ORIGINATOR_PROP_ID (71)
#define CERT_REQUEST_V1 (0)
#define CERT_RETRIEVE_BIOMETRIC_PICTURE_TYPE ( CERT_RETRIEVE_BIOMETRIC_PREDEFINED_BASE_TYPE + CERT_BIOMETRIC_PICTURE_TYPE )
#define CERT_RETRIEVE_BIOMETRIC_PREDEFINED_BASE_TYPE ( ( LPCSTR ) 1000 )
#define CERT_RETRIEVE_BIOMETRIC_SIGNATURE_TYPE ( CERT_RETRIEVE_BIOMETRIC_PREDEFINED_BASE_TYPE + CERT_BIOMETRIC_SIGNATURE_TYPE )
#define CERT_RETRIEVE_COMMUNITY_LOGO ( ( LPCSTR ) 3 )
#define CERT_RETRIEVE_ISSUER_LOGO ( ( LPCSTR ) 1 )
#define CERT_RETRIEVE_SUBJECT_LOGO ( ( LPCSTR ) 2 )
#define CERT_RETR_BEHAVIOR_FILE_VALUE_NAME "AllowFileUrlScheme"
#define CERT_RETR_BEHAVIOR_INET_AUTH_VALUE_NAME "EnableInetUnknownAuth"
#define CERT_RETR_BEHAVIOR_INET_STATUS_VALUE_NAME "EnableInetLocal"
#define CERT_RETR_BEHAVIOR_LDAP_VALUE_NAME "DisableLDAPSignAndEncrypt"
#define CERT_ROOT_PROGRAM_CERT_POLICIES_PROP_ID (83)
#define CERT_ROOT_PROGRAM_CHAIN_POLICIES_PROP_ID (105)
#define CERT_ROOT_PROGRAM_FLAG_ADDRESS (8)
#define CERT_ROOT_PROGRAM_FLAG_LSC (64)
#define CERT_ROOT_PROGRAM_FLAG_ORG (128)
#define CERT_ROOT_PROGRAM_FLAG_OU (16)
#define CERT_ROOT_PROGRAM_FLAG_SUBJECT_LOGO (32)
#define CERT_ROOT_PROGRAM_NAME_CONSTRAINTS_PROP_ID (84)
#define CERT_RSA_PUBLIC_KEY_OBJID szOID_RSA_RSA
#define CERT_SCARD_PIN_ID_PROP_ID (90)
#define CERT_SCARD_PIN_INFO_PROP_ID (91)
#define CERT_SEND_AS_TRUSTED_ISSUER_PROP_ID (102)
#define CERT_SET_KEY_CONTEXT_PROP_ID (1)
#define CERT_SET_KEY_PROV_HANDLE_PROP_ID (1)
#define CERT_SET_PROPERTY_IGNORE_PERSIST_ERROR_FLAG (2147483648u)
#define CERT_SET_PROPERTY_INHIBIT_PERSIST_FLAG (1073741824)
#define CERT_SHA1_HASH_PROP_ID (3)
#define CERT_SIGNATURE_HASH_PROP_ID (15)
#define CERT_SIGN_HASH_CNG_ALG_PROP_ID (89)
#define CERT_SIMPLE_NAME_STR (1)
#define CERT_SMART_CARD_DATA_PROP_ID (16)
#define CERT_SMART_CARD_READER_NON_REMOVABLE_PROP_ID (106)
#define CERT_SMART_CARD_READER_PROP_ID (101)
#define CERT_SMART_CARD_ROOT_INFO_PROP_ID (76)
#define CERT_SOURCE_LOCATION_PROP_ID (72)
#define CERT_SOURCE_URL_PROP_ID (73)
#define CERT_SRV_OCSP_RESP_MAX_BEFORE_NEXT_UPDATE_SECONDS_DEFAULT (14400)
#define CERT_SRV_OCSP_RESP_MAX_BEFORE_NEXT_UPDATE_SECONDS_VALUE_NAME "SrvOcspRespMaxBeforeNextUpdateSeconds"
#define CERT_SRV_OCSP_RESP_MIN_AFTER_NEXT_UPDATE_SECONDS_DEFAULT (60)
#define CERT_SRV_OCSP_RESP_MIN_AFTER_NEXT_UPDATE_SECONDS_VALUE_NAME "SrvOcspRespMinAfterNextUpdateSeconds"
#define CERT_SRV_OCSP_RESP_MIN_BEFORE_NEXT_UPDATE_SECONDS_DEFAULT (120)
#define CERT_SRV_OCSP_RESP_MIN_BEFORE_NEXT_UPDATE_SECONDS_VALUE_NAME "SrvOcspRespMinBeforeNextUpdateSeconds"
#define CERT_SRV_OCSP_RESP_MIN_VALIDITY_SECONDS_DEFAULT (600)
#define CERT_SRV_OCSP_RESP_MIN_VALIDITY_SECONDS_VALUE_NAME "SrvOcspRespMinValiditySeconds"
#define CERT_SRV_OCSP_RESP_URL_RETRIEVAL_TIMEOUT_MILLISECONDS_DEFAULT (15000)
#define CERT_SRV_OCSP_RESP_URL_RETRIEVAL_TIMEOUT_MILLISECONDS_VALUE_NAME "SrvOcspRespUrlRetrievalTimeoutMilliseconds"
#define CERT_STORE_ADD_ALWAYS (4)
#define CERT_STORE_ADD_NEW (1)
#define CERT_STORE_ADD_NEWER (6)
#define CERT_STORE_ADD_NEWER_INHERIT_PROPERTIES (7)
#define CERT_STORE_ADD_REPLACE_EXISTING (3)
#define CERT_STORE_ADD_REPLACE_EXISTING_INHERIT_PROPERTIES (5)
#define CERT_STORE_ADD_USE_EXISTING (2)
#define CERT_STORE_ALL_CONTEXT_FLAG (4294967295ul)
#define CERT_STORE_BACKUP_RESTORE_FLAG (2048)
#define CERT_STORE_BASE_CRL_FLAG (256)
#define CERT_STORE_CERTIFICATE_CONTEXT (1)
#define CERT_STORE_CERTIFICATE_CONTEXT_FLAG (2)
#define CERT_STORE_CREATE_NEW_FLAG (8192)
#define CERT_STORE_CRL_CONTEXT (2)
#define CERT_STORE_CRL_CONTEXT_FLAG (4)
#define CERT_STORE_CTL_CONTEXT (3)
#define CERT_STORE_CTL_CONTEXT_FLAG (8)
#define CERT_STORE_CTRL_AUTO_RESYNC (4)
#define CERT_STORE_CTRL_CANCEL_NOTIFY (5)
#define CERT_STORE_CTRL_COMMIT (3)
#define CERT_STORE_CTRL_COMMIT_CLEAR_FLAG (2)
#define CERT_STORE_CTRL_COMMIT_FORCE_FLAG (1)
#define CERT_STORE_CTRL_INHIBIT_DUPLICATE_HANDLE_FLAG (1)
#define CERT_STORE_CTRL_NOTIFY_CHANGE (2)
#define CERT_STORE_CTRL_RESYNC (1)
#define CERT_STORE_DEFER_CLOSE_UNTIL_LAST_FREE_FLAG (4)
#define CERT_STORE_DELETE_FLAG (16)
#define CERT_STORE_DELTA_CRL_FLAG (512)
#define CERT_STORE_ENUM_ARCHIVED_FLAG (512)
#define CERT_STORE_LOCALIZED_NAME_PROP_ID (4096)
#define CERT_STORE_MANIFOLD_FLAG (256)
#define CERT_STORE_MAXIMUM_ALLOWED_FLAG (4096)
#define CERT_STORE_NO_CRL_FLAG (65536)
#define CERT_STORE_NO_CRYPT_RELEASE_FLAG (1)
#define CERT_STORE_NO_ISSUER_FLAG (131072)
#define CERT_STORE_OPEN_EXISTING_FLAG (16384)
#define CERT_STORE_PROV_CLOSE_FUNC (0)
#define CERT_STORE_PROV_COLLECTION ( ( LPCSTR ) 11 )
#define CERT_STORE_PROV_CONTROL_FUNC (13)
#define CERT_STORE_PROV_DELETED_FLAG (2)
#define CERT_STORE_PROV_DELETE_CERT_FUNC (3)
#define CERT_STORE_PROV_DELETE_CRL_FUNC (7)
#define CERT_STORE_PROV_DELETE_CTL_FUNC (11)
#define CERT_STORE_PROV_EXTERNAL_FLAG (1)
#define CERT_STORE_PROV_FILE ( ( LPCSTR ) 3 )
#define CERT_STORE_PROV_FILENAME CERT_STORE_PROV_FILENAME_W
#define CERT_STORE_PROV_FILENAME_A ( ( LPCSTR ) 7 )
#define CERT_STORE_PROV_FILENAME_W ( ( LPCSTR ) 8 )
#define CERT_STORE_PROV_FIND_CERT_FUNC (14)
#define CERT_STORE_PROV_FIND_CRL_FUNC (17)
#define CERT_STORE_PROV_FIND_CTL_FUNC (20)
#define CERT_STORE_PROV_FREE_FIND_CERT_FUNC (15)
#define CERT_STORE_PROV_FREE_FIND_CRL_FUNC (18)
#define CERT_STORE_PROV_FREE_FIND_CTL_FUNC (21)
#define CERT_STORE_PROV_GET_CERT_PROPERTY_FUNC (16)
#define CERT_STORE_PROV_GET_CRL_PROPERTY_FUNC (19)
#define CERT_STORE_PROV_GET_CTL_PROPERTY_FUNC (22)
#define CERT_STORE_PROV_GP_SYSTEM_STORE_FLAG (32)
#define CERT_STORE_PROV_LDAP CERT_STORE_PROV_LDAP_W
#define CERT_STORE_PROV_LDAP_W ( ( LPCSTR ) 16 )
#define CERT_STORE_PROV_LM_SYSTEM_STORE_FLAG (16)
#define CERT_STORE_PROV_MEMORY ( ( LPCSTR ) 2 )
#define CERT_STORE_PROV_MSG ( ( LPCSTR ) 1 )
#define CERT_STORE_PROV_NO_PERSIST_FLAG (4)
#define CERT_STORE_PROV_PHYSICAL CERT_STORE_PROV_PHYSICAL_W
#define CERT_STORE_PROV_PHYSICAL_W ( ( LPCSTR ) 14 )
#define CERT_STORE_PROV_PKCS12 ( ( LPCSTR ) 17 )
#define CERT_STORE_PROV_PKCS7 ( ( LPCSTR ) 5 )
#define CERT_STORE_PROV_READ_CERT_FUNC (1)
#define CERT_STORE_PROV_READ_CRL_FUNC (5)
#define CERT_STORE_PROV_READ_CTL_FUNC (9)
#define CERT_STORE_PROV_REG ( ( LPCSTR ) 4 )
#define CERT_STORE_PROV_SERIALIZED ( ( LPCSTR ) 6 )
#define CERT_STORE_PROV_SET_CERT_PROPERTY_FUNC (4)
#define CERT_STORE_PROV_SET_CRL_PROPERTY_FUNC (8)
#define CERT_STORE_PROV_SET_CTL_PROPERTY_FUNC (12)
#define CERT_STORE_PROV_SHARED_USER_FLAG (64)
#define CERT_STORE_PROV_SMART_CARD CERT_STORE_PROV_SMART_CARD_W
#define CERT_STORE_PROV_SMART_CARD_W ( ( LPCSTR ) 15 )
#define CERT_STORE_PROV_SYSTEM CERT_STORE_PROV_SYSTEM_W
#define CERT_STORE_PROV_SYSTEM_A ( ( LPCSTR ) 9 )
#define CERT_STORE_PROV_SYSTEM_REGISTRY CERT_STORE_PROV_SYSTEM_REGISTRY_W
#define CERT_STORE_PROV_SYSTEM_REGISTRY_A ( ( LPCSTR ) 12 )
#define CERT_STORE_PROV_SYSTEM_REGISTRY_W ( ( LPCSTR ) 13 )
#define CERT_STORE_PROV_SYSTEM_STORE_FLAG (8)
#define CERT_STORE_PROV_SYSTEM_W ( ( LPCSTR ) 10 )
#define CERT_STORE_PROV_WRITE_ADD_FLAG (1)
#define CERT_STORE_PROV_WRITE_CERT_FUNC (2)
#define CERT_STORE_PROV_WRITE_CRL_FUNC (6)
#define CERT_STORE_PROV_WRITE_CTL_FUNC (10)
#define CERT_STORE_READONLY_FLAG (32768)
#define CERT_STORE_REVOCATION_FLAG (4)
#define CERT_STORE_SAVE_AS_PKCS12 (3)
#define CERT_STORE_SAVE_AS_PKCS7 (2)
#define CERT_STORE_SAVE_AS_STORE (1)
#define CERT_STORE_SAVE_TO_FILE (1)
#define CERT_STORE_SAVE_TO_FILENAME CERT_STORE_SAVE_TO_FILENAME_W
#define CERT_STORE_SAVE_TO_FILENAME_A (3)
#define CERT_STORE_SAVE_TO_FILENAME_W (4)
#define CERT_STORE_SAVE_TO_MEMORY (2)
#define CERT_STORE_SET_LOCALIZED_NAME_FLAG (2)
#define CERT_STORE_SHARE_CONTEXT_FLAG (128)
#define CERT_STORE_SHARE_STORE_FLAG (64)
#define CERT_STORE_SIGNATURE_FLAG (1)
#define CERT_STORE_TIME_VALIDITY_FLAG (2)
#define CERT_STORE_UNSAFE_PHYSICAL_FLAG (32)
#define CERT_STORE_UPDATE_KEYID_FLAG (1024)
#define CERT_STRONG_KEY_PARA_OS_1 { sizeof ( CERT_STRONG_SIGN_PARA ) , CERT_STRONG_SIGN_OID_INFO_CHOICE , szOID_CERT_STRONG_KEY_OS_1 }
#define CERT_STRONG_KEY_PARA_OS_CURRENT { sizeof ( CERT_STRONG_SIGN_PARA ) , CERT_STRONG_SIGN_OID_INFO_CHOICE , szOID_CERT_STRONG_KEY_OS_CURRENT }
#define CERT_STRONG_SIGN_ECDSA_ALGORITHM "ECDSA"
#define CERT_STRONG_SIGN_ENABLE_CRL_CHECK (1)
#define CERT_STRONG_SIGN_ENABLE_OCSP_CHECK (2)
#define CERT_STRONG_SIGN_OID_INFO_CHOICE (2)
#define CERT_STRONG_SIGN_PARA_OS_1 { sizeof ( CERT_STRONG_SIGN_PARA ) , CERT_STRONG_SIGN_OID_INFO_CHOICE , szOID_CERT_STRONG_SIGN_OS_1 }
#define CERT_STRONG_SIGN_PARA_OS_CURRENT { sizeof ( CERT_STRONG_SIGN_PARA ) , CERT_STRONG_SIGN_OID_INFO_CHOICE , szOID_CERT_STRONG_SIGN_OS_CURRENT }
#define CERT_STRONG_SIGN_SERIALIZED_INFO_CHOICE (1)
#define CERT_SUBJECT_DISABLE_CRL_PROP_ID (86)
#define CERT_SUBJECT_INFO_ACCESS_PROP_ID (80)
#define CERT_SUBJECT_NAME_MD5_HASH_PROP_ID (29)
#define CERT_SUBJECT_OCSP_AUTHORITY_INFO_ACCESS_PROP_ID (85)
#define CERT_SUBJECT_PUBLIC_KEY_MD5_HASH_PROP_ID (25)
#define CERT_SUBJECT_PUB_KEY_BIT_LENGTH_PROP_ID (92)
#define CERT_SYSTEM_STORE_CURRENT_SERVICE (262144)
#define CERT_SYSTEM_STORE_CURRENT_SERVICE_ID (4)
#define CERT_SYSTEM_STORE_CURRENT_USER (65536)
#define CERT_SYSTEM_STORE_CURRENT_USER_GROUP_POLICY (458752)
#define CERT_SYSTEM_STORE_CURRENT_USER_GROUP_POLICY_ID (7)
#define CERT_SYSTEM_STORE_CURRENT_USER_ID (1)
#define CERT_SYSTEM_STORE_DEFER_READ_FLAG (536870912)
#define CERT_SYSTEM_STORE_LOCAL_MACHINE (131072)
#define CERT_SYSTEM_STORE_LOCAL_MACHINE_ENTERPRISE (589824)
#define CERT_SYSTEM_STORE_LOCAL_MACHINE_ENTERPRISE_ID (9)
#define CERT_SYSTEM_STORE_LOCAL_MACHINE_GROUP_POLICY (524288)
#define CERT_SYSTEM_STORE_LOCAL_MACHINE_GROUP_POLICY_ID (8)
#define CERT_SYSTEM_STORE_LOCAL_MACHINE_ID (2)
#define CERT_SYSTEM_STORE_LOCATION_MASK (16711680)
#define CERT_SYSTEM_STORE_LOCATION_SHIFT (16)
#define CERT_SYSTEM_STORE_MASK (4294901760u)
#define CERT_SYSTEM_STORE_RELOCATE_FLAG (2147483648u)
#define CERT_SYSTEM_STORE_SERVICES (327680)
#define CERT_SYSTEM_STORE_SERVICES_ID (5)
#define CERT_SYSTEM_STORE_UNPROTECTED_FLAG (1073741824)
#define CERT_SYSTEM_STORE_USERS (393216)
#define CERT_SYSTEM_STORE_USERS_ID (6)
#define CERT_TRUST_AUTO_UPDATE_CA_REVOCATION (16)
#define CERT_TRUST_AUTO_UPDATE_END_REVOCATION (32)
#define CERT_TRUST_CTL_IS_NOT_SIGNATURE_VALID (262144)
#define CERT_TRUST_CTL_IS_NOT_TIME_VALID (131072)
#define CERT_TRUST_CTL_IS_NOT_VALID_FOR_USAGE (524288)
#define CERT_TRUST_HAS_CRL_VALIDITY_EXTENDED (4096)
#define CERT_TRUST_HAS_EXACT_MATCH_ISSUER (1)
#define CERT_TRUST_HAS_EXCLUDED_NAME_CONSTRAINT (32768)
#define CERT_TRUST_HAS_ISSUANCE_CHAIN_POLICY (512)
#define CERT_TRUST_HAS_KEY_MATCH_ISSUER (2)
#define CERT_TRUST_HAS_NAME_MATCH_ISSUER (4)
#define CERT_TRUST_HAS_NOT_DEFINED_NAME_CONSTRAINT (8192)
#define CERT_TRUST_HAS_NOT_PERMITTED_NAME_CONSTRAINT (16384)
#define CERT_TRUST_HAS_NOT_SUPPORTED_CRITICAL_EXT (134217728)
#define CERT_TRUST_HAS_NOT_SUPPORTED_NAME_CONSTRAINT (4096)
#define CERT_TRUST_HAS_PREFERRED_ISSUER (256)
#define CERT_TRUST_HAS_VALID_NAME_CONSTRAINTS (1024)
#define CERT_TRUST_HAS_WEAK_SIGNATURE (1048576)
#define CERT_TRUST_INVALID_BASIC_CONSTRAINTS (1024)
#define CERT_TRUST_INVALID_EXTENSION (256)
#define CERT_TRUST_INVALID_NAME_CONSTRAINTS (2048)
#define CERT_TRUST_INVALID_POLICY_CONSTRAINTS (512)
#define CERT_TRUST_IS_COMPLEX_CHAIN (65536)
#define CERT_TRUST_IS_CYCLIC (128)
#define CERT_TRUST_IS_EXPLICIT_DISTRUST (67108864)
#define CERT_TRUST_IS_FROM_EXCLUSIVE_TRUST_STORE (8192)
#define CERT_TRUST_IS_NOT_SIGNATURE_VALID (8)
#define CERT_TRUST_IS_NOT_TIME_NESTED (2)
#define CERT_TRUST_IS_NOT_TIME_VALID (1)
#define CERT_TRUST_IS_NOT_VALID_FOR_USAGE (16)
#define CERT_TRUST_IS_OFFLINE_REVOCATION (16777216)
#define CERT_TRUST_IS_PARTIAL_CHAIN (65536)
#define CERT_TRUST_IS_PEER_TRUSTED (2048)
#define CERT_TRUST_IS_REVOKED (4)
#define CERT_TRUST_IS_SELF_SIGNED (8)
#define CERT_TRUST_IS_UNTRUSTED_ROOT (32)
#define CERT_TRUST_NO_ERROR (0)
#define CERT_TRUST_NO_ISSUANCE_CHAIN_POLICY (33554432)
#define CERT_TRUST_NO_OCSP_FAILOVER_TO_CRL (64)
#define CERT_TRUST_PUB_ALLOW_END_USER_TRUST (0)
#define CERT_TRUST_PUB_ALLOW_ENTERPRISE_ADMIN_TRUST (2)
#define CERT_TRUST_PUB_ALLOW_MACHINE_ADMIN_TRUST (1)
#define CERT_TRUST_PUB_ALLOW_TRUST_MASK (3)
#define CERT_TRUST_PUB_AUTHENTICODE_FLAGS_VALUE_NAME "AuthenticodeFlags"
#define CERT_TRUST_PUB_CHECK_PUBLISHER_REV_FLAG (256)
#define CERT_TRUST_PUB_CHECK_TIMESTAMP_REV_FLAG (512)
#define CERT_TRUST_PUB_SAFER_GROUP_POLICY_REGPATH CERT_GROUP_POLICY_SYSTEM_STORE_REGPATH L"\\TrustedPublisher\\Safer"
#define CERT_TRUST_PUB_SAFER_LOCAL_MACHINE_REGPATH CERT_LOCAL_MACHINE_SYSTEM_STORE_REGPATH L"\\TrustedPublisher\\Safer"
#define CERT_TRUST_REVOCATION_STATUS_UNKNOWN (64)
#define CERT_UNICODE_ATTR_ERR_INDEX_MASK (63)
#define CERT_UNICODE_ATTR_ERR_INDEX_SHIFT (16)
#define CERT_UNICODE_IS_RDN_ATTRS_FLAG (1)
#define CERT_UNICODE_RDN_ERR_INDEX_MASK (1023)
#define CERT_UNICODE_RDN_ERR_INDEX_SHIFT (22)
#define CERT_UNICODE_VALUE_ERR_INDEX_MASK (65535)
#define CERT_UNICODE_VALUE_ERR_INDEX_SHIFT (0)
#define CERT_V1 (0)
#define CERT_V2 (1)
#define CERT_V3 (2)
#define CERT_VERIFY_ALLOW_MORE_USAGE_FLAG (8)
#define CERT_VERIFY_CACHE_ONLY_BASED_REVOCATION (2)
#define CERT_VERIFY_INHIBIT_CTL_UPDATE_FLAG (1)
#define CERT_VERIFY_NO_TIME_CHECK_FLAG (4)
#define CERT_VERIFY_REV_ACCUMULATIVE_TIMEOUT_FLAG (4)
#define CERT_VERIFY_REV_CHAIN_FLAG (1)
#define CERT_VERIFY_REV_NO_OCSP_FAILOVER_TO_CRL_FLAG (16)
#define CERT_VERIFY_REV_SERVER_OCSP_FLAG (8)
#define CERT_VERIFY_TRUSTED_SIGNERS_FLAG (2)
#define CERT_VERIFY_UPDATED_CTL_FLAG (1)
#define CERT_X500_NAME_STR (3)
#define CERT_XML_NAME_STR (4)
#define CE_BREAK (16)
#define CE_DNS (2048)
#define CE_FRAME (8)
#define CE_IOE (1024)
#define CE_MODE (32768)
#define CE_OOP (4096)
#define CE_OVERRUN (2)
#define CE_PTO (512)
#define CE_RXOVER (1)
#define CE_RXPARITY (4)
#define CE_TXFULL (256)
#define CFSEPCHAR (43)
#define CFS_CANDIDATEPOS (64)
#define CFS_DEFAULT (0)
#define CFS_EXCLUDE (128)
#define CFS_FORCE_POSITION (32)
#define CFS_POINT (2)
#define CFS_RECT (1)
#define CF_ANSIONLY __MSABI_LONG ( 0x400 )
#define CF_APPLY __MSABI_LONG ( 0x200 )
#define CF_BITMAP (2)
#define CF_BOTH (3)
#define CF_DIB (8)
#define CF_DIBV5 (17)
#define CF_DIF (5)
#define CF_DSPBITMAP (130)
#define CF_DSPENHMETAFILE (142)
#define CF_DSPMETAFILEPICT (131)
#define CF_DSPTEXT (129)
#define CF_EFFECTS __MSABI_LONG ( 0x100 )
#define CF_ENABLEHOOK __MSABI_LONG ( 0x8 )
#define CF_ENABLETEMPLATE __MSABI_LONG ( 0x10 )
#define CF_ENABLETEMPLATEHANDLE __MSABI_LONG ( 0x20 )
#define CF_ENHMETAFILE (14)
#define CF_FIXEDPITCHONLY __MSABI_LONG ( 0x4000 )
#define CF_FORCEFONTEXIST __MSABI_LONG ( 0x10000 )
#define CF_GDIOBJFIRST (768)
#define CF_GDIOBJLAST (1023)
#define CF_HDROP (15)
#define CF_INITTOLOGFONTSTRUCT __MSABI_LONG ( 0x40 )
#define CF_LIMITSIZE __MSABI_LONG ( 0x2000 )
#define CF_LOCALE (16)
#define CF_MAX (18)
#define CF_METAFILEPICT (3)
#define CF_NOFACESEL __MSABI_LONG ( 0x80000 )
#define CF_NOOEMFONTS CF_NOVECTORFONTS
#define CF_NOSCRIPTSEL __MSABI_LONG ( 0x800000 )
#define CF_NOSIMULATIONS __MSABI_LONG ( 0x1000 )
#define CF_NOSIZESEL __MSABI_LONG ( 0x200000 )
#define CF_NOSTYLESEL __MSABI_LONG ( 0x100000 )
#define CF_NOVECTORFONTS __MSABI_LONG ( 0x800 )
#define CF_NOVERTFONTS __MSABI_LONG ( 0x1000000 )
#define CF_OEMTEXT (7)
#define CF_OWNERDISPLAY (128)
#define CF_PALETTE (9)
#define CF_PENDATA (10)
#define CF_PRINTERFONTS (2)
#define CF_PRIVATEFIRST (512)
#define CF_PRIVATELAST (767)
#define CF_RIFF (11)
#define CF_SCALABLEONLY __MSABI_LONG ( 0x20000 )
#define CF_SCREENFONTS (1)
#define CF_SCRIPTSONLY CF_ANSIONLY
#define CF_SELECTSCRIPT __MSABI_LONG ( 0x400000 )
#define CF_SHOWHELP __MSABI_LONG ( 0x4 )
#define CF_SYLK (4)
#define CF_TEXT (1)
#define CF_TIFF (6)
#define CF_TTONLY __MSABI_LONG ( 0x40000 )
#define CF_UNICODETEXT (13)
#define CF_USESTYLE __MSABI_LONG ( 0x80 )
#define CF_WAVE (12)
#define CF_WYSIWYG __MSABI_LONG ( 0x8000 )
#define CHANGER_BAR_CODE_SCANNER_INSTALLED (1)
#define CHANGER_CARTRIDGE_MAGAZINE (256)
#define CHANGER_CLEANER_ACCESS_NOT_VALID (262144)
#define CHANGER_CLEANER_AUTODISMOUNT (2147483652u)
#define CHANGER_CLEANER_OPS_NOT_SUPPORTED (2147483712u)
#define CHANGER_CLEANER_SLOT (64)
#define CHANGER_CLOSE_IEPORT (4)
#define CHANGER_DEVICE_REINITIALIZE_CAPABLE (134217728)
#define CHANGER_DRIVE_CLEANING_REQUIRED (65536)
#define CHANGER_DRIVE_EMPTY_ON_DOOR_ACCESS (536870912)
#define CHANGER_EXCHANGE_MEDIA (32)
#define CHANGER_IEPORT_USER_CONTROL_CLOSE (2147483904u)
#define CHANGER_IEPORT_USER_CONTROL_OPEN (2147483776u)
#define CHANGER_INIT_ELEM_STAT_WITH_RANGE (2)
#define CHANGER_KEYPAD_ENABLE_DISABLE (268435456)
#define CHANGER_LOCK_UNLOCK (128)
#define CHANGER_MEDIUM_FLIP (512)
#define CHANGER_MOVE_EXTENDS_IEPORT (2147484160u)
#define CHANGER_MOVE_RETRACTS_IEPORT (2147484672u)
#define CHANGER_OPEN_IEPORT (8)
#define CHANGER_POSITION_TO_ELEMENT (1024)
#define CHANGER_PREDISMOUNT_ALIGN_TO_DRIVE (2147483650u)
#define CHANGER_PREDISMOUNT_ALIGN_TO_SLOT (2147483649u)
#define CHANGER_PREDISMOUNT_EJECT_REQUIRED (131072)
#define CHANGER_PREMOUNT_EJECT_REQUIRED (524288)
#define CHANGER_REPORT_IEPORT_STATE (2048)
#define CHANGER_RESERVED_BIT (2147483648u)
#define CHANGER_RTN_MEDIA_TO_ORIGINAL_ADDR (2147483680u)
#define CHANGER_SERIAL_NUMBER_VALID (67108864)
#define CHANGER_SLOTS_USE_TRAYS (2147483664u)
#define CHANGER_STATUS_NON_VOLATILE (16)
#define CHANGER_STORAGE_DRIVE (4096)
#define CHANGER_STORAGE_IEPORT (8192)
#define CHANGER_STORAGE_SLOT (16384)
#define CHANGER_STORAGE_TRANSPORT (32768)
#define CHANGER_TO_DRIVE (8)
#define CHANGER_TO_IEPORT (4)
#define CHANGER_TO_SLOT (2)
#define CHANGER_TO_TRANSPORT (1)
#define CHANGER_TRUE_EXCHANGE_CAPABLE (2147483656u)
#define CHANGER_VOLUME_ASSERT (4194304)
#define CHANGER_VOLUME_IDENTIFICATION (1048576)
#define CHANGER_VOLUME_REPLACE (8388608)
#define CHANGER_VOLUME_SEARCH (2097152)
#define CHANGER_VOLUME_UNDEFINE (16777216)
#define CHECKJPEGFORMAT (4119)
#define CHECKPNGFORMAT (4120)
#define CHILDID_SELF (0)
#define CHINESEBIG5_CHARSET (136)
#define CLAIM_SECURITY_ATTRIBUTES_INFORMATION_VERSION CLAIM_SECURITY_ATTRIBUTES_INFORMATION_VERSION_V1
#define CLAIM_SECURITY_ATTRIBUTES_INFORMATION_VERSION_V1 (1)
#define CLAIM_SECURITY_ATTRIBUTE_CUSTOM_FLAGS (4294901760u)
#define CLAIM_SECURITY_ATTRIBUTE_DISABLED (16)
#define CLAIM_SECURITY_ATTRIBUTE_DISABLED_BY_DEFAULT (8)
#define CLAIM_SECURITY_ATTRIBUTE_MANDATORY (32)
#define CLAIM_SECURITY_ATTRIBUTE_NON_INHERITABLE (1)
#define CLAIM_SECURITY_ATTRIBUTE_TYPE_BOOLEAN (6)
#define CLAIM_SECURITY_ATTRIBUTE_TYPE_FQBN (4)
#define CLAIM_SECURITY_ATTRIBUTE_TYPE_INT64 (1)
#define CLAIM_SECURITY_ATTRIBUTE_TYPE_INVALID (0)
#define CLAIM_SECURITY_ATTRIBUTE_TYPE_OCTET_STRING (16)
#define CLAIM_SECURITY_ATTRIBUTE_TYPE_SID (5)
#define CLAIM_SECURITY_ATTRIBUTE_TYPE_STRING (3)
#define CLAIM_SECURITY_ATTRIBUTE_TYPE_UINT64 (2)
#define CLAIM_SECURITY_ATTRIBUTE_USE_FOR_DENY_ONLY (4)
#define CLAIM_SECURITY_ATTRIBUTE_VALID_FLAGS (63)
#define CLAIM_SECURITY_ATTRIBUTE_VALUE_CASE_SENSITIVE (2)
#define CLASSFACTORY_E_FIRST __MSABI_LONG ( 0x80040110 )
#define CLASSFACTORY_E_LAST __MSABI_LONG ( 0x8004011F )
#define CLASSFACTORY_S_FIRST __MSABI_LONG ( 0x00040110 )
#define CLASSFACTORY_S_LAST __MSABI_LONG ( 0x0004011F )
#define CLASS_E_CLASSNOTAVAILABLE _HRESULT_TYPEDEF_ ( 0x80040111 )
#define CLASS_E_NOAGGREGATION _HRESULT_TYPEDEF_ ( 0x80040110 )
#define CLASS_E_NOTLICENSED _HRESULT_TYPEDEF_ ( 0x80040112 )
#define CLEARTYPE_NATURAL_QUALITY (6)
#define CLEARTYPE_QUALITY (5)
#define CLIENTSITE_E_FIRST __MSABI_LONG ( 0x80040190 )
#define CLIENTSITE_E_LAST __MSABI_LONG ( 0x8004019F )
#define CLIENTSITE_S_FIRST __MSABI_LONG ( 0x00040190 )
#define CLIENTSITE_S_LAST __MSABI_LONG ( 0x0004019F )
#define CLIPBRD_E_BAD_DATA _HRESULT_TYPEDEF_ ( 0x800401D3 )
#define CLIPBRD_E_CANT_CLOSE _HRESULT_TYPEDEF_ ( 0x800401D4 )
#define CLIPBRD_E_CANT_EMPTY _HRESULT_TYPEDEF_ ( 0x800401D1 )
#define CLIPBRD_E_CANT_OPEN _HRESULT_TYPEDEF_ ( 0x800401D0 )
#define CLIPBRD_E_CANT_SET _HRESULT_TYPEDEF_ ( 0x800401D2 )
#define CLIPBRD_E_FIRST __MSABI_LONG ( 0x800401D0 )
#define CLIPBRD_E_LAST __MSABI_LONG ( 0x800401DF )
#define CLIPBRD_S_FIRST __MSABI_LONG ( 0x000401D0 )
#define CLIPBRD_S_LAST __MSABI_LONG ( 0x000401DF )
#define CLIPCAPS (36)
#define CLIP_CHARACTER_PRECIS (1)
#define CLIP_DEFAULT_PRECIS (0)
#define CLIP_EMBEDDED (128)
#define CLIP_LH_ANGLES (16)
#define CLIP_MASK (15)
#define CLIP_STROKE_PRECIS (2)
#define CLIP_TO_PATH (4097)
#define CLIP_TT_ALWAYS (32)
#define CLOSECHANNEL (4112)
#define CLRBREAK (9)
#define CLRDTR (6)
#define CLRRTS (4)
#define CLR_INVALID (4294967295u)
#define CLSCTX_VALID_MASK (0)
#define CLSID_DEFINED 
#define CLSID_NULL GUID_NULL
#define CMC_ADD_ATTRIBUTES ( ( LPCSTR ) 63 )
#define CMC_ADD_EXTENSIONS ( ( LPCSTR ) 62 )
#define CMC_DATA ( ( LPCSTR ) 59 )
#define CMC_FAIL_BAD_ALG (0)
#define CMC_FAIL_BAD_CERT_ID (4)
#define CMC_FAIL_BAD_IDENTITY (7)
#define CMC_FAIL_BAD_MESSAGE_CHECK (1)
#define CMC_FAIL_BAD_REQUEST (2)
#define CMC_FAIL_BAD_TIME (3)
#define CMC_FAIL_INTERNAL_CA_ERROR (11)
#define CMC_FAIL_MUST_ARCHIVE_KEYS (6)
#define CMC_FAIL_NO_KEY_REUSE (10)
#define CMC_FAIL_POP_FAILED (9)
#define CMC_FAIL_POP_REQUIRED (8)
#define CMC_FAIL_TRY_LATER (12)
#define CMC_FAIL_UNSUPORTED_EXT (5)
#define CMC_OTHER_INFO_FAIL_CHOICE (1)
#define CMC_OTHER_INFO_NO_CHOICE (0)
#define CMC_OTHER_INFO_PEND_CHOICE (2)
#define CMC_RESPONSE ( ( LPCSTR ) 60 )
#define CMC_STATUS ( ( LPCSTR ) 61 )
#define CMC_STATUS_CONFIRM_REQUIRED (5)
#define CMC_STATUS_FAILED (2)
#define CMC_STATUS_NO_SUPPORT (4)
#define CMC_STATUS_PENDING (3)
#define CMC_STATUS_SUCCESS (0)
#define CMC_TAGGED_CERT_REQUEST_CHOICE (1)
#define CMSG_ALL_FLAGS (4294967295ul)
#define CMSG_ATTR_CERT_COUNT_PARAM (31)
#define CMSG_ATTR_CERT_PARAM (32)
#define CMSG_AUTHENTICATED_ATTRIBUTES_FLAG (8)
#define CMSG_BARE_CONTENT_FLAG (1)
#define CMSG_BARE_CONTENT_PARAM (3)
#define CMSG_CERT_COUNT_PARAM (11)
#define CMSG_CERT_PARAM (12)
#define CMSG_CMS_ENCAPSULATED_CONTENT_FLAG (64)
#define CMSG_CMS_ENCAPSULATED_CTL_FLAG (32768)
#define CMSG_CMS_RECIPIENT_COUNT_PARAM (33)
#define CMSG_CMS_RECIPIENT_ENCRYPTED_KEY_INDEX_PARAM (35)
#define CMSG_CMS_RECIPIENT_INDEX_PARAM (34)
#define CMSG_CMS_RECIPIENT_INFO_PARAM (36)
#define CMSG_CMS_SIGNER_INFO_PARAM (39)
#define CMSG_COMPUTED_HASH_PARAM (22)
#define CMSG_CONTENTS_OCTETS_FLAG (16)
#define CMSG_CONTENT_ENCRYPT_FREE_OBJID_FLAG (2)
#define CMSG_CONTENT_ENCRYPT_FREE_PARA_FLAG (1)
#define CMSG_CONTENT_ENCRYPT_PAD_ENCODED_LEN_FLAG (1)
#define CMSG_CONTENT_ENCRYPT_RELEASE_CONTEXT_FLAG (32768)
#define CMSG_CONTENT_PARAM (2)
#define CMSG_CRL_COUNT_PARAM (13)
#define CMSG_CRL_PARAM (14)
#define CMSG_CRYPT_RELEASE_CONTEXT_FLAG (32768)
#define CMSG_CTRL_ADD_ATTR_CERT (14)
#define CMSG_CTRL_ADD_CERT (10)
#define CMSG_CTRL_ADD_CMS_SIGNER_INFO (20)
#define CMSG_CTRL_ADD_CRL (12)
#define CMSG_CTRL_ADD_SIGNER (6)
#define CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR (8)
#define CMSG_CTRL_DECRYPT (2)
#define CMSG_CTRL_DEL_ATTR_CERT (15)
#define CMSG_CTRL_DEL_CERT (11)
#define CMSG_CTRL_DEL_CRL (13)
#define CMSG_CTRL_DEL_SIGNER (7)
#define CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR (9)
#define CMSG_CTRL_ENABLE_STRONG_SIGNATURE (21)
#define CMSG_CTRL_KEY_AGREE_DECRYPT (17)
#define CMSG_CTRL_KEY_TRANS_DECRYPT (16)
#define CMSG_CTRL_MAIL_LIST_DECRYPT (18)
#define CMSG_CTRL_VERIFY_HASH (5)
#define CMSG_CTRL_VERIFY_SIGNATURE (1)
#define CMSG_CTRL_VERIFY_SIGNATURE_EX (19)
#define CMSG_DATA (1)
#define CMSG_DATA_FLAG (2)
#define CMSG_DEFAULT_INSTALLABLE_FUNC_OID ( ( LPCSTR ) 1 )
#define CMSG_DETACHED_FLAG (4)
#define CMSG_ENCODED_MESSAGE (29)
#define CMSG_ENCODED_SIGNER (28)
#define CMSG_ENCODE_HASHED_SUBJECT_IDENTIFIER_FLAG (2)
#define CMSG_ENCODE_SORTED_CTL_FLAG (1)
#define CMSG_ENCODING_TYPE_MASK (4294901760u)
#define CMSG_ENCRYPTED (6)
#define CMSG_ENCRYPTED_DIGEST (27)
#define CMSG_ENCRYPTED_FLAG (64)
#define CMSG_ENCRYPT_PARAM (26)
#define CMSG_ENVELOPED (3)
#define CMSG_ENVELOPED_DATA_CMS_VERSION CMSG_ENVELOPED_DATA_V2
#define CMSG_ENVELOPED_DATA_PKCS_1_5_VERSION CMSG_ENVELOPED_DATA_V0
#define CMSG_ENVELOPED_DATA_V0 (0)
#define CMSG_ENVELOPED_DATA_V2 (2)
#define CMSG_ENVELOPED_FLAG (8)
#define CMSG_ENVELOPED_RECIPIENT_V0 (0)
#define CMSG_ENVELOPED_RECIPIENT_V2 (2)
#define CMSG_ENVELOPED_RECIPIENT_V3 (3)
#define CMSG_ENVELOPED_RECIPIENT_V4 (4)
#define CMSG_ENVELOPE_ALGORITHM_PARAM (15)
#define CMSG_HASHED (5)
#define CMSG_HASHED_DATA_CMS_VERSION CMSG_HASHED_DATA_V2
#define CMSG_HASHED_DATA_PKCS_1_5_VERSION CMSG_HASHED_DATA_V0
#define CMSG_HASHED_DATA_V0 (0)
#define CMSG_HASHED_DATA_V2 (2)
#define CMSG_HASHED_FLAG (32)
#define CMSG_HASH_ALGORITHM_PARAM (20)
#define CMSG_HASH_DATA_PARAM (21)
#define CMSG_INDEFINITE_LENGTH (4294967295u)
#define CMSG_INNER_CONTENT_TYPE_PARAM (4)
#define CMSG_KEY_AGREE_ENCRYPT_FREE_MATERIAL_FLAG (2)
#define CMSG_KEY_AGREE_ENCRYPT_FREE_OBJID_FLAG (32)
#define CMSG_KEY_AGREE_ENCRYPT_FREE_PARA_FLAG (1)
#define CMSG_KEY_AGREE_ENCRYPT_FREE_PUBKEY_ALG_FLAG (4)
#define CMSG_KEY_AGREE_ENCRYPT_FREE_PUBKEY_BITS_FLAG (16)
#define CMSG_KEY_AGREE_ENCRYPT_FREE_PUBKEY_PARA_FLAG (8)
#define CMSG_KEY_AGREE_EPHEMERAL_KEY_CHOICE (1)
#define CMSG_KEY_AGREE_ORIGINATOR_CERT (1)
#define CMSG_KEY_AGREE_ORIGINATOR_PUBLIC_KEY (2)
#define CMSG_KEY_AGREE_RECIPIENT (2)
#define CMSG_KEY_AGREE_STATIC_KEY_CHOICE (2)
#define CMSG_KEY_AGREE_VERSION CMSG_ENVELOPED_RECIPIENT_V3
#define CMSG_KEY_TRANS_CMS_VERSION CMSG_ENVELOPED_RECIPIENT_V2
#define CMSG_KEY_TRANS_ENCRYPT_FREE_OBJID_FLAG (2)
#define CMSG_KEY_TRANS_ENCRYPT_FREE_PARA_FLAG (1)
#define CMSG_KEY_TRANS_PKCS_1_5_VERSION CMSG_ENVELOPED_RECIPIENT_V0
#define CMSG_KEY_TRANS_RECIPIENT (1)
#define CMSG_LENGTH_ONLY_FLAG (2)
#define CMSG_MAIL_LIST_ENCRYPT_FREE_OBJID_FLAG (2)
#define CMSG_MAIL_LIST_ENCRYPT_FREE_PARA_FLAG (1)
#define CMSG_MAIL_LIST_HANDLE_KEY_CHOICE (1)
#define CMSG_MAIL_LIST_RECIPIENT (3)
#define CMSG_MAIL_LIST_VERSION CMSG_ENVELOPED_RECIPIENT_V4
#define CMSG_MAX_LENGTH_FLAG (32)
#define CMSG_OID_CAPI1_EXPORT_KEY_AGREE_FUNC CMSG_OID_EXPORT_KEY_AGREE_FUNC
#define CMSG_OID_CAPI1_EXPORT_KEY_TRANS_FUNC CMSG_OID_EXPORT_KEY_TRANS_FUNC
#define CMSG_OID_CAPI1_EXPORT_MAIL_LIST_FUNC CMSG_OID_EXPORT_MAIL_LIST_FUNC
#define CMSG_OID_CAPI1_GEN_CONTENT_ENCRYPT_KEY_FUNC CMSG_OID_GEN_CONTENT_ENCRYPT_KEY_FUNC
#define CMSG_OID_CAPI1_IMPORT_KEY_AGREE_FUNC CMSG_OID_IMPORT_KEY_AGREE_FUNC
#define CMSG_OID_CAPI1_IMPORT_KEY_TRANS_FUNC CMSG_OID_IMPORT_KEY_TRANS_FUNC
#define CMSG_OID_CAPI1_IMPORT_MAIL_LIST_FUNC CMSG_OID_IMPORT_MAIL_LIST_FUNC
#define CMSG_OID_CNG_EXPORT_KEY_AGREE_FUNC "CryptMsgDllCNGExportKeyAgree"
#define CMSG_OID_CNG_EXPORT_KEY_TRANS_FUNC "CryptMsgDllCNGExportKeyTrans"
#define CMSG_OID_CNG_GEN_CONTENT_ENCRYPT_KEY_FUNC "CryptMsgDllCNGGenContentEncryptKey"
#define CMSG_OID_CNG_IMPORT_CONTENT_ENCRYPT_KEY_FUNC "CryptMsgDllCNGImportContentEncryptKey"
#define CMSG_OID_CNG_IMPORT_KEY_AGREE_FUNC "CryptMsgDllCNGImportKeyAgree"
#define CMSG_OID_CNG_IMPORT_KEY_TRANS_FUNC "CryptMsgDllCNGImportKeyTrans"
#define CMSG_OID_EXPORT_ENCRYPT_KEY_FUNC "CryptMsgDllExportEncryptKey"
#define CMSG_OID_EXPORT_KEY_AGREE_FUNC "CryptMsgDllExportKeyAgree"
#define CMSG_OID_EXPORT_KEY_TRANS_FUNC "CryptMsgDllExportKeyTrans"
#define CMSG_OID_EXPORT_MAIL_LIST_FUNC "CryptMsgDllExportMailList"
#define CMSG_OID_GEN_CONTENT_ENCRYPT_KEY_FUNC "CryptMsgDllGenContentEncryptKey"
#define CMSG_OID_GEN_ENCRYPT_KEY_FUNC "CryptMsgDllGenEncryptKey"
#define CMSG_OID_IMPORT_ENCRYPT_KEY_FUNC "CryptMsgDllImportEncryptKey"
#define CMSG_OID_IMPORT_KEY_AGREE_FUNC "CryptMsgDllImportKeyAgree"
#define CMSG_OID_IMPORT_KEY_TRANS_FUNC "CryptMsgDllImportKeyTrans"
#define CMSG_OID_IMPORT_MAIL_LIST_FUNC "CryptMsgDllImportMailList"
#define CMSG_RC4_NO_SALT_FLAG (1073741824)
#define CMSG_RECIPIENT_COUNT_PARAM (17)
#define CMSG_RECIPIENT_INDEX_PARAM (18)
#define CMSG_RECIPIENT_INFO_PARAM (19)
#define CMSG_SIGNED (2)
#define CMSG_SIGNED_AND_ENVELOPED (4)
#define CMSG_SIGNED_AND_ENVELOPED_FLAG (16)
#define CMSG_SIGNED_DATA_CMS_VERSION CMSG_SIGNED_DATA_V3
#define CMSG_SIGNED_DATA_PKCS_1_5_VERSION CMSG_SIGNED_DATA_V1
#define CMSG_SIGNED_DATA_V1 (1)
#define CMSG_SIGNED_DATA_V3 (3)
#define CMSG_SIGNED_FLAG (4)
#define CMSG_SIGNER_AUTH_ATTR_PARAM (9)
#define CMSG_SIGNER_CERT_ID_PARAM (38)
#define CMSG_SIGNER_CERT_INFO_PARAM (7)
#define CMSG_SIGNER_COUNT_PARAM (5)
#define CMSG_SIGNER_HASH_ALGORITHM_PARAM (8)
#define CMSG_SIGNER_INFO_CMS_VERSION CMSG_SIGNER_INFO_V3
#define CMSG_SIGNER_INFO_PARAM (6)
#define CMSG_SIGNER_INFO_PKCS_1_5_VERSION CMSG_SIGNER_INFO_V1
#define CMSG_SIGNER_INFO_V1 (1)
#define CMSG_SIGNER_INFO_V3 (3)
#define CMSG_SIGNER_ONLY_FLAG (2)
#define CMSG_SIGNER_UNAUTH_ATTR_PARAM (10)
#define CMSG_SP3_COMPATIBLE_ENCRYPT_FLAG (2147483648u)
#define CMSG_TRUSTED_SIGNER_FLAG (1)
#define CMSG_TYPE_PARAM (1)
#define CMSG_UNPROTECTED_ATTR_PARAM (37)
#define CMSG_USE_SIGNER_INDEX_FLAG (4)
#define CMSG_VERIFY_COUNTER_SIGN_ENABLE_STRONG_FLAG (1)
#define CMSG_VERIFY_SIGNER_CERT (2)
#define CMSG_VERIFY_SIGNER_CHAIN (3)
#define CMSG_VERIFY_SIGNER_NULL (4)
#define CMSG_VERIFY_SIGNER_PUBKEY (1)
#define CMSG_VERSION_PARAM (30)
#define CMS_SIGNER_INFO ( ( LPCSTR ) 501 )
#define CMYK(c, m, y, k) ( ( COLORREF ) ( ( ( ( BYTE ) ( k ) | ( ( WORD ) ( ( BYTE ) ( y ) ) << 8 ) ) | ( ( ( DWORD ) ( BYTE ) ( m ) ) << 16 ) ) | ( ( ( DWORD ) ( BYTE ) ( c ) ) << 24 ) ) )
#define CM_CMYK_COLOR (4)
#define CM_DEVICE_ICM (1)
#define CM_GAMMA_RAMP (2)
#define CM_IN_GAMUT (0)
#define CM_NONE (0)
#define CM_OUT_OF_GAMUT (255)
#define CM_SERVICE_MEASURED_BOOT_LOAD (32)
#define CM_SERVICE_NETWORK_BOOT_LOAD (1)
#define CM_SERVICE_SD_DISK_BOOT_LOAD (8)
#define CM_SERVICE_USB3_DISK_BOOT_LOAD (16)
#define CM_SERVICE_USB_DISK_BOOT_LOAD (4)
#define CM_SERVICE_VALID_PROMOTION_MASK (255)
#define CM_SERVICE_VERIFIER_BOOT_LOAD (64)
#define CM_SERVICE_VIRTUAL_DISK_BOOT_LOAD (2)
#define CM_SERVICE_WINPE_BOOT_LOAD (128)
#define CNG_RSA_PRIVATE_KEY_BLOB ( ( LPCSTR ) 83 )
#define CNG_RSA_PUBLIC_KEY_BLOB ( ( LPCSTR ) 72 )
#define CODEPAGE_ENUMPROC CODEPAGE_ENUMPROCA
#define COLORMATCHTOTARGET_EMBEDED (1)
#define COLORMGMTCAPS (121)
#define COLOROKSTRING __MINGW_NAME_AW ( COLOROKSTRING )
#define COLOROKSTRINGA "commdlg_ColorOK"
#define COLOROKSTRINGW "commdlg_ColorOK"
#define COLORONCOLOR (3)
#define COLORRES (108)
#define COLOR_3DDKSHADOW (21)
#define COLOR_3DFACE COLOR_BTNFACE
#define COLOR_3DHIGHLIGHT COLOR_BTNHIGHLIGHT
#define COLOR_3DHILIGHT COLOR_BTNHIGHLIGHT
#define COLOR_3DLIGHT (22)
#define COLOR_3DSHADOW COLOR_BTNSHADOW
#define COLOR_ACTIVEBORDER (10)
#define COLOR_ACTIVECAPTION (2)
#define COLOR_ADJ_MAX ( SHORT ) 100
#define COLOR_ADJ_MIN (-100)
#define COLOR_APPWORKSPACE (12)
#define COLOR_BACKGROUND (1)
#define COLOR_BTNFACE (15)
#define COLOR_BTNHIGHLIGHT (20)
#define COLOR_BTNHILIGHT COLOR_BTNHIGHLIGHT
#define COLOR_BTNSHADOW (16)
#define COLOR_BTNTEXT (18)
#define COLOR_CAPTIONTEXT (9)
#define COLOR_DESKTOP COLOR_BACKGROUND
#define COLOR_GRADIENTACTIVECAPTION (27)
#define COLOR_GRADIENTINACTIVECAPTION (28)
#define COLOR_GRAYTEXT (17)
#define COLOR_HIGHLIGHT (13)
#define COLOR_HIGHLIGHTTEXT (14)
#define COLOR_HOTLIGHT (26)
#define COLOR_INACTIVEBORDER (11)
#define COLOR_INACTIVECAPTION (3)
#define COLOR_INACTIVECAPTIONTEXT (19)
#define COLOR_INFOBK (24)
#define COLOR_INFOTEXT (23)
#define COLOR_MENU (4)
#define COLOR_MENUBAR (30)
#define COLOR_MENUHILIGHT (29)
#define COLOR_MENUTEXT (7)
#define COLOR_SCROLLBAR (0)
#define COLOR_WINDOW (5)
#define COLOR_WINDOWFRAME (6)
#define COLOR_WINDOWTEXT (8)
#define COMADMIN_E_ALREADYINSTALLED _HRESULT_TYPEDEF_ ( 0x80110404 )
#define COMADMIN_E_AMBIGUOUS_APPLICATION_NAME _HRESULT_TYPEDEF_ ( 0x8011045C )
#define COMADMIN_E_AMBIGUOUS_PARTITION_NAME _HRESULT_TYPEDEF_ ( 0x8011045D )
#define COMADMIN_E_APPDIRNOTFOUND _HRESULT_TYPEDEF_ ( 0x8011041F )
#define COMADMIN_E_APPLICATIONEXISTS _HRESULT_TYPEDEF_ ( 0x8011040B )
#define COMADMIN_E_APPLID_MATCHES_CLSID _HRESULT_TYPEDEF_ ( 0x80110446 )
#define COMADMIN_E_APP_FILE_READFAIL _HRESULT_TYPEDEF_ ( 0x80110408 )
#define COMADMIN_E_APP_FILE_VERSION _HRESULT_TYPEDEF_ ( 0x80110409 )
#define COMADMIN_E_APP_FILE_WRITEFAIL _HRESULT_TYPEDEF_ ( 0x80110407 )
#define COMADMIN_E_APP_NOT_RUNNING _HRESULT_TYPEDEF_ ( 0x8011080A )
#define COMADMIN_E_AUTHENTICATIONLEVEL _HRESULT_TYPEDEF_ ( 0x80110413 )
#define COMADMIN_E_BADPATH _HRESULT_TYPEDEF_ ( 0x8011040A )
#define COMADMIN_E_BADREGISTRYLIBID _HRESULT_TYPEDEF_ ( 0x8011041E )
#define COMADMIN_E_BADREGISTRYPROGID _HRESULT_TYPEDEF_ ( 0x80110412 )
#define COMADMIN_E_BASEPARTITION_REQUIRED_IN_SET _HRESULT_TYPEDEF_ ( 0x8011081F )
#define COMADMIN_E_BASE_PARTITION_ONLY _HRESULT_TYPEDEF_ ( 0x80110450 )
#define COMADMIN_E_CANNOT_ALIAS_EVENTCLASS _HRESULT_TYPEDEF_ ( 0x80110820 )
#define COMADMIN_E_CANTCOPYFILE _HRESULT_TYPEDEF_ ( 0x8011040D )
#define COMADMIN_E_CANTMAKEINPROCSERVICE _HRESULT_TYPEDEF_ ( 0x80110814 )
#define COMADMIN_E_CANTRECYCLELIBRARYAPPS _HRESULT_TYPEDEF_ ( 0x8011080F )
#define COMADMIN_E_CANTRECYCLESERVICEAPPS _HRESULT_TYPEDEF_ ( 0x80110811 )
#define COMADMIN_E_CANT_SUBSCRIBE_TO_COMPONENT _HRESULT_TYPEDEF_ ( 0x8011044D )
#define COMADMIN_E_CAN_NOT_EXPORT_APP_PROXY _HRESULT_TYPEDEF_ ( 0x8011044A )
#define COMADMIN_E_CAN_NOT_EXPORT_SYS_APP _HRESULT_TYPEDEF_ ( 0x8011044C )
#define COMADMIN_E_CAN_NOT_START_APP _HRESULT_TYPEDEF_ ( 0x8011044B )
#define COMADMIN_E_CAT_BITNESSMISMATCH _HRESULT_TYPEDEF_ ( 0x80110482 )
#define COMADMIN_E_CAT_DUPLICATE_PARTITION_NAME _HRESULT_TYPEDEF_ ( 0x80110457 )
#define COMADMIN_E_CAT_IMPORTED_COMPONENTS_NOT_ALLOWED _HRESULT_TYPEDEF_ ( 0x8011045B )
#define COMADMIN_E_CAT_INVALID_PARTITION_NAME _HRESULT_TYPEDEF_ ( 0x80110458 )
#define COMADMIN_E_CAT_PARTITION_IN_USE _HRESULT_TYPEDEF_ ( 0x80110459 )
#define COMADMIN_E_CAT_PAUSE_RESUME_NOT_SUPPORTED _HRESULT_TYPEDEF_ ( 0x80110485 )
#define COMADMIN_E_CAT_SERVERFAULT _HRESULT_TYPEDEF_ ( 0x80110486 )
#define COMADMIN_E_CAT_UNACCEPTABLEBITNESS _HRESULT_TYPEDEF_ ( 0x80110483 )
#define COMADMIN_E_CAT_WRONGAPPBITNESS _HRESULT_TYPEDEF_ ( 0x80110484 )
#define COMADMIN_E_CLSIDORIIDMISMATCH _HRESULT_TYPEDEF_ ( 0x80110418 )
#define COMADMIN_E_COMPFILE_BADTLB _HRESULT_TYPEDEF_ ( 0x80110428 )
#define COMADMIN_E_COMPFILE_CLASSNOTAVAIL _HRESULT_TYPEDEF_ ( 0x80110427 )
#define COMADMIN_E_COMPFILE_DOESNOTEXIST _HRESULT_TYPEDEF_ ( 0x80110424 )
#define COMADMIN_E_COMPFILE_GETCLASSOBJ _HRESULT_TYPEDEF_ ( 0x80110426 )
#define COMADMIN_E_COMPFILE_LOADDLLFAIL _HRESULT_TYPEDEF_ ( 0x80110425 )
#define COMADMIN_E_COMPFILE_NOREGISTRAR _HRESULT_TYPEDEF_ ( 0x80110434 )
#define COMADMIN_E_COMPFILE_NOTINSTALLABLE _HRESULT_TYPEDEF_ ( 0x80110429 )
#define COMADMIN_E_COMPONENTEXISTS _HRESULT_TYPEDEF_ ( 0x80110439 )
#define COMADMIN_E_COMP_MOVE_BAD_DEST _HRESULT_TYPEDEF_ ( 0x8011042E )
#define COMADMIN_E_COMP_MOVE_DEST _HRESULT_TYPEDEF_ ( 0x8011081D )
#define COMADMIN_E_COMP_MOVE_LOCKED _HRESULT_TYPEDEF_ ( 0x8011042D )
#define COMADMIN_E_COMP_MOVE_PRIVATE _HRESULT_TYPEDEF_ ( 0x8011081E )
#define COMADMIN_E_COMP_MOVE_SOURCE _HRESULT_TYPEDEF_ ( 0x8011081C )
#define COMADMIN_E_COREQCOMPINSTALLED _HRESULT_TYPEDEF_ ( 0x80110435 )
#define COMADMIN_E_DEFAULT_PARTITION_NOT_IN_SET _HRESULT_TYPEDEF_ ( 0x80110816 )
#define COMADMIN_E_DLLLOADFAILED _HRESULT_TYPEDEF_ ( 0x8011041D )
#define COMADMIN_E_DLLREGISTERSERVER _HRESULT_TYPEDEF_ ( 0x8011041A )
#define COMADMIN_E_EVENTCLASS_CANT_BE_SUBSCRIBER _HRESULT_TYPEDEF_ ( 0x8011044E )
#define COMADMIN_E_FILE_PARTITION_DUPLICATE_FILES _HRESULT_TYPEDEF_ ( 0x8011045A )
#define COMADMIN_E_INVALIDUSERIDS _HRESULT_TYPEDEF_ ( 0x80110410 )
#define COMADMIN_E_INVALID_PARTITION _HRESULT_TYPEDEF_ ( 0x8011080B )
#define COMADMIN_E_KEYMISSING _HRESULT_TYPEDEF_ ( 0x80110403 )
#define COMADMIN_E_LEGACYCOMPS_NOT_ALLOWED_IN_1_0_FORMAT _HRESULT_TYPEDEF_ ( 0x8011081A )
#define COMADMIN_E_LEGACYCOMPS_NOT_ALLOWED_IN_NONBASE_PARTITIONS _HRESULT_TYPEDEF_ ( 0x8011081B )
#define COMADMIN_E_LIB_APP_PROXY_INCOMPATIBLE _HRESULT_TYPEDEF_ ( 0x8011044F )
#define COMADMIN_E_MIG_SCHEMANOTFOUND _HRESULT_TYPEDEF_ ( 0x80110481 )
#define COMADMIN_E_MIG_VERSIONNOTSUPPORTED _HRESULT_TYPEDEF_ ( 0x80110480 )
#define COMADMIN_E_NOREGISTRYCLSID _HRESULT_TYPEDEF_ ( 0x80110411 )
#define COMADMIN_E_NOSERVERSHARE _HRESULT_TYPEDEF_ ( 0x8011041B )
#define COMADMIN_E_NOTCHANGEABLE _HRESULT_TYPEDEF_ ( 0x8011042A )
#define COMADMIN_E_NOTDELETEABLE _HRESULT_TYPEDEF_ ( 0x8011042B )
#define COMADMIN_E_NOTINREGISTRY _HRESULT_TYPEDEF_ ( 0x8011043E )
#define COMADMIN_E_NOUSER _HRESULT_TYPEDEF_ ( 0x8011040F )
#define COMADMIN_E_OBJECTERRORS _HRESULT_TYPEDEF_ ( 0x80110401 )
#define COMADMIN_E_OBJECTEXISTS _HRESULT_TYPEDEF_ ( 0x80110438 )
#define COMADMIN_E_OBJECTINVALID _HRESULT_TYPEDEF_ ( 0x80110402 )
#define COMADMIN_E_OBJECTNOTPOOLABLE _HRESULT_TYPEDEF_ ( 0x8011043F )
#define COMADMIN_E_OBJECT_DOES_NOT_EXIST _HRESULT_TYPEDEF_ ( 0x80110809 )
#define COMADMIN_E_OBJECT_PARENT_MISSING _HRESULT_TYPEDEF_ ( 0x80110808 )
#define COMADMIN_E_PARTITIONS_DISABLED _HRESULT_TYPEDEF_ ( 0x80110824 )
#define COMADMIN_E_PARTITION_ACCESSDENIED _HRESULT_TYPEDEF_ ( 0x80110818 )
#define COMADMIN_E_PARTITION_MSI_ONLY _HRESULT_TYPEDEF_ ( 0x80110819 )
#define COMADMIN_E_PAUSEDPROCESSMAYNOTBERECYCLED _HRESULT_TYPEDEF_ ( 0x80110813 )
#define COMADMIN_E_PRIVATE_ACCESSDENIED _HRESULT_TYPEDEF_ ( 0x80110821 )
#define COMADMIN_E_PROCESSALREADYRECYCLED _HRESULT_TYPEDEF_ ( 0x80110812 )
#define COMADMIN_E_PROGIDINUSEBYCLSID _HRESULT_TYPEDEF_ ( 0x80110815 )
#define COMADMIN_E_PROPERTYSAVEFAILED _HRESULT_TYPEDEF_ ( 0x80110437 )
#define COMADMIN_E_PROPERTY_OVERFLOW _HRESULT_TYPEDEF_ ( 0x8011043C )
#define COMADMIN_E_RECYCLEDPROCESSMAYNOTBEPAUSED _HRESULT_TYPEDEF_ ( 0x80110817 )
#define COMADMIN_E_REGDB_ALREADYRUNNING _HRESULT_TYPEDEF_ ( 0x80110475 )
#define COMADMIN_E_REGDB_NOTINITIALIZED _HRESULT_TYPEDEF_ ( 0x80110472 )
#define COMADMIN_E_REGDB_NOTOPEN _HRESULT_TYPEDEF_ ( 0x80110473 )
#define COMADMIN_E_REGDB_SYSTEMERR _HRESULT_TYPEDEF_ ( 0x80110474 )
#define COMADMIN_E_REGFILE_CORRUPT _HRESULT_TYPEDEF_ ( 0x8011043B )
#define COMADMIN_E_REGISTERTLB _HRESULT_TYPEDEF_ ( 0x80110430 )
#define COMADMIN_E_REGISTRARFAILED _HRESULT_TYPEDEF_ ( 0x80110423 )
#define COMADMIN_E_REGISTRY_ACCESSDENIED _HRESULT_TYPEDEF_ ( 0x80110823 )
#define COMADMIN_E_REMOTEINTERFACE _HRESULT_TYPEDEF_ ( 0x80110419 )
#define COMADMIN_E_REQUIRES_DIFFERENT_PLATFORM _HRESULT_TYPEDEF_ ( 0x80110449 )
#define COMADMIN_E_ROLEEXISTS _HRESULT_TYPEDEF_ ( 0x8011040C )
#define COMADMIN_E_ROLE_DOES_NOT_EXIST _HRESULT_TYPEDEF_ ( 0x80110447 )
#define COMADMIN_E_SAFERINVALID _HRESULT_TYPEDEF_ ( 0x80110822 )
#define COMADMIN_E_SERVICENOTINSTALLED _HRESULT_TYPEDEF_ ( 0x80110436 )
#define COMADMIN_E_SESSION _HRESULT_TYPEDEF_ ( 0x8011042C )
#define COMADMIN_E_START_APP_DISABLED _HRESULT_TYPEDEF_ ( 0x80110451 )
#define COMADMIN_E_START_APP_NEEDS_COMPONENTS _HRESULT_TYPEDEF_ ( 0x80110448 )
#define COMADMIN_E_SVCAPP_NOT_POOLABLE_OR_RECYCLABLE _HRESULT_TYPEDEF_ ( 0x8011080D )
#define COMADMIN_E_SYSTEMAPP _HRESULT_TYPEDEF_ ( 0x80110433 )
#define COMADMIN_E_USERPASSWDNOTVALID _HRESULT_TYPEDEF_ ( 0x80110414 )
#define COMADMIN_E_USER_IN_SET _HRESULT_TYPEDEF_ ( 0x8011080E )
#define COMMON_LVB_GRID_HORIZONTAL (1024)
#define COMMON_LVB_GRID_LVERTICAL (2048)
#define COMMON_LVB_GRID_RVERTICAL (4096)
#define COMMON_LVB_LEADING_BYTE (256)
#define COMMON_LVB_REVERSE_VIDEO (16384)
#define COMMON_LVB_SBCSDBCS (768)
#define COMMON_LVB_TRAILING_BYTE (512)
#define COMMON_LVB_UNDERSCORE (32768)
#define COMMPROP_INITIALIZED ( ( DWORD ) 0xe73cf52e )
#define COMPILETIME_OR_2FLAGS(a, b) ( ( UINT ) ( a ) | ( UINT ) ( b ) )
#define COMPILETIME_OR_3FLAGS(a, b, c) ( ( UINT ) ( a ) | ( UINT ) ( b ) | ( UINT ) ( c ) )
#define COMPILETIME_OR_4FLAGS(a, b, c, d) ( ( UINT ) ( a ) | ( UINT ) ( b ) | ( UINT ) ( c ) | ( UINT ) ( d ) )
#define COMPILETIME_OR_5FLAGS(a, b, c, d, e) ( ( UINT ) ( a ) | ( UINT ) ( b ) | ( UINT ) ( c ) | ( UINT ) ( d ) | ( UINT ) ( e ) )
#define COMPLEXREGION (3)
#define COMPRESSION_ENGINE_HIBER (512)
#define COMPRESSION_ENGINE_MAXIMUM (256)
#define COMPRESSION_ENGINE_STANDARD (0)
#define COMPRESSION_FORMAT_DEFAULT (1)
#define COMPRESSION_FORMAT_LZNT1 (2)
#define COMPRESSION_FORMAT_NONE (0)
#define COMPRESSION_FORMAT_SPARSE (16384)
#define COMPRESSION_FORMAT_XPRESS (3)
#define COMPRESSION_FORMAT_XPRESS_HUFF (4)
#define COMQC_E_APPLICATION_NOT_QUEUED _HRESULT_TYPEDEF_ ( 0x80110600 )
#define COMQC_E_BAD_MESSAGE _HRESULT_TYPEDEF_ ( 0x80110604 )
#define COMQC_E_NO_IPERSISTSTREAM _HRESULT_TYPEDEF_ ( 0x80110603 )
#define COMQC_E_NO_QUEUEABLE_INTERFACES _HRESULT_TYPEDEF_ ( 0x80110601 )
#define COMQC_E_QUEUING_SERVICE_NOT_AVAILABLE _HRESULT_TYPEDEF_ ( 0x80110602 )
#define COMQC_E_UNAUTHENTICATED _HRESULT_TYPEDEF_ ( 0x80110605 )
#define COMQC_E_UNTRUSTED_ENQUEUER _HRESULT_TYPEDEF_ ( 0x80110606 )
#define CONDITION_VARIABLE_INIT RTL_CONDITION_VARIABLE_INIT
#define CONDITION_VARIABLE_LOCKMODE_SHARED RTL_CONDITION_VARIABLE_LOCKMODE_SHARED
#define CONNDLG_CONN_POINT (2)
#define CONNDLG_HIDE_BOX (8)
#define CONNDLG_NOT_PERSIST (32)
#define CONNDLG_PERSIST (16)
#define CONNDLG_RO_PATH (1)
#define CONNDLG_USE_MRU (4)
#define CONNECT_CMD_SAVECRED (4096)
#define CONNECT_COMMANDLINE (2048)
#define CONNECT_CURRENT_MEDIA (512)
#define CONNECT_DEFERRED (1024)
#define CONNECT_INTERACTIVE (8)
#define CONNECT_LOCALDRIVE (256)
#define CONNECT_NEED_DRIVE (32)
#define CONNECT_PROMPT (16)
#define CONNECT_REDIRECT (128)
#define CONNECT_REFCOUNT (64)
#define CONNECT_RESERVED (4278190080u)
#define CONNECT_TEMPORARY (4)
#define CONNECT_UPDATE_PROFILE (1)
#define CONNECT_UPDATE_RECENT (2)
#define CONSOLE_APPLICATION_16BIT (0)
#define CONSOLE_CARET_SELECTION (1)
#define CONSOLE_CARET_VISIBLE (2)
#define CONSOLE_FULLSCREEN (1)
#define CONSOLE_FULLSCREEN_HARDWARE (2)
#define CONSOLE_FULLSCREEN_MODE (1)
#define CONSOLE_MOUSE_DOWN (8)
#define CONSOLE_MOUSE_SELECTION (4)
#define CONSOLE_NO_SELECTION (0)
#define CONSOLE_SELECTION_IN_PROGRESS (1)
#define CONSOLE_SELECTION_NOT_EMPTY (2)
#define CONSOLE_TEXTMODE_BUFFER (1)
#define CONSOLE_WINDOWED_MODE (2)
#define CONST const
#define CONST_VTBL 
#define CONTAINER_INHERIT_ACE (2)
#define CONTAINING_RECORD(address, type, field) ( ( type * ) ( ( PCHAR ) ( address ) - ( ULONG_PTR ) ( & ( ( type * ) 0 ) -> field ) ) )
#define CONTEXT_ALL (1048607l)
#define CONTEXT_AMD64 (1048576)
#define CONTEXT_CONTROL (1048577l)
#define CONTEXT_DEBUG_REGISTERS (1048592l)
#define CONTEXT_EXCEPTION_ACTIVE (134217728)
#define CONTEXT_EXCEPTION_REPORTING (2147483648u)
#define CONTEXT_EXCEPTION_REQUEST (1073741824)
#define CONTEXT_E_ABORTED _HRESULT_TYPEDEF_ ( 0x8004E002 )
#define CONTEXT_E_ABORTING _HRESULT_TYPEDEF_ ( 0x8004E003 )
#define CONTEXT_E_FIRST __MSABI_LONG ( 0x8004E000 )
#define CONTEXT_E_LAST __MSABI_LONG ( 0x8004E02F )
#define CONTEXT_E_NOCONTEXT _HRESULT_TYPEDEF_ ( 0x8004E004 )
#define CONTEXT_E_NOJIT _HRESULT_TYPEDEF_ ( 0x8004E026 )
#define CONTEXT_E_NOTRANSACTION _HRESULT_TYPEDEF_ ( 0x8004E027 )
#define CONTEXT_E_OLDREF _HRESULT_TYPEDEF_ ( 0x8004E007 )
#define CONTEXT_E_ROLENOTFOUND _HRESULT_TYPEDEF_ ( 0x8004E00C )
#define CONTEXT_E_SYNCH_TIMEOUT _HRESULT_TYPEDEF_ ( 0x8004E006 )
#define CONTEXT_E_TMNOTAVAILABLE _HRESULT_TYPEDEF_ ( 0x8004E00F )
#define CONTEXT_E_WOULD_DEADLOCK _HRESULT_TYPEDEF_ ( 0x8004E005 )
#define CONTEXT_FLOATING_POINT (1048584l)
#define CONTEXT_FULL (1048587l)
#define CONTEXT_INTEGER (1048578l)
#define CONTEXT_OID_CAPI2_ANY ( ( LPCSTR ) 5 )
#define CONTEXT_OID_CERTIFICATE ( ( LPCSTR ) 1 )
#define CONTEXT_OID_CREATE_OBJECT_CONTEXT_FUNC "ContextDllCreateObjectContext"
#define CONTEXT_OID_CRL ( ( LPCSTR ) 2 )
#define CONTEXT_OID_CTL ( ( LPCSTR ) 3 )
#define CONTEXT_OID_OCSP_RESP ( ( LPCSTR ) 6 )
#define CONTEXT_OID_PKCS7 ( ( LPCSTR ) 4 )
#define CONTEXT_SEGMENTS (1048580l)
#define CONTEXT_SERVICE_ACTIVE (268435456)
#define CONTEXT_S_FIRST __MSABI_LONG ( 0x0004E000 )
#define CONTEXT_S_LAST __MSABI_LONG ( 0x0004E02F )
#define CONTROL_C_EXIT STATUS_CONTROL_C_EXIT
#define CONVERT10_E_FIRST __MSABI_LONG ( 0x800401C0 )
#define CONVERT10_E_LAST __MSABI_LONG ( 0x800401CF )
#define CONVERT10_E_OLESTREAM_BITMAP_TO_DIB _HRESULT_TYPEDEF_ ( 0x800401C3 )
#define CONVERT10_E_OLESTREAM_FMT _HRESULT_TYPEDEF_ ( 0x800401C2 )
#define CONVERT10_E_OLESTREAM_GET _HRESULT_TYPEDEF_ ( 0x800401C0 )
#define CONVERT10_E_OLESTREAM_PUT _HRESULT_TYPEDEF_ ( 0x800401C1 )
#define CONVERT10_E_STG_DIB_TO_BITMAP _HRESULT_TYPEDEF_ ( 0x800401C6 )
#define CONVERT10_E_STG_FMT _HRESULT_TYPEDEF_ ( 0x800401C4 )
#define CONVERT10_E_STG_NO_STD_STREAM _HRESULT_TYPEDEF_ ( 0x800401C5 )
#define CONVERT10_S_FIRST __MSABI_LONG ( 0x000401C0 )
#define CONVERT10_S_LAST __MSABI_LONG ( 0x000401CF )
#define CONVERT10_S_NO_PRESENTATION _HRESULT_TYPEDEF_ ( 0x000401C0 )
#define COPYFILE_SIS_FLAGS (3)
#define COPYFILE_SIS_LINK (1)
#define COPYFILE_SIS_REPLACE (2)
#define COPY_FILE_ALLOW_DECRYPTED_DESTINATION (8)
#define COPY_FILE_FAIL_IF_EXISTS (1)
#define COPY_FILE_OPEN_SOURCE_FOR_WRITE (4)
#define COPY_FILE_RESTARTABLE (2)
#define CORE_PARKING_POLICY_CHANGE_IDEAL (0)
#define CORE_PARKING_POLICY_CHANGE_MAX CORE_PARKING_POLICY_CHANGE_MULTISTEP
#define CORE_PARKING_POLICY_CHANGE_MULTISTEP (3)
#define CORE_PARKING_POLICY_CHANGE_ROCKET (2)
#define CORE_PARKING_POLICY_CHANGE_SINGLE (1)
#define CO_E_ACCESSCHECKFAILED _HRESULT_TYPEDEF_ ( 0x8001012A )
#define CO_E_ACESINWRONGORDER _HRESULT_TYPEDEF_ ( 0x8001013A )
#define CO_E_ACNOTINITIALIZED _HRESULT_TYPEDEF_ ( 0x8001013F )
#define CO_E_ACTIVATIONFAILED _HRESULT_TYPEDEF_ ( 0x8004E021 )
#define CO_E_ACTIVATIONFAILED_CATALOGERROR _HRESULT_TYPEDEF_ ( 0x8004E023 )
#define CO_E_ACTIVATIONFAILED_EVENTLOGGED _HRESULT_TYPEDEF_ ( 0x8004E022 )
#define CO_E_ACTIVATIONFAILED_TIMEOUT _HRESULT_TYPEDEF_ ( 0x8004E024 )
#define CO_E_ALREADYINITIALIZED _HRESULT_TYPEDEF_ ( 0x800401F1 )
#define CO_E_APPDIDNTREG _HRESULT_TYPEDEF_ ( 0x800401FE )
#define CO_E_APPNOTFOUND _HRESULT_TYPEDEF_ ( 0x800401F5 )
#define CO_E_APPSINGLEUSE _HRESULT_TYPEDEF_ ( 0x800401F6 )
#define CO_E_ASYNC_WORK_REJECTED _HRESULT_TYPEDEF_ ( 0x80004029 )
#define CO_E_ATTEMPT_TO_CREATE_OUTSIDE_CLIENT_CONTEXT _HRESULT_TYPEDEF_ ( 0x80004024 )
#define CO_E_BAD_PATH _HRESULT_TYPEDEF_ ( 0x80080004 )
#define CO_E_BAD_SERVER_NAME _HRESULT_TYPEDEF_ ( 0x80004014 )
#define CO_E_CANCEL_DISABLED _HRESULT_TYPEDEF_ ( 0x80010140 )
#define CO_E_CANTDETERMINECLASS _HRESULT_TYPEDEF_ ( 0x800401F2 )
#define CO_E_CANT_REMOTE _HRESULT_TYPEDEF_ ( 0x80004013 )
#define CO_E_CLASSSTRING _HRESULT_TYPEDEF_ ( 0x800401F3 )
#define CO_E_CLASS_CREATE_FAILED _HRESULT_TYPEDEF_ ( 0x80080001 )
#define CO_E_CLASS_DISABLED _HRESULT_TYPEDEF_ ( 0x80004027 )
#define CO_E_CLRNOTAVAILABLE _HRESULT_TYPEDEF_ ( 0x80004028 )
#define CO_E_CLSREG_INCONSISTENT _HRESULT_TYPEDEF_ ( 0x8000401F )
#define CO_E_CONVERSIONFAILED _HRESULT_TYPEDEF_ ( 0x8001012E )
#define CO_E_CREATEPROCESS_FAILURE _HRESULT_TYPEDEF_ ( 0x80004018 )
#define CO_E_DBERROR _HRESULT_TYPEDEF_ ( 0x8004E02B )
#define CO_E_DECODEFAILED _HRESULT_TYPEDEF_ ( 0x8001013D )
#define CO_E_DLLNOTFOUND _HRESULT_TYPEDEF_ ( 0x800401F8 )
#define CO_E_ERRORINAPP _HRESULT_TYPEDEF_ ( 0x800401F7 )
#define CO_E_ERRORINDLL _HRESULT_TYPEDEF_ ( 0x800401F9 )
#define CO_E_EXCEEDSYSACLLIMIT _HRESULT_TYPEDEF_ ( 0x80010139 )
#define CO_E_FAILEDTOCLOSEHANDLE _HRESULT_TYPEDEF_ ( 0x80010138 )
#define CO_E_FAILEDTOCREATEFILE _HRESULT_TYPEDEF_ ( 0x80010137 )
#define CO_E_FAILEDTOGENUUID _HRESULT_TYPEDEF_ ( 0x80010136 )
#define CO_E_FAILEDTOGETSECCTX _HRESULT_TYPEDEF_ ( 0x80010124 )
#define CO_E_FAILEDTOGETTOKENINFO _HRESULT_TYPEDEF_ ( 0x80010126 )
#define CO_E_FAILEDTOGETWINDIR _HRESULT_TYPEDEF_ ( 0x80010134 )
#define CO_E_FAILEDTOIMPERSONATE _HRESULT_TYPEDEF_ ( 0x80010123 )
#define CO_E_FAILEDTOOPENPROCESSTOKEN _HRESULT_TYPEDEF_ ( 0x8001013C )
#define CO_E_FAILEDTOOPENTHREADTOKEN _HRESULT_TYPEDEF_ ( 0x80010125 )
#define CO_E_FAILEDTOQUERYCLIENTBLANKET _HRESULT_TYPEDEF_ ( 0x80010128 )
#define CO_E_FAILEDTOSETDACL _HRESULT_TYPEDEF_ ( 0x80010129 )
#define CO_E_FIRST __MSABI_LONG ( 0x800401F0 )
#define CO_E_IIDREG_INCONSISTENT _HRESULT_TYPEDEF_ ( 0x80004020 )
#define CO_E_IIDSTRING _HRESULT_TYPEDEF_ ( 0x800401F4 )
#define CO_E_INCOMPATIBLESTREAMVERSION _HRESULT_TYPEDEF_ ( 0x8001013B )
#define CO_E_INITIALIZATIONFAILED _HRESULT_TYPEDEF_ ( 0x8004E025 )
#define CO_E_INIT_CLASS_CACHE _HRESULT_TYPEDEF_ ( 0x80004009 )
#define CO_E_INIT_MEMORY_ALLOCATOR _HRESULT_TYPEDEF_ ( 0x80004008 )
#define CO_E_INIT_ONLY_SINGLE_THREADED _HRESULT_TYPEDEF_ ( 0x80004012 )
#define CO_E_INIT_RPC_CHANNEL _HRESULT_TYPEDEF_ ( 0x8000400A )
#define CO_E_INIT_SCM_EXEC_FAILURE _HRESULT_TYPEDEF_ ( 0x80004011 )
#define CO_E_INIT_SCM_FILE_MAPPING_EXISTS _HRESULT_TYPEDEF_ ( 0x8000400F )
#define CO_E_INIT_SCM_MAP_VIEW_OF_FILE _HRESULT_TYPEDEF_ ( 0x80004010 )
#define CO_E_INIT_SCM_MUTEX_EXISTS _HRESULT_TYPEDEF_ ( 0x8000400E )
#define CO_E_INIT_SHARED_ALLOCATOR _HRESULT_TYPEDEF_ ( 0x80004007 )
#define CO_E_INIT_TLS _HRESULT_TYPEDEF_ ( 0x80004006 )
#define CO_E_INIT_TLS_CHANNEL_CONTROL _HRESULT_TYPEDEF_ ( 0x8000400C )
#define CO_E_INIT_TLS_SET_CHANNEL_CONTROL _HRESULT_TYPEDEF_ ( 0x8000400B )
#define CO_E_INIT_UNACCEPTED_USER_ALLOCATOR _HRESULT_TYPEDEF_ ( 0x8000400D )
#define CO_E_INVALIDSID _HRESULT_TYPEDEF_ ( 0x8001012D )
#define CO_E_ISOLEVELMISMATCH _HRESULT_TYPEDEF_ ( 0x8004E02F )
#define CO_E_LAST __MSABI_LONG ( 0x800401FF )
#define CO_E_LAUNCH_PERMSSION_DENIED _HRESULT_TYPEDEF_ ( 0x8000401B )
#define CO_E_LOOKUPACCNAMEFAILED _HRESULT_TYPEDEF_ ( 0x80010132 )
#define CO_E_LOOKUPACCSIDFAILED _HRESULT_TYPEDEF_ ( 0x80010130 )
#define CO_E_MALFORMED_SPN _HRESULT_TYPEDEF_ ( 0x80004033 )
#define CO_E_MSI_ERROR _HRESULT_TYPEDEF_ ( 0x80004023 )
#define CO_E_NETACCESSAPIFAILED _HRESULT_TYPEDEF_ ( 0x8001012B )
#define CO_E_NOCOOKIES _HRESULT_TYPEDEF_ ( 0x8004E02A )
#define CO_E_NOIISINTRINSICS _HRESULT_TYPEDEF_ ( 0x8004E029 )
#define CO_E_NOMATCHINGNAMEFOUND _HRESULT_TYPEDEF_ ( 0x80010131 )
#define CO_E_NOMATCHINGSIDFOUND _HRESULT_TYPEDEF_ ( 0x8001012F )
#define CO_E_NOSYNCHRONIZATION _HRESULT_TYPEDEF_ ( 0x8004E02E )
#define CO_E_NOTCONSTRUCTED _HRESULT_TYPEDEF_ ( 0x8004E02D )
#define CO_E_NOTINITIALIZED _HRESULT_TYPEDEF_ ( 0x800401F0 )
#define CO_E_NOTPOOLED _HRESULT_TYPEDEF_ ( 0x8004E02C )
#define CO_E_NOT_SUPPORTED _HRESULT_TYPEDEF_ ( 0x80004021 )
#define CO_E_NO_SECCTX_IN_ACTIVATE _HRESULT_TYPEDEF_ ( 0x8000402B )
#define CO_E_OBJISREG _HRESULT_TYPEDEF_ ( 0x800401FC )
#define CO_E_OBJNOTCONNECTED _HRESULT_TYPEDEF_ ( 0x800401FD )
#define CO_E_OBJNOTREG _HRESULT_TYPEDEF_ ( 0x800401FB )
#define CO_E_OBJSRV_RPC_FAILURE _HRESULT_TYPEDEF_ ( 0x80080006 )
#define CO_E_OLE1DDE_DISABLED _HRESULT_TYPEDEF_ ( 0x80004016 )
#define CO_E_PATHTOOLONG _HRESULT_TYPEDEF_ ( 0x80010135 )
#define CO_E_RELEASED _HRESULT_TYPEDEF_ ( 0x800401FF )
#define CO_E_RELOAD_DLL _HRESULT_TYPEDEF_ ( 0x80004022 )
#define CO_E_REMOTE_COMMUNICATION_FAILURE _HRESULT_TYPEDEF_ ( 0x8000401D )
#define CO_E_RUNAS_CREATEPROCESS_FAILURE _HRESULT_TYPEDEF_ ( 0x80004019 )
#define CO_E_RUNAS_LOGON_FAILURE _HRESULT_TYPEDEF_ ( 0x8000401A )
#define CO_E_RUNAS_SYNTAX _HRESULT_TYPEDEF_ ( 0x80004017 )
#define CO_E_SCM_ERROR _HRESULT_TYPEDEF_ ( 0x80080002 )
#define CO_E_SCM_RPC_FAILURE _HRESULT_TYPEDEF_ ( 0x80080003 )
#define CO_E_SERVER_EXEC_FAILURE _HRESULT_TYPEDEF_ ( 0x80080005 )
#define CO_E_SERVER_INIT_TIMEOUT _HRESULT_TYPEDEF_ ( 0x8000402A )
#define CO_E_SERVER_NOT_PAUSED _HRESULT_TYPEDEF_ ( 0x80004026 )
#define CO_E_SERVER_PAUSED _HRESULT_TYPEDEF_ ( 0x80004025 )
#define CO_E_SERVER_START_TIMEOUT _HRESULT_TYPEDEF_ ( 0x8000401E )
#define CO_E_SERVER_STOPPING _HRESULT_TYPEDEF_ ( 0x80080008 )
#define CO_E_SETSERLHNDLFAILED _HRESULT_TYPEDEF_ ( 0x80010133 )
#define CO_E_START_SERVICE_FAILURE _HRESULT_TYPEDEF_ ( 0x8000401C )
#define CO_E_SXS_CONFIG _HRESULT_TYPEDEF_ ( 0x80004032 )
#define CO_E_THREADINGMODEL_CHANGED _HRESULT_TYPEDEF_ ( 0x8004E028 )
#define CO_E_THREADPOOL_CONFIG _HRESULT_TYPEDEF_ ( 0x80004031 )
#define CO_E_TRACKER_CONFIG _HRESULT_TYPEDEF_ ( 0x80004030 )
#define CO_E_TRUSTEEDOESNTMATCHCLIENT _HRESULT_TYPEDEF_ ( 0x80010127 )
#define CO_E_WRONGOSFORAPP _HRESULT_TYPEDEF_ ( 0x800401FA )
#define CO_E_WRONGTRUSTEENAMESYNTAX _HRESULT_TYPEDEF_ ( 0x8001012C )
#define CO_E_WRONG_SERVER_IDENTITY _HRESULT_TYPEDEF_ ( 0x80004015 )
#define CO_S_FIRST __MSABI_LONG ( 0x000401F0 )
#define CO_S_LAST __MSABI_LONG ( 0x000401FF )
#define CO_S_MACHINENAMENOTFOUND _HRESULT_TYPEDEF_ ( 0x00080013 )
#define CO_S_NOTALLINTERFACES _HRESULT_TYPEDEF_ ( 0x00080012 )
#define CPS_CANCEL (4)
#define CPS_COMPLETE (1)
#define CPS_CONVERT (2)
#define CPS_REVERT (3)
#define CP_ACP (0)
#define CP_INSTALLED (1)
#define CP_MACCP (2)
#define CP_NONE (0)
#define CP_OEMCP (1)
#define CP_RECTANGLE (1)
#define CP_REGION (2)
#define CP_SUPPORTED (2)
#define CP_SYMBOL (42)
#define CP_THREAD_ACP (3)
#define CP_UTF7 (65000)
#define CP_UTF8 (65001)
#define CP_WINANSI (1004)
#define CP_WINNEUTRAL CP_WINANSI
#define CP_WINUNICODE (1200)
#define CREATECOLORSPACE_EMBEDED (1)
#define CREATEPROCESS_MANIFEST_RESOURCE_ID MAKEINTRESOURCE ( 1 )
#define CREATE_ALWAYS (2)
#define CREATE_BOUNDARY_DESCRIPTOR_ADD_APPCONTAINER_SID (1)
#define CREATE_BREAKAWAY_FROM_JOB (16777216)
#define CREATE_DEFAULT_ERROR_MODE (67108864)
#define CREATE_FORCEDOS (8192)
#define CREATE_FOR_DIR (2)
#define CREATE_FOR_IMPORT (1)
#define CREATE_IGNORE_SYSTEM_DEFAULT (2147483648u)
#define CREATE_NEW (1)
#define CREATE_NEW_CONSOLE (16)
#define CREATE_NEW_PROCESS_GROUP (512)
#define CREATE_NO_WINDOW (134217728)
#define CREATE_PRESERVE_CODE_AUTHZ_LEVEL (33554432)
#define CREATE_PROCESS_DEBUG_EVENT (3)
#define CREATE_PROTECTED_PROCESS (262144)
#define CREATE_SEPARATE_WOW_VDM (2048)
#define CREATE_SHARED_WOW_VDM (4096)
#define CREATE_SUSPENDED (4)
#define CREATE_THREAD_DEBUG_EVENT (2)
#define CREATE_UNICODE_ENVIRONMENT (1024)
#define CREDENTIAL_OID_PASSWORD_CREDENTIALS __MINGW_NAME_UAW ( CREDENTIAL_OID_PASSWORD_CREDENTIALS )
#define CREDENTIAL_OID_PASSWORD_CREDENTIALS_A ( ( LPCSTR ) 1 )
#define CREDENTIAL_OID_PASSWORD_CREDENTIALS_W ( ( LPCSTR ) 2 )
#define CRITICAL_SECTION_NO_DEBUG_INFO RTL_CRITICAL_SECTION_FLAG_NO_DEBUG_INFO
#define CRL_DIST_POINT_ERR_CRL_ISSUER_BIT __MSABI_LONG ( 0x80000000 )
#define CRL_DIST_POINT_ERR_INDEX_MASK (127)
#define CRL_DIST_POINT_ERR_INDEX_SHIFT (24)
#define CRL_DIST_POINT_FULL_NAME (1)
#define CRL_DIST_POINT_ISSUER_RDN_NAME (2)
#define CRL_DIST_POINT_NO_NAME (0)
#define CRL_FIND_ANY (0)
#define CRL_FIND_EXISTING (2)
#define CRL_FIND_ISSUED_BY (1)
#define CRL_FIND_ISSUED_BY_AKI_FLAG (1)
#define CRL_FIND_ISSUED_BY_BASE_FLAG (8)
#define CRL_FIND_ISSUED_BY_DELTA_FLAG (4)
#define CRL_FIND_ISSUED_BY_SIGNATURE_FLAG (2)
#define CRL_FIND_ISSUED_FOR (3)
#define CRL_FIND_ISSUED_FOR_SET_STRONG_PROPERTIES_FLAG (16)
#define CRL_REASON_AFFILIATION_CHANGED (3)
#define CRL_REASON_AFFILIATION_CHANGED_FLAG (16)
#define CRL_REASON_CA_COMPROMISE (2)
#define CRL_REASON_CA_COMPROMISE_FLAG (32)
#define CRL_REASON_CERTIFICATE_HOLD (6)
#define CRL_REASON_CERTIFICATE_HOLD_FLAG (2)
#define CRL_REASON_CESSATION_OF_OPERATION (5)
#define CRL_REASON_CESSATION_OF_OPERATION_FLAG (4)
#define CRL_REASON_KEY_COMPROMISE (1)
#define CRL_REASON_KEY_COMPROMISE_FLAG (64)
#define CRL_REASON_REMOVE_FROM_CRL (8)
#define CRL_REASON_SUPERSEDED (4)
#define CRL_REASON_SUPERSEDED_FLAG (8)
#define CRL_REASON_UNSPECIFIED (0)
#define CRL_REASON_UNUSED_FLAG (128)
#define CRL_V1 (0)
#define CRL_V2 (1)
#define CRM_PROTOCOL_DYNAMIC_MARSHAL_INFO (2)
#define CRM_PROTOCOL_EXPLICIT_MARSHAL_ONLY (1)
#define CRM_PROTOCOL_MAXIMUM_OPTION (3)
#define CROSS_CERT_DIST_POINT_ERR_INDEX_MASK (255)
#define CROSS_CERT_DIST_POINT_ERR_INDEX_SHIFT (24)
#define CRYPTNET_CACHED_OCSP_SWITCH_TO_CRL_COUNT_DEFAULT (50)
#define CRYPTNET_CACHED_OCSP_SWITCH_TO_CRL_COUNT_VALUE_NAME "CryptnetCachedOcspSwitchToCrlCount"
#define CRYPTNET_CRL_BEFORE_OCSP_ENABLE (4294967295u)
#define CRYPTNET_MAX_CACHED_OCSP_PER_CRL_COUNT_DEFAULT (500)
#define CRYPTNET_MAX_CACHED_OCSP_PER_CRL_COUNT_VALUE_NAME "CryptnetMaxCachedOcspPerCrlCount"
#define CRYPTNET_OCSP_AFTER_CRL_DISABLE (4294967295u)
#define CRYPTNET_PRE_FETCH_AFTER_CURRENT_TIME_PRE_FETCH_PERIOD_SECONDS_DEFAULT (1800)
#define CRYPTNET_PRE_FETCH_AFTER_CURRENT_TIME_PRE_FETCH_PERIOD_SECONDS_VALUE_NAME "CryptnetPreFetchAfterCurrentTimePreFetchPeriodSeconds"
#define CRYPTNET_PRE_FETCH_AFTER_PUBLISH_PRE_FETCH_DIVISOR_DEFAULT (10)
#define CRYPTNET_PRE_FETCH_AFTER_PUBLISH_PRE_FETCH_DIVISOR_VALUE_NAME "CryptnetPreFetchAfterPublishPreFetchDivisor"
#define CRYPTNET_PRE_FETCH_BEFORE_NEXT_UPDATE_PRE_FETCH_DIVISOR_DEFAULT (20)
#define CRYPTNET_PRE_FETCH_BEFORE_NEXT_UPDATE_PRE_FETCH_DIVISOR_VALUE_NAME "CryptnetPreFetchBeforeNextUpdatePreFetchDivisor"
#define CRYPTNET_PRE_FETCH_MAX_AFTER_NEXT_UPDATE_PRE_FETCH_PERIOD_SECONDS_DEFAULT (14400)
#define CRYPTNET_PRE_FETCH_MAX_AFTER_NEXT_UPDATE_PRE_FETCH_PERIOD_SECONDS_VALUE_NAME "CryptnetPreFetchMaxAfterNextUpdatePreFetchPeriodSeconds"
#define CRYPTNET_PRE_FETCH_MAX_MAX_AGE_SECONDS_DEFAULT (1209600)
#define CRYPTNET_PRE_FETCH_MAX_MAX_AGE_SECONDS_VALUE_NAME "CryptnetPreFetchMaxMaxAgeSeconds"
#define CRYPTNET_PRE_FETCH_MIN_AFTER_NEXT_UPDATE_PRE_FETCH_PERIOD_SECONDS_DEFAULT (1800)
#define CRYPTNET_PRE_FETCH_MIN_AFTER_NEXT_UPDATE_PRE_FETCH_PERIOD_SECONDS_VALUE_NAME "CryptnetPreFetchMinAfterNextUpdatePreFetchPeriodSeconds"
#define CRYPTNET_PRE_FETCH_MIN_BEFORE_NEXT_UPDATE_PRE_FETCH_PERIOD_SECONDS_DEFAULT (3600)
#define CRYPTNET_PRE_FETCH_MIN_BEFORE_NEXT_UPDATE_PRE_FETCH_PERIOD_SECONDS_VALUE_NAME "CryptnetPreFetchMinBeforeNextUpdatePreFetchSeconds"
#define CRYPTNET_PRE_FETCH_MIN_MAX_AGE_SECONDS_DEFAULT (3600)
#define CRYPTNET_PRE_FETCH_MIN_MAX_AGE_SECONDS_VALUE_NAME "CryptnetPreFetchMinMaxAgeSeconds"
#define CRYPTNET_PRE_FETCH_MIN_OCSP_VALIDITY_PERIOD_SECONDS_DEFAULT (1209600)
#define CRYPTNET_PRE_FETCH_MIN_OCSP_VALIDITY_PERIOD_SECONDS_VALUE_NAME "CryptnetPreFetchMinOcspValidityPeriodSeconds"
#define CRYPTNET_PRE_FETCH_RETRIEVAL_TIMEOUT_SECONDS_DEFAULT (300)
#define CRYPTNET_PRE_FETCH_RETRIEVAL_TIMEOUT_SECONDS_VALUE_NAME "CryptnetPreFetchRetrievalTimeoutSeconds"
#define CRYPTNET_PRE_FETCH_SCAN_AFTER_TRIGGER_DELAY_SECONDS_DEFAULT (30)
#define CRYPTNET_PRE_FETCH_SCAN_AFTER_TRIGGER_DELAY_SECONDS_VALUE_NAME "CryptnetPreFetchScanAfterTriggerDelaySeconds"
#define CRYPTNET_PRE_FETCH_TRIGGER_DISABLE (4294967295u)
#define CRYPTNET_PRE_FETCH_TRIGGER_PERIOD_SECONDS_DEFAULT (600)
#define CRYPTNET_PRE_FETCH_TRIGGER_PERIOD_SECONDS_VALUE_NAME "CryptnetPreFetchTriggerPeriodSeconds"
#define CRYPTNET_PRE_FETCH_VALIDITY_PERIOD_AFTER_NEXT_UPDATE_PRE_FETCH_DIVISOR_DEFAULT (10)
#define CRYPTNET_PRE_FETCH_VALIDITY_PERIOD_AFTER_NEXT_UPDATE_PRE_FETCH_DIVISOR_VALUE_NAME "CryptnetPreFetchValidityPeriodAfterNextUpdatePreFetchDivisor"
#define CRYPTNET_URL_CACHE_DEFAULT_FLUSH (0)
#define CRYPTNET_URL_CACHE_DEFAULT_FLUSH_EXEMPT_SECONDS_DEFAULT (2419200)
#define CRYPTNET_URL_CACHE_DEFAULT_FLUSH_EXEMPT_SECONDS_VALUE_NAME "CryptnetDefaultFlushExemptSeconds"
#define CRYPTNET_URL_CACHE_DISABLE_FLUSH (4294967295u)
#define CRYPTNET_URL_CACHE_PRE_FETCH_AUTOROOT_CAB (5)
#define CRYPTNET_URL_CACHE_PRE_FETCH_BLOB (1)
#define CRYPTNET_URL_CACHE_PRE_FETCH_CRL (2)
#define CRYPTNET_URL_CACHE_PRE_FETCH_DISALLOWED_CERT_CAB (6)
#define CRYPTNET_URL_CACHE_PRE_FETCH_NONE (0)
#define CRYPTNET_URL_CACHE_PRE_FETCH_OCSP (3)
#define CRYPTNET_URL_CACHE_RESPONSE_HTTP (1)
#define CRYPTNET_URL_CACHE_RESPONSE_NONE (0)
#define CRYPTNET_URL_CACHE_RESPONSE_VALIDATED (32768)
#define CRYPTO_BLOBS_DEFINED 
#define CRYPTPROTECTMEMORY_BLOCK_SIZE (16)
#define CRYPTPROTECTMEMORY_CROSS_PROCESS (1)
#define CRYPTPROTECTMEMORY_SAME_LOGON (2)
#define CRYPTPROTECTMEMORY_SAME_PROCESS (0)
#define CRYPTPROTECT_AUDIT (16)
#define CRYPTPROTECT_CRED_REGENERATE (128)
#define CRYPTPROTECT_CRED_SYNC (8)
#define CRYPTPROTECT_DEFAULT_PROVIDER { 0xdf9d8cd0 , 0x1501 , 0x11d1 , { 0x8c , 0x7a , 0x00 , 0xc0 , 0x4f , 0xc2 , 0x97 , 0xeb } }
#define CRYPTPROTECT_FIRST_RESERVED_FLAGVAL (268435455)
#define CRYPTPROTECT_LAST_RESERVED_FLAGVAL (4294967295u)
#define CRYPTPROTECT_LOCAL_MACHINE (4)
#define CRYPTPROTECT_NO_RECOVERY (32)
#define CRYPTPROTECT_PROMPT_ON_PROTECT (2)
#define CRYPTPROTECT_PROMPT_ON_UNPROTECT (1)
#define CRYPTPROTECT_PROMPT_REQUIRE_STRONG (16)
#define CRYPTPROTECT_PROMPT_RESERVED (4)
#define CRYPTPROTECT_PROMPT_STRONG (8)
#define CRYPTPROTECT_UI_FORBIDDEN (1)
#define CRYPTPROTECT_VERIFY_PROTECTION (64)
#define CRYPT_ACCUMULATIVE_TIMEOUT (2048)
#define CRYPT_ACQUIRE_ALLOW_NCRYPT_KEY_FLAG (65536)
#define CRYPT_ACQUIRE_CACHE_FLAG (1)
#define CRYPT_ACQUIRE_COMPARE_KEY_FLAG (4)
#define CRYPT_ACQUIRE_NCRYPT_KEY_FLAGS_MASK (458752)
#define CRYPT_ACQUIRE_NO_HEALING (8)
#define CRYPT_ACQUIRE_ONLY_NCRYPT_KEY_FLAG (262144)
#define CRYPT_ACQUIRE_PREFER_NCRYPT_KEY_FLAG (131072)
#define CRYPT_ACQUIRE_SILENT_FLAG (64)
#define CRYPT_ACQUIRE_USE_PROV_INFO_FLAG (2)
#define CRYPT_ACQUIRE_WINDOW_HANDLE_FLAG (128)
#define CRYPT_AIA_RETRIEVAL (524288)
#define CRYPT_ALL_FUNCTIONS (1)
#define CRYPT_ALL_PROVIDERS (2)
#define CRYPT_ANY (4)
#define CRYPT_ARCHIVABLE (16384)
#define CRYPT_ARCHIVE (256)
#define CRYPT_ASN_ENCODING (1)
#define CRYPT_ASYNC_RETRIEVAL (16)
#define CRYPT_BLOB_VER3 (128)
#define CRYPT_CACHE_ONLY_RETRIEVAL (2)
#define CRYPT_CHECK_FRESHNESS_TIME_VALIDITY (1024)
#define CRYPT_CREATE_IV (512)
#define CRYPT_CREATE_SALT (4)
#define CRYPT_DATA_KEY (2048)
#define CRYPT_DECODE_ALLOC_FLAG (32768)
#define CRYPT_DECODE_ENABLE_IA5CONVERSION_FLAG (100663296)
#define CRYPT_DECODE_ENABLE_PUNYCODE_FLAG (33554432)
#define CRYPT_DECODE_ENABLE_UTF8PERCENT_FLAG (67108864)
#define CRYPT_DECODE_NOCOPY_FLAG (1)
#define CRYPT_DECODE_NO_SIGNATURE_BYTE_REVERSAL_FLAG (8)
#define CRYPT_DECODE_SHARE_OID_STRING_FLAG (4)
#define CRYPT_DECODE_TO_BE_SIGNED_FLAG (2)
#define CRYPT_DECRYPT (2)
#define CRYPT_DECRYPT_RSA_NO_PADDING_CHECK (32)
#define CRYPT_DEFAULT_CONTEXT "Default"
#define CRYPT_DEFAULT_CONTEXT_AUTO_RELEASE_FLAG (1)
#define CRYPT_DEFAULT_CONTEXT_CERT_SIGN_OID (1)
#define CRYPT_DEFAULT_CONTEXT_MULTI_CERT_SIGN_OID (2)
#define CRYPT_DEFAULT_CONTEXT_PROCESS_FLAG (2)
#define CRYPT_DEFAULT_OID "DEFAULT"
#define CRYPT_DELETEKEYSET (16)
#define CRYPT_DELETE_DEFAULT (4)
#define CRYPT_DELETE_KEYSET CRYPT_DELETEKEYSET
#define CRYPT_DESTROYKEY (4)
#define CRYPT_DOMAIN (2)
#define CRYPT_DONT_CACHE_RESULT (8)
#define CRYPT_DONT_CHECK_TIME_VALIDITY (512)
#define CRYPT_DONT_VERIFY_SIGNATURE (256)
#define CRYPT_ECC_CMS_SHARED_INFO_SUPPPUBINFO_BYTE_LENGTH (4)
#define CRYPT_ECC_PRIVATE_KEY_INFO_v1 (1)
#define CRYPT_ENABLE_SSL_REVOCATION_RETRIEVAL (8388608)
#define CRYPT_ENCODE_ALLOC_FLAG (32768)
#define CRYPT_ENCODE_DECODE_NONE (0)
#define CRYPT_ENCODE_ENABLE_IA5CONVERSION_FLAG (393216)
#define CRYPT_ENCODE_ENABLE_PUNYCODE_FLAG (131072)
#define CRYPT_ENCODE_ENABLE_UTF8PERCENT_FLAG (262144)
#define CRYPT_ENCODE_NO_SIGNATURE_BYTE_REVERSAL_FLAG (8)
#define CRYPT_ENCRYPT (1)
#define CRYPT_ENCRYPT_ALG_OID_GROUP_ID (2)
#define CRYPT_ENHKEY_USAGE_OID_GROUP_ID (7)
#define CRYPT_EXCLUSIVE (1)
#define CRYPT_EXPORT (4)
#define CRYPT_EXPORTABLE (1)
#define CRYPT_EXPORT_KEY (64)
#define CRYPT_EXT_OR_ATTR_OID_GROUP_ID (6)
#define CRYPT_E_ALREADY_DECRYPTED _HRESULT_TYPEDEF_ ( 0x80091009 )
#define CRYPT_E_ASN1_BADARGS _HRESULT_TYPEDEF_ ( 0x80093109 )
#define CRYPT_E_ASN1_BADPDU _HRESULT_TYPEDEF_ ( 0x80093108 )
#define CRYPT_E_ASN1_BADREAL _HRESULT_TYPEDEF_ ( 0x8009310A )
#define CRYPT_E_ASN1_BADTAG _HRESULT_TYPEDEF_ ( 0x8009310B )
#define CRYPT_E_ASN1_CHOICE _HRESULT_TYPEDEF_ ( 0x8009310C )
#define CRYPT_E_ASN1_CONSTRAINT _HRESULT_TYPEDEF_ ( 0x80093105 )
#define CRYPT_E_ASN1_CORRUPT _HRESULT_TYPEDEF_ ( 0x80093103 )
#define CRYPT_E_ASN1_EOD _HRESULT_TYPEDEF_ ( 0x80093102 )
#define CRYPT_E_ASN1_ERROR _HRESULT_TYPEDEF_ ( 0x80093100 )
#define CRYPT_E_ASN1_EXTENDED _HRESULT_TYPEDEF_ ( 0x80093201 )
#define CRYPT_E_ASN1_INTERNAL _HRESULT_TYPEDEF_ ( 0x80093101 )
#define CRYPT_E_ASN1_LARGE _HRESULT_TYPEDEF_ ( 0x80093104 )
#define CRYPT_E_ASN1_MEMORY _HRESULT_TYPEDEF_ ( 0x80093106 )
#define CRYPT_E_ASN1_NOEOD _HRESULT_TYPEDEF_ ( 0x80093202 )
#define CRYPT_E_ASN1_NYI _HRESULT_TYPEDEF_ ( 0x80093134 )
#define CRYPT_E_ASN1_OVERFLOW _HRESULT_TYPEDEF_ ( 0x80093107 )
#define CRYPT_E_ASN1_PDU_TYPE _HRESULT_TYPEDEF_ ( 0x80093133 )
#define CRYPT_E_ASN1_RULE _HRESULT_TYPEDEF_ ( 0x8009310D )
#define CRYPT_E_ASN1_UTF8 _HRESULT_TYPEDEF_ ( 0x8009310E )
#define CRYPT_E_ATTRIBUTES_MISSING _HRESULT_TYPEDEF_ ( 0x8009100F )
#define CRYPT_E_AUTH_ATTR_MISSING _HRESULT_TYPEDEF_ ( 0x80091006 )
#define CRYPT_E_BAD_ENCODE _HRESULT_TYPEDEF_ ( 0x80092002 )
#define CRYPT_E_BAD_LEN _HRESULT_TYPEDEF_ ( 0x80092001 )
#define CRYPT_E_BAD_MSG _HRESULT_TYPEDEF_ ( 0x8009200D )
#define CRYPT_E_CONTROL_TYPE _HRESULT_TYPEDEF_ ( 0x8009100C )
#define CRYPT_E_DELETED_PREV _HRESULT_TYPEDEF_ ( 0x80092008 )
#define CRYPT_E_EXISTS _HRESULT_TYPEDEF_ ( 0x80092005 )
#define CRYPT_E_FILERESIZED _HRESULT_TYPEDEF_ ( 0x80092025 )
#define CRYPT_E_FILE_ERROR _HRESULT_TYPEDEF_ ( 0x80092003 )
#define CRYPT_E_HASH_VALUE _HRESULT_TYPEDEF_ ( 0x80091007 )
#define CRYPT_E_INVALID_IA5_STRING _HRESULT_TYPEDEF_ ( 0x80092022 )
#define CRYPT_E_INVALID_INDEX _HRESULT_TYPEDEF_ ( 0x80091008 )
#define CRYPT_E_INVALID_MSG_TYPE _HRESULT_TYPEDEF_ ( 0x80091004 )
#define CRYPT_E_INVALID_NUMERIC_STRING _HRESULT_TYPEDEF_ ( 0x80092020 )
#define CRYPT_E_INVALID_PRINTABLE_STRING _HRESULT_TYPEDEF_ ( 0x80092021 )
#define CRYPT_E_INVALID_X500_STRING _HRESULT_TYPEDEF_ ( 0x80092023 )
#define CRYPT_E_ISSUER_SERIALNUMBER _HRESULT_TYPEDEF_ ( 0x8009100D )
#define CRYPT_E_MISSING_PUBKEY_PARA _HRESULT_TYPEDEF_ ( 0x8009202C )
#define CRYPT_E_MSG_ERROR _HRESULT_TYPEDEF_ ( 0x80091001 )
#define CRYPT_E_NOT_CHAR_STRING _HRESULT_TYPEDEF_ ( 0x80092024 )
#define CRYPT_E_NOT_DECRYPTED _HRESULT_TYPEDEF_ ( 0x8009100A )
#define CRYPT_E_NOT_FOUND _HRESULT_TYPEDEF_ ( 0x80092004 )
#define CRYPT_E_NOT_IN_CTL _HRESULT_TYPEDEF_ ( 0x8009202A )
#define CRYPT_E_NOT_IN_REVOCATION_DATABASE _HRESULT_TYPEDEF_ ( 0x80092014 )
#define CRYPT_E_NO_DECRYPT_CERT _HRESULT_TYPEDEF_ ( 0x8009200C )
#define CRYPT_E_NO_KEY_PROPERTY _HRESULT_TYPEDEF_ ( 0x8009200B )
#define CRYPT_E_NO_MATCH _HRESULT_TYPEDEF_ ( 0x80092009 )
#define CRYPT_E_NO_PROVIDER _HRESULT_TYPEDEF_ ( 0x80092006 )
#define CRYPT_E_NO_REVOCATION_CHECK _HRESULT_TYPEDEF_ ( 0x80092012 )
#define CRYPT_E_NO_REVOCATION_DLL _HRESULT_TYPEDEF_ ( 0x80092011 )
#define CRYPT_E_NO_SIGNER _HRESULT_TYPEDEF_ ( 0x8009200E )
#define CRYPT_E_NO_TRUSTED_SIGNER _HRESULT_TYPEDEF_ ( 0x8009202B )
#define CRYPT_E_NO_VERIFY_USAGE_CHECK _HRESULT_TYPEDEF_ ( 0x80092028 )
#define CRYPT_E_NO_VERIFY_USAGE_DLL _HRESULT_TYPEDEF_ ( 0x80092027 )
#define CRYPT_E_OID_FORMAT _HRESULT_TYPEDEF_ ( 0x80091003 )
#define CRYPT_E_OSS_ERROR _HRESULT_TYPEDEF_ ( 0x80093000 )
#define CRYPT_E_PENDING_CLOSE _HRESULT_TYPEDEF_ ( 0x8009200F )
#define CRYPT_E_RECIPIENT_NOT_FOUND _HRESULT_TYPEDEF_ ( 0x8009100B )
#define CRYPT_E_REVOCATION_OFFLINE _HRESULT_TYPEDEF_ ( 0x80092013 )
#define CRYPT_E_REVOKED _HRESULT_TYPEDEF_ ( 0x80092010 )
#define CRYPT_E_SECURITY_SETTINGS _HRESULT_TYPEDEF_ ( 0x80092026 )
#define CRYPT_E_SELF_SIGNED _HRESULT_TYPEDEF_ ( 0x80092007 )
#define CRYPT_E_SIGNER_NOT_FOUND _HRESULT_TYPEDEF_ ( 0x8009100E )
#define CRYPT_E_STREAM_INSUFFICIENT_DATA _HRESULT_TYPEDEF_ ( 0x80091011 )
#define CRYPT_E_STREAM_MSG_NOT_READY _HRESULT_TYPEDEF_ ( 0x80091010 )
#define CRYPT_E_UNEXPECTED_ENCODING _HRESULT_TYPEDEF_ ( 0x80091005 )
#define CRYPT_E_UNEXPECTED_MSG_TYPE _HRESULT_TYPEDEF_ ( 0x8009200A )
#define CRYPT_E_UNKNOWN_ALGO _HRESULT_TYPEDEF_ ( 0x80091002 )
#define CRYPT_E_VERIFY_USAGE_OFFLINE _HRESULT_TYPEDEF_ ( 0x80092029 )
#define CRYPT_FAILED FALSE
#define CRYPT_FASTSGC (2)
#define CRYPT_FIND_MACHINE_KEYSET_FLAG (2)
#define CRYPT_FIND_SILENT_KEYSET_FLAG (64)
#define CRYPT_FIND_USER_KEYSET_FLAG (1)
#define CRYPT_FIRST (1)
#define CRYPT_FIRST_ALG_OID_GROUP_ID CRYPT_HASH_ALG_OID_GROUP_ID
#define CRYPT_FLAG_IPSEC (16)
#define CRYPT_FLAG_PCT1 (1)
#define CRYPT_FLAG_SIGNING (32)
#define CRYPT_FLAG_SSL2 (2)
#define CRYPT_FLAG_SSL3 (4)
#define CRYPT_FLAG_TLS1 (8)
#define CRYPT_FORMAT_COMMA (4096)
#define CRYPT_FORMAT_CRLF CRYPT_FORMAT_RDN_CRLF
#define CRYPT_FORMAT_OID (4)
#define CRYPT_FORMAT_RDN_CRLF (512)
#define CRYPT_FORMAT_RDN_REVERSE (2048)
#define CRYPT_FORMAT_RDN_SEMICOLON (256)
#define CRYPT_FORMAT_RDN_UNQUOTE (1024)
#define CRYPT_FORMAT_SEMICOLON CRYPT_FORMAT_RDN_SEMICOLON
#define CRYPT_FORMAT_SIMPLE (1)
#define CRYPT_FORMAT_STR_MULTI_LINE (1)
#define CRYPT_FORMAT_STR_NO_HEX (16)
#define CRYPT_FORMAT_X509 (2)
#define CRYPT_GET_INSTALLED_OID_FUNC_FLAG (1)
#define CRYPT_GET_URL_FROM_AUTH_ATTRIBUTE (8)
#define CRYPT_GET_URL_FROM_EXTENSION (2)
#define CRYPT_GET_URL_FROM_PROPERTY (1)
#define CRYPT_GET_URL_FROM_UNAUTH_ATTRIBUTE (4)
#define CRYPT_HASH_ALG_OID_GROUP_ID (1)
#define CRYPT_HTTP_POST_RETRIEVAL (1048576)
#define CRYPT_IMPL_HARDWARE (1)
#define CRYPT_IMPL_MIXED (3)
#define CRYPT_IMPL_REMOVABLE (8)
#define CRYPT_IMPL_SOFTWARE (2)
#define CRYPT_IMPL_UNKNOWN (4)
#define CRYPT_IMPORT_KEY (128)
#define CRYPT_INITIATOR (64)
#define CRYPT_INSTALL_OID_FUNC_BEFORE_FLAG (1)
#define CRYPT_INSTALL_OID_INFO_BEFORE_FLAG (1)
#define CRYPT_IPSEC_HMAC_KEY (256)
#define CRYPT_I_NEW_PROTECTION_REQUIRED _HRESULT_TYPEDEF_ ( 0x00091012 )
#define CRYPT_KDF_OID_GROUP_ID (10)
#define CRYPT_KEEP_TIME_VALID (128)
#define CRYPT_KEK (1024)
#define CRYPT_KEYID_ALLOC_FLAG (32768)
#define CRYPT_KEYID_DELETE_FLAG (16)
#define CRYPT_KEYID_MACHINE_FLAG (32)
#define CRYPT_KEYID_SET_NEW_FLAG (8192)
#define CRYPT_KM (2)
#define CRYPT_LAST_ALG_OID_GROUP_ID CRYPT_SIGN_ALG_OID_GROUP_ID
#define CRYPT_LAST_OID_GROUP_ID (10)
#define CRYPT_LDAP_AREC_EXCLUSIVE_RETRIEVAL (262144)
#define CRYPT_LDAP_INSERT_ENTRY_ATTRIBUTE (32768)
#define CRYPT_LDAP_SCOPE_BASE_ONLY_RETRIEVAL (8192)
#define CRYPT_LDAP_SIGN_RETRIEVAL (65536)
#define CRYPT_LITTLE_ENDIAN (1)
#define CRYPT_LOCAL (1)
#define CRYPT_LOCALIZED_NAME_ENCODING_TYPE (0)
#define CRYPT_LOCALIZED_NAME_OID "LocalizedNames"
#define CRYPT_MAC (32)
#define CRYPT_MACHINE_DEFAULT (1)
#define CRYPT_MACHINE_KEYSET (32)
#define CRYPT_MATCH_ANY_ENCODING_TYPE (4294967295u)
#define CRYPT_MESSAGE_BARE_CONTENT_OUT_FLAG (1)
#define CRYPT_MESSAGE_ENCAPSULATED_CONTENT_OUT_FLAG (2)
#define CRYPT_MESSAGE_KEYID_RECIPIENT_FLAG (4)
#define CRYPT_MESSAGE_KEYID_SIGNER_FLAG (4)
#define CRYPT_MESSAGE_SILENT_KEYSET_FLAG (64)
#define CRYPT_MIN_DEPENDENCIES (1)
#define CRYPT_MM (3)
#define CRYPT_MODE_CBC (1)
#define CRYPT_MODE_CBCI (6)
#define CRYPT_MODE_CBCOFM (9)
#define CRYPT_MODE_CBCOFMI (10)
#define CRYPT_MODE_CFB (4)
#define CRYPT_MODE_CFBP (7)
#define CRYPT_MODE_CTS (5)
#define CRYPT_MODE_ECB (2)
#define CRYPT_MODE_OFB (3)
#define CRYPT_MODE_OFBP (8)
#define CRYPT_NDR_ENCODING (2)
#define CRYPT_NEWKEYSET (8)
#define CRYPT_NEXT (2)
#define CRYPT_NOHASHOID (1)
#define CRYPT_NOT_MODIFIED_RETRIEVAL (4194304)
#define CRYPT_NO_AUTH_RETRIEVAL (131072)
#define CRYPT_NO_OCSP_FAILOVER_TO_CRL_RETRIEVAL (33554432)
#define CRYPT_NO_SALT (16)
#define CRYPT_OAEP (64)
#define CRYPT_OCSP_ONLY_RETRIEVAL (16777216)
#define CRYPT_OFFLINE_CHECK_RETRIEVAL (16384)
#define CRYPT_OID_CREATE_COM_OBJECT_FUNC "CryptDllCreateCOMObject"
#define CRYPT_OID_DECODE_OBJECT_EX_FUNC "CryptDllDecodeObjectEx"
#define CRYPT_OID_DECODE_OBJECT_FUNC "CryptDllDecodeObject"
#define CRYPT_OID_DISABLE_SEARCH_DS_FLAG (2147483648u)
#define CRYPT_OID_ENCODE_OBJECT_EX_FUNC "CryptDllEncodeObjectEx"
#define CRYPT_OID_ENCODE_OBJECT_FUNC "CryptDllEncodeObject"
#define CRYPT_OID_ENUM_PHYSICAL_STORE_FUNC "CertDllEnumPhysicalStore"
#define CRYPT_OID_ENUM_SYSTEM_STORE_FUNC "CertDllEnumSystemStore"
#define CRYPT_OID_EXPORT_PRIVATE_KEY_INFO_FUNC "CryptDllExportPrivateKeyInfoEx"
#define CRYPT_OID_EXPORT_PUBLIC_KEY_INFO_EX2_FUNC "CryptDllExportPublicKeyInfoEx2"
#define CRYPT_OID_EXPORT_PUBLIC_KEY_INFO_FUNC "CryptDllExportPublicKeyInfoEx"
#define CRYPT_OID_EXTRACT_ENCODED_SIGNATURE_PARAMETERS_FUNC "CryptDllExtractEncodedSignatureParameters"
#define CRYPT_OID_FIND_LOCALIZED_NAME_FUNC "CryptDllFindLocalizedName"
#define CRYPT_OID_FIND_OID_INFO_FUNC "CryptDllFindOIDInfo"
#define CRYPT_OID_FORMAT_OBJECT_FUNC "CryptDllFormatObject"
#define CRYPT_OID_IMPORT_PRIVATE_KEY_INFO_FUNC "CryptDllImportPrivateKeyInfoEx"
#define CRYPT_OID_IMPORT_PUBLIC_KEY_INFO_FUNC "CryptDllImportPublicKeyInfoEx"
#define CRYPT_OID_INFO_ALGID_KEY (3)
#define CRYPT_OID_INFO_CNG_ALGID_KEY (5)
#define CRYPT_OID_INFO_CNG_SIGN_KEY (6)
#define CRYPT_OID_INFO_ECC_PARAMETERS_ALGORITHM "CryptOIDInfoECCParameters"
#define CRYPT_OID_INFO_ECC_WRAP_PARAMETERS_ALGORITHM "CryptOIDInfoECCWrapParameters"
#define CRYPT_OID_INFO_HASH_PARAMETERS_ALGORITHM "CryptOIDInfoHashParameters"
#define CRYPT_OID_INFO_MGF1_PARAMETERS_ALGORITHM "CryptOIDInfoMgf1Parameters"
#define CRYPT_OID_INFO_NAME_KEY (2)
#define CRYPT_OID_INFO_NO_PARAMETERS_ALGORITHM "CryptOIDInfoNoParameters"
#define CRYPT_OID_INFO_NO_SIGN_ALGORITHM "CryptOIDInfoNoSign"
#define CRYPT_OID_INFO_OAEP_PARAMETERS_ALGORITHM "CryptOIDInfoOAEPParameters"
#define CRYPT_OID_INFO_OID_GROUP_BIT_LEN_MASK (268369920)
#define CRYPT_OID_INFO_OID_GROUP_BIT_LEN_SHIFT (16)
#define CRYPT_OID_INFO_OID_KEY (1)
#define CRYPT_OID_INFO_OID_KEY_FLAGS_MASK (4294901760u)
#define CRYPT_OID_INFO_PUBKEY_ENCRYPT_KEY_FLAG (1073741824)
#define CRYPT_OID_INFO_PUBKEY_SIGN_KEY_FLAG (2147483648u)
#define CRYPT_OID_INFO_SIGN_KEY (4)
#define CRYPT_OID_INHIBIT_SIGNATURE_FORMAT_FLAG (1)
#define CRYPT_OID_NO_NULL_ALGORITHM_PARA_FLAG (4)
#define CRYPT_OID_OPEN_STORE_PROV_FUNC "CertDllOpenStoreProv"
#define CRYPT_OID_OPEN_SYSTEM_STORE_PROV_FUNC "CertDllOpenSystemStoreProv"
#define CRYPT_OID_PUBKEY_ENCRYPT_ONLY_FLAG (1073741824)
#define CRYPT_OID_PUBKEY_SIGN_ONLY_FLAG (2147483648u)
#define CRYPT_OID_REGISTER_PHYSICAL_STORE_FUNC "CertDllRegisterPhysicalStore"
#define CRYPT_OID_REGISTER_SYSTEM_STORE_FUNC "CertDllRegisterSystemStore"
#define CRYPT_OID_REGPATH "Software\\Microsoft\\Cryptography\\OID"
#define CRYPT_OID_REG_DLL_VALUE_NAME "Dll"
#define CRYPT_OID_REG_ENCODING_TYPE_PREFIX "EncodingType "
#define CRYPT_OID_REG_FLAGS_VALUE_NAME "CryptFlags"
#define CRYPT_OID_REG_FUNC_NAME_VALUE_NAME "FuncName"
#define CRYPT_OID_REG_FUNC_NAME_VALUE_NAME_A "FuncName"
#define CRYPT_OID_SIGN_AND_ENCODE_HASH_FUNC "CryptDllSignAndEncodeHash"
#define CRYPT_OID_SYSTEM_STORE_LOCATION_VALUE_NAME "SystemStoreLocation"
#define CRYPT_OID_UNREGISTER_PHYSICAL_STORE_FUNC "CertDllUnregisterPhysicalStore"
#define CRYPT_OID_UNREGISTER_SYSTEM_STORE_FUNC "CertDllUnregisterSystemStore"
#define CRYPT_OID_USE_PUBKEY_PARA_FOR_PKCS7_FLAG (2)
#define CRYPT_OID_VERIFY_CERTIFICATE_CHAIN_POLICY_FUNC "CertDllVerifyCertificateChainPolicy"
#define CRYPT_OID_VERIFY_CTL_USAGE_FUNC "CertDllVerifyCTLUsage"
#define CRYPT_OID_VERIFY_ENCODED_SIGNATURE_FUNC "CryptDllVerifyEncodedSignature"
#define CRYPT_OID_VERIFY_REVOCATION_FUNC "CertDllVerifyRevocation"
#define CRYPT_ONLINE (128)
#define CRYPT_OVERRIDE (65536)
#define CRYPT_OVERWRITE (1)
#define CRYPT_OWF_REPL_LM_HASH (1)
#define CRYPT_PARAM_ASYNC_RETRIEVAL_COMPLETION ( ( LPCSTR ) 1 )
#define CRYPT_PARAM_CANCEL_ASYNC_RETRIEVAL ( ( LPCSTR ) 2 )
#define CRYPT_POLICY_OID_GROUP_ID (8)
#define CRYPT_PREGEN (64)
#define CRYPT_PRIORITY_BOTTOM (4294967295u)
#define CRYPT_PRIORITY_TOP (0)
#define CRYPT_PROCESS_ISOLATE (65536)
#define CRYPT_PROXY_CACHE_RETRIEVAL (2097152)
#define CRYPT_PSTORE (2)
#define CRYPT_PUBKEY_ALG_OID_GROUP_ID (3)
#define CRYPT_RANDOM_QUERY_STRING_RETRIEVAL (67108864)
#define CRYPT_RC2_128BIT_VERSION (58)
#define CRYPT_RC2_40BIT_VERSION (160)
#define CRYPT_RC2_56BIT_VERSION (52)
#define CRYPT_RC2_64BIT_VERSION (120)
#define CRYPT_RDN_ATTR_OID_GROUP_ID (5)
#define CRYPT_READ (8)
#define CRYPT_RECIPIENT (16)
#define CRYPT_REGISTER_FIRST_INDEX (0)
#define CRYPT_REGISTER_LAST_INDEX (4294967295u)
#define CRYPT_RETRIEVE_MULTIPLE_OBJECTS (1)
#define CRYPT_SECRETDIGEST (1)
#define CRYPT_SEC_DESCR (1)
#define CRYPT_SERVER (1024)
#define CRYPT_SF (256)
#define CRYPT_SGC (1)
#define CRYPT_SGCKEY (8192)
#define CRYPT_SGC_ENUM (4)
#define CRYPT_SIGN_ALG_OID_GROUP_ID (4)
#define CRYPT_SILENT (64)
#define CRYPT_SORTED_CTL_ENCODE_HASHED_SUBJECT_IDENTIFIER_FLAG (65536)
#define CRYPT_SSL2_FALLBACK (2)
#define CRYPT_STICKY_CACHE_RETRIEVAL (4096)
#define CRYPT_STRING_ANY (7)
#define CRYPT_STRING_BASE64 (1)
#define CRYPT_STRING_BASE64HEADER (0)
#define CRYPT_STRING_BASE64REQUESTHEADER (3)
#define CRYPT_STRING_BASE64X509CRLHEADER (9)
#define CRYPT_STRING_BASE64_ANY (6)
#define CRYPT_STRING_BINARY (2)
#define CRYPT_STRING_HASHDATA (268435456)
#define CRYPT_STRING_HEX (4)
#define CRYPT_STRING_HEXADDR (10)
#define CRYPT_STRING_HEXASCII (5)
#define CRYPT_STRING_HEXASCIIADDR (11)
#define CRYPT_STRING_HEXRAW (12)
#define CRYPT_STRING_HEX_ANY (8)
#define CRYPT_STRING_NOCR (2147483648u)
#define CRYPT_STRING_NOCRLF (1073741824)
#define CRYPT_STRING_STRICT (536870912)
#define CRYPT_SUCCEED TRUE
#define CRYPT_TEMPLATE_OID_GROUP_ID (9)
#define CRYPT_TYPE2_FORMAT (2)
#define CRYPT_UI_PROMPT (4)
#define CRYPT_UM (1)
#define CRYPT_UNICODE_NAME_DECODE_DISABLE_IE4_UTF8_FLAG CERT_RDN_DISABLE_IE4_UTF8_FLAG
#define CRYPT_UNICODE_NAME_ENCODE_DISABLE_CHECK_TYPE_FLAG CERT_RDN_DISABLE_CHECK_TYPE_FLAG
#define CRYPT_UNICODE_NAME_ENCODE_ENABLE_T61_UNICODE_FLAG CERT_RDN_ENABLE_T61_UNICODE_FLAG
#define CRYPT_UNICODE_NAME_ENCODE_ENABLE_UTF8_UNICODE_FLAG CERT_RDN_ENABLE_UTF8_UNICODE_FLAG
#define CRYPT_UNICODE_NAME_ENCODE_FORCE_UTF8_UNICODE_FLAG CERT_RDN_FORCE_UTF8_UNICODE_FLAG
#define CRYPT_UPDATE_KEY (8)
#define CRYPT_USERDATA (1)
#define CRYPT_USER_DEFAULT (2)
#define CRYPT_USER_KEYSET (4096)
#define CRYPT_USER_PROTECTED (2)
#define CRYPT_USER_PROTECTED_STRONG (1048576)
#define CRYPT_VERIFYCONTEXT (4026531840u)
#define CRYPT_VERIFY_CERT_SIGN_DISABLE_MD2_MD4_FLAG (1)
#define CRYPT_VERIFY_CERT_SIGN_ISSUER_CERT (2)
#define CRYPT_VERIFY_CERT_SIGN_ISSUER_CHAIN (3)
#define CRYPT_VERIFY_CERT_SIGN_ISSUER_NULL (4)
#define CRYPT_VERIFY_CERT_SIGN_ISSUER_PUBKEY (1)
#define CRYPT_VERIFY_CERT_SIGN_RETURN_STRONG_PROPERTIES_FLAG (4)
#define CRYPT_VERIFY_CERT_SIGN_SET_STRONG_PROPERTIES_FLAG (2)
#define CRYPT_VERIFY_CERT_SIGN_SUBJECT_BLOB (1)
#define CRYPT_VERIFY_CERT_SIGN_SUBJECT_CERT (2)
#define CRYPT_VERIFY_CERT_SIGN_SUBJECT_CRL (3)
#define CRYPT_VERIFY_CERT_SIGN_SUBJECT_OCSP_BASIC_SIGNED_RESPONSE (4)
#define CRYPT_VERIFY_CONTEXT_SIGNATURE (32)
#define CRYPT_VERIFY_DATA_HASH (64)
#define CRYPT_VOLATILE (4096)
#define CRYPT_WIRE_ONLY_RETRIEVAL (4)
#define CRYPT_WRITE (16)
#define CRYPT_X931_FORMAT (4)
#define CRYPT_X942_COUNTER_BYTE_LENGTH (4)
#define CRYPT_X942_KEY_LENGTH_BYTE_LENGTH (4)
#define CRYPT_X942_PUB_INFO_BYTE_LENGTH (64)
#define CRYPT_Y_ONLY (1)
#define CSOUND_SYSTEM (16)
#define CSTR_EQUAL (2)
#define CSTR_GREATER_THAN (3)
#define CSTR_LESS_THAN (1)
#define CS_BYTEALIGNCLIENT (4096)
#define CS_BYTEALIGNWINDOW (8192)
#define CS_CLASSDC (64)
#define CS_DBLCLKS (8)
#define CS_DELETE_TRANSFORM __MSABI_LONG ( 0x00000003 )
#define CS_DISABLE __MSABI_LONG ( 0x00000002 )
#define CS_DROPSHADOW (131072)
#define CS_ENABLE __MSABI_LONG ( 0x00000001 )
#define CS_E_ADMIN_LIMIT_EXCEEDED _HRESULT_TYPEDEF_ ( 0x8004016D )
#define CS_E_CLASS_NOTFOUND _HRESULT_TYPEDEF_ ( 0x80040166 )
#define CS_E_FIRST __MSABI_LONG ( 0x80040164 )
#define CS_E_INTERNAL_ERROR _HRESULT_TYPEDEF_ ( 0x8004016F )
#define CS_E_INVALID_PATH _HRESULT_TYPEDEF_ ( 0x8004016B )
#define CS_E_INVALID_VERSION _HRESULT_TYPEDEF_ ( 0x80040167 )
#define CS_E_LAST __MSABI_LONG ( 0x8004016F )
#define CS_E_NETWORK_ERROR _HRESULT_TYPEDEF_ ( 0x8004016C )
#define CS_E_NOT_DELETABLE _HRESULT_TYPEDEF_ ( 0x80040165 )
#define CS_E_NO_CLASSSTORE _HRESULT_TYPEDEF_ ( 0x80040168 )
#define CS_E_OBJECT_ALREADY_EXISTS _HRESULT_TYPEDEF_ ( 0x8004016A )
#define CS_E_OBJECT_NOTFOUND _HRESULT_TYPEDEF_ ( 0x80040169 )
#define CS_E_PACKAGE_NOTFOUND _HRESULT_TYPEDEF_ ( 0x80040164 )
#define CS_E_SCHEMA_MISMATCH _HRESULT_TYPEDEF_ ( 0x8004016E )
#define CS_GLOBALCLASS (16384)
#define CS_HREDRAW (2)
#define CS_IME (65536)
#define CS_INSERTCHAR (8192)
#define CS_NOCLOSE (512)
#define CS_NOMOVECARET (16384)
#define CS_OWNDC (32)
#define CS_PARENTDC (128)
#define CS_SAVEBITS (2048)
#define CS_VREDRAW (1)
#define CTLCOLOR_BTN (3)
#define CTLCOLOR_DLG (4)
#define CTLCOLOR_EDIT (1)
#define CTLCOLOR_LISTBOX (2)
#define CTLCOLOR_MAX (7)
#define CTLCOLOR_MSGBOX (0)
#define CTLCOLOR_SCROLLBAR (5)
#define CTLCOLOR_STATIC (6)
#define CTL_ANY_SUBJECT_TYPE (1)
#define CTL_CERT_SUBJECT_TYPE (2)
#define CTL_CODE(DeviceType, Function, Method, Access) ( ( ( DeviceType ) << 16 ) | ( ( Access ) << 14 ) | ( ( Function ) << 2 ) | ( Method ) )
#define CTL_ENTRY_FROM_PROP_CHAIN_FLAG (1)
#define CTL_FIND_ANY (0)
#define CTL_FIND_EXISTING (5)
#define CTL_FIND_MD5_HASH (2)
#define CTL_FIND_NO_LIST_ID_CBDATA (4294967295u)
#define CTL_FIND_NO_SIGNER_PTR (-1)
#define CTL_FIND_SAME_USAGE_FLAG (1)
#define CTL_FIND_SHA1_HASH (1)
#define CTL_FIND_SUBJECT (4)
#define CTL_FIND_USAGE (3)
#define CTL_V1 (0)
#define CTRL_BREAK_EVENT (1)
#define CTRL_CLOSE_EVENT (2)
#define CTRL_C_EVENT (0)
#define CTRL_LOGOFF_EVENT (5)
#define CTRL_SHUTDOWN_EVENT (6)
#define CTRY_ALBANIA (355)
#define CTRY_ALGERIA (213)
#define CTRY_ARGENTINA (54)
#define CTRY_ARMENIA (374)
#define CTRY_AUSTRALIA (61)
#define CTRY_AUSTRIA (43)
#define CTRY_AZERBAIJAN (994)
#define CTRY_BAHRAIN (973)
#define CTRY_BELARUS (375)
#define CTRY_BELGIUM (32)
#define CTRY_BELIZE (501)
#define CTRY_BOLIVIA (591)
#define CTRY_BRAZIL (55)
#define CTRY_BRUNEI_DARUSSALAM (673)
#define CTRY_BULGARIA (359)
#define CTRY_CANADA (2)
#define CTRY_CARIBBEAN (1)
#define CTRY_CHILE (56)
#define CTRY_COLOMBIA (57)
#define CTRY_COSTA_RICA (506)
#define CTRY_CROATIA (385)
#define CTRY_CZECH (420)
#define CTRY_DEFAULT (0)
#define CTRY_DENMARK (45)
#define CTRY_DOMINICAN_REPUBLIC (1)
#define CTRY_ECUADOR (593)
#define CTRY_EGYPT (20)
#define CTRY_EL_SALVADOR (503)
#define CTRY_ESTONIA (372)
#define CTRY_FAEROE_ISLANDS (298)
#define CTRY_FINLAND (358)
#define CTRY_FRANCE (33)
#define CTRY_GEORGIA (995)
#define CTRY_GERMANY (49)
#define CTRY_GREECE (30)
#define CTRY_GUATEMALA (502)
#define CTRY_HONDURAS (504)
#define CTRY_HONG_KONG (852)
#define CTRY_HUNGARY (36)
#define CTRY_ICELAND (354)
#define CTRY_INDIA (91)
#define CTRY_INDONESIA (62)
#define CTRY_IRAN (981)
#define CTRY_IRAQ (964)
#define CTRY_IRELAND (353)
#define CTRY_ISRAEL (972)
#define CTRY_ITALY (39)
#define CTRY_JAMAICA (1)
#define CTRY_JAPAN (81)
#define CTRY_JORDAN (962)
#define CTRY_KAZAKSTAN (7)
#define CTRY_KENYA (254)
#define CTRY_KUWAIT (965)
#define CTRY_KYRGYZSTAN (996)
#define CTRY_LATVIA (371)
#define CTRY_LEBANON (961)
#define CTRY_LIBYA (218)
#define CTRY_LIECHTENSTEIN (41)
#define CTRY_LITHUANIA (370)
#define CTRY_LUXEMBOURG (352)
#define CTRY_MACAU (853)
#define CTRY_MACEDONIA (389)
#define CTRY_MALAYSIA (60)
#define CTRY_MALDIVES (960)
#define CTRY_MEXICO (52)
#define CTRY_MONACO (33)
#define CTRY_MONGOLIA (976)
#define CTRY_MOROCCO (212)
#define CTRY_NETHERLANDS (31)
#define CTRY_NEW_ZEALAND (64)
#define CTRY_NICARAGUA (505)
#define CTRY_NORWAY (47)
#define CTRY_OMAN (968)
#define CTRY_PAKISTAN (92)
#define CTRY_PANAMA (507)
#define CTRY_PARAGUAY (595)
#define CTRY_PERU (51)
#define CTRY_PHILIPPINES (63)
#define CTRY_POLAND (48)
#define CTRY_PORTUGAL (351)
#define CTRY_PRCHINA (86)
#define CTRY_PUERTO_RICO (1)
#define CTRY_QATAR (974)
#define CTRY_ROMANIA (40)
#define CTRY_RUSSIA (7)
#define CTRY_SAUDI_ARABIA (966)
#define CTRY_SERBIA (381)
#define CTRY_SINGAPORE (65)
#define CTRY_SLOVAK (421)
#define CTRY_SLOVENIA (386)
#define CTRY_SOUTH_AFRICA (27)
#define CTRY_SOUTH_KOREA (82)
#define CTRY_SPAIN (34)
#define CTRY_SWEDEN (46)
#define CTRY_SWITZERLAND (41)
#define CTRY_SYRIA (963)
#define CTRY_TAIWAN (886)
#define CTRY_TATARSTAN (7)
#define CTRY_THAILAND (66)
#define CTRY_TRINIDAD_Y_TOBAGO (1)
#define CTRY_TUNISIA (216)
#define CTRY_TURKEY (90)
#define CTRY_UAE (971)
#define CTRY_UKRAINE (380)
#define CTRY_UNITED_KINGDOM (44)
#define CTRY_UNITED_STATES (1)
#define CTRY_URUGUAY (598)
#define CTRY_UZBEKISTAN (7)
#define CTRY_VENEZUELA (58)
#define CTRY_VIET_NAM (84)
#define CTRY_YEMEN (967)
#define CTRY_ZIMBABWE (263)
#define CT_CTYPE1 (1)
#define CT_CTYPE2 (2)
#define CT_CTYPE3 (4)
#define CURSOR_SHOWING (1)
#define CURVECAPS (28)
#define CUR_BLOB_VERSION (2)
#define CWF_CREATE_ONLY (1)
#define CWP_ALL (0)
#define CWP_SKIPDISABLED (2)
#define CWP_SKIPINVISIBLE (1)
#define CWP_SKIPTRANSPARENT (4)
#define CW_USEDEFAULT ( ( int ) 0x80000000 )
#define C_ASSERT(e) typedef char __C_ASSERT__ [ ( e ) ? 1 : - 1 ]
#define CacheLineFlush(Address) _mm_clflush ( Address )
#define CallMsgFilter __MINGW_NAME_AW ( CallMsgFilter )
#define CallNamedPipe __MINGW_NAME_AW ( CallNamedPipe )
#define CallWindowProc __MINGW_NAME_AW ( CallWindowProc )
#define CaptureStackBackTrace RtlCaptureStackBackTrace
#define CdChangerClassGuid GUID_DEVINTERFACE_CDCHANGER
#define CdRomClassGuid GUID_DEVINTERFACE_CDROM
#define CertAddEncodedCertificateToSystemStore __MINGW_NAME_AW ( CertAddEncodedCertificateToSystemStore )
#define CertGetNameString __MINGW_NAME_AW ( CertGetNameString )
#define CertNameToStr __MINGW_NAME_AW ( CertNameToStr )
#define CertOpenSystemStore __MINGW_NAME_AW ( CertOpenSystemStore )
#define CertRDNValueToStr __MINGW_NAME_AW ( CertRDNValueToStr )
#define CertStrToName __MINGW_NAME_AW ( CertStrToName )
#define ChangeDisplaySettings __MINGW_NAME_AW ( ChangeDisplaySettings )
#define ChangeDisplaySettingsEx __MINGW_NAME_AW ( ChangeDisplaySettingsEx )
#define ChangeMenu __MINGW_NAME_AW ( ChangeMenu )
#define ChangeServiceConfig __MINGW_NAME_AW ( ChangeServiceConfig )
#define ChangeServiceConfig2 __MINGW_NAME_AW ( ChangeServiceConfig2 )
#define CharLower __MINGW_NAME_AW ( CharLower )
#define CharLowerBuff __MINGW_NAME_AW ( CharLowerBuff )
#define CharNext __MINGW_NAME_AW ( CharNext )
#define CharPrev __MINGW_NAME_AW ( CharPrev )
#define CharToOem __MINGW_NAME_AW ( CharToOem )
#define CharToOemBuff __MINGW_NAME_AW ( CharToOemBuff )
#define CharUpper __MINGW_NAME_AW ( CharUpper )
#define CharUpperBuff __MINGW_NAME_AW ( CharUpperBuff )
#define CheckNameLegalDOS8Dot3 __MINGW_NAME_AW ( CheckNameLegalDOS8Dot3 )
#define ChooseColor __MINGW_NAME_AW ( ChooseColor )
#define ChooseFont __MINGW_NAME_AW ( ChooseFont )
#define ClearEventLog __MINGW_NAME_AW ( ClearEventLog )
#define CommConfigDialog __MINGW_NAME_AW ( CommConfigDialog )
#define CommDlg_OpenSave_GetFilePath __MINGW_NAME_AW ( CommDlg_OpenSave_GetFilePath )
#define CommDlg_OpenSave_GetFilePathA(_hdlg, _psz, _cbmax) ( int ) SNDMSG ( _hdlg , CDM_GETFILEPATH , ( WPARAM ) _cbmax , ( LPARAM ) ( LPSTR ) _psz )
#define CommDlg_OpenSave_GetFilePathW(_hdlg, _psz, _cbmax) ( int ) SNDMSG ( _hdlg , CDM_GETFILEPATH , ( WPARAM ) _cbmax , ( LPARAM ) ( LPWSTR ) _psz )
#define CommDlg_OpenSave_GetFolderIDList(_hdlg, _pidl, _cbmax) ( int ) SNDMSG ( _hdlg , CDM_GETFOLDERIDLIST , ( WPARAM ) _cbmax , ( LPARAM ) ( LPVOID ) _pidl )
#define CommDlg_OpenSave_GetFolderPath __MINGW_NAME_AW ( CommDlg_OpenSave_GetFolderPath )
#define CommDlg_OpenSave_GetFolderPathA(_hdlg, _psz, _cbmax) ( int ) SNDMSG ( _hdlg , CDM_GETFOLDERPATH , ( WPARAM ) _cbmax , ( LPARAM ) ( LPSTR ) _psz )
#define CommDlg_OpenSave_GetFolderPathW(_hdlg, _psz, _cbmax) ( int ) SNDMSG ( _hdlg , CDM_GETFOLDERPATH , ( WPARAM ) _cbmax , ( LPARAM ) ( LPWSTR ) _psz )
#define CommDlg_OpenSave_GetSpec __MINGW_NAME_AW ( CommDlg_OpenSave_GetSpec )
#define CommDlg_OpenSave_GetSpecA(_hdlg, _psz, _cbmax) ( int ) SNDMSG ( _hdlg , CDM_GETSPEC , ( WPARAM ) _cbmax , ( LPARAM ) ( LPSTR ) _psz )
#define CommDlg_OpenSave_GetSpecW(_hdlg, _psz, _cbmax) ( int ) SNDMSG ( _hdlg , CDM_GETSPEC , ( WPARAM ) _cbmax , ( LPARAM ) ( LPWSTR ) _psz )
#define CommDlg_OpenSave_HideControl(_hdlg, _id) ( void ) SNDMSG ( _hdlg , CDM_HIDECONTROL , ( WPARAM ) _id , 0 )
#define CommDlg_OpenSave_SetControlText(_hdlg, _id, _text) ( void ) SNDMSG ( _hdlg , CDM_SETCONTROLTEXT , ( WPARAM ) _id , ( LPARAM ) ( LPSTR ) _text )
#define CommDlg_OpenSave_SetDefExt(_hdlg, _pszext) ( void ) SNDMSG ( _hdlg , CDM_SETDEFEXT , 0 , ( LPARAM ) ( LPSTR ) _pszext )
#define CompareString CompareStringA
#define ConfigurePort __MINGW_NAME_AW ( ConfigurePort )
#define CopyAcceleratorTable __MINGW_NAME_AW ( CopyAcceleratorTable )
#define CopyCursor(pcur) ( ( HCURSOR ) CopyIcon ( ( HICON ) ( pcur ) ) )
#define CopyEnhMetaFile __MINGW_NAME_AW ( CopyEnhMetaFile )
#define CopyFile __MINGW_NAME_AW ( CopyFile )
#define CopyFileEx __MINGW_NAME_AW ( CopyFileEx )
#define CopyMemory RtlCopyMemory
#define CopyMetaFile __MINGW_NAME_AW ( CopyMetaFile )
#define CreateAcceleratorTable __MINGW_NAME_AW ( CreateAcceleratorTable )
#define CreateActCtx __MINGW_NAME_AW ( CreateActCtx )
#define CreateBoundaryDescriptor __MINGW_NAME_AW ( CreateBoundaryDescriptor )
#define CreateColorSpace __MINGW_NAME_AW ( CreateColorSpace )
#define CreateDC __MINGW_NAME_AW ( CreateDC )
#define CreateDesktop __MINGW_NAME_AW ( CreateDesktop )
#define CreateDesktopEx __MINGW_NAME_AW ( CreateDesktopEx )
#define CreateDialog __MINGW_NAME_AW ( CreateDialog )
#define CreateDialogA(hInstance, lpName, hWndParent, lpDialogFunc) CreateDialogParamA ( hInstance , lpName , hWndParent , lpDialogFunc , ( LPARAM ) 0 )
#define CreateDialogIndirect __MINGW_NAME_AW ( CreateDialogIndirect )
#define CreateDialogIndirectA(hInstance, lpTemplate, hWndParent, lpDialogFunc) CreateDialogIndirectParamA ( hInstance , lpTemplate , hWndParent , lpDialogFunc , ( LPARAM ) 0 )
#define CreateDialogIndirectParam __MINGW_NAME_AW ( CreateDialogIndirectParam )
#define CreateDialogIndirectW(hInstance, lpTemplate, hWndParent, lpDialogFunc) CreateDialogIndirectParamW ( hInstance , lpTemplate , hWndParent , lpDialogFunc , ( LPARAM ) 0 )
#define CreateDialogParam __MINGW_NAME_AW ( CreateDialogParam )
#define CreateDialogW(hInstance, lpName, hWndParent, lpDialogFunc) CreateDialogParamW ( hInstance , lpName , hWndParent , lpDialogFunc , ( LPARAM ) 0 )
#define CreateDirectory __MINGW_NAME_AW ( CreateDirectory )
#define CreateDirectoryEx __MINGW_NAME_AW ( CreateDirectoryEx )
#define CreateEnhMetaFile __MINGW_NAME_AW ( CreateEnhMetaFile )
#define CreateEvent __MINGW_NAME_AW ( CreateEvent )
#define CreateFile __MINGW_NAME_AW ( CreateFile )
#define CreateFileMapping CreateFileMappingA
#define CreateFont __MINGW_NAME_AW ( CreateFont )
#define CreateFontIndirect __MINGW_NAME_AW ( CreateFontIndirect )
#define CreateFontIndirectEx __MINGW_NAME_AW ( CreateFontIndirectEx )
#define CreateHardLink __MINGW_NAME_AW ( CreateHardLink )
#define CreateIC __MINGW_NAME_AW ( CreateIC )
#define CreateJobObject __MINGW_NAME_AW ( CreateJobObject )
#define CreateMDIWindow __MINGW_NAME_AW ( CreateMDIWindow )
#define CreateMailslot __MINGW_NAME_AW ( CreateMailslot )
#define CreateMetaFile __MINGW_NAME_AW ( CreateMetaFile )
#define CreateMutex __MINGW_NAME_AW ( CreateMutex )
#define CreateNamedPipe CreateNamedPipeA
#define CreatePrivateNamespace __MINGW_NAME_AW ( CreatePrivateNamespace )
#define CreateProcess __MINGW_NAME_AW ( CreateProcess )
#define CreateProcessAsUser CreateProcessAsUserA
#define CreatePropertySheetPage __MINGW_NAME_AW ( CreatePropertySheetPage )
#define CreateScalableFontResource __MINGW_NAME_AW ( CreateScalableFontResource )
#define CreateSemaphore __MINGW_NAME_AW ( CreateSemaphore )
#define CreateService __MINGW_NAME_AW ( CreateService )
#define CreateWaitableTimer __MINGW_NAME_AW ( CreateWaitableTimer )
#define CreateWindow __MINGW_NAME_AW ( CreateWindow )
#define CreateWindowA(lpClassName, lpWindowName, dwStyle, x, y, nWidth, nHeight, hWndParent, hMenu, hInstance, lpParam) CreateWindowExA ( ( DWORD ) 0 , lpClassName , lpWindowName , dwStyle , x , y , nWidth , nHeight , hWndParent , hMenu , hInstance , lpParam )
#define CreateWindowEx __MINGW_NAME_AW ( CreateWindowEx )
#define CreateWindowStation __MINGW_NAME_AW ( CreateWindowStation )
#define CreateWindowW(lpClassName, lpWindowName, dwStyle, x, y, nWidth, nHeight, hWndParent, hMenu, hInstance, lpParam) CreateWindowExW ( ( DWORD ) 0 , lpClassName , lpWindowName , dwStyle , x , y , nWidth , nHeight , hWndParent , hMenu , hInstance , lpParam )
#define CryptAcquireContext __MINGW_NAME_AW ( CryptAcquireContext )
#define CryptBinaryToString __MINGW_NAME_AW ( CryptBinaryToString )
#define CryptEnumProviderTypes __MINGW_NAME_AW ( CryptEnumProviderTypes )
#define CryptEnumProviders __MINGW_NAME_AW ( CryptEnumProviders )
#define CryptGetDefaultProvider __MINGW_NAME_AW ( CryptGetDefaultProvider )
#define CryptRetrieveObjectByUrl __MINGW_NAME_AW ( CryptRetrieveObjectByUrl )
#define CryptSetProvider __MINGW_NAME_AW ( CryptSetProvider )
#define CryptSetProviderEx __MINGW_NAME_AW ( CryptSetProviderEx )
#define CryptSignHash __MINGW_NAME_AW ( CryptSignHash )
#define CryptStringToBinary __MINGW_NAME_AW ( CryptStringToBinary )
#define CryptVerifySignature __MINGW_NAME_AW ( CryptVerifySignature )
#define DACL_SECURITY_INFORMATION (4l)
#define DATABITS_16 ( ( WORD ) 0x10 )
#define DATABITS_16X ( ( WORD ) 0x20 )
#define DATABITS_5 ( ( WORD ) 0x1 )
#define DATABITS_6 ( ( WORD ) 0x2 )
#define DATABITS_7 ( ( WORD ) 0x4 )
#define DATABITS_8 ( ( WORD ) 0x8 )
#define DATA_E_FIRST __MSABI_LONG ( 0x80040130 )
#define DATA_E_LAST __MSABI_LONG ( 0x8004013F )
#define DATA_S_FIRST __MSABI_LONG ( 0x00040130 )
#define DATA_S_LAST __MSABI_LONG ( 0x0004013F )
#define DATA_S_SAMEFORMATETC _HRESULT_TYPEDEF_ ( 0x00040130 )
#define DATEFMT_ENUMPROC DATEFMT_ENUMPROCA
#define DATEFMT_ENUMPROCEX DATEFMT_ENUMPROCEXA
#define DATE_LONGDATE (2)
#define DATE_LTRREADING (16)
#define DATE_RTLREADING (32)
#define DATE_SHORTDATE (1)
#define DATE_USE_ALT_CALENDAR (4)
#define DATE_YEARMONTH (8)
#define DBG_COMMAND_EXCEPTION ( ( DWORD ) 0x40010009 )
#define DBG_CONTINUE ( ( DWORD ) 0x00010002 )
#define DBG_CONTROL_BREAK ( ( DWORD ) 0x40010008 )
#define DBG_CONTROL_C ( ( DWORD ) 0x40010005 )
#define DBG_EXCEPTION_HANDLED ( ( DWORD ) 0x00010001 )
#define DBG_EXCEPTION_NOT_HANDLED ( ( DWORD ) 0x80010001 )
#define DBG_PRINTEXCEPTION_C ( ( DWORD ) 0x40010006 )
#define DBG_RIPEXCEPTION ( ( DWORD ) 0x40010007 )
#define DBG_TERMINATE_PROCESS ( ( DWORD ) 0x40010004 )
#define DBG_TERMINATE_THREAD ( ( DWORD ) 0x40010003 )
#define DBG_UNREFERENCED_LOCAL_VARIABLE(V) ( V )
#define DBG_UNREFERENCED_PARAMETER(P) ( P )
#define DCBA_FACEDOWNCENTER (257)
#define DCBA_FACEDOWNLEFT (258)
#define DCBA_FACEDOWNNONE (256)
#define DCBA_FACEDOWNRIGHT (259)
#define DCBA_FACEUPCENTER (1)
#define DCBA_FACEUPLEFT (2)
#define DCBA_FACEUPNONE (0)
#define DCBA_FACEUPRIGHT (3)
#define DCB_ACCUMULATE (2)
#define DCB_DIRTY DCB_ACCUMULATE
#define DCB_DISABLE (8)
#define DCB_ENABLE (4)
#define DCB_RESET (1)
#define DCB_SET (3)
#define DCE_C_ERROR_STRING_LEN (256)
#define DCOMSCM_ACTIVATION_DISALLOW_UNSECURE_CALL (2)
#define DCOMSCM_ACTIVATION_USE_ALL_AUTHNSERVICES (1)
#define DCOMSCM_PING_DISALLOW_UNSECURE_CALL (32)
#define DCOMSCM_PING_USE_MID_AUTHNSERVICE (16)
#define DCOMSCM_RESOLVE_DISALLOW_UNSECURE_CALL (8)
#define DCOMSCM_RESOLVE_USE_ALL_AUTHNSERVICES (4)
#define DCTT_BITMAP __MSABI_LONG ( 0x0000001 )
#define DCTT_DOWNLOAD __MSABI_LONG ( 0x0000002 )
#define DCTT_DOWNLOAD_OUTLINE __MSABI_LONG ( 0x0000008 )
#define DCTT_SUBDEV __MSABI_LONG ( 0x0000004 )
#define DCX_CACHE __MSABI_LONG ( 0x00000002 )
#define DCX_CLIPCHILDREN __MSABI_LONG ( 0x00000008 )
#define DCX_CLIPSIBLINGS __MSABI_LONG ( 0x00000010 )
#define DCX_EXCLUDERGN __MSABI_LONG ( 0x00000040 )
#define DCX_EXCLUDEUPDATE __MSABI_LONG ( 0x00000100 )
#define DCX_INTERSECTRGN __MSABI_LONG ( 0x00000080 )
#define DCX_INTERSECTUPDATE __MSABI_LONG ( 0x00000200 )
#define DCX_LOCKWINDOWUPDATE __MSABI_LONG ( 0x00000400 )
#define DCX_NORESETATTRS __MSABI_LONG ( 0x00000004 )
#define DCX_PARENTCLIP __MSABI_LONG ( 0x00000020 )
#define DCX_VALIDATE __MSABI_LONG ( 0x00200000 )
#define DCX_WINDOW __MSABI_LONG ( 0x00000001 )
#define DC_ACTIVE (1)
#define DC_BINADJUST (19)
#define DC_BINNAMES (12)
#define DC_BINS (6)
#define DC_BRUSH (18)
#define DC_BUTTONS (4096)
#define DC_COLLATE (22)
#define DC_COLORDEVICE (32)
#define DC_COPIES (18)
#define DC_DATATYPE_PRODUCED (21)
#define DC_DRIVER (11)
#define DC_DUPLEX (7)
#define DC_EMF_COMPLIANT (20)
#define DC_ENUMRESOLUTIONS (13)
#define DC_EXTRA (9)
#define DC_FIELDS (1)
#define DC_FILEDEPENDENCIES (14)
#define DC_GRADIENT (32)
#define DC_HASDEFID (21323)
#define DC_ICON (4)
#define DC_INBUTTON (16)
#define DC_MANUFACTURER (23)
#define DC_MAXEXTENT (5)
#define DC_MEDIAREADY (29)
#define DC_MEDIATYPENAMES (34)
#define DC_MEDIATYPES (35)
#define DC_MINEXTENT (4)
#define DC_MODEL (24)
#define DC_NUP (33)
#define DC_ORIENTATION (17)
#define DC_PAPERNAMES (16)
#define DC_PAPERS (2)
#define DC_PAPERSIZE (3)
#define DC_PEN (19)
#define DC_PERSONALITY (25)
#define DC_PRINTERMEM (28)
#define DC_PRINTRATE (26)
#define DC_PRINTRATEPPM (31)
#define DC_PRINTRATEUNIT (27)
#define DC_SIZE (8)
#define DC_SMALLCAP (2)
#define DC_STAPLE (30)
#define DC_TEXT (8)
#define DC_TRUETYPE (15)
#define DC_VERSION (10)
#define DDD_EXACT_MATCH_ON_REMOVE (4)
#define DDD_LUID_BROADCAST_DRIVE (16)
#define DDD_NO_BROADCAST_SYSTEM (8)
#define DDD_RAW_TARGET_PATH (1)
#define DDD_REMOVE_DEFINITION (2)
#define DDE_FACK (32768)
#define DDE_FACKREQ (32768)
#define DDE_FACKRESERVED (-49408)
#define DDE_FADVRESERVED (-49153)
#define DDE_FAPPSTATUS (255)
#define DDE_FBUSY (16384)
#define DDE_FDATRESERVED (-45057)
#define DDE_FDEFERUPD (16384)
#define DDE_FNOTPROCESSED (0)
#define DDE_FPOKRESERVED (-8193)
#define DDE_FRELEASE (8192)
#define DDE_FREQUESTED (4096)
#define DDL_ARCHIVE (32)
#define DDL_DIRECTORY (16)
#define DDL_DRIVES (16384)
#define DDL_EXCLUSIVE (32768)
#define DDL_HIDDEN (2)
#define DDL_POSTMSGS (8192)
#define DDL_READONLY (1)
#define DDL_READWRITE (0)
#define DDL_SYSTEM (4)
#define DEACTIVATE_ACTCTX_FLAG_FORCE_EARLY_DEACTIVATION (1)
#define DEBUG_ONLY_THIS_PROCESS (2)
#define DEBUG_PROCESS (1)
#define DECIMAL_NEG ( ( BYTE ) 0x80 )
#define DECIMAL_SETZERO(dec) { ( dec ) . Lo64 = 0 ; ( dec ) . Hi32 = 0 ; ( dec ) . signscale = 0 ; }
#define DECLARE_HANDLE(name) struct name ## __ { int unused ; } ; typedef struct name ## __ * name
#define DECLSPEC_ALIGN(x) 
#define DECLSPEC_CACHEALIGN DECLSPEC_ALIGN ( SYSTEM_CACHE_ALIGNMENT_SIZE )
#define DECLSPEC_DEPRECATED __declspec ( deprecated )
#define DECLSPEC_DEPRECATED_DDK 
#define DECLSPEC_IMPORT __declspec ( dllimport )
#define DECLSPEC_NOINLINE 
#define DECLSPEC_NORETURN __declspec ( noreturn )
#define DECLSPEC_NOTHROW __declspec ( nothrow )
#define DECLSPEC_NOVTABLE 
#define DECLSPEC_SELECTANY __declspec ( selectany )
#define DECLSPEC_UUID(x) 
#define DECREF(x) ( ( ( ( x ) >> N_TSHIFT ) & ~ N_BTMASK ) | ( ( x ) & N_BTMASK ) )
#define DEFAULT_CHARSET (1)
#define DEFAULT_GUI_FONT (17)
#define DEFAULT_IMPERSONATION_LEVEL SecurityImpersonation
#define DEFAULT_PALETTE (15)
#define DEFAULT_PITCH (0)
#define DEFAULT_QUALITY (0)
#define DEFAULT_UNREACHABLE 
#define DEFINED_LPUINT 
#define DEFINE_ENUM_FLAG_OPERATORS(ENUMTYPE) 
#define DEFINE_GUID(name, l, w1, w2, b1, b2, b3, b4, b5, b6, b7, b8) EXTERN_C const GUID name
#define DEFINE_OLEGUID(name, l, w1, w2) DEFINE_GUID ( name , l , w1 , w2 , 0xc0 , 0 , 0 , 0 , 0 , 0 , 0 , 0x46 )
#define DEF_PRIORITY (1)
#define DELETE (65536l)
#define DEPRECATE_SUPPORTED 
#define DEREGISTERED (5)
#define DESKTOPHORZRES (118)
#define DESKTOPVERTRES (117)
#define DESKTOP_CREATEMENU __MSABI_LONG ( 0x0004 )
#define DESKTOP_CREATEWINDOW __MSABI_LONG ( 0x0002 )
#define DESKTOP_ENUMERATE __MSABI_LONG ( 0x0040 )
#define DESKTOP_HOOKCONTROL __MSABI_LONG ( 0x0008 )
#define DESKTOP_JOURNALPLAYBACK __MSABI_LONG ( 0x0020 )
#define DESKTOP_JOURNALRECORD __MSABI_LONG ( 0x0010 )
#define DESKTOP_READOBJECTS __MSABI_LONG ( 0x0001 )
#define DESKTOP_SWITCHDESKTOP __MSABI_LONG ( 0x0100 )
#define DESKTOP_WRITEOBJECTS __MSABI_LONG ( 0x0080 )
#define DETACHED_PROCESS (8)
#define DEVICEDATA (19)
#define DEVICE_DEFAULT_FONT (14)
#define DEVICE_FONTTYPE (2)
#define DEVICE_NOTIFY_ALL_INTERFACE_CLASSES (4)
#define DEVICE_NOTIFY_SERVICE_HANDLE (1)
#define DEVICE_NOTIFY_WINDOW_HANDLE (0)
#define DEVICE_TYPE DWORD
#define DEVICE_TYPE_FROM_CTL_CODE(ctrlCode) ( ( ( DWORD ) ( ctrlCode & 0xffff0000 ) ) >> 16 )
#define DFCS_ADJUSTRECT (8192)
#define DFCS_BUTTON3STATE (8)
#define DFCS_BUTTONCHECK (0)
#define DFCS_BUTTONPUSH (16)
#define DFCS_BUTTONRADIO (4)
#define DFCS_BUTTONRADIOIMAGE (1)
#define DFCS_BUTTONRADIOMASK (2)
#define DFCS_CAPTIONCLOSE (0)
#define DFCS_CAPTIONHELP (4)
#define DFCS_CAPTIONMAX (2)
#define DFCS_CAPTIONMIN (1)
#define DFCS_CAPTIONRESTORE (3)
#define DFCS_CHECKED (1024)
#define DFCS_FLAT (16384)
#define DFCS_HOT (4096)
#define DFCS_INACTIVE (256)
#define DFCS_MENUARROW (0)
#define DFCS_MENUARROWRIGHT (4)
#define DFCS_MENUBULLET (2)
#define DFCS_MENUCHECK (1)
#define DFCS_MONO (32768)
#define DFCS_PUSHED (512)
#define DFCS_SCROLLCOMBOBOX (5)
#define DFCS_SCROLLDOWN (1)
#define DFCS_SCROLLLEFT (2)
#define DFCS_SCROLLRIGHT (3)
#define DFCS_SCROLLSIZEGRIP (8)
#define DFCS_SCROLLSIZEGRIPRIGHT (16)
#define DFCS_SCROLLUP (0)
#define DFCS_TRANSPARENT (2048)
#define DFC_BUTTON (4)
#define DFC_CAPTION (1)
#define DFC_MENU (2)
#define DFC_POPUPMENU (5)
#define DFC_SCROLL (3)
#define DF_ALLOWOTHERACCOUNTHOOK __MSABI_LONG ( 0x0001 )
#define DIAGNOSTIC_REASON_DETAILED_STRING (2)
#define DIAGNOSTIC_REASON_INVALID_FLAGS (2147483644u)
#define DIAGNOSTIC_REASON_NOT_SPECIFIED (2147483648u)
#define DIAGNOSTIC_REASON_SIMPLE_STRING (1)
#define DIAGNOSTIC_REASON_VERSION (0)
#define DIALOPTION_BILLING (64)
#define DIALOPTION_DIALTONE (256)
#define DIALOPTION_QUIET (128)
#define DIBINDEX(n) MAKELONG ( ( n ) , 0x10FF )
#define DIB_PAL_COLORS (1)
#define DIB_RGB_COLORS (0)
#define DIFFERENCE (11)
#define DIGSIG_E_CRYPTO _HRESULT_TYPEDEF_ ( 0x800B0008 )
#define DIGSIG_E_DECODE _HRESULT_TYPEDEF_ ( 0x800B0006 )
#define DIGSIG_E_ENCODE _HRESULT_TYPEDEF_ ( 0x800B0005 )
#define DIGSIG_E_EXTENSIBILITY _HRESULT_TYPEDEF_ ( 0x800B0007 )
#define DISABLE_MAX_PRIVILEGE (1)
#define DISABLE_SMART (217)
#define DISCHARGE_POLICY_CRITICAL (0)
#define DISCHARGE_POLICY_LOW (1)
#define DISC_NO_FORCE (64)
#define DISC_UPDATE_PROFILE (1)
#define DISK_BINNING (3)
#define DISK_HISTOGRAM_SIZE sizeof ( DISK_HISTOGRAM )
#define DISK_LOGGING_DUMP (2)
#define DISK_LOGGING_START (0)
#define DISK_LOGGING_STOP (1)
#define DISPLAY_DEVICE_ACTIVE (1)
#define DISPLAY_DEVICE_ATTACHED (2)
#define DISPLAY_DEVICE_ATTACHED_TO_DESKTOP (1)
#define DISPLAY_DEVICE_DISCONNECT (33554432)
#define DISPLAY_DEVICE_MIRRORING_DRIVER (8)
#define DISPLAY_DEVICE_MODESPRUNED (134217728)
#define DISPLAY_DEVICE_MULTI_DRIVER (2)
#define DISPLAY_DEVICE_PRIMARY_DEVICE (4)
#define DISPLAY_DEVICE_REMOTE (67108864)
#define DISPLAY_DEVICE_REMOVABLE (32)
#define DISPLAY_DEVICE_TS_COMPATIBLE (2097152)
#define DISPLAY_DEVICE_VGA_COMPATIBLE (16)
#define DISP_CHANGE_BADDUALVIEW (-6)
#define DISP_CHANGE_BADFLAGS (-4)
#define DISP_CHANGE_BADMODE (-2)
#define DISP_CHANGE_BADPARAM (-5)
#define DISP_CHANGE_FAILED (-1)
#define DISP_CHANGE_NOTUPDATED (-3)
#define DISP_CHANGE_RESTART (1)
#define DISP_CHANGE_SUCCESSFUL (0)
#define DISP_E_ARRAYISLOCKED _HRESULT_TYPEDEF_ ( 0x8002000D )
#define DISP_E_BADCALLEE _HRESULT_TYPEDEF_ ( 0x80020010 )
#define DISP_E_BADINDEX _HRESULT_TYPEDEF_ ( 0x8002000B )
#define DISP_E_BADPARAMCOUNT _HRESULT_TYPEDEF_ ( 0x8002000E )
#define DISP_E_BADVARTYPE _HRESULT_TYPEDEF_ ( 0x80020008 )
#define DISP_E_BUFFERTOOSMALL _HRESULT_TYPEDEF_ ( 0x80020013 )
#define DISP_E_DIVBYZERO _HRESULT_TYPEDEF_ ( 0x80020012 )
#define DISP_E_EXCEPTION _HRESULT_TYPEDEF_ ( 0x80020009 )
#define DISP_E_MEMBERNOTFOUND _HRESULT_TYPEDEF_ ( 0x80020003 )
#define DISP_E_NONAMEDARGS _HRESULT_TYPEDEF_ ( 0x80020007 )
#define DISP_E_NOTACOLLECTION _HRESULT_TYPEDEF_ ( 0x80020011 )
#define DISP_E_OVERFLOW _HRESULT_TYPEDEF_ ( 0x8002000A )
#define DISP_E_PARAMNOTFOUND _HRESULT_TYPEDEF_ ( 0x80020004 )
#define DISP_E_PARAMNOTOPTIONAL _HRESULT_TYPEDEF_ ( 0x8002000F )
#define DISP_E_TYPEMISMATCH _HRESULT_TYPEDEF_ ( 0x80020005 )
#define DISP_E_UNKNOWNINTERFACE _HRESULT_TYPEDEF_ ( 0x80020001 )
#define DISP_E_UNKNOWNLCID _HRESULT_TYPEDEF_ ( 0x8002000C )
#define DISP_E_UNKNOWNNAME _HRESULT_TYPEDEF_ ( 0x80020006 )
#define DI_APPBANDING (1)
#define DI_CHANNEL (1)
#define DI_COMPAT (4)
#define DI_DEFAULTSIZE (8)
#define DI_IMAGE (2)
#define DI_MASK (1)
#define DI_MEMORYMAP_WRITE (1)
#define DI_NOMIRROR (16)
#define DI_NORMAL (3)
#define DI_READ_SPOOL_JOB (3)
#define DI_ROPS_READ_DESTINATION (2)
#define DKGRAY_BRUSH (3)
#define DLGC_BUTTON (8192)
#define DLGC_DEFPUSHBUTTON (16)
#define DLGC_HASSETSEL (8)
#define DLGC_RADIOBUTTON (64)
#define DLGC_STATIC (256)
#define DLGC_UNDEFPUSHBUTTON (32)
#define DLGC_WANTALLKEYS (4)
#define DLGC_WANTARROWS (1)
#define DLGC_WANTCHARS (128)
#define DLGC_WANTMESSAGE (4)
#define DLGC_WANTTAB (2)
#define DLGWINDOWEXTRA (30)
#define DLL_PROCESS_ATTACH (1)
#define DLL_PROCESS_DETACH (0)
#define DLL_PROCESS_VERIFIER (4)
#define DLL_THREAD_ATTACH (2)
#define DLL_THREAD_DETACH (3)
#define DMBIN_AUTO (7)
#define DMBIN_CASSETTE (14)
#define DMBIN_ENVELOPE (5)
#define DMBIN_ENVMANUAL (6)
#define DMBIN_FIRST DMBIN_UPPER
#define DMBIN_FORMSOURCE (15)
#define DMBIN_LARGECAPACITY (11)
#define DMBIN_LARGEFMT (10)
#define DMBIN_LAST DMBIN_FORMSOURCE
#define DMBIN_LOWER (2)
#define DMBIN_MANUAL (4)
#define DMBIN_MIDDLE (3)
#define DMBIN_ONLYONE (1)
#define DMBIN_SMALLFMT (9)
#define DMBIN_TRACTOR (8)
#define DMBIN_UPPER (1)
#define DMBIN_USER (256)
#define DMCOLLATE_FALSE (0)
#define DMCOLLATE_TRUE (1)
#define DMCOLOR_COLOR (2)
#define DMCOLOR_MONOCHROME (1)
#define DMDFO_CENTER (2)
#define DMDFO_DEFAULT (0)
#define DMDFO_STRETCH (1)
#define DMDISPLAYFLAGS_TEXTMODE (4)
#define DMDITHER_COARSE (2)
#define DMDITHER_ERRORDIFFUSION (5)
#define DMDITHER_FINE (3)
#define DMDITHER_GRAYSCALE (10)
#define DMDITHER_LINEART (4)
#define DMDITHER_NONE (1)
#define DMDITHER_RESERVED6 (6)
#define DMDITHER_RESERVED7 (7)
#define DMDITHER_RESERVED8 (8)
#define DMDITHER_RESERVED9 (9)
#define DMDITHER_USER (256)
#define DMDO_180 (2)
#define DMDO_270 (3)
#define DMDO_90 (1)
#define DMDO_DEFAULT (0)
#define DMDUP_HORIZONTAL (3)
#define DMDUP_SIMPLEX (1)
#define DMDUP_VERTICAL (2)
#define DMICMMETHOD_DEVICE (4)
#define DMICMMETHOD_DRIVER (3)
#define DMICMMETHOD_NONE (1)
#define DMICMMETHOD_SYSTEM (2)
#define DMICMMETHOD_USER (256)
#define DMICM_ABS_COLORIMETRIC (4)
#define DMICM_COLORIMETRIC (3)
#define DMICM_CONTRAST (2)
#define DMICM_SATURATE (1)
#define DMICM_USER (256)
#define DMLERR_ADVACKTIMEOUT (16384)
#define DMLERR_BUSY (16385)
#define DMLERR_DATAACKTIMEOUT (16386)
#define DMLERR_DLL_NOT_INITIALIZED (16387)
#define DMLERR_DLL_USAGE (16388)
#define DMLERR_EXECACKTIMEOUT (16389)
#define DMLERR_FIRST (16384)
#define DMLERR_INVALIDPARAMETER (16390)
#define DMLERR_LAST (16401)
#define DMLERR_LOW_MEMORY (16391)
#define DMLERR_MEMORY_ERROR (16392)
#define DMLERR_NOTPROCESSED (16393)
#define DMLERR_NO_CONV_ESTABLISHED (16394)
#define DMLERR_NO_ERROR (0)
#define DMLERR_POKEACKTIMEOUT (16395)
#define DMLERR_POSTMSG_FAILED (16396)
#define DMLERR_REENTRANCY (16397)
#define DMLERR_SERVER_DIED (16398)
#define DMLERR_SYS_ERROR (16399)
#define DMLERR_UNADVACKTIMEOUT (16400)
#define DMLERR_UNFOUND_QUEUE_ID (16401)
#define DMMEDIA_GLOSSY (3)
#define DMMEDIA_STANDARD (1)
#define DMMEDIA_TRANSPARENCY (2)
#define DMMEDIA_USER (256)
#define DMNUP_ONEUP (2)
#define DMNUP_SYSTEM (1)
#define DMORIENT_LANDSCAPE (2)
#define DMORIENT_PORTRAIT (1)
#define DMPAPER_10X11 (45)
#define DMPAPER_10X14 (16)
#define DMPAPER_11X17 (17)
#define DMPAPER_12X11 (90)
#define DMPAPER_15X11 (46)
#define DMPAPER_9X11 (44)
#define DMPAPER_A2 (66)
#define DMPAPER_A3 (8)
#define DMPAPER_A3_EXTRA (63)
#define DMPAPER_A3_EXTRA_TRANSVERSE (68)
#define DMPAPER_A3_ROTATED (76)
#define DMPAPER_A3_TRANSVERSE (67)
#define DMPAPER_A4 (9)
#define DMPAPER_A4SMALL (10)
#define DMPAPER_A4_EXTRA (53)
#define DMPAPER_A4_PLUS (60)
#define DMPAPER_A4_ROTATED (77)
#define DMPAPER_A4_TRANSVERSE (55)
#define DMPAPER_A5 (11)
#define DMPAPER_A5_EXTRA (64)
#define DMPAPER_A5_ROTATED (78)
#define DMPAPER_A5_TRANSVERSE (61)
#define DMPAPER_A6 (70)
#define DMPAPER_A6_ROTATED (83)
#define DMPAPER_A_PLUS (57)
#define DMPAPER_B4 (12)
#define DMPAPER_B4_JIS_ROTATED (79)
#define DMPAPER_B5 (13)
#define DMPAPER_B5_EXTRA (65)
#define DMPAPER_B5_JIS_ROTATED (80)
#define DMPAPER_B5_TRANSVERSE (62)
#define DMPAPER_B6_JIS (88)
#define DMPAPER_B6_JIS_ROTATED (89)
#define DMPAPER_B_PLUS (58)
#define DMPAPER_CSHEET (24)
#define DMPAPER_DBL_JAPANESE_POSTCARD (69)
#define DMPAPER_DBL_JAPANESE_POSTCARD_ROTATED (82)
#define DMPAPER_DSHEET (25)
#define DMPAPER_ENV_10 (20)
#define DMPAPER_ENV_11 (21)
#define DMPAPER_ENV_12 (22)
#define DMPAPER_ENV_14 (23)
#define DMPAPER_ENV_9 (19)
#define DMPAPER_ENV_B4 (33)
#define DMPAPER_ENV_B5 (34)
#define DMPAPER_ENV_B6 (35)
#define DMPAPER_ENV_C3 (29)
#define DMPAPER_ENV_C4 (30)
#define DMPAPER_ENV_C5 (28)
#define DMPAPER_ENV_C6 (31)
#define DMPAPER_ENV_C65 (32)
#define DMPAPER_ENV_DL (27)
#define DMPAPER_ENV_INVITE (47)
#define DMPAPER_ENV_ITALY (36)
#define DMPAPER_ENV_MONARCH (37)
#define DMPAPER_ENV_PERSONAL (38)
#define DMPAPER_ESHEET (26)
#define DMPAPER_EXECUTIVE (7)
#define DMPAPER_FANFOLD_LGL_GERMAN (41)
#define DMPAPER_FANFOLD_STD_GERMAN (40)
#define DMPAPER_FANFOLD_US (39)
#define DMPAPER_FIRST DMPAPER_LETTER
#define DMPAPER_FOLIO (14)
#define DMPAPER_ISO_B4 (42)
#define DMPAPER_JAPANESE_POSTCARD (43)
#define DMPAPER_JAPANESE_POSTCARD_ROTATED (81)
#define DMPAPER_JENV_CHOU3 (73)
#define DMPAPER_JENV_CHOU3_ROTATED (86)
#define DMPAPER_JENV_CHOU4 (74)
#define DMPAPER_JENV_CHOU4_ROTATED (87)
#define DMPAPER_JENV_KAKU2 (71)
#define DMPAPER_JENV_KAKU2_ROTATED (84)
#define DMPAPER_JENV_KAKU3 (72)
#define DMPAPER_JENV_KAKU3_ROTATED (85)
#define DMPAPER_JENV_YOU4 (91)
#define DMPAPER_JENV_YOU4_ROTATED (92)
#define DMPAPER_LAST DMPAPER_PENV_10_ROTATED
#define DMPAPER_LEDGER (4)
#define DMPAPER_LEGAL (5)
#define DMPAPER_LEGAL_EXTRA (51)
#define DMPAPER_LETTER (1)
#define DMPAPER_LETTERSMALL (2)
#define DMPAPER_LETTER_EXTRA (50)
#define DMPAPER_LETTER_EXTRA_TRANSVERSE (56)
#define DMPAPER_LETTER_PLUS (59)
#define DMPAPER_LETTER_ROTATED (75)
#define DMPAPER_LETTER_TRANSVERSE (54)
#define DMPAPER_NOTE (18)
#define DMPAPER_P16K (93)
#define DMPAPER_P16K_ROTATED (106)
#define DMPAPER_P32K (94)
#define DMPAPER_P32KBIG (95)
#define DMPAPER_P32KBIG_ROTATED (108)
#define DMPAPER_P32K_ROTATED (107)
#define DMPAPER_PENV_1 (96)
#define DMPAPER_PENV_10 (105)
#define DMPAPER_PENV_10_ROTATED (118)
#define DMPAPER_PENV_1_ROTATED (109)
#define DMPAPER_PENV_2 (97)
#define DMPAPER_PENV_2_ROTATED (110)
#define DMPAPER_PENV_3 (98)
#define DMPAPER_PENV_3_ROTATED (111)
#define DMPAPER_PENV_4 (99)
#define DMPAPER_PENV_4_ROTATED (112)
#define DMPAPER_PENV_5 (100)
#define DMPAPER_PENV_5_ROTATED (113)
#define DMPAPER_PENV_6 (101)
#define DMPAPER_PENV_6_ROTATED (114)
#define DMPAPER_PENV_7 (102)
#define DMPAPER_PENV_7_ROTATED (115)
#define DMPAPER_PENV_8 (103)
#define DMPAPER_PENV_8_ROTATED (116)
#define DMPAPER_PENV_9 (104)
#define DMPAPER_PENV_9_ROTATED (117)
#define DMPAPER_QUARTO (15)
#define DMPAPER_RESERVED_48 (48)
#define DMPAPER_RESERVED_49 (49)
#define DMPAPER_STATEMENT (6)
#define DMPAPER_TABLOID (3)
#define DMPAPER_TABLOID_EXTRA (52)
#define DMPAPER_USER (256)
#define DMRES_DRAFT (-1)
#define DMRES_HIGH (-4)
#define DMRES_LOW (-2)
#define DMRES_MEDIUM (-3)
#define DMTT_BITMAP (1)
#define DMTT_DOWNLOAD (2)
#define DMTT_DOWNLOAD_OUTLINE (4)
#define DMTT_SUBDEV (3)
#define DM_BITSPERPEL __MSABI_LONG ( 0x00040000 )
#define DM_COLLATE __MSABI_LONG ( 0x00008000 )
#define DM_COLOR __MSABI_LONG ( 0x00000800 )
#define DM_COPIES __MSABI_LONG ( 0x00000100 )
#define DM_COPY (2)
#define DM_DEFAULTSOURCE __MSABI_LONG ( 0x00000200 )
#define DM_DISPLAYFIXEDOUTPUT __MSABI_LONG ( 0x20000000 )
#define DM_DISPLAYFLAGS __MSABI_LONG ( 0x00200000 )
#define DM_DISPLAYFREQUENCY __MSABI_LONG ( 0x00400000 )
#define DM_DISPLAYORIENTATION __MSABI_LONG ( 0x00000080 )
#define DM_DITHERTYPE __MSABI_LONG ( 0x04000000 )
#define DM_DUPLEX __MSABI_LONG ( 0x00001000 )
#define DM_FORMNAME __MSABI_LONG ( 0x00010000 )
#define DM_GETDEFID (1024)
#define DM_ICMINTENT __MSABI_LONG ( 0x01000000 )
#define DM_ICMMETHOD __MSABI_LONG ( 0x00800000 )
#define DM_INTERLACED (2)
#define DM_IN_BUFFER DM_MODIFY
#define DM_IN_PROMPT DM_PROMPT
#define DM_LOGPIXELS __MSABI_LONG ( 0x00020000 )
#define DM_MEDIATYPE __MSABI_LONG ( 0x02000000 )
#define DM_MODIFY (8)
#define DM_NUP __MSABI_LONG ( 0x00000040 )
#define DM_ORIENTATION __MSABI_LONG ( 0x00000001 )
#define DM_OUT_BUFFER DM_COPY
#define DM_OUT_DEFAULT DM_UPDATE
#define DM_PANNINGHEIGHT __MSABI_LONG ( 0x10000000 )
#define DM_PANNINGWIDTH __MSABI_LONG ( 0x08000000 )
#define DM_PAPERLENGTH __MSABI_LONG ( 0x00000004 )
#define DM_PAPERSIZE __MSABI_LONG ( 0x00000002 )
#define DM_PAPERWIDTH __MSABI_LONG ( 0x00000008 )
#define DM_PELSHEIGHT __MSABI_LONG ( 0x00100000 )
#define DM_PELSWIDTH __MSABI_LONG ( 0x00080000 )
#define DM_POSITION __MSABI_LONG ( 0x00000020 )
#define DM_PRINTQUALITY __MSABI_LONG ( 0x00000400 )
#define DM_PROMPT (4)
#define DM_REPOSITION (1026)
#define DM_SCALE __MSABI_LONG ( 0x00000010 )
#define DM_SETDEFID (1025)
#define DM_SPECVERSION (1025)
#define DM_TTOPTION __MSABI_LONG ( 0x00004000 )
#define DM_UPDATE (1)
#define DM_YRESOLUTION __MSABI_LONG ( 0x00002000 )
#define DNS_ERROR_AUTOZONE_ALREADY_EXISTS __MSABI_LONG ( 9610 )
#define DNS_ERROR_AXFR __MSABI_LONG ( 9752 )
#define DNS_ERROR_BAD_PACKET __MSABI_LONG ( 9502 )
#define DNS_ERROR_CANNOT_FIND_ROOT_HINTS __MSABI_LONG ( 9564 )
#define DNS_ERROR_CNAME_COLLISION __MSABI_LONG ( 9709 )
#define DNS_ERROR_CNAME_LOOP __MSABI_LONG ( 9707 )
#define DNS_ERROR_DATABASE_BASE (9700)
#define DNS_ERROR_DATAFILE_BASE (9650)
#define DNS_ERROR_DATAFILE_OPEN_FAILURE __MSABI_LONG ( 9653 )
#define DNS_ERROR_DATAFILE_PARSING __MSABI_LONG ( 9655 )
#define DNS_ERROR_DP_ALREADY_ENLISTED __MSABI_LONG ( 9904 )
#define DNS_ERROR_DP_ALREADY_EXISTS __MSABI_LONG ( 9902 )
#define DNS_ERROR_DP_BASE (9900)
#define DNS_ERROR_DP_DOES_NOT_EXIST __MSABI_LONG ( 9901 )
#define DNS_ERROR_DP_FSMO_ERROR __MSABI_LONG ( 9906 )
#define DNS_ERROR_DP_NOT_AVAILABLE __MSABI_LONG ( 9905 )
#define DNS_ERROR_DP_NOT_ENLISTED __MSABI_LONG ( 9903 )
#define DNS_ERROR_DS_UNAVAILABLE __MSABI_LONG ( 9717 )
#define DNS_ERROR_DS_ZONE_ALREADY_EXISTS __MSABI_LONG ( 9718 )
#define DNS_ERROR_FILE_WRITEBACK_FAILED __MSABI_LONG ( 9654 )
#define DNS_ERROR_FORWARDER_ALREADY_EXISTS __MSABI_LONG ( 9619 )
#define DNS_ERROR_GENERAL_API_BASE (9550)
#define DNS_ERROR_INCONSISTENT_ROOT_HINTS __MSABI_LONG ( 9565 )
#define DNS_ERROR_INVALID_DATA ERROR_INVALID_DATA
#define DNS_ERROR_INVALID_DATAFILE_NAME __MSABI_LONG ( 9652 )
#define DNS_ERROR_INVALID_IP_ADDRESS __MSABI_LONG ( 9552 )
#define DNS_ERROR_INVALID_NAME ERROR_INVALID_NAME
#define DNS_ERROR_INVALID_NAME_CHAR __MSABI_LONG ( 9560 )
#define DNS_ERROR_INVALID_PROPERTY __MSABI_LONG ( 9553 )
#define DNS_ERROR_INVALID_TYPE __MSABI_LONG ( 9551 )
#define DNS_ERROR_INVALID_ZONE_OPERATION __MSABI_LONG ( 9603 )
#define DNS_ERROR_INVALID_ZONE_TYPE __MSABI_LONG ( 9611 )
#define DNS_ERROR_MASK (9000)
#define DNS_ERROR_NAME_DOES_NOT_EXIST __MSABI_LONG ( 9714 )
#define DNS_ERROR_NAME_NOT_IN_ZONE __MSABI_LONG ( 9706 )
#define DNS_ERROR_NBSTAT_INIT_FAILED __MSABI_LONG ( 9617 )
#define DNS_ERROR_NEED_SECONDARY_ADDRESSES __MSABI_LONG ( 9614 )
#define DNS_ERROR_NEED_WINS_SERVERS __MSABI_LONG ( 9616 )
#define DNS_ERROR_NODE_CREATION_FAILED __MSABI_LONG ( 9703 )
#define DNS_ERROR_NODE_IS_CNAME __MSABI_LONG ( 9708 )
#define DNS_ERROR_NON_RFC_NAME __MSABI_LONG ( 9556 )
#define DNS_ERROR_NOT_ALLOWED_ON_ROOT_SERVER __MSABI_LONG ( 9562 )
#define DNS_ERROR_NOT_ALLOWED_UNDER_DELEGATION __MSABI_LONG ( 9563 )
#define DNS_ERROR_NOT_UNIQUE __MSABI_LONG ( 9555 )
#define DNS_ERROR_NO_BOOTFILE_IF_DS_ZONE __MSABI_LONG ( 9719 )
#define DNS_ERROR_NO_CREATE_CACHE_DATA __MSABI_LONG ( 9713 )
#define DNS_ERROR_NO_DNS_SERVERS __MSABI_LONG ( 9852 )
#define DNS_ERROR_NO_MEMORY ERROR_OUTOFMEMORY
#define DNS_ERROR_NO_PACKET __MSABI_LONG ( 9503 )
#define DNS_ERROR_NO_TCPIP __MSABI_LONG ( 9851 )
#define DNS_ERROR_NO_ZONE_INFO __MSABI_LONG ( 9602 )
#define DNS_ERROR_NUMERIC_NAME __MSABI_LONG ( 9561 )
#define DNS_ERROR_OPERATION_BASE (9750)
#define DNS_ERROR_PACKET_FMT_BASE (9500)
#define DNS_ERROR_PRIMARY_REQUIRES_DATAFILE __MSABI_LONG ( 9651 )
#define DNS_ERROR_RCODE __MSABI_LONG ( 9504 )
#define DNS_ERROR_RCODE_BADKEY __MSABI_LONG ( 9017 )
#define DNS_ERROR_RCODE_BADSIG __MSABI_LONG ( 9016 )
#define DNS_ERROR_RCODE_BADTIME __MSABI_LONG ( 9018 )
#define DNS_ERROR_RCODE_FORMAT_ERROR __MSABI_LONG ( 9001 )
#define DNS_ERROR_RCODE_LAST DNS_ERROR_RCODE_BADTIME
#define DNS_ERROR_RCODE_NAME_ERROR __MSABI_LONG ( 9003 )
#define DNS_ERROR_RCODE_NOTAUTH __MSABI_LONG ( 9009 )
#define DNS_ERROR_RCODE_NOTZONE __MSABI_LONG ( 9010 )
#define DNS_ERROR_RCODE_NOT_IMPLEMENTED __MSABI_LONG ( 9004 )
#define DNS_ERROR_RCODE_NO_ERROR NO_ERROR
#define DNS_ERROR_RCODE_NXRRSET __MSABI_LONG ( 9008 )
#define DNS_ERROR_RCODE_REFUSED __MSABI_LONG ( 9005 )
#define DNS_ERROR_RCODE_SERVER_FAILURE __MSABI_LONG ( 9002 )
#define DNS_ERROR_RCODE_YXDOMAIN __MSABI_LONG ( 9006 )
#define DNS_ERROR_RCODE_YXRRSET __MSABI_LONG ( 9007 )
#define DNS_ERROR_RECORD_ALREADY_EXISTS __MSABI_LONG ( 9711 )
#define DNS_ERROR_RECORD_DOES_NOT_EXIST __MSABI_LONG ( 9701 )
#define DNS_ERROR_RECORD_FORMAT __MSABI_LONG ( 9702 )
#define DNS_ERROR_RECORD_ONLY_AT_ZONE_ROOT __MSABI_LONG ( 9710 )
#define DNS_ERROR_RECORD_TIMED_OUT __MSABI_LONG ( 9705 )
#define DNS_ERROR_RESPONSE_CODES_BASE (9000)
#define DNS_ERROR_SECONDARY_DATA __MSABI_LONG ( 9712 )
#define DNS_ERROR_SECONDARY_REQUIRES_MASTER_IP __MSABI_LONG ( 9612 )
#define DNS_ERROR_SECURE_BASE (9800)
#define DNS_ERROR_SETUP_BASE (9850)
#define DNS_ERROR_SOA_DELETE_INVALID __MSABI_LONG ( 9618 )
#define DNS_ERROR_TRY_AGAIN_LATER __MSABI_LONG ( 9554 )
#define DNS_ERROR_UNKNOWN_RECORD_TYPE __MSABI_LONG ( 9704 )
#define DNS_ERROR_UNSECURE_PACKET __MSABI_LONG ( 9505 )
#define DNS_ERROR_WINS_INIT_FAILED __MSABI_LONG ( 9615 )
#define DNS_ERROR_ZONE_ALREADY_EXISTS __MSABI_LONG ( 9609 )
#define DNS_ERROR_ZONE_BASE (9600)
#define DNS_ERROR_ZONE_CONFIGURATION_ERROR __MSABI_LONG ( 9604 )
#define DNS_ERROR_ZONE_CREATION_FAILED __MSABI_LONG ( 9608 )
#define DNS_ERROR_ZONE_DOES_NOT_EXIST __MSABI_LONG ( 9601 )
#define DNS_ERROR_ZONE_HAS_NO_NS_RECORDS __MSABI_LONG ( 9606 )
#define DNS_ERROR_ZONE_HAS_NO_SOA_RECORD __MSABI_LONG ( 9605 )
#define DNS_ERROR_ZONE_IS_SHUTDOWN __MSABI_LONG ( 9621 )
#define DNS_ERROR_ZONE_LOCKED __MSABI_LONG ( 9607 )
#define DNS_ERROR_ZONE_NOT_SECONDARY __MSABI_LONG ( 9613 )
#define DNS_ERROR_ZONE_REQUIRES_MASTER_IP __MSABI_LONG ( 9620 )
#define DNS_FILTEROFF (8)
#define DNS_FILTERON (4)
#define DNS_INFO_ADDED_LOCAL_WINS __MSABI_LONG ( 9753 )
#define DNS_INFO_AXFR_COMPLETE __MSABI_LONG ( 9751 )
#define DNS_INFO_NO_RECORDS __MSABI_LONG ( 9501 )
#define DNS_REGISTER (1)
#define DNS_STATUS_CONTINUE_NEEDED __MSABI_LONG ( 9801 )
#define DNS_STATUS_DOTTED_NAME __MSABI_LONG ( 9558 )
#define DNS_STATUS_FQDN __MSABI_LONG ( 9557 )
#define DNS_STATUS_PACKET_UNSECURE DNS_ERROR_UNSECURE_PACKET
#define DNS_STATUS_SINGLE_PART_NAME __MSABI_LONG ( 9559 )
#define DNS_UNREGISTER (2)
#define DNS_WARNING_DOMAIN_UNDELETED __MSABI_LONG ( 9716 )
#define DNS_WARNING_PTR_CREATE_FAILED __MSABI_LONG ( 9715 )
#define DN_DEFAULTPRN (1)
#define DOCKINFO_DOCKED (2)
#define DOCKINFO_UNDOCKED (1)
#define DOCKINFO_USER_DOCKED (6)
#define DOCKINFO_USER_SUPPLIED (4)
#define DOCKINFO_USER_UNDOCKED (5)
#define DOF_DIRECTORY (32771)
#define DOF_DOCUMENT (32770)
#define DOF_EXECUTABLE (32769)
#define DOF_MULTIPLE (32772)
#define DOF_PROGMAN (1)
#define DOF_SHELLDATA (2)
#define DOMAIN_ALIAS_RID_ACCESS_CONTROL_ASSISTANCE_OPS (579l)
#define DOMAIN_ALIAS_RID_ACCOUNT_OPS (548l)
#define DOMAIN_ALIAS_RID_ADMINS (544l)
#define DOMAIN_ALIAS_RID_AUTHORIZATIONACCESS (560l)
#define DOMAIN_ALIAS_RID_BACKUP_OPS (551l)
#define DOMAIN_ALIAS_RID_CACHEABLE_PRINCIPALS_GROUP (571l)
#define DOMAIN_ALIAS_RID_CERTSVC_DCOM_ACCESS_GROUP (574l)
#define DOMAIN_ALIAS_RID_CRYPTO_OPERATORS (569l)
#define DOMAIN_ALIAS_RID_DCOM_USERS (562l)
#define DOMAIN_ALIAS_RID_EVENT_LOG_READERS_GROUP (573l)
#define DOMAIN_ALIAS_RID_GUESTS (546l)
#define DOMAIN_ALIAS_RID_HYPER_V_ADMINS (578l)
#define DOMAIN_ALIAS_RID_INCOMING_FOREST_TRUST_BUILDERS (557l)
#define DOMAIN_ALIAS_RID_IUSERS (568l)
#define DOMAIN_ALIAS_RID_LOGGING_USERS (559l)
#define DOMAIN_ALIAS_RID_MONITORING_USERS (558l)
#define DOMAIN_ALIAS_RID_NETWORK_CONFIGURATION_OPS (556l)
#define DOMAIN_ALIAS_RID_NON_CACHEABLE_PRINCIPALS_GROUP (572l)
#define DOMAIN_ALIAS_RID_POWER_USERS (547l)
#define DOMAIN_ALIAS_RID_PREW2KCOMPACCESS (554l)
#define DOMAIN_ALIAS_RID_PRINT_OPS (550l)
#define DOMAIN_ALIAS_RID_RAS_SERVERS (553l)
#define DOMAIN_ALIAS_RID_RDS_ENDPOINT_SERVERS (576l)
#define DOMAIN_ALIAS_RID_RDS_MANAGEMENT_SERVERS (577l)
#define DOMAIN_ALIAS_RID_RDS_REMOTE_ACCESS_SERVERS (575l)
#define DOMAIN_ALIAS_RID_REMOTE_DESKTOP_USERS (555l)
#define DOMAIN_ALIAS_RID_REMOTE_MANAGEMENT_USERS (580l)
#define DOMAIN_ALIAS_RID_REPLICATOR (552l)
#define DOMAIN_ALIAS_RID_SYSTEM_OPS (549l)
#define DOMAIN_ALIAS_RID_TS_LICENSE_SERVERS (561l)
#define DOMAIN_ALIAS_RID_USERS (545l)
#define DOMAIN_GROUP_RID_ADMINS (512l)
#define DOMAIN_GROUP_RID_AUTHORIZATION_DATA_CONTAINS_CLAIMS (497l)
#define DOMAIN_GROUP_RID_AUTHORIZATION_DATA_IS_COMPOUNDED (496l)
#define DOMAIN_GROUP_RID_CERT_ADMINS (517l)
#define DOMAIN_GROUP_RID_CLONEABLE_CONTROLLERS (522l)
#define DOMAIN_GROUP_RID_COMPUTERS (515l)
#define DOMAIN_GROUP_RID_CONTROLLERS (516l)
#define DOMAIN_GROUP_RID_ENTERPRISE_ADMINS (519l)
#define DOMAIN_GROUP_RID_ENTERPRISE_READONLY_DOMAIN_CONTROLLERS (498l)
#define DOMAIN_GROUP_RID_GUESTS (514l)
#define DOMAIN_GROUP_RID_POLICY_ADMINS (520l)
#define DOMAIN_GROUP_RID_READONLY_CONTROLLERS (521l)
#define DOMAIN_GROUP_RID_SCHEMA_ADMINS (518l)
#define DOMAIN_GROUP_RID_USERS (513l)
#define DOMAIN_USER_RID_ADMIN (500l)
#define DOMAIN_USER_RID_GUEST (501l)
#define DOMAIN_USER_RID_KRBTGT (502l)
#define DOMAIN_USER_RID_MAX (999l)
#define DONT_RESOLVE_DLL_REFERENCES (1)
#define DOUBLE_CLICK (2)
#define DOWNLOADFACE (514)
#define DOWNLOADHEADER (4111)
#define DO_DROPFILE __MSABI_LONG ( 0x454C4946 )
#define DO_PRINTFILE __MSABI_LONG ( 0x544E5250 )
#define DPAPI_IMP DECLSPEC_IMPORT
#define DPD_DELETE_ALL_FILES (4)
#define DPD_DELETE_SPECIFIC_VERSION (2)
#define DPD_DELETE_UNUSED_FILES (1)
#define DRAFTMODE (7)
#define DRAFT_QUALITY (1)
#define DRAGDROP_E_ALREADYREGISTERED _HRESULT_TYPEDEF_ ( 0x80040101 )
#define DRAGDROP_E_FIRST __MSABI_LONG ( 0x80040100 )
#define DRAGDROP_E_INVALIDHWND _HRESULT_TYPEDEF_ ( 0x80040102 )
#define DRAGDROP_E_LAST __MSABI_LONG ( 0x8004010F )
#define DRAGDROP_E_NOTREGISTERED _HRESULT_TYPEDEF_ ( 0x80040100 )
#define DRAGDROP_S_CANCEL _HRESULT_TYPEDEF_ ( 0x00040101 )
#define DRAGDROP_S_DROP _HRESULT_TYPEDEF_ ( 0x00040100 )
#define DRAGDROP_S_FIRST __MSABI_LONG ( 0x00040100 )
#define DRAGDROP_S_LAST __MSABI_LONG ( 0x0004010F )
#define DRAGDROP_S_USEDEFAULTCURSORS _HRESULT_TYPEDEF_ ( 0x00040102 )
#define DRAWPATTERNRECT (25)
#define DRIVERVERSION (0)
#define DRIVER_KERNELMODE (1)
#define DRIVER_USERMODE (2)
#define DRIVE_CDROM (5)
#define DRIVE_FIXED (3)
#define DRIVE_NO_ROOT_DIR (1)
#define DRIVE_RAMDISK (6)
#define DRIVE_REMOTE (4)
#define DRIVE_REMOVABLE (2)
#define DRIVE_UNKNOWN (0)
#define DRVCNF_CANCEL (0)
#define DRVCNF_OK (1)
#define DRVCNF_RESTART (2)
#define DRV_CANCEL DRVCNF_CANCEL
#define DRV_CLOSE (4)
#define DRV_CONFIGURE (7)
#define DRV_DISABLE (5)
#define DRV_ENABLE (2)
#define DRV_EXITSESSION (11)
#define DRV_FREE (6)
#define DRV_INSTALL (9)
#define DRV_LOAD (1)
#define DRV_MCI_FIRST DRV_RESERVED
#define DRV_MCI_LAST (6143)
#define DRV_OK DRVCNF_OK
#define DRV_OPEN (3)
#define DRV_POWER (15)
#define DRV_QUERYCONFIGURE (8)
#define DRV_REMOVE (10)
#define DRV_RESERVED (2048)
#define DRV_RESTART DRVCNF_RESTART
#define DRV_USER (16384)
#define DSPRINT_PENDING (2147483648u)
#define DSPRINT_PUBLISH (1)
#define DSPRINT_REPUBLISH (8)
#define DSPRINT_UNPUBLISH (4)
#define DSPRINT_UPDATE (2)
#define DSS_DISABLED (32)
#define DSS_HIDEPREFIX (512)
#define DSS_MONO (128)
#define DSS_NORMAL (0)
#define DSS_PREFIXONLY (1024)
#define DSS_RIGHT (32768)
#define DSS_UNION (16)
#define DSTINVERT ( DWORD ) 0x00550009
#define DST_BITMAP (4)
#define DST_COMPLEX (0)
#define DST_ICON (3)
#define DST_PREFIXTEXT (2)
#define DST_TEXT (1)
#define DS_3DLOOK __MSABI_LONG ( 0x0004 )
#define DS_ABSALIGN __MSABI_LONG ( 0x01 )
#define DS_CENTER __MSABI_LONG ( 0x0800 )
#define DS_CENTERMOUSE __MSABI_LONG ( 0x1000 )
#define DS_CONTEXTHELP __MSABI_LONG ( 0x2000 )
#define DS_CONTROL __MSABI_LONG ( 0x0400 )
#define DS_FIXEDSYS __MSABI_LONG ( 0x0008 )
#define DS_LOCALEDIT __MSABI_LONG ( 0x20 )
#define DS_MODALFRAME __MSABI_LONG ( 0x80 )
#define DS_NOFAILCREATE __MSABI_LONG ( 0x0010 )
#define DS_NOIDLEMSG __MSABI_LONG ( 0x100 )
#define DS_SETFONT __MSABI_LONG ( 0x40 )
#define DS_SETFOREGROUND __MSABI_LONG ( 0x200 )
#define DS_SHELLFONT (72l)
#define DS_SYSMODAL __MSABI_LONG ( 0x02 )
#define DS_S_SUCCESS NO_ERROR
#define DTR_CONTROL_DISABLE (0)
#define DTR_CONTROL_ENABLE (1)
#define DTR_CONTROL_HANDSHAKE (2)
#define DT_BOTTOM (8)
#define DT_CALCRECT (1024)
#define DT_CENTER (1)
#define DT_CHARSTREAM (4)
#define DT_DISPFILE (6)
#define DT_EDITCONTROL (8192)
#define DT_END_ELLIPSIS (32768)
#define DT_EXPANDTABS (64)
#define DT_EXTERNALLEADING (512)
#define DT_HIDEPREFIX (1048576)
#define DT_INTERNAL (4096)
#define DT_LEFT (0)
#define DT_METAFILE (5)
#define DT_MODIFYSTRING (65536)
#define DT_NOCLIP (256)
#define DT_NOFULLWIDTHCHARBREAK (524288)
#define DT_NOPREFIX (2048)
#define DT_PATH_ELLIPSIS (16384)
#define DT_PLOTTER (0)
#define DT_PREFIXONLY (2097152)
#define DT_RASCAMERA (3)
#define DT_RASDISPLAY (1)
#define DT_RASPRINTER (2)
#define DT_RIGHT (2)
#define DT_RTLREADING (131072)
#define DT_SINGLELINE (32)
#define DT_TABSTOP (128)
#define DT_TOP (0)
#define DT_VCENTER (4)
#define DT_WORDBREAK (16)
#define DT_WORD_ELLIPSIS (262144)
#define DUPLICATE (6)
#define DUPLICATE_CLOSE_SOURCE (1)
#define DUPLICATE_DEREG (7)
#define DUPLICATE_SAME_ACCESS (2)
#define DV_E_CLIPFORMAT _HRESULT_TYPEDEF_ ( 0x8004006A )
#define DV_E_DVASPECT _HRESULT_TYPEDEF_ ( 0x8004006B )
#define DV_E_DVTARGETDEVICE _HRESULT_TYPEDEF_ ( 0x80040065 )
#define DV_E_DVTARGETDEVICE_SIZE _HRESULT_TYPEDEF_ ( 0x8004006C )
#define DV_E_FORMATETC _HRESULT_TYPEDEF_ ( 0x80040064 )
#define DV_E_LINDEX _HRESULT_TYPEDEF_ ( 0x80040068 )
#define DV_E_NOIVIEWOBJECT _HRESULT_TYPEDEF_ ( 0x8004006D )
#define DV_E_STATDATA _HRESULT_TYPEDEF_ ( 0x80040067 )
#define DV_E_STGMEDIUM _HRESULT_TYPEDEF_ ( 0x80040066 )
#define DV_E_TYMED _HRESULT_TYPEDEF_ ( 0x80040069 )
#define DWLP_DLGPROC DWLP_MSGRESULT + sizeof ( LRESULT )
#define DWLP_MSGRESULT (0)
#define DWLP_USER DWLP_DLGPROC + sizeof ( DLGPROC )
#define DXGI_ERROR_ACCESS_DENIED _HRESULT_TYPEDEF_ ( 0x887A002B )
#define DXGI_ERROR_ACCESS_LOST _HRESULT_TYPEDEF_ ( 0x887A0026 )
#define DXGI_ERROR_CANNOT_PROTECT_CONTENT _HRESULT_TYPEDEF_ ( 0x887A002A )
#define DXGI_ERROR_DEVICE_HUNG _HRESULT_TYPEDEF_ ( 0x887A0006 )
#define DXGI_ERROR_DEVICE_REMOVED _HRESULT_TYPEDEF_ ( 0x887A0005 )
#define DXGI_ERROR_DEVICE_RESET _HRESULT_TYPEDEF_ ( 0x887A0007 )
#define DXGI_ERROR_DRIVER_INTERNAL_ERROR _HRESULT_TYPEDEF_ ( 0x887A0020 )
#define DXGI_ERROR_FRAME_STATISTICS_DISJOINT _HRESULT_TYPEDEF_ ( 0x887A000B )
#define DXGI_ERROR_GRAPHICS_VIDPN_SOURCE_IN_USE _HRESULT_TYPEDEF_ ( 0x887A000C )
#define DXGI_ERROR_INVALID_CALL _HRESULT_TYPEDEF_ ( 0x887A0001 )
#define DXGI_ERROR_MORE_DATA _HRESULT_TYPEDEF_ ( 0x887A0003 )
#define DXGI_ERROR_NAME_ALREADY_EXISTS _HRESULT_TYPEDEF_ ( 0x887A002C )
#define DXGI_ERROR_NONEXCLUSIVE _HRESULT_TYPEDEF_ ( 0x887A0021 )
#define DXGI_ERROR_NOT_CURRENTLY_AVAILABLE _HRESULT_TYPEDEF_ ( 0x887A0022 )
#define DXGI_ERROR_NOT_FOUND _HRESULT_TYPEDEF_ ( 0x887A0002 )
#define DXGI_ERROR_REMOTE_CLIENT_DISCONNECTED _HRESULT_TYPEDEF_ ( 0x887A0023 )
#define DXGI_ERROR_REMOTE_OUTOFMEMORY _HRESULT_TYPEDEF_ ( 0x887A0024 )
#define DXGI_ERROR_RESTRICT_TO_OUTPUT_STALE _HRESULT_TYPEDEF_ ( 0x887A0029 )
#define DXGI_ERROR_SDK_COMPONENT_MISSING _HRESULT_TYPEDEF_ ( 0x887A002D )
#define DXGI_ERROR_SESSION_DISCONNECTED _HRESULT_TYPEDEF_ ( 0x887A0028 )
#define DXGI_ERROR_UNSUPPORTED _HRESULT_TYPEDEF_ ( 0x887A0004 )
#define DXGI_ERROR_WAIT_TIMEOUT _HRESULT_TYPEDEF_ ( 0x887A0027 )
#define DXGI_ERROR_WAS_STILL_DRAWING _HRESULT_TYPEDEF_ ( 0x887A000A )
#define DbgRaiseAssertionFailure __int2c
#define DceErrorInqText __MINGW_NAME_AW ( DceErrorInqText )
#define DdeCreateStringHandle __MINGW_NAME_AW ( DdeCreateStringHandle )
#define DdeInitialize __MINGW_NAME_AW ( DdeInitialize )
#define DdeQueryString __MINGW_NAME_AW ( DdeQueryString )
#define DecryptFile __MINGW_NAME_AW ( DecryptFile )
#define DefDlgProc __MINGW_NAME_AW ( DefDlgProc )
#define DefFrameProc __MINGW_NAME_AW ( DefFrameProc )
#define DefHookProc(nCode, wParam, lParam, phhk) CallNextHookEx ( * phhk , nCode , wParam , lParam )
#define DefMDIChildProc __MINGW_NAME_AW ( DefMDIChildProc )
#define DefWindowProc __MINGW_NAME_AW ( DefWindowProc )
#define DefineDosDevice DefineDosDeviceA
#define DefineHandleTable(w) ( { ( VOID ) ( w ) ; TRUE ; } )
#define DeleteFile __MINGW_NAME_AW ( DeleteFile )
#define DeleteForm __MINGW_NAME_AW ( DeleteForm )
#define DeleteMonitor __MINGW_NAME_AW ( DeleteMonitor )
#define DeletePort __MINGW_NAME_AW ( DeletePort )
#define DeletePrintProcessor __MINGW_NAME_AW ( DeletePrintProcessor )
#define DeletePrintProvidor __MINGW_NAME_AW ( DeletePrintProvidor )
#define DeletePrinterConnection __MINGW_NAME_AW ( DeletePrinterConnection )
#define DeletePrinterData __MINGW_NAME_AW ( DeletePrinterData )
#define DeletePrinterDataEx __MINGW_NAME_AW ( DeletePrinterDataEx )
#define DeletePrinterDriver __MINGW_NAME_AW ( DeletePrinterDriver )
#define DeletePrinterDriverEx __MINGW_NAME_AW ( DeletePrinterDriverEx )
#define DeletePrinterKey __MINGW_NAME_AW ( DeletePrinterKey )
#define DeleteVolumeMountPoint DeleteVolumeMountPointA
#define DeviceCapabilities __MINGW_NAME_AW ( DeviceCapabilities )
#define DialogBox __MINGW_NAME_AW ( DialogBox )
#define DialogBoxA(hInstance, lpTemplate, hWndParent, lpDialogFunc) DialogBoxParamA ( hInstance , lpTemplate , hWndParent , lpDialogFunc , ( LPARAM ) 0 )
#define DialogBoxIndirect __MINGW_NAME_AW ( DialogBoxIndirect )
#define DialogBoxIndirectA(hInstance, lpTemplate, hWndParent, lpDialogFunc) DialogBoxIndirectParamA ( hInstance , lpTemplate , hWndParent , lpDialogFunc , ( LPARAM ) 0 )
#define DialogBoxIndirectParam __MINGW_NAME_AW ( DialogBoxIndirectParam )
#define DialogBoxIndirectW(hInstance, lpTemplate, hWndParent, lpDialogFunc) DialogBoxIndirectParamW ( hInstance , lpTemplate , hWndParent , lpDialogFunc , ( LPARAM ) 0 )
#define DialogBoxParam __MINGW_NAME_AW ( DialogBoxParam )
#define DialogBoxW(hInstance, lpTemplate, hWndParent, lpDialogFunc) DialogBoxParamW ( hInstance , lpTemplate , hWndParent , lpDialogFunc , ( LPARAM ) 0 )
#define DiskClassGuid GUID_DEVINTERFACE_DISK
#define DiskGeometryGetDetect(Geometry) ( ( PDISK_DETECTION_INFO ) ( ( ( DWORD_PTR ) DiskGeometryGetPartition ( Geometry ) + DiskGeometryGetPartition ( Geometry ) -> SizeOfPartitionInfo ) ) )
#define DiskGeometryGetPartition(Geometry) ( ( PDISK_PARTITION_INFO ) ( ( Geometry ) -> Data ) )
#define DispatchMessage __MINGW_NAME_AW ( DispatchMessage )
#define DlgDirList __MINGW_NAME_AW ( DlgDirList )
#define DlgDirListComboBox __MINGW_NAME_AW ( DlgDirListComboBox )
#define DlgDirSelectComboBoxEx __MINGW_NAME_AW ( DlgDirSelectComboBoxEx )
#define DlgDirSelectEx __MINGW_NAME_AW ( DlgDirSelectEx )
#define DnsHostnameToComputerName __MINGW_NAME_AW ( DnsHostnameToComputerName )
#define DoEnvironmentSubst __MINGW_NAME_AW ( DoEnvironmentSubst )
#define DocumentProperties __MINGW_NAME_AW ( DocumentProperties )
#define DragQueryFile __MINGW_NAME_AW ( DragQueryFile )
#define DrawState __MINGW_NAME_AW ( DrawState )
#define DrawText __MINGW_NAME_AW ( DrawText )
#define DrawTextEx __MINGW_NAME_AW ( DrawTextEx )
#define EASTEUROPE_CHARSET (238)
#define ECC_CMS_SHARED_INFO ( ( LPCSTR ) 77 )
#define EC_DISABLE ST_BLOCKED
#define EC_ENABLEALL (0)
#define EC_ENABLEONE ST_BLOCKNEXT
#define EC_LEFTMARGIN (1)
#define EC_QUERYWAITING (2)
#define EC_RIGHTMARGIN (2)
#define EC_USEFONTINFO (65535)
#define EDD_GET_DEVICE_INTERFACE_NAME (1)
#define EDGE_BUMP (9)
#define EDGE_ETCHED (6)
#define EDGE_RAISED (5)
#define EDGE_SUNKEN (10)
#define EDS_RAWMODE (2)
#define EFSRPC_SECURE_ONLY (8)
#define EFS_USE_RECOVERY_KEYS (1)
#define EIMES_CANCELCOMPSTRINFOCUS (2)
#define EIMES_COMPLETECOMPSTRKILLFOCUS (4)
#define EIMES_GETCOMPSTRATONCE (1)
#define EIRESID(x) ( - 1 * ( int ) ( x ) )
#define ELEMENT_STATUS_ACCESS (8)
#define ELEMENT_STATUS_AVOLTAG (536870912)
#define ELEMENT_STATUS_EXCEPT (4)
#define ELEMENT_STATUS_EXENAB (16)
#define ELEMENT_STATUS_FULL (1)
#define ELEMENT_STATUS_ID_VALID (8192)
#define ELEMENT_STATUS_IMPEXP (2)
#define ELEMENT_STATUS_INENAB (32)
#define ELEMENT_STATUS_INVERT (4194304)
#define ELEMENT_STATUS_LUN_VALID (4096)
#define ELEMENT_STATUS_NOT_BUS (32768)
#define ELEMENT_STATUS_PRODUCT_DATA (64)
#define ELEMENT_STATUS_PVOLTAG (268435456)
#define ELEMENT_STATUS_SVALID (8388608)
#define ELF_CULTURE_LATIN (0)
#define ELF_VENDOR_SIZE (4)
#define ELF_VERSION (0)
#define EMARCH_ENC_I17_IC_INST_WORD_POS_X (12)
#define EMARCH_ENC_I17_IC_INST_WORD_X (3)
#define EMARCH_ENC_I17_IC_SIZE_X (1)
#define EMARCH_ENC_I17_IC_VAL_POS_X (21)
#define EMARCH_ENC_I17_IMM41a_INST_WORD_POS_X (14)
#define EMARCH_ENC_I17_IMM41a_INST_WORD_X (1)
#define EMARCH_ENC_I17_IMM41a_SIZE_X (10)
#define EMARCH_ENC_I17_IMM41a_VAL_POS_X (22)
#define EMARCH_ENC_I17_IMM41b_INST_WORD_POS_X (24)
#define EMARCH_ENC_I17_IMM41b_INST_WORD_X (1)
#define EMARCH_ENC_I17_IMM41b_SIZE_X (8)
#define EMARCH_ENC_I17_IMM41b_VAL_POS_X (32)
#define EMARCH_ENC_I17_IMM41c_INST_WORD_POS_X (0)
#define EMARCH_ENC_I17_IMM41c_INST_WORD_X (2)
#define EMARCH_ENC_I17_IMM41c_SIZE_X (23)
#define EMARCH_ENC_I17_IMM41c_VAL_POS_X (40)
#define EMARCH_ENC_I17_IMM5C_INST_WORD_POS_X (13)
#define EMARCH_ENC_I17_IMM5C_INST_WORD_X (3)
#define EMARCH_ENC_I17_IMM5C_SIZE_X (5)
#define EMARCH_ENC_I17_IMM5C_VAL_POS_X (16)
#define EMARCH_ENC_I17_IMM7B_INST_WORD_POS_X (4)
#define EMARCH_ENC_I17_IMM7B_INST_WORD_X (3)
#define EMARCH_ENC_I17_IMM7B_SIZE_X (7)
#define EMARCH_ENC_I17_IMM7B_VAL_POS_X (0)
#define EMARCH_ENC_I17_IMM9D_INST_WORD_POS_X (18)
#define EMARCH_ENC_I17_IMM9D_INST_WORD_X (3)
#define EMARCH_ENC_I17_IMM9D_SIZE_X (9)
#define EMARCH_ENC_I17_IMM9D_VAL_POS_X (7)
#define EMARCH_ENC_I17_SIGN_INST_WORD_POS_X (27)
#define EMARCH_ENC_I17_SIGN_INST_WORD_X (3)
#define EMARCH_ENC_I17_SIGN_SIZE_X (1)
#define EMARCH_ENC_I17_SIGN_VAL_POS_X (63)
#define EMR_ABORTPATH (68)
#define EMR_ALPHABLEND (114)
#define EMR_ANGLEARC (41)
#define EMR_ARC (45)
#define EMR_ARCTO (55)
#define EMR_BEGINPATH (59)
#define EMR_BITBLT (76)
#define EMR_CHORD (46)
#define EMR_CLOSEFIGURE (61)
#define EMR_COLORCORRECTPALETTE (111)
#define EMR_COLORMATCHTOTARGETW (121)
#define EMR_CREATEBRUSHINDIRECT (39)
#define EMR_CREATECOLORSPACE (99)
#define EMR_CREATECOLORSPACEW (122)
#define EMR_CREATEDIBPATTERNBRUSHPT (94)
#define EMR_CREATEMONOBRUSH (93)
#define EMR_CREATEPALETTE (49)
#define EMR_CREATEPEN (38)
#define EMR_DELETECOLORSPACE (101)
#define EMR_DELETEOBJECT (40)
#define EMR_ELLIPSE (42)
#define EMR_ENDPATH (60)
#define EMR_EOF (14)
#define EMR_EXCLUDECLIPRECT (29)
#define EMR_EXTCREATEFONTINDIRECTW (82)
#define EMR_EXTCREATEPEN (95)
#define EMR_EXTFLOODFILL (53)
#define EMR_EXTSELECTCLIPRGN (75)
#define EMR_EXTTEXTOUTA (83)
#define EMR_EXTTEXTOUTW (84)
#define EMR_FILLPATH (62)
#define EMR_FILLRGN (71)
#define EMR_FLATTENPATH (65)
#define EMR_FRAMERGN (72)
#define EMR_GDICOMMENT (70)
#define EMR_GLSBOUNDEDRECORD (103)
#define EMR_GLSRECORD (102)
#define EMR_GRADIENTFILL (118)
#define EMR_HEADER (1)
#define EMR_INTERSECTCLIPRECT (30)
#define EMR_INVERTRGN (73)
#define EMR_LINETO (54)
#define EMR_MASKBLT (78)
#define EMR_MAX (122)
#define EMR_MIN (1)
#define EMR_MODIFYWORLDTRANSFORM (36)
#define EMR_MOVETOEX (27)
#define EMR_OFFSETCLIPRGN (26)
#define EMR_PAINTRGN (74)
#define EMR_PIE (47)
#define EMR_PIXELFORMAT (104)
#define EMR_PLGBLT (79)
#define EMR_POLYBEZIER (2)
#define EMR_POLYBEZIER16 (85)
#define EMR_POLYBEZIERTO (5)
#define EMR_POLYBEZIERTO16 (88)
#define EMR_POLYDRAW (56)
#define EMR_POLYDRAW16 (92)
#define EMR_POLYGON (3)
#define EMR_POLYGON16 (86)
#define EMR_POLYLINE (4)
#define EMR_POLYLINE16 (87)
#define EMR_POLYLINETO (6)
#define EMR_POLYLINETO16 (89)
#define EMR_POLYPOLYGON (8)
#define EMR_POLYPOLYGON16 (91)
#define EMR_POLYPOLYLINE (7)
#define EMR_POLYPOLYLINE16 (90)
#define EMR_POLYTEXTOUTA (96)
#define EMR_POLYTEXTOUTW (97)
#define EMR_REALIZEPALETTE (52)
#define EMR_RECTANGLE (43)
#define EMR_RESERVED_105 (105)
#define EMR_RESERVED_106 (106)
#define EMR_RESERVED_107 (107)
#define EMR_RESERVED_108 (108)
#define EMR_RESERVED_109 (109)
#define EMR_RESERVED_110 (110)
#define EMR_RESERVED_117 (117)
#define EMR_RESERVED_119 (119)
#define EMR_RESERVED_120 (120)
#define EMR_RESIZEPALETTE (51)
#define EMR_RESTOREDC (34)
#define EMR_ROUNDRECT (44)
#define EMR_SAVEDC (33)
#define EMR_SCALEVIEWPORTEXTEX (31)
#define EMR_SCALEWINDOWEXTEX (32)
#define EMR_SELECTCLIPPATH (67)
#define EMR_SELECTOBJECT (37)
#define EMR_SELECTPALETTE (48)
#define EMR_SETARCDIRECTION (57)
#define EMR_SETBKCOLOR (25)
#define EMR_SETBKMODE (18)
#define EMR_SETBRUSHORGEX (13)
#define EMR_SETCOLORADJUSTMENT (23)
#define EMR_SETCOLORSPACE (100)
#define EMR_SETDIBITSTODEVICE (80)
#define EMR_SETICMMODE (98)
#define EMR_SETICMPROFILEA (112)
#define EMR_SETICMPROFILEW (113)
#define EMR_SETLAYOUT (115)
#define EMR_SETMAPMODE (17)
#define EMR_SETMAPPERFLAGS (16)
#define EMR_SETMETARGN (28)
#define EMR_SETMITERLIMIT (58)
#define EMR_SETPALETTEENTRIES (50)
#define EMR_SETPIXELV (15)
#define EMR_SETPOLYFILLMODE (19)
#define EMR_SETROP2 (20)
#define EMR_SETSTRETCHBLTMODE (21)
#define EMR_SETTEXTALIGN (22)
#define EMR_SETTEXTCOLOR (24)
#define EMR_SETVIEWPORTEXTEX (11)
#define EMR_SETVIEWPORTORGEX (12)
#define EMR_SETWINDOWEXTEX (9)
#define EMR_SETWINDOWORGEX (10)
#define EMR_SETWORLDTRANSFORM (35)
#define EMR_STRETCHBLT (77)
#define EMR_STRETCHDIBITS (81)
#define EMR_STROKEANDFILLPATH (63)
#define EMR_STROKEPATH (64)
#define EMR_TRANSPARENTBLT (116)
#define EMR_WIDENPATH (66)
#define EMSIS_COMPOSITIONSTRING (1)
#define EM_CANUNDO (198)
#define EM_CHARFROMPOS (215)
#define EM_EMPTYUNDOBUFFER (205)
#define EM_FMTLINES (200)
#define EM_GETFIRSTVISIBLELINE (206)
#define EM_GETHANDLE (189)
#define EM_GETIMESTATUS (217)
#define EM_GETLIMITTEXT (213)
#define EM_GETLINE (196)
#define EM_GETLINECOUNT (186)
#define EM_GETMARGINS (212)
#define EM_GETMODIFY (184)
#define EM_GETPASSWORDCHAR (210)
#define EM_GETRECT (178)
#define EM_GETSEL (176)
#define EM_GETTHUMB (190)
#define EM_GETWORDBREAKPROC (209)
#define EM_LIMITTEXT (197)
#define EM_LINEFROMCHAR (201)
#define EM_LINEINDEX (187)
#define EM_LINELENGTH (193)
#define EM_LINESCROLL (182)
#define EM_POSFROMCHAR (214)
#define EM_REPLACESEL (194)
#define EM_SCROLL (181)
#define EM_SCROLLCARET (183)
#define EM_SETHANDLE (188)
#define EM_SETIMESTATUS (216)
#define EM_SETLIMITTEXT EM_LIMITTEXT
#define EM_SETMARGINS (211)
#define EM_SETMODIFY (185)
#define EM_SETPASSWORDCHAR (204)
#define EM_SETREADONLY (207)
#define EM_SETRECT (179)
#define EM_SETRECTNP (180)
#define EM_SETSEL (177)
#define EM_SETTABSTOPS (203)
#define EM_SETWORDBREAKPROC (208)
#define EM_UNDO (199)
#define ENABLEDUPLEX (28)
#define ENABLEPAIRKERNING (769)
#define ENABLERELATIVEWIDTHS (768)
#define ENABLE_AUTO_POSITION (256)
#define ENABLE_DISABLE_AUTOSAVE (210)
#define ENABLE_DISABLE_AUTO_OFFLINE (219)
#define ENABLE_ECHO_INPUT (4)
#define ENABLE_EXTENDED_FLAGS (128)
#define ENABLE_INSERT_MODE (32)
#define ENABLE_LINE_INPUT (2)
#define ENABLE_MOUSE_INPUT (16)
#define ENABLE_PROCESSED_INPUT (1)
#define ENABLE_PROCESSED_OUTPUT (1)
#define ENABLE_QUICK_EDIT_MODE (64)
#define ENABLE_SMART (216)
#define ENABLE_WINDOW_INPUT (8)
#define ENABLE_WRAP_AT_EOL_OUTPUT (2)
#define ENCAPSULATED_POSTSCRIPT (4116)
#define ENCRYPTION_FORMAT_DEFAULT (1)
#define ENDDOC (11)
#define ENDSESSION_CLOSEAPP (1)
#define ENDSESSION_CRITICAL (1073741824)
#define ENDSESSION_LOGOFF (2147483648u)
#define END_PATH (4098)
#define ENHANCED_KEY (256)
#define ENHMETA_SIGNATURE (1179469088)
#define ENHMETA_STOCK_OBJECT (2147483648u)
#define ENLISTMENT_ALL_ACCESS (983071l)
#define ENLISTMENT_GENERIC_EXECUTE (131100l)
#define ENLISTMENT_GENERIC_READ (131073l)
#define ENLISTMENT_GENERIC_WRITE (131102l)
#define ENLISTMENT_MAXIMUM_OPTION (1)
#define ENLISTMENT_OBJECT_NAME_LENGTH_IN_BYTES ( sizeof ( ENLISTMENT_OBJECT_PATH ) + ( 38 * sizeof ( WCHAR ) ) )
#define ENLISTMENT_OBJECT_PATH "\\Enlistment\\"
#define ENLISTMENT_QUERY_INFORMATION (1)
#define ENLISTMENT_RECOVER (4)
#define ENLISTMENT_SET_INFORMATION (2)
#define ENLISTMENT_SUBORDINATE_RIGHTS (8)
#define ENLISTMENT_SUPERIOR (1)
#define ENLISTMENT_SUPERIOR_RIGHTS (16)
#define ENUMPAPERBINS (31)
#define ENUMPAPERMETRICS (34)
#define ENUMRESLANGPROC __MINGW_NAME_AW ( ENUMRESLANGPROC )
#define ENUMRESNAMEPROC __MINGW_NAME_AW ( ENUMRESNAMEPROC )
#define ENUMRESTYPEPROC __MINGW_NAME_AW ( ENUMRESTYPEPROC )
#define ENUM_ALL_CALENDARS (4294967295u)
#define ENUM_CURRENT_SETTINGS (-1)
#define ENUM_E_FIRST __MSABI_LONG ( 0x800401B0 )
#define ENUM_E_LAST __MSABI_LONG ( 0x800401BF )
#define ENUM_REGISTRY_SETTINGS (-2)
#define ENUM_S_FIRST __MSABI_LONG ( 0x000401B0 )
#define ENUM_S_LAST __MSABI_LONG ( 0x000401BF )
#define EN_ALIGN_LTR_EC (1792)
#define EN_ALIGN_RTL_EC (1793)
#define EN_CHANGE (768)
#define EN_ERRSPACE (1280)
#define EN_HSCROLL (1537)
#define EN_KILLFOCUS (512)
#define EN_MAXTEXT (1281)
#define EN_SETFOCUS (256)
#define EN_UPDATE (1024)
#define EN_VSCROLL (1538)
#define EPSPRINTING (33)
#define EPS_SIGNATURE (1179865157)
#define EPT_S_CANT_CREATE __MSABI_LONG ( 1899 )
#define EPT_S_CANT_PERFORM_OP __MSABI_LONG ( 1752 )
#define EPT_S_INVALID_ENTRY __MSABI_LONG ( 1751 )
#define EPT_S_NOT_REGISTERED __MSABI_LONG ( 1753 )
#define ERROR (0)
#define ERROR_ABANDONED_WAIT_0 __MSABI_LONG ( 735 )
#define ERROR_ABANDONED_WAIT_63 __MSABI_LONG ( 736 )
#define ERROR_ACCESS_DENIED __MSABI_LONG ( 5 )
#define ERROR_ACCESS_DISABLED_BY_POLICY __MSABI_LONG ( 1260 )
#define ERROR_ACCESS_DISABLED_WEBBLADE __MSABI_LONG ( 1277 )
#define ERROR_ACCESS_DISABLED_WEBBLADE_TAMPER __MSABI_LONG ( 1278 )
#define ERROR_ACCOUNT_DISABLED __MSABI_LONG ( 1331 )
#define ERROR_ACCOUNT_EXPIRED __MSABI_LONG ( 1793 )
#define ERROR_ACCOUNT_LOCKED_OUT __MSABI_LONG ( 1909 )
#define ERROR_ACCOUNT_RESTRICTION __MSABI_LONG ( 1327 )
#define ERROR_ACTIVATION_COUNT_EXCEEDED __MSABI_LONG ( 7059 )
#define ERROR_ACTIVE_CONNECTIONS __MSABI_LONG ( 2402 )
#define ERROR_ADAP_HDW_ERR __MSABI_LONG ( 57 )
#define ERROR_ADDRESS_ALREADY_ASSOCIATED __MSABI_LONG ( 1227 )
#define ERROR_ADDRESS_NOT_ASSOCIATED __MSABI_LONG ( 1228 )
#define ERROR_ADVANCED_INSTALLER_FAILED __MSABI_LONG ( 14099 )
#define ERROR_ALERTED __MSABI_LONG ( 739 )
#define ERROR_ALIAS_EXISTS __MSABI_LONG ( 1379 )
#define ERROR_ALLOTTED_SPACE_EXCEEDED __MSABI_LONG ( 1344 )
#define ERROR_ALL_NODES_NOT_AVAILABLE __MSABI_LONG ( 5037 )
#define ERROR_ALL_SIDS_FILTERED _HRESULT_TYPEDEF_ ( 0xC0090002 )
#define ERROR_ALL_USER_TRUST_QUOTA_EXCEEDED __MSABI_LONG ( 1933 )
#define ERROR_ALREADY_ASSIGNED __MSABI_LONG ( 85 )
#define ERROR_ALREADY_EXISTS __MSABI_LONG ( 183 )
#define ERROR_ALREADY_FIBER __MSABI_LONG ( 1280 )
#define ERROR_ALREADY_INITIALIZED __MSABI_LONG ( 1247 )
#define ERROR_ALREADY_REGISTERED __MSABI_LONG ( 1242 )
#define ERROR_ALREADY_RUNNING_LKG __MSABI_LONG ( 1074 )
#define ERROR_ALREADY_THREAD __MSABI_LONG ( 1281 )
#define ERROR_ALREADY_WAITING __MSABI_LONG ( 1904 )
#define ERROR_AMBIGUOUS_SYSTEM_DEVICE __MSABI_LONG ( 15250 )
#define ERROR_API_UNAVAILABLE __MSABI_LONG ( 15841 )
#define ERROR_APPHELP_BLOCK __MSABI_LONG ( 1259 )
#define ERROR_APPX_INTEGRITY_FAILURE_CLR_NGEN __MSABI_LONG ( 15624 )
#define ERROR_APP_WRONG_OS __MSABI_LONG ( 1151 )
#define ERROR_ARENA_TRASHED __MSABI_LONG ( 7 )
#define ERROR_ARITHMETIC_OVERFLOW __MSABI_LONG ( 534 )
#define ERROR_ATOMIC_LOCKS_NOT_SUPPORTED __MSABI_LONG ( 174 )
#define ERROR_AUDITING_DISABLED _HRESULT_TYPEDEF_ ( 0xC0090001 )
#define ERROR_AUTHENTICATION_FIREWALL_FAILED __MSABI_LONG ( 1935 )
#define ERROR_AUTODATASEG_EXCEEDS_64k __MSABI_LONG ( 199 )
#define ERROR_BADDB __MSABI_LONG ( 1009 )
#define ERROR_BADKEY __MSABI_LONG ( 1010 )
#define ERROR_BAD_ARGUMENTS __MSABI_LONG ( 160 )
#define ERROR_BAD_COMMAND __MSABI_LONG ( 22 )
#define ERROR_BAD_CONFIGURATION __MSABI_LONG ( 1610 )
#define ERROR_BAD_DESCRIPTOR_FORMAT __MSABI_LONG ( 1361 )
#define ERROR_BAD_DEVICE __MSABI_LONG ( 1200 )
#define ERROR_BAD_DEV_TYPE __MSABI_LONG ( 66 )
#define ERROR_BAD_DRIVER __MSABI_LONG ( 2001 )
#define ERROR_BAD_DRIVER_LEVEL __MSABI_LONG ( 119 )
#define ERROR_BAD_ENVIRONMENT __MSABI_LONG ( 10 )
#define ERROR_BAD_EXE_FORMAT __MSABI_LONG ( 193 )
#define ERROR_BAD_FILE_TYPE __MSABI_LONG ( 222 )
#define ERROR_BAD_FORMAT __MSABI_LONG ( 11 )
#define ERROR_BAD_IMPERSONATION_LEVEL __MSABI_LONG ( 1346 )
#define ERROR_BAD_INHERITANCE_ACL __MSABI_LONG ( 1340 )
#define ERROR_BAD_LENGTH __MSABI_LONG ( 24 )
#define ERROR_BAD_LOGON_SESSION_STATE __MSABI_LONG ( 1365 )
#define ERROR_BAD_NETPATH __MSABI_LONG ( 53 )
#define ERROR_BAD_NET_NAME __MSABI_LONG ( 67 )
#define ERROR_BAD_NET_RESP __MSABI_LONG ( 58 )
#define ERROR_BAD_PATHNAME __MSABI_LONG ( 161 )
#define ERROR_BAD_PIPE __MSABI_LONG ( 230 )
#define ERROR_BAD_PROFILE __MSABI_LONG ( 1206 )
#define ERROR_BAD_PROVIDER __MSABI_LONG ( 1204 )
#define ERROR_BAD_QUERY_SYNTAX __MSABI_LONG ( 1615 )
#define ERROR_BAD_RECOVERY_POLICY __MSABI_LONG ( 6012 )
#define ERROR_BAD_REM_ADAP __MSABI_LONG ( 60 )
#define ERROR_BAD_THREADID_ADDR __MSABI_LONG ( 159 )
#define ERROR_BAD_TOKEN_TYPE __MSABI_LONG ( 1349 )
#define ERROR_BAD_UNIT __MSABI_LONG ( 20 )
#define ERROR_BAD_USERNAME __MSABI_LONG ( 2202 )
#define ERROR_BAD_USER_PROFILE __MSABI_LONG ( 1253 )
#define ERROR_BAD_VALIDATION_CLASS __MSABI_LONG ( 1348 )
#define ERROR_BEGINNING_OF_MEDIA __MSABI_LONG ( 1102 )
#define ERROR_BIDI_DEVICE_OFFLINE (13004)
#define ERROR_BIDI_ERROR_BASE (13000)
#define ERROR_BIDI_NOT_SUPPORTED ERROR_NOT_SUPPORTED
#define ERROR_BIDI_SCHEMA_NOT_SUPPORTED (13005)
#define ERROR_BIDI_SCHEMA_READ_ONLY (13002)
#define ERROR_BIDI_SERVER_OFFLINE (13003)
#define ERROR_BIDI_STATUS_OK (0)
#define ERROR_BIDI_STATUS_WARNING (13001)
#define ERROR_BOOT_ALREADY_ACCEPTED __MSABI_LONG ( 1076 )
#define ERROR_BROKEN_PIPE __MSABI_LONG ( 109 )
#define ERROR_BUFFER_OVERFLOW __MSABI_LONG ( 111 )
#define ERROR_BUSY __MSABI_LONG ( 170 )
#define ERROR_BUSY_DRIVE __MSABI_LONG ( 142 )
#define ERROR_BUS_RESET __MSABI_LONG ( 1111 )
#define ERROR_CALLBACK_SUPPLIED_INVALID_DATA __MSABI_LONG ( 1273 )
#define ERROR_CALL_NOT_IMPLEMENTED __MSABI_LONG ( 120 )
#define ERROR_CANCELLED __MSABI_LONG ( 1223 )
#define ERROR_CANCEL_VIOLATION __MSABI_LONG ( 173 )
#define ERROR_CANNOT_COPY __MSABI_LONG ( 266 )
#define ERROR_CANNOT_DETECT_DRIVER_FAILURE __MSABI_LONG ( 1080 )
#define ERROR_CANNOT_DETECT_PROCESS_ABORT __MSABI_LONG ( 1081 )
#define ERROR_CANNOT_FIND_WND_CLASS __MSABI_LONG ( 1407 )
#define ERROR_CANNOT_IMPERSONATE __MSABI_LONG ( 1368 )
#define ERROR_CANNOT_MAKE __MSABI_LONG ( 82 )
#define ERROR_CANNOT_OPEN_PROFILE __MSABI_LONG ( 1205 )
#define ERROR_CANNOT_SWITCH_RUNLEVEL __MSABI_LONG ( 15400 )
#define ERROR_CANTOPEN __MSABI_LONG ( 1011 )
#define ERROR_CANTREAD __MSABI_LONG ( 1012 )
#define ERROR_CANTWRITE __MSABI_LONG ( 1013 )
#define ERROR_CANT_ACCESS_DOMAIN_INFO __MSABI_LONG ( 1351 )
#define ERROR_CANT_ACCESS_FILE __MSABI_LONG ( 1920 )
#define ERROR_CANT_DELETE_LAST_ITEM __MSABI_LONG ( 4335 )
#define ERROR_CANT_DISABLE_MANDATORY __MSABI_LONG ( 1310 )
#define ERROR_CANT_EVICT_ACTIVE_NODE __MSABI_LONG ( 5009 )
#define ERROR_CANT_OPEN_ANONYMOUS __MSABI_LONG ( 1347 )
#define ERROR_CANT_RESOLVE_FILENAME __MSABI_LONG ( 1921 )
#define ERROR_CAN_NOT_COMPLETE __MSABI_LONG ( 1003 )
#define ERROR_CAN_NOT_DEL_LOCAL_WINS __MSABI_LONG ( 4001 )
#define ERROR_CHECKOUT_REQUIRED __MSABI_LONG ( 221 )
#define ERROR_CHILD_MUST_BE_VOLATILE __MSABI_LONG ( 1021 )
#define ERROR_CHILD_NOT_COMPLETE __MSABI_LONG ( 129 )
#define ERROR_CHILD_WINDOW_MENU __MSABI_LONG ( 1436 )
#define ERROR_CIRCULAR_DEPENDENCY __MSABI_LONG ( 1059 )
#define ERROR_CLASS_ALREADY_EXISTS __MSABI_LONG ( 1410 )
#define ERROR_CLASS_DOES_NOT_EXIST __MSABI_LONG ( 1411 )
#define ERROR_CLASS_HAS_WINDOWS __MSABI_LONG ( 1412 )
#define ERROR_CLEANER_CARTRIDGE_INSTALLED __MSABI_LONG ( 4340 )
#define ERROR_CLEANER_CARTRIDGE_SPENT __MSABI_LONG ( 4333 )
#define ERROR_CLEANER_SLOT_NOT_SET __MSABI_LONG ( 4332 )
#define ERROR_CLEANER_SLOT_SET __MSABI_LONG ( 4331 )
#define ERROR_CLIPBOARD_NOT_OPEN __MSABI_LONG ( 1418 )
#define ERROR_CLIPPING_NOT_SUPPORTED __MSABI_LONG ( 2005 )
#define ERROR_CLUSCFG_ALREADY_COMMITTED __MSABI_LONG ( 5901 )
#define ERROR_CLUSCFG_ROLLBACK_FAILED __MSABI_LONG ( 5902 )
#define ERROR_CLUSCFG_SYSTEM_DISK_DRIVE_LETTER_CONFLICT __MSABI_LONG ( 5903 )
#define ERROR_CLUSTERLOG_CHKPOINT_NOT_FOUND __MSABI_LONG ( 5032 )
#define ERROR_CLUSTERLOG_CORRUPT __MSABI_LONG ( 5029 )
#define ERROR_CLUSTERLOG_EXCEEDS_MAXSIZE __MSABI_LONG ( 5031 )
#define ERROR_CLUSTERLOG_NOT_ENOUGH_SPACE __MSABI_LONG ( 5033 )
#define ERROR_CLUSTERLOG_RECORD_EXCEEDS_MAXSIZE __MSABI_LONG ( 5030 )
#define ERROR_CLUSTER_CANT_CREATE_DUP_CLUSTER_NAME __MSABI_LONG ( 5900 )
#define ERROR_CLUSTER_DATABASE_SEQMISMATCH __MSABI_LONG ( 5083 )
#define ERROR_CLUSTER_EVICT_WITHOUT_CLEANUP __MSABI_LONG ( 5896 )
#define ERROR_CLUSTER_GUM_NOT_LOCKER __MSABI_LONG ( 5085 )
#define ERROR_CLUSTER_INCOMPATIBLE_VERSIONS __MSABI_LONG ( 5075 )
#define ERROR_CLUSTER_INSTANCE_ID_MISMATCH __MSABI_LONG ( 5893 )
#define ERROR_CLUSTER_INVALID_NETWORK __MSABI_LONG ( 5054 )
#define ERROR_CLUSTER_INVALID_NETWORK_PROVIDER __MSABI_LONG ( 5049 )
#define ERROR_CLUSTER_INVALID_NODE __MSABI_LONG ( 5039 )
#define ERROR_CLUSTER_INVALID_REQUEST __MSABI_LONG ( 5048 )
#define ERROR_CLUSTER_IPADDR_IN_USE __MSABI_LONG ( 5057 )
#define ERROR_CLUSTER_JOIN_ABORTED __MSABI_LONG ( 5074 )
#define ERROR_CLUSTER_JOIN_IN_PROGRESS __MSABI_LONG ( 5041 )
#define ERROR_CLUSTER_JOIN_NOT_IN_PROGRESS __MSABI_LONG ( 5053 )
#define ERROR_CLUSTER_LAST_INTERNAL_NETWORK __MSABI_LONG ( 5066 )
#define ERROR_CLUSTER_LOCAL_NODE_NOT_FOUND __MSABI_LONG ( 5043 )
#define ERROR_CLUSTER_MAXNUM_OF_RESOURCES_EXCEEDED __MSABI_LONG ( 5076 )
#define ERROR_CLUSTER_MEMBERSHIP_HALT __MSABI_LONG ( 5892 )
#define ERROR_CLUSTER_MEMBERSHIP_INVALID_STATE __MSABI_LONG ( 5890 )
#define ERROR_CLUSTER_MISMATCHED_COMPUTER_ACCT_NAME __MSABI_LONG ( 5905 )
#define ERROR_CLUSTER_NETINTERFACE_EXISTS __MSABI_LONG ( 5046 )
#define ERROR_CLUSTER_NETINTERFACE_NOT_FOUND __MSABI_LONG ( 5047 )
#define ERROR_CLUSTER_NETWORK_ALREADY_OFFLINE __MSABI_LONG ( 5064 )
#define ERROR_CLUSTER_NETWORK_ALREADY_ONLINE __MSABI_LONG ( 5063 )
#define ERROR_CLUSTER_NETWORK_EXISTS __MSABI_LONG ( 5044 )
#define ERROR_CLUSTER_NETWORK_HAS_DEPENDENTS __MSABI_LONG ( 5067 )
#define ERROR_CLUSTER_NETWORK_NOT_FOUND __MSABI_LONG ( 5045 )
#define ERROR_CLUSTER_NETWORK_NOT_FOUND_FOR_IP __MSABI_LONG ( 5894 )
#define ERROR_CLUSTER_NETWORK_NOT_INTERNAL __MSABI_LONG ( 5060 )
#define ERROR_CLUSTER_NODE_ALREADY_DOWN __MSABI_LONG ( 5062 )
#define ERROR_CLUSTER_NODE_ALREADY_HAS_DFS_ROOT __MSABI_LONG ( 5088 )
#define ERROR_CLUSTER_NODE_ALREADY_MEMBER __MSABI_LONG ( 5065 )
#define ERROR_CLUSTER_NODE_ALREADY_UP __MSABI_LONG ( 5061 )
#define ERROR_CLUSTER_NODE_DOWN __MSABI_LONG ( 5050 )
#define ERROR_CLUSTER_NODE_EXISTS __MSABI_LONG ( 5040 )
#define ERROR_CLUSTER_NODE_NOT_FOUND __MSABI_LONG ( 5042 )
#define ERROR_CLUSTER_NODE_NOT_MEMBER __MSABI_LONG ( 5052 )
#define ERROR_CLUSTER_NODE_NOT_PAUSED __MSABI_LONG ( 5058 )
#define ERROR_CLUSTER_NODE_NOT_READY __MSABI_LONG ( 5072 )
#define ERROR_CLUSTER_NODE_PAUSED __MSABI_LONG ( 5070 )
#define ERROR_CLUSTER_NODE_SHUTTING_DOWN __MSABI_LONG ( 5073 )
#define ERROR_CLUSTER_NODE_UNREACHABLE __MSABI_LONG ( 5051 )
#define ERROR_CLUSTER_NODE_UP __MSABI_LONG ( 5056 )
#define ERROR_CLUSTER_NO_RPC_PACKAGES_REGISTERED __MSABI_LONG ( 5081 )
#define ERROR_CLUSTER_NO_SECURITY_CONTEXT __MSABI_LONG ( 5059 )
#define ERROR_CLUSTER_OLD_VERSION __MSABI_LONG ( 5904 )
#define ERROR_CLUSTER_OWNER_NOT_IN_PREFLIST __MSABI_LONG ( 5082 )
#define ERROR_CLUSTER_PARAMETER_MISMATCH __MSABI_LONG ( 5897 )
#define ERROR_CLUSTER_PROPERTY_DATA_TYPE_MISMATCH __MSABI_LONG ( 5895 )
#define ERROR_CLUSTER_QUORUMLOG_NOT_FOUND __MSABI_LONG ( 5891 )
#define ERROR_CLUSTER_RESNAME_NOT_FOUND __MSABI_LONG ( 5080 )
#define ERROR_CLUSTER_RESOURCE_TYPE_NOT_FOUND __MSABI_LONG ( 5078 )
#define ERROR_CLUSTER_RESTYPE_NOT_SUPPORTED __MSABI_LONG ( 5079 )
#define ERROR_CLUSTER_SHUTTING_DOWN __MSABI_LONG ( 5022 )
#define ERROR_CLUSTER_SYSTEM_CONFIG_CHANGED __MSABI_LONG ( 5077 )
#define ERROR_CLUSTER_WRONG_OS_VERSION __MSABI_LONG ( 5899 )
#define ERROR_COLORSPACE_MISMATCH __MSABI_LONG ( 2021 )
#define ERROR_COMMITMENT_LIMIT __MSABI_LONG ( 1455 )
#define ERROR_COM_TASK_STOP_PENDING __MSABI_LONG ( 15501 )
#define ERROR_CONNECTED_OTHER_PASSWORD __MSABI_LONG ( 2108 )
#define ERROR_CONNECTED_OTHER_PASSWORD_DEFAULT __MSABI_LONG ( 2109 )
#define ERROR_CONNECTION_ABORTED __MSABI_LONG ( 1236 )
#define ERROR_CONNECTION_ACTIVE __MSABI_LONG ( 1230 )
#define ERROR_CONNECTION_COUNT_LIMIT __MSABI_LONG ( 1238 )
#define ERROR_CONNECTION_INVALID __MSABI_LONG ( 1229 )
#define ERROR_CONNECTION_REFUSED __MSABI_LONG ( 1225 )
#define ERROR_CONNECTION_UNAVAIL __MSABI_LONG ( 1201 )
#define ERROR_CONTEXT_EXPIRED __MSABI_LONG ( 1931 )
#define ERROR_CONTINUE __MSABI_LONG ( 1246 )
#define ERROR_CONTROLLING_IEPORT __MSABI_LONG ( 4329 )
#define ERROR_CONTROL_ID_NOT_FOUND __MSABI_LONG ( 1421 )
#define ERROR_CORE_RESOURCE __MSABI_LONG ( 5026 )
#define ERROR_COUNTER_TIMEOUT __MSABI_LONG ( 1121 )
#define ERROR_CRC __MSABI_LONG ( 23 )
#define ERROR_CREATE_FAILED __MSABI_LONG ( 1631 )
#define ERROR_CSCSHARE_OFFLINE __MSABI_LONG ( 1262 )
#define ERROR_CTX_BAD_VIDEO_MODE __MSABI_LONG ( 7025 )
#define ERROR_CTX_CANNOT_MAKE_EVENTLOG_ENTRY __MSABI_LONG ( 7005 )
#define ERROR_CTX_CLIENT_LICENSE_IN_USE __MSABI_LONG ( 7052 )
#define ERROR_CTX_CLIENT_LICENSE_NOT_SET __MSABI_LONG ( 7053 )
#define ERROR_CTX_CLIENT_QUERY_TIMEOUT __MSABI_LONG ( 7040 )
#define ERROR_CTX_CLOSE_PENDING __MSABI_LONG ( 7007 )
#define ERROR_CTX_CONSOLE_CONNECT __MSABI_LONG ( 7042 )
#define ERROR_CTX_CONSOLE_DISCONNECT __MSABI_LONG ( 7041 )
#define ERROR_CTX_GRAPHICS_INVALID __MSABI_LONG ( 7035 )
#define ERROR_CTX_INVALID_MODEMNAME __MSABI_LONG ( 7010 )
#define ERROR_CTX_INVALID_PD __MSABI_LONG ( 7002 )
#define ERROR_CTX_INVALID_WD __MSABI_LONG ( 7049 )
#define ERROR_CTX_LICENSE_CLIENT_INVALID __MSABI_LONG ( 7055 )
#define ERROR_CTX_LICENSE_EXPIRED __MSABI_LONG ( 7056 )
#define ERROR_CTX_LICENSE_NOT_AVAILABLE __MSABI_LONG ( 7054 )
#define ERROR_CTX_LOGON_DISABLED __MSABI_LONG ( 7037 )
#define ERROR_CTX_MODEM_INF_NOT_FOUND __MSABI_LONG ( 7009 )
#define ERROR_CTX_MODEM_RESPONSE_BUSY __MSABI_LONG ( 7015 )
#define ERROR_CTX_MODEM_RESPONSE_ERROR __MSABI_LONG ( 7011 )
#define ERROR_CTX_MODEM_RESPONSE_NO_CARRIER __MSABI_LONG ( 7013 )
#define ERROR_CTX_MODEM_RESPONSE_NO_DIALTONE __MSABI_LONG ( 7014 )
#define ERROR_CTX_MODEM_RESPONSE_TIMEOUT __MSABI_LONG ( 7012 )
#define ERROR_CTX_MODEM_RESPONSE_VOICE __MSABI_LONG ( 7016 )
#define ERROR_CTX_NOT_CONSOLE __MSABI_LONG ( 7038 )
#define ERROR_CTX_NO_OUTBUF __MSABI_LONG ( 7008 )
#define ERROR_CTX_PD_NOT_FOUND __MSABI_LONG ( 7003 )
#define ERROR_CTX_SERVICE_NAME_COLLISION __MSABI_LONG ( 7006 )
#define ERROR_CTX_SHADOW_DENIED __MSABI_LONG ( 7044 )
#define ERROR_CTX_SHADOW_DISABLED __MSABI_LONG ( 7051 )
#define ERROR_CTX_SHADOW_ENDED_BY_MODE_CHANGE __MSABI_LONG ( 7058 )
#define ERROR_CTX_SHADOW_INVALID __MSABI_LONG ( 7050 )
#define ERROR_CTX_SHADOW_NOT_RUNNING __MSABI_LONG ( 7057 )
#define ERROR_CTX_TD_ERROR __MSABI_LONG ( 7017 )
#define ERROR_CTX_WD_NOT_FOUND __MSABI_LONG ( 7004 )
#define ERROR_CTX_WINSTATION_ACCESS_DENIED __MSABI_LONG ( 7045 )
#define ERROR_CTX_WINSTATION_ALREADY_EXISTS __MSABI_LONG ( 7023 )
#define ERROR_CTX_WINSTATION_BUSY __MSABI_LONG ( 7024 )
#define ERROR_CTX_WINSTATION_NAME_INVALID __MSABI_LONG ( 7001 )
#define ERROR_CTX_WINSTATION_NOT_FOUND __MSABI_LONG ( 7022 )
#define ERROR_CURRENT_DIRECTORY __MSABI_LONG ( 16 )
#define ERROR_CURRENT_DOMAIN_NOT_ALLOWED __MSABI_LONG ( 1399 )
#define ERROR_DATABASE_BACKUP_CORRUPT __MSABI_LONG ( 5087 )
#define ERROR_DATABASE_DOES_NOT_EXIST __MSABI_LONG ( 1065 )
#define ERROR_DATABASE_FAILURE __MSABI_LONG ( 4313 )
#define ERROR_DATABASE_FULL __MSABI_LONG ( 4314 )
#define ERROR_DATATYPE_MISMATCH __MSABI_LONG ( 1629 )
#define ERROR_DC_NOT_FOUND __MSABI_LONG ( 1425 )
#define ERROR_DDE_FAIL __MSABI_LONG ( 1156 )
#define ERROR_DEBUGGER_INACTIVE __MSABI_LONG ( 1284 )
#define ERROR_DECRYPTION_FAILED __MSABI_LONG ( 6001 )
#define ERROR_DELAY_LOAD_FAILED __MSABI_LONG ( 1285 )
#define ERROR_DELETE_PENDING __MSABI_LONG ( 303 )
#define ERROR_DELETING_EXISTING_APPLICATIONDATA_STORE_FAILED __MSABI_LONG ( 15621 )
#define ERROR_DELETING_ICM_XFORM __MSABI_LONG ( 2019 )
#define ERROR_DEPENDENCY_ALREADY_EXISTS __MSABI_LONG ( 5003 )
#define ERROR_DEPENDENCY_NOT_ALLOWED __MSABI_LONG ( 5069 )
#define ERROR_DEPENDENCY_NOT_FOUND __MSABI_LONG ( 5002 )
#define ERROR_DEPENDENT_RESOURCE_EXISTS __MSABI_LONG ( 5001 )
#define ERROR_DEPENDENT_SERVICES_RUNNING __MSABI_LONG ( 1051 )
#define ERROR_DEPLOYMENT_BLOCKED_BY_POLICY __MSABI_LONG ( 15617 )
#define ERROR_DESTINATION_ELEMENT_FULL __MSABI_LONG ( 1161 )
#define ERROR_DESTROY_OBJECT_OF_OTHER_THREAD __MSABI_LONG ( 1435 )
#define ERROR_DEVICE_ALREADY_REMEMBERED __MSABI_LONG ( 1202 )
#define ERROR_DEVICE_DOOR_OPEN __MSABI_LONG ( 1166 )
#define ERROR_DEVICE_IN_USE __MSABI_LONG ( 2404 )
#define ERROR_DEVICE_NOT_AVAILABLE __MSABI_LONG ( 4319 )
#define ERROR_DEVICE_NOT_CONNECTED __MSABI_LONG ( 1167 )
#define ERROR_DEVICE_NOT_PARTITIONED __MSABI_LONG ( 1107 )
#define ERROR_DEVICE_REINITIALIZATION_NEEDED __MSABI_LONG ( 1164 )
#define ERROR_DEVICE_REMOVED __MSABI_LONG ( 1617 )
#define ERROR_DEVICE_REQUIRES_CLEANING __MSABI_LONG ( 1165 )
#define ERROR_DEV_NOT_EXIST __MSABI_LONG ( 55 )
#define ERROR_DHCP_ADDRESS_CONFLICT __MSABI_LONG ( 4100 )
#define ERROR_DIFFERENT_SERVICE_ACCOUNT __MSABI_LONG ( 1079 )
#define ERROR_DIRECTORY __MSABI_LONG ( 267 )
#define ERROR_DIRECT_ACCESS_HANDLE __MSABI_LONG ( 130 )
#define ERROR_DIR_EFS_DISALLOWED __MSABI_LONG ( 6010 )
#define ERROR_DIR_NOT_EMPTY __MSABI_LONG ( 145 )
#define ERROR_DIR_NOT_ROOT __MSABI_LONG ( 144 )
#define ERROR_DISCARDED __MSABI_LONG ( 157 )
#define ERROR_DISK_CHANGE __MSABI_LONG ( 107 )
#define ERROR_DISK_CORRUPT __MSABI_LONG ( 1393 )
#define ERROR_DISK_FULL __MSABI_LONG ( 112 )
#define ERROR_DISK_OPERATION_FAILED __MSABI_LONG ( 1127 )
#define ERROR_DISK_RECALIBRATE_FAILED __MSABI_LONG ( 1126 )
#define ERROR_DISK_RESET_FAILED __MSABI_LONG ( 1128 )
#define ERROR_DISK_TOO_FRAGMENTED __MSABI_LONG ( 302 )
#define ERROR_DLL_INIT_FAILED __MSABI_LONG ( 1114 )
#define ERROR_DLL_NOT_FOUND __MSABI_LONG ( 1157 )
#define ERROR_DOMAIN_CONTROLLER_EXISTS __MSABI_LONG ( 1250 )
#define ERROR_DOMAIN_CONTROLLER_NOT_FOUND __MSABI_LONG ( 1908 )
#define ERROR_DOMAIN_EXISTS __MSABI_LONG ( 1356 )
#define ERROR_DOMAIN_LIMIT_EXCEEDED __MSABI_LONG ( 1357 )
#define ERROR_DOMAIN_TRUST_INCONSISTENT __MSABI_LONG ( 1810 )
#define ERROR_DOWNGRADE_DETECTED __MSABI_LONG ( 1265 )
#define ERROR_DRIVER_BLOCKED __MSABI_LONG ( 1275 )
#define ERROR_DRIVE_LOCKED __MSABI_LONG ( 108 )
#define ERROR_DRIVE_MEDIA_MISMATCH __MSABI_LONG ( 4303 )
#define ERROR_DRIVE_NOT_INSTALLED (8)
#define ERROR_DS_ADD_REPLICA_INHIBITED __MSABI_LONG ( 8302 )
#define ERROR_DS_ADMIN_LIMIT_EXCEEDED __MSABI_LONG ( 8228 )
#define ERROR_DS_AFFECTS_MULTIPLE_DSAS __MSABI_LONG ( 8249 )
#define ERROR_DS_AG_CANT_HAVE_UNIVERSAL_MEMBER __MSABI_LONG ( 8578 )
#define ERROR_DS_ALIASED_OBJ_MISSING __MSABI_LONG ( 8334 )
#define ERROR_DS_ALIAS_DEREF_PROBLEM __MSABI_LONG ( 8244 )
#define ERROR_DS_ALIAS_POINTS_TO_ALIAS __MSABI_LONG ( 8336 )
#define ERROR_DS_ALIAS_PROBLEM __MSABI_LONG ( 8241 )
#define ERROR_DS_ATTRIBUTE_OR_VALUE_EXISTS __MSABI_LONG ( 8205 )
#define ERROR_DS_ATTRIBUTE_OWNED_BY_SAM __MSABI_LONG ( 8346 )
#define ERROR_DS_ATTRIBUTE_TYPE_UNDEFINED __MSABI_LONG ( 8204 )
#define ERROR_DS_ATT_ALREADY_EXISTS __MSABI_LONG ( 8318 )
#define ERROR_DS_ATT_IS_NOT_ON_OBJ __MSABI_LONG ( 8310 )
#define ERROR_DS_ATT_NOT_DEF_FOR_CLASS __MSABI_LONG ( 8317 )
#define ERROR_DS_ATT_NOT_DEF_IN_SCHEMA __MSABI_LONG ( 8303 )
#define ERROR_DS_ATT_SCHEMA_REQ_ID __MSABI_LONG ( 8399 )
#define ERROR_DS_ATT_SCHEMA_REQ_SYNTAX __MSABI_LONG ( 8416 )
#define ERROR_DS_ATT_VAL_ALREADY_EXISTS __MSABI_LONG ( 8323 )
#define ERROR_DS_AUTHORIZATION_FAILED __MSABI_LONG ( 8599 )
#define ERROR_DS_AUTH_METHOD_NOT_SUPPORTED __MSABI_LONG ( 8231 )
#define ERROR_DS_AUTH_UNKNOWN __MSABI_LONG ( 8234 )
#define ERROR_DS_AUX_CLS_TEST_FAIL __MSABI_LONG ( 8389 )
#define ERROR_DS_BACKLINK_WITHOUT_LINK __MSABI_LONG ( 8482 )
#define ERROR_DS_BAD_ATT_SCHEMA_SYNTAX __MSABI_LONG ( 8400 )
#define ERROR_DS_BAD_HIERARCHY_FILE __MSABI_LONG ( 8425 )
#define ERROR_DS_BAD_INSTANCE_TYPE __MSABI_LONG ( 8313 )
#define ERROR_DS_BAD_NAME_SYNTAX __MSABI_LONG ( 8335 )
#define ERROR_DS_BAD_RDN_ATT_ID_SYNTAX __MSABI_LONG ( 8392 )
#define ERROR_DS_BUILD_HIERARCHY_TABLE_FAILED __MSABI_LONG ( 8426 )
#define ERROR_DS_BUSY __MSABI_LONG ( 8206 )
#define ERROR_DS_CANT_ACCESS_REMOTE_PART_OF_AD __MSABI_LONG ( 8585 )
#define ERROR_DS_CANT_ADD_ATT_VALUES __MSABI_LONG ( 8320 )
#define ERROR_DS_CANT_ADD_SYSTEM_ONLY __MSABI_LONG ( 8358 )
#define ERROR_DS_CANT_ADD_TO_GC __MSABI_LONG ( 8550 )
#define ERROR_DS_CANT_CACHE_ATT __MSABI_LONG ( 8401 )
#define ERROR_DS_CANT_CACHE_CLASS __MSABI_LONG ( 8402 )
#define ERROR_DS_CANT_CREATE_IN_NONDOMAIN_NC __MSABI_LONG ( 8553 )
#define ERROR_DS_CANT_CREATE_UNDER_SCHEMA __MSABI_LONG ( 8510 )
#define ERROR_DS_CANT_DELETE __MSABI_LONG ( 8398 )
#define ERROR_DS_CANT_DELETE_DSA_OBJ __MSABI_LONG ( 8340 )
#define ERROR_DS_CANT_DEL_MASTER_CROSSREF __MSABI_LONG ( 8375 )
#define ERROR_DS_CANT_DEMOTE_WITH_WRITEABLE_NC __MSABI_LONG ( 8604 )
#define ERROR_DS_CANT_DEREF_ALIAS __MSABI_LONG ( 8337 )
#define ERROR_DS_CANT_DERIVE_SPN_FOR_DELETED_DOMAIN __MSABI_LONG ( 8603 )
#define ERROR_DS_CANT_DERIVE_SPN_WITHOUT_SERVER_REF __MSABI_LONG ( 8589 )
#define ERROR_DS_CANT_FIND_DC_FOR_SRC_DOMAIN __MSABI_LONG ( 8537 )
#define ERROR_DS_CANT_FIND_DSA_OBJ __MSABI_LONG ( 8419 )
#define ERROR_DS_CANT_FIND_EXPECTED_NC __MSABI_LONG ( 8420 )
#define ERROR_DS_CANT_FIND_NC_IN_CACHE __MSABI_LONG ( 8421 )
#define ERROR_DS_CANT_MIX_MASTER_AND_REPS __MSABI_LONG ( 8331 )
#define ERROR_DS_CANT_MOD_OBJ_CLASS __MSABI_LONG ( 8215 )
#define ERROR_DS_CANT_MOD_PRIMARYGROUPID __MSABI_LONG ( 8506 )
#define ERROR_DS_CANT_MOD_SYSTEM_ONLY __MSABI_LONG ( 8369 )
#define ERROR_DS_CANT_MOVE_ACCOUNT_GROUP __MSABI_LONG ( 8498 )
#define ERROR_DS_CANT_MOVE_APP_BASIC_GROUP __MSABI_LONG ( 8608 )
#define ERROR_DS_CANT_MOVE_APP_QUERY_GROUP __MSABI_LONG ( 8609 )
#define ERROR_DS_CANT_MOVE_DELETED_OBJECT __MSABI_LONG ( 8489 )
#define ERROR_DS_CANT_MOVE_RESOURCE_GROUP __MSABI_LONG ( 8499 )
#define ERROR_DS_CANT_ON_NON_LEAF __MSABI_LONG ( 8213 )
#define ERROR_DS_CANT_ON_RDN __MSABI_LONG ( 8214 )
#define ERROR_DS_CANT_REMOVE_ATT_CACHE __MSABI_LONG ( 8403 )
#define ERROR_DS_CANT_REMOVE_CLASS_CACHE __MSABI_LONG ( 8404 )
#define ERROR_DS_CANT_REM_MISSING_ATT __MSABI_LONG ( 8324 )
#define ERROR_DS_CANT_REM_MISSING_ATT_VAL __MSABI_LONG ( 8325 )
#define ERROR_DS_CANT_REPLACE_HIDDEN_REC __MSABI_LONG ( 8424 )
#define ERROR_DS_CANT_RETRIEVE_ATTS __MSABI_LONG ( 8481 )
#define ERROR_DS_CANT_RETRIEVE_CHILD __MSABI_LONG ( 8422 )
#define ERROR_DS_CANT_RETRIEVE_DN __MSABI_LONG ( 8405 )
#define ERROR_DS_CANT_RETRIEVE_INSTANCE __MSABI_LONG ( 8407 )
#define ERROR_DS_CANT_RETRIEVE_SD __MSABI_LONG ( 8526 )
#define ERROR_DS_CANT_START __MSABI_LONG ( 8531 )
#define ERROR_DS_CANT_TREE_DELETE_CRITICAL_OBJ __MSABI_LONG ( 8560 )
#define ERROR_DS_CANT_WITH_ACCT_GROUP_MEMBERSHPS __MSABI_LONG ( 8493 )
#define ERROR_DS_CHILDREN_EXIST __MSABI_LONG ( 8332 )
#define ERROR_DS_CLASS_MUST_BE_CONCRETE __MSABI_LONG ( 8359 )
#define ERROR_DS_CLASS_NOT_DSA __MSABI_LONG ( 8343 )
#define ERROR_DS_CLIENT_LOOP __MSABI_LONG ( 8259 )
#define ERROR_DS_CODE_INCONSISTENCY __MSABI_LONG ( 8408 )
#define ERROR_DS_COMPARE_FALSE __MSABI_LONG ( 8229 )
#define ERROR_DS_COMPARE_TRUE __MSABI_LONG ( 8230 )
#define ERROR_DS_CONFIDENTIALITY_REQUIRED __MSABI_LONG ( 8237 )
#define ERROR_DS_CONFIG_PARAM_MISSING __MSABI_LONG ( 8427 )
#define ERROR_DS_CONSTRAINT_VIOLATION __MSABI_LONG ( 8239 )
#define ERROR_DS_CONSTRUCTED_ATT_MOD __MSABI_LONG ( 8475 )
#define ERROR_DS_CONTROL_NOT_FOUND __MSABI_LONG ( 8258 )
#define ERROR_DS_COULDNT_CONTACT_FSMO __MSABI_LONG ( 8367 )
#define ERROR_DS_COULDNT_IDENTIFY_OBJECTS_FOR_TREE_DELETE __MSABI_LONG ( 8503 )
#define ERROR_DS_COULDNT_LOCK_TREE_FOR_DELETE __MSABI_LONG ( 8502 )
#define ERROR_DS_COULDNT_UPDATE_SPNS __MSABI_LONG ( 8525 )
#define ERROR_DS_COUNTING_AB_INDICES_FAILED __MSABI_LONG ( 8428 )
#define ERROR_DS_CROSS_DOMAIN_CLEANUP_REQD __MSABI_LONG ( 8491 )
#define ERROR_DS_CROSS_DOM_MOVE_ERROR __MSABI_LONG ( 8216 )
#define ERROR_DS_CROSS_NC_DN_RENAME __MSABI_LONG ( 8368 )
#define ERROR_DS_CROSS_REF_BUSY __MSABI_LONG ( 8602 )
#define ERROR_DS_CROSS_REF_EXISTS __MSABI_LONG ( 8374 )
#define ERROR_DS_CR_IMPOSSIBLE_TO_VALIDATE __MSABI_LONG ( 8495 )
#define ERROR_DS_CR_IMPOSSIBLE_TO_VALIDATE_V2 __MSABI_LONG ( 8586 )
#define ERROR_DS_DATABASE_ERROR __MSABI_LONG ( 8409 )
#define ERROR_DS_DECODING_ERROR __MSABI_LONG ( 8253 )
#define ERROR_DS_DESTINATION_AUDITING_NOT_ENABLED __MSABI_LONG ( 8536 )
#define ERROR_DS_DESTINATION_DOMAIN_NOT_IN_FOREST __MSABI_LONG ( 8535 )
#define ERROR_DS_DIFFERENT_REPL_EPOCHS __MSABI_LONG ( 8593 )
#define ERROR_DS_DISALLOWED_IN_SYSTEM_CONTAINER __MSABI_LONG ( 8615 )
#define ERROR_DS_DNS_LOOKUP_FAILURE __MSABI_LONG ( 8524 )
#define ERROR_DS_DOMAIN_RENAME_IN_PROGRESS __MSABI_LONG ( 8612 )
#define ERROR_DS_DOMAIN_VERSION_TOO_HIGH __MSABI_LONG ( 8564 )
#define ERROR_DS_DOMAIN_VERSION_TOO_LOW __MSABI_LONG ( 8566 )
#define ERROR_DS_DRA_ABANDON_SYNC __MSABI_LONG ( 8462 )
#define ERROR_DS_DRA_ACCESS_DENIED __MSABI_LONG ( 8453 )
#define ERROR_DS_DRA_BAD_DN __MSABI_LONG ( 8439 )
#define ERROR_DS_DRA_BAD_INSTANCE_TYPE __MSABI_LONG ( 8445 )
#define ERROR_DS_DRA_BAD_NC __MSABI_LONG ( 8440 )
#define ERROR_DS_DRA_BUSY __MSABI_LONG ( 8438 )
#define ERROR_DS_DRA_CONNECTION_FAILED __MSABI_LONG ( 8444 )
#define ERROR_DS_DRA_DB_ERROR __MSABI_LONG ( 8451 )
#define ERROR_DS_DRA_DN_EXISTS __MSABI_LONG ( 8441 )
#define ERROR_DS_DRA_EARLIER_SCHEMA_CONFLICT __MSABI_LONG ( 8544 )
#define ERROR_DS_DRA_EXTN_CONNECTION_FAILED __MSABI_LONG ( 8466 )
#define ERROR_DS_DRA_GENERIC __MSABI_LONG ( 8436 )
#define ERROR_DS_DRA_INCOMPATIBLE_PARTIAL_SET __MSABI_LONG ( 8464 )
#define ERROR_DS_DRA_INCONSISTENT_DIT __MSABI_LONG ( 8443 )
#define ERROR_DS_DRA_INTERNAL_ERROR __MSABI_LONG ( 8442 )
#define ERROR_DS_DRA_INVALID_PARAMETER __MSABI_LONG ( 8437 )
#define ERROR_DS_DRA_MAIL_PROBLEM __MSABI_LONG ( 8447 )
#define ERROR_DS_DRA_MISSING_PARENT __MSABI_LONG ( 8460 )
#define ERROR_DS_DRA_NAME_COLLISION __MSABI_LONG ( 8458 )
#define ERROR_DS_DRA_NOT_SUPPORTED __MSABI_LONG ( 8454 )
#define ERROR_DS_DRA_NO_REPLICA __MSABI_LONG ( 8452 )
#define ERROR_DS_DRA_OBJ_IS_REP_SOURCE __MSABI_LONG ( 8450 )
#define ERROR_DS_DRA_OBJ_NC_MISMATCH __MSABI_LONG ( 8545 )
#define ERROR_DS_DRA_OUT_OF_MEM __MSABI_LONG ( 8446 )
#define ERROR_DS_DRA_OUT_SCHEDULE_WINDOW __MSABI_LONG ( 8617 )
#define ERROR_DS_DRA_PREEMPTED __MSABI_LONG ( 8461 )
#define ERROR_DS_DRA_REF_ALREADY_EXISTS __MSABI_LONG ( 8448 )
#define ERROR_DS_DRA_REF_NOT_FOUND __MSABI_LONG ( 8449 )
#define ERROR_DS_DRA_REPL_PENDING __MSABI_LONG ( 8477 )
#define ERROR_DS_DRA_RPC_CANCELLED __MSABI_LONG ( 8455 )
#define ERROR_DS_DRA_SCHEMA_CONFLICT __MSABI_LONG ( 8543 )
#define ERROR_DS_DRA_SCHEMA_INFO_SHIP __MSABI_LONG ( 8542 )
#define ERROR_DS_DRA_SCHEMA_MISMATCH __MSABI_LONG ( 8418 )
#define ERROR_DS_DRA_SHUTDOWN __MSABI_LONG ( 8463 )
#define ERROR_DS_DRA_SINK_DISABLED __MSABI_LONG ( 8457 )
#define ERROR_DS_DRA_SOURCE_DISABLED __MSABI_LONG ( 8456 )
#define ERROR_DS_DRA_SOURCE_IS_PARTIAL_REPLICA __MSABI_LONG ( 8465 )
#define ERROR_DS_DRA_SOURCE_REINSTALLED __MSABI_LONG ( 8459 )
#define ERROR_DS_DRS_EXTENSIONS_CHANGED __MSABI_LONG ( 8594 )
#define ERROR_DS_DSA_MUST_BE_INT_MASTER __MSABI_LONG ( 8342 )
#define ERROR_DS_DST_DOMAIN_NOT_NATIVE __MSABI_LONG ( 8496 )
#define ERROR_DS_DST_NC_MISMATCH __MSABI_LONG ( 8486 )
#define ERROR_DS_DS_REQUIRED __MSABI_LONG ( 8478 )
#define ERROR_DS_DUPLICATE_ID_FOUND __MSABI_LONG ( 8605 )
#define ERROR_DS_DUP_LDAP_DISPLAY_NAME __MSABI_LONG ( 8382 )
#define ERROR_DS_DUP_LINK_ID __MSABI_LONG ( 8468 )
#define ERROR_DS_DUP_MAPI_ID __MSABI_LONG ( 8380 )
#define ERROR_DS_DUP_MSDS_INTID __MSABI_LONG ( 8597 )
#define ERROR_DS_DUP_OID __MSABI_LONG ( 8379 )
#define ERROR_DS_DUP_RDN __MSABI_LONG ( 8378 )
#define ERROR_DS_DUP_SCHEMA_ID_GUID __MSABI_LONG ( 8381 )
#define ERROR_DS_ENCODING_ERROR __MSABI_LONG ( 8252 )
#define ERROR_DS_EPOCH_MISMATCH __MSABI_LONG ( 8483 )
#define ERROR_DS_EXISTING_AD_CHILD_NC __MSABI_LONG ( 8613 )
#define ERROR_DS_EXISTS_IN_AUX_CLS __MSABI_LONG ( 8393 )
#define ERROR_DS_EXISTS_IN_MAY_HAVE __MSABI_LONG ( 8386 )
#define ERROR_DS_EXISTS_IN_MUST_HAVE __MSABI_LONG ( 8385 )
#define ERROR_DS_EXISTS_IN_POSS_SUP __MSABI_LONG ( 8395 )
#define ERROR_DS_EXISTS_IN_RDNATTID __MSABI_LONG ( 8598 )
#define ERROR_DS_EXISTS_IN_SUB_CLS __MSABI_LONG ( 8394 )
#define ERROR_DS_FILTER_UNKNOWN __MSABI_LONG ( 8254 )
#define ERROR_DS_FILTER_USES_CONTRUCTED_ATTRS __MSABI_LONG ( 8555 )
#define ERROR_DS_FOREST_VERSION_TOO_HIGH __MSABI_LONG ( 8563 )
#define ERROR_DS_FOREST_VERSION_TOO_LOW __MSABI_LONG ( 8565 )
#define ERROR_DS_GCVERIFY_ERROR __MSABI_LONG ( 8417 )
#define ERROR_DS_GC_NOT_AVAILABLE __MSABI_LONG ( 8217 )
#define ERROR_DS_GC_REQUIRED __MSABI_LONG ( 8547 )
#define ERROR_DS_GENERIC_ERROR __MSABI_LONG ( 8341 )
#define ERROR_DS_GLOBAL_CANT_HAVE_CROSSDOMAIN_MEMBER __MSABI_LONG ( 8519 )
#define ERROR_DS_GLOBAL_CANT_HAVE_LOCAL_MEMBER __MSABI_LONG ( 8516 )
#define ERROR_DS_GLOBAL_CANT_HAVE_UNIVERSAL_MEMBER __MSABI_LONG ( 8517 )
#define ERROR_DS_GOVERNSID_MISSING __MSABI_LONG ( 8410 )
#define ERROR_DS_GROUP_CONVERSION_ERROR __MSABI_LONG ( 8607 )
#define ERROR_DS_HAVE_PRIMARY_MEMBERS __MSABI_LONG ( 8521 )
#define ERROR_DS_HIERARCHY_TABLE_MALLOC_FAILED __MSABI_LONG ( 8429 )
#define ERROR_DS_ILLEGAL_BASE_SCHEMA_MOD __MSABI_LONG ( 8507 )
#define ERROR_DS_ILLEGAL_MOD_OPERATION __MSABI_LONG ( 8311 )
#define ERROR_DS_ILLEGAL_SUPERIOR __MSABI_LONG ( 8345 )
#define ERROR_DS_ILLEGAL_XDOM_MOVE_OPERATION __MSABI_LONG ( 8492 )
#define ERROR_DS_INAPPROPRIATE_AUTH __MSABI_LONG ( 8233 )
#define ERROR_DS_INAPPROPRIATE_MATCHING __MSABI_LONG ( 8238 )
#define ERROR_DS_INCOMPATIBLE_CONTROLS_USED __MSABI_LONG ( 8574 )
#define ERROR_DS_INCOMPATIBLE_VERSION __MSABI_LONG ( 8567 )
#define ERROR_DS_INCORRECT_ROLE_OWNER __MSABI_LONG ( 8210 )
#define ERROR_DS_INIT_FAILURE __MSABI_LONG ( 8532 )
#define ERROR_DS_INIT_FAILURE_CONSOLE __MSABI_LONG ( 8561 )
#define ERROR_DS_INSTALL_NO_SCH_VERSION_IN_INIFILE __MSABI_LONG ( 8512 )
#define ERROR_DS_INSTALL_NO_SRC_SCH_VERSION __MSABI_LONG ( 8511 )
#define ERROR_DS_INSTALL_SCHEMA_MISMATCH __MSABI_LONG ( 8467 )
#define ERROR_DS_INSUFFICIENT_ATTR_TO_CREATE_OBJECT __MSABI_LONG ( 8606 )
#define ERROR_DS_INSUFF_ACCESS_RIGHTS __MSABI_LONG ( 8344 )
#define ERROR_DS_INTERNAL_FAILURE __MSABI_LONG ( 8430 )
#define ERROR_DS_INVALID_ATTRIBUTE_SYNTAX __MSABI_LONG ( 8203 )
#define ERROR_DS_INVALID_DMD __MSABI_LONG ( 8360 )
#define ERROR_DS_INVALID_DN_SYNTAX __MSABI_LONG ( 8242 )
#define ERROR_DS_INVALID_GROUP_TYPE __MSABI_LONG ( 8513 )
#define ERROR_DS_INVALID_LDAP_DISPLAY_NAME __MSABI_LONG ( 8479 )
#define ERROR_DS_INVALID_NAME_FOR_SPN __MSABI_LONG ( 8554 )
#define ERROR_DS_INVALID_ROLE_OWNER __MSABI_LONG ( 8366 )
#define ERROR_DS_INVALID_SCRIPT __MSABI_LONG ( 8600 )
#define ERROR_DS_INVALID_SEARCH_FLAG __MSABI_LONG ( 8500 )
#define ERROR_DS_IS_LEAF __MSABI_LONG ( 8243 )
#define ERROR_DS_KEY_NOT_UNIQUE __MSABI_LONG ( 8527 )
#define ERROR_DS_LDAP_SEND_QUEUE_FULL __MSABI_LONG ( 8616 )
#define ERROR_DS_LINK_ID_NOT_AVAILABLE __MSABI_LONG ( 8577 )
#define ERROR_DS_LOCAL_CANT_HAVE_CROSSDOMAIN_LOCAL_MEMBER __MSABI_LONG ( 8520 )
#define ERROR_DS_LOCAL_ERROR __MSABI_LONG ( 8251 )
#define ERROR_DS_LOCAL_MEMBER_OF_LOCAL_ONLY __MSABI_LONG ( 8548 )
#define ERROR_DS_LOOP_DETECT __MSABI_LONG ( 8246 )
#define ERROR_DS_LOW_DSA_VERSION __MSABI_LONG ( 8568 )
#define ERROR_DS_MACHINE_ACCOUNT_CREATED_PRENT4 __MSABI_LONG ( 8572 )
#define ERROR_DS_MACHINE_ACCOUNT_QUOTA_EXCEEDED __MSABI_LONG ( 8557 )
#define ERROR_DS_MASTERDSA_REQUIRED __MSABI_LONG ( 8314 )
#define ERROR_DS_MAX_OBJ_SIZE_EXCEEDED __MSABI_LONG ( 8304 )
#define ERROR_DS_MEMBERSHIP_EVALUATED_LOCALLY __MSABI_LONG ( 8201 )
#define ERROR_DS_MISSING_EXPECTED_ATT __MSABI_LONG ( 8411 )
#define ERROR_DS_MISSING_FSMO_SETTINGS __MSABI_LONG ( 8434 )
#define ERROR_DS_MISSING_INFRASTRUCTURE_CONTAINER __MSABI_LONG ( 8497 )
#define ERROR_DS_MISSING_REQUIRED_ATT __MSABI_LONG ( 8316 )
#define ERROR_DS_MISSING_SUPREF __MSABI_LONG ( 8406 )
#define ERROR_DS_MODIFYDN_DISALLOWED_BY_FLAG __MSABI_LONG ( 8581 )
#define ERROR_DS_MODIFYDN_DISALLOWED_BY_INSTANCE_TYPE __MSABI_LONG ( 8579 )
#define ERROR_DS_MODIFYDN_WRONG_GRANDPARENT __MSABI_LONG ( 8582 )
#define ERROR_DS_MUST_BE_RUN_ON_DST_DC __MSABI_LONG ( 8558 )
#define ERROR_DS_NAME_ERROR_DOMAIN_ONLY __MSABI_LONG ( 8473 )
#define ERROR_DS_NAME_ERROR_NOT_FOUND __MSABI_LONG ( 8470 )
#define ERROR_DS_NAME_ERROR_NOT_UNIQUE __MSABI_LONG ( 8471 )
#define ERROR_DS_NAME_ERROR_NO_MAPPING __MSABI_LONG ( 8472 )
#define ERROR_DS_NAME_ERROR_NO_SYNTACTICAL_MAPPING __MSABI_LONG ( 8474 )
#define ERROR_DS_NAME_ERROR_RESOLVING __MSABI_LONG ( 8469 )
#define ERROR_DS_NAME_ERROR_TRUST_REFERRAL __MSABI_LONG ( 8583 )
#define ERROR_DS_NAME_NOT_UNIQUE __MSABI_LONG ( 8571 )
#define ERROR_DS_NAME_REFERENCE_INVALID __MSABI_LONG ( 8373 )
#define ERROR_DS_NAME_TOO_LONG __MSABI_LONG ( 8348 )
#define ERROR_DS_NAME_TOO_MANY_PARTS __MSABI_LONG ( 8347 )
#define ERROR_DS_NAME_TYPE_UNKNOWN __MSABI_LONG ( 8351 )
#define ERROR_DS_NAME_UNPARSEABLE __MSABI_LONG ( 8350 )
#define ERROR_DS_NAME_VALUE_TOO_LONG __MSABI_LONG ( 8349 )
#define ERROR_DS_NAMING_MASTER_GC __MSABI_LONG ( 8523 )
#define ERROR_DS_NAMING_VIOLATION __MSABI_LONG ( 8247 )
#define ERROR_DS_NCNAME_MISSING_CR_REF __MSABI_LONG ( 8412 )
#define ERROR_DS_NCNAME_MUST_BE_NC __MSABI_LONG ( 8357 )
#define ERROR_DS_NC_MUST_HAVE_NC_PARENT __MSABI_LONG ( 8494 )
#define ERROR_DS_NC_STILL_HAS_DSAS __MSABI_LONG ( 8546 )
#define ERROR_DS_NONEXISTENT_MAY_HAVE __MSABI_LONG ( 8387 )
#define ERROR_DS_NONEXISTENT_MUST_HAVE __MSABI_LONG ( 8388 )
#define ERROR_DS_NONEXISTENT_POSS_SUP __MSABI_LONG ( 8390 )
#define ERROR_DS_NONSAFE_SCHEMA_CHANGE __MSABI_LONG ( 8508 )
#define ERROR_DS_NON_BASE_SEARCH __MSABI_LONG ( 8480 )
#define ERROR_DS_NOTIFY_FILTER_TOO_COMPLEX __MSABI_LONG ( 8377 )
#define ERROR_DS_NOT_AN_OBJECT __MSABI_LONG ( 8352 )
#define ERROR_DS_NOT_AUTHORITIVE_FOR_DST_NC __MSABI_LONG ( 8487 )
#define ERROR_DS_NOT_CLOSEST __MSABI_LONG ( 8588 )
#define ERROR_DS_NOT_INSTALLED __MSABI_LONG ( 8200 )
#define ERROR_DS_NOT_ON_BACKLINK __MSABI_LONG ( 8362 )
#define ERROR_DS_NOT_SUPPORTED __MSABI_LONG ( 8256 )
#define ERROR_DS_NOT_SUPPORTED_SORT_ORDER __MSABI_LONG ( 8570 )
#define ERROR_DS_NO_ATTRIBUTE_OR_VALUE __MSABI_LONG ( 8202 )
#define ERROR_DS_NO_BEHAVIOR_VERSION_IN_MIXEDDOMAIN __MSABI_LONG ( 8569 )
#define ERROR_DS_NO_CHAINED_EVAL __MSABI_LONG ( 8328 )
#define ERROR_DS_NO_CHAINING __MSABI_LONG ( 8327 )
#define ERROR_DS_NO_CHECKPOINT_WITH_PDC __MSABI_LONG ( 8551 )
#define ERROR_DS_NO_CROSSREF_FOR_NC __MSABI_LONG ( 8363 )
#define ERROR_DS_NO_DELETED_NAME __MSABI_LONG ( 8355 )
#define ERROR_DS_NO_FPO_IN_UNIVERSAL_GROUPS __MSABI_LONG ( 8549 )
#define ERROR_DS_NO_MORE_RIDS __MSABI_LONG ( 8209 )
#define ERROR_DS_NO_MSDS_INTID __MSABI_LONG ( 8596 )
#define ERROR_DS_NO_NEST_GLOBALGROUP_IN_MIXEDDOMAIN __MSABI_LONG ( 8514 )
#define ERROR_DS_NO_NEST_LOCALGROUP_IN_MIXEDDOMAIN __MSABI_LONG ( 8515 )
#define ERROR_DS_NO_OBJECT_MOVE_IN_SCHEMA_NC __MSABI_LONG ( 8580 )
#define ERROR_DS_NO_PARENT_OBJECT __MSABI_LONG ( 8329 )
#define ERROR_DS_NO_PKT_PRIVACY_ON_CONNECTION __MSABI_LONG ( 8533 )
#define ERROR_DS_NO_RDN_DEFINED_IN_SCHEMA __MSABI_LONG ( 8306 )
#define ERROR_DS_NO_REF_DOMAIN __MSABI_LONG ( 8575 )
#define ERROR_DS_NO_REQUESTED_ATTS_FOUND __MSABI_LONG ( 8308 )
#define ERROR_DS_NO_RESULTS_RETURNED __MSABI_LONG ( 8257 )
#define ERROR_DS_NO_RIDS_ALLOCATED __MSABI_LONG ( 8208 )
#define ERROR_DS_NO_SUCH_OBJECT __MSABI_LONG ( 8240 )
#define ERROR_DS_NO_TREE_DELETE_ABOVE_NC __MSABI_LONG ( 8501 )
#define ERROR_DS_NTDSCRIPT_PROCESS_ERROR __MSABI_LONG ( 8592 )
#define ERROR_DS_NTDSCRIPT_SYNTAX_ERROR __MSABI_LONG ( 8591 )
#define ERROR_DS_OBJECT_BEING_REMOVED __MSABI_LONG ( 8339 )
#define ERROR_DS_OBJECT_CLASS_REQUIRED __MSABI_LONG ( 8315 )
#define ERROR_DS_OBJECT_RESULTS_TOO_LARGE __MSABI_LONG ( 8248 )
#define ERROR_DS_OBJ_CLASS_NOT_DEFINED __MSABI_LONG ( 8371 )
#define ERROR_DS_OBJ_CLASS_NOT_SUBCLASS __MSABI_LONG ( 8372 )
#define ERROR_DS_OBJ_CLASS_VIOLATION __MSABI_LONG ( 8212 )
#define ERROR_DS_OBJ_GUID_EXISTS __MSABI_LONG ( 8361 )
#define ERROR_DS_OBJ_NOT_FOUND __MSABI_LONG ( 8333 )
#define ERROR_DS_OBJ_STRING_NAME_EXISTS __MSABI_LONG ( 8305 )
#define ERROR_DS_OBJ_TOO_LARGE __MSABI_LONG ( 8312 )
#define ERROR_DS_OFFSET_RANGE_ERROR __MSABI_LONG ( 8262 )
#define ERROR_DS_OPERATIONS_ERROR __MSABI_LONG ( 8224 )
#define ERROR_DS_OUT_OF_SCOPE __MSABI_LONG ( 8338 )
#define ERROR_DS_OUT_OF_VERSION_STORE __MSABI_LONG ( 8573 )
#define ERROR_DS_PARAM_ERROR __MSABI_LONG ( 8255 )
#define ERROR_DS_PARENT_IS_AN_ALIAS __MSABI_LONG ( 8330 )
#define ERROR_DS_PDC_OPERATION_IN_PROGRESS __MSABI_LONG ( 8490 )
#define ERROR_DS_PROTOCOL_ERROR __MSABI_LONG ( 8225 )
#define ERROR_DS_RANGE_CONSTRAINT __MSABI_LONG ( 8322 )
#define ERROR_DS_RDN_DOESNT_MATCH_SCHEMA __MSABI_LONG ( 8307 )
#define ERROR_DS_RECALCSCHEMA_FAILED __MSABI_LONG ( 8396 )
#define ERROR_DS_REFERRAL __MSABI_LONG ( 8235 )
#define ERROR_DS_REFERRAL_LIMIT_EXCEEDED __MSABI_LONG ( 8260 )
#define ERROR_DS_REFUSING_FSMO_ROLES __MSABI_LONG ( 8433 )
#define ERROR_DS_REMOTE_CROSSREF_OP_FAILED __MSABI_LONG ( 8601 )
#define ERROR_DS_REPLICATOR_ONLY __MSABI_LONG ( 8370 )
#define ERROR_DS_REPLICA_SET_CHANGE_NOT_ALLOWED_ON_DISABLED_CR __MSABI_LONG ( 8595 )
#define ERROR_DS_REPL_LIFETIME_EXCEEDED __MSABI_LONG ( 8614 )
#define ERROR_DS_RESERVED_LINK_ID __MSABI_LONG ( 8576 )
#define ERROR_DS_RIDMGR_INIT_ERROR __MSABI_LONG ( 8211 )
#define ERROR_DS_ROLE_NOT_VERIFIED __MSABI_LONG ( 8610 )
#define ERROR_DS_ROOT_CANT_BE_SUBREF __MSABI_LONG ( 8326 )
#define ERROR_DS_ROOT_MUST_BE_NC __MSABI_LONG ( 8301 )
#define ERROR_DS_ROOT_REQUIRES_CLASS_TOP __MSABI_LONG ( 8432 )
#define ERROR_DS_SAM_INIT_FAILURE __MSABI_LONG ( 8504 )
#define ERROR_DS_SAM_INIT_FAILURE_CONSOLE __MSABI_LONG ( 8562 )
#define ERROR_DS_SAM_NEED_BOOTKEY_FLOPPY __MSABI_LONG ( 8530 )
#define ERROR_DS_SAM_NEED_BOOTKEY_PASSWORD __MSABI_LONG ( 8529 )
#define ERROR_DS_SCHEMA_ALLOC_FAILED __MSABI_LONG ( 8415 )
#define ERROR_DS_SCHEMA_NOT_LOADED __MSABI_LONG ( 8414 )
#define ERROR_DS_SCHEMA_UPDATE_DISALLOWED __MSABI_LONG ( 8509 )
#define ERROR_DS_SECURITY_CHECKING_ERROR __MSABI_LONG ( 8413 )
#define ERROR_DS_SECURITY_ILLEGAL_MODIFY __MSABI_LONG ( 8423 )
#define ERROR_DS_SEC_DESC_INVALID __MSABI_LONG ( 8354 )
#define ERROR_DS_SEC_DESC_TOO_SHORT __MSABI_LONG ( 8353 )
#define ERROR_DS_SEMANTIC_ATT_TEST __MSABI_LONG ( 8383 )
#define ERROR_DS_SENSITIVE_GROUP_VIOLATION __MSABI_LONG ( 8505 )
#define ERROR_DS_SERVER_DOWN __MSABI_LONG ( 8250 )
#define ERROR_DS_SHUTTING_DOWN __MSABI_LONG ( 8364 )
#define ERROR_DS_SINGLE_USER_MODE_FAILED __MSABI_LONG ( 8590 )
#define ERROR_DS_SINGLE_VALUE_CONSTRAINT __MSABI_LONG ( 8321 )
#define ERROR_DS_SIZELIMIT_EXCEEDED __MSABI_LONG ( 8227 )
#define ERROR_DS_SORT_CONTROL_MISSING __MSABI_LONG ( 8261 )
#define ERROR_DS_SOURCE_AUDITING_NOT_ENABLED __MSABI_LONG ( 8552 )
#define ERROR_DS_SOURCE_DOMAIN_IN_FOREST __MSABI_LONG ( 8534 )
#define ERROR_DS_SRC_AND_DST_NC_IDENTICAL __MSABI_LONG ( 8485 )
#define ERROR_DS_SRC_AND_DST_OBJECT_CLASS_MISMATCH __MSABI_LONG ( 8540 )
#define ERROR_DS_SRC_DC_MUST_BE_SP4_OR_GREATER __MSABI_LONG ( 8559 )
#define ERROR_DS_SRC_GUID_MISMATCH __MSABI_LONG ( 8488 )
#define ERROR_DS_SRC_NAME_MISMATCH __MSABI_LONG ( 8484 )
#define ERROR_DS_SRC_OBJ_NOT_GROUP_OR_USER __MSABI_LONG ( 8538 )
#define ERROR_DS_SRC_SID_EXISTS_IN_FOREST __MSABI_LONG ( 8539 )
#define ERROR_DS_STRING_SD_CONVERSION_FAILED __MSABI_LONG ( 8522 )
#define ERROR_DS_STRONG_AUTH_REQUIRED __MSABI_LONG ( 8232 )
#define ERROR_DS_SUBREF_MUST_HAVE_PARENT __MSABI_LONG ( 8356 )
#define ERROR_DS_SUBTREE_NOTIFY_NOT_NC_HEAD __MSABI_LONG ( 8376 )
#define ERROR_DS_SUB_CLS_TEST_FAIL __MSABI_LONG ( 8391 )
#define ERROR_DS_SYNTAX_MISMATCH __MSABI_LONG ( 8384 )
#define ERROR_DS_THREAD_LIMIT_EXCEEDED __MSABI_LONG ( 8587 )
#define ERROR_DS_TIMELIMIT_EXCEEDED __MSABI_LONG ( 8226 )
#define ERROR_DS_TREE_DELETE_NOT_FINISHED __MSABI_LONG ( 8397 )
#define ERROR_DS_UNABLE_TO_SURRENDER_ROLES __MSABI_LONG ( 8435 )
#define ERROR_DS_UNAVAILABLE __MSABI_LONG ( 8207 )
#define ERROR_DS_UNAVAILABLE_CRIT_EXTENSION __MSABI_LONG ( 8236 )
#define ERROR_DS_UNICODEPWD_NOT_IN_QUOTES __MSABI_LONG ( 8556 )
#define ERROR_DS_UNIVERSAL_CANT_HAVE_LOCAL_MEMBER __MSABI_LONG ( 8518 )
#define ERROR_DS_UNKNOWN_ERROR __MSABI_LONG ( 8431 )
#define ERROR_DS_UNKNOWN_OPERATION __MSABI_LONG ( 8365 )
#define ERROR_DS_UNWILLING_TO_PERFORM __MSABI_LONG ( 8245 )
#define ERROR_DS_USER_BUFFER_TO_SMALL __MSABI_LONG ( 8309 )
#define ERROR_DS_WKO_CONTAINER_CANNOT_BE_SPECIAL __MSABI_LONG ( 8611 )
#define ERROR_DS_WRONG_LINKED_ATT_SYNTAX __MSABI_LONG ( 8528 )
#define ERROR_DS_WRONG_OM_OBJ_CLASS __MSABI_LONG ( 8476 )
#define ERROR_DUPLICATE_SERVICE_NAME __MSABI_LONG ( 1078 )
#define ERROR_DUPLICATE_TAG __MSABI_LONG ( 2014 )
#define ERROR_DUP_DOMAINNAME __MSABI_LONG ( 1221 )
#define ERROR_DUP_NAME __MSABI_LONG ( 52 )
#define ERROR_DYNLINK_FROM_INVALID_RING __MSABI_LONG ( 196 )
#define ERROR_EAS_DIDNT_FIT __MSABI_LONG ( 275 )
#define ERROR_EAS_NOT_SUPPORTED __MSABI_LONG ( 282 )
#define ERROR_EA_ACCESS_DENIED __MSABI_LONG ( 994 )
#define ERROR_EA_FILE_CORRUPT __MSABI_LONG ( 276 )
#define ERROR_EA_LIST_INCONSISTENT __MSABI_LONG ( 255 )
#define ERROR_EA_TABLE_FULL __MSABI_LONG ( 277 )
#define ERROR_EC_CIRCULAR_FORWARDING __MSABI_LONG ( 15082 )
#define ERROR_EC_CREDSTORE_FULL __MSABI_LONG ( 15083 )
#define ERROR_EC_CRED_NOT_FOUND __MSABI_LONG ( 15084 )
#define ERROR_EC_LOG_DISABLED __MSABI_LONG ( 15081 )
#define ERROR_EC_NO_ACTIVE_CHANNEL __MSABI_LONG ( 15085 )
#define ERROR_EC_SUBSCRIPTION_CANNOT_ACTIVATE __MSABI_LONG ( 15080 )
#define ERROR_EFS_ALG_BLOB_TOO_BIG __MSABI_LONG ( 6013 )
#define ERROR_EFS_DISABLED __MSABI_LONG ( 6015 )
#define ERROR_EFS_SERVER_NOT_TRUSTED __MSABI_LONG ( 6011 )
#define ERROR_EFS_VERSION_NOT_SUPPORT __MSABI_LONG ( 6016 )
#define ERROR_EMPTY __MSABI_LONG ( 4306 )
#define ERROR_ENCRYPTION_FAILED __MSABI_LONG ( 6000 )
#define ERROR_END_OF_MEDIA __MSABI_LONG ( 1100 )
#define ERROR_ENVVAR_NOT_FOUND __MSABI_LONG ( 203 )
#define ERROR_EOM_OVERFLOW __MSABI_LONG ( 1129 )
#define ERROR_EVENTLOG_CANT_START __MSABI_LONG ( 1501 )
#define ERROR_EVENTLOG_FILE_CHANGED __MSABI_LONG ( 1503 )
#define ERROR_EVENTLOG_FILE_CORRUPT __MSABI_LONG ( 1500 )
#define ERROR_EVT_CANNOT_OPEN_CHANNEL_OF_QUERY __MSABI_LONG ( 15036 )
#define ERROR_EVT_CHANNEL_CANNOT_ACTIVATE __MSABI_LONG ( 15025 )
#define ERROR_EVT_CHANNEL_NOT_FOUND __MSABI_LONG ( 15007 )
#define ERROR_EVT_CONFIGURATION_ERROR __MSABI_LONG ( 15010 )
#define ERROR_EVT_EVENT_DEFINITION_NOT_FOUND __MSABI_LONG ( 15032 )
#define ERROR_EVT_EVENT_TEMPLATE_NOT_FOUND __MSABI_LONG ( 15003 )
#define ERROR_EVT_FILTER_ALREADYSCOPED __MSABI_LONG ( 15014 )
#define ERROR_EVT_FILTER_INVARG __MSABI_LONG ( 15016 )
#define ERROR_EVT_FILTER_INVTEST __MSABI_LONG ( 15017 )
#define ERROR_EVT_FILTER_INVTYPE __MSABI_LONG ( 15018 )
#define ERROR_EVT_FILTER_NOTELTSET __MSABI_LONG ( 15015 )
#define ERROR_EVT_FILTER_OUT_OF_RANGE __MSABI_LONG ( 15038 )
#define ERROR_EVT_FILTER_PARSEERR __MSABI_LONG ( 15019 )
#define ERROR_EVT_FILTER_TOO_COMPLEX __MSABI_LONG ( 15026 )
#define ERROR_EVT_FILTER_UNEXPECTEDTOKEN __MSABI_LONG ( 15021 )
#define ERROR_EVT_FILTER_UNSUPPORTEDOP __MSABI_LONG ( 15020 )
#define ERROR_EVT_INVALID_CHANNEL_PATH __MSABI_LONG ( 15000 )
#define ERROR_EVT_INVALID_CHANNEL_PROPERTY_VALUE __MSABI_LONG ( 15023 )
#define ERROR_EVT_INVALID_EVENT_DATA __MSABI_LONG ( 15005 )
#define ERROR_EVT_INVALID_OPERATION_OVER_ENABLED_DIRECT_CHANNEL __MSABI_LONG ( 15022 )
#define ERROR_EVT_INVALID_PUBLISHER_NAME __MSABI_LONG ( 15004 )
#define ERROR_EVT_INVALID_PUBLISHER_PROPERTY_VALUE __MSABI_LONG ( 15024 )
#define ERROR_EVT_INVALID_QUERY __MSABI_LONG ( 15001 )
#define ERROR_EVT_MALFORMED_XML_TEXT __MSABI_LONG ( 15008 )
#define ERROR_EVT_MAX_INSERTS_REACHED __MSABI_LONG ( 15031 )
#define ERROR_EVT_MESSAGE_ID_NOT_FOUND __MSABI_LONG ( 15028 )
#define ERROR_EVT_MESSAGE_LOCALE_NOT_FOUND __MSABI_LONG ( 15033 )
#define ERROR_EVT_MESSAGE_NOT_FOUND __MSABI_LONG ( 15027 )
#define ERROR_EVT_NON_VALIDATING_MSXML __MSABI_LONG ( 15013 )
#define ERROR_EVT_PUBLISHER_DISABLED __MSABI_LONG ( 15037 )
#define ERROR_EVT_PUBLISHER_METADATA_NOT_FOUND __MSABI_LONG ( 15002 )
#define ERROR_EVT_QUERY_RESULT_INVALID_POSITION __MSABI_LONG ( 15012 )
#define ERROR_EVT_QUERY_RESULT_STALE __MSABI_LONG ( 15011 )
#define ERROR_EVT_SUBSCRIPTION_TO_DIRECT_CHANNEL __MSABI_LONG ( 15009 )
#define ERROR_EVT_UNRESOLVED_PARAMETER_INSERT __MSABI_LONG ( 15030 )
#define ERROR_EVT_UNRESOLVED_VALUE_INSERT __MSABI_LONG ( 15029 )
#define ERROR_EVT_VERSION_TOO_NEW __MSABI_LONG ( 15035 )
#define ERROR_EVT_VERSION_TOO_OLD __MSABI_LONG ( 15034 )
#define ERROR_EXCEPTION_IN_SERVICE __MSABI_LONG ( 1064 )
#define ERROR_EXCL_SEM_ALREADY_OWNED __MSABI_LONG ( 101 )
#define ERROR_EXE_CANNOT_MODIFY_SIGNED_BINARY __MSABI_LONG ( 217 )
#define ERROR_EXE_CANNOT_MODIFY_STRONG_SIGNED_BINARY __MSABI_LONG ( 218 )
#define ERROR_EXE_MACHINE_TYPE_MISMATCH __MSABI_LONG ( 216 )
#define ERROR_EXE_MARKED_INVALID __MSABI_LONG ( 192 )
#define ERROR_EXTENDED_ERROR __MSABI_LONG ( 1208 )
#define ERROR_FAILED_SERVICE_CONTROLLER_CONNECT __MSABI_LONG ( 1063 )
#define ERROR_FAIL_I24 __MSABI_LONG ( 83 )
#define ERROR_FILEMARK_DETECTED __MSABI_LONG ( 1101 )
#define ERROR_FILENAME_EXCED_RANGE __MSABI_LONG ( 206 )
#define ERROR_FILE_CHECKED_OUT __MSABI_LONG ( 220 )
#define ERROR_FILE_CORRUPT __MSABI_LONG ( 1392 )
#define ERROR_FILE_ENCRYPTED __MSABI_LONG ( 6002 )
#define ERROR_FILE_EXISTS __MSABI_LONG ( 80 )
#define ERROR_FILE_INVALID __MSABI_LONG ( 1006 )
#define ERROR_FILE_NOT_ENCRYPTED __MSABI_LONG ( 6007 )
#define ERROR_FILE_NOT_FOUND __MSABI_LONG ( 2 )
#define ERROR_FILE_OFFLINE __MSABI_LONG ( 4350 )
#define ERROR_FILE_READ_ONLY __MSABI_LONG ( 6009 )
#define ERROR_FILE_TOO_LARGE __MSABI_LONG ( 223 )
#define ERROR_FLOPPY_BAD_REGISTERS __MSABI_LONG ( 1125 )
#define ERROR_FLOPPY_ID_MARK_NOT_FOUND __MSABI_LONG ( 1122 )
#define ERROR_FLOPPY_UNKNOWN_ERROR __MSABI_LONG ( 1124 )
#define ERROR_FLOPPY_WRONG_CYLINDER __MSABI_LONG ( 1123 )
#define ERROR_FORMS_AUTH_REQUIRED __MSABI_LONG ( 224 )
#define ERROR_FULLSCREEN_MODE __MSABI_LONG ( 1007 )
#define ERROR_FULL_BACKUP __MSABI_LONG ( 4004 )
#define ERROR_FUNCTION_FAILED __MSABI_LONG ( 1627 )
#define ERROR_FUNCTION_NOT_CALLED __MSABI_LONG ( 1626 )
#define ERROR_GENERIC_COMMAND_FAILED __MSABI_LONG ( 14109 )
#define ERROR_GENERIC_NOT_MAPPED __MSABI_LONG ( 1360 )
#define ERROR_GEN_FAILURE __MSABI_LONG ( 31 )
#define ERROR_GLOBAL_ONLY_HOOK __MSABI_LONG ( 1429 )
#define ERROR_GPIO_CLIENT_INFORMATION_INVALID __MSABI_LONG ( 15322 )
#define ERROR_GPIO_INCOMPATIBLE_CONNECT_MODE __MSABI_LONG ( 15326 )
#define ERROR_GPIO_INTERRUPT_ALREADY_UNMASKED __MSABI_LONG ( 15327 )
#define ERROR_GPIO_INVALID_REGISTRATION_PACKET __MSABI_LONG ( 15324 )
#define ERROR_GPIO_OPERATION_DENIED __MSABI_LONG ( 15325 )
#define ERROR_GPIO_VERSION_NOT_SUPPORTED __MSABI_LONG ( 15323 )
#define ERROR_GRACEFUL_DISCONNECT __MSABI_LONG ( 1226 )
#define ERROR_GROUP_EXISTS __MSABI_LONG ( 1318 )
#define ERROR_GROUP_NOT_AVAILABLE __MSABI_LONG ( 5012 )
#define ERROR_GROUP_NOT_FOUND __MSABI_LONG ( 5013 )
#define ERROR_GROUP_NOT_ONLINE __MSABI_LONG ( 5014 )
#define ERROR_HANDLE_DISK_FULL __MSABI_LONG ( 39 )
#define ERROR_HANDLE_EOF __MSABI_LONG ( 38 )
#define ERROR_HASH_NOT_PRESENT __MSABI_LONG ( 15301 )
#define ERROR_HASH_NOT_SUPPORTED __MSABI_LONG ( 15300 )
#define ERROR_HOOK_NEEDS_HMOD __MSABI_LONG ( 1428 )
#define ERROR_HOOK_NOT_INSTALLED __MSABI_LONG ( 1431 )
#define ERROR_HOOK_TYPE_NOT_ALLOWED __MSABI_LONG ( 1458 )
#define ERROR_HOST_DOWN __MSABI_LONG ( 1256 )
#define ERROR_HOST_NODE_NOT_AVAILABLE __MSABI_LONG ( 5005 )
#define ERROR_HOST_NODE_NOT_GROUP_OWNER __MSABI_LONG ( 5016 )
#define ERROR_HOST_NODE_NOT_RESOURCE_OWNER __MSABI_LONG ( 5015 )
#define ERROR_HOST_UNREACHABLE __MSABI_LONG ( 1232 )
#define ERROR_HOTKEY_ALREADY_REGISTERED __MSABI_LONG ( 1409 )
#define ERROR_HOTKEY_NOT_REGISTERED __MSABI_LONG ( 1419 )
#define ERROR_HWNDS_HAVE_DIFF_PARENT __MSABI_LONG ( 1441 )
#define ERROR_ICM_NOT_ENABLED __MSABI_LONG ( 2018 )
#define ERROR_IEPORT_FULL __MSABI_LONG ( 4341 )
#define ERROR_ILLEGAL_ELEMENT_ADDRESS __MSABI_LONG ( 1162 )
#define ERROR_ILL_FORMED_PASSWORD __MSABI_LONG ( 1324 )
#define ERROR_INCORRECT_ADDRESS __MSABI_LONG ( 1241 )
#define ERROR_INCORRECT_SIZE __MSABI_LONG ( 1462 )
#define ERROR_INC_BACKUP __MSABI_LONG ( 4003 )
#define ERROR_INDEX_ABSENT __MSABI_LONG ( 1611 )
#define ERROR_INDIGENOUS_TYPE __MSABI_LONG ( 4338 )
#define ERROR_INFLOOP_IN_RELOC_CHAIN __MSABI_LONG ( 202 )
#define ERROR_INIT_STATUS_NEEDED (17)
#define ERROR_INSTALL_ALREADY_RUNNING __MSABI_LONG ( 1618 )
#define ERROR_INSTALL_CANCEL __MSABI_LONG ( 15608 )
#define ERROR_INSTALL_DEREGISTRATION_FAILURE __MSABI_LONG ( 15607 )
#define ERROR_INSTALL_FAILED __MSABI_LONG ( 15609 )
#define ERROR_INSTALL_FAILURE __MSABI_LONG ( 1603 )
#define ERROR_INSTALL_FIREWALL_SERVICE_NOT_RUNNING __MSABI_LONG ( 15626 )
#define ERROR_INSTALL_INVALID_PACKAGE __MSABI_LONG ( 15602 )
#define ERROR_INSTALL_LANGUAGE_UNSUPPORTED __MSABI_LONG ( 1623 )
#define ERROR_INSTALL_LOG_FAILURE __MSABI_LONG ( 1622 )
#define ERROR_INSTALL_NETWORK_FAILURE __MSABI_LONG ( 15605 )
#define ERROR_INSTALL_NOTUSED __MSABI_LONG ( 1634 )
#define ERROR_INSTALL_OPEN_PACKAGE_FAILED __MSABI_LONG ( 15600 )
#define ERROR_INSTALL_OUT_OF_DISK_SPACE __MSABI_LONG ( 15604 )
#define ERROR_INSTALL_PACKAGE_DOWNGRADE __MSABI_LONG ( 15622 )
#define ERROR_INSTALL_PACKAGE_INVALID __MSABI_LONG ( 1620 )
#define ERROR_INSTALL_PACKAGE_NOT_FOUND __MSABI_LONG ( 15601 )
#define ERROR_INSTALL_PACKAGE_OPEN_FAILED __MSABI_LONG ( 1619 )
#define ERROR_INSTALL_PACKAGE_REJECTED __MSABI_LONG ( 1625 )
#define ERROR_INSTALL_PACKAGE_VERSION __MSABI_LONG ( 1613 )
#define ERROR_INSTALL_PLATFORM_UNSUPPORTED __MSABI_LONG ( 1633 )
#define ERROR_INSTALL_POLICY_FAILURE __MSABI_LONG ( 15615 )
#define ERROR_INSTALL_PREREQUISITE_FAILED __MSABI_LONG ( 15613 )
#define ERROR_INSTALL_REGISTRATION_FAILURE __MSABI_LONG ( 15606 )
#define ERROR_INSTALL_REMOTE_DISALLOWED __MSABI_LONG ( 1640 )
#define ERROR_INSTALL_REMOTE_PROHIBITED __MSABI_LONG ( 1645 )
#define ERROR_INSTALL_RESOLVE_DEPENDENCY_FAILED __MSABI_LONG ( 15603 )
#define ERROR_INSTALL_SERVICE_FAILURE __MSABI_LONG ( 1601 )
#define ERROR_INSTALL_SOURCE_ABSENT __MSABI_LONG ( 1612 )
#define ERROR_INSTALL_SUSPEND __MSABI_LONG ( 1604 )
#define ERROR_INSTALL_TEMP_UNWRITABLE __MSABI_LONG ( 1632 )
#define ERROR_INSTALL_TRANSFORM_FAILURE __MSABI_LONG ( 1624 )
#define ERROR_INSTALL_TRANSFORM_REJECTED __MSABI_LONG ( 1644 )
#define ERROR_INSTALL_UI_FAILURE __MSABI_LONG ( 1621 )
#define ERROR_INSTALL_USEREXIT __MSABI_LONG ( 1602 )
#define ERROR_INSUFFICIENT_BUFFER __MSABI_LONG ( 122 )
#define ERROR_INTERNAL_DB_CORRUPTION __MSABI_LONG ( 1358 )
#define ERROR_INTERNAL_DB_ERROR __MSABI_LONG ( 1383 )
#define ERROR_INTERNAL_ERROR __MSABI_LONG ( 1359 )
#define ERROR_INVALID_ACCEL_HANDLE __MSABI_LONG ( 1403 )
#define ERROR_INVALID_ACCESS __MSABI_LONG ( 12 )
#define ERROR_INVALID_ACCOUNT_NAME __MSABI_LONG ( 1315 )
#define ERROR_INVALID_ACL __MSABI_LONG ( 1336 )
#define ERROR_INVALID_ADDRESS __MSABI_LONG ( 487 )
#define ERROR_INVALID_AT_INTERRUPT_TIME __MSABI_LONG ( 104 )
#define ERROR_INVALID_BLOCK __MSABI_LONG ( 9 )
#define ERROR_INVALID_BLOCK_LENGTH __MSABI_LONG ( 1106 )
#define ERROR_INVALID_CATEGORY __MSABI_LONG ( 117 )
#define ERROR_INVALID_CLEANER __MSABI_LONG ( 4310 )
#define ERROR_INVALID_CMM __MSABI_LONG ( 2010 )
#define ERROR_INVALID_COLORINDEX __MSABI_LONG ( 2022 )
#define ERROR_INVALID_COLORSPACE __MSABI_LONG ( 2017 )
#define ERROR_INVALID_COMBOBOX_MESSAGE __MSABI_LONG ( 1422 )
#define ERROR_INVALID_COMMAND_LINE __MSABI_LONG ( 1639 )
#define ERROR_INVALID_COMPUTERNAME __MSABI_LONG ( 1210 )
#define ERROR_INVALID_CURSOR_HANDLE __MSABI_LONG ( 1402 )
#define ERROR_INVALID_DATA __MSABI_LONG ( 13 )
#define ERROR_INVALID_DATATYPE __MSABI_LONG ( 1804 )
#define ERROR_INVALID_DLL __MSABI_LONG ( 1154 )
#define ERROR_INVALID_DOMAINNAME __MSABI_LONG ( 1212 )
#define ERROR_INVALID_DOMAIN_ROLE __MSABI_LONG ( 1354 )
#define ERROR_INVALID_DOMAIN_STATE __MSABI_LONG ( 1353 )
#define ERROR_INVALID_DRIVE __MSABI_LONG ( 15 )
#define ERROR_INVALID_DRIVE_OBJECT __MSABI_LONG ( 4321 )
#define ERROR_INVALID_DWP_HANDLE __MSABI_LONG ( 1405 )
#define ERROR_INVALID_EA_HANDLE __MSABI_LONG ( 278 )
#define ERROR_INVALID_EA_NAME __MSABI_LONG ( 254 )
#define ERROR_INVALID_EDIT_HEIGHT __MSABI_LONG ( 1424 )
#define ERROR_INVALID_ENVIRONMENT __MSABI_LONG ( 1805 )
#define ERROR_INVALID_EVENTNAME __MSABI_LONG ( 1211 )
#define ERROR_INVALID_EVENT_COUNT __MSABI_LONG ( 151 )
#define ERROR_INVALID_EXE_SIGNATURE __MSABI_LONG ( 191 )
#define ERROR_INVALID_FIELD __MSABI_LONG ( 1616 )
#define ERROR_INVALID_FILTER_PROC __MSABI_LONG ( 1427 )
#define ERROR_INVALID_FLAGS __MSABI_LONG ( 1004 )
#define ERROR_INVALID_FLAG_NUMBER __MSABI_LONG ( 186 )
#define ERROR_INVALID_FORM_NAME __MSABI_LONG ( 1902 )
#define ERROR_INVALID_FORM_SIZE __MSABI_LONG ( 1903 )
#define ERROR_INVALID_FUNCTION __MSABI_LONG ( 1 )
#define ERROR_INVALID_GROUPNAME __MSABI_LONG ( 1209 )
#define ERROR_INVALID_GROUP_ATTRIBUTES __MSABI_LONG ( 1345 )
#define ERROR_INVALID_GW_COMMAND __MSABI_LONG ( 1443 )
#define ERROR_INVALID_HANDLE __MSABI_LONG ( 6 )
#define ERROR_INVALID_HANDLE_STATE __MSABI_LONG ( 1609 )
#define ERROR_INVALID_HOOK_FILTER __MSABI_LONG ( 1426 )
#define ERROR_INVALID_HOOK_HANDLE __MSABI_LONG ( 1404 )
#define ERROR_INVALID_ICON_HANDLE __MSABI_LONG ( 1414 )
#define ERROR_INVALID_ID_AUTHORITY __MSABI_LONG ( 1343 )
#define ERROR_INVALID_IMPORT_OF_NON_DLL __MSABI_LONG ( 1276 )
#define ERROR_INVALID_INDEX __MSABI_LONG ( 1413 )
#define ERROR_INVALID_KEYBOARD_HANDLE __MSABI_LONG ( 1457 )
#define ERROR_INVALID_LB_MESSAGE __MSABI_LONG ( 1432 )
#define ERROR_INVALID_LEVEL __MSABI_LONG ( 124 )
#define ERROR_INVALID_LIBRARY __MSABI_LONG ( 4301 )
#define ERROR_INVALID_LIST_FORMAT __MSABI_LONG ( 153 )
#define ERROR_INVALID_LOGON_HOURS __MSABI_LONG ( 1328 )
#define ERROR_INVALID_LOGON_TYPE __MSABI_LONG ( 1367 )
#define ERROR_INVALID_MEDIA __MSABI_LONG ( 4300 )
#define ERROR_INVALID_MEDIA_POOL __MSABI_LONG ( 4302 )
#define ERROR_INVALID_MEMBER __MSABI_LONG ( 1388 )
#define ERROR_INVALID_MENU_HANDLE __MSABI_LONG ( 1401 )
#define ERROR_INVALID_MESSAGE __MSABI_LONG ( 1002 )
#define ERROR_INVALID_MESSAGEDEST __MSABI_LONG ( 1218 )
#define ERROR_INVALID_MESSAGENAME __MSABI_LONG ( 1217 )
#define ERROR_INVALID_MINALLOCSIZE __MSABI_LONG ( 195 )
#define ERROR_INVALID_MODULETYPE __MSABI_LONG ( 190 )
#define ERROR_INVALID_MONITOR_HANDLE __MSABI_LONG ( 1461 )
#define ERROR_INVALID_MSGBOX_STYLE __MSABI_LONG ( 1438 )
#define ERROR_INVALID_NAME __MSABI_LONG ( 123 )
#define ERROR_INVALID_NETNAME __MSABI_LONG ( 1214 )
#define ERROR_INVALID_OPERATION __MSABI_LONG ( 4317 )
#define ERROR_INVALID_OPERATION_ON_QUORUM __MSABI_LONG ( 5068 )
#define ERROR_INVALID_OPLOCK_PROTOCOL __MSABI_LONG ( 301 )
#define ERROR_INVALID_ORDINAL __MSABI_LONG ( 182 )
#define ERROR_INVALID_OWNER __MSABI_LONG ( 1307 )
#define ERROR_INVALID_PARAMETER __MSABI_LONG ( 87 )
#define ERROR_INVALID_PASSWORD __MSABI_LONG ( 86 )
#define ERROR_INVALID_PASSWORDNAME __MSABI_LONG ( 1216 )
#define ERROR_INVALID_PIXEL_FORMAT __MSABI_LONG ( 2000 )
#define ERROR_INVALID_PRIMARY_GROUP __MSABI_LONG ( 1308 )
#define ERROR_INVALID_PRINTER_COMMAND __MSABI_LONG ( 1803 )
#define ERROR_INVALID_PRINTER_NAME __MSABI_LONG ( 1801 )
#define ERROR_INVALID_PRINTER_STATE __MSABI_LONG ( 1906 )
#define ERROR_INVALID_PRINT_MONITOR __MSABI_LONG ( 3007 )
#define ERROR_INVALID_PRIORITY __MSABI_LONG ( 1800 )
#define ERROR_INVALID_PROFILE __MSABI_LONG ( 2011 )
#define ERROR_INVALID_REPARSE_DATA __MSABI_LONG ( 4392 )
#define ERROR_INVALID_RUNLEVEL_SETTING __MSABI_LONG ( 15401 )
#define ERROR_INVALID_SCROLLBAR_RANGE __MSABI_LONG ( 1448 )
#define ERROR_INVALID_SECURITY_DESCR __MSABI_LONG ( 1338 )
#define ERROR_INVALID_SEGDPL __MSABI_LONG ( 198 )
#define ERROR_INVALID_SEGMENT_NUMBER __MSABI_LONG ( 180 )
#define ERROR_INVALID_SEPARATOR_FILE __MSABI_LONG ( 1799 )
#define ERROR_INVALID_SERVER_STATE __MSABI_LONG ( 1352 )
#define ERROR_INVALID_SERVICENAME __MSABI_LONG ( 1213 )
#define ERROR_INVALID_SERVICE_ACCOUNT __MSABI_LONG ( 1057 )
#define ERROR_INVALID_SERVICE_CONTROL __MSABI_LONG ( 1052 )
#define ERROR_INVALID_SERVICE_LOCK __MSABI_LONG ( 1071 )
#define ERROR_INVALID_SHARENAME __MSABI_LONG ( 1215 )
#define ERROR_INVALID_SHOWWIN_COMMAND __MSABI_LONG ( 1449 )
#define ERROR_INVALID_SID __MSABI_LONG ( 1337 )
#define ERROR_INVALID_SIGNAL_NUMBER __MSABI_LONG ( 209 )
#define ERROR_INVALID_SPI_VALUE __MSABI_LONG ( 1439 )
#define ERROR_INVALID_STACKSEG __MSABI_LONG ( 189 )
#define ERROR_INVALID_STAGED_SIGNATURE __MSABI_LONG ( 15620 )
#define ERROR_INVALID_STARTING_CODESEG __MSABI_LONG ( 188 )
#define ERROR_INVALID_STATE __MSABI_LONG ( 5023 )
#define ERROR_INVALID_SUB_AUTHORITY __MSABI_LONG ( 1335 )
#define ERROR_INVALID_TABLE __MSABI_LONG ( 1628 )
#define ERROR_INVALID_TARGET_HANDLE __MSABI_LONG ( 114 )
#define ERROR_INVALID_THREAD_ID __MSABI_LONG ( 1444 )
#define ERROR_INVALID_TIME __MSABI_LONG ( 1901 )
#define ERROR_INVALID_TRANSFORM __MSABI_LONG ( 2020 )
#define ERROR_INVALID_USER_BUFFER __MSABI_LONG ( 1784 )
#define ERROR_INVALID_VERIFY_SWITCH __MSABI_LONG ( 118 )
#define ERROR_INVALID_WINDOW_HANDLE __MSABI_LONG ( 1400 )
#define ERROR_INVALID_WINDOW_STYLE __MSABI_LONG ( 2002 )
#define ERROR_INVALID_WORKSTATION __MSABI_LONG ( 1329 )
#define ERROR_IOPL_NOT_ENABLED __MSABI_LONG ( 197 )
#define ERROR_IO_DEVICE __MSABI_LONG ( 1117 )
#define ERROR_IO_INCOMPLETE __MSABI_LONG ( 996 )
#define ERROR_IO_PENDING __MSABI_LONG ( 997 )
#define ERROR_IPSEC_AUTH_FIREWALL_DROP __MSABI_LONG ( 13917 )
#define ERROR_IPSEC_BAD_SPI __MSABI_LONG ( 13910 )
#define ERROR_IPSEC_CLEAR_TEXT_DROP __MSABI_LONG ( 13916 )
#define ERROR_IPSEC_DEFAULT_MM_AUTH_NOT_FOUND __MSABI_LONG ( 13014 )
#define ERROR_IPSEC_DEFAULT_MM_POLICY_NOT_FOUND __MSABI_LONG ( 13013 )
#define ERROR_IPSEC_DEFAULT_QM_POLICY_NOT_FOUND __MSABI_LONG ( 13015 )
#define ERROR_IPSEC_DOSP_BLOCK __MSABI_LONG ( 13925 )
#define ERROR_IPSEC_DOSP_INVALID_PACKET __MSABI_LONG ( 13927 )
#define ERROR_IPSEC_DOSP_KEYMOD_NOT_ALLOWED __MSABI_LONG ( 13930 )
#define ERROR_IPSEC_DOSP_MAX_ENTRIES __MSABI_LONG ( 13929 )
#define ERROR_IPSEC_DOSP_MAX_PER_IP_RATELIMIT_QUEUES __MSABI_LONG ( 13932 )
#define ERROR_IPSEC_DOSP_NOT_INSTALLED __MSABI_LONG ( 13931 )
#define ERROR_IPSEC_DOSP_RECEIVED_MULTICAST __MSABI_LONG ( 13926 )
#define ERROR_IPSEC_DOSP_STATE_LOOKUP_FAILED __MSABI_LONG ( 13928 )
#define ERROR_IPSEC_IKE_ADD_UPDATE_KEY_FAILED __MSABI_LONG ( 13860 )
#define ERROR_IPSEC_IKE_ATTRIB_FAIL __MSABI_LONG ( 13802 )
#define ERROR_IPSEC_IKE_AUTHORIZATION_FAILURE __MSABI_LONG ( 13905 )
#define ERROR_IPSEC_IKE_AUTHORIZATION_FAILURE_WITH_OPTIONAL_RETRY __MSABI_LONG ( 13907 )
#define ERROR_IPSEC_IKE_AUTH_FAIL __MSABI_LONG ( 13801 )
#define ERROR_IPSEC_IKE_BENIGN_REINIT __MSABI_LONG ( 13878 )
#define ERROR_IPSEC_IKE_CERT_CHAIN_POLICY_MISMATCH __MSABI_LONG ( 13887 )
#define ERROR_IPSEC_IKE_CGA_AUTH_FAILED __MSABI_LONG ( 13892 )
#define ERROR_IPSEC_IKE_COEXISTENCE_SUPPRESS __MSABI_LONG ( 13902 )
#define ERROR_IPSEC_IKE_CRL_FAILED __MSABI_LONG ( 13817 )
#define ERROR_IPSEC_IKE_DECRYPT __MSABI_LONG ( 13867 )
#define ERROR_IPSEC_IKE_DH_FAIL __MSABI_LONG ( 13822 )
#define ERROR_IPSEC_IKE_DH_FAILURE __MSABI_LONG ( 13864 )
#define ERROR_IPSEC_IKE_DOS_COOKIE_SENT __MSABI_LONG ( 13890 )
#define ERROR_IPSEC_IKE_DROP_NO_RESPONSE __MSABI_LONG ( 13813 )
#define ERROR_IPSEC_IKE_ENCRYPT __MSABI_LONG ( 13866 )
#define ERROR_IPSEC_IKE_ERROR __MSABI_LONG ( 13816 )
#define ERROR_IPSEC_IKE_FAILQUERYSSP __MSABI_LONG ( 13854 )
#define ERROR_IPSEC_IKE_FAILSSPINIT __MSABI_LONG ( 13853 )
#define ERROR_IPSEC_IKE_GENERAL_PROCESSING_ERROR __MSABI_LONG ( 13804 )
#define ERROR_IPSEC_IKE_GETSPIFAIL __MSABI_LONG ( 13857 )
#define ERROR_IPSEC_IKE_INNER_IP_ASSIGNMENT_FAILURE __MSABI_LONG ( 13899 )
#define ERROR_IPSEC_IKE_INVALID_AUTH_ALG __MSABI_LONG ( 13874 )
#define ERROR_IPSEC_IKE_INVALID_AUTH_PAYLOAD __MSABI_LONG ( 13889 )
#define ERROR_IPSEC_IKE_INVALID_CERT_KEYLEN __MSABI_LONG ( 13881 )
#define ERROR_IPSEC_IKE_INVALID_CERT_TYPE __MSABI_LONG ( 13819 )
#define ERROR_IPSEC_IKE_INVALID_COOKIE __MSABI_LONG ( 13846 )
#define ERROR_IPSEC_IKE_INVALID_ENCRYPT_ALG __MSABI_LONG ( 13873 )
#define ERROR_IPSEC_IKE_INVALID_FILTER __MSABI_LONG ( 13858 )
#define ERROR_IPSEC_IKE_INVALID_GROUP __MSABI_LONG ( 13865 )
#define ERROR_IPSEC_IKE_INVALID_HASH __MSABI_LONG ( 13870 )
#define ERROR_IPSEC_IKE_INVALID_HASH_ALG __MSABI_LONG ( 13871 )
#define ERROR_IPSEC_IKE_INVALID_HASH_SIZE __MSABI_LONG ( 13872 )
#define ERROR_IPSEC_IKE_INVALID_HEADER __MSABI_LONG ( 13824 )
#define ERROR_IPSEC_IKE_INVALID_KEY_USAGE __MSABI_LONG ( 13818 )
#define ERROR_IPSEC_IKE_INVALID_MM_FOR_QM __MSABI_LONG ( 13894 )
#define ERROR_IPSEC_IKE_INVALID_PAYLOAD __MSABI_LONG ( 13843 )
#define ERROR_IPSEC_IKE_INVALID_POLICY __MSABI_LONG ( 13861 )
#define ERROR_IPSEC_IKE_INVALID_RESPONDER_LIFETIME_NOTIFY __MSABI_LONG ( 13879 )
#define ERROR_IPSEC_IKE_INVALID_SIG __MSABI_LONG ( 13875 )
#define ERROR_IPSEC_IKE_INVALID_SIGNATURE __MSABI_LONG ( 13826 )
#define ERROR_IPSEC_IKE_INVALID_SITUATION __MSABI_LONG ( 13863 )
#define ERROR_IPSEC_IKE_KERBEROS_ERROR __MSABI_LONG ( 13827 )
#define ERROR_IPSEC_IKE_KILL_DUMMY_NAP_TUNNEL __MSABI_LONG ( 13898 )
#define ERROR_IPSEC_IKE_LOAD_FAILED __MSABI_LONG ( 13876 )
#define ERROR_IPSEC_IKE_LOAD_SOFT_SA __MSABI_LONG ( 13844 )
#define ERROR_IPSEC_IKE_MM_ACQUIRE_DROP __MSABI_LONG ( 13809 )
#define ERROR_IPSEC_IKE_MM_DELAY_DROP __MSABI_LONG ( 13814 )
#define ERROR_IPSEC_IKE_MM_EXPIRED __MSABI_LONG ( 13885 )
#define ERROR_IPSEC_IKE_MM_LIMIT __MSABI_LONG ( 13882 )
#define ERROR_IPSEC_IKE_NEGOTIATION_DISABLED __MSABI_LONG ( 13883 )
#define ERROR_IPSEC_IKE_NEGOTIATION_PENDING __MSABI_LONG ( 13803 )
#define ERROR_IPSEC_IKE_NEG_STATUS_BEGIN __MSABI_LONG ( 13800 )
#define ERROR_IPSEC_IKE_NEG_STATUS_END __MSABI_LONG ( 13897 )
#define ERROR_IPSEC_IKE_NEG_STATUS_EXTENDED_END __MSABI_LONG ( 13909 )
#define ERROR_IPSEC_IKE_NOTCBPRIV __MSABI_LONG ( 13851 )
#define ERROR_IPSEC_IKE_NO_CERT __MSABI_LONG ( 13806 )
#define ERROR_IPSEC_IKE_NO_MM_POLICY __MSABI_LONG ( 13850 )
#define ERROR_IPSEC_IKE_NO_PEER_CERT __MSABI_LONG ( 13847 )
#define ERROR_IPSEC_IKE_NO_POLICY __MSABI_LONG ( 13825 )
#define ERROR_IPSEC_IKE_NO_PRIVATE_KEY __MSABI_LONG ( 13820 )
#define ERROR_IPSEC_IKE_NO_PUBLIC_KEY __MSABI_LONG ( 13828 )
#define ERROR_IPSEC_IKE_OUT_OF_MEMORY __MSABI_LONG ( 13859 )
#define ERROR_IPSEC_IKE_PEER_CRL_FAILED __MSABI_LONG ( 13848 )
#define ERROR_IPSEC_IKE_PEER_DOESNT_SUPPORT_MOBIKE __MSABI_LONG ( 13904 )
#define ERROR_IPSEC_IKE_PEER_MM_ASSUMED_INVALID __MSABI_LONG ( 13886 )
#define ERROR_IPSEC_IKE_POLICY_CHANGE __MSABI_LONG ( 13849 )
#define ERROR_IPSEC_IKE_POLICY_MATCH __MSABI_LONG ( 13868 )
#define ERROR_IPSEC_IKE_PROCESS_ERR __MSABI_LONG ( 13829 )
#define ERROR_IPSEC_IKE_PROCESS_ERR_CERT __MSABI_LONG ( 13835 )
#define ERROR_IPSEC_IKE_PROCESS_ERR_CERT_REQ __MSABI_LONG ( 13836 )
#define ERROR_IPSEC_IKE_PROCESS_ERR_DELETE __MSABI_LONG ( 13841 )
#define ERROR_IPSEC_IKE_PROCESS_ERR_HASH __MSABI_LONG ( 13837 )
#define ERROR_IPSEC_IKE_PROCESS_ERR_ID __MSABI_LONG ( 13834 )
#define ERROR_IPSEC_IKE_PROCESS_ERR_KE __MSABI_LONG ( 13833 )
#define ERROR_IPSEC_IKE_PROCESS_ERR_NATOA __MSABI_LONG ( 13893 )
#define ERROR_IPSEC_IKE_PROCESS_ERR_NONCE __MSABI_LONG ( 13839 )
#define ERROR_IPSEC_IKE_PROCESS_ERR_NOTIFY __MSABI_LONG ( 13840 )
#define ERROR_IPSEC_IKE_PROCESS_ERR_PROP __MSABI_LONG ( 13831 )
#define ERROR_IPSEC_IKE_PROCESS_ERR_SA __MSABI_LONG ( 13830 )
#define ERROR_IPSEC_IKE_PROCESS_ERR_SIG __MSABI_LONG ( 13838 )
#define ERROR_IPSEC_IKE_PROCESS_ERR_TRANS __MSABI_LONG ( 13832 )
#define ERROR_IPSEC_IKE_PROCESS_ERR_VENDOR __MSABI_LONG ( 13842 )
#define ERROR_IPSEC_IKE_QM_ACQUIRE_DROP __MSABI_LONG ( 13810 )
#define ERROR_IPSEC_IKE_QM_DELAY_DROP __MSABI_LONG ( 13815 )
#define ERROR_IPSEC_IKE_QM_EXPIRED __MSABI_LONG ( 13895 )
#define ERROR_IPSEC_IKE_QM_LIMIT __MSABI_LONG ( 13884 )
#define ERROR_IPSEC_IKE_QUEUE_DROP_MM __MSABI_LONG ( 13811 )
#define ERROR_IPSEC_IKE_QUEUE_DROP_NO_MM __MSABI_LONG ( 13812 )
#define ERROR_IPSEC_IKE_RATELIMIT_DROP __MSABI_LONG ( 13903 )
#define ERROR_IPSEC_IKE_REQUIRE_CP_PAYLOAD_MISSING __MSABI_LONG ( 13900 )
#define ERROR_IPSEC_IKE_RPC_DELETE __MSABI_LONG ( 13877 )
#define ERROR_IPSEC_IKE_SA_DELETED __MSABI_LONG ( 13807 )
#define ERROR_IPSEC_IKE_SA_REAPED __MSABI_LONG ( 13808 )
#define ERROR_IPSEC_IKE_SECLOADFAIL __MSABI_LONG ( 13852 )
#define ERROR_IPSEC_IKE_SHUTTING_DOWN __MSABI_LONG ( 13891 )
#define ERROR_IPSEC_IKE_SOFT_SA_TORN_DOWN __MSABI_LONG ( 13845 )
#define ERROR_IPSEC_IKE_SRVACQFAIL __MSABI_LONG ( 13855 )
#define ERROR_IPSEC_IKE_SRVQUERYCRED __MSABI_LONG ( 13856 )
#define ERROR_IPSEC_IKE_STRONG_CRED_AUTHORIZATION_AND_CERTMAP_FAILURE __MSABI_LONG ( 13908 )
#define ERROR_IPSEC_IKE_STRONG_CRED_AUTHORIZATION_FAILURE __MSABI_LONG ( 13906 )
#define ERROR_IPSEC_IKE_TIMED_OUT __MSABI_LONG ( 13805 )
#define ERROR_IPSEC_IKE_TOO_MANY_FILTERS __MSABI_LONG ( 13896 )
#define ERROR_IPSEC_IKE_UNEXPECTED_MESSAGE_ID __MSABI_LONG ( 13888 )
#define ERROR_IPSEC_IKE_UNKNOWN_DOI __MSABI_LONG ( 13862 )
#define ERROR_IPSEC_IKE_UNSUPPORTED_ID __MSABI_LONG ( 13869 )
#define ERROR_IPSEC_INTEGRITY_CHECK_FAILED __MSABI_LONG ( 13915 )
#define ERROR_IPSEC_INVALID_PACKET __MSABI_LONG ( 13914 )
#define ERROR_IPSEC_KEY_MODULE_IMPERSONATION_NEGOTIATION_PENDING __MSABI_LONG ( 13901 )
#define ERROR_IPSEC_MM_AUTH_EXISTS __MSABI_LONG ( 13010 )
#define ERROR_IPSEC_MM_AUTH_IN_USE __MSABI_LONG ( 13012 )
#define ERROR_IPSEC_MM_AUTH_NOT_FOUND __MSABI_LONG ( 13011 )
#define ERROR_IPSEC_MM_AUTH_PENDING_DELETION __MSABI_LONG ( 13022 )
#define ERROR_IPSEC_MM_FILTER_EXISTS __MSABI_LONG ( 13006 )
#define ERROR_IPSEC_MM_FILTER_NOT_FOUND __MSABI_LONG ( 13007 )
#define ERROR_IPSEC_MM_FILTER_PENDING_DELETION __MSABI_LONG ( 13018 )
#define ERROR_IPSEC_MM_POLICY_EXISTS __MSABI_LONG ( 13003 )
#define ERROR_IPSEC_MM_POLICY_IN_USE __MSABI_LONG ( 13005 )
#define ERROR_IPSEC_MM_POLICY_NOT_FOUND __MSABI_LONG ( 13004 )
#define ERROR_IPSEC_MM_POLICY_PENDING_DELETION __MSABI_LONG ( 13021 )
#define ERROR_IPSEC_QM_POLICY_EXISTS __MSABI_LONG ( 13000 )
#define ERROR_IPSEC_QM_POLICY_IN_USE __MSABI_LONG ( 13002 )
#define ERROR_IPSEC_QM_POLICY_NOT_FOUND __MSABI_LONG ( 13001 )
#define ERROR_IPSEC_QM_POLICY_PENDING_DELETION __MSABI_LONG ( 13023 )
#define ERROR_IPSEC_REPLAY_CHECK_FAILED __MSABI_LONG ( 13913 )
#define ERROR_IPSEC_SA_LIFETIME_EXPIRED __MSABI_LONG ( 13911 )
#define ERROR_IPSEC_THROTTLE_DROP __MSABI_LONG ( 13918 )
#define ERROR_IPSEC_TRANSPORT_FILTER_EXISTS __MSABI_LONG ( 13008 )
#define ERROR_IPSEC_TRANSPORT_FILTER_NOT_FOUND __MSABI_LONG ( 13009 )
#define ERROR_IPSEC_TRANSPORT_FILTER_PENDING_DELETION __MSABI_LONG ( 13019 )
#define ERROR_IPSEC_TUNNEL_FILTER_EXISTS __MSABI_LONG ( 13016 )
#define ERROR_IPSEC_TUNNEL_FILTER_NOT_FOUND __MSABI_LONG ( 13017 )
#define ERROR_IPSEC_TUNNEL_FILTER_PENDING_DELETION __MSABI_LONG ( 13020 )
#define ERROR_IPSEC_WRONG_SA __MSABI_LONG ( 13912 )
#define ERROR_IRQ_BUSY __MSABI_LONG ( 1119 )
#define ERROR_IS_JOINED __MSABI_LONG ( 134 )
#define ERROR_IS_JOIN_PATH __MSABI_LONG ( 147 )
#define ERROR_IS_JOIN_TARGET __MSABI_LONG ( 133 )
#define ERROR_IS_SUBSTED __MSABI_LONG ( 135 )
#define ERROR_IS_SUBST_PATH __MSABI_LONG ( 146 )
#define ERROR_IS_SUBST_TARGET __MSABI_LONG ( 149 )
#define ERROR_ITERATED_DATA_EXCEEDS_64k __MSABI_LONG ( 194 )
#define ERROR_JOIN_TO_JOIN __MSABI_LONG ( 138 )
#define ERROR_JOIN_TO_SUBST __MSABI_LONG ( 140 )
#define ERROR_JOURNAL_DELETE_IN_PROGRESS __MSABI_LONG ( 1178 )
#define ERROR_JOURNAL_ENTRY_DELETED __MSABI_LONG ( 1181 )
#define ERROR_JOURNAL_HOOK_SET __MSABI_LONG ( 1430 )
#define ERROR_JOURNAL_NOT_ACTIVE __MSABI_LONG ( 1179 )
#define ERROR_KERNEL_APC __MSABI_LONG ( 738 )
#define ERROR_KEY_DELETED __MSABI_LONG ( 1018 )
#define ERROR_KEY_HAS_CHILDREN __MSABI_LONG ( 1020 )
#define ERROR_KM_DRIVER_BLOCKED __MSABI_LONG ( 1930 )
#define ERROR_LABEL_QUESTIONABLE (2)
#define ERROR_LABEL_TOO_LONG __MSABI_LONG ( 154 )
#define ERROR_LABEL_UNREADABLE (1)
#define ERROR_LAST_ADMIN __MSABI_LONG ( 1322 )
#define ERROR_LB_WITHOUT_TABSTOPS __MSABI_LONG ( 1434 )
#define ERROR_LIBRARY_FULL __MSABI_LONG ( 4322 )
#define ERROR_LIBRARY_OFFLINE __MSABI_LONG ( 4305 )
#define ERROR_LICENSE_QUOTA_EXCEEDED __MSABI_LONG ( 1395 )
#define ERROR_LISTBOX_ID_NOT_FOUND __MSABI_LONG ( 1416 )
#define ERROR_LM_CROSS_ENCRYPTION_REQUIRED __MSABI_LONG ( 1390 )
#define ERROR_LOCAL_USER_SESSION_KEY __MSABI_LONG ( 1303 )
#define ERROR_LOCKED __MSABI_LONG ( 212 )
#define ERROR_LOCK_FAILED __MSABI_LONG ( 167 )
#define ERROR_LOCK_VIOLATION __MSABI_LONG ( 33 )
#define ERROR_LOGIN_TIME_RESTRICTION __MSABI_LONG ( 1239 )
#define ERROR_LOGIN_WKSTA_RESTRICTION __MSABI_LONG ( 1240 )
#define ERROR_LOGON_FAILURE __MSABI_LONG ( 1326 )
#define ERROR_LOGON_NOT_GRANTED __MSABI_LONG ( 1380 )
#define ERROR_LOGON_SESSION_COLLISION __MSABI_LONG ( 1366 )
#define ERROR_LOGON_SESSION_EXISTS __MSABI_LONG ( 1363 )
#define ERROR_LOGON_TYPE_NOT_GRANTED __MSABI_LONG ( 1385 )
#define ERROR_LOG_FILE_FULL __MSABI_LONG ( 1502 )
#define ERROR_LUIDS_EXHAUSTED __MSABI_LONG ( 1334 )
#define ERROR_MACHINE_LOCKED __MSABI_LONG ( 1271 )
#define ERROR_MAGAZINE_NOT_PRESENT __MSABI_LONG ( 1163 )
#define ERROR_MALFORMED_SUBSTITUTION_STRING __MSABI_LONG ( 14094 )
#define ERROR_MAPPED_ALIGNMENT __MSABI_LONG ( 1132 )
#define ERROR_MAX_THRDS_REACHED __MSABI_LONG ( 164 )
#define ERROR_MCA_INTERNAL_ERROR __MSABI_LONG ( 15205 )
#define ERROR_MCA_INVALID_CAPABILITIES_STRING __MSABI_LONG ( 15200 )
#define ERROR_MCA_INVALID_TECHNOLOGY_TYPE_RETURNED __MSABI_LONG ( 15206 )
#define ERROR_MCA_INVALID_VCP_VERSION __MSABI_LONG ( 15201 )
#define ERROR_MCA_MCCS_VERSION_MISMATCH __MSABI_LONG ( 15203 )
#define ERROR_MCA_MONITOR_VIOLATES_MCCS_SPECIFICATION __MSABI_LONG ( 15202 )
#define ERROR_MCA_UNSUPPORTED_COLOR_TEMPERATURE __MSABI_LONG ( 15207 )
#define ERROR_MCA_UNSUPPORTED_MCCS_VERSION __MSABI_LONG ( 15204 )
#define ERROR_MEDIA_CHANGED __MSABI_LONG ( 1110 )
#define ERROR_MEDIA_INCOMPATIBLE __MSABI_LONG ( 4315 )
#define ERROR_MEDIA_NOT_AVAILABLE __MSABI_LONG ( 4318 )
#define ERROR_MEDIA_OFFLINE __MSABI_LONG ( 4304 )
#define ERROR_MEDIA_UNAVAILABLE __MSABI_LONG ( 4308 )
#define ERROR_MEDIUM_NOT_ACCESSIBLE __MSABI_LONG ( 4323 )
#define ERROR_MEMBERS_PRIMARY_GROUP __MSABI_LONG ( 1374 )
#define ERROR_MEMBER_IN_ALIAS __MSABI_LONG ( 1378 )
#define ERROR_MEMBER_IN_GROUP __MSABI_LONG ( 1320 )
#define ERROR_MEMBER_NOT_IN_ALIAS __MSABI_LONG ( 1377 )
#define ERROR_MEMBER_NOT_IN_GROUP __MSABI_LONG ( 1321 )
#define ERROR_MENU_ITEM_NOT_FOUND __MSABI_LONG ( 1456 )
#define ERROR_MESSAGE_EXCEEDS_MAX_SIZE __MSABI_LONG ( 4336 )
#define ERROR_MESSAGE_SYNC_ONLY __MSABI_LONG ( 1159 )
#define ERROR_METAFILE_NOT_SUPPORTED __MSABI_LONG ( 2003 )
#define ERROR_META_EXPANSION_TOO_LONG __MSABI_LONG ( 208 )
#define ERROR_MOD_NOT_FOUND __MSABI_LONG ( 126 )
#define ERROR_MORE_DATA __MSABI_LONG ( 234 )
#define ERROR_MORE_WRITES __MSABI_LONG ( 1120 )
#define ERROR_MRM_AUTOMERGE_ENABLED __MSABI_LONG ( 15139 )
#define ERROR_MRM_DUPLICATE_ENTRY __MSABI_LONG ( 15119 )
#define ERROR_MRM_DUPLICATE_MAP_NAME __MSABI_LONG ( 15118 )
#define ERROR_MRM_FILEPATH_TOO_LONG __MSABI_LONG ( 15121 )
#define ERROR_MRM_INDETERMINATE_QUALIFIER_VALUE __MSABI_LONG ( 15138 )
#define ERROR_MRM_INVALID_FILE_TYPE __MSABI_LONG ( 15112 )
#define ERROR_MRM_INVALID_PRICONFIG __MSABI_LONG ( 15111 )
#define ERROR_MRM_INVALID_PRI_FILE __MSABI_LONG ( 15126 )
#define ERROR_MRM_INVALID_QUALIFIER_OPERATOR __MSABI_LONG ( 15137 )
#define ERROR_MRM_INVALID_QUALIFIER_VALUE __MSABI_LONG ( 15114 )
#define ERROR_MRM_INVALID_RESOURCE_IDENTIFIER __MSABI_LONG ( 15120 )
#define ERROR_MRM_MAP_NOT_FOUND __MSABI_LONG ( 15135 )
#define ERROR_MRM_NAMED_RESOURCE_NOT_FOUND __MSABI_LONG ( 15127 )
#define ERROR_MRM_NO_CANDIDATE __MSABI_LONG ( 15115 )
#define ERROR_MRM_NO_MATCH_OR_DEFAULT_CANDIDATE __MSABI_LONG ( 15116 )
#define ERROR_MRM_RESOURCE_TYPE_MISMATCH __MSABI_LONG ( 15117 )
#define ERROR_MRM_RUNTIME_NO_DEFAULT_OR_NEUTRAL_RESOURCE __MSABI_LONG ( 15110 )
#define ERROR_MRM_TOO_MANY_RESOURCES __MSABI_LONG ( 15140 )
#define ERROR_MRM_UNKNOWN_QUALIFIER __MSABI_LONG ( 15113 )
#define ERROR_MRM_UNSUPPORTED_DIRECTORY_TYPE __MSABI_LONG ( 15122 )
#define ERROR_MRM_UNSUPPORTED_PROFILE_TYPE __MSABI_LONG ( 15136 )
#define ERROR_MR_MID_NOT_FOUND __MSABI_LONG ( 317 )
#define ERROR_MUI_FILE_NOT_FOUND __MSABI_LONG ( 15100 )
#define ERROR_MUI_FILE_NOT_LOADED __MSABI_LONG ( 15105 )
#define ERROR_MUI_INTLSETTINGS_INVALID_LOCALE_NAME __MSABI_LONG ( 15108 )
#define ERROR_MUI_INTLSETTINGS_UILANG_NOT_INSTALLED __MSABI_LONG ( 15107 )
#define ERROR_MUI_INVALID_FILE __MSABI_LONG ( 15101 )
#define ERROR_MUI_INVALID_LOCALE_NAME __MSABI_LONG ( 15103 )
#define ERROR_MUI_INVALID_RC_CONFIG __MSABI_LONG ( 15102 )
#define ERROR_MUI_INVALID_ULTIMATEFALLBACK_NAME __MSABI_LONG ( 15104 )
#define ERROR_MUTUAL_AUTH_FAILED __MSABI_LONG ( 1397 )
#define ERROR_NEEDS_REMEDIATION __MSABI_LONG ( 15612 )
#define ERROR_NEGATIVE_SEEK __MSABI_LONG ( 131 )
#define ERROR_NESTING_NOT_ALLOWED __MSABI_LONG ( 215 )
#define ERROR_NETLOGON_NOT_STARTED __MSABI_LONG ( 1792 )
#define ERROR_NETNAME_DELETED __MSABI_LONG ( 64 )
#define ERROR_NETWORK_ACCESS_DENIED __MSABI_LONG ( 65 )
#define ERROR_NETWORK_BUSY __MSABI_LONG ( 54 )
#define ERROR_NETWORK_NOT_AVAILABLE __MSABI_LONG ( 5035 )
#define ERROR_NETWORK_UNREACHABLE __MSABI_LONG ( 1231 )
#define ERROR_NET_WRITE_FAULT __MSABI_LONG ( 88 )
#define ERROR_NOACCESS __MSABI_LONG ( 998 )
#define ERROR_NODE_CANNOT_BE_CLUSTERED __MSABI_LONG ( 5898 )
#define ERROR_NODE_CANT_HOST_RESOURCE __MSABI_LONG ( 5071 )
#define ERROR_NODE_NOT_AVAILABLE __MSABI_LONG ( 5036 )
#define ERROR_NOLOGON_INTERDOMAIN_TRUST_ACCOUNT __MSABI_LONG ( 1807 )
#define ERROR_NOLOGON_SERVER_TRUST_ACCOUNT __MSABI_LONG ( 1809 )
#define ERROR_NOLOGON_WORKSTATION_TRUST_ACCOUNT __MSABI_LONG ( 1808 )
#define ERROR_NONE_MAPPED __MSABI_LONG ( 1332 )
#define ERROR_NONPAGED_SYSTEM_RESOURCES __MSABI_LONG ( 1451 )
#define ERROR_NON_ACCOUNT_SID __MSABI_LONG ( 1257 )
#define ERROR_NON_DOMAIN_SID __MSABI_LONG ( 1258 )
#define ERROR_NON_MDICHILD_WINDOW __MSABI_LONG ( 1445 )
#define ERROR_NOTIFY_ENUM_DIR __MSABI_LONG ( 1022 )
#define ERROR_NOT_ALL_ASSIGNED __MSABI_LONG ( 1300 )
#define ERROR_NOT_AUTHENTICATED __MSABI_LONG ( 1244 )
#define ERROR_NOT_A_REPARSE_POINT __MSABI_LONG ( 4390 )
#define ERROR_NOT_CHILD_WINDOW __MSABI_LONG ( 1442 )
#define ERROR_NOT_CONNECTED __MSABI_LONG ( 2250 )
#define ERROR_NOT_CONTAINER __MSABI_LONG ( 1207 )
#define ERROR_NOT_DOS_DISK __MSABI_LONG ( 26 )
#define ERROR_NOT_EMPTY __MSABI_LONG ( 4307 )
#define ERROR_NOT_ENOUGH_MEMORY __MSABI_LONG ( 8 )
#define ERROR_NOT_ENOUGH_QUOTA __MSABI_LONG ( 1816 )
#define ERROR_NOT_ENOUGH_SERVER_MEMORY __MSABI_LONG ( 1130 )
#define ERROR_NOT_EXPORT_FORMAT __MSABI_LONG ( 6008 )
#define ERROR_NOT_FOUND __MSABI_LONG ( 1168 )
#define ERROR_NOT_JOINED __MSABI_LONG ( 136 )
#define ERROR_NOT_LOCKED __MSABI_LONG ( 158 )
#define ERROR_NOT_LOGGED_ON __MSABI_LONG ( 1245 )
#define ERROR_NOT_LOGON_PROCESS __MSABI_LONG ( 1362 )
#define ERROR_NOT_OWNER __MSABI_LONG ( 288 )
#define ERROR_NOT_QUORUM_CAPABLE __MSABI_LONG ( 5021 )
#define ERROR_NOT_QUORUM_CLASS __MSABI_LONG ( 5025 )
#define ERROR_NOT_READY __MSABI_LONG ( 21 )
#define ERROR_NOT_REGISTRY_FILE __MSABI_LONG ( 1017 )
#define ERROR_NOT_SAFEBOOT_SERVICE __MSABI_LONG ( 1084 )
#define ERROR_NOT_SAME_DEVICE __MSABI_LONG ( 17 )
#define ERROR_NOT_SUBSTED __MSABI_LONG ( 137 )
#define ERROR_NOT_SUPPORTED __MSABI_LONG ( 50 )
#define ERROR_NOT_SUPPORTED_ON_SBS __MSABI_LONG ( 1254 )
#define ERROR_NOT_SUPPORTED_ON_STANDARD_SERVER __MSABI_LONG ( 8584 )
#define ERROR_NO_ASSOCIATION __MSABI_LONG ( 1155 )
#define ERROR_NO_BROWSER_SERVERS_FOUND __MSABI_LONG ( 6118 )
#define ERROR_NO_DATA __MSABI_LONG ( 232 )
#define ERROR_NO_DATA_DETECTED __MSABI_LONG ( 1104 )
#define ERROR_NO_EFS __MSABI_LONG ( 6004 )
#define ERROR_NO_IMPERSONATION_TOKEN __MSABI_LONG ( 1309 )
#define ERROR_NO_INHERITANCE __MSABI_LONG ( 1391 )
#define ERROR_NO_LOGON_SERVERS __MSABI_LONG ( 1311 )
#define ERROR_NO_LOG_SPACE __MSABI_LONG ( 1019 )
#define ERROR_NO_MATCH __MSABI_LONG ( 1169 )
#define ERROR_NO_MEDIA_IN_DRIVE __MSABI_LONG ( 1112 )
#define ERROR_NO_MORE_DEVICES __MSABI_LONG ( 1248 )
#define ERROR_NO_MORE_FILES __MSABI_LONG ( 18 )
#define ERROR_NO_MORE_ITEMS __MSABI_LONG ( 259 )
#define ERROR_NO_MORE_SEARCH_HANDLES __MSABI_LONG ( 113 )
#define ERROR_NO_MORE_USER_HANDLES __MSABI_LONG ( 1158 )
#define ERROR_NO_NETWORK __MSABI_LONG ( 1222 )
#define ERROR_NO_NET_OR_BAD_PATH __MSABI_LONG ( 1203 )
#define ERROR_NO_PROC_SLOTS __MSABI_LONG ( 89 )
#define ERROR_NO_PROMOTION_ACTIVE __MSABI_LONG ( 8222 )
#define ERROR_NO_QUOTAS_FOR_ACCOUNT __MSABI_LONG ( 1302 )
#define ERROR_NO_RECOVERY_POLICY __MSABI_LONG ( 6003 )
#define ERROR_NO_RECOVERY_PROGRAM __MSABI_LONG ( 1082 )
#define ERROR_NO_SCROLLBARS __MSABI_LONG ( 1447 )
#define ERROR_NO_SECURITY_ON_OBJECT __MSABI_LONG ( 1350 )
#define ERROR_NO_SHUTDOWN_IN_PROGRESS __MSABI_LONG ( 1116 )
#define ERROR_NO_SIGNAL_SENT __MSABI_LONG ( 205 )
#define ERROR_NO_SITENAME __MSABI_LONG ( 1919 )
#define ERROR_NO_SPOOL_SPACE __MSABI_LONG ( 62 )
#define ERROR_NO_SUCH_ALIAS __MSABI_LONG ( 1376 )
#define ERROR_NO_SUCH_DOMAIN __MSABI_LONG ( 1355 )
#define ERROR_NO_SUCH_GROUP __MSABI_LONG ( 1319 )
#define ERROR_NO_SUCH_LOGON_SESSION __MSABI_LONG ( 1312 )
#define ERROR_NO_SUCH_MEMBER __MSABI_LONG ( 1387 )
#define ERROR_NO_SUCH_PACKAGE __MSABI_LONG ( 1364 )
#define ERROR_NO_SUCH_PRIVILEGE __MSABI_LONG ( 1313 )
#define ERROR_NO_SUCH_SITE __MSABI_LONG ( 1249 )
#define ERROR_NO_SUCH_USER __MSABI_LONG ( 1317 )
#define ERROR_NO_SUPPORTING_DRIVES __MSABI_LONG ( 4339 )
#define ERROR_NO_SYSTEM_MENU __MSABI_LONG ( 1437 )
#define ERROR_NO_SYSTEM_RESOURCES __MSABI_LONG ( 1450 )
#define ERROR_NO_TOKEN __MSABI_LONG ( 1008 )
#define ERROR_NO_TRACKING_SERVICE __MSABI_LONG ( 1172 )
#define ERROR_NO_TRUST_LSA_SECRET __MSABI_LONG ( 1786 )
#define ERROR_NO_TRUST_SAM_ACCOUNT __MSABI_LONG ( 1787 )
#define ERROR_NO_UNICODE_TRANSLATION __MSABI_LONG ( 1113 )
#define ERROR_NO_USER_KEYS __MSABI_LONG ( 6006 )
#define ERROR_NO_USER_SESSION_KEY __MSABI_LONG ( 1394 )
#define ERROR_NO_VOLUME_ID __MSABI_LONG ( 1173 )
#define ERROR_NO_VOLUME_LABEL __MSABI_LONG ( 125 )
#define ERROR_NO_WILDCARD_CHARACTERS __MSABI_LONG ( 1417 )
#define ERROR_NT_CROSS_ENCRYPTION_REQUIRED __MSABI_LONG ( 1386 )
#define ERROR_NULL_LM_PASSWORD __MSABI_LONG ( 1304 )
#define ERROR_OBJECT_ALREADY_EXISTS __MSABI_LONG ( 5010 )
#define ERROR_OBJECT_IN_LIST __MSABI_LONG ( 5011 )
#define ERROR_OBJECT_NOT_FOUND __MSABI_LONG ( 4312 )
#define ERROR_OLD_WIN_VERSION __MSABI_LONG ( 1150 )
#define ERROR_ONLY_IF_CONNECTED __MSABI_LONG ( 1251 )
#define ERROR_OPEN_FAILED __MSABI_LONG ( 110 )
#define ERROR_OPEN_FILES __MSABI_LONG ( 2401 )
#define ERROR_OPERATION_ABORTED __MSABI_LONG ( 995 )
#define ERROR_OPLOCK_NOT_GRANTED __MSABI_LONG ( 300 )
#define ERROR_OUTOFMEMORY __MSABI_LONG ( 14 )
#define ERROR_OUT_OF_PAPER __MSABI_LONG ( 28 )
#define ERROR_OUT_OF_STRUCTURES __MSABI_LONG ( 84 )
#define ERROR_OVERRIDE_NOCHANGES __MSABI_LONG ( 1252 )
#define ERROR_PACKAGES_IN_USE __MSABI_LONG ( 15618 )
#define ERROR_PACKAGE_ALREADY_EXISTS __MSABI_LONG ( 15611 )
#define ERROR_PACKAGE_REPOSITORY_CORRUPTED __MSABI_LONG ( 15614 )
#define ERROR_PACKAGE_UPDATING __MSABI_LONG ( 15616 )
#define ERROR_PAGED_SYSTEM_RESOURCES __MSABI_LONG ( 1452 )
#define ERROR_PAGEFILE_QUOTA __MSABI_LONG ( 1454 )
#define ERROR_PARAMETER_QUOTA_EXCEEDED __MSABI_LONG ( 1283 )
#define ERROR_PARTIAL_COPY __MSABI_LONG ( 299 )
#define ERROR_PARTITION_FAILURE __MSABI_LONG ( 1105 )
#define ERROR_PASSWORD_EXPIRED __MSABI_LONG ( 1330 )
#define ERROR_PASSWORD_MUST_CHANGE __MSABI_LONG ( 1907 )
#define ERROR_PASSWORD_RESTRICTION __MSABI_LONG ( 1325 )
#define ERROR_PATCH_PACKAGE_INVALID __MSABI_LONG ( 1636 )
#define ERROR_PATCH_PACKAGE_OPEN_FAILED __MSABI_LONG ( 1635 )
#define ERROR_PATCH_PACKAGE_REJECTED __MSABI_LONG ( 1643 )
#define ERROR_PATCH_PACKAGE_UNSUPPORTED __MSABI_LONG ( 1637 )
#define ERROR_PATCH_TARGET_NOT_FOUND __MSABI_LONG ( 1642 )
#define ERROR_PATH_BUSY __MSABI_LONG ( 148 )
#define ERROR_PATH_NOT_FOUND __MSABI_LONG ( 3 )
#define ERROR_PER_USER_TRUST_QUOTA_EXCEEDED __MSABI_LONG ( 1932 )
#define ERROR_PIPE_BUSY __MSABI_LONG ( 231 )
#define ERROR_PIPE_CONNECTED __MSABI_LONG ( 535 )
#define ERROR_PIPE_LISTENING __MSABI_LONG ( 536 )
#define ERROR_PIPE_LOCAL __MSABI_LONG ( 229 )
#define ERROR_PIPE_NOT_CONNECTED __MSABI_LONG ( 233 )
#define ERROR_PKINIT_FAILURE __MSABI_LONG ( 1263 )
#define ERROR_POINT_NOT_FOUND __MSABI_LONG ( 1171 )
#define ERROR_POLICY_OBJECT_NOT_FOUND __MSABI_LONG ( 8219 )
#define ERROR_POLICY_ONLY_IN_DS __MSABI_LONG ( 8220 )
#define ERROR_POPUP_ALREADY_ACTIVE __MSABI_LONG ( 1446 )
#define ERROR_PORT_UNREACHABLE __MSABI_LONG ( 1234 )
#define ERROR_POSSIBLE_DEADLOCK __MSABI_LONG ( 1131 )
#define ERROR_POTENTIAL_FILE_FOUND __MSABI_LONG ( 1180 )
#define ERROR_PRINTER_ALREADY_EXISTS __MSABI_LONG ( 1802 )
#define ERROR_PRINTER_DELETED __MSABI_LONG ( 1905 )
#define ERROR_PRINTER_DRIVER_ALREADY_INSTALLED __MSABI_LONG ( 1795 )
#define ERROR_PRINTER_DRIVER_BLOCKED __MSABI_LONG ( 3014 )
#define ERROR_PRINTER_DRIVER_IN_USE __MSABI_LONG ( 3001 )
#define ERROR_PRINTER_DRIVER_WARNED __MSABI_LONG ( 3013 )
#define ERROR_PRINTER_HAS_JOBS_QUEUED __MSABI_LONG ( 3009 )
#define ERROR_PRINTER_NOT_FOUND __MSABI_LONG ( 3012 )
#define ERROR_PRINTQ_FULL __MSABI_LONG ( 61 )
#define ERROR_PRINT_CANCELLED __MSABI_LONG ( 63 )
#define ERROR_PRINT_MONITOR_ALREADY_INSTALLED __MSABI_LONG ( 3006 )
#define ERROR_PRINT_MONITOR_IN_USE __MSABI_LONG ( 3008 )
#define ERROR_PRINT_PROCESSOR_ALREADY_INSTALLED __MSABI_LONG ( 3005 )
#define ERROR_PRIVATE_DIALOG_INDEX __MSABI_LONG ( 1415 )
#define ERROR_PRIVILEGE_NOT_HELD __MSABI_LONG ( 1314 )
#define ERROR_PROCESS_ABORTED __MSABI_LONG ( 1067 )
#define ERROR_PROC_NOT_FOUND __MSABI_LONG ( 127 )
#define ERROR_PRODUCT_UNINSTALLED __MSABI_LONG ( 1614 )
#define ERROR_PRODUCT_VERSION __MSABI_LONG ( 1638 )
#define ERROR_PROFILE_NOT_ASSOCIATED_WITH_DEVICE __MSABI_LONG ( 2015 )
#define ERROR_PROFILE_NOT_FOUND __MSABI_LONG ( 2016 )
#define ERROR_PROMOTION_ACTIVE __MSABI_LONG ( 8221 )
#define ERROR_PROTOCOL_UNREACHABLE __MSABI_LONG ( 1233 )
#define ERROR_QUORUMLOG_OPEN_FAILED __MSABI_LONG ( 5028 )
#define ERROR_QUORUM_DISK_NOT_FOUND __MSABI_LONG ( 5086 )
#define ERROR_QUORUM_OWNER_ALIVE __MSABI_LONG ( 5034 )
#define ERROR_QUORUM_RESOURCE __MSABI_LONG ( 5020 )
#define ERROR_QUORUM_RESOURCE_ONLINE_FAILED __MSABI_LONG ( 5027 )
#define ERROR_READ_FAULT __MSABI_LONG ( 30 )
#define ERROR_RECOVERY_FAILURE __MSABI_LONG ( 1279 )
#define ERROR_RECOVERY_FILE_CORRUPT __MSABI_LONG ( 15619 )
#define ERROR_REC_NON_EXISTENT __MSABI_LONG ( 4005 )
#define ERROR_REDIRECTOR_HAS_OPEN_HANDLES __MSABI_LONG ( 1794 )
#define ERROR_REDIR_PAUSED __MSABI_LONG ( 72 )
#define ERROR_REGISTRY_CORRUPT __MSABI_LONG ( 1015 )
#define ERROR_REGISTRY_IO_FAILED __MSABI_LONG ( 1016 )
#define ERROR_REGISTRY_RECOVERED __MSABI_LONG ( 1014 )
#define ERROR_REG_NAT_CONSUMPTION __MSABI_LONG ( 1261 )
#define ERROR_RELOC_CHAIN_XEEDS_SEGLIM __MSABI_LONG ( 201 )
#define ERROR_REMOTE_PRINT_CONNECTIONS_BLOCKED __MSABI_LONG ( 1936 )
#define ERROR_REMOTE_SESSION_LIMIT_EXCEEDED __MSABI_LONG ( 1220 )
#define ERROR_REMOTE_STORAGE_MEDIA_ERROR __MSABI_LONG ( 4352 )
#define ERROR_REMOTE_STORAGE_NOT_ACTIVE __MSABI_LONG ( 4351 )
#define ERROR_REMOVE_FAILED __MSABI_LONG ( 15610 )
#define ERROR_REM_NOT_LIST __MSABI_LONG ( 51 )
#define ERROR_REPARSE_ATTRIBUTE_CONFLICT __MSABI_LONG ( 4391 )
#define ERROR_REPARSE_TAG_INVALID __MSABI_LONG ( 4393 )
#define ERROR_REPARSE_TAG_MISMATCH __MSABI_LONG ( 4394 )
#define ERROR_REQUEST_ABORTED __MSABI_LONG ( 1235 )
#define ERROR_REQUEST_REFUSED __MSABI_LONG ( 4320 )
#define ERROR_REQUIRES_INTERACTIVE_WINDOWSTATION __MSABI_LONG ( 1459 )
#define ERROR_REQ_NOT_ACCEP __MSABI_LONG ( 71 )
#define ERROR_RESILIENCY_FILE_CORRUPT __MSABI_LONG ( 15625 )
#define ERROR_RESMON_CREATE_FAILED __MSABI_LONG ( 5017 )
#define ERROR_RESMON_INVALID_STATE __MSABI_LONG ( 5084 )
#define ERROR_RESMON_ONLINE_FAILED __MSABI_LONG ( 5018 )
#define ERROR_RESOURCE_DATA_NOT_FOUND __MSABI_LONG ( 1812 )
#define ERROR_RESOURCE_DISABLED __MSABI_LONG ( 4309 )
#define ERROR_RESOURCE_ENUM_USER_STOP __MSABI_LONG ( 15106 )
#define ERROR_RESOURCE_FAILED __MSABI_LONG ( 5038 )
#define ERROR_RESOURCE_LANG_NOT_FOUND __MSABI_LONG ( 1815 )
#define ERROR_RESOURCE_NAME_NOT_FOUND __MSABI_LONG ( 1814 )
#define ERROR_RESOURCE_NOT_AVAILABLE __MSABI_LONG ( 5006 )
#define ERROR_RESOURCE_NOT_FOUND __MSABI_LONG ( 5007 )
#define ERROR_RESOURCE_NOT_ONLINE __MSABI_LONG ( 5004 )
#define ERROR_RESOURCE_NOT_PRESENT __MSABI_LONG ( 4316 )
#define ERROR_RESOURCE_ONLINE __MSABI_LONG ( 5019 )
#define ERROR_RESOURCE_PROPERTIES_STORED __MSABI_LONG ( 5024 )
#define ERROR_RESOURCE_PROPERTY_UNCHANGEABLE __MSABI_LONG ( 5089 )
#define ERROR_RESOURCE_TYPE_NOT_FOUND __MSABI_LONG ( 1813 )
#define ERROR_RETRY __MSABI_LONG ( 1237 )
#define ERROR_REVISION_MISMATCH __MSABI_LONG ( 1306 )
#define ERROR_RING2SEG_MUST_BE_MOVABLE __MSABI_LONG ( 200 )
#define ERROR_RING2_STACK_IN_USE __MSABI_LONG ( 207 )
#define ERROR_RMODE_APP __MSABI_LONG ( 1153 )
#define ERROR_RPL_NOT_ALLOWED __MSABI_LONG ( 4006 )
#define ERROR_RUNLEVEL_SWITCH_AGENT_TIMEOUT __MSABI_LONG ( 15403 )
#define ERROR_RUNLEVEL_SWITCH_IN_PROGRESS __MSABI_LONG ( 15404 )
#define ERROR_RUNLEVEL_SWITCH_TIMEOUT __MSABI_LONG ( 15402 )
#define ERROR_RXACT_COMMIT_FAILURE __MSABI_LONG ( 1370 )
#define ERROR_RXACT_INVALID_STATE __MSABI_LONG ( 1369 )
#define ERROR_SAME_DRIVE __MSABI_LONG ( 143 )
#define ERROR_SAM_INIT_FAILURE __MSABI_LONG ( 8541 )
#define ERROR_SCOPE_NOT_FOUND __MSABI_LONG ( 318 )
#define ERROR_SCREEN_ALREADY_LOCKED __MSABI_LONG ( 1440 )
#define ERROR_SECONDARY_IC_PROVIDER_NOT_REGISTERED __MSABI_LONG ( 15321 )
#define ERROR_SECRET_TOO_LONG __MSABI_LONG ( 1382 )
#define ERROR_SECTOR_NOT_FOUND __MSABI_LONG ( 27 )
#define ERROR_SEEK __MSABI_LONG ( 25 )
#define ERROR_SEEK_ON_DEVICE __MSABI_LONG ( 132 )
#define ERROR_SEM_IS_SET __MSABI_LONG ( 102 )
#define ERROR_SEM_NOT_FOUND __MSABI_LONG ( 187 )
#define ERROR_SEM_OWNER_DIED __MSABI_LONG ( 105 )
#define ERROR_SEM_TIMEOUT __MSABI_LONG ( 121 )
#define ERROR_SEM_USER_LIMIT __MSABI_LONG ( 106 )
#define ERROR_SERIAL_NO_DEVICE __MSABI_LONG ( 1118 )
#define ERROR_SERVER_DISABLED __MSABI_LONG ( 1341 )
#define ERROR_SERVER_HAS_OPEN_HANDLES __MSABI_LONG ( 1811 )
#define ERROR_SERVER_NOT_DISABLED __MSABI_LONG ( 1342 )
#define ERROR_SERVER_SHUTDOWN_IN_PROGRESS __MSABI_LONG ( 1255 )
#define ERROR_SERVICES_FAILED_AUTOSTART __MSABI_LONG ( 15405 )
#define ERROR_SERVICE_ALREADY_RUNNING __MSABI_LONG ( 1056 )
#define ERROR_SERVICE_CANNOT_ACCEPT_CTRL __MSABI_LONG ( 1061 )
#define ERROR_SERVICE_DATABASE_LOCKED __MSABI_LONG ( 1055 )
#define ERROR_SERVICE_DEPENDENCY_DELETED __MSABI_LONG ( 1075 )
#define ERROR_SERVICE_DEPENDENCY_FAIL __MSABI_LONG ( 1068 )
#define ERROR_SERVICE_DISABLED __MSABI_LONG ( 1058 )
#define ERROR_SERVICE_DOES_NOT_EXIST __MSABI_LONG ( 1060 )
#define ERROR_SERVICE_EXISTS __MSABI_LONG ( 1073 )
#define ERROR_SERVICE_LOGON_FAILED __MSABI_LONG ( 1069 )
#define ERROR_SERVICE_MARKED_FOR_DELETE __MSABI_LONG ( 1072 )
#define ERROR_SERVICE_NEVER_STARTED __MSABI_LONG ( 1077 )
#define ERROR_SERVICE_NOT_ACTIVE __MSABI_LONG ( 1062 )
#define ERROR_SERVICE_NOT_FOUND __MSABI_LONG ( 1243 )
#define ERROR_SERVICE_NOT_IN_EXE __MSABI_LONG ( 1083 )
#define ERROR_SERVICE_NO_THREAD __MSABI_LONG ( 1054 )
#define ERROR_SERVICE_REQUEST_TIMEOUT __MSABI_LONG ( 1053 )
#define ERROR_SERVICE_SPECIFIC_ERROR __MSABI_LONG ( 1066 )
#define ERROR_SERVICE_START_HANG __MSABI_LONG ( 1070 )
#define ERROR_SESSION_CREDENTIAL_CONFLICT __MSABI_LONG ( 1219 )
#define ERROR_SETCOUNT_ON_BAD_LB __MSABI_LONG ( 1433 )
#define ERROR_SETMARK_DETECTED __MSABI_LONG ( 1103 )
#define ERROR_SET_NOT_FOUND __MSABI_LONG ( 1170 )
#define ERROR_SET_POWER_STATE_FAILED __MSABI_LONG ( 1141 )
#define ERROR_SET_POWER_STATE_VETOED __MSABI_LONG ( 1140 )
#define ERROR_SEVERITY_ERROR (3221225472u)
#define ERROR_SEVERITY_INFORMATIONAL (1073741824)
#define ERROR_SEVERITY_SUCCESS (0)
#define ERROR_SEVERITY_WARNING (2147483648u)
#define ERROR_SHARED_POLICY __MSABI_LONG ( 8218 )
#define ERROR_SHARING_BUFFER_EXCEEDED __MSABI_LONG ( 36 )
#define ERROR_SHARING_PAUSED __MSABI_LONG ( 70 )
#define ERROR_SHARING_VIOLATION __MSABI_LONG ( 32 )
#define ERROR_SHUTDOWN_CLUSTER __MSABI_LONG ( 5008 )
#define ERROR_SHUTDOWN_IN_PROGRESS __MSABI_LONG ( 1115 )
#define ERROR_SIGNAL_PENDING __MSABI_LONG ( 162 )
#define ERROR_SIGNAL_REFUSED __MSABI_LONG ( 156 )
#define ERROR_SINGLE_INSTANCE_APP __MSABI_LONG ( 1152 )
#define ERROR_SLOT_NOT_PRESENT (4)
#define ERROR_SMARTCARD_SUBSYSTEM_FAILURE __MSABI_LONG ( 1264 )
#define ERROR_SMI_PRIMITIVE_INSTALLER_FAILED __MSABI_LONG ( 14108 )
#define ERROR_SOME_NOT_MAPPED __MSABI_LONG ( 1301 )
#define ERROR_SOURCE_ELEMENT_EMPTY __MSABI_LONG ( 1160 )
#define ERROR_SPECIAL_ACCOUNT __MSABI_LONG ( 1371 )
#define ERROR_SPECIAL_GROUP __MSABI_LONG ( 1372 )
#define ERROR_SPECIAL_USER __MSABI_LONG ( 1373 )
#define ERROR_SPL_NO_ADDJOB __MSABI_LONG ( 3004 )
#define ERROR_SPL_NO_STARTDOC __MSABI_LONG ( 3003 )
#define ERROR_SPOOL_FILE_NOT_FOUND __MSABI_LONG ( 3002 )
#define ERROR_STACK_BUFFER_OVERRUN __MSABI_LONG ( 1282 )
#define ERROR_STACK_OVERFLOW __MSABI_LONG ( 1001 )
#define ERROR_STATE_COMPOSITE_SETTING_VALUE_SIZE_LIMIT_EXCEEDED __MSABI_LONG ( 15815 )
#define ERROR_STATE_CONTAINER_NAME_SIZE_LIMIT_EXCEEDED __MSABI_LONG ( 15818 )
#define ERROR_STATE_CREATE_CONTAINER_FAILED __MSABI_LONG ( 15805 )
#define ERROR_STATE_DELETE_CONTAINER_FAILED __MSABI_LONG ( 15806 )
#define ERROR_STATE_DELETE_SETTING_FAILED __MSABI_LONG ( 15809 )
#define ERROR_STATE_ENUMERATE_CONTAINER_FAILED __MSABI_LONG ( 15813 )
#define ERROR_STATE_ENUMERATE_SETTINGS_FAILED __MSABI_LONG ( 15814 )
#define ERROR_STATE_GET_VERSION_FAILED __MSABI_LONG ( 15801 )
#define ERROR_STATE_LOAD_STORE_FAILED __MSABI_LONG ( 15800 )
#define ERROR_STATE_OPEN_CONTAINER_FAILED __MSABI_LONG ( 15804 )
#define ERROR_STATE_QUERY_SETTING_FAILED __MSABI_LONG ( 15810 )
#define ERROR_STATE_READ_COMPOSITE_SETTING_FAILED __MSABI_LONG ( 15811 )
#define ERROR_STATE_READ_SETTING_FAILED __MSABI_LONG ( 15807 )
#define ERROR_STATE_SETTING_NAME_SIZE_LIMIT_EXCEEDED __MSABI_LONG ( 15817 )
#define ERROR_STATE_SETTING_VALUE_SIZE_LIMIT_EXCEEDED __MSABI_LONG ( 15816 )
#define ERROR_STATE_SET_VERSION_FAILED __MSABI_LONG ( 15802 )
#define ERROR_STATE_STRUCTURED_RESET_FAILED __MSABI_LONG ( 15803 )
#define ERROR_STATE_WRITE_COMPOSITE_SETTING_FAILED __MSABI_LONG ( 15812 )
#define ERROR_STATE_WRITE_SETTING_FAILED __MSABI_LONG ( 15808 )
#define ERROR_STATIC_INIT __MSABI_LONG ( 4002 )
#define ERROR_SUBST_TO_JOIN __MSABI_LONG ( 141 )
#define ERROR_SUBST_TO_SUBST __MSABI_LONG ( 139 )
#define ERROR_SUCCESS __MSABI_LONG ( 0 )
#define ERROR_SUCCESS_REBOOT_INITIATED __MSABI_LONG ( 1641 )
#define ERROR_SUCCESS_REBOOT_REQUIRED __MSABI_LONG ( 3010 )
#define ERROR_SUCCESS_RESTART_REQUIRED __MSABI_LONG ( 3011 )
#define ERROR_SWAPERROR __MSABI_LONG ( 999 )
#define ERROR_SXS_ACTIVATION_CONTEXT_DISABLED __MSABI_LONG ( 14006 )
#define ERROR_SXS_ASSEMBLY_IS_NOT_A_DEPLOYMENT __MSABI_LONG ( 14103 )
#define ERROR_SXS_ASSEMBLY_MISSING __MSABI_LONG ( 14081 )
#define ERROR_SXS_ASSEMBLY_NOT_FOUND __MSABI_LONG ( 14003 )
#define ERROR_SXS_ASSEMBLY_NOT_LOCKED __MSABI_LONG ( 14097 )
#define ERROR_SXS_CANT_GEN_ACTCTX __MSABI_LONG ( 14001 )
#define ERROR_SXS_COMPONENT_STORE_CORRUPT __MSABI_LONG ( 14098 )
#define ERROR_SXS_CORRUPTION __MSABI_LONG ( 14083 )
#define ERROR_SXS_CORRUPT_ACTIVATION_STACK __MSABI_LONG ( 14082 )
#define ERROR_SXS_DUPLICATE_ASSEMBLY_NAME __MSABI_LONG ( 14027 )
#define ERROR_SXS_DUPLICATE_CLSID __MSABI_LONG ( 14023 )
#define ERROR_SXS_DUPLICATE_DLL_NAME __MSABI_LONG ( 14021 )
#define ERROR_SXS_DUPLICATE_IID __MSABI_LONG ( 14024 )
#define ERROR_SXS_DUPLICATE_PROGID __MSABI_LONG ( 14026 )
#define ERROR_SXS_DUPLICATE_TLBID __MSABI_LONG ( 14025 )
#define ERROR_SXS_DUPLICATE_WINDOWCLASS_NAME __MSABI_LONG ( 14022 )
#define ERROR_SXS_EARLY_DEACTIVATION __MSABI_LONG ( 14084 )
#define ERROR_SXS_FILE_HASH_MISMATCH __MSABI_LONG ( 14028 )
#define ERROR_SXS_FILE_HASH_MISSING __MSABI_LONG ( 14110 )
#define ERROR_SXS_FILE_NOT_PART_OF_ASSEMBLY __MSABI_LONG ( 14104 )
#define ERROR_SXS_IDENTITIES_DIFFERENT __MSABI_LONG ( 14102 )
#define ERROR_SXS_IDENTITY_DUPLICATE_ATTRIBUTE __MSABI_LONG ( 14092 )
#define ERROR_SXS_IDENTITY_PARSE_ERROR __MSABI_LONG ( 14093 )
#define ERROR_SXS_INCORRECT_PUBLIC_KEY_TOKEN __MSABI_LONG ( 14095 )
#define ERROR_SXS_INVALID_ACTCTXDATA_FORMAT __MSABI_LONG ( 14002 )
#define ERROR_SXS_INVALID_ASSEMBLY_IDENTITY_ATTRIBUTE __MSABI_LONG ( 14017 )
#define ERROR_SXS_INVALID_ASSEMBLY_IDENTITY_ATTRIBUTE_NAME __MSABI_LONG ( 14080 )
#define ERROR_SXS_INVALID_DEACTIVATION __MSABI_LONG ( 14085 )
#define ERROR_SXS_INVALID_IDENTITY_ATTRIBUTE_NAME __MSABI_LONG ( 14091 )
#define ERROR_SXS_INVALID_IDENTITY_ATTRIBUTE_VALUE __MSABI_LONG ( 14090 )
#define ERROR_SXS_INVALID_XML_NAMESPACE_URI __MSABI_LONG ( 14014 )
#define ERROR_SXS_KEY_NOT_FOUND __MSABI_LONG ( 14007 )
#define ERROR_SXS_LEAF_MANIFEST_DEPENDENCY_NOT_INSTALLED __MSABI_LONG ( 14016 )
#define ERROR_SXS_MANIFEST_FORMAT_ERROR __MSABI_LONG ( 14004 )
#define ERROR_SXS_MANIFEST_IDENTITY_SAME_BUT_CONTENTS_DIFFERENT __MSABI_LONG ( 14101 )
#define ERROR_SXS_MANIFEST_INVALID_REQUIRED_DEFAULT_NAMESPACE __MSABI_LONG ( 14019 )
#define ERROR_SXS_MANIFEST_MISSING_REQUIRED_DEFAULT_NAMESPACE __MSABI_LONG ( 14018 )
#define ERROR_SXS_MANIFEST_PARSE_ERROR __MSABI_LONG ( 14005 )
#define ERROR_SXS_MANIFEST_TOO_BIG __MSABI_LONG ( 14105 )
#define ERROR_SXS_MISSING_ASSEMBLY_IDENTITY_ATTRIBUTE __MSABI_LONG ( 14079 )
#define ERROR_SXS_MULTIPLE_DEACTIVATION __MSABI_LONG ( 14086 )
#define ERROR_SXS_POLICY_PARSE_ERROR __MSABI_LONG ( 14029 )
#define ERROR_SXS_PRIVATE_MANIFEST_CROSS_PATH_WITH_REPARSE_POINT __MSABI_LONG ( 14020 )
#define ERROR_SXS_PROCESS_DEFAULT_ALREADY_SET __MSABI_LONG ( 14011 )
#define ERROR_SXS_PROCESS_TERMINATION_REQUESTED __MSABI_LONG ( 14087 )
#define ERROR_SXS_PROTECTION_CATALOG_FILE_MISSING __MSABI_LONG ( 14078 )
#define ERROR_SXS_PROTECTION_CATALOG_NOT_VALID __MSABI_LONG ( 14076 )
#define ERROR_SXS_PROTECTION_PUBLIC_KEY_TOO_SHORT __MSABI_LONG ( 14075 )
#define ERROR_SXS_PROTECTION_RECOVERY_FAILED __MSABI_LONG ( 14074 )
#define ERROR_SXS_RELEASE_ACTIVATION_CONTEXT __MSABI_LONG ( 14088 )
#define ERROR_SXS_ROOT_MANIFEST_DEPENDENCY_NOT_INSTALLED __MSABI_LONG ( 14015 )
#define ERROR_SXS_SECTION_NOT_FOUND __MSABI_LONG ( 14000 )
#define ERROR_SXS_SETTING_NOT_REGISTERED __MSABI_LONG ( 14106 )
#define ERROR_SXS_SYSTEM_DEFAULT_ACTIVATION_CONTEXT_EMPTY __MSABI_LONG ( 14089 )
#define ERROR_SXS_THREAD_QUERIES_DISABLED __MSABI_LONG ( 14010 )
#define ERROR_SXS_TRANSACTION_CLOSURE_INCOMPLETE __MSABI_LONG ( 14107 )
#define ERROR_SXS_UNKNOWN_ENCODING __MSABI_LONG ( 14013 )
#define ERROR_SXS_UNKNOWN_ENCODING_GROUP __MSABI_LONG ( 14012 )
#define ERROR_SXS_UNTRANSLATABLE_HRESULT __MSABI_LONG ( 14077 )
#define ERROR_SXS_VERSION_CONFLICT __MSABI_LONG ( 14008 )
#define ERROR_SXS_WRONG_SECTION_TYPE __MSABI_LONG ( 14009 )
#define ERROR_SXS_XML_E_BADCHARDATA __MSABI_LONG ( 14036 )
#define ERROR_SXS_XML_E_BADCHARINSTRING __MSABI_LONG ( 14034 )
#define ERROR_SXS_XML_E_BADNAMECHAR __MSABI_LONG ( 14033 )
#define ERROR_SXS_XML_E_BADPEREFINSUBSET __MSABI_LONG ( 14059 )
#define ERROR_SXS_XML_E_BADSTARTNAMECHAR __MSABI_LONG ( 14032 )
#define ERROR_SXS_XML_E_BADXMLCASE __MSABI_LONG ( 14069 )
#define ERROR_SXS_XML_E_BADXMLDECL __MSABI_LONG ( 14056 )
#define ERROR_SXS_XML_E_COMMENTSYNTAX __MSABI_LONG ( 14031 )
#define ERROR_SXS_XML_E_DUPLICATEATTRIBUTE __MSABI_LONG ( 14053 )
#define ERROR_SXS_XML_E_EXPECTINGCLOSEQUOTE __MSABI_LONG ( 14045 )
#define ERROR_SXS_XML_E_EXPECTINGTAGEND __MSABI_LONG ( 14038 )
#define ERROR_SXS_XML_E_INCOMPLETE_ENCODING __MSABI_LONG ( 14043 )
#define ERROR_SXS_XML_E_INTERNALERROR __MSABI_LONG ( 14041 )
#define ERROR_SXS_XML_E_INVALIDATROOTLEVEL __MSABI_LONG ( 14055 )
#define ERROR_SXS_XML_E_INVALIDENCODING __MSABI_LONG ( 14067 )
#define ERROR_SXS_XML_E_INVALIDSWITCH __MSABI_LONG ( 14068 )
#define ERROR_SXS_XML_E_INVALID_DECIMAL __MSABI_LONG ( 14047 )
#define ERROR_SXS_XML_E_INVALID_HEXIDECIMAL __MSABI_LONG ( 14048 )
#define ERROR_SXS_XML_E_INVALID_STANDALONE __MSABI_LONG ( 14070 )
#define ERROR_SXS_XML_E_INVALID_UNICODE __MSABI_LONG ( 14049 )
#define ERROR_SXS_XML_E_INVALID_VERSION __MSABI_LONG ( 14072 )
#define ERROR_SXS_XML_E_MISSINGEQUALS __MSABI_LONG ( 14073 )
#define ERROR_SXS_XML_E_MISSINGQUOTE __MSABI_LONG ( 14030 )
#define ERROR_SXS_XML_E_MISSINGROOT __MSABI_LONG ( 14057 )
#define ERROR_SXS_XML_E_MISSINGSEMICOLON __MSABI_LONG ( 14039 )
#define ERROR_SXS_XML_E_MISSINGWHITESPACE __MSABI_LONG ( 14037 )
#define ERROR_SXS_XML_E_MISSING_PAREN __MSABI_LONG ( 14044 )
#define ERROR_SXS_XML_E_MULTIPLEROOTS __MSABI_LONG ( 14054 )
#define ERROR_SXS_XML_E_MULTIPLE_COLONS __MSABI_LONG ( 14046 )
#define ERROR_SXS_XML_E_RESERVEDNAMESPACE __MSABI_LONG ( 14066 )
#define ERROR_SXS_XML_E_UNBALANCEDPAREN __MSABI_LONG ( 14040 )
#define ERROR_SXS_XML_E_UNCLOSEDCDATA __MSABI_LONG ( 14065 )
#define ERROR_SXS_XML_E_UNCLOSEDCOMMENT __MSABI_LONG ( 14063 )
#define ERROR_SXS_XML_E_UNCLOSEDDECL __MSABI_LONG ( 14064 )
#define ERROR_SXS_XML_E_UNCLOSEDENDTAG __MSABI_LONG ( 14061 )
#define ERROR_SXS_XML_E_UNCLOSEDSTARTTAG __MSABI_LONG ( 14060 )
#define ERROR_SXS_XML_E_UNCLOSEDSTRING __MSABI_LONG ( 14062 )
#define ERROR_SXS_XML_E_UNCLOSEDTAG __MSABI_LONG ( 14052 )
#define ERROR_SXS_XML_E_UNEXPECTEDENDTAG __MSABI_LONG ( 14051 )
#define ERROR_SXS_XML_E_UNEXPECTEDEOF __MSABI_LONG ( 14058 )
#define ERROR_SXS_XML_E_UNEXPECTED_STANDALONE __MSABI_LONG ( 14071 )
#define ERROR_SXS_XML_E_UNEXPECTED_WHITESPACE __MSABI_LONG ( 14042 )
#define ERROR_SXS_XML_E_WHITESPACEORQUESTIONMARK __MSABI_LONG ( 14050 )
#define ERROR_SXS_XML_E_XMLDECLSYNTAX __MSABI_LONG ( 14035 )
#define ERROR_SYNC_FOREGROUND_REFRESH_REQUIRED __MSABI_LONG ( 1274 )
#define ERROR_SYSTEM_DEVICE_NOT_FOUND __MSABI_LONG ( 15299 )
#define ERROR_SYSTEM_NEEDS_REMEDIATION __MSABI_LONG ( 15623 )
#define ERROR_SYSTEM_TRACE __MSABI_LONG ( 150 )
#define ERROR_TAG_NOT_FOUND __MSABI_LONG ( 2012 )
#define ERROR_TAG_NOT_PRESENT __MSABI_LONG ( 2013 )
#define ERROR_THREAD_1_INACTIVE __MSABI_LONG ( 210 )
#define ERROR_TIMEOUT __MSABI_LONG ( 1460 )
#define ERROR_TIME_SKEW __MSABI_LONG ( 1398 )
#define ERROR_TLW_WITH_WSCHILD __MSABI_LONG ( 1406 )
#define ERROR_TOKEN_ALREADY_IN_USE __MSABI_LONG ( 1375 )
#define ERROR_TOO_MANY_CMDS __MSABI_LONG ( 56 )
#define ERROR_TOO_MANY_CONTEXT_IDS __MSABI_LONG ( 1384 )
#define ERROR_TOO_MANY_LINKS __MSABI_LONG ( 1142 )
#define ERROR_TOO_MANY_LUIDS_REQUESTED __MSABI_LONG ( 1333 )
#define ERROR_TOO_MANY_MODULES __MSABI_LONG ( 214 )
#define ERROR_TOO_MANY_MUXWAITERS __MSABI_LONG ( 152 )
#define ERROR_TOO_MANY_NAMES __MSABI_LONG ( 68 )
#define ERROR_TOO_MANY_OPEN_FILES __MSABI_LONG ( 4 )
#define ERROR_TOO_MANY_POSTS __MSABI_LONG ( 298 )
#define ERROR_TOO_MANY_SECRETS __MSABI_LONG ( 1381 )
#define ERROR_TOO_MANY_SEMAPHORES __MSABI_LONG ( 100 )
#define ERROR_TOO_MANY_SEM_REQUESTS __MSABI_LONG ( 103 )
#define ERROR_TOO_MANY_SESS __MSABI_LONG ( 69 )
#define ERROR_TOO_MANY_SIDS __MSABI_LONG ( 1389 )
#define ERROR_TOO_MANY_TCBS __MSABI_LONG ( 155 )
#define ERROR_TRANSFORM_NOT_SUPPORTED __MSABI_LONG ( 2004 )
#define ERROR_TRANSPORT_FULL __MSABI_LONG ( 4328 )
#define ERROR_TRAY_MALFUNCTION (16)
#define ERROR_TRUSTED_DOMAIN_FAILURE __MSABI_LONG ( 1788 )
#define ERROR_TRUSTED_RELATIONSHIP_FAILURE __MSABI_LONG ( 1789 )
#define ERROR_TRUST_FAILURE __MSABI_LONG ( 1790 )
#define ERROR_UNABLE_TO_CLEAN __MSABI_LONG ( 4311 )
#define ERROR_UNABLE_TO_EJECT_MOUNTED_MEDIA __MSABI_LONG ( 4330 )
#define ERROR_UNABLE_TO_INVENTORY_DRIVE __MSABI_LONG ( 4325 )
#define ERROR_UNABLE_TO_INVENTORY_SLOT __MSABI_LONG ( 4326 )
#define ERROR_UNABLE_TO_INVENTORY_TRANSPORT __MSABI_LONG ( 4327 )
#define ERROR_UNABLE_TO_LOAD_MEDIUM __MSABI_LONG ( 4324 )
#define ERROR_UNABLE_TO_LOCK_MEDIA __MSABI_LONG ( 1108 )
#define ERROR_UNABLE_TO_MOVE_REPLACEMENT __MSABI_LONG ( 1176 )
#define ERROR_UNABLE_TO_MOVE_REPLACEMENT_2 __MSABI_LONG ( 1177 )
#define ERROR_UNABLE_TO_REMOVE_REPLACED __MSABI_LONG ( 1175 )
#define ERROR_UNABLE_TO_UNLOAD_MEDIA __MSABI_LONG ( 1109 )
#define ERROR_UNEXPECTED_OMID __MSABI_LONG ( 4334 )
#define ERROR_UNEXP_NET_ERR __MSABI_LONG ( 59 )
#define ERROR_UNHANDLED_ERROR (4294967295u)
#define ERROR_UNIDENTIFIED_ERROR __MSABI_LONG ( 1287 )
#define ERROR_UNKNOWN_COMPONENT __MSABI_LONG ( 1607 )
#define ERROR_UNKNOWN_FEATURE __MSABI_LONG ( 1606 )
#define ERROR_UNKNOWN_PORT __MSABI_LONG ( 1796 )
#define ERROR_UNKNOWN_PRINTER_DRIVER __MSABI_LONG ( 1797 )
#define ERROR_UNKNOWN_PRINTPROCESSOR __MSABI_LONG ( 1798 )
#define ERROR_UNKNOWN_PRINT_MONITOR __MSABI_LONG ( 3000 )
#define ERROR_UNKNOWN_PRODUCT __MSABI_LONG ( 1605 )
#define ERROR_UNKNOWN_PROPERTY __MSABI_LONG ( 1608 )
#define ERROR_UNKNOWN_REVISION __MSABI_LONG ( 1305 )
#define ERROR_UNMAPPED_SUBSTITUTION_STRING __MSABI_LONG ( 14096 )
#define ERROR_UNRECOGNIZED_MEDIA __MSABI_LONG ( 1785 )
#define ERROR_UNRECOGNIZED_VOLUME __MSABI_LONG ( 1005 )
#define ERROR_UNSUPPORTED_TYPE __MSABI_LONG ( 1630 )
#define ERROR_USER_APC __MSABI_LONG ( 737 )
#define ERROR_USER_DELETE_TRUST_QUOTA_EXCEEDED __MSABI_LONG ( 1934 )
#define ERROR_USER_EXISTS __MSABI_LONG ( 1316 )
#define ERROR_USER_MAPPED_FILE __MSABI_LONG ( 1224 )
#define ERROR_VC_DISCONNECTED __MSABI_LONG ( 240 )
#define ERROR_VDM_DISALLOWED __MSABI_LONG ( 1286 )
#define ERROR_VOLUME_CONTAINS_SYS_FILES __MSABI_LONG ( 4337 )
#define ERROR_VOLUME_NOT_SIS_ENABLED __MSABI_LONG ( 4500 )
#define ERROR_VOLUME_NOT_SUPPORT_EFS __MSABI_LONG ( 6014 )
#define ERROR_WAIT_1 __MSABI_LONG ( 731 )
#define ERROR_WAIT_2 __MSABI_LONG ( 732 )
#define ERROR_WAIT_3 __MSABI_LONG ( 733 )
#define ERROR_WAIT_63 __MSABI_LONG ( 734 )
#define ERROR_WAIT_NO_CHILDREN __MSABI_LONG ( 128 )
#define ERROR_WAKE_SYSTEM __MSABI_LONG ( 730 )
#define ERROR_WINDOW_NOT_COMBOBOX __MSABI_LONG ( 1423 )
#define ERROR_WINDOW_NOT_DIALOG __MSABI_LONG ( 1420 )
#define ERROR_WINDOW_OF_OTHER_THREAD __MSABI_LONG ( 1408 )
#define ERROR_WINS_INTERNAL __MSABI_LONG ( 4000 )
#define ERROR_WMI_ALREADY_DISABLED __MSABI_LONG ( 4212 )
#define ERROR_WMI_ALREADY_ENABLED __MSABI_LONG ( 4206 )
#define ERROR_WMI_DP_FAILED __MSABI_LONG ( 4209 )
#define ERROR_WMI_DP_NOT_FOUND __MSABI_LONG ( 4204 )
#define ERROR_WMI_GUID_DISCONNECTED __MSABI_LONG ( 4207 )
#define ERROR_WMI_GUID_NOT_FOUND __MSABI_LONG ( 4200 )
#define ERROR_WMI_INSTANCE_NOT_FOUND __MSABI_LONG ( 4201 )
#define ERROR_WMI_INVALID_MOF __MSABI_LONG ( 4210 )
#define ERROR_WMI_INVALID_REGINFO __MSABI_LONG ( 4211 )
#define ERROR_WMI_ITEMID_NOT_FOUND __MSABI_LONG ( 4202 )
#define ERROR_WMI_READ_ONLY __MSABI_LONG ( 4213 )
#define ERROR_WMI_SERVER_UNAVAILABLE __MSABI_LONG ( 4208 )
#define ERROR_WMI_SET_FAILURE __MSABI_LONG ( 4214 )
#define ERROR_WMI_TRY_AGAIN __MSABI_LONG ( 4203 )
#define ERROR_WMI_UNRESOLVED_INSTANCE_REF __MSABI_LONG ( 4205 )
#define ERROR_WORKING_SET_QUOTA __MSABI_LONG ( 1453 )
#define ERROR_WRITE_FAULT __MSABI_LONG ( 29 )
#define ERROR_WRITE_PROTECT __MSABI_LONG ( 19 )
#define ERROR_WRONG_DISK __MSABI_LONG ( 34 )
#define ERROR_WRONG_EFS __MSABI_LONG ( 6005 )
#define ERROR_WRONG_PASSWORD __MSABI_LONG ( 1323 )
#define ERROR_WRONG_TARGET_NAME __MSABI_LONG ( 1396 )
#define ERROR_XML_ENCODING_MISMATCH __MSABI_LONG ( 14100 )
#define ESB_DISABLE_BOTH (3)
#define ESB_DISABLE_DOWN (2)
#define ESB_DISABLE_LEFT (1)
#define ESB_DISABLE_LTUP ESB_DISABLE_LEFT
#define ESB_DISABLE_RIGHT (2)
#define ESB_DISABLE_RTDN ESB_DISABLE_RIGHT
#define ESB_DISABLE_UP (1)
#define ESB_ENABLE_BOTH (0)
#define ES_AUTOHSCROLL __MSABI_LONG ( 0x0080 )
#define ES_AUTOVSCROLL __MSABI_LONG ( 0x0040 )
#define ES_AWAYMODE_REQUIRED ( ( DWORD ) 0x00000040 )
#define ES_CENTER __MSABI_LONG ( 0x0001 )
#define ES_CONTINUOUS ( ( DWORD ) 0x80000000 )
#define ES_DISPLAY_REQUIRED ( ( DWORD ) 0x00000002 )
#define ES_LEFT __MSABI_LONG ( 0x0000 )
#define ES_LOWERCASE __MSABI_LONG ( 0x0010 )
#define ES_MULTILINE __MSABI_LONG ( 0x0004 )
#define ES_NOHIDESEL __MSABI_LONG ( 0x0100 )
#define ES_NUMBER __MSABI_LONG ( 0x2000 )
#define ES_OEMCONVERT __MSABI_LONG ( 0x0400 )
#define ES_PASSWORD __MSABI_LONG ( 0x0020 )
#define ES_READONLY __MSABI_LONG ( 0x0800 )
#define ES_RIGHT __MSABI_LONG ( 0x0002 )
#define ES_SYSTEM_REQUIRED ( ( DWORD ) 0x00000001 )
#define ES_UPPERCASE __MSABI_LONG ( 0x0008 )
#define ES_USER_PRESENT ( ( DWORD ) 0x00000004 )
#define ES_WANTRETURN __MSABI_LONG ( 0x1000 )
#define ETO_CLIPPED (4)
#define ETO_GLYPH_INDEX (16)
#define ETO_IGNORELANGUAGE (4096)
#define ETO_NUMERICSLATIN (2048)
#define ETO_NUMERICSLOCAL (1024)
#define ETO_OPAQUE (2)
#define ETO_PDY (8192)
#define ETO_RTLREADING (128)
#define EVENPARITY (2)
#define EVENTLOG_AUDIT_FAILURE (16)
#define EVENTLOG_AUDIT_SUCCESS (8)
#define EVENTLOG_BACKWARDS_READ (8)
#define EVENTLOG_END_ALL_PAIRED_EVENTS (4)
#define EVENTLOG_END_PAIRED_EVENT (2)
#define EVENTLOG_ERROR_TYPE (1)
#define EVENTLOG_FORWARDS_READ (4)
#define EVENTLOG_FULL_INFO (0)
#define EVENTLOG_INFORMATION_TYPE (4)
#define EVENTLOG_PAIRED_EVENT_ACTIVE (8)
#define EVENTLOG_PAIRED_EVENT_INACTIVE (16)
#define EVENTLOG_SEEK_READ (2)
#define EVENTLOG_SEQUENTIAL_READ (1)
#define EVENTLOG_START_PAIRED_EVENT (1)
#define EVENTLOG_SUCCESS (0)
#define EVENTLOG_WARNING_TYPE (2)
#define EVENT_ALL_ACCESS (2031619l)
#define EVENT_CONSOLE_CARET (16385)
#define EVENT_CONSOLE_END_APPLICATION (16391)
#define EVENT_CONSOLE_LAYOUT (16389)
#define EVENT_CONSOLE_START_APPLICATION (16390)
#define EVENT_CONSOLE_UPDATE_REGION (16386)
#define EVENT_CONSOLE_UPDATE_SCROLL (16388)
#define EVENT_CONSOLE_UPDATE_SIMPLE (16387)
#define EVENT_E_ALL_SUBSCRIBERS_FAILED _HRESULT_TYPEDEF_ ( 0x80040201 )
#define EVENT_E_CANT_MODIFY_OR_DELETE_CONFIGURED_OBJECT _HRESULT_TYPEDEF_ ( 0x8004020E )
#define EVENT_E_CANT_MODIFY_OR_DELETE_UNCONFIGURED_OBJECT _HRESULT_TYPEDEF_ ( 0x8004020D )
#define EVENT_E_COMPLUS_NOT_INSTALLED _HRESULT_TYPEDEF_ ( 0x8004020C )
#define EVENT_E_FIRST __MSABI_LONG ( 0x80040200 )
#define EVENT_E_INTERNALERROR _HRESULT_TYPEDEF_ ( 0x80040206 )
#define EVENT_E_INTERNALEXCEPTION _HRESULT_TYPEDEF_ ( 0x80040205 )
#define EVENT_E_INVALID_EVENT_CLASS_PARTITION _HRESULT_TYPEDEF_ ( 0x8004020F )
#define EVENT_E_INVALID_PER_USER_SID _HRESULT_TYPEDEF_ ( 0x80040207 )
#define EVENT_E_LAST __MSABI_LONG ( 0x8004021F )
#define EVENT_E_MISSING_EVENTCLASS _HRESULT_TYPEDEF_ ( 0x8004020A )
#define EVENT_E_NOT_ALL_REMOVED _HRESULT_TYPEDEF_ ( 0x8004020B )
#define EVENT_E_PER_USER_SID_NOT_LOGGED_ON _HRESULT_TYPEDEF_ ( 0x80040210 )
#define EVENT_E_QUERYFIELD _HRESULT_TYPEDEF_ ( 0x80040204 )
#define EVENT_E_QUERYSYNTAX _HRESULT_TYPEDEF_ ( 0x80040203 )
#define EVENT_E_TOO_MANY_METHODS _HRESULT_TYPEDEF_ ( 0x80040209 )
#define EVENT_E_USER_EXCEPTION _HRESULT_TYPEDEF_ ( 0x80040208 )
#define EVENT_MAX (2147483647)
#define EVENT_MIN (1)
#define EVENT_MODIFY_STATE (2)
#define EVENT_OBJECT_ACCELERATORCHANGE (32786)
#define EVENT_OBJECT_CREATE (32768)
#define EVENT_OBJECT_DEFACTIONCHANGE (32785)
#define EVENT_OBJECT_DESCRIPTIONCHANGE (32781)
#define EVENT_OBJECT_DESTROY (32769)
#define EVENT_OBJECT_FOCUS (32773)
#define EVENT_OBJECT_HELPCHANGE (32784)
#define EVENT_OBJECT_HIDE (32771)
#define EVENT_OBJECT_LOCATIONCHANGE (32779)
#define EVENT_OBJECT_NAMECHANGE (32780)
#define EVENT_OBJECT_PARENTCHANGE (32783)
#define EVENT_OBJECT_REORDER (32772)
#define EVENT_OBJECT_SELECTION (32774)
#define EVENT_OBJECT_SELECTIONADD (32775)
#define EVENT_OBJECT_SELECTIONREMOVE (32776)
#define EVENT_OBJECT_SELECTIONWITHIN (32777)
#define EVENT_OBJECT_SHOW (32770)
#define EVENT_OBJECT_STATECHANGE (32778)
#define EVENT_OBJECT_VALUECHANGE (32782)
#define EVENT_SYSTEM_ALERT (2)
#define EVENT_SYSTEM_CAPTUREEND (9)
#define EVENT_SYSTEM_CAPTURESTART (8)
#define EVENT_SYSTEM_CONTEXTHELPEND (13)
#define EVENT_SYSTEM_CONTEXTHELPSTART (12)
#define EVENT_SYSTEM_DIALOGEND (17)
#define EVENT_SYSTEM_DIALOGSTART (16)
#define EVENT_SYSTEM_DRAGDROPEND (15)
#define EVENT_SYSTEM_DRAGDROPSTART (14)
#define EVENT_SYSTEM_FOREGROUND (3)
#define EVENT_SYSTEM_MENUEND (5)
#define EVENT_SYSTEM_MENUPOPUPEND (7)
#define EVENT_SYSTEM_MENUPOPUPSTART (6)
#define EVENT_SYSTEM_MENUSTART (4)
#define EVENT_SYSTEM_MINIMIZEEND (23)
#define EVENT_SYSTEM_MINIMIZESTART (22)
#define EVENT_SYSTEM_MOVESIZEEND (11)
#define EVENT_SYSTEM_MOVESIZESTART (10)
#define EVENT_SYSTEM_SCROLLINGEND (19)
#define EVENT_SYSTEM_SCROLLINGSTART (18)
#define EVENT_SYSTEM_SOUND (1)
#define EVENT_SYSTEM_SWITCHEND (21)
#define EVENT_SYSTEM_SWITCHSTART (20)
#define EVENT_S_FIRST __MSABI_LONG ( 0x00040200 )
#define EVENT_S_LAST __MSABI_LONG ( 0x0004021F )
#define EVENT_S_NOSUBSCRIBERS _HRESULT_TYPEDEF_ ( 0x00040202 )
#define EVENT_S_SOME_SUBSCRIBERS_FAILED _HRESULT_TYPEDEF_ ( 0x00040200 )
#define EV_BREAK (64)
#define EV_CTS (8)
#define EV_DSR (16)
#define EV_ERR (128)
#define EV_EVENT1 (2048)
#define EV_EVENT2 (4096)
#define EV_PERR (512)
#define EV_RING (256)
#define EV_RLSD (32)
#define EV_RX80FULL (1024)
#define EV_RXCHAR (1)
#define EV_RXFLAG (2)
#define EV_TXEMPTY (4)
#define EWX_BOOTOPTIONS (16777216)
#define EWX_FORCE (4)
#define EWX_FORCEIFHUNG (16)
#define EWX_HYBRID_SHUTDOWN (4194304)
#define EWX_LOGOFF (0)
#define EWX_POWEROFF (8)
#define EWX_QUICKRESOLVE (32)
#define EWX_REBOOT (2)
#define EWX_SHUTDOWN (1)
#define EXCEPTION_ACCESS_VIOLATION STATUS_ACCESS_VIOLATION
#define EXCEPTION_ARRAY_BOUNDS_EXCEEDED STATUS_ARRAY_BOUNDS_EXCEEDED
#define EXCEPTION_BREAKPOINT STATUS_BREAKPOINT
#define EXCEPTION_COLLIDED_UNWIND (64)
#define EXCEPTION_CONTINUE_EXECUTION (-1)
#define EXCEPTION_CONTINUE_SEARCH (0)
#define EXCEPTION_DATATYPE_MISALIGNMENT STATUS_DATATYPE_MISALIGNMENT
#define EXCEPTION_DEBUG_EVENT (1)
#define EXCEPTION_DISPOSITION int
#define EXCEPTION_EXECUTE_FAULT (8)
#define EXCEPTION_EXECUTE_HANDLER (1)
#define EXCEPTION_EXIT_UNWIND (4)
#define EXCEPTION_FLT_DENORMAL_OPERAND STATUS_FLOAT_DENORMAL_OPERAND
#define EXCEPTION_FLT_DIVIDE_BY_ZERO STATUS_FLOAT_DIVIDE_BY_ZERO
#define EXCEPTION_FLT_INEXACT_RESULT STATUS_FLOAT_INEXACT_RESULT
#define EXCEPTION_FLT_INVALID_OPERATION STATUS_FLOAT_INVALID_OPERATION
#define EXCEPTION_FLT_OVERFLOW STATUS_FLOAT_OVERFLOW
#define EXCEPTION_FLT_STACK_CHECK STATUS_FLOAT_STACK_CHECK
#define EXCEPTION_FLT_UNDERFLOW STATUS_FLOAT_UNDERFLOW
#define EXCEPTION_GUARD_PAGE STATUS_GUARD_PAGE_VIOLATION
#define EXCEPTION_ILLEGAL_INSTRUCTION STATUS_ILLEGAL_INSTRUCTION
#define EXCEPTION_INT_DIVIDE_BY_ZERO STATUS_INTEGER_DIVIDE_BY_ZERO
#define EXCEPTION_INT_OVERFLOW STATUS_INTEGER_OVERFLOW
#define EXCEPTION_INVALID_DISPOSITION STATUS_INVALID_DISPOSITION
#define EXCEPTION_INVALID_HANDLE STATUS_INVALID_HANDLE
#define EXCEPTION_IN_PAGE_ERROR STATUS_IN_PAGE_ERROR
#define EXCEPTION_MAXIMUM_PARAMETERS (15)
#define EXCEPTION_NESTED_CALL (16)
#define EXCEPTION_NONCONTINUABLE (1)
#define EXCEPTION_NONCONTINUABLE_EXCEPTION STATUS_NONCONTINUABLE_EXCEPTION
#define EXCEPTION_POSSIBLE_DEADLOCK STATUS_POSSIBLE_DEADLOCK
#define EXCEPTION_PRIV_INSTRUCTION STATUS_PRIVILEGED_INSTRUCTION
#define EXCEPTION_READ_FAULT (0)
#define EXCEPTION_SINGLE_STEP STATUS_SINGLE_STEP
#define EXCEPTION_STACK_INVALID (8)
#define EXCEPTION_STACK_OVERFLOW STATUS_STACK_OVERFLOW
#define EXCEPTION_TARGET_UNWIND (32)
#define EXCEPTION_UNWIND (102)
#define EXCEPTION_UNWINDING (2)
#define EXCEPTION_WRITE_FAULT (1)
#define EXECUTE_OFFLINE_DIAGS (212)
#define EXIT_PROCESS_DEBUG_EVENT (5)
#define EXIT_THREAD_DEBUG_EVENT (4)
#define EXPAND_LOCAL_DRIVES 
#define EXPENTRY CALLBACK
#define EXPORT_PRIVATE_KEYS (4)
#define EXPO_OFFLOAD_FUNC_NAME "OffloadModExpo"
#define EXPO_OFFLOAD_REG_VALUE "ExpoOffload"
#define EXTENDED_STARTUPINFO_PRESENT (524288)
#define EXTEND_IEPORT (2)
#define EXTERN_C extern
#define EXTERN_GUID(itf, l1, s1, s2, c1, c2, c3, c4, c5, c6, c7, c8) const IID DECLSPEC_SELECTANY itf = { l1 , s1 , s2 , { c1 , c2 , c3 , c4 , c5 , c6 , c7 , c8 } }
#define EXTTEXTOUT (512)
#define EXT_DEVICE_CAPS (4099)
#define EXT_IMM64(Value, Address, Size, InstPos, ValPos) Value |= ( ( ( ULONGLONG ) ( ( * ( Address ) >> InstPos ) & ( ( ( ULONGLONG ) 1 << Size ) - 1 ) ) ) << ValPos )
#define E_ABORT _HRESULT_TYPEDEF_ ( 0x80004004 )
#define E_ACCESSDENIED _HRESULT_TYPEDEF_ ( 0x80070005 )
#define E_FAIL _HRESULT_TYPEDEF_ ( 0x80004005 )
#define E_HANDLE _HRESULT_TYPEDEF_ ( 0x80070006 )
#define E_INVALIDARG _HRESULT_TYPEDEF_ ( 0x80070057 )
#define E_NOINTERFACE _HRESULT_TYPEDEF_ ( 0x80004002 )
#define E_NOTIMPL _HRESULT_TYPEDEF_ ( 0x80004001 )
#define E_NOT_SUFFICIENT_BUFFER HRESULT_FROM_WIN32 ( ERROR_INSUFFICIENT_BUFFER )
#define E_OUTOFMEMORY _HRESULT_TYPEDEF_ ( 0x8007000E )
#define E_PENDING _HRESULT_TYPEDEF_ ( 0x8000000A )
#define E_POINTER _HRESULT_TYPEDEF_ ( 0x80004003 )
#define E_UNEXPECTED _HRESULT_TYPEDEF_ ( 0x8000FFFF )
#define EncryptFile __MINGW_NAME_AW ( EncryptFile )
#define EndUpdateResource __MINGW_NAME_AW ( EndUpdateResource )
#define EnumCalendarInfo __MINGW_NAME_AW ( EnumCalendarInfo )
#define EnumCalendarInfoEx __MINGW_NAME_AW ( EnumCalendarInfoEx )
#define EnumDateFormats __MINGW_NAME_AW ( EnumDateFormats )
#define EnumDateFormatsEx __MINGW_NAME_AW ( EnumDateFormatsEx )
#define EnumDependentServices __MINGW_NAME_AW ( EnumDependentServices )
#define EnumDesktops __MINGW_NAME_AW ( EnumDesktops )
#define EnumDisplayDevices __MINGW_NAME_AW ( EnumDisplayDevices )
#define EnumDisplaySettings __MINGW_NAME_AW ( EnumDisplaySettings )
#define EnumDisplaySettingsEx __MINGW_NAME_AW ( EnumDisplaySettingsEx )
#define EnumFontFamilies __MINGW_NAME_AW ( EnumFontFamilies )
#define EnumFontFamiliesEx __MINGW_NAME_AW ( EnumFontFamiliesEx )
#define EnumFonts __MINGW_NAME_AW ( EnumFonts )
#define EnumForms __MINGW_NAME_AW ( EnumForms )
#define EnumICMProfiles __MINGW_NAME_AW ( EnumICMProfiles )
#define EnumJobs __MINGW_NAME_AW ( EnumJobs )
#define EnumLanguageGroupLocales __MINGW_NAME_AW ( EnumLanguageGroupLocales )
#define EnumMonitors __MINGW_NAME_AW ( EnumMonitors )
#define EnumPorts __MINGW_NAME_AW ( EnumPorts )
#define EnumPrintProcessorDatatypes __MINGW_NAME_AW ( EnumPrintProcessorDatatypes )
#define EnumPrintProcessors __MINGW_NAME_AW ( EnumPrintProcessors )
#define EnumPrinterData __MINGW_NAME_AW ( EnumPrinterData )
#define EnumPrinterDataEx __MINGW_NAME_AW ( EnumPrinterDataEx )
#define EnumPrinterDrivers __MINGW_NAME_AW ( EnumPrinterDrivers )
#define EnumPrinterKey __MINGW_NAME_AW ( EnumPrinterKey )
#define EnumPrinters __MINGW_NAME_AW ( EnumPrinters )
#define EnumProps __MINGW_NAME_AW ( EnumProps )
#define EnumPropsEx __MINGW_NAME_AW ( EnumPropsEx )
#define EnumResourceLanguages __MINGW_NAME_AW ( EnumResourceLanguages )
#define EnumResourceNames __MINGW_NAME_AW ( EnumResourceNames )
#define EnumResourceTypes __MINGW_NAME_AW ( EnumResourceTypes )
#define EnumServicesStatus __MINGW_NAME_AW ( EnumServicesStatus )
#define EnumServicesStatusEx __MINGW_NAME_AW ( EnumServicesStatusEx )
#define EnumSystemCodePages __MINGW_NAME_AW ( EnumSystemCodePages )
#define EnumSystemLanguageGroups __MINGW_NAME_AW ( EnumSystemLanguageGroups )
#define EnumSystemLocales __MINGW_NAME_AW ( EnumSystemLocales )
#define EnumTaskWindows(hTask, lpfn, lParam) EnumThreadWindows ( HandleToUlong ( hTask ) , lpfn , lParam )
#define EnumTimeFormats __MINGW_NAME_AW ( EnumTimeFormats )
#define EnumUILanguages __MINGW_NAME_AW ( EnumUILanguages )
#define EnumWindowStations __MINGW_NAME_AW ( EnumWindowStations )
#define ExceptionCollidedUnwind (3)
#define ExceptionContinueExecution (0)
#define ExceptionContinueSearch (1)
#define ExceptionExecuteHandler (4)
#define ExceptionNestedException (2)
#define ExitWindows(dwReserved, Code) ExitWindowsEx ( EWX_LOGOFF , 0xFFFFFFFF )
#define ExpandEnvironmentStrings __MINGW_NAME_AW ( ExpandEnvironmentStrings )
#define ExtTextOut __MINGW_NAME_AW ( ExtTextOut )
#define ExtractAssociatedIcon __MINGW_NAME_AW ( ExtractAssociatedIcon )
#define ExtractAssociatedIconEx __MINGW_NAME_AW ( ExtractAssociatedIconEx )
#define ExtractIcon __MINGW_NAME_AW ( ExtractIcon )
#define ExtractIconEx __MINGW_NAME_AW ( ExtractIconEx )
#define FACILITY_AAF (18)
#define FACILITY_ACS (20)
#define FACILITY_AUDCLNT (2185)
#define FACILITY_BACKGROUNDCOPY (32)
#define FACILITY_CERT (11)
#define FACILITY_COMPLUS (17)
#define FACILITY_CONFIGURATION (33)
#define FACILITY_CONTROL (10)
#define FACILITY_DIRECTORYSERVICE (37)
#define FACILITY_DISPATCH (2)
#define FACILITY_DPLAY (21)
#define FACILITY_HTTP (25)
#define FACILITY_INTERNET (12)
#define FACILITY_ITF (4)
#define FACILITY_MEDIASERVER (13)
#define FACILITY_METADIRECTORY (35)
#define FACILITY_MSMQ (14)
#define FACILITY_NT_BIT (268435456)
#define FACILITY_NULL (0)
#define FACILITY_RPC (1)
#define FACILITY_SCARD (16)
#define FACILITY_SECURITY (9)
#define FACILITY_SETUPAPI (15)
#define FACILITY_SSPI (9)
#define FACILITY_STATE_MANAGEMENT (34)
#define FACILITY_STORAGE (3)
#define FACILITY_SXS (23)
#define FACILITY_UMI (22)
#define FACILITY_URT (19)
#define FACILITY_WIN32 (7)
#define FACILITY_WINDOWS (8)
#define FACILITY_WINDOWSUPDATE (36)
#define FACILITY_WINDOWS_CE (24)
#define FAILED(hr) ( ( HRESULT ) ( hr ) < 0 )
#define FAILED_ACCESS_ACE_FLAG (128)
#define FAIL_FAST_GENERATE_EXCEPTION_ADDRESS (1)
#define FAIL_FAST_NO_HARD_ERROR_DLG (2)
#define FALSE (0)
#define FALT (16)
#define FAPPCOMMAND_KEY (0)
#define FAPPCOMMAND_MASK (61440)
#define FAPPCOMMAND_MOUSE (32768)
#define FAPPCOMMAND_OEM (4096)
#define FAR 
#define FASTCALL 
#define FAST_FAIL_CORRUPT_LIST_ENTRY (3)
#define FAST_FAIL_FATAL_APP_EXIT (7)
#define FAST_FAIL_GS_COOKIE_INIT (6)
#define FAST_FAIL_INCORRECT_STACK (4)
#define FAST_FAIL_INVALID_ARG (5)
#define FAST_FAIL_INVALID_FAST_FAIL_CODE (4294967295u)
#define FAST_FAIL_LEGACY_GS_VIOLATION (0)
#define FAST_FAIL_RANGE_CHECK_FAILURE (8)
#define FAST_FAIL_STACK_COOKIE_CHECK_FAILURE (2)
#define FAST_FAIL_UNSAFE_REGISTRY_ACCESS (9)
#define FAST_FAIL_VTGUARD_CHECK_FAILURE (1)
#define FCONTROL (8)
#define FD_ACCEPT (8)
#define FD_CLOSE (32)
#define FD_CLR(fd, set) do { u_int __i ; for ( __i = 0 ; __i < ( ( fd_set * ) ( set ) ) -> fd_count ; __i ++ ) { if ( ( ( fd_set * ) ( set ) ) -> fd_array [ __i ] == fd ) { while ( __i < ( ( fd_set * ) ( set ) ) -> fd_count - 1 ) { ( ( fd_set * ) ( set ) ) -> fd_array [ __i ] = ( ( fd_set * ) ( set ) ) -> fd_array [ __i + 1 ] ; __i ++ ; } ( ( fd_set * ) ( set ) ) -> fd_count -- ; break ; } } } while ( 0 )
#define FD_CONNECT (16)
#define FD_ISSET(fd, set) __WSAFDIsSet ( ( SOCKET ) ( fd ) , ( fd_set * ) ( set ) )
#define FD_OOB (4)
#define FD_READ (1)
#define FD_SET(fd, set) do { if ( ( ( fd_set * ) ( set ) ) -> fd_count < FD_SETSIZE ) ( ( fd_set * ) ( set ) ) -> fd_array [ ( ( fd_set * ) ( set ) ) -> fd_count ++ ] = ( fd ) ; } while ( 0 )
#define FD_SETSIZE (64)
#define FD_WRITE (2)
#define FD_ZERO(set) ( ( ( fd_set * ) ( set ) ) -> fd_count = 0 )
#define FEATURESETTING_CUSTPAPER (3)
#define FEATURESETTING_MIRROR (4)
#define FEATURESETTING_NEGATIVE (5)
#define FEATURESETTING_NUP (0)
#define FEATURESETTING_OUTPUT (1)
#define FEATURESETTING_PRIVATE_BEGIN (4096)
#define FEATURESETTING_PRIVATE_END (8191)
#define FEATURESETTING_PROTOCOL (6)
#define FEATURESETTING_PSLEVEL (2)
#define FE_FONTSMOOTHINGCLEARTYPE (2)
#define FE_FONTSMOOTHINGDOCKING (32768)
#define FE_FONTSMOOTHINGORIENTATIONBGR (0)
#define FE_FONTSMOOTHINGORIENTATIONRGB (1)
#define FE_FONTSMOOTHINGSTANDARD (1)
#define FF_DECORATIVE (80)
#define FF_DONTCARE (0)
#define FF_MODERN (48)
#define FF_ROMAN (16)
#define FF_SCRIPT (64)
#define FF_SWISS (32)
#define FIBER_FLAG_FLOAT_SWITCH (1)
#define FIELD_OFFSET(Type, Field) ( ( LONG ) __builtin_offsetof ( Type , Field ) )
#define FILEMUIINFO_GET_CULTURE(pInfo) ( ( LPWSTR ) ( ( pInfo -> dwLanguageNameOffset > 0 ) ? ( ULONG_PTR ) pInfo + pInfo -> dwLanguageNameOffset : NULL ) )
#define FILEMUIINFO_GET_MAIN_TYPEID(pInfo, iType) ( ( ( iType < pInfo -> dwTypeIDMainSize ) && ( pInfo -> dwTypeIDMainOffset > 0 ) ) ? * ( ( DWORD * ) ( ( ULONG_PTR ) pInfo + pInfo -> dwTypeIDMainOffset ) + iType ) : 0 )
#define FILEMUIINFO_GET_MAIN_TYPEIDS(pInfo) ( ( DWORD * ) ( ( pInfo -> dwTypeIDMainOffset > 0 ) ? ( ULONG_PTR ) pInfo + pInfo -> dwTypeIDMainOffset : NULL ) )
#define FILEMUIINFO_GET_MAIN_TYPENAMES(pInfo) ( ( LPWSTR ) ( ( pInfo -> dwTypeNameMainOffset > 0 ) ? ( ULONG_PTR ) pInfo + pInfo -> dwTypeNameMainOffset : NULL ) )
#define FILEMUIINFO_GET_MUI_TYPEID(pInfo, iType) ( ( ( iType < pInfo -> dwTypeIDMUISize ) && ( pInfo -> dwTypeIDMUIOffset > 0 ) ) ? * ( ( DWORD * ) ( ( ULONG_PTR ) pInfo + pInfo -> dwTypeIDMUIOffset ) + iType ) : 0 )
#define FILEMUIINFO_GET_MUI_TYPEIDS(pInfo) ( ( DWORD * ) ( ( pInfo -> dwTypeIDMUIOffset > 0 ) ? ( ULONG_PTR ) pInfo + pInfo -> dwTypeIDMUIOffset : NULL ) )
#define FILEMUIINFO_GET_MUI_TYPENAMES(pInfo) ( ( LPWSTR ) ( ( pInfo -> dwTypeNameMUIOffset > 0 ) ? ( ULONG_PTR ) pInfo + pInfo -> dwTypeNameMUIOffset : NULL ) )
#define FILEOKSTRING __MINGW_NAME_AW ( FILEOKSTRING )
#define FILEOKSTRINGA "commdlg_FileNameOK"
#define FILEOKSTRINGW "commdlg_FileNameOK"
#define FILESYSTEM_STATISTICS_TYPE_FAT (2)
#define FILESYSTEM_STATISTICS_TYPE_NTFS (1)
#define FILE_ACTION_ADDED (1)
#define FILE_ACTION_MODIFIED (3)
#define FILE_ACTION_REMOVED (2)
#define FILE_ACTION_RENAMED_NEW_NAME (5)
#define FILE_ACTION_RENAMED_OLD_NAME (4)
#define FILE_ADD_FILE (2)
#define FILE_ADD_SUBDIRECTORY (4)
#define FILE_ALL_ACCESS (2032127l)
#define FILE_ANY_ACCESS (0)
#define FILE_APPEND_DATA (4)
#define FILE_ATTRIBUTE_ARCHIVE (32)
#define FILE_ATTRIBUTE_COMPRESSED (2048)
#define FILE_ATTRIBUTE_DEVICE (64)
#define FILE_ATTRIBUTE_DIRECTORY (16)
#define FILE_ATTRIBUTE_ENCRYPTED (16384)
#define FILE_ATTRIBUTE_HIDDEN (2)
#define FILE_ATTRIBUTE_NORMAL (128)
#define FILE_ATTRIBUTE_NOT_CONTENT_INDEXED (8192)
#define FILE_ATTRIBUTE_OFFLINE (4096)
#define FILE_ATTRIBUTE_READONLY (1)
#define FILE_ATTRIBUTE_REPARSE_POINT (1024)
#define FILE_ATTRIBUTE_SPARSE_FILE (512)
#define FILE_ATTRIBUTE_SYSTEM (4)
#define FILE_ATTRIBUTE_TEMPORARY (256)
#define FILE_ATTRIBUTE_VIRTUAL (65536)
#define FILE_BEGIN (0)
#define FILE_CACHE_FLAGS_DEFINED 
#define FILE_CACHE_MAX_HARD_DISABLE (2)
#define FILE_CACHE_MAX_HARD_ENABLE (1)
#define FILE_CACHE_MIN_HARD_DISABLE (8)
#define FILE_CACHE_MIN_HARD_ENABLE (4)
#define FILE_CASE_PRESERVED_NAMES (2)
#define FILE_CASE_SENSITIVE_SEARCH (1)
#define FILE_CLEAR_ENCRYPTION (2)
#define FILE_COMPLETE_IF_OPLOCKED (256)
#define FILE_CREATE (2)
#define FILE_CREATE_PIPE_INSTANCE (4)
#define FILE_CREATE_TREE_CONNECTION (128)
#define FILE_CURRENT (1)
#define FILE_DELETE_CHILD (64)
#define FILE_DELETE_ON_CLOSE (4096)
#define FILE_DEVICE_8042_PORT (39)
#define FILE_DEVICE_ACPI (50)
#define FILE_DEVICE_BATTERY (41)
#define FILE_DEVICE_BEEP (1)
#define FILE_DEVICE_BUS_EXTENDER (42)
#define FILE_DEVICE_CD_ROM (2)
#define FILE_DEVICE_CD_ROM_FILE_SYSTEM (3)
#define FILE_DEVICE_CHANGER (48)
#define FILE_DEVICE_CONTROLLER (4)
#define FILE_DEVICE_DATALINK (5)
#define FILE_DEVICE_DFS (6)
#define FILE_DEVICE_DFS_FILE_SYSTEM (53)
#define FILE_DEVICE_DFS_VOLUME (54)
#define FILE_DEVICE_DISK (7)
#define FILE_DEVICE_DISK_FILE_SYSTEM (8)
#define FILE_DEVICE_DVD (51)
#define FILE_DEVICE_FILE_SYSTEM (9)
#define FILE_DEVICE_FIPS (58)
#define FILE_DEVICE_FULLSCREEN_VIDEO (52)
#define FILE_DEVICE_INFINIBAND (59)
#define FILE_DEVICE_INPORT_PORT (10)
#define FILE_DEVICE_KEYBOARD (11)
#define FILE_DEVICE_KS (47)
#define FILE_DEVICE_KSEC (57)
#define FILE_DEVICE_MAILSLOT (12)
#define FILE_DEVICE_MASS_STORAGE (45)
#define FILE_DEVICE_MIDI_IN (13)
#define FILE_DEVICE_MIDI_OUT (14)
#define FILE_DEVICE_MODEM (43)
#define FILE_DEVICE_MOUSE (15)
#define FILE_DEVICE_MULTI_UNC_PROVIDER (16)
#define FILE_DEVICE_NAMED_PIPE (17)
#define FILE_DEVICE_NETWORK (18)
#define FILE_DEVICE_NETWORK_BROWSER (19)
#define FILE_DEVICE_NETWORK_FILE_SYSTEM (20)
#define FILE_DEVICE_NETWORK_REDIRECTOR (40)
#define FILE_DEVICE_NULL (21)
#define FILE_DEVICE_PARALLEL_PORT (22)
#define FILE_DEVICE_PHYSICAL_NETCARD (23)
#define FILE_DEVICE_PRINTER (24)
#define FILE_DEVICE_SCANNER (25)
#define FILE_DEVICE_SCREEN (28)
#define FILE_DEVICE_SERENUM (55)
#define FILE_DEVICE_SERIAL_MOUSE_PORT (26)
#define FILE_DEVICE_SERIAL_PORT (27)
#define FILE_DEVICE_SMARTCARD (49)
#define FILE_DEVICE_SMB (46)
#define FILE_DEVICE_SOUND (29)
#define FILE_DEVICE_STREAMS (30)
#define FILE_DEVICE_TAPE (31)
#define FILE_DEVICE_TAPE_FILE_SYSTEM (32)
#define FILE_DEVICE_TERMSRV (56)
#define FILE_DEVICE_TRANSPORT (33)
#define FILE_DEVICE_UNKNOWN (34)
#define FILE_DEVICE_VDM (44)
#define FILE_DEVICE_VIDEO (35)
#define FILE_DEVICE_VIRTUAL_DISK (36)
#define FILE_DEVICE_WAVE_IN (37)
#define FILE_DEVICE_WAVE_OUT (38)
#define FILE_DIRECTORY_FILE (1)
#define FILE_DIR_DISALLOWED (9)
#define FILE_ENCRYPTABLE (0)
#define FILE_END (2)
#define FILE_EXECUTE (32)
#define FILE_FILE_COMPRESSION (16)
#define FILE_FLAG_BACKUP_SEMANTICS (33554432)
#define FILE_FLAG_DELETE_ON_CLOSE (67108864)
#define FILE_FLAG_FIRST_PIPE_INSTANCE (524288)
#define FILE_FLAG_NO_BUFFERING (536870912)
#define FILE_FLAG_OPEN_NO_RECALL (1048576)
#define FILE_FLAG_OPEN_REPARSE_POINT (2097152)
#define FILE_FLAG_OVERLAPPED (1073741824)
#define FILE_FLAG_POSIX_SEMANTICS (16777216)
#define FILE_FLAG_RANDOM_ACCESS (268435456)
#define FILE_FLAG_SEQUENTIAL_SCAN (134217728)
#define FILE_FLAG_SESSION_AWARE (8388608)
#define FILE_FLAG_WRITE_THROUGH (2147483648u)
#define FILE_GENERIC_EXECUTE (1179808l)
#define FILE_GENERIC_READ (1179785l)
#define FILE_GENERIC_WRITE (1179926l)
#define FILE_IS_ENCRYPTED (1)
#define FILE_LIST_DIRECTORY (1)
#define FILE_MAP_ALL_ACCESS SECTION_ALL_ACCESS
#define FILE_MAP_COPY (1)
#define FILE_MAP_EXECUTE SECTION_MAP_EXECUTE_EXPLICIT
#define FILE_MAP_READ SECTION_MAP_READ
#define FILE_MAP_RESERVE (2147483648u)
#define FILE_MAP_WRITE SECTION_MAP_WRITE
#define FILE_MAXIMUM_DISPOSITION (5)
#define FILE_NAMED_STREAMS (262144)
#define FILE_NAME_NORMALIZED (0)
#define FILE_NAME_OPENED (8)
#define FILE_NON_DIRECTORY_FILE (64)
#define FILE_NOTIFY_CHANGE_ATTRIBUTES (4)
#define FILE_NOTIFY_CHANGE_CREATION (64)
#define FILE_NOTIFY_CHANGE_DIR_NAME (2)
#define FILE_NOTIFY_CHANGE_FILE_NAME (1)
#define FILE_NOTIFY_CHANGE_LAST_ACCESS (32)
#define FILE_NOTIFY_CHANGE_LAST_WRITE (16)
#define FILE_NOTIFY_CHANGE_SECURITY (256)
#define FILE_NOTIFY_CHANGE_SIZE (8)
#define FILE_NO_COMPRESSION (32768)
#define FILE_NO_EA_KNOWLEDGE (512)
#define FILE_NO_INTERMEDIATE_BUFFERING (8)
#define FILE_OPEN (1)
#define FILE_OPEN_BY_FILE_ID (8192)
#define FILE_OPEN_FOR_BACKUP_INTENT (16384)
#define FILE_OPEN_FOR_FREE_SPACE_QUERY (8388608)
#define FILE_OPEN_IF (3)
#define FILE_OPEN_NO_RECALL (4194304)
#define FILE_OPEN_REMOTE_INSTANCE (1024)
#define FILE_OPEN_REPARSE_POINT (2097152)
#define FILE_OVERWRITE (4)
#define FILE_OVERWRITE_IF (5)
#define FILE_PERSISTENT_ACLS (8)
#define FILE_PREFETCH_TYPE_FOR_CREATE (1)
#define FILE_RANDOM_ACCESS (2048)
#define FILE_READ_ACCESS (1)
#define FILE_READ_ATTRIBUTES (128)
#define FILE_READ_DATA (1)
#define FILE_READ_EA (8)
#define FILE_READ_ONLY (8)
#define FILE_READ_ONLY_VOLUME (524288)
#define FILE_RESERVE_OPFILTER (1048576)
#define FILE_ROOT_DIR (3)
#define FILE_SEQUENTIAL_ONLY (4)
#define FILE_SEQUENTIAL_WRITE_ONCE (1048576)
#define FILE_SET_ENCRYPTION (1)
#define FILE_SHARE_DELETE (4)
#define FILE_SHARE_READ (1)
#define FILE_SHARE_VALID_FLAGS (7)
#define FILE_SHARE_WRITE (2)
#define FILE_SPECIAL_ACCESS (0)
#define FILE_SUPERSEDE (0)
#define FILE_SUPPORTS_ENCRYPTION (131072)
#define FILE_SUPPORTS_EXTENDED_ATTRIBUTES (8388608)
#define FILE_SUPPORTS_HARD_LINKS (4194304)
#define FILE_SUPPORTS_INTEGRITY_STREAMS (67108864)
#define FILE_SUPPORTS_OBJECT_IDS (65536)
#define FILE_SUPPORTS_OPEN_BY_FILE_ID (16777216)
#define FILE_SUPPORTS_REMOTE_STORAGE (256)
#define FILE_SUPPORTS_REPARSE_POINTS (128)
#define FILE_SUPPORTS_SPARSE_FILES (64)
#define FILE_SUPPORTS_TRANSACTIONS (2097152)
#define FILE_SUPPORTS_USN_JOURNAL (33554432)
#define FILE_SYNCHRONOUS_IO_ALERT (16)
#define FILE_SYNCHRONOUS_IO_NONALERT (32)
#define FILE_SYSTEM_ATTR (2)
#define FILE_SYSTEM_DIR (4)
#define FILE_SYSTEM_NOT_SUPPORT (6)
#define FILE_TRAVERSE (32)
#define FILE_TYPE_CHAR (2)
#define FILE_TYPE_DISK (1)
#define FILE_TYPE_PIPE (3)
#define FILE_TYPE_REMOTE (32768)
#define FILE_TYPE_UNKNOWN (0)
#define FILE_UNICODE_ON_DISK (4)
#define FILE_UNKNOWN (5)
#define FILE_USER_DISALLOWED (7)
#define FILE_VOLUME_IS_COMPRESSED (32768)
#define FILE_VOLUME_QUOTAS (32)
#define FILE_WRITE_ACCESS (2)
#define FILE_WRITE_ATTRIBUTES (256)
#define FILE_WRITE_DATA (2)
#define FILE_WRITE_EA (16)
#define FILE_WRITE_THROUGH (2)
#define FINDMSGSTRING __MINGW_NAME_AW ( FINDMSGSTRING )
#define FINDMSGSTRINGA "commdlg_FindReplace"
#define FINDMSGSTRINGW "commdlg_FindReplace"
#define FIND_ACTCTX_SECTION_KEY_RETURN_ASSEMBLY_METADATA (4)
#define FIND_ACTCTX_SECTION_KEY_RETURN_FLAGS (2)
#define FIND_ACTCTX_SECTION_KEY_RETURN_HACTCTX (1)
#define FIND_ENDSWITH (2097152)
#define FIND_FIRST_EX_CASE_SENSITIVE (1)
#define FIND_FIRST_EX_LARGE_FETCH (2)
#define FIND_FROMEND (8388608)
#define FIND_FROMSTART (4194304)
#define FIND_RESOURCE_DIRECTORY_LANGUAGES (1024)
#define FIND_RESOURCE_DIRECTORY_NAMES (512)
#define FIND_RESOURCE_DIRECTORY_TYPES (256)
#define FIND_STARTSWITH (1048576)
#define FIOASYNC _IOW ( 'f' , 125 , u_long )
#define FIONBIO _IOW ( 'f' , 126 , u_long )
#define FIONREAD _IOR ( 'f' , 127 , u_long )
#define FIRMWARE_PTR 
#define FIXED_PITCH (1)
#define FKF_AVAILABLE (2)
#define FKF_CLICKON (64)
#define FKF_CONFIRMHOTKEY (8)
#define FKF_FILTERKEYSON (1)
#define FKF_HOTKEYACTIVE (4)
#define FKF_HOTKEYSOUND (16)
#define FKF_INDICATOR (32)
#define FLASHW_ALL (3)
#define FLASHW_CAPTION (1)
#define FLASHW_STOP (0)
#define FLASHW_TIMER (4)
#define FLASHW_TIMERNOFG (12)
#define FLASHW_TRAY (2)
#define FLI_GLYPHS __MSABI_LONG ( 0x00040000 )
#define FLI_MASK (4155)
#define FLOODFILLBORDER (0)
#define FLOODFILLSURFACE (1)
#define FLS_MAXIMUM_AVAILABLE (128)
#define FLS_OUT_OF_INDEXES ( ( DWORD ) 0xffffffff )
#define FLUSHOUTPUT (6)
#define FMTID_NULL GUID_NULL
#define FNOINVERT (2)
#define FOCUS_EVENT (16)
#define FOF_ALLOWUNDO (64)
#define FOF_CONFIRMMOUSE (2)
#define FOF_FILESONLY (128)
#define FOF_MULTIDESTFILES (1)
#define FOF_NOCONFIRMATION (16)
#define FOF_NOCONFIRMMKDIR (512)
#define FOF_NOCOPYSECURITYATTRIBS (2048)
#define FOF_NOERRORUI (1024)
#define FOF_NORECURSEREPARSE (32768)
#define FOF_NORECURSION (4096)
#define FOF_NO_CONNECTED_ELEMENTS (8192)
#define FOF_NO_UI (1556)
#define FOF_RENAMEONCOLLISION (8)
#define FOF_SILENT (4)
#define FOF_SIMPLEPROGRESS (256)
#define FOF_WANTMAPPINGHANDLE (32)
#define FOF_WANTNUKEWARNING (16384)
#define FONTMAPPER_MAX (10)
#define FORCEINLINE __forceinline
#define FOREGROUND_BLUE (1)
#define FOREGROUND_GREEN (2)
#define FOREGROUND_INTENSITY (8)
#define FOREGROUND_RED (4)
#define FOREST_USER_RID_MAX (499l)
#define FORMAT_MESSAGE_ALLOCATE_BUFFER (256)
#define FORMAT_MESSAGE_ARGUMENT_ARRAY (8192)
#define FORMAT_MESSAGE_FROM_HMODULE (2048)
#define FORMAT_MESSAGE_FROM_STRING (1024)
#define FORMAT_MESSAGE_FROM_SYSTEM (4096)
#define FORMAT_MESSAGE_IGNORE_INSERTS (512)
#define FORMAT_MESSAGE_MAX_WIDTH_MASK (255)
#define FORM_BUILTIN (1)
#define FORM_PRINTER (2)
#define FORM_USER (0)
#define FOURCC_DOS mmioFOURCC ( 'D' , 'O' , 'S' , ' ' )
#define FOURCC_LIST mmioFOURCC ( 'L' , 'I' , 'S' , 'T' )
#define FOURCC_MEM mmioFOURCC ( 'M' , 'E' , 'M' , ' ' )
#define FOURCC_RIFF mmioFOURCC ( 'R' , 'I' , 'F' , 'F' )
#define FO_COPY (2)
#define FO_DELETE (3)
#define FO_MOVE (1)
#define FO_RENAME (4)
#define FRAME_FPO (0)
#define FRAME_NONFPO (3)
#define FRAME_TRAP (1)
#define FRAME_TSS (2)
#define FROM_LEFT_1ST_BUTTON_PRESSED (1)
#define FROM_LEFT_2ND_BUTTON_PRESSED (4)
#define FROM_LEFT_3RD_BUTTON_PRESSED (8)
#define FROM_LEFT_4TH_BUTTON_PRESSED (16)
#define FRS_ERR_AUTHENTICATION __MSABI_LONG ( 8008 )
#define FRS_ERR_CHILD_TO_PARENT_COMM __MSABI_LONG ( 8011 )
#define FRS_ERR_INSUFFICIENT_PRIV __MSABI_LONG ( 8007 )
#define FRS_ERR_INTERNAL __MSABI_LONG ( 8005 )
#define FRS_ERR_INTERNAL_API __MSABI_LONG ( 8004 )
#define FRS_ERR_INVALID_API_SEQUENCE __MSABI_LONG ( 8001 )
#define FRS_ERR_INVALID_SERVICE_PARAMETER __MSABI_LONG ( 8017 )
#define FRS_ERR_PARENT_AUTHENTICATION __MSABI_LONG ( 8010 )
#define FRS_ERR_PARENT_INSUFFICIENT_PRIV __MSABI_LONG ( 8009 )
#define FRS_ERR_PARENT_TO_CHILD_COMM __MSABI_LONG ( 8012 )
#define FRS_ERR_SERVICE_COMM __MSABI_LONG ( 8006 )
#define FRS_ERR_STARTING_SERVICE __MSABI_LONG ( 8002 )
#define FRS_ERR_STOPPING_SERVICE __MSABI_LONG ( 8003 )
#define FRS_ERR_SYSVOL_DEMOTE __MSABI_LONG ( 8016 )
#define FRS_ERR_SYSVOL_IS_BUSY __MSABI_LONG ( 8015 )
#define FRS_ERR_SYSVOL_POPULATE __MSABI_LONG ( 8013 )
#define FRS_ERR_SYSVOL_POPULATE_TIMEOUT __MSABI_LONG ( 8014 )
#define FR_DIALOGTERM (64)
#define FR_DOWN (1)
#define FR_ENABLEHOOK (256)
#define FR_ENABLETEMPLATE (512)
#define FR_ENABLETEMPLATEHANDLE (8192)
#define FR_FINDNEXT (8)
#define FR_HIDEMATCHCASE (32768)
#define FR_HIDEUPDOWN (16384)
#define FR_HIDEWHOLEWORD (65536)
#define FR_MATCHALEFHAMZA (2147483648u)
#define FR_MATCHCASE (4)
#define FR_MATCHDIAC (536870912)
#define FR_MATCHKASHIDA (1073741824)
#define FR_NOMATCHCASE (2048)
#define FR_NOT_ENUM (32)
#define FR_NOUPDOWN (1024)
#define FR_NOWHOLEWORD (4096)
#define FR_PRIVATE (16)
#define FR_RAW (131072)
#define FR_REPLACE (16)
#define FR_REPLACEALL (32)
#define FR_SHOWHELP (128)
#define FR_WHOLEWORD (2)
#define FSCTL_ALLOW_EXTENDED_DASD_IO CTL_CODE ( FILE_DEVICE_FILE_SYSTEM , 32 , METHOD_NEITHER , FILE_ANY_ACCESS )
#define FSCTL_CREATE_OR_GET_OBJECT_ID CTL_CODE ( FILE_DEVICE_FILE_SYSTEM , 48 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define FSCTL_CREATE_USN_JOURNAL CTL_CODE ( FILE_DEVICE_FILE_SYSTEM , 57 , METHOD_NEITHER , FILE_ANY_ACCESS )
#define FSCTL_DELETE_OBJECT_ID CTL_CODE ( FILE_DEVICE_FILE_SYSTEM , 40 , METHOD_BUFFERED , FILE_SPECIAL_ACCESS )
#define FSCTL_DELETE_REPARSE_POINT CTL_CODE ( FILE_DEVICE_FILE_SYSTEM , 43 , METHOD_BUFFERED , FILE_SPECIAL_ACCESS )
#define FSCTL_DELETE_USN_JOURNAL CTL_CODE ( FILE_DEVICE_FILE_SYSTEM , 62 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define FSCTL_DISMOUNT_VOLUME CTL_CODE ( FILE_DEVICE_FILE_SYSTEM , 8 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define FSCTL_ENCRYPTION_FSCTL_IO CTL_CODE ( FILE_DEVICE_FILE_SYSTEM , 54 , METHOD_NEITHER , FILE_ANY_ACCESS )
#define FSCTL_ENUM_USN_DATA CTL_CODE ( FILE_DEVICE_FILE_SYSTEM , 44 , METHOD_NEITHER , FILE_ANY_ACCESS )
#define FSCTL_EXTEND_VOLUME CTL_CODE ( FILE_DEVICE_FILE_SYSTEM , 60 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define FSCTL_FILESYSTEM_GET_STATISTICS CTL_CODE ( FILE_DEVICE_FILE_SYSTEM , 24 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define FSCTL_FILE_PREFETCH CTL_CODE ( FILE_DEVICE_FILE_SYSTEM , 72 , METHOD_BUFFERED , FILE_SPECIAL_ACCESS )
#define FSCTL_FIND_FILES_BY_SID CTL_CODE ( FILE_DEVICE_FILE_SYSTEM , 35 , METHOD_NEITHER , FILE_ANY_ACCESS )
#define FSCTL_GET_COMPRESSION CTL_CODE ( FILE_DEVICE_FILE_SYSTEM , 15 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define FSCTL_GET_NTFS_FILE_RECORD CTL_CODE ( FILE_DEVICE_FILE_SYSTEM , 26 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define FSCTL_GET_NTFS_VOLUME_DATA CTL_CODE ( FILE_DEVICE_FILE_SYSTEM , 25 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define FSCTL_GET_OBJECT_ID CTL_CODE ( FILE_DEVICE_FILE_SYSTEM , 39 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define FSCTL_GET_REPARSE_POINT CTL_CODE ( FILE_DEVICE_FILE_SYSTEM , 42 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define FSCTL_GET_RETRIEVAL_POINTERS CTL_CODE ( FILE_DEVICE_FILE_SYSTEM , 28 , METHOD_NEITHER , FILE_ANY_ACCESS )
#define FSCTL_GET_VOLUME_BITMAP CTL_CODE ( FILE_DEVICE_FILE_SYSTEM , 27 , METHOD_NEITHER , FILE_ANY_ACCESS )
#define FSCTL_HSM_DATA CTL_CODE ( FILE_DEVICE_FILE_SYSTEM , 68 , METHOD_NEITHER , FILE_READ_DATA | FILE_WRITE_DATA )
#define FSCTL_HSM_MSG CTL_CODE ( FILE_DEVICE_FILE_SYSTEM , 66 , METHOD_BUFFERED , FILE_READ_DATA | FILE_WRITE_DATA )
#define FSCTL_INVALIDATE_VOLUMES CTL_CODE ( FILE_DEVICE_FILE_SYSTEM , 21 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define FSCTL_IS_PATHNAME_VALID CTL_CODE ( FILE_DEVICE_FILE_SYSTEM , 11 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define FSCTL_IS_VOLUME_DIRTY CTL_CODE ( FILE_DEVICE_FILE_SYSTEM , 30 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define FSCTL_IS_VOLUME_MOUNTED CTL_CODE ( FILE_DEVICE_FILE_SYSTEM , 10 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define FSCTL_LOCK_VOLUME CTL_CODE ( FILE_DEVICE_FILE_SYSTEM , 6 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define FSCTL_MARK_AS_SYSTEM_HIVE CTL_CODE ( FILE_DEVICE_FILE_SYSTEM , 19 , METHOD_NEITHER , FILE_ANY_ACCESS )
#define FSCTL_MARK_HANDLE CTL_CODE ( FILE_DEVICE_FILE_SYSTEM , 63 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define FSCTL_MARK_VOLUME_DIRTY CTL_CODE ( FILE_DEVICE_FILE_SYSTEM , 12 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define FSCTL_MOVE_FILE CTL_CODE ( FILE_DEVICE_FILE_SYSTEM , 29 , METHOD_BUFFERED , FILE_SPECIAL_ACCESS )
#define FSCTL_OPBATCH_ACK_CLOSE_PENDING CTL_CODE ( FILE_DEVICE_FILE_SYSTEM , 4 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define FSCTL_OPLOCK_BREAK_ACKNOWLEDGE CTL_CODE ( FILE_DEVICE_FILE_SYSTEM , 3 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define FSCTL_OPLOCK_BREAK_ACK_NO_2 CTL_CODE ( FILE_DEVICE_FILE_SYSTEM , 20 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define FSCTL_OPLOCK_BREAK_NOTIFY CTL_CODE ( FILE_DEVICE_FILE_SYSTEM , 5 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define FSCTL_QUERY_ALLOCATED_RANGES CTL_CODE ( FILE_DEVICE_FILE_SYSTEM , 51 , METHOD_NEITHER , FILE_READ_DATA )
#define FSCTL_QUERY_FAT_BPB CTL_CODE ( FILE_DEVICE_FILE_SYSTEM , 22 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define FSCTL_QUERY_RETRIEVAL_POINTERS CTL_CODE ( FILE_DEVICE_FILE_SYSTEM , 14 , METHOD_NEITHER , FILE_ANY_ACCESS )
#define FSCTL_QUERY_USN_JOURNAL CTL_CODE ( FILE_DEVICE_FILE_SYSTEM , 61 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define FSCTL_READ_FILE_USN_DATA CTL_CODE ( FILE_DEVICE_FILE_SYSTEM , 58 , METHOD_NEITHER , FILE_ANY_ACCESS )
#define FSCTL_READ_FROM_PLEX CTL_CODE ( FILE_DEVICE_FILE_SYSTEM , 71 , METHOD_OUT_DIRECT , FILE_READ_DATA )
#define FSCTL_READ_RAW_ENCRYPTED CTL_CODE ( FILE_DEVICE_FILE_SYSTEM , 56 , METHOD_NEITHER , FILE_SPECIAL_ACCESS )
#define FSCTL_READ_USN_JOURNAL CTL_CODE ( FILE_DEVICE_FILE_SYSTEM , 46 , METHOD_NEITHER , FILE_ANY_ACCESS )
#define FSCTL_RECALL_FILE CTL_CODE ( FILE_DEVICE_FILE_SYSTEM , 69 , METHOD_NEITHER , FILE_ANY_ACCESS )
#define FSCTL_REQUEST_BATCH_OPLOCK CTL_CODE ( FILE_DEVICE_FILE_SYSTEM , 2 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define FSCTL_REQUEST_FILTER_OPLOCK CTL_CODE ( FILE_DEVICE_FILE_SYSTEM , 23 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define FSCTL_REQUEST_OPLOCK_LEVEL_1 CTL_CODE ( FILE_DEVICE_FILE_SYSTEM , 0 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define FSCTL_REQUEST_OPLOCK_LEVEL_2 CTL_CODE ( FILE_DEVICE_FILE_SYSTEM , 1 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define FSCTL_SECURITY_ID_CHECK CTL_CODE ( FILE_DEVICE_FILE_SYSTEM , 45 , METHOD_NEITHER , FILE_READ_DATA )
#define FSCTL_SET_COMPRESSION CTL_CODE ( FILE_DEVICE_FILE_SYSTEM , 16 , METHOD_BUFFERED , FILE_READ_DATA | FILE_WRITE_DATA )
#define FSCTL_SET_ENCRYPTION CTL_CODE ( FILE_DEVICE_FILE_SYSTEM , 53 , METHOD_NEITHER , FILE_ANY_ACCESS )
#define FSCTL_SET_OBJECT_ID CTL_CODE ( FILE_DEVICE_FILE_SYSTEM , 38 , METHOD_BUFFERED , FILE_SPECIAL_ACCESS )
#define FSCTL_SET_OBJECT_ID_EXTENDED CTL_CODE ( FILE_DEVICE_FILE_SYSTEM , 47 , METHOD_BUFFERED , FILE_SPECIAL_ACCESS )
#define FSCTL_SET_REPARSE_POINT CTL_CODE ( FILE_DEVICE_FILE_SYSTEM , 41 , METHOD_BUFFERED , FILE_SPECIAL_ACCESS )
#define FSCTL_SET_SPARSE CTL_CODE ( FILE_DEVICE_FILE_SYSTEM , 49 , METHOD_BUFFERED , FILE_SPECIAL_ACCESS )
#define FSCTL_SET_ZERO_DATA CTL_CODE ( FILE_DEVICE_FILE_SYSTEM , 50 , METHOD_BUFFERED , FILE_WRITE_DATA )
#define FSCTL_SIS_COPYFILE CTL_CODE ( FILE_DEVICE_FILE_SYSTEM , 64 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define FSCTL_SIS_LINK_FILES CTL_CODE ( FILE_DEVICE_FILE_SYSTEM , 65 , METHOD_BUFFERED , FILE_READ_DATA | FILE_WRITE_DATA )
#define FSCTL_UNLOCK_VOLUME CTL_CODE ( FILE_DEVICE_FILE_SYSTEM , 7 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define FSCTL_WRITE_RAW_ENCRYPTED CTL_CODE ( FILE_DEVICE_FILE_SYSTEM , 55 , METHOD_NEITHER , FILE_SPECIAL_ACCESS )
#define FSCTL_WRITE_USN_CLOSE_RECORD CTL_CODE ( FILE_DEVICE_FILE_SYSTEM , 59 , METHOD_NEITHER , FILE_ANY_ACCESS )
#define FSHIFT (4)
#define FS_ARABIC __MSABI_LONG ( 0x00000040 )
#define FS_BALTIC __MSABI_LONG ( 0x00000080 )
#define FS_CASE_IS_PRESERVED FILE_CASE_PRESERVED_NAMES
#define FS_CASE_SENSITIVE FILE_CASE_SENSITIVE_SEARCH
#define FS_CHINESESIMP __MSABI_LONG ( 0x00040000 )
#define FS_CHINESETRAD __MSABI_LONG ( 0x00100000 )
#define FS_CYRILLIC __MSABI_LONG ( 0x00000004 )
#define FS_FILE_COMPRESSION FILE_FILE_COMPRESSION
#define FS_FILE_ENCRYPTION FILE_SUPPORTS_ENCRYPTION
#define FS_GREEK __MSABI_LONG ( 0x00000008 )
#define FS_HEBREW __MSABI_LONG ( 0x00000020 )
#define FS_JISJAPAN __MSABI_LONG ( 0x00020000 )
#define FS_JOHAB __MSABI_LONG ( 0x00200000 )
#define FS_LATIN1 __MSABI_LONG ( 0x00000001 )
#define FS_LATIN2 __MSABI_LONG ( 0x00000002 )
#define FS_PERSISTENT_ACLS FILE_PERSISTENT_ACLS
#define FS_SYMBOL __MSABI_LONG ( 0x80000000 )
#define FS_THAI __MSABI_LONG ( 0x00010000 )
#define FS_TURKISH __MSABI_LONG ( 0x00000010 )
#define FS_UNICODE_STORED_ON_DISK FILE_UNICODE_ON_DISK
#define FS_VIETNAMESE __MSABI_LONG ( 0x00000100 )
#define FS_VOL_IS_COMPRESSED FILE_VOLUME_IS_COMPRESSED
#define FS_WANSUNG __MSABI_LONG ( 0x00080000 )
#define FVIRTKEY TRUE
#define FW_BLACK FW_HEAVY
#define FW_BOLD (700)
#define FW_DEMIBOLD FW_SEMIBOLD
#define FW_DONTCARE (0)
#define FW_EXTRABOLD (800)
#define FW_EXTRALIGHT (200)
#define FW_HEAVY (900)
#define FW_LIGHT (300)
#define FW_MEDIUM (500)
#define FW_NORMAL (400)
#define FW_REGULAR FW_NORMAL
#define FW_SEMIBOLD (600)
#define FW_THIN (100)
#define FW_ULTRABOLD FW_EXTRABOLD
#define FW_ULTRALIGHT FW_EXTRALIGHT
#define FastFence __faststorefence
#define FatalAppExit __MINGW_NAME_AW ( FatalAppExit )
#define FileEncryptionStatus __MINGW_NAME_AW ( FileEncryptionStatus )
#define FillConsoleOutputCharacter __MINGW_NAME_AW ( FillConsoleOutputCharacter )
#define FillMemory RtlFillMemory
#define FindActCtxSectionString __MINGW_NAME_AW ( FindActCtxSectionString )
#define FindAtom __MINGW_NAME_AW ( FindAtom )
#define FindExecutable __MINGW_NAME_AW ( FindExecutable )
#define FindFirstChangeNotification __MINGW_NAME_AW ( FindFirstChangeNotification )
#define FindFirstFile __MINGW_NAME_AW ( FindFirstFile )
#define FindFirstFileEx __MINGW_NAME_AW ( FindFirstFileEx )
#define FindFirstVolume FindFirstVolumeA
#define FindFirstVolumeMountPoint __MINGW_NAME_AW ( FindFirstVolumeMountPoint )
#define FindNextFile __MINGW_NAME_AW ( FindNextFile )
#define FindNextVolume FindNextVolumeA
#define FindNextVolumeMountPoint __MINGW_NAME_AW ( FindNextVolumeMountPoint )
#define FindResource __MINGW_NAME_AW ( FindResource )
#define FindResourceEx FindResourceExA
#define FindText __MINGW_NAME_AW ( FindText )
#define FindWindow __MINGW_NAME_AW ( FindWindow )
#define FindWindowEx __MINGW_NAME_AW ( FindWindowEx )
#define FloppyClassGuid GUID_DEVINTERFACE_FLOPPY
#define FoldString FoldStringA
#define FormatMessage __MINGW_NAME_AW ( FormatMessage )
#define FreeEnvironmentStrings __MINGW_NAME_AW ( FreeEnvironmentStrings )
#define FreeModule(hLibModule) FreeLibrary ( ( hLibModule ) )
#define FreeProcInstance(lpProc) ( lpProc )
#define GA_PARENT (1)
#define GA_ROOT (2)
#define GA_ROOTOWNER (3)
#define GB2312_CHARSET (134)
#define GCLP_HBRBACKGROUND (-10)
#define GCLP_HCURSOR (-12)
#define GCLP_HICON (-14)
#define GCLP_HICONSM (-34)
#define GCLP_HMODULE (-16)
#define GCLP_MENUNAME (-8)
#define GCLP_WNDPROC (-24)
#define GCL_CBCLSEXTRA (-20)
#define GCL_CBWNDEXTRA (-18)
#define GCL_CONVERSION (1)
#define GCL_REVERSECONVERSION (2)
#define GCL_REVERSE_LENGTH (3)
#define GCL_STYLE (-26)
#define GCPCLASS_ARABIC (2)
#define GCPCLASS_HEBREW (2)
#define GCPCLASS_LATIN (1)
#define GCPCLASS_LATINNUMBER (5)
#define GCPCLASS_LATINNUMERICSEPARATOR (7)
#define GCPCLASS_LATINNUMERICTERMINATOR (6)
#define GCPCLASS_LOCALNUMBER (4)
#define GCPCLASS_NEUTRAL (3)
#define GCPCLASS_NUMERICSEPARATOR (8)
#define GCPCLASS_POSTBOUNDLTR (32)
#define GCPCLASS_POSTBOUNDRTL (16)
#define GCPCLASS_PREBOUNDLTR (128)
#define GCPCLASS_PREBOUNDRTL (64)
#define GCPGLYPH_LINKAFTER (16384)
#define GCPGLYPH_LINKBEFORE (32768)
#define GCP_CLASSIN __MSABI_LONG ( 0x00080000 )
#define GCP_DBCS (1)
#define GCP_DIACRITIC (256)
#define GCP_DISPLAYZWG __MSABI_LONG ( 0x00400000 )
#define GCP_ERROR (32768)
#define GCP_GLYPHSHAPE (16)
#define GCP_JUSTIFY __MSABI_LONG ( 0x00010000 )
#define GCP_JUSTIFYIN __MSABI_LONG ( 0x00200000 )
#define GCP_KASHIDA (1024)
#define GCP_LIGATE (32)
#define GCP_MAXEXTENT __MSABI_LONG ( 0x00100000 )
#define GCP_NEUTRALOVERRIDE __MSABI_LONG ( 0x02000000 )
#define GCP_NUMERICOVERRIDE __MSABI_LONG ( 0x01000000 )
#define GCP_NUMERICSLATIN __MSABI_LONG ( 0x04000000 )
#define GCP_NUMERICSLOCAL __MSABI_LONG ( 0x08000000 )
#define GCP_REORDER (2)
#define GCP_SYMSWAPOFF __MSABI_LONG ( 0x00800000 )
#define GCP_USEKERNING (8)
#define GCS_COMPATTR (16)
#define GCS_COMPCLAUSE (32)
#define GCS_COMPREADATTR (2)
#define GCS_COMPREADCLAUSE (4)
#define GCS_COMPREADSTR (1)
#define GCS_COMPSTR (8)
#define GCS_CURSORPOS (128)
#define GCS_DELTASTART (256)
#define GCS_RESULTCLAUSE (4096)
#define GCS_RESULTREADCLAUSE (1024)
#define GCS_RESULTREADSTR (512)
#define GCS_RESULTSTR (2048)
#define GCW_ATOM (-32)
#define GDICOMMENT_BEGINGROUP (2)
#define GDICOMMENT_ENDGROUP (3)
#define GDICOMMENT_IDENTIFIER (1128875079)
#define GDICOMMENT_MULTIFORMATS (1073741828)
#define GDICOMMENT_UNICODE_END (128)
#define GDICOMMENT_UNICODE_STRING (64)
#define GDICOMMENT_WINDOWS_METAFILE (2147483649u)
#define GDIPLUS_TS_QUERYVER (4122)
#define GDIPLUS_TS_RECORD (4123)
#define GDI_ERROR (-1l)
#define GDI_OBJ_LAST OBJ_COLORSPACE
#define GENERIC_ALL (268435456l)
#define GENERIC_EXECUTE (536870912l)
#define GENERIC_READ (-2147483648l)
#define GENERIC_WRITE (1073741824l)
#define GEOID_NOT_AVAILABLE (-1)
#define GETCOLORTABLE (5)
#define GETDEVICEUNITS (42)
#define GETEXTENDEDTEXTMETRICS (256)
#define GETEXTENTTABLE (257)
#define GETFACENAME (513)
#define GETPAIRKERNTABLE (258)
#define GETPENWIDTH (16)
#define GETPHYSPAGESIZE (12)
#define GETPRINTINGOFFSET (13)
#define GETSCALINGFACTOR (14)
#define GETSETPAPERBINS (29)
#define GETSETPAPERMETRICS (35)
#define GETSETPRINTORIENT (30)
#define GETSETSCREENPARAMS (3072)
#define GETTECHNOLGY (20)
#define GETTECHNOLOGY (20)
#define GETTRACKKERNTABLE (259)
#define GETVECTORBRUSHSIZE (27)
#define GETVECTORPENSIZE (26)
#define GET_ALG_CLASS(x) ( x & ( 7 << 13 ) )
#define GET_ALG_SID(x) ( x & 511 )
#define GET_ALG_TYPE(x) ( x & ( 15 << 9 ) )
#define GET_APPCOMMAND_LPARAM(lParam) ( ( short ) ( HIWORD ( lParam ) & ~ FAPPCOMMAND_MASK ) )
#define GET_CERT_ALT_NAME_ENTRY_ERR_INDEX(X) ( ( X >> CERT_ALT_NAME_ENTRY_ERR_INDEX_SHIFT ) & CERT_ALT_NAME_ENTRY_ERR_INDEX_MASK )
#define GET_CERT_ALT_NAME_VALUE_ERR_INDEX(X) ( X & CERT_ALT_NAME_VALUE_ERR_INDEX_MASK )
#define GET_CERT_ENCODING_TYPE(T) ( T & CERT_ENCODING_TYPE_MASK )
#define GET_CERT_UNICODE_ATTR_ERR_INDEX(X) ( ( X >> CERT_UNICODE_ATTR_ERR_INDEX_SHIFT ) & CERT_UNICODE_ATTR_ERR_INDEX_MASK )
#define GET_CERT_UNICODE_RDN_ERR_INDEX(X) ( ( X >> CERT_UNICODE_RDN_ERR_INDEX_SHIFT ) & CERT_UNICODE_RDN_ERR_INDEX_MASK )
#define GET_CERT_UNICODE_VALUE_ERR_INDEX(X) ( X & CERT_UNICODE_VALUE_ERR_INDEX_MASK )
#define GET_CMSG_ENCODING_TYPE(T) ( T & CMSG_ENCODING_TYPE_MASK )
#define GET_CRL_DIST_POINT_ERR_INDEX(X) ( ( X >> CRL_DIST_POINT_ERR_INDEX_SHIFT ) & CRL_DIST_POINT_ERR_INDEX_MASK )
#define GET_CROSS_CERT_DIST_POINT_ERR_INDEX(X) ( ( X >> CROSS_CERT_DIST_POINT_ERR_INDEX_SHIFT ) & CROSS_CERT_DIST_POINT_ERR_INDEX_MASK )
#define GET_DEVICE_CHANGE_LPARAM(lParam) ( LOWORD ( lParam ) )
#define GET_DEVICE_LPARAM(lParam) ( ( WORD ) ( HIWORD ( lParam ) & FAPPCOMMAND_MASK ) )
#define GET_FLAGS_LPARAM(lParam) ( LOWORD ( lParam ) )
#define GET_KEYSTATE_LPARAM(lParam) GET_FLAGS_LPARAM ( lParam )
#define GET_KEYSTATE_WPARAM(wParam) ( LOWORD ( wParam ) )
#define GET_MODULE_HANDLE_EX_FLAG_FROM_ADDRESS (4)
#define GET_MODULE_HANDLE_EX_FLAG_PIN (1)
#define GET_MODULE_HANDLE_EX_FLAG_UNCHANGED_REFCOUNT (2)
#define GET_MOUSEORKEY_LPARAM GET_DEVICE_LPARAM
#define GET_NCHITTEST_WPARAM(wParam) ( ( short ) LOWORD ( wParam ) )
#define GET_PS_FEATURESETTING (4121)
#define GET_RAWINPUT_CODE_WPARAM(wParam) ( ( wParam ) & 0xff )
#define GET_SC_WPARAM(wParam) ( ( int ) wParam & 0xfff0 )
#define GET_SYSTEM_WOW64_DIRECTORY_NAME_A_A "GetSystemWow64DirectoryA"
#define GET_SYSTEM_WOW64_DIRECTORY_NAME_A_T TEXT ( "GetSystemWow64DirectoryA" )
#define GET_SYSTEM_WOW64_DIRECTORY_NAME_A_W "GetSystemWow64DirectoryA"
#define GET_SYSTEM_WOW64_DIRECTORY_NAME_T_A __MINGW_NAME_UAW_EXT ( GET_SYSTEM_WOW64_DIRECTORY_NAME , A )
#define GET_SYSTEM_WOW64_DIRECTORY_NAME_T_T __MINGW_NAME_UAW_EXT ( GET_SYSTEM_WOW64_DIRECTORY_NAME , T )
#define GET_SYSTEM_WOW64_DIRECTORY_NAME_T_W __MINGW_NAME_UAW_EXT ( GET_SYSTEM_WOW64_DIRECTORY_NAME , W )
#define GET_SYSTEM_WOW64_DIRECTORY_NAME_W_A "GetSystemWow64DirectoryW"
#define GET_SYSTEM_WOW64_DIRECTORY_NAME_W_T TEXT ( "GetSystemWow64DirectoryW" )
#define GET_SYSTEM_WOW64_DIRECTORY_NAME_W_W "GetSystemWow64DirectoryW"
#define GET_TAPE_DRIVE_INFORMATION (1)
#define GET_TAPE_MEDIA_INFORMATION (0)
#define GET_USER_DATA_REP(f) ( ( f ) >> 16 )
#define GET_WHEEL_DELTA_WPARAM(wParam) ( ( short ) HIWORD ( wParam ) )
#define GET_XBUTTON_WPARAM(wParam) ( HIWORD ( wParam ) )
#define GGI_MARK_NONEXISTING_GLYPHS (1)
#define GGL_INDEX (2)
#define GGL_LEVEL (1)
#define GGL_PRIVATE (4)
#define GGL_STRING (3)
#define GGO_BEZIER (3)
#define GGO_BITMAP (1)
#define GGO_GLYPH_INDEX (128)
#define GGO_GRAY2_BITMAP (4)
#define GGO_GRAY4_BITMAP (5)
#define GGO_GRAY8_BITMAP (6)
#define GGO_METRICS (0)
#define GGO_NATIVE (2)
#define GGO_UNHINTED (256)
#define GHND (66)
#define GIDC_ARRIVAL (1)
#define GIDC_REMOVAL (2)
#define GL_ID_CANNOTSAVE (17)
#define GL_ID_CHOOSECANDIDATE (40)
#define GL_ID_INPUTCODE (38)
#define GL_ID_INPUTRADICAL (37)
#define GL_ID_INPUTREADING (36)
#define GL_ID_INPUTSYMBOL (39)
#define GL_ID_NOCONVERT (32)
#define GL_ID_NODICTIONARY (16)
#define GL_ID_NOMODULE (1)
#define GL_ID_PRIVATE_FIRST (32768)
#define GL_ID_PRIVATE_LAST (65535)
#define GL_ID_READINGCONFLICT (35)
#define GL_ID_REVERSECONVERSION (41)
#define GL_ID_TOOMANYSTROKE (34)
#define GL_ID_TYPINGERROR (33)
#define GL_ID_UNKNOWN (0)
#define GL_LEVEL_ERROR (2)
#define GL_LEVEL_FATAL (1)
#define GL_LEVEL_INFORMATION (4)
#define GL_LEVEL_NOGUIDELINE (0)
#define GL_LEVEL_WARNING (3)
#define GMDI_GOINTOPOPUPS __MSABI_LONG ( 0x0002 )
#define GMDI_USEDISABLED __MSABI_LONG ( 0x0001 )
#define GMEM_DDESHARE (8192)
#define GMEM_DISCARDABLE (256)
#define GMEM_DISCARDED (16384)
#define GMEM_FIXED (0)
#define GMEM_INVALID_HANDLE (32768)
#define GMEM_LOCKCOUNT (255)
#define GMEM_LOWER GMEM_NOT_BANKED
#define GMEM_MODIFY (128)
#define GMEM_MOVEABLE (2)
#define GMEM_NOCOMPACT (16)
#define GMEM_NODISCARD (32)
#define GMEM_NOTIFY (16384)
#define GMEM_NOT_BANKED (4096)
#define GMEM_SHARE (8192)
#define GMEM_VALID_FLAGS (32626)
#define GMEM_ZEROINIT (64)
#define GMMP_USE_DISPLAY_POINTS (1)
#define GMMP_USE_HIGH_RESOLUTION_POINTS (2)
#define GM_ADVANCED (2)
#define GM_COMPATIBLE (1)
#define GM_LAST (2)
#define GPTR (64)
#define GPT_ATTRIBUTE_PLATFORM_REQUIRED (1)
#define GPT_BASIC_DATA_ATTRIBUTE_HIDDEN (4611686018427387904ll)
#define GPT_BASIC_DATA_ATTRIBUTE_NO_DRIVE_LETTER (9223372036854775808ull)
#define GPT_BASIC_DATA_ATTRIBUTE_READ_ONLY (1152921504606846976ll)
#define GPT_BASIC_DATA_ATTRIBUTE_SHADOW_COPY (2305843009213693952ll)
#define GRADIENT_FILL_OP_FLAG (255)
#define GRADIENT_FILL_RECT_H (0)
#define GRADIENT_FILL_RECT_V (1)
#define GRADIENT_FILL_TRIANGLE (2)
#define GRAY_BRUSH (2)
#define GREEK_CHARSET (161)
#define GROUP_NAME (128)
#define GROUP_SECURITY_INFORMATION (2l)
#define GR_GDIOBJECTS (0)
#define GR_USEROBJECTS (1)
#define GS_8BIT_INDICES (1)
#define GUID_CLASS_COMPORT GUID_DEVINTERFACE_COMPORT
#define GUID_DEFINED 
#define GUID_SERENUM_BUS_ENUMERATOR GUID_DEVINTERFACE_SERENUM_BUS_ENUMERATOR
#define GUI_16BITTASK (0)
#define GUI_CARETBLINKING (1)
#define GUI_INMENUMODE (4)
#define GUI_INMOVESIZE (2)
#define GUI_POPUPMENUMODE (16)
#define GUI_SYSTEMMENUMODE (8)
#define GWLP_HINSTANCE (-6)
#define GWLP_HWNDPARENT (-8)
#define GWLP_ID (-12)
#define GWLP_USERDATA (-21)
#define GWLP_WNDPROC (-4)
#define GWL_EXSTYLE (-20)
#define GWL_ID (-12)
#define GWL_STYLE (-16)
#define GW_CHILD (5)
#define GW_ENABLEDPOPUP (6)
#define GW_HWNDFIRST (0)
#define GW_HWNDLAST (1)
#define GW_HWNDNEXT (2)
#define GW_HWNDPREV (3)
#define GW_MAX (6)
#define GW_OWNER (4)
#define GetAltTabInfo __MINGW_NAME_AW ( GetAltTabInfo )
#define GetAtomName __MINGW_NAME_AW ( GetAtomName )
#define GetBValue(rgb) ( LOBYTE ( ( rgb ) >> 16 ) )
#define GetBinaryType __MINGW_NAME_AW ( GetBinaryType )
#define GetCPInfoEx __MINGW_NAME_AW ( GetCPInfoEx )
#define GetCValue(cmyk) ( ( BYTE ) ( ( cmyk ) >> 24 ) )
#define GetCalendarInfo __MINGW_NAME_AW ( GetCalendarInfo )
#define GetCallersEflags() __getcallerseflags ( )
#define GetCharABCWidths __MINGW_NAME_AW ( GetCharABCWidths )
#define GetCharABCWidthsFloat __MINGW_NAME_AW ( GetCharABCWidthsFloat )
#define GetCharWidth __MINGW_NAME_AW ( GetCharWidth )
#define GetCharWidth32 __MINGW_NAME_AW ( GetCharWidth32 )
#define GetCharWidthFloat __MINGW_NAME_AW ( GetCharWidthFloat )
#define GetCharacterPlacement __MINGW_NAME_AW ( GetCharacterPlacement )
#define GetClassInfo __MINGW_NAME_AW ( GetClassInfo )
#define GetClassInfoEx __MINGW_NAME_AW ( GetClassInfoEx )
#define GetClassLong __MINGW_NAME_AW ( GetClassLong )
#define GetClassLongPtr __MINGW_NAME_AW ( GetClassLongPtr )
#define GetClassName __MINGW_NAME_AW ( GetClassName )
#define GetClipboardFormatName __MINGW_NAME_AW ( GetClipboardFormatName )
#define GetCommandLine __MINGW_NAME_AW ( GetCommandLine )
#define GetCompressedFileSize __MINGW_NAME_AW ( GetCompressedFileSize )
#define GetComputerName __MINGW_NAME_AW ( GetComputerName )
#define GetComputerNameEx __MINGW_NAME_AW ( GetComputerNameEx )
#define GetConsoleAlias __MINGW_NAME_AW ( GetConsoleAlias )
#define GetConsoleAliasExes __MINGW_NAME_AW ( GetConsoleAliasExes )
#define GetConsoleAliasExesLength __MINGW_NAME_AW ( GetConsoleAliasExesLength )
#define GetConsoleAliases __MINGW_NAME_AW ( GetConsoleAliases )
#define GetConsoleAliasesLength __MINGW_NAME_AW ( GetConsoleAliasesLength )
#define GetConsoleTitle __MINGW_NAME_AW ( GetConsoleTitle )
#define GetCurrencyFormat __MINGW_NAME_AW ( GetCurrencyFormat )
#define GetCurrentDirectory __MINGW_NAME_AW ( GetCurrentDirectory )
#define GetCurrentHwProfile __MINGW_NAME_AW ( GetCurrentHwProfile )
#define GetCurrentTime() GetTickCount ( )
#define GetDateFormat __MINGW_NAME_AW ( GetDateFormat )
#define GetDefaultCommConfig __MINGW_NAME_AW ( GetDefaultCommConfig )
#define GetDefaultPrinter __MINGW_NAME_AW ( GetDefaultPrinter )
#define GetDiskFreeSpace __MINGW_NAME_AW ( GetDiskFreeSpace )
#define GetDiskFreeSpaceEx __MINGW_NAME_AW ( GetDiskFreeSpaceEx )
#define GetDlgItemText __MINGW_NAME_AW ( GetDlgItemText )
#define GetDllDirectory __MINGW_NAME_AW ( GetDllDirectory )
#define GetDriveType __MINGW_NAME_AW ( GetDriveType )
#define GetEnhMetaFile __MINGW_NAME_AW ( GetEnhMetaFile )
#define GetEnhMetaFileDescription __MINGW_NAME_AW ( GetEnhMetaFileDescription )
#define GetEnvironmentStringsA GetEnvironmentStrings
#define GetEnvironmentVariable __MINGW_NAME_AW ( GetEnvironmentVariable )
#define GetExceptionCode _exception_code
#define GetExceptionInformation ( struct _EXCEPTION_POINTERS * ) _exception_info
#define GetExpandedName __MINGW_NAME_AW ( GetExpandedName )
#define GetFileAttributes __MINGW_NAME_AW ( GetFileAttributes )
#define GetFileAttributesEx __MINGW_NAME_AW ( GetFileAttributesEx )
#define GetFileSecurity GetFileSecurityA
#define GetFileTitle __MINGW_NAME_AW ( GetFileTitle )
#define GetFileVersionInfo __MINGW_NAME_AW ( GetFileVersionInfo )
#define GetFileVersionInfoSize __MINGW_NAME_AW ( GetFileVersionInfoSize )
#define GetFirmwareEnvironmentVariable __MINGW_NAME_AW ( GetFirmwareEnvironmentVariable )
#define GetForm __MINGW_NAME_AW ( GetForm )
#define GetFreeSpace(w) ( __MSABI_LONG ( 0x100000 ) )
#define GetFullPathName __MINGW_NAME_AW ( GetFullPathName )
#define GetGValue(rgb) ( LOBYTE ( ( ( WORD ) ( rgb ) ) >> 8 ) )
#define GetGeoInfo __MINGW_NAME_AW ( GetGeoInfo )
#define GetGlyphIndices __MINGW_NAME_AW ( GetGlyphIndices )
#define GetGlyphOutline __MINGW_NAME_AW ( GetGlyphOutline )
#define GetICMProfile __MINGW_NAME_AW ( GetICMProfile )
#define GetJob __MINGW_NAME_AW ( GetJob )
#define GetKValue(cmyk) ( ( BYTE ) ( cmyk ) )
#define GetKerningPairs __MINGW_NAME_AW ( GetKerningPairs )
#define GetKeyNameText __MINGW_NAME_AW ( GetKeyNameText )
#define GetKeyboardLayoutName __MINGW_NAME_AW ( GetKeyboardLayoutName )
#define GetLocaleInfo GetLocaleInfoA
#define GetLogColorSpace __MINGW_NAME_AW ( GetLogColorSpace )
#define GetLogicalDriveStrings GetLogicalDriveStringsA
#define GetLongPathName __MINGW_NAME_AW ( GetLongPathName )
#define GetMValue(cmyk) ( ( BYTE ) ( ( cmyk ) >> 16 ) )
#define GetMenuItemInfo __MINGW_NAME_AW ( GetMenuItemInfo )
#define GetMenuString __MINGW_NAME_AW ( GetMenuString )
#define GetMessage __MINGW_NAME_AW ( GetMessage )
#define GetMetaFile __MINGW_NAME_AW ( GetMetaFile )
#define GetModuleFileName __MINGW_NAME_AW ( GetModuleFileName )
#define GetModuleHandle __MINGW_NAME_AW ( GetModuleHandle )
#define GetModuleHandleEx __MINGW_NAME_AW ( GetModuleHandleEx )
#define GetMonitorInfo __MINGW_NAME_AW ( GetMonitorInfo )
#define GetNamedPipeHandleState __MINGW_NAME_AW ( GetNamedPipeHandleState )
#define GetNextWindow(hWnd, wCmd) GetWindow ( hWnd , wCmd )
#define GetNumberFormat __MINGW_NAME_AW ( GetNumberFormat )
#define GetObject __MINGW_NAME_AW ( GetObject )
#define GetOpenCardName __MINGW_NAME_AW ( GetOpenCardName )
#define GetOpenFileName __MINGW_NAME_AW ( GetOpenFileName )
#define GetOutlineTextMetrics __MINGW_NAME_AW ( GetOutlineTextMetrics )
#define GetPrintProcessorDirectory __MINGW_NAME_AW ( GetPrintProcessorDirectory )
#define GetPrinter __MINGW_NAME_AW ( GetPrinter )
#define GetPrinterData __MINGW_NAME_AW ( GetPrinterData )
#define GetPrinterDataEx __MINGW_NAME_AW ( GetPrinterDataEx )
#define GetPrinterDriver __MINGW_NAME_AW ( GetPrinterDriver )
#define GetPrinterDriverDirectory __MINGW_NAME_AW ( GetPrinterDriverDirectory )
#define GetPrivateProfileInt __MINGW_NAME_AW ( GetPrivateProfileInt )
#define GetPrivateProfileSection __MINGW_NAME_AW ( GetPrivateProfileSection )
#define GetPrivateProfileSectionNames __MINGW_NAME_AW ( GetPrivateProfileSectionNames )
#define GetPrivateProfileString __MINGW_NAME_AW ( GetPrivateProfileString )
#define GetPrivateProfileStruct __MINGW_NAME_AW ( GetPrivateProfileStruct )
#define GetProfileInt __MINGW_NAME_AW ( GetProfileInt )
#define GetProfileSection __MINGW_NAME_AW ( GetProfileSection )
#define GetProfileString __MINGW_NAME_AW ( GetProfileString )
#define GetProp __MINGW_NAME_AW ( GetProp )
#define GetRValue(rgb) ( LOBYTE ( rgb ) )
#define GetRawInputDeviceInfo __MINGW_NAME_AW ( GetRawInputDeviceInfo )
#define GetSaveFileName __MINGW_NAME_AW ( GetSaveFileName )
#define GetScode(hr) ( ( SCODE ) ( hr ) )
#define GetSegmentLimit __segmentlimit
#define GetServiceDisplayName __MINGW_NAME_AW ( GetServiceDisplayName )
#define GetServiceKeyName __MINGW_NAME_AW ( GetServiceKeyName )
#define GetShortPathName GetShortPathNameA
#define GetStartupInfo GetStartupInfoA
#define GetStringTypeEx GetStringTypeExA
#define GetSysModalWindow() ( NULL )
#define GetSystemDirectory __MINGW_NAME_AW ( GetSystemDirectory )
#define GetSystemWindowsDirectory __MINGW_NAME_AW ( GetSystemWindowsDirectory )
#define GetSystemWow64Directory __MINGW_NAME_AW ( GetSystemWow64Directory )
#define GetTabbedTextExtent __MINGW_NAME_AW ( GetTabbedTextExtent )
#define GetTempFileName GetTempFileNameA
#define GetTempPath GetTempPathA
#define GetTextExtentExPoint __MINGW_NAME_AW ( GetTextExtentExPoint )
#define GetTextExtentPoint __MINGW_NAME_AW ( GetTextExtentPoint )
#define GetTextExtentPoint32 __MINGW_NAME_AW ( GetTextExtentPoint32 )
#define GetTextFace __MINGW_NAME_AW ( GetTextFace )
#define GetTextMetrics __MINGW_NAME_AW ( GetTextMetrics )
#define GetTimeFormat __MINGW_NAME_AW ( GetTimeFormat )
#define GetUserName __MINGW_NAME_AW ( GetUserName )
#define GetUserObjectInformation __MINGW_NAME_AW ( GetUserObjectInformation )
#define GetVersionEx __MINGW_NAME_AW ( GetVersionEx )
#define GetVolumeInformation GetVolumeInformationA
#define GetVolumeNameForVolumeMountPoint GetVolumeNameForVolumeMountPointA
#define GetVolumePathName GetVolumePathNameA
#define GetVolumePathNamesForVolumeName GetVolumePathNamesForVolumeNameA
#define GetWindowLong __MINGW_NAME_AW ( GetWindowLong )
#define GetWindowLongPtr __MINGW_NAME_AW ( GetWindowLongPtr )
#define GetWindowModuleFileName __MINGW_NAME_AW ( GetWindowModuleFileName )
#define GetWindowTask(hWnd) ( ( HANDLE ) ( DWORD_PTR ) GetWindowThreadProcessId ( hWnd , NULL ) )
#define GetWindowText __MINGW_NAME_AW ( GetWindowText )
#define GetWindowTextLength __MINGW_NAME_AW ( GetWindowTextLength )
#define GetWindowsDirectory __MINGW_NAME_AW ( GetWindowsDirectory )
#define GetYValue(cmyk) ( ( BYTE ) ( ( cmyk ) >> 8 ) )
#define GlobalAddAtom __MINGW_NAME_AW ( GlobalAddAtom )
#define GlobalAddAtomEx __MINGW_NAME_AW ( GlobalAddAtomEx )
#define GlobalDiscard(h) GlobalReAlloc ( ( h ) , 0 , GMEM_MOVEABLE )
#define GlobalFindAtom __MINGW_NAME_AW ( GlobalFindAtom )
#define GlobalGetAtomName __MINGW_NAME_AW ( GlobalGetAtomName )
#define GlobalLRUNewest(h) ( ( HANDLE ) ( h ) )
#define GlobalLRUOldest(h) ( ( HANDLE ) ( h ) )
#define GrayString __MINGW_NAME_AW ( GrayString )
#define HALFTONE (4)
#define HANDLE_FLAG_INHERIT (1)
#define HANDLE_FLAG_PROTECT_FROM_CLOSE (2)
#define HANGEUL_CHARSET (129)
#define HANGUL_CHARSET (129)
#define HANGUP_COMPLETE (5)
#define HANGUP_PENDING (4)
#define HBMMENU_CALLBACK (-1)
#define HBMMENU_MBAR_CLOSE ( ( HBITMAP ) 5 )
#define HBMMENU_MBAR_CLOSE_D ( ( HBITMAP ) 6 )
#define HBMMENU_MBAR_MINIMIZE ( ( HBITMAP ) 3 )
#define HBMMENU_MBAR_MINIMIZE_D ( ( HBITMAP ) 7 )
#define HBMMENU_MBAR_RESTORE ( ( HBITMAP ) 2 )
#define HBMMENU_POPUP_CLOSE ( ( HBITMAP ) 8 )
#define HBMMENU_POPUP_MAXIMIZE ( ( HBITMAP ) 10 )
#define HBMMENU_POPUP_MINIMIZE ( ( HBITMAP ) 11 )
#define HBMMENU_POPUP_RESTORE ( ( HBITMAP ) 9 )
#define HBMMENU_SYSTEM ( ( HBITMAP ) 1 )
#define HCBT_ACTIVATE (5)
#define HCBT_CLICKSKIPPED (6)
#define HCBT_CREATEWND (3)
#define HCBT_DESTROYWND (4)
#define HCBT_KEYSKIPPED (7)
#define HCBT_MINMAX (1)
#define HCBT_MOVESIZE (0)
#define HCBT_QS (2)
#define HCBT_SETFOCUS (9)
#define HCBT_SYSCOMMAND (8)
#define HCCE_CURRENT_USER ( ( HCERTCHAINENGINE ) NULL )
#define HCCE_LOCAL_MACHINE ( ( HCERTCHAINENGINE ) 0x1 )
#define HCF_AVAILABLE (2)
#define HCF_CONFIRMHOTKEY (8)
#define HCF_DEFAULTDESKTOP (512)
#define HCF_HIGHCONTRASTON (1)
#define HCF_HOTKEYACTIVE (4)
#define HCF_HOTKEYAVAILABLE (64)
#define HCF_HOTKEYSOUND (16)
#define HCF_INDICATOR (32)
#define HCF_LOGONDESKTOP (256)
#define HCRYPTPROV_DEFINED 
#define HC_ACTION (0)
#define HC_GETNEXT (1)
#define HC_NOREM HC_NOREMOVE
#define HC_NOREMOVE (3)
#define HC_SKIP (2)
#define HC_SYSMODALOFF (5)
#define HC_SYSMODALON (4)
#define HDATA_APPOWNED (1)
#define HEAP_CREATE_ALIGN_16 (65536)
#define HEAP_CREATE_ENABLE_EXECUTE (262144)
#define HEAP_CREATE_ENABLE_TRACING (131072)
#define HEAP_DISABLE_COALESCE_ON_FREE (128)
#define HEAP_FREE_CHECKING_ENABLED (64)
#define HEAP_GENERATE_EXCEPTIONS (4)
#define HEAP_GROWABLE (2)
#define HEAP_MAKE_TAG_FLAGS(b, o) ( ( DWORD ) ( ( b ) + ( ( o ) << 18 ) ) )
#define HEAP_MAXIMUM_TAG (4095)
#define HEAP_NO_SERIALIZE (1)
#define HEAP_PSEUDO_TAG_FLAG (32768)
#define HEAP_REALLOC_IN_PLACE_ONLY (16)
#define HEAP_TAG_SHIFT (18)
#define HEAP_TAIL_CHECKING_ENABLED (32)
#define HEAP_ZERO_MEMORY (8)
#define HEBREW_CHARSET (177)
#define HELPINFO_MENUITEM (2)
#define HELPINFO_WINDOW (1)
#define HELPMSGSTRING __MINGW_NAME_AW ( HELPMSGSTRING )
#define HELPMSGSTRINGA "commdlg_help"
#define HELPMSGSTRINGW "commdlg_help"
#define HELP_COMMAND (258)
#define HELP_CONTENTS (3)
#define HELP_CONTEXT (1)
#define HELP_CONTEXTMENU (10)
#define HELP_CONTEXTPOPUP (8)
#define HELP_FINDER (11)
#define HELP_FORCEFILE (9)
#define HELP_HELPONHELP (4)
#define HELP_INDEX (3)
#define HELP_KEY (257)
#define HELP_MULTIKEY (513)
#define HELP_PARTIALKEY (261)
#define HELP_QUIT (2)
#define HELP_SETCONTENTS (5)
#define HELP_SETINDEX (5)
#define HELP_SETPOPUP_POS (13)
#define HELP_SETWINPOS (515)
#define HELP_TCARD (32768)
#define HELP_TCARD_DATA (16)
#define HELP_TCARD_OTHER_CALLER (17)
#define HELP_WM_HELP (12)
#define HFILE_ERROR (-1)
#define HGDI_ERROR ( LongToHandle ( 0xFFFFFFFF ) )
#define HIBYTE(w) ( ( BYTE ) ( ( ( ( DWORD_PTR ) ( w ) ) >> 8 ) & 0xff ) )
#define HIDE_WINDOW (0)
#define HIGH_PRIORITY_CLASS (128)
#define HIGH_SURROGATE_END (56319)
#define HIGH_SURROGATE_START (55296)
#define HINSTANCE_ERROR (32)
#define HISTOGRAM_BUCKET_SIZE sizeof ( HISTOGRAM_BUCKET )
#define HIST_NO_OF_BUCKETS (24)
#define HIWORD(l) ( ( WORD ) ( ( ( ( DWORD_PTR ) ( l ) ) >> 16 ) & 0xffff ) )
#define HKEY_CLASSES_ROOT ( ( HKEY ) ( ULONG_PTR ) ( ( LONG ) 0x80000000 ) )
#define HKEY_CURRENT_CONFIG ( ( HKEY ) ( ULONG_PTR ) ( ( LONG ) 0x80000005 ) )
#define HKEY_CURRENT_USER ( ( HKEY ) ( ULONG_PTR ) ( ( LONG ) 0x80000001 ) )
#define HKEY_DYN_DATA ( ( HKEY ) ( ULONG_PTR ) ( ( LONG ) 0x80000006 ) )
#define HKEY_LOCAL_MACHINE ( ( HKEY ) ( ULONG_PTR ) ( ( LONG ) 0x80000002 ) )
#define HKEY_PERFORMANCE_DATA ( ( HKEY ) ( ULONG_PTR ) ( ( LONG ) 0x80000004 ) )
#define HKEY_PERFORMANCE_NLSTEXT ( ( HKEY ) ( ULONG_PTR ) ( ( LONG ) 0x80000060 ) )
#define HKEY_PERFORMANCE_TEXT ( ( HKEY ) ( ULONG_PTR ) ( ( LONG ) 0x80000050 ) )
#define HKEY_USERS ( ( HKEY ) ( ULONG_PTR ) ( ( LONG ) 0x80000003 ) )
#define HKL_NEXT (1)
#define HKL_PREV (0)
#define HOLLOW_BRUSH NULL_BRUSH
#define HORZRES (8)
#define HORZSIZE (4)
#define HOVER_DEFAULT (4294967295u)
#define HP_ALGID (1)
#define HP_HASHSIZE (4)
#define HP_HASHVAL (2)
#define HP_HMAC_INFO (5)
#define HP_TLS1PRF_LABEL (6)
#define HP_TLS1PRF_SEED (7)
#define HRESULT_CODE(hr) ( ( hr ) & 0xFFFF )
#define HRESULT_FACILITY(hr) ( ( ( hr ) >> 16 ) & 0x1fff )
#define HRESULT_FROM_NT(x) ( ( HRESULT ) ( ( x ) | FACILITY_NT_BIT ) )
#define HRESULT_FROM_SETUPAPI(x) ( ( ( ( x ) & ( APPLICATION_ERROR_MASK | ERROR_SEVERITY_ERROR ) ) == ( APPLICATION_ERROR_MASK | ERROR_SEVERITY_ERROR ) ) ? ( ( HRESULT ) ( ( ( x ) & 0x0000FFFF ) | ( FACILITY_SETUPAPI << 16 ) | 0x80000000 ) ) : HRESULT_FROM_WIN32 ( x ) )
#define HRESULT_FROM_WIN32(x) __HRESULT_FROM_WIN32 ( x )
#define HRESULT_SEVERITY(hr) ( ( ( hr ) >> 31 ) & 0x1 )
#define HSHELL_ACCESSIBILITYSTATE (11)
#define HSHELL_ACTIVATESHELLWINDOW (3)
#define HSHELL_APPCOMMAND (12)
#define HSHELL_ENDTASK (10)
#define HSHELL_FLASH (32774)
#define HSHELL_GETMINRECT (5)
#define HSHELL_HIGHBIT (32768)
#define HSHELL_LANGUAGE (8)
#define HSHELL_REDRAW (6)
#define HSHELL_RUDEAPPACTIVATED (32772)
#define HSHELL_SYSMENU (9)
#define HSHELL_TASKMAN (7)
#define HSHELL_WINDOWACTIVATED (4)
#define HSHELL_WINDOWCREATED (1)
#define HSHELL_WINDOWDESTROYED (2)
#define HSHELL_WINDOWREPLACED (13)
#define HSHELL_WINDOWREPLACING (14)
#define HS_API_MAX (12)
#define HS_BDIAGONAL (3)
#define HS_CROSS (4)
#define HS_DIAGCROSS (5)
#define HS_FDIAGONAL (2)
#define HS_HORIZONTAL (0)
#define HS_VERTICAL (1)
#define HTBORDER (18)
#define HTBOTTOM (15)
#define HTBOTTOMLEFT (16)
#define HTBOTTOMRIGHT (17)
#define HTCAPTION (2)
#define HTCLIENT (1)
#define HTCLOSE (20)
#define HTERROR (-2)
#define HTGROWBOX (4)
#define HTHELP (21)
#define HTHSCROLL (6)
#define HTLEFT (10)
#define HTMAXBUTTON (9)
#define HTMENU (5)
#define HTMINBUTTON (8)
#define HTNOWHERE (0)
#define HTOBJECT (19)
#define HTREDUCE HTMINBUTTON
#define HTRIGHT (11)
#define HTSIZE HTGROWBOX
#define HTSIZEFIRST HTLEFT
#define HTSIZELAST HTBOTTOMRIGHT
#define HTSYSMENU (3)
#define HTTOP (12)
#define HTTOPLEFT (13)
#define HTTOPRIGHT (14)
#define HTTRANSPARENT (-1)
#define HTVSCROLL (7)
#define HTZOOM HTMAXBUTTON
#define HWND_BOTTOM ( ( HWND ) 1 )
#define HWND_BROADCAST ( ( HWND ) 0xffff )
#define HWND_DESKTOP ( ( HWND ) 0 )
#define HWND_MESSAGE (-3)
#define HWND_NOTOPMOST (-2)
#define HWND_TOP ( ( HWND ) 0 )
#define HWND_TOPMOST (-1)
#define HW_PROFILE_GUIDLEN (39)
#define Handle64ToHandle(h) ( Ptr64ToPtr ( h ) )
#define HandleToHandle32(h) ( PtrToPtr32 ( h ) )
#define HandleToHandle64(h) ( PtrToPtr64 ( h ) )
#define HandleToUlong(h) HandleToULong ( h )
#define HasOverlappedIoCompleted(lpOverlapped) ( ( ( DWORD ) ( lpOverlapped ) -> Internal ) != STATUS_PENDING )
#define IACE_CHILDREN (1)
#define IACE_DEFAULT (16)
#define IACE_IGNORENOCONTEXT (32)
#define ICMENUMPROC __MINGW_NAME_AW ( ICMENUMPROC )
#define ICM_ADDPROFILE (1)
#define ICM_DELETEPROFILE (2)
#define ICM_DONE_OUTSIDEDC (4)
#define ICM_OFF (1)
#define ICM_ON (2)
#define ICM_QUERY (3)
#define ICM_QUERYMATCH (7)
#define ICM_QUERYPROFILE (3)
#define ICM_REGISTERICMATCHER (5)
#define ICM_SETDEFAULTPROFILE (4)
#define ICM_UNREGISTERICMATCHER (6)
#define ICON_BIG (1)
#define ICON_SMALL (0)
#define ICON_SMALL2 (2)
#define IDABORT (3)
#define IDANI_CAPTION (3)
#define IDANI_OPEN (1)
#define IDCANCEL (2)
#define IDCLOSE (8)
#define IDCONTINUE (11)
#define IDC_APPSTARTING MAKEINTRESOURCE ( 32650 )
#define IDC_ARROW MAKEINTRESOURCE ( 32512 )
#define IDC_CROSS MAKEINTRESOURCE ( 32515 )
#define IDC_HAND MAKEINTRESOURCE ( 32649 )
#define IDC_HELP MAKEINTRESOURCE ( 32651 )
#define IDC_IBEAM MAKEINTRESOURCE ( 32513 )
#define IDC_ICON MAKEINTRESOURCE ( 32641 )
#define IDC_NO MAKEINTRESOURCE ( 32648 )
#define IDC_SIZE MAKEINTRESOURCE ( 32640 )
#define IDC_SIZEALL MAKEINTRESOURCE ( 32646 )
#define IDC_SIZENESW MAKEINTRESOURCE ( 32643 )
#define IDC_SIZENS MAKEINTRESOURCE ( 32645 )
#define IDC_SIZENWSE MAKEINTRESOURCE ( 32642 )
#define IDC_SIZEWE MAKEINTRESOURCE ( 32644 )
#define IDC_UPARROW MAKEINTRESOURCE ( 32516 )
#define IDC_WAIT MAKEINTRESOURCE ( 32514 )
#define IDENTIFY_BUFFER_SIZE (512)
#define IDHELP (9)
#define IDHOT_SNAPDESKTOP (-2)
#define IDHOT_SNAPWINDOW (-1)
#define IDH_CANCEL (28444)
#define IDH_GENERIC_HELP_BUTTON (28442)
#define IDH_HELP (28445)
#define IDH_MISSING_CONTEXT (28441)
#define IDH_NO_HELP (28440)
#define IDH_OK (28443)
#define IDIGNORE (5)
#define IDI_APPLICATION MAKEINTRESOURCE ( 32512 )
#define IDI_ASTERISK MAKEINTRESOURCE ( 32516 )
#define IDI_ERROR IDI_HAND
#define IDI_EXCLAMATION MAKEINTRESOURCE ( 32515 )
#define IDI_HAND MAKEINTRESOURCE ( 32513 )
#define IDI_INFORMATION IDI_ASTERISK
#define IDI_QUESTION MAKEINTRESOURCE ( 32514 )
#define IDI_WARNING IDI_EXCLAMATION
#define IDI_WINLOGO MAKEINTRESOURCE ( 32517 )
#define IDLE_PRIORITY_CLASS (64)
#define IDNO (7)
#define IDOK (1)
#define IDRETRY (4)
#define IDTIMEOUT (32000)
#define IDTRYAGAIN (10)
#define IDYES (6)
#define ID_CMD (236)
#define ID_PSREBOOTSYSTEM (3)
#define ID_PSRESTARTWINDOWS (2)
#define IE_BADID (-1)
#define IE_BAUDRATE (-12)
#define IE_BYTESIZE (-11)
#define IE_DEFAULT (-5)
#define IE_HARDWARE (-10)
#define IE_MEMORY (-4)
#define IE_NOPEN (-3)
#define IE_OPEN (-2)
#define IFACEMETHODIMP STDMETHODIMP
#define IFACEMETHODIMPV STDMETHODIMPV
#define IFACEMETHODIMPV_(type) STDMETHODIMPV_ ( type )
#define IFACEMETHODIMP_(type) STDMETHODIMP_ ( type )
#define IFID_DEFINED 
#define IGIMIF_RIGHTMENU (1)
#define IGIMII_CMODE (1)
#define IGIMII_CONFIGURE (4)
#define IGIMII_HELP (16)
#define IGIMII_INPUTTOOLS (64)
#define IGIMII_OTHER (32)
#define IGIMII_SMODE (2)
#define IGIMII_TOOLS (8)
#define IGNORE (0)
#define IGP_CONVERSION (8)
#define IGP_GETIMEVERSION ( DWORD ) ( - 4 )
#define IGP_PROPERTY (4)
#define IGP_SELECT (24)
#define IGP_SENTENCE (12)
#define IGP_SETCOMPSTR (20)
#define IGP_UI (16)
#define IID_NULL GUID_NULL
#define ILLUMINANT_A (1)
#define ILLUMINANT_B (2)
#define ILLUMINANT_C (3)
#define ILLUMINANT_D50 (4)
#define ILLUMINANT_D55 (5)
#define ILLUMINANT_D65 (6)
#define ILLUMINANT_D75 (7)
#define ILLUMINANT_DAYLIGHT ILLUMINANT_C
#define ILLUMINANT_DEVICE_DEFAULT (0)
#define ILLUMINANT_F2 (8)
#define ILLUMINANT_FLUORESCENT ILLUMINANT_F2
#define ILLUMINANT_MAX_INDEX ILLUMINANT_F2
#define ILLUMINANT_NTSC ILLUMINANT_C
#define ILLUMINANT_TUNGSTEN ILLUMINANT_A
#define IMAGE_ARCHIVE_END "`\n"
#define IMAGE_ARCHIVE_LINKER_MEMBER "/               "
#define IMAGE_ARCHIVE_LONGNAMES_MEMBER "//              "
#define IMAGE_ARCHIVE_PAD "\n"
#define IMAGE_ARCHIVE_START "!<arch>\n"
#define IMAGE_ARCHIVE_START_SIZE (8)
#define IMAGE_BITMAP (0)
#define IMAGE_COMDAT_SELECT_ANY (2)
#define IMAGE_COMDAT_SELECT_ASSOCIATIVE (5)
#define IMAGE_COMDAT_SELECT_EXACT_MATCH (4)
#define IMAGE_COMDAT_SELECT_LARGEST (6)
#define IMAGE_COMDAT_SELECT_NEWEST (7)
#define IMAGE_COMDAT_SELECT_NODUPLICATES (1)
#define IMAGE_COMDAT_SELECT_SAME_SIZE (3)
#define IMAGE_CURSOR (2)
#define IMAGE_DEBUG_MISC_EXENAME (1)
#define IMAGE_DEBUG_TYPE_BORLAND (9)
#define IMAGE_DEBUG_TYPE_CLSID (11)
#define IMAGE_DEBUG_TYPE_CODEVIEW (2)
#define IMAGE_DEBUG_TYPE_COFF (1)
#define IMAGE_DEBUG_TYPE_EXCEPTION (5)
#define IMAGE_DEBUG_TYPE_FIXUP (6)
#define IMAGE_DEBUG_TYPE_FPO (3)
#define IMAGE_DEBUG_TYPE_MISC (4)
#define IMAGE_DEBUG_TYPE_OMAP_FROM_SRC (8)
#define IMAGE_DEBUG_TYPE_OMAP_TO_SRC (7)
#define IMAGE_DEBUG_TYPE_RESERVED10 (10)
#define IMAGE_DEBUG_TYPE_UNKNOWN (0)
#define IMAGE_DIRECTORY_ENTRY_ARCHITECTURE (7)
#define IMAGE_DIRECTORY_ENTRY_BASERELOC (5)
#define IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT (11)
#define IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR (14)
#define IMAGE_DIRECTORY_ENTRY_DEBUG (6)
#define IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT (13)
#define IMAGE_DIRECTORY_ENTRY_EXCEPTION (3)
#define IMAGE_DIRECTORY_ENTRY_EXPORT (0)
#define IMAGE_DIRECTORY_ENTRY_GLOBALPTR (8)
#define IMAGE_DIRECTORY_ENTRY_IAT (12)
#define IMAGE_DIRECTORY_ENTRY_IMPORT (1)
#define IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG (10)
#define IMAGE_DIRECTORY_ENTRY_RESOURCE (2)
#define IMAGE_DIRECTORY_ENTRY_SECURITY (4)
#define IMAGE_DIRECTORY_ENTRY_TLS (9)
#define IMAGE_DLLCHARACTERISTICS_APPCONTAINER (4096)
#define IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE (64)
#define IMAGE_DLLCHARACTERISTICS_FORCE_INTEGRITY (128)
#define IMAGE_DLLCHARACTERISTICS_GUARD_CF (16384)
#define IMAGE_DLLCHARACTERISTICS_HIGH_ENTROPY_VA (32)
#define IMAGE_DLLCHARACTERISTICS_NO_BIND (2048)
#define IMAGE_DLLCHARACTERISTICS_NO_ISOLATION (512)
#define IMAGE_DLLCHARACTERISTICS_NO_SEH (1024)
#define IMAGE_DLLCHARACTERISTICS_NX_COMPAT (256)
#define IMAGE_DLLCHARACTERISTICS_TERMINAL_SERVER_AWARE (32768)
#define IMAGE_DLLCHARACTERISTICS_WDM_DRIVER (8192)
#define IMAGE_DOS_SIGNATURE (23117)
#define IMAGE_ENHMETAFILE (3)
#define IMAGE_FILE_32BIT_MACHINE (256)
#define IMAGE_FILE_AGGRESIVE_WS_TRIM (16)
#define IMAGE_FILE_BYTES_REVERSED_HI (32768)
#define IMAGE_FILE_BYTES_REVERSED_LO (128)
#define IMAGE_FILE_DEBUG_STRIPPED (512)
#define IMAGE_FILE_DLL (8192)
#define IMAGE_FILE_EXECUTABLE_IMAGE (2)
#define IMAGE_FILE_LARGE_ADDRESS_AWARE (32)
#define IMAGE_FILE_LINE_NUMS_STRIPPED (4)
#define IMAGE_FILE_LOCAL_SYMS_STRIPPED (8)
#define IMAGE_FILE_MACHINE_ALPHA (388)
#define IMAGE_FILE_MACHINE_ALPHA64 (644)
#define IMAGE_FILE_MACHINE_AM33 (467)
#define IMAGE_FILE_MACHINE_AMD64 (34404)
#define IMAGE_FILE_MACHINE_ARM (448)
#define IMAGE_FILE_MACHINE_ARMNT (452)
#define IMAGE_FILE_MACHINE_ARMV7 (452)
#define IMAGE_FILE_MACHINE_AXP64 IMAGE_FILE_MACHINE_ALPHA64
#define IMAGE_FILE_MACHINE_CEE (49390)
#define IMAGE_FILE_MACHINE_CEF (3311)
#define IMAGE_FILE_MACHINE_EBC (3772)
#define IMAGE_FILE_MACHINE_I386 (332)
#define IMAGE_FILE_MACHINE_IA64 (512)
#define IMAGE_FILE_MACHINE_M32R (36929)
#define IMAGE_FILE_MACHINE_MIPS16 (614)
#define IMAGE_FILE_MACHINE_MIPSFPU (870)
#define IMAGE_FILE_MACHINE_MIPSFPU16 (1126)
#define IMAGE_FILE_MACHINE_POWERPC (496)
#define IMAGE_FILE_MACHINE_POWERPCFP (497)
#define IMAGE_FILE_MACHINE_R10000 (360)
#define IMAGE_FILE_MACHINE_R3000 (354)
#define IMAGE_FILE_MACHINE_R4000 (358)
#define IMAGE_FILE_MACHINE_SH3 (418)
#define IMAGE_FILE_MACHINE_SH3DSP (419)
#define IMAGE_FILE_MACHINE_SH3E (420)
#define IMAGE_FILE_MACHINE_SH4 (422)
#define IMAGE_FILE_MACHINE_SH5 (424)
#define IMAGE_FILE_MACHINE_THUMB (450)
#define IMAGE_FILE_MACHINE_TRICORE (1312)
#define IMAGE_FILE_MACHINE_UNKNOWN (0)
#define IMAGE_FILE_MACHINE_WCEMIPSV2 (361)
#define IMAGE_FILE_NET_RUN_FROM_SWAP (2048)
#define IMAGE_FILE_RELOCS_STRIPPED (1)
#define IMAGE_FILE_REMOVABLE_RUN_FROM_SWAP (1024)
#define IMAGE_FILE_SYSTEM (4096)
#define IMAGE_FILE_UP_SYSTEM_ONLY (16384)
#define IMAGE_FIRST_SECTION(ntheader) ( ( PIMAGE_SECTION_HEADER ) ( ( ULONG_PTR ) ntheader + FIELD_OFFSET ( IMAGE_NT_HEADERS , OptionalHeader ) + ( ( PIMAGE_NT_HEADERS ) ( ntheader ) ) -> FileHeader . SizeOfOptionalHeader ) )
#define IMAGE_ICON (1)
#define IMAGE_NT_OPTIONAL_HDR32_MAGIC (267)
#define IMAGE_NT_OPTIONAL_HDR64_MAGIC (523)
#define IMAGE_NT_OPTIONAL_HDR_MAGIC IMAGE_NT_OPTIONAL_HDR64_MAGIC
#define IMAGE_NT_SIGNATURE (17744)
#define IMAGE_NUMBEROF_DIRECTORY_ENTRIES (16)
#define IMAGE_ORDINAL(Ordinal) IMAGE_ORDINAL64 ( Ordinal )
#define IMAGE_ORDINAL32(Ordinal) ( Ordinal & 0xffff )
#define IMAGE_ORDINAL64(Ordinal) ( Ordinal & 0xffffull )
#define IMAGE_ORDINAL_FLAG IMAGE_ORDINAL_FLAG64
#define IMAGE_ORDINAL_FLAG32 (2147483648u)
#define IMAGE_ORDINAL_FLAG64 (9223372036854775808ull)
#define IMAGE_OS2_SIGNATURE (17742)
#define IMAGE_OS2_SIGNATURE_LE (17740)
#define IMAGE_REL_ALPHA_ABSOLUTE (0)
#define IMAGE_REL_ALPHA_BRADDR (7)
#define IMAGE_REL_ALPHA_GPDISP (6)
#define IMAGE_REL_ALPHA_GPREL32 (3)
#define IMAGE_REL_ALPHA_GPRELHI (23)
#define IMAGE_REL_ALPHA_GPRELLO (22)
#define IMAGE_REL_ALPHA_HINT (8)
#define IMAGE_REL_ALPHA_INLINE_REFLONG (9)
#define IMAGE_REL_ALPHA_LITERAL (4)
#define IMAGE_REL_ALPHA_LITUSE (5)
#define IMAGE_REL_ALPHA_MATCH (13)
#define IMAGE_REL_ALPHA_PAIR (12)
#define IMAGE_REL_ALPHA_REFHI (10)
#define IMAGE_REL_ALPHA_REFLO (11)
#define IMAGE_REL_ALPHA_REFLONG (1)
#define IMAGE_REL_ALPHA_REFLONGNB (16)
#define IMAGE_REL_ALPHA_REFQ1 (21)
#define IMAGE_REL_ALPHA_REFQ2 (20)
#define IMAGE_REL_ALPHA_REFQ3 (19)
#define IMAGE_REL_ALPHA_REFQUAD (2)
#define IMAGE_REL_ALPHA_SECREL (15)
#define IMAGE_REL_ALPHA_SECRELHI (18)
#define IMAGE_REL_ALPHA_SECRELLO (17)
#define IMAGE_REL_ALPHA_SECTION (14)
#define IMAGE_REL_AMD64_ABSOLUTE (0)
#define IMAGE_REL_AMD64_ADDR32 (2)
#define IMAGE_REL_AMD64_ADDR32NB (3)
#define IMAGE_REL_AMD64_ADDR64 (1)
#define IMAGE_REL_AMD64_PAIR (15)
#define IMAGE_REL_AMD64_REL32 (4)
#define IMAGE_REL_AMD64_REL32_1 (5)
#define IMAGE_REL_AMD64_REL32_2 (6)
#define IMAGE_REL_AMD64_REL32_3 (7)
#define IMAGE_REL_AMD64_REL32_4 (8)
#define IMAGE_REL_AMD64_REL32_5 (9)
#define IMAGE_REL_AMD64_SECREL (11)
#define IMAGE_REL_AMD64_SECREL7 (12)
#define IMAGE_REL_AMD64_SECTION (10)
#define IMAGE_REL_AMD64_SREL32 (14)
#define IMAGE_REL_AMD64_SSPAN32 (16)
#define IMAGE_REL_AMD64_TOKEN (13)
#define IMAGE_REL_AM_ABSOLUTE (0)
#define IMAGE_REL_AM_ADDR32 (1)
#define IMAGE_REL_AM_ADDR32NB (2)
#define IMAGE_REL_AM_CALL32 (3)
#define IMAGE_REL_AM_FUNCINFO (4)
#define IMAGE_REL_AM_REL32_1 (5)
#define IMAGE_REL_AM_REL32_2 (6)
#define IMAGE_REL_AM_SECREL (7)
#define IMAGE_REL_AM_SECTION (8)
#define IMAGE_REL_AM_TOKEN (9)
#define IMAGE_REL_ARM_ABSOLUTE (0)
#define IMAGE_REL_ARM_ADDR32 (1)
#define IMAGE_REL_ARM_ADDR32NB (2)
#define IMAGE_REL_ARM_BLX11 (9)
#define IMAGE_REL_ARM_BLX23T (21)
#define IMAGE_REL_ARM_BLX24 (8)
#define IMAGE_REL_ARM_BRANCH11 (4)
#define IMAGE_REL_ARM_BRANCH20T (18)
#define IMAGE_REL_ARM_BRANCH24 (3)
#define IMAGE_REL_ARM_BRANCH24T (20)
#define IMAGE_REL_ARM_GPREL12 (6)
#define IMAGE_REL_ARM_GPREL7 (7)
#define IMAGE_REL_ARM_MOV32 (16)
#define IMAGE_REL_ARM_MOV32A (16)
#define IMAGE_REL_ARM_MOV32T (17)
#define IMAGE_REL_ARM_SECREL (15)
#define IMAGE_REL_ARM_SECTION (14)
#define IMAGE_REL_ARM_TOKEN (5)
#define IMAGE_REL_BASED_ABSOLUTE (0)
#define IMAGE_REL_BASED_ARM_MOV32 (5)
#define IMAGE_REL_BASED_DIR64 (10)
#define IMAGE_REL_BASED_HIGH (1)
#define IMAGE_REL_BASED_HIGHADJ (4)
#define IMAGE_REL_BASED_HIGHLOW (3)
#define IMAGE_REL_BASED_IA64_IMM64 (9)
#define IMAGE_REL_BASED_LOW (2)
#define IMAGE_REL_BASED_MIPS_JMPADDR (5)
#define IMAGE_REL_BASED_MIPS_JMPADDR16 (9)
#define IMAGE_REL_BASED_THUMB_MOV32 (7)
#define IMAGE_REL_CEE_ABSOLUTE (0)
#define IMAGE_REL_CEE_ADDR32 (1)
#define IMAGE_REL_CEE_ADDR32NB (3)
#define IMAGE_REL_CEE_ADDR64 (2)
#define IMAGE_REL_CEE_SECREL (5)
#define IMAGE_REL_CEE_SECTION (4)
#define IMAGE_REL_CEE_TOKEN (6)
#define IMAGE_REL_CEF_ABSOLUTE (0)
#define IMAGE_REL_CEF_ADDR32 (1)
#define IMAGE_REL_CEF_ADDR32NB (3)
#define IMAGE_REL_CEF_ADDR64 (2)
#define IMAGE_REL_CEF_SECREL (5)
#define IMAGE_REL_CEF_SECTION (4)
#define IMAGE_REL_CEF_TOKEN (6)
#define IMAGE_REL_EBC_ABSOLUTE (0)
#define IMAGE_REL_EBC_ADDR32NB (1)
#define IMAGE_REL_EBC_REL32 (2)
#define IMAGE_REL_EBC_SECREL (4)
#define IMAGE_REL_EBC_SECTION (3)
#define IMAGE_REL_I386_ABSOLUTE (0)
#define IMAGE_REL_I386_DIR16 (1)
#define IMAGE_REL_I386_DIR32 (6)
#define IMAGE_REL_I386_DIR32NB (7)
#define IMAGE_REL_I386_REL16 (2)
#define IMAGE_REL_I386_REL32 (20)
#define IMAGE_REL_I386_SECREL (11)
#define IMAGE_REL_I386_SECREL7 (13)
#define IMAGE_REL_I386_SECTION (10)
#define IMAGE_REL_I386_SEG12 (9)
#define IMAGE_REL_I386_TOKEN (12)
#define IMAGE_REL_IA64_ABSOLUTE (0)
#define IMAGE_REL_IA64_ADDEND (31)
#define IMAGE_REL_IA64_DIR32 (4)
#define IMAGE_REL_IA64_DIR32NB (16)
#define IMAGE_REL_IA64_DIR64 (5)
#define IMAGE_REL_IA64_GPREL22 (9)
#define IMAGE_REL_IA64_GPREL32 (28)
#define IMAGE_REL_IA64_IMM14 (1)
#define IMAGE_REL_IA64_IMM22 (2)
#define IMAGE_REL_IA64_IMM64 (3)
#define IMAGE_REL_IA64_IMMGPREL64 (26)
#define IMAGE_REL_IA64_LTOFF22 (10)
#define IMAGE_REL_IA64_PCREL21B (6)
#define IMAGE_REL_IA64_PCREL21F (8)
#define IMAGE_REL_IA64_PCREL21M (7)
#define IMAGE_REL_IA64_PCREL60B (22)
#define IMAGE_REL_IA64_PCREL60F (23)
#define IMAGE_REL_IA64_PCREL60I (24)
#define IMAGE_REL_IA64_PCREL60M (25)
#define IMAGE_REL_IA64_PCREL60X (21)
#define IMAGE_REL_IA64_SECREL22 (12)
#define IMAGE_REL_IA64_SECREL32 (14)
#define IMAGE_REL_IA64_SECREL64I (13)
#define IMAGE_REL_IA64_SECTION (11)
#define IMAGE_REL_IA64_SREL14 (17)
#define IMAGE_REL_IA64_SREL22 (18)
#define IMAGE_REL_IA64_SREL32 (19)
#define IMAGE_REL_IA64_TOKEN (27)
#define IMAGE_REL_IA64_UREL32 (20)
#define IMAGE_REL_M32R_ABSOLUTE (0)
#define IMAGE_REL_M32R_ADDR24 (3)
#define IMAGE_REL_M32R_ADDR32 (1)
#define IMAGE_REL_M32R_ADDR32NB (2)
#define IMAGE_REL_M32R_GPREL16 (4)
#define IMAGE_REL_M32R_PAIR (11)
#define IMAGE_REL_M32R_PCREL16 (6)
#define IMAGE_REL_M32R_PCREL24 (5)
#define IMAGE_REL_M32R_PCREL8 (7)
#define IMAGE_REL_M32R_REFHALF (8)
#define IMAGE_REL_M32R_REFHI (9)
#define IMAGE_REL_M32R_REFLO (10)
#define IMAGE_REL_M32R_SECREL32 (13)
#define IMAGE_REL_M32R_SECTION (12)
#define IMAGE_REL_M32R_TOKEN (14)
#define IMAGE_REL_MIPS_ABSOLUTE (0)
#define IMAGE_REL_MIPS_GPREL (6)
#define IMAGE_REL_MIPS_JMPADDR (3)
#define IMAGE_REL_MIPS_JMPADDR16 (16)
#define IMAGE_REL_MIPS_LITERAL (7)
#define IMAGE_REL_MIPS_PAIR (37)
#define IMAGE_REL_MIPS_REFHALF (1)
#define IMAGE_REL_MIPS_REFHI (4)
#define IMAGE_REL_MIPS_REFLO (5)
#define IMAGE_REL_MIPS_REFWORD (2)
#define IMAGE_REL_MIPS_REFWORDNB (34)
#define IMAGE_REL_MIPS_SECREL (11)
#define IMAGE_REL_MIPS_SECRELHI (13)
#define IMAGE_REL_MIPS_SECRELLO (12)
#define IMAGE_REL_MIPS_SECTION (10)
#define IMAGE_REL_MIPS_TOKEN (14)
#define IMAGE_REL_PPC_ABSOLUTE (0)
#define IMAGE_REL_PPC_ADDR14 (5)
#define IMAGE_REL_PPC_ADDR16 (4)
#define IMAGE_REL_PPC_ADDR24 (3)
#define IMAGE_REL_PPC_ADDR32 (2)
#define IMAGE_REL_PPC_ADDR32NB (10)
#define IMAGE_REL_PPC_ADDR64 (1)
#define IMAGE_REL_PPC_BRNTAKEN (1024)
#define IMAGE_REL_PPC_BRTAKEN (512)
#define IMAGE_REL_PPC_GPREL (21)
#define IMAGE_REL_PPC_IFGLUE (13)
#define IMAGE_REL_PPC_IMGLUE (14)
#define IMAGE_REL_PPC_NEG (256)
#define IMAGE_REL_PPC_PAIR (18)
#define IMAGE_REL_PPC_REFHI (16)
#define IMAGE_REL_PPC_REFLO (17)
#define IMAGE_REL_PPC_REL14 (7)
#define IMAGE_REL_PPC_REL24 (6)
#define IMAGE_REL_PPC_SECREL (11)
#define IMAGE_REL_PPC_SECREL16 (15)
#define IMAGE_REL_PPC_SECRELHI (20)
#define IMAGE_REL_PPC_SECRELLO (19)
#define IMAGE_REL_PPC_SECTION (12)
#define IMAGE_REL_PPC_TOCDEFN (2048)
#define IMAGE_REL_PPC_TOCREL14 (9)
#define IMAGE_REL_PPC_TOCREL16 (8)
#define IMAGE_REL_PPC_TOKEN (22)
#define IMAGE_REL_PPC_TYPEMASK (255)
#define IMAGE_REL_SH3_ABSOLUTE (0)
#define IMAGE_REL_SH3_DIRECT16 (1)
#define IMAGE_REL_SH3_DIRECT32 (2)
#define IMAGE_REL_SH3_DIRECT32_NB (16)
#define IMAGE_REL_SH3_DIRECT4 (6)
#define IMAGE_REL_SH3_DIRECT4_LONG (8)
#define IMAGE_REL_SH3_DIRECT4_WORD (7)
#define IMAGE_REL_SH3_DIRECT8 (3)
#define IMAGE_REL_SH3_DIRECT8_LONG (5)
#define IMAGE_REL_SH3_DIRECT8_WORD (4)
#define IMAGE_REL_SH3_GPREL4_LONG (17)
#define IMAGE_REL_SH3_PCREL12_WORD (11)
#define IMAGE_REL_SH3_PCREL8_LONG (10)
#define IMAGE_REL_SH3_PCREL8_WORD (9)
#define IMAGE_REL_SH3_SECREL (15)
#define IMAGE_REL_SH3_SECTION (14)
#define IMAGE_REL_SH3_SIZEOF_SECTION (13)
#define IMAGE_REL_SH3_STARTOF_SECTION (12)
#define IMAGE_REL_SH3_TOKEN (18)
#define IMAGE_REL_SHM_PAIR (24)
#define IMAGE_REL_SHM_PCRELPT (19)
#define IMAGE_REL_SHM_REFHALF (21)
#define IMAGE_REL_SHM_REFLO (20)
#define IMAGE_REL_SHM_RELHALF (23)
#define IMAGE_REL_SHM_RELLO (22)
#define IMAGE_REL_SH_NOMODE (32768)
#define IMAGE_REL_THUMB_BLX23 (21)
#define IMAGE_REL_THUMB_BRANCH20 (18)
#define IMAGE_REL_THUMB_BRANCH24 (20)
#define IMAGE_REL_THUMB_MOV32 (17)
#define IMAGE_RESOURCE_DATA_IS_DIRECTORY (2147483648u)
#define IMAGE_RESOURCE_NAME_IS_STRING (2147483648u)
#define IMAGE_ROM_OPTIONAL_HDR_MAGIC (263)
#define IMAGE_SCN_ALIGN_1024BYTES (11534336)
#define IMAGE_SCN_ALIGN_128BYTES (8388608)
#define IMAGE_SCN_ALIGN_16BYTES (5242880)
#define IMAGE_SCN_ALIGN_1BYTES (1048576)
#define IMAGE_SCN_ALIGN_2048BYTES (12582912)
#define IMAGE_SCN_ALIGN_256BYTES (9437184)
#define IMAGE_SCN_ALIGN_2BYTES (2097152)
#define IMAGE_SCN_ALIGN_32BYTES (6291456)
#define IMAGE_SCN_ALIGN_4096BYTES (13631488)
#define IMAGE_SCN_ALIGN_4BYTES (3145728)
#define IMAGE_SCN_ALIGN_512BYTES (10485760)
#define IMAGE_SCN_ALIGN_64BYTES (7340032)
#define IMAGE_SCN_ALIGN_8192BYTES (14680064)
#define IMAGE_SCN_ALIGN_8BYTES (4194304)
#define IMAGE_SCN_ALIGN_MASK (15728640)
#define IMAGE_SCN_CNT_CODE (32)
#define IMAGE_SCN_CNT_INITIALIZED_DATA (64)
#define IMAGE_SCN_CNT_UNINITIALIZED_DATA (128)
#define IMAGE_SCN_GPREL (32768)
#define IMAGE_SCN_LNK_COMDAT (4096)
#define IMAGE_SCN_LNK_INFO (512)
#define IMAGE_SCN_LNK_NRELOC_OVFL (16777216)
#define IMAGE_SCN_LNK_OTHER (256)
#define IMAGE_SCN_LNK_REMOVE (2048)
#define IMAGE_SCN_MEM_16BIT (131072)
#define IMAGE_SCN_MEM_DISCARDABLE (33554432)
#define IMAGE_SCN_MEM_EXECUTE (536870912)
#define IMAGE_SCN_MEM_FARDATA (32768)
#define IMAGE_SCN_MEM_LOCKED (262144)
#define IMAGE_SCN_MEM_NOT_CACHED (67108864)
#define IMAGE_SCN_MEM_NOT_PAGED (134217728)
#define IMAGE_SCN_MEM_PRELOAD (524288)
#define IMAGE_SCN_MEM_PURGEABLE (131072)
#define IMAGE_SCN_MEM_READ (1073741824)
#define IMAGE_SCN_MEM_SHARED (268435456)
#define IMAGE_SCN_MEM_WRITE (2147483648u)
#define IMAGE_SCN_NO_DEFER_SPEC_EXC (16384)
#define IMAGE_SCN_SCALE_INDEX (1)
#define IMAGE_SCN_TYPE_NO_PAD (8)
#define IMAGE_SEPARATE_DEBUG_FLAGS_MASK (32768)
#define IMAGE_SEPARATE_DEBUG_MISMATCH (32768)
#define IMAGE_SEPARATE_DEBUG_SIGNATURE (18756)
#define IMAGE_SIZEOF_ARCHIVE_MEMBER_HDR (60)
#define IMAGE_SIZEOF_AUX_SYMBOL (18)
#define IMAGE_SIZEOF_BASE_RELOCATION (8)
#define IMAGE_SIZEOF_FILE_HEADER (20)
#define IMAGE_SIZEOF_LINENUMBER (6)
#define IMAGE_SIZEOF_NT_OPTIONAL32_HEADER (224)
#define IMAGE_SIZEOF_NT_OPTIONAL64_HEADER (240)
#define IMAGE_SIZEOF_NT_OPTIONAL_HEADER IMAGE_SIZEOF_NT_OPTIONAL64_HEADER
#define IMAGE_SIZEOF_RELOCATION (10)
#define IMAGE_SIZEOF_ROM_OPTIONAL_HEADER (56)
#define IMAGE_SIZEOF_SECTION_HEADER (40)
#define IMAGE_SIZEOF_SHORT_NAME (8)
#define IMAGE_SIZEOF_STD_OPTIONAL_HEADER (28)
#define IMAGE_SIZEOF_SYMBOL (18)
#define IMAGE_SNAP_BY_ORDINAL(Ordinal) IMAGE_SNAP_BY_ORDINAL64 ( Ordinal )
#define IMAGE_SNAP_BY_ORDINAL32(Ordinal) ( ( Ordinal & IMAGE_ORDINAL_FLAG32 ) != 0 )
#define IMAGE_SNAP_BY_ORDINAL64(Ordinal) ( ( Ordinal & IMAGE_ORDINAL_FLAG64 ) != 0 )
#define IMAGE_SUBSYSTEM_EFI_APPLICATION (10)
#define IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER (11)
#define IMAGE_SUBSYSTEM_EFI_ROM (13)
#define IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER (12)
#define IMAGE_SUBSYSTEM_NATIVE (1)
#define IMAGE_SUBSYSTEM_NATIVE_WINDOWS (8)
#define IMAGE_SUBSYSTEM_OS2_CUI (5)
#define IMAGE_SUBSYSTEM_POSIX_CUI (7)
#define IMAGE_SUBSYSTEM_UNKNOWN (0)
#define IMAGE_SUBSYSTEM_WINDOWS_BOOT_APPLICATION (16)
#define IMAGE_SUBSYSTEM_WINDOWS_CE_GUI (9)
#define IMAGE_SUBSYSTEM_WINDOWS_CUI (3)
#define IMAGE_SUBSYSTEM_WINDOWS_GUI (2)
#define IMAGE_SUBSYSTEM_XBOX (14)
#define IMAGE_SYM_ABSOLUTE (-1)
#define IMAGE_SYM_CLASS_ARGUMENT (9)
#define IMAGE_SYM_CLASS_AUTOMATIC (1)
#define IMAGE_SYM_CLASS_BIT_FIELD (18)
#define IMAGE_SYM_CLASS_BLOCK (100)
#define IMAGE_SYM_CLASS_CLR_TOKEN (107)
#define IMAGE_SYM_CLASS_END_OF_FUNCTION (-1)
#define IMAGE_SYM_CLASS_END_OF_STRUCT (102)
#define IMAGE_SYM_CLASS_ENUM_TAG (15)
#define IMAGE_SYM_CLASS_EXTERNAL (2)
#define IMAGE_SYM_CLASS_EXTERNAL_DEF (5)
#define IMAGE_SYM_CLASS_FAR_EXTERNAL (68)
#define IMAGE_SYM_CLASS_FILE (103)
#define IMAGE_SYM_CLASS_FUNCTION (101)
#define IMAGE_SYM_CLASS_LABEL (6)
#define IMAGE_SYM_CLASS_MEMBER_OF_ENUM (16)
#define IMAGE_SYM_CLASS_MEMBER_OF_STRUCT (8)
#define IMAGE_SYM_CLASS_MEMBER_OF_UNION (11)
#define IMAGE_SYM_CLASS_NULL (0)
#define IMAGE_SYM_CLASS_REGISTER (4)
#define IMAGE_SYM_CLASS_REGISTER_PARAM (17)
#define IMAGE_SYM_CLASS_SECTION (104)
#define IMAGE_SYM_CLASS_STATIC (3)
#define IMAGE_SYM_CLASS_STRUCT_TAG (10)
#define IMAGE_SYM_CLASS_TYPE_DEFINITION (13)
#define IMAGE_SYM_CLASS_UNDEFINED_LABEL (7)
#define IMAGE_SYM_CLASS_UNDEFINED_STATIC (14)
#define IMAGE_SYM_CLASS_UNION_TAG (12)
#define IMAGE_SYM_CLASS_WEAK_EXTERNAL (105)
#define IMAGE_SYM_DEBUG (-2)
#define IMAGE_SYM_DTYPE_ARRAY (3)
#define IMAGE_SYM_DTYPE_FUNCTION (2)
#define IMAGE_SYM_DTYPE_NULL (0)
#define IMAGE_SYM_DTYPE_POINTER (1)
#define IMAGE_SYM_SECTION_MAX (65279)
#define IMAGE_SYM_SECTION_MAX_EX MAXLONG
#define IMAGE_SYM_TYPE_BYTE (12)
#define IMAGE_SYM_TYPE_CHAR (2)
#define IMAGE_SYM_TYPE_DOUBLE (7)
#define IMAGE_SYM_TYPE_DWORD (15)
#define IMAGE_SYM_TYPE_ENUM (10)
#define IMAGE_SYM_TYPE_FLOAT (6)
#define IMAGE_SYM_TYPE_INT (4)
#define IMAGE_SYM_TYPE_LONG (5)
#define IMAGE_SYM_TYPE_MOE (11)
#define IMAGE_SYM_TYPE_NULL (0)
#define IMAGE_SYM_TYPE_PCODE (32768)
#define IMAGE_SYM_TYPE_SHORT (3)
#define IMAGE_SYM_TYPE_STRUCT (8)
#define IMAGE_SYM_TYPE_UINT (14)
#define IMAGE_SYM_TYPE_UNION (9)
#define IMAGE_SYM_TYPE_VOID (1)
#define IMAGE_SYM_TYPE_WORD (13)
#define IMAGE_SYM_UNDEFINED ( SHORT ) 0
#define IMAGE_VXD_SIGNATURE (17740)
#define IMAGE_WEAK_EXTERN_SEARCH_ALIAS (3)
#define IMAGE_WEAK_EXTERN_SEARCH_LIBRARY (2)
#define IMAGE_WEAK_EXTERN_SEARCH_NOLIBRARY (1)
#define IMC_CLOSESTATUSWINDOW (33)
#define IMC_GETCANDIDATEPOS (7)
#define IMC_GETCOMPOSITIONFONT (9)
#define IMC_GETCOMPOSITIONWINDOW (11)
#define IMC_GETSTATUSWINDOWPOS (15)
#define IMC_OPENSTATUSWINDOW (34)
#define IMC_SETCANDIDATEPOS (8)
#define IMC_SETCOMPOSITIONFONT (10)
#define IMC_SETCOMPOSITIONWINDOW (12)
#define IMC_SETSTATUSWINDOWPOS (16)
#define IMEMENUITEM_STRING_SIZE (80)
#define IMEVER_0310 (196618)
#define IMEVER_0400 (262144)
#define IME_CAND_CODE (2)
#define IME_CAND_MEANING (3)
#define IME_CAND_RADICAL (4)
#define IME_CAND_READ (1)
#define IME_CAND_STROKE (5)
#define IME_CAND_UNKNOWN (0)
#define IME_CHOTKEY_IME_NONIME_TOGGLE (16)
#define IME_CHOTKEY_SHAPE_TOGGLE (17)
#define IME_CHOTKEY_SYMBOL_TOGGLE (18)
#define IME_CMODE_ALPHANUMERIC (0)
#define IME_CMODE_CHARCODE (32)
#define IME_CMODE_CHINESE IME_CMODE_NATIVE
#define IME_CMODE_EUDC (512)
#define IME_CMODE_FIXED (2048)
#define IME_CMODE_FULLSHAPE (8)
#define IME_CMODE_HANGEUL IME_CMODE_NATIVE
#define IME_CMODE_HANGUL IME_CMODE_NATIVE
#define IME_CMODE_HANJACONVERT (64)
#define IME_CMODE_JAPANESE IME_CMODE_NATIVE
#define IME_CMODE_KATAKANA (2)
#define IME_CMODE_LANGUAGE (3)
#define IME_CMODE_NATIVE (1)
#define IME_CMODE_NOCONVERSION (256)
#define IME_CMODE_RESERVED (4026531840u)
#define IME_CMODE_ROMAN (16)
#define IME_CMODE_SOFTKBD (128)
#define IME_CMODE_SYMBOL (1024)
#define IME_CONFIG_GENERAL (1)
#define IME_CONFIG_REGISTERWORD (2)
#define IME_CONFIG_SELECTDICTIONARY (3)
#define IME_ESC_AUTOMATA (4105)
#define IME_ESC_GETHELPFILENAME (4107)
#define IME_ESC_GET_EUDC_DICTIONARY (4099)
#define IME_ESC_HANJA_MODE (4104)
#define IME_ESC_IME_NAME (4102)
#define IME_ESC_MAX_KEY (4101)
#define IME_ESC_PRIVATE_FIRST (2048)
#define IME_ESC_PRIVATE_HOTKEY (4106)
#define IME_ESC_PRIVATE_LAST (4095)
#define IME_ESC_QUERY_SUPPORT (3)
#define IME_ESC_RESERVED_FIRST (4)
#define IME_ESC_RESERVED_LAST (2047)
#define IME_ESC_SEQUENCE_TO_INTERNAL (4097)
#define IME_ESC_SET_EUDC_DICTIONARY (4100)
#define IME_ESC_SYNC_HOTKEY (4103)
#define IME_HOTKEY_DSWITCH_FIRST (256)
#define IME_HOTKEY_DSWITCH_LAST (287)
#define IME_HOTKEY_PRIVATE_FIRST (512)
#define IME_HOTKEY_PRIVATE_LAST (543)
#define IME_ITHOTKEY_PREVIOUS_COMPOSITION (513)
#define IME_ITHOTKEY_RECONVERTSTRING (515)
#define IME_ITHOTKEY_RESEND_RESULTSTR (512)
#define IME_ITHOTKEY_UISTYLE_TOGGLE (514)
#define IME_JHOTKEY_CLOSE_OPEN (48)
#define IME_KHOTKEY_ENGLISH (82)
#define IME_KHOTKEY_HANJACONVERT (81)
#define IME_KHOTKEY_SHAPE_TOGGLE (80)
#define IME_PROP_AT_CARET (65536)
#define IME_PROP_CANDLIST_START_FROM_1 (262144)
#define IME_PROP_COMPLETE_ON_UNSELECT (1048576)
#define IME_PROP_SPECIAL_UI (131072)
#define IME_PROP_UNICODE (524288)
#define IME_REGWORD_STYLE_EUDC (1)
#define IME_REGWORD_STYLE_USER_FIRST (2147483648u)
#define IME_REGWORD_STYLE_USER_LAST (4294967295u)
#define IME_SMODE_AUTOMATIC (4)
#define IME_SMODE_CONVERSATION (16)
#define IME_SMODE_NONE (0)
#define IME_SMODE_PHRASEPREDICT (8)
#define IME_SMODE_PLAURALCLAUSE (1)
#define IME_SMODE_RESERVED (61440)
#define IME_SMODE_SINGLECONVERT (2)
#define IME_THOTKEY_IME_NONIME_TOGGLE (112)
#define IME_THOTKEY_SHAPE_TOGGLE (113)
#define IME_THOTKEY_SYMBOL_TOGGLE (114)
#define IMFS_CHECKED MFS_CHECKED
#define IMFS_DEFAULT MFS_DEFAULT
#define IMFS_DISABLED MFS_DISABLED
#define IMFS_ENABLED MFS_ENABLED
#define IMFS_GRAYED MFS_GRAYED
#define IMFS_HILITE MFS_HILITE
#define IMFS_UNCHECKED MFS_UNCHECKED
#define IMFS_UNHILITE MFS_UNHILITE
#define IMFT_RADIOCHECK (1)
#define IMFT_SEPARATOR (2)
#define IMFT_SUBMENU (4)
#define IMM_ERROR_GENERAL (-2)
#define IMM_ERROR_NODATA (-1)
#define IMN_CHANGECANDIDATE (3)
#define IMN_CLOSECANDIDATE (4)
#define IMN_CLOSESTATUSWINDOW (1)
#define IMN_GUIDELINE (13)
#define IMN_OPENCANDIDATE (5)
#define IMN_OPENSTATUSWINDOW (2)
#define IMN_PRIVATE (14)
#define IMN_SETCANDIDATEPOS (9)
#define IMN_SETCOMPOSITIONFONT (10)
#define IMN_SETCOMPOSITIONWINDOW (11)
#define IMN_SETCONVERSIONMODE (6)
#define IMN_SETOPENSTATUS (8)
#define IMN_SETSENTENCEMODE (7)
#define IMN_SETSTATUSWINDOWPOS (12)
#define IMPLINK_HIGHEXPER (158)
#define IMPLINK_IP (155)
#define IMPLINK_LOWEXPER (156)
#define IMPORT_OBJECT_HDR_SIG2 (65535)
#define IMR_CANDIDATEWINDOW (2)
#define IMR_COMPOSITIONFONT (3)
#define IMR_COMPOSITIONWINDOW (1)
#define IMR_CONFIRMRECONVERTSTRING (5)
#define IMR_DOCUMENTFEED (7)
#define IMR_QUERYCHARPOSITION (6)
#define IMR_RECONVERTSTRING (4)
#define IN 
#define INADDR_ANY ( u_long ) 0x00000000
#define INADDR_BROADCAST ( u_long ) 0xffffffff
#define INADDR_LOOPBACK (2130706433)
#define INADDR_NONE (4294967295u)
#define INCREF(x) ( ( ( ( x ) & ~ N_BTMASK ) << N_TSHIFT ) | ( IMAGE_SYM_DTYPE_POINTER << N_BTSHFT ) | ( ( x ) & N_BTMASK ) )
#define INDEXID_CONTAINER (0)
#define INDEXID_OBJECT (0)
#define INFINITE (4294967295u)
#define INHERITED_ACE (16)
#define INHERIT_CALLER_PRIORITY (131072)
#define INHERIT_ONLY_ACE (8)
#define INHERIT_PARENT_AFFINITY (65536)
#define INITIAL_FPCSR (639)
#define INITIAL_MXCSR (8064)
#define INIT_ONCE_ASYNC RTL_RUN_ONCE_ASYNC
#define INIT_ONCE_CHECK_ONLY RTL_RUN_ONCE_CHECK_ONLY
#define INIT_ONCE_CTX_RESERVED_BITS RTL_RUN_ONCE_CTX_RESERVED_BITS
#define INIT_ONCE_INIT_FAILED RTL_RUN_ONCE_INIT_FAILED
#define INIT_ONCE_STATIC_INIT RTL_RUN_ONCE_INIT
#define INPLACE_E_FIRST __MSABI_LONG ( 0x800401A0 )
#define INPLACE_E_LAST __MSABI_LONG ( 0x800401AF )
#define INPLACE_E_NOTOOLSPACE _HRESULT_TYPEDEF_ ( 0x800401A1 )
#define INPLACE_E_NOTUNDOABLE _HRESULT_TYPEDEF_ ( 0x800401A0 )
#define INPLACE_S_FIRST __MSABI_LONG ( 0x000401A0 )
#define INPLACE_S_LAST __MSABI_LONG ( 0x000401AF )
#define INPLACE_S_TRUNCATED _HRESULT_TYPEDEF_ ( 0x000401A0 )
#define INPUTLANGCHANGE_BACKWARD (4)
#define INPUTLANGCHANGE_FORWARD (2)
#define INPUTLANGCHANGE_SYSCHARSET (1)
#define INPUT_HARDWARE (2)
#define INPUT_KEYBOARD (1)
#define INPUT_MOUSE (0)
#define INS_IMM64(Value, Address, Size, InstPos, ValPos) * ( PDWORD ) Address = ( * ( PDWORD ) Address & ~ ( ( ( 1 << Size ) - 1 ) << InstPos ) ) | ( ( DWORD ) ( ( ( ( ULONGLONG ) Value >> ValPos ) & ( ( ( ULONGLONG ) 1 << Size ) - 1 ) ) ) << InstPos )
#define INTERNATIONAL_USAGE (1)
#define INVALID_ATOM ( ( ATOM ) 0 )
#define INVALID_FILE_ATTRIBUTES (-1)
#define INVALID_FILE_SIZE ( ( DWORD ) 0xffffffff )
#define INVALID_HANDLE_VALUE ( ( HANDLE ) ( LONG_PTR ) - 1 )
#define INVALID_OS_COUNT (65535)
#define INVALID_SET_FILE_POINTER (-1)
#define INVALID_SOCKET ( SOCKET ) ( ~ 0 )
#define IN_CLASSA(i) ( ( ( __LONG32 ) ( i ) & 0x80000000 ) == 0 )
#define IN_CLASSA_HOST (16777215)
#define IN_CLASSA_MAX (128)
#define IN_CLASSA_NET (4278190080u)
#define IN_CLASSA_NSHIFT (24)
#define IN_CLASSB(i) ( ( ( __LONG32 ) ( i ) & 0xc0000000 ) == 0x80000000 )
#define IN_CLASSB_HOST (65535)
#define IN_CLASSB_MAX (65536)
#define IN_CLASSB_NET (4294901760u)
#define IN_CLASSB_NSHIFT (16)
#define IN_CLASSC(i) ( ( ( __LONG32 ) ( i ) & 0xe0000000 ) == 0xc0000000 )
#define IN_CLASSC_HOST (255)
#define IN_CLASSC_NET (4294967040u)
#define IN_CLASSC_NSHIFT (8)
#define IOCPARM_MASK (127)
#define IOCTL_CHANGER_BASE FILE_DEVICE_CHANGER
#define IOCTL_CHANGER_EXCHANGE_MEDIUM CTL_CODE ( IOCTL_CHANGER_BASE , 0x0008 , METHOD_BUFFERED , FILE_READ_ACCESS )
#define IOCTL_CHANGER_GET_ELEMENT_STATUS CTL_CODE ( IOCTL_CHANGER_BASE , 0x0005 , METHOD_BUFFERED , FILE_READ_ACCESS | FILE_WRITE_ACCESS )
#define IOCTL_CHANGER_GET_PARAMETERS CTL_CODE ( IOCTL_CHANGER_BASE , 0x0000 , METHOD_BUFFERED , FILE_READ_ACCESS )
#define IOCTL_CHANGER_GET_PRODUCT_DATA CTL_CODE ( IOCTL_CHANGER_BASE , 0x0002 , METHOD_BUFFERED , FILE_READ_ACCESS )
#define IOCTL_CHANGER_GET_STATUS CTL_CODE ( IOCTL_CHANGER_BASE , 0x0001 , METHOD_BUFFERED , FILE_READ_ACCESS )
#define IOCTL_CHANGER_INITIALIZE_ELEMENT_STATUS CTL_CODE ( IOCTL_CHANGER_BASE , 0x0006 , METHOD_BUFFERED , FILE_READ_ACCESS )
#define IOCTL_CHANGER_MOVE_MEDIUM CTL_CODE ( IOCTL_CHANGER_BASE , 0x0009 , METHOD_BUFFERED , FILE_READ_ACCESS )
#define IOCTL_CHANGER_QUERY_VOLUME_TAGS CTL_CODE ( IOCTL_CHANGER_BASE , 0x000B , METHOD_BUFFERED , FILE_READ_ACCESS | FILE_WRITE_ACCESS )
#define IOCTL_CHANGER_REINITIALIZE_TRANSPORT CTL_CODE ( IOCTL_CHANGER_BASE , 0x000A , METHOD_BUFFERED , FILE_READ_ACCESS )
#define IOCTL_CHANGER_SET_ACCESS CTL_CODE ( IOCTL_CHANGER_BASE , 0x0004 , METHOD_BUFFERED , FILE_READ_ACCESS | FILE_WRITE_ACCESS )
#define IOCTL_CHANGER_SET_POSITION CTL_CODE ( IOCTL_CHANGER_BASE , 0x0007 , METHOD_BUFFERED , FILE_READ_ACCESS )
#define IOCTL_DISK_BASE FILE_DEVICE_DISK
#define IOCTL_DISK_CHECK_VERIFY CTL_CODE ( IOCTL_DISK_BASE , 0x0200 , METHOD_BUFFERED , FILE_READ_ACCESS )
#define IOCTL_DISK_CONTROLLER_NUMBER CTL_CODE ( IOCTL_DISK_BASE , 0x0011 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define IOCTL_DISK_CREATE_DISK CTL_CODE ( IOCTL_DISK_BASE , 0x0016 , METHOD_BUFFERED , FILE_READ_ACCESS | FILE_WRITE_ACCESS )
#define IOCTL_DISK_DELETE_DRIVE_LAYOUT CTL_CODE ( IOCTL_DISK_BASE , 0x0040 , METHOD_BUFFERED , FILE_READ_ACCESS | FILE_WRITE_ACCESS )
#define IOCTL_DISK_EJECT_MEDIA CTL_CODE ( IOCTL_DISK_BASE , 0x0202 , METHOD_BUFFERED , FILE_READ_ACCESS )
#define IOCTL_DISK_FIND_NEW_DEVICES CTL_CODE ( IOCTL_DISK_BASE , 0x0206 , METHOD_BUFFERED , FILE_READ_ACCESS )
#define IOCTL_DISK_FORMAT_DRIVE CTL_CODE ( IOCTL_DISK_BASE , 0x00f3 , METHOD_BUFFERED , FILE_READ_ACCESS | FILE_WRITE_ACCESS )
#define IOCTL_DISK_FORMAT_TRACKS CTL_CODE ( IOCTL_DISK_BASE , 0x0006 , METHOD_BUFFERED , FILE_READ_ACCESS | FILE_WRITE_ACCESS )
#define IOCTL_DISK_FORMAT_TRACKS_EX CTL_CODE ( IOCTL_DISK_BASE , 0x000b , METHOD_BUFFERED , FILE_READ_ACCESS | FILE_WRITE_ACCESS )
#define IOCTL_DISK_GET_CACHE_INFORMATION CTL_CODE ( IOCTL_DISK_BASE , 0x0035 , METHOD_BUFFERED , FILE_READ_ACCESS )
#define IOCTL_DISK_GET_DRIVE_GEOMETRY CTL_CODE ( IOCTL_DISK_BASE , 0x0000 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define IOCTL_DISK_GET_DRIVE_GEOMETRY_EX CTL_CODE ( IOCTL_DISK_BASE , 0x0028 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define IOCTL_DISK_GET_DRIVE_LAYOUT CTL_CODE ( IOCTL_DISK_BASE , 0x0003 , METHOD_BUFFERED , FILE_READ_ACCESS )
#define IOCTL_DISK_GET_DRIVE_LAYOUT_EX CTL_CODE ( IOCTL_DISK_BASE , 0x0014 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define IOCTL_DISK_GET_LENGTH_INFO CTL_CODE ( IOCTL_DISK_BASE , 0x0017 , METHOD_BUFFERED , FILE_READ_ACCESS )
#define IOCTL_DISK_GET_MEDIA_TYPES CTL_CODE ( IOCTL_DISK_BASE , 0x0300 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define IOCTL_DISK_GET_PARTITION_INFO CTL_CODE ( IOCTL_DISK_BASE , 0x0001 , METHOD_BUFFERED , FILE_READ_ACCESS )
#define IOCTL_DISK_GET_PARTITION_INFO_EX CTL_CODE ( IOCTL_DISK_BASE , 0x0012 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define IOCTL_DISK_GROW_PARTITION CTL_CODE ( IOCTL_DISK_BASE , 0x0034 , METHOD_BUFFERED , FILE_READ_ACCESS | FILE_WRITE_ACCESS )
#define IOCTL_DISK_HISTOGRAM_DATA CTL_CODE ( IOCTL_DISK_BASE , 0x000d , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define IOCTL_DISK_HISTOGRAM_RESET CTL_CODE ( IOCTL_DISK_BASE , 0x000e , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define IOCTL_DISK_HISTOGRAM_STRUCTURE CTL_CODE ( IOCTL_DISK_BASE , 0x000c , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define IOCTL_DISK_IS_WRITABLE CTL_CODE ( IOCTL_DISK_BASE , 0x0009 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define IOCTL_DISK_LOAD_MEDIA CTL_CODE ( IOCTL_DISK_BASE , 0x0203 , METHOD_BUFFERED , FILE_READ_ACCESS )
#define IOCTL_DISK_LOGGING CTL_CODE ( IOCTL_DISK_BASE , 0x000a , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define IOCTL_DISK_MEDIA_REMOVAL CTL_CODE ( IOCTL_DISK_BASE , 0x0201 , METHOD_BUFFERED , FILE_READ_ACCESS )
#define IOCTL_DISK_PERFORMANCE CTL_CODE ( IOCTL_DISK_BASE , 0x0008 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define IOCTL_DISK_PERFORMANCE_OFF CTL_CODE ( IOCTL_DISK_BASE , 0x0018 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define IOCTL_DISK_REASSIGN_BLOCKS CTL_CODE ( IOCTL_DISK_BASE , 0x0007 , METHOD_BUFFERED , FILE_READ_ACCESS | FILE_WRITE_ACCESS )
#define IOCTL_DISK_REASSIGN_BLOCKS_EX CTL_CODE ( IOCTL_DISK_BASE , 0x0029 , METHOD_BUFFERED , FILE_READ_ACCESS | FILE_WRITE_ACCESS )
#define IOCTL_DISK_RELEASE CTL_CODE ( IOCTL_DISK_BASE , 0x0205 , METHOD_BUFFERED , FILE_READ_ACCESS )
#define IOCTL_DISK_REQUEST_DATA CTL_CODE ( IOCTL_DISK_BASE , 0x0010 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define IOCTL_DISK_REQUEST_STRUCTURE CTL_CODE ( IOCTL_DISK_BASE , 0x000f , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define IOCTL_DISK_RESERVE CTL_CODE ( IOCTL_DISK_BASE , 0x0204 , METHOD_BUFFERED , FILE_READ_ACCESS )
#define IOCTL_DISK_RESET_SNAPSHOT_INFO CTL_CODE ( IOCTL_DISK_BASE , 0x0084 , METHOD_BUFFERED , FILE_READ_ACCESS | FILE_WRITE_ACCESS )
#define IOCTL_DISK_SENSE_DEVICE CTL_CODE ( IOCTL_DISK_BASE , 0x00f8 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define IOCTL_DISK_SET_CACHE_INFORMATION CTL_CODE ( IOCTL_DISK_BASE , 0x0036 , METHOD_BUFFERED , FILE_READ_ACCESS | FILE_WRITE_ACCESS )
#define IOCTL_DISK_SET_DRIVE_LAYOUT CTL_CODE ( IOCTL_DISK_BASE , 0x0004 , METHOD_BUFFERED , FILE_READ_ACCESS | FILE_WRITE_ACCESS )
#define IOCTL_DISK_SET_DRIVE_LAYOUT_EX CTL_CODE ( IOCTL_DISK_BASE , 0x0015 , METHOD_BUFFERED , FILE_READ_ACCESS | FILE_WRITE_ACCESS )
#define IOCTL_DISK_SET_PARTITION_INFO CTL_CODE ( IOCTL_DISK_BASE , 0x0002 , METHOD_BUFFERED , FILE_READ_ACCESS | FILE_WRITE_ACCESS )
#define IOCTL_DISK_SET_PARTITION_INFO_EX CTL_CODE ( IOCTL_DISK_BASE , 0x0013 , METHOD_BUFFERED , FILE_READ_ACCESS | FILE_WRITE_ACCESS )
#define IOCTL_DISK_UPDATE_DRIVE_SIZE CTL_CODE ( IOCTL_DISK_BASE , 0x0032 , METHOD_BUFFERED , FILE_READ_ACCESS | FILE_WRITE_ACCESS )
#define IOCTL_DISK_UPDATE_PROPERTIES CTL_CODE ( IOCTL_DISK_BASE , 0x0050 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define IOCTL_DISK_VERIFY CTL_CODE ( IOCTL_DISK_BASE , 0x0005 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define IOCTL_SERENUM_EXPOSE_HARDWARE CTL_CODE ( FILE_DEVICE_SERENUM , 128 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define IOCTL_SERENUM_GET_PORT_NAME CTL_CODE ( FILE_DEVICE_SERENUM , 131 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define IOCTL_SERENUM_PORT_DESC CTL_CODE ( FILE_DEVICE_SERENUM , 130 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define IOCTL_SERENUM_REMOVE_HARDWARE CTL_CODE ( FILE_DEVICE_SERENUM , 129 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define IOCTL_SERIAL_LSRMST_INSERT CTL_CODE ( FILE_DEVICE_SERIAL_PORT , 31 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define IOCTL_SMARTCARD_CONFISCATE SCARD_CTL_CODE ( 4 )
#define IOCTL_SMARTCARD_EJECT SCARD_CTL_CODE ( 6 )
#define IOCTL_SMARTCARD_GET_ATTRIBUTE SCARD_CTL_CODE ( 2 )
#define IOCTL_SMARTCARD_GET_LAST_ERROR SCARD_CTL_CODE ( 15 )
#define IOCTL_SMARTCARD_GET_PERF_CNTR SCARD_CTL_CODE ( 16 )
#define IOCTL_SMARTCARD_GET_STATE SCARD_CTL_CODE ( 14 )
#define IOCTL_SMARTCARD_IS_ABSENT SCARD_CTL_CODE ( 11 )
#define IOCTL_SMARTCARD_IS_PRESENT SCARD_CTL_CODE ( 10 )
#define IOCTL_SMARTCARD_POWER SCARD_CTL_CODE ( 1 )
#define IOCTL_SMARTCARD_SET_ATTRIBUTE SCARD_CTL_CODE ( 3 )
#define IOCTL_SMARTCARD_SET_PROTOCOL SCARD_CTL_CODE ( 12 )
#define IOCTL_SMARTCARD_SWALLOW SCARD_CTL_CODE ( 7 )
#define IOCTL_SMARTCARD_TRANSMIT SCARD_CTL_CODE ( 5 )
#define IOCTL_STORAGE_BASE FILE_DEVICE_MASS_STORAGE
#define IOCTL_STORAGE_BREAK_RESERVATION CTL_CODE ( IOCTL_STORAGE_BASE , 0x0405 , METHOD_BUFFERED , FILE_READ_ACCESS )
#define IOCTL_STORAGE_CHECK_VERIFY CTL_CODE ( IOCTL_STORAGE_BASE , 0x0200 , METHOD_BUFFERED , FILE_READ_ACCESS )
#define IOCTL_STORAGE_CHECK_VERIFY2 CTL_CODE ( IOCTL_STORAGE_BASE , 0x0200 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define IOCTL_STORAGE_EJECTION_CONTROL CTL_CODE ( IOCTL_STORAGE_BASE , 0x0250 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define IOCTL_STORAGE_EJECT_MEDIA CTL_CODE ( IOCTL_STORAGE_BASE , 0x0202 , METHOD_BUFFERED , FILE_READ_ACCESS )
#define IOCTL_STORAGE_FIND_NEW_DEVICES CTL_CODE ( IOCTL_STORAGE_BASE , 0x0206 , METHOD_BUFFERED , FILE_READ_ACCESS )
#define IOCTL_STORAGE_GET_DEVICE_NUMBER CTL_CODE ( IOCTL_STORAGE_BASE , 0x0420 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define IOCTL_STORAGE_GET_HOTPLUG_INFO CTL_CODE ( IOCTL_STORAGE_BASE , 0x0305 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define IOCTL_STORAGE_GET_MEDIA_SERIAL_NUMBER CTL_CODE ( IOCTL_STORAGE_BASE , 0x0304 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define IOCTL_STORAGE_GET_MEDIA_TYPES CTL_CODE ( IOCTL_STORAGE_BASE , 0x0300 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define IOCTL_STORAGE_GET_MEDIA_TYPES_EX CTL_CODE ( IOCTL_STORAGE_BASE , 0x0301 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define IOCTL_STORAGE_LOAD_MEDIA CTL_CODE ( IOCTL_STORAGE_BASE , 0x0203 , METHOD_BUFFERED , FILE_READ_ACCESS )
#define IOCTL_STORAGE_LOAD_MEDIA2 CTL_CODE ( IOCTL_STORAGE_BASE , 0x0203 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define IOCTL_STORAGE_MCN_CONTROL CTL_CODE ( IOCTL_STORAGE_BASE , 0x0251 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define IOCTL_STORAGE_MEDIA_REMOVAL CTL_CODE ( IOCTL_STORAGE_BASE , 0x0201 , METHOD_BUFFERED , FILE_READ_ACCESS )
#define IOCTL_STORAGE_PREDICT_FAILURE CTL_CODE ( IOCTL_STORAGE_BASE , 0x0440 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define IOCTL_STORAGE_QUERY_PROPERTY CTL_CODE ( IOCTL_STORAGE_BASE , 0x0500 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define IOCTL_STORAGE_READ_CAPACITY CTL_CODE ( IOCTL_STORAGE_BASE , 0x0450 , METHOD_BUFFERED , FILE_READ_ACCESS )
#define IOCTL_STORAGE_RELEASE CTL_CODE ( IOCTL_STORAGE_BASE , 0x0205 , METHOD_BUFFERED , FILE_READ_ACCESS )
#define IOCTL_STORAGE_RESERVE CTL_CODE ( IOCTL_STORAGE_BASE , 0x0204 , METHOD_BUFFERED , FILE_READ_ACCESS )
#define IOCTL_STORAGE_RESET_BUS CTL_CODE ( IOCTL_STORAGE_BASE , 0x0400 , METHOD_BUFFERED , FILE_READ_ACCESS )
#define IOCTL_STORAGE_RESET_DEVICE CTL_CODE ( IOCTL_STORAGE_BASE , 0x0401 , METHOD_BUFFERED , FILE_READ_ACCESS )
#define IOCTL_STORAGE_SET_HOTPLUG_INFO CTL_CODE ( IOCTL_STORAGE_BASE , 0x0306 , METHOD_BUFFERED , FILE_READ_ACCESS | FILE_WRITE_ACCESS )
#define IOCTL_VOLUME_BASE ( ( DWORD ) 'V' )
#define IOCTL_VOLUME_GET_GPT_ATTRIBUTES CTL_CODE ( IOCTL_VOLUME_BASE , 14 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define IOCTL_VOLUME_GET_VOLUME_DISK_EXTENTS CTL_CODE ( IOCTL_VOLUME_BASE , 0 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define IOCTL_VOLUME_IS_CLUSTERED CTL_CODE ( IOCTL_VOLUME_BASE , 12 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define IOCTL_VOLUME_IS_IO_CAPABLE CTL_CODE ( IOCTL_VOLUME_BASE , 5 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define IOCTL_VOLUME_IS_OFFLINE CTL_CODE ( IOCTL_VOLUME_BASE , 4 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define IOCTL_VOLUME_LOGICAL_TO_PHYSICAL CTL_CODE ( IOCTL_VOLUME_BASE , 8 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define IOCTL_VOLUME_OFFLINE CTL_CODE ( IOCTL_VOLUME_BASE , 3 , METHOD_BUFFERED , FILE_READ_ACCESS | FILE_WRITE_ACCESS )
#define IOCTL_VOLUME_ONLINE CTL_CODE ( IOCTL_VOLUME_BASE , 2 , METHOD_BUFFERED , FILE_READ_ACCESS | FILE_WRITE_ACCESS )
#define IOCTL_VOLUME_PHYSICAL_TO_LOGICAL CTL_CODE ( IOCTL_VOLUME_BASE , 9 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define IOCTL_VOLUME_QUERY_FAILOVER_SET CTL_CODE ( IOCTL_VOLUME_BASE , 6 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define IOCTL_VOLUME_QUERY_VOLUME_NUMBER CTL_CODE ( IOCTL_VOLUME_BASE , 7 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define IOCTL_VOLUME_SUPPORTS_ONLINE_OFFLINE CTL_CODE ( IOCTL_VOLUME_BASE , 1 , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define IOC_IN (2147483648u)
#define IOC_INOUT (3221225472u)
#define IOC_OUT (1073741824)
#define IOC_VOID (536870912)
#define IO_COMPLETION_ALL_ACCESS (2031619l)
#define IO_COMPLETION_MODIFY_STATE (2)
#define IO_REPARSE_TAG_CSV (-2147483639l)
#define IO_REPARSE_TAG_DEDUP (-2147483629l)
#define IO_REPARSE_TAG_DFS (-2147483638l)
#define IO_REPARSE_TAG_DFSR (-2147483630l)
#define IO_REPARSE_TAG_DRIVE_EXTENDER (-2147483643l)
#define IO_REPARSE_TAG_FILTER_MANAGER (-2147483637l)
#define IO_REPARSE_TAG_HSM (-1073741820l)
#define IO_REPARSE_TAG_HSM2 (-2147483642l)
#define IO_REPARSE_TAG_IIS_CACHE (-1610612720l)
#define IO_REPARSE_TAG_MOUNT_POINT (-1610612733l)
#define IO_REPARSE_TAG_NFS (-2147483628l)
#define IO_REPARSE_TAG_RESERVED_ONE (1)
#define IO_REPARSE_TAG_RESERVED_RANGE IO_REPARSE_TAG_RESERVED_ONE
#define IO_REPARSE_TAG_RESERVED_ZERO (0)
#define IO_REPARSE_TAG_SIS (-2147483641l)
#define IO_REPARSE_TAG_SYMLINK (-1610612724l)
#define IO_REPARSE_TAG_WIM (-2147483640l)
#define IPPORT_BIFFUDP (512)
#define IPPORT_CMDSERVER (514)
#define IPPORT_DAYTIME (13)
#define IPPORT_DISCARD (9)
#define IPPORT_ECHO (7)
#define IPPORT_EFSSERVER (520)
#define IPPORT_EXECSERVER (512)
#define IPPORT_FINGER (79)
#define IPPORT_FTP (21)
#define IPPORT_LOGINSERVER (513)
#define IPPORT_MTP (57)
#define IPPORT_NAMESERVER (42)
#define IPPORT_NETSTAT (15)
#define IPPORT_RESERVED (1024)
#define IPPORT_RJE (77)
#define IPPORT_ROUTESERVER (520)
#define IPPORT_SMTP (25)
#define IPPORT_SUPDUP (95)
#define IPPORT_SYSTAT (11)
#define IPPORT_TELNET (23)
#define IPPORT_TFTP (69)
#define IPPORT_TIMESERVER (37)
#define IPPORT_TTYLINK (87)
#define IPPORT_WHOIS (43)
#define IPPORT_WHOSERVER (513)
#define IPPROTO_GGP (3)
#define IPPROTO_ICMP (1)
#define IPPROTO_IDP (22)
#define IPPROTO_IGMP (2)
#define IPPROTO_IP (0)
#define IPPROTO_MAX (256)
#define IPPROTO_ND (77)
#define IPPROTO_PUP (12)
#define IPPROTO_RAW (255)
#define IPPROTO_TCP (6)
#define IPPROTO_UDP (17)
#define IP_ADD_MEMBERSHIP (5)
#define IP_DEFAULT_MULTICAST_LOOP (1)
#define IP_DEFAULT_MULTICAST_TTL (1)
#define IP_DONTFRAGMENT (9)
#define IP_DROP_MEMBERSHIP (6)
#define IP_MAX_MEMBERSHIPS (20)
#define IP_MULTICAST_IF (2)
#define IP_MULTICAST_LOOP (4)
#define IP_MULTICAST_TTL (3)
#define IP_OPTIONS (1)
#define IP_TOS (8)
#define IP_TTL (7)
#define ISARY(x) ( ( ( x ) & N_TMASK ) == ( IMAGE_SYM_DTYPE_ARRAY << N_BTSHFT ) )
#define ISC_SHOWUIALL (3221225487u)
#define ISC_SHOWUIALLCANDIDATEWINDOW (15)
#define ISC_SHOWUICANDIDATEWINDOW (1)
#define ISC_SHOWUICOMPOSITIONWINDOW (2147483648u)
#define ISC_SHOWUIGUIDELINE (1073741824)
#define ISFCN(x) ( ( ( x ) & N_TMASK ) == ( IMAGE_SYM_DTYPE_FUNCTION << N_BTSHFT ) )
#define ISMEX_CALLBACK (4)
#define ISMEX_NOSEND (0)
#define ISMEX_NOTIFY (2)
#define ISMEX_REPLIED (8)
#define ISMEX_SEND (1)
#define ISOLATIONAWARE_MANIFEST_RESOURCE_ID MAKEINTRESOURCE ( 2 )
#define ISOLATIONAWARE_NOSTATICIMPORT_MANIFEST_RESOURCE_ID MAKEINTRESOURCE ( 3 )
#define ISPTR(x) ( ( ( x ) & N_TMASK ) == ( IMAGE_SYM_DTYPE_POINTER << N_BTSHFT ) )
#define ISTAG(x) ( ( x ) == IMAGE_SYM_CLASS_STRUCT_TAG || ( x ) == IMAGE_SYM_CLASS_UNION_TAG || ( x ) == IMAGE_SYM_CLASS_ENUM_TAG )
#define IS_CERT_EXCLUDED_SUBTREE(X) ( 0 != ( X & CERT_EXCLUDED_SUBTREE_BIT ) )
#define IS_CERT_HASH_PROP_ID(X) ( CERT_SHA1_HASH_PROP_ID == ( X ) || CERT_MD5_HASH_PROP_ID == ( X ) || CERT_SIGNATURE_HASH_PROP_ID == ( X ) )
#define IS_CERT_RDN_CHAR_STRING(X) ( ( ( X ) & CERT_RDN_TYPE_MASK ) >= CERT_RDN_NUMERIC_STRING )
#define IS_CHAIN_HASH_PROP_ID(X) ( CERT_ISSUER_PUBLIC_KEY_MD5_HASH_PROP_ID == ( X ) || CERT_SUBJECT_PUBLIC_KEY_MD5_HASH_PROP_ID == ( X ) || CERT_ISSUER_SERIAL_NUMBER_MD5_HASH_PROP_ID == ( X ) || CERT_SUBJECT_NAME_MD5_HASH_PROP_ID == ( X ) )
#define IS_CRL_DIST_POINT_ERR_CRL_ISSUER(X) ( 0 != ( X & CRL_DIST_POINT_ERR_CRL_ISSUER_BIT ) )
#define IS_DISPATCHING(f) ( ( f & EXCEPTION_UNWIND ) == 0 )
#define IS_ERROR(Status) ( ( unsigned __LONG32 ) ( Status ) >> 31 == SEVERITY_ERROR )
#define IS_HIGH_SURROGATE(wch) ( ( ( wch ) >= HIGH_SURROGATE_START ) && ( ( wch ) <= HIGH_SURROGATE_END ) )
#define IS_INTRESOURCE(_r) ( ( ( ( ULONG_PTR ) ( _r ) ) >> 16 ) == 0 )
#define IS_LOW_SURROGATE(wch) ( ( ( wch ) >= LOW_SURROGATE_START ) && ( ( wch ) <= LOW_SURROGATE_END ) )
#define IS_PUBKEY_HASH_PROP_ID(X) ( CERT_ISSUER_PUBLIC_KEY_MD5_HASH_PROP_ID == ( X ) || CERT_SUBJECT_PUBLIC_KEY_MD5_HASH_PROP_ID == ( X ) )
#define IS_SPECIAL_OID_INFO_ALGID(Algid) ( Algid >= CALG_OID_INFO_PARAMETERS )
#define IS_STRONG_SIGN_PROP_ID(X) ( CERT_SIGN_HASH_CNG_ALG_PROP_ID == ( X ) || CERT_SUBJECT_PUB_KEY_BIT_LENGTH_PROP_ID == ( X ) || CERT_PUB_KEY_CNG_ALG_BIT_LENGTH_PROP_ID == ( X ) )
#define IS_SURROGATE_PAIR(hs, ls) ( IS_HIGH_SURROGATE ( hs ) && IS_LOW_SURROGATE ( ls ) )
#define IS_TARGET_UNWIND(f) ( ( f & EXCEPTION_TARGET_UNWIND ) != 0 )
#define IS_TEXT_UNICODE_ASCII16 (1)
#define IS_TEXT_UNICODE_CONTROLS (4)
#define IS_TEXT_UNICODE_DBCS_LEADBYTE (1024)
#define IS_TEXT_UNICODE_ILLEGAL_CHARS (256)
#define IS_TEXT_UNICODE_NOT_ASCII_MASK (61440)
#define IS_TEXT_UNICODE_NOT_UNICODE_MASK (3840)
#define IS_TEXT_UNICODE_NULL_BYTES (4096)
#define IS_TEXT_UNICODE_ODD_LENGTH (512)
#define IS_TEXT_UNICODE_REVERSE_ASCII16 (16)
#define IS_TEXT_UNICODE_REVERSE_CONTROLS (64)
#define IS_TEXT_UNICODE_REVERSE_MASK (240)
#define IS_TEXT_UNICODE_REVERSE_SIGNATURE (128)
#define IS_TEXT_UNICODE_REVERSE_STATISTICS (32)
#define IS_TEXT_UNICODE_SIGNATURE (8)
#define IS_TEXT_UNICODE_STATISTICS (2)
#define IS_TEXT_UNICODE_UNICODE_MASK (15)
#define IS_UNWINDING(f) ( ( f & EXCEPTION_UNWIND ) != 0 )
#define ITALIC_FONTTYPE (512)
#define IUSER_LUID { 0x3e3 , 0x0 }
#define I_RpcBindingInqDynamicEndpoint __MINGW_NAME_AW ( I_RpcBindingInqDynamicEndpoint )
#define I_RpcNsBindingSetEntryName __MINGW_NAME_AW ( I_RpcNsBindingSetEntryName )
#define I_RpcServerUnregisterEndpoint __MINGW_NAME_AW ( I_RpcServerUnregisterEndpoint )
#define I_RpcServerUseProtseq2 __MINGW_NAME_AW ( I_RpcServerUseProtseq2 )
#define I_RpcServerUseProtseqEp2 __MINGW_NAME_AW ( I_RpcServerUseProtseqEp2 )
#define ImmConfigureIME __MINGW_NAME_AW ( ImmConfigureIME )
#define ImmEnumRegisterWord __MINGW_NAME_AW ( ImmEnumRegisterWord )
#define ImmEscape __MINGW_NAME_AW ( ImmEscape )
#define ImmGetCandidateList __MINGW_NAME_AW ( ImmGetCandidateList )
#define ImmGetCandidateListCount __MINGW_NAME_AW ( ImmGetCandidateListCount )
#define ImmGetCompositionFont __MINGW_NAME_AW ( ImmGetCompositionFont )
#define ImmGetCompositionString __MINGW_NAME_AW ( ImmGetCompositionString )
#define ImmGetConversionList __MINGW_NAME_AW ( ImmGetConversionList )
#define ImmGetDescription __MINGW_NAME_AW ( ImmGetDescription )
#define ImmGetGuideLine __MINGW_NAME_AW ( ImmGetGuideLine )
#define ImmGetIMEFileName __MINGW_NAME_AW ( ImmGetIMEFileName )
#define ImmGetImeMenuItems __MINGW_NAME_AW ( ImmGetImeMenuItems )
#define ImmGetRegisterWordStyle __MINGW_NAME_AW ( ImmGetRegisterWordStyle )
#define ImmInstallIME __MINGW_NAME_AW ( ImmInstallIME )
#define ImmIsUIMessage __MINGW_NAME_AW ( ImmIsUIMessage )
#define ImmRegisterWord __MINGW_NAME_AW ( ImmRegisterWord )
#define ImmSetCompositionFont __MINGW_NAME_AW ( ImmSetCompositionFont )
#define ImmSetCompositionString __MINGW_NAME_AW ( ImmSetCompositionString )
#define ImmUnregisterWord __MINGW_NAME_AW ( ImmUnregisterWord )
#define InitiateSystemShutdown __MINGW_NAME_AW ( InitiateSystemShutdown )
#define InitiateSystemShutdownEx __MINGW_NAME_AW ( InitiateSystemShutdownEx )
#define InlineIsEqualGUID(rguid1, rguid2) ( ( & ( rguid1 ) -> Data1 ) [ 0 ] == ( & ( rguid2 ) -> Data1 ) [ 0 ] && ( & ( rguid1 ) -> Data1 ) [ 1 ] == ( & ( rguid2 ) -> Data1 ) [ 1 ] && ( & ( rguid1 ) -> Data1 ) [ 2 ] == ( & ( rguid2 ) -> Data1 ) [ 2 ] && ( & ( rguid1 ) -> Data1 ) [ 3 ] == ( & ( rguid2 ) -> Data1 ) [ 3 ] )
#define InsertMenu __MINGW_NAME_AW ( InsertMenu )
#define InsertMenuItem __MINGW_NAME_AW ( InsertMenuItem )
#define Int32x32To64(a, b) ( ( ( LONGLONG ) ( ( LONG ) ( a ) ) ) * ( ( LONGLONG ) ( ( LONG ) ( b ) ) ) )
#define Int64ShllMod32(a, b) ( ( ( ULONGLONG ) ( a ) ) << ( b ) )
#define Int64ShraMod32(a, b) ( ( ( LONGLONG ) ( a ) ) >> ( b ) )
#define Int64ShrlMod32(a, b) ( ( ( ULONGLONG ) ( a ) ) >> ( b ) )
#define InterlockedAdd _InterlockedAdd
#define InterlockedAdd64 _InterlockedAdd64
#define InterlockedAnd _InterlockedAnd
#define InterlockedAnd16 _InterlockedAnd16
#define InterlockedAnd64 _InterlockedAnd64
#define InterlockedAnd8 _InterlockedAnd8
#define InterlockedAndAffinity InterlockedAnd64
#define InterlockedCompareExchange _InterlockedCompareExchange
#define InterlockedCompareExchange16 _InterlockedCompareExchange16
#define InterlockedCompareExchange64 _InterlockedCompareExchange64
#define InterlockedCompareExchangeAcquire InterlockedCompareExchange
#define InterlockedCompareExchangeAcquire64 InterlockedCompareExchange64
#define InterlockedCompareExchangePointer _InterlockedCompareExchangePointer
#define InterlockedCompareExchangePointerAcquire _InterlockedCompareExchangePointer
#define InterlockedCompareExchangePointerRelease _InterlockedCompareExchangePointer
#define InterlockedCompareExchangeRelease InterlockedCompareExchange
#define InterlockedCompareExchangeRelease64 InterlockedCompareExchange64
#define InterlockedDecrement _InterlockedDecrement
#define InterlockedDecrement16 _InterlockedDecrement16
#define InterlockedDecrement64 _InterlockedDecrement64
#define InterlockedDecrementAcquire InterlockedDecrement
#define InterlockedDecrementRelease InterlockedDecrement
#define InterlockedDecrementSizeT(a) InterlockedDecrement64 ( ( LONG64 * ) a )
#define InterlockedExchange _InterlockedExchange
#define InterlockedExchange64 _InterlockedExchange64
#define InterlockedExchangeAcquire64 InterlockedExchange64
#define InterlockedExchangeAdd _InterlockedExchangeAdd
#define InterlockedExchangeAdd64 _InterlockedExchangeAdd64
#define InterlockedExchangeAddSizeT(a, b) InterlockedExchangeAdd64 ( ( LONG64 * ) a , b )
#define InterlockedExchangePointer _InterlockedExchangePointer
#define InterlockedIncrement _InterlockedIncrement
#define InterlockedIncrement16 _InterlockedIncrement16
#define InterlockedIncrement64 _InterlockedIncrement64
#define InterlockedIncrementAcquire InterlockedIncrement
#define InterlockedIncrementRelease InterlockedIncrement
#define InterlockedIncrementSizeT(a) InterlockedIncrement64 ( ( LONG64 * ) a )
#define InterlockedOr _InterlockedOr
#define InterlockedOr16 _InterlockedOr16
#define InterlockedOr64 _InterlockedOr64
#define InterlockedOr8 _InterlockedOr8
#define InterlockedOrAffinity InterlockedOr64
#define InterlockedXor _InterlockedXor
#define InterlockedXor16 _InterlockedXor16
#define InterlockedXor64 _InterlockedXor64
#define InterlockedXor8 _InterlockedXor8
#define IsBadStringPtr __MINGW_NAME_AW ( IsBadStringPtr )
#define IsCharAlpha __MINGW_NAME_AW ( IsCharAlpha )
#define IsCharAlphaNumeric __MINGW_NAME_AW ( IsCharAlphaNumeric )
#define IsCharLower __MINGW_NAME_AW ( IsCharLower )
#define IsCharUpper __MINGW_NAME_AW ( IsCharUpper )
#define IsContainerPartition(PartitionType) ( ( PartitionType == PARTITION_EXTENDED ) || ( PartitionType == PARTITION_XINT13_EXTENDED ) )
#define IsDialogMessage __MINGW_NAME_AW ( IsDialogMessage )
#define IsEqualCLSID(rclsid1, rclsid2) IsEqualGUID ( rclsid1 , rclsid2 )
#define IsEqualFMTID(rfmtid1, rfmtid2) IsEqualGUID ( rfmtid1 , rfmtid2 )
#define IsEqualGUID(rguid1, rguid2) ( ! memcmp ( rguid1 , rguid2 , sizeof ( GUID ) ) )
#define IsEqualIID(riid1, riid2) IsEqualGUID ( riid1 , riid2 )
#define IsFTPartition(PartitionType) ( ( ( PartitionType ) & PARTITION_NTFT ) && IsRecognizedPartition ( PartitionType ) )
#define IsLFNDrive __MINGW_NAME_AW ( IsLFNDrive )
#define IsRecognizedPartition(PartitionType) ( ( ( PartitionType & PARTITION_NTFT ) && ( ( PartitionType & ~ 0xC0 ) == PARTITION_FAT_12 ) ) || ( ( PartitionType & PARTITION_NTFT ) && ( ( PartitionType & ~ 0xC0 ) == PARTITION_IFS ) ) || ( ( PartitionType & PARTITION_NTFT ) && ( ( PartitionType & ~ 0xC0 ) == PARTITION_HUGE ) ) || ( ( PartitionType & PARTITION_NTFT ) && ( ( PartitionType & ~ 0xC0 ) == PARTITION_FAT32 ) ) || ( ( PartitionType & PARTITION_NTFT ) && ( ( PartitionType & ~ 0xC0 ) == PARTITION_FAT32_XINT13 ) ) || ( ( PartitionType & PARTITION_NTFT ) && ( ( PartitionType & ~ 0xC0 ) == PARTITION_XINT13 ) ) || ( ( PartitionType ) == PARTITION_FAT_12 ) || ( ( PartitionType ) == PARTITION_FAT_16 ) || ( ( PartitionType ) == PARTITION_IFS ) || ( ( PartitionType ) == PARTITION_HUGE ) || ( ( PartitionType ) == PARTITION_FAT32 ) || ( ( PartitionType ) == PARTITION_FAT32_XINT13 ) || ( ( PartitionType ) == PARTITION_XINT13 ) )
#define IsReparseTagMicrosoft(_tag) ( ( ( _tag ) & 0x80000000 ) )
#define IsReparseTagNameSurrogate(_tag) ( ( ( _tag ) & 0x20000000 ) )
#define IsValidDevmode __MINGW_NAME_AW ( IsValidDevmode )
#define JOB_ACCESS_ADMINISTER (16)
#define JOB_ACCESS_READ (32)
#define JOB_ALL_ACCESS (983088l)
#define JOB_CONTROL_CANCEL (3)
#define JOB_CONTROL_DELETE (5)
#define JOB_CONTROL_LAST_PAGE_EJECTED (7)
#define JOB_CONTROL_PAUSE (1)
#define JOB_CONTROL_RESTART (4)
#define JOB_CONTROL_RESUME (2)
#define JOB_CONTROL_SENT_TO_PRINTER (6)
#define JOB_EXECUTE (131088l)
#define JOB_NOTIFY_FIELD_BYTES_PRINTED (23)
#define JOB_NOTIFY_FIELD_DATATYPE (5)
#define JOB_NOTIFY_FIELD_DEVMODE (9)
#define JOB_NOTIFY_FIELD_DOCUMENT (13)
#define JOB_NOTIFY_FIELD_DRIVER_NAME (8)
#define JOB_NOTIFY_FIELD_MACHINE_NAME (1)
#define JOB_NOTIFY_FIELD_NOTIFY_NAME (4)
#define JOB_NOTIFY_FIELD_PAGES_PRINTED (21)
#define JOB_NOTIFY_FIELD_PARAMETERS (7)
#define JOB_NOTIFY_FIELD_PORT_NAME (2)
#define JOB_NOTIFY_FIELD_POSITION (15)
#define JOB_NOTIFY_FIELD_PRINTER_NAME (0)
#define JOB_NOTIFY_FIELD_PRINT_PROCESSOR (6)
#define JOB_NOTIFY_FIELD_PRIORITY (14)
#define JOB_NOTIFY_FIELD_SECURITY_DESCRIPTOR (12)
#define JOB_NOTIFY_FIELD_START_TIME (17)
#define JOB_NOTIFY_FIELD_STATUS (10)
#define JOB_NOTIFY_FIELD_STATUS_STRING (11)
#define JOB_NOTIFY_FIELD_SUBMITTED (16)
#define JOB_NOTIFY_FIELD_TIME (19)
#define JOB_NOTIFY_FIELD_TOTAL_BYTES (22)
#define JOB_NOTIFY_FIELD_TOTAL_PAGES (20)
#define JOB_NOTIFY_FIELD_UNTIL_TIME (18)
#define JOB_NOTIFY_FIELD_USER_NAME (3)
#define JOB_NOTIFY_TYPE (1)
#define JOB_OBJECT_ALL_ACCESS (2031647l)
#define JOB_OBJECT_ASSIGN_PROCESS (1)
#define JOB_OBJECT_BASIC_LIMIT_VALID_FLAGS (255)
#define JOB_OBJECT_CPU_RATE_CONTROL_ENABLE (1)
#define JOB_OBJECT_CPU_RATE_CONTROL_HARD_CAP (4)
#define JOB_OBJECT_CPU_RATE_CONTROL_NOTIFY (8)
#define JOB_OBJECT_CPU_RATE_CONTROL_VALID_FLAGS (15)
#define JOB_OBJECT_CPU_RATE_CONTROL_WEIGHT_BASED (2)
#define JOB_OBJECT_EXTENDED_LIMIT_VALID_FLAGS (32767)
#define JOB_OBJECT_LIMIT_ACTIVE_PROCESS (8)
#define JOB_OBJECT_LIMIT_AFFINITY (16)
#define JOB_OBJECT_LIMIT_BREAKAWAY_OK (2048)
#define JOB_OBJECT_LIMIT_DIE_ON_UNHANDLED_EXCEPTION (1024)
#define JOB_OBJECT_LIMIT_JOB_MEMORY (512)
#define JOB_OBJECT_LIMIT_JOB_READ_BYTES (65536)
#define JOB_OBJECT_LIMIT_JOB_TIME (4)
#define JOB_OBJECT_LIMIT_JOB_WRITE_BYTES (131072)
#define JOB_OBJECT_LIMIT_KILL_ON_JOB_CLOSE (8192)
#define JOB_OBJECT_LIMIT_PRESERVE_JOB_TIME (64)
#define JOB_OBJECT_LIMIT_PRIORITY_CLASS (32)
#define JOB_OBJECT_LIMIT_PROCESS_MEMORY (256)
#define JOB_OBJECT_LIMIT_PROCESS_TIME (2)
#define JOB_OBJECT_LIMIT_RATE_CONTROL (262144)
#define JOB_OBJECT_LIMIT_RESERVED3 (32768)
#define JOB_OBJECT_LIMIT_RESERVED4 (65536)
#define JOB_OBJECT_LIMIT_RESERVED5 (131072)
#define JOB_OBJECT_LIMIT_RESERVED6 (262144)
#define JOB_OBJECT_LIMIT_SCHEDULING_CLASS (128)
#define JOB_OBJECT_LIMIT_SILENT_BREAKAWAY_OK (4096)
#define JOB_OBJECT_LIMIT_SUBSET_AFFINITY (16384)
#define JOB_OBJECT_LIMIT_VALID_FLAGS (524287)
#define JOB_OBJECT_LIMIT_WORKINGSET (1)
#define JOB_OBJECT_MSG_ABNORMAL_EXIT_PROCESS (8)
#define JOB_OBJECT_MSG_ACTIVE_PROCESS_LIMIT (3)
#define JOB_OBJECT_MSG_ACTIVE_PROCESS_ZERO (4)
#define JOB_OBJECT_MSG_END_OF_JOB_TIME (1)
#define JOB_OBJECT_MSG_END_OF_PROCESS_TIME (2)
#define JOB_OBJECT_MSG_EXIT_PROCESS (7)
#define JOB_OBJECT_MSG_JOB_CYCLE_TIME_LIMIT (12)
#define JOB_OBJECT_MSG_JOB_MEMORY_LIMIT (10)
#define JOB_OBJECT_MSG_MAXIMUM (12)
#define JOB_OBJECT_MSG_MINIMUM (1)
#define JOB_OBJECT_MSG_NEW_PROCESS (6)
#define JOB_OBJECT_MSG_NOTIFICATION_LIMIT (11)
#define JOB_OBJECT_MSG_PROCESS_MEMORY_LIMIT (9)
#define JOB_OBJECT_NOTIFICATION_LIMIT_VALID_FLAGS (459268)
#define JOB_OBJECT_POST_AT_END_OF_JOB (1)
#define JOB_OBJECT_QUERY (4)
#define JOB_OBJECT_RESERVED_LIMIT_VALID_FLAGS (524287)
#define JOB_OBJECT_SECURITY_FILTER_TOKENS (8)
#define JOB_OBJECT_SECURITY_NO_ADMIN (1)
#define JOB_OBJECT_SECURITY_ONLY_TOKEN (4)
#define JOB_OBJECT_SECURITY_RESTRICTED_TOKEN (2)
#define JOB_OBJECT_SECURITY_VALID_FLAGS (15)
#define JOB_OBJECT_SET_ATTRIBUTES (2)
#define JOB_OBJECT_SET_SECURITY_ATTRIBUTES (16)
#define JOB_OBJECT_TERMINATE (8)
#define JOB_OBJECT_TERMINATE_AT_END_OF_JOB (0)
#define JOB_OBJECT_UILIMIT_ALL (255)
#define JOB_OBJECT_UILIMIT_DESKTOP (64)
#define JOB_OBJECT_UILIMIT_DISPLAYSETTINGS (16)
#define JOB_OBJECT_UILIMIT_EXITWINDOWS (128)
#define JOB_OBJECT_UILIMIT_GLOBALATOMS (32)
#define JOB_OBJECT_UILIMIT_HANDLES (1)
#define JOB_OBJECT_UILIMIT_NONE (0)
#define JOB_OBJECT_UILIMIT_READCLIPBOARD (2)
#define JOB_OBJECT_UILIMIT_SYSTEMPARAMETERS (8)
#define JOB_OBJECT_UILIMIT_WRITECLIPBOARD (4)
#define JOB_OBJECT_UI_VALID_FLAGS (255)
#define JOB_POSITION_UNSPECIFIED (0)
#define JOB_READ (131104l)
#define JOB_STATUS_BLOCKED_DEVQ (512)
#define JOB_STATUS_COMPLETE (4096)
#define JOB_STATUS_DELETED (256)
#define JOB_STATUS_DELETING (4)
#define JOB_STATUS_ERROR (2)
#define JOB_STATUS_OFFLINE (32)
#define JOB_STATUS_PAPEROUT (64)
#define JOB_STATUS_PAUSED (1)
#define JOB_STATUS_PRINTED (128)
#define JOB_STATUS_PRINTING (16)
#define JOB_STATUS_RESTART (2048)
#define JOB_STATUS_SPOOLING (8)
#define JOB_STATUS_USER_INTERVENTION (1024)
#define JOB_WRITE (131088l)
#define JOHAB_CHARSET (130)
#define JOYCAPS_HASPOV (16)
#define JOYCAPS_HASR (2)
#define JOYCAPS_HASU (4)
#define JOYCAPS_HASV (8)
#define JOYCAPS_HASZ (1)
#define JOYCAPS_POV4DIR (32)
#define JOYCAPS_POVCTS (64)
#define JOYERR_BASE (160)
#define JOYERR_NOCANDO (166)
#define JOYERR_NOERROR (0)
#define JOYERR_PARMS (165)
#define JOYERR_UNPLUGGED (167)
#define JOYSTICKID1 (0)
#define JOYSTICKID2 (1)
#define JOY_BUTTON1 (1)
#define JOY_BUTTON10 __MSABI_LONG ( 0x00000200 )
#define JOY_BUTTON11 __MSABI_LONG ( 0x00000400 )
#define JOY_BUTTON12 __MSABI_LONG ( 0x00000800 )
#define JOY_BUTTON13 __MSABI_LONG ( 0x00001000 )
#define JOY_BUTTON14 __MSABI_LONG ( 0x00002000 )
#define JOY_BUTTON15 __MSABI_LONG ( 0x00004000 )
#define JOY_BUTTON16 __MSABI_LONG ( 0x00008000 )
#define JOY_BUTTON17 __MSABI_LONG ( 0x00010000 )
#define JOY_BUTTON18 __MSABI_LONG ( 0x00020000 )
#define JOY_BUTTON19 __MSABI_LONG ( 0x00040000 )
#define JOY_BUTTON1CHG (256)
#define JOY_BUTTON2 (2)
#define JOY_BUTTON20 __MSABI_LONG ( 0x00080000 )
#define JOY_BUTTON21 __MSABI_LONG ( 0x00100000 )
#define JOY_BUTTON22 __MSABI_LONG ( 0x00200000 )
#define JOY_BUTTON23 __MSABI_LONG ( 0x00400000 )
#define JOY_BUTTON24 __MSABI_LONG ( 0x00800000 )
#define JOY_BUTTON25 __MSABI_LONG ( 0x01000000 )
#define JOY_BUTTON26 __MSABI_LONG ( 0x02000000 )
#define JOY_BUTTON27 __MSABI_LONG ( 0x04000000 )
#define JOY_BUTTON28 __MSABI_LONG ( 0x08000000 )
#define JOY_BUTTON29 __MSABI_LONG ( 0x10000000 )
#define JOY_BUTTON2CHG (512)
#define JOY_BUTTON3 (4)
#define JOY_BUTTON30 __MSABI_LONG ( 0x20000000 )
#define JOY_BUTTON31 __MSABI_LONG ( 0x40000000 )
#define JOY_BUTTON32 __MSABI_LONG ( 0x80000000 )
#define JOY_BUTTON3CHG (1024)
#define JOY_BUTTON4 (8)
#define JOY_BUTTON4CHG (2048)
#define JOY_BUTTON5 __MSABI_LONG ( 0x00000010 )
#define JOY_BUTTON6 __MSABI_LONG ( 0x00000020 )
#define JOY_BUTTON7 __MSABI_LONG ( 0x00000040 )
#define JOY_BUTTON8 __MSABI_LONG ( 0x00000080 )
#define JOY_BUTTON9 __MSABI_LONG ( 0x00000100 )
#define JOY_CAL_READ3 __MSABI_LONG ( 0x00040000 )
#define JOY_CAL_READ4 __MSABI_LONG ( 0x00080000 )
#define JOY_CAL_READ5 __MSABI_LONG ( 0x00400000 )
#define JOY_CAL_READ6 __MSABI_LONG ( 0x00800000 )
#define JOY_CAL_READALWAYS __MSABI_LONG ( 0x00010000 )
#define JOY_CAL_READRONLY __MSABI_LONG ( 0x02000000 )
#define JOY_CAL_READUONLY __MSABI_LONG ( 0x04000000 )
#define JOY_CAL_READVONLY __MSABI_LONG ( 0x08000000 )
#define JOY_CAL_READXONLY __MSABI_LONG ( 0x00100000 )
#define JOY_CAL_READXYONLY __MSABI_LONG ( 0x00020000 )
#define JOY_CAL_READYONLY __MSABI_LONG ( 0x00200000 )
#define JOY_CAL_READZONLY __MSABI_LONG ( 0x01000000 )
#define JOY_POVBACKWARD (18000)
#define JOY_POVCENTERED (-1)
#define JOY_POVFORWARD (0)
#define JOY_POVLEFT (27000)
#define JOY_POVRIGHT (9000)
#define JOY_RETURNALL (255l)
#define JOY_RETURNBUTTONS __MSABI_LONG ( 0x00000080 )
#define JOY_RETURNCENTERED __MSABI_LONG ( 0x00000400 )
#define JOY_RETURNPOV __MSABI_LONG ( 0x00000040 )
#define JOY_RETURNPOVCTS __MSABI_LONG ( 0x00000200 )
#define JOY_RETURNR __MSABI_LONG ( 0x00000008 )
#define JOY_RETURNRAWDATA __MSABI_LONG ( 0x00000100 )
#define JOY_RETURNU __MSABI_LONG ( 0x00000010 )
#define JOY_RETURNV __MSABI_LONG ( 0x00000020 )
#define JOY_RETURNX __MSABI_LONG ( 0x00000001 )
#define JOY_RETURNY __MSABI_LONG ( 0x00000002 )
#define JOY_RETURNZ __MSABI_LONG ( 0x00000004 )
#define JOY_USEDEADZONE __MSABI_LONG ( 0x00000800 )
#define KDF_ALGORITHMID (8)
#define KDF_CONTEXT (14)
#define KDF_GENERIC_PARAMETER (17)
#define KDF_HASH_ALGORITHM (0)
#define KDF_HMAC_KEY (3)
#define KDF_ITERATION_COUNT (16)
#define KDF_KEYBITLENGTH (18)
#define KDF_LABEL (13)
#define KDF_PARTYUINFO (9)
#define KDF_PARTYVINFO (10)
#define KDF_SALT (15)
#define KDF_SECRET_APPEND (2)
#define KDF_SECRET_HANDLE (6)
#define KDF_SECRET_PREPEND (1)
#define KDF_SUPPPRIVINFO (12)
#define KDF_SUPPPUBINFO (11)
#define KDF_TLS_PRF_LABEL (4)
#define KDF_TLS_PRF_PROTOCOL (7)
#define KDF_TLS_PRF_SEED (5)
#define KDF_USE_SECRET_AS_HMAC_KEY_FLAG (1)
#define KEYBOARD_OVERRUN_MAKE_CODE (255)
#define KEYEVENTF_EXTENDEDKEY (1)
#define KEYEVENTF_KEYUP (2)
#define KEYEVENTF_SCANCODE (8)
#define KEYEVENTF_UNICODE (4)
#define KEYSTATEBLOB (12)
#define KEY_ALL_ACCESS (983103l)
#define KEY_CREATE_LINK (32)
#define KEY_CREATE_SUB_KEY (4)
#define KEY_ENUMERATE_SUB_KEYS (8)
#define KEY_EVENT (1)
#define KEY_EXECUTE (131097l)
#define KEY_LENGTH_MASK (4294901760u)
#define KEY_NOTIFY (16)
#define KEY_QUERY_VALUE (1)
#define KEY_READ (131097l)
#define KEY_SET_VALUE (2)
#define KEY_WOW64_32KEY (512)
#define KEY_WOW64_64KEY (256)
#define KEY_WOW64_RES (768)
#define KEY_WRITE (131078l)
#define KF_ALTDOWN (8192)
#define KF_DLGMODE (2048)
#define KF_EXTENDED (256)
#define KF_MENUMODE (4096)
#define KF_REPEAT (16384)
#define KF_UP (32768)
#define KLF_ACTIVATE (1)
#define KLF_NOTELLSHELL (128)
#define KLF_REORDER (8)
#define KLF_REPLACELANG (16)
#define KLF_RESET (1073741824)
#define KLF_SETFORPROCESS (256)
#define KLF_SHIFTLOCK (65536)
#define KLF_SUBSTITUTE_OK (2)
#define KL_NAMELENGTH (9)
#define KP_ADMIN_PIN (31)
#define KP_ALGID (7)
#define KP_BLOCKLEN (8)
#define KP_CERTIFICATE (26)
#define KP_CLEAR_KEY (27)
#define KP_CLIENT_RANDOM (21)
#define KP_CMS_DH_KEY_INFO (38)
#define KP_CMS_KEY_INFO (37)
#define KP_EFFECTIVE_KEYLEN (19)
#define KP_G (12)
#define KP_GET_USE_COUNT (42)
#define KP_HIGHEST_VERSION (41)
#define KP_INFO (18)
#define KP_IV (1)
#define KP_KEYEXCHANGE_PIN (32)
#define KP_KEYLEN (9)
#define KP_KEYVAL (30)
#define KP_MODE (4)
#define KP_MODE_BITS (5)
#define KP_OAEP_PARAMS (36)
#define KP_P (11)
#define KP_PADDING (3)
#define KP_PERMISSIONS (6)
#define KP_PIN_ID (43)
#define KP_PIN_INFO (44)
#define KP_PRECOMP_MD5 (24)
#define KP_PRECOMP_SHA (25)
#define KP_PREHASH (34)
#define KP_PUB_EX_LEN (28)
#define KP_PUB_EX_VAL (29)
#define KP_PUB_PARAMS (39)
#define KP_Q (13)
#define KP_RA (16)
#define KP_RB (17)
#define KP_ROUNDS (35)
#define KP_RP (23)
#define KP_SALT (2)
#define KP_SALT_EX (10)
#define KP_SCHANNEL_ALG (20)
#define KP_SERVER_RANDOM (22)
#define KP_SIGNATURE_PIN (33)
#define KP_VERIFY_PARAMS (40)
#define KP_X (14)
#define KP_Y (15)
#define KTM_MARSHAL_BLOB_VERSION_MAJOR (1)
#define KTM_MARSHAL_BLOB_VERSION_MINOR (1)
#define LABEL_SECURITY_INFORMATION (16l)
#define LANGGROUPLOCALE_ENUMPROC LANGGROUPLOCALE_ENUMPROCA
#define LANGIDFROMLCID(lcid) ( ( WORD ) ( lcid ) )
#define LANGUAGEGROUP_ENUMPROC LANGUAGEGROUP_ENUMPROCA
#define LANG_AFRIKAANS (54)
#define LANG_ALBANIAN (28)
#define LANG_ALSATIAN (132)
#define LANG_AMHARIC (94)
#define LANG_ARABIC (1)
#define LANG_ARMENIAN (43)
#define LANG_ASSAMESE (77)
#define LANG_AZERBAIJANI (44)
#define LANG_AZERI (44)
#define LANG_BANGLA (69)
#define LANG_BASHKIR (109)
#define LANG_BASQUE (45)
#define LANG_BELARUSIAN (35)
#define LANG_BENGALI (69)
#define LANG_BOSNIAN (26)
#define LANG_BOSNIAN_NEUTRAL (30746)
#define LANG_BRETON (126)
#define LANG_BULGARIAN (2)
#define LANG_CATALAN (3)
#define LANG_CENTRAL_KURDISH (146)
#define LANG_CHEROKEE (92)
#define LANG_CHINESE (4)
#define LANG_CHINESE_SIMPLIFIED (4)
#define LANG_CHINESE_TRADITIONAL (31748)
#define LANG_CORSICAN (131)
#define LANG_CROATIAN (26)
#define LANG_CZECH (5)
#define LANG_DANISH (6)
#define LANG_DARI (140)
#define LANG_DIVEHI (101)
#define LANG_DUTCH (19)
#define LANG_ENGLISH (9)
#define LANG_ESTONIAN (37)
#define LANG_FAEROESE (56)
#define LANG_FARSI (41)
#define LANG_FILIPINO (100)
#define LANG_FINNISH (11)
#define LANG_FRENCH (12)
#define LANG_FRISIAN (98)
#define LANG_FULAH (103)
#define LANG_GALICIAN (86)
#define LANG_GEORGIAN (55)
#define LANG_GERMAN (7)
#define LANG_GREEK (8)
#define LANG_GREENLANDIC (111)
#define LANG_GUJARATI (71)
#define LANG_HAUSA (104)
#define LANG_HEBREW (13)
#define LANG_HINDI (57)
#define LANG_HUNGARIAN (14)
#define LANG_ICELANDIC (15)
#define LANG_IGBO (112)
#define LANG_INDONESIAN (33)
#define LANG_INUKTITUT (93)
#define LANG_INVARIANT (127)
#define LANG_IRISH (60)
#define LANG_ITALIAN (16)
#define LANG_JAPANESE (17)
#define LANG_KANNADA (75)
#define LANG_KASHMIRI (96)
#define LANG_KAZAK (63)
#define LANG_KHMER (83)
#define LANG_KICHE (134)
#define LANG_KINYARWANDA (135)
#define LANG_KONKANI (87)
#define LANG_KOREAN (18)
#define LANG_KYRGYZ (64)
#define LANG_LAO (84)
#define LANG_LATVIAN (38)
#define LANG_LITHUANIAN (39)
#define LANG_LOWER_SORBIAN (46)
#define LANG_LUXEMBOURGISH (110)
#define LANG_MACEDONIAN (47)
#define LANG_MALAY (62)
#define LANG_MALAYALAM (76)
#define LANG_MALTESE (58)
#define LANG_MANIPURI (88)
#define LANG_MAORI (129)
#define LANG_MAPUDUNGUN (122)
#define LANG_MARATHI (78)
#define LANG_MOHAWK (124)
#define LANG_MONGOLIAN (80)
#define LANG_NEPALI (97)
#define LANG_NEUTRAL (0)
#define LANG_NORWEGIAN (20)
#define LANG_OCCITAN (130)
#define LANG_ODIA (72)
#define LANG_ORIYA (72)
#define LANG_PASHTO (99)
#define LANG_PERSIAN (41)
#define LANG_POLISH (21)
#define LANG_PORTUGUESE (22)
#define LANG_PULAR (103)
#define LANG_PUNJABI (70)
#define LANG_QUECHUA (107)
#define LANG_ROMANIAN (24)
#define LANG_ROMANSH (23)
#define LANG_RUSSIAN (25)
#define LANG_SAKHA (133)
#define LANG_SAMI (59)
#define LANG_SANSKRIT (79)
#define LANG_SCOTTISH_GAELIC (145)
#define LANG_SERBIAN (26)
#define LANG_SERBIAN_NEUTRAL (31770)
#define LANG_SINDHI (89)
#define LANG_SINHALESE (91)
#define LANG_SLOVAK (27)
#define LANG_SLOVENIAN (36)
#define LANG_SOTHO (108)
#define LANG_SPANISH (10)
#define LANG_SWAHILI (65)
#define LANG_SWEDISH (29)
#define LANG_SYRIAC (90)
#define LANG_SYSTEM_DEFAULT ( MAKELANGID ( LANG_NEUTRAL , SUBLANG_SYS_DEFAULT ) )
#define LANG_TAJIK (40)
#define LANG_TAMAZIGHT (95)
#define LANG_TAMIL (73)
#define LANG_TATAR (68)
#define LANG_TELUGU (74)
#define LANG_THAI (30)
#define LANG_TIBETAN (81)
#define LANG_TIGRIGNA (115)
#define LANG_TIGRINYA (115)
#define LANG_TSWANA (50)
#define LANG_TURKISH (31)
#define LANG_TURKMEN (66)
#define LANG_UIGHUR (128)
#define LANG_UKRAINIAN (34)
#define LANG_UPPER_SORBIAN (46)
#define LANG_URDU (32)
#define LANG_USER_DEFAULT ( MAKELANGID ( LANG_NEUTRAL , SUBLANG_DEFAULT ) )
#define LANG_UZBEK (67)
#define LANG_VALENCIAN (3)
#define LANG_VIETNAMESE (42)
#define LANG_WELSH (82)
#define LANG_WOLOF (136)
#define LANG_XHOSA (52)
#define LANG_YAKUT (133)
#define LANG_YI (120)
#define LANG_YORUBA (106)
#define LANG_ZULU (53)
#define LAYOUT_BITMAPORIENTATIONPRESERVED (8)
#define LAYOUT_BTT (2)
#define LAYOUT_ORIENTATIONMASK (7)
#define LAYOUT_RTL (1)
#define LAYOUT_VBH (4)
#define LBN_DBLCLK (2)
#define LBN_ERRSPACE (-2)
#define LBN_KILLFOCUS (5)
#define LBN_SELCANCEL (3)
#define LBN_SELCHANGE (1)
#define LBN_SETFOCUS (4)
#define LBSELCHSTRING __MINGW_NAME_AW ( LBSELCHSTRING )
#define LBSELCHSTRINGA "commdlg_LBSelChangedNotify"
#define LBSELCHSTRINGW "commdlg_LBSelChangedNotify"
#define LBS_COMBOBOX __MSABI_LONG ( 0x8000 )
#define LBS_DISABLENOSCROLL __MSABI_LONG ( 0x1000 )
#define LBS_EXTENDEDSEL __MSABI_LONG ( 0x0800 )
#define LBS_HASSTRINGS __MSABI_LONG ( 0x0040 )
#define LBS_MULTICOLUMN __MSABI_LONG ( 0x0200 )
#define LBS_MULTIPLESEL __MSABI_LONG ( 0x0008 )
#define LBS_NODATA __MSABI_LONG ( 0x2000 )
#define LBS_NOINTEGRALHEIGHT __MSABI_LONG ( 0x0100 )
#define LBS_NOREDRAW __MSABI_LONG ( 0x0004 )
#define LBS_NOSEL __MSABI_LONG ( 0x4000 )
#define LBS_NOTIFY __MSABI_LONG ( 0x0001 )
#define LBS_OWNERDRAWFIXED __MSABI_LONG ( 0x0010 )
#define LBS_OWNERDRAWVARIABLE __MSABI_LONG ( 0x0020 )
#define LBS_SORT __MSABI_LONG ( 0x0002 )
#define LBS_STANDARD (10485763l)
#define LBS_USETABSTOPS __MSABI_LONG ( 0x0080 )
#define LBS_WANTKEYBOARDINPUT __MSABI_LONG ( 0x0400 )
#define LB_ADDFILE (406)
#define LB_ADDSTRING (384)
#define LB_CTLCODE __MSABI_LONG ( 0 )
#define LB_DELETESTRING (386)
#define LB_DIR (397)
#define LB_ERR (-1)
#define LB_ERRSPACE (-2)
#define LB_FINDSTRING (399)
#define LB_FINDSTRINGEXACT (418)
#define LB_GETANCHORINDEX (413)
#define LB_GETCARETINDEX (415)
#define LB_GETCOUNT (395)
#define LB_GETCURSEL (392)
#define LB_GETHORIZONTALEXTENT (403)
#define LB_GETITEMDATA (409)
#define LB_GETITEMHEIGHT (417)
#define LB_GETITEMRECT (408)
#define LB_GETLISTBOXINFO (434)
#define LB_GETLOCALE (422)
#define LB_GETSEL (391)
#define LB_GETSELCOUNT (400)
#define LB_GETSELITEMS (401)
#define LB_GETTEXT (393)
#define LB_GETTEXTLEN (394)
#define LB_GETTOPINDEX (398)
#define LB_INITSTORAGE (424)
#define LB_INSERTSTRING (385)
#define LB_ITEMFROMPOINT (425)
#define LB_MSGMAX (435)
#define LB_OKAY (0)
#define LB_RESETCONTENT (388)
#define LB_SELECTSTRING (396)
#define LB_SELITEMRANGE (411)
#define LB_SELITEMRANGEEX (387)
#define LB_SETANCHORINDEX (412)
#define LB_SETCARETINDEX (414)
#define LB_SETCOLUMNWIDTH (405)
#define LB_SETCOUNT (423)
#define LB_SETCURSEL (390)
#define LB_SETHORIZONTALEXTENT (404)
#define LB_SETITEMDATA (410)
#define LB_SETITEMHEIGHT (416)
#define LB_SETLOCALE (421)
#define LB_SETSEL (389)
#define LB_SETTABSTOPS (402)
#define LB_SETTOPINDEX (407)
#define LCID_ALTERNATE_SORTS (4)
#define LCID_INSTALLED (1)
#define LCID_SUPPORTED (2)
#define LCMAP_BYTEREV (2048)
#define LCMAP_FULLWIDTH (8388608)
#define LCMAP_HALFWIDTH (4194304)
#define LCMAP_HIRAGANA (1048576)
#define LCMAP_KATAKANA (2097152)
#define LCMAP_LINGUISTIC_CASING (16777216)
#define LCMAP_LOWERCASE (256)
#define LCMAP_SIMPLIFIED_CHINESE (33554432)
#define LCMAP_SORTKEY (1024)
#define LCMAP_TRADITIONAL_CHINESE (67108864)
#define LCMAP_UPPERCASE (512)
#define LCMapString LCMapStringA
#define LCS_CALIBRATED_RGB __MSABI_LONG ( 0x00000000 )
#define LCS_GM_ABS_COLORIMETRIC __MSABI_LONG ( 0x00000008 )
#define LCS_GM_BUSINESS __MSABI_LONG ( 0x00000001 )
#define LCS_GM_GRAPHICS __MSABI_LONG ( 0x00000002 )
#define LCS_GM_IMAGES __MSABI_LONG ( 0x00000004 )
#define LCS_SIGNATURE (80)
#define LCS_WINDOWS_COLOR_SPACE (87)
#define LCS_sRGB (115)
#define LC_INTERIORS (128)
#define LC_MARKER (4)
#define LC_NONE (0)
#define LC_POLYLINE (2)
#define LC_POLYMARKER (8)
#define LC_STYLED (32)
#define LC_WIDE (16)
#define LC_WIDESTYLED (64)
#define LEFT_ALT_PRESSED (2)
#define LEFT_CTRL_PRESSED (8)
#define LEGACY_DH_PRIVATE_BLOB "CAPIDHPRIVATEBLOB"
#define LEGACY_DH_PUBLIC_BLOB "CAPIDHPUBLICBLOB"
#define LEGACY_DSA_PRIVATE_BLOB "CAPIDSAPRIVATEBLOB"
#define LEGACY_DSA_PUBLIC_BLOB "CAPIDSAPUBLICBLOB"
#define LEGACY_DSA_V2_PRIVATE_BLOB "V2CAPIDSAPRIVATEBLOB"
#define LEGACY_DSA_V2_PUBLIC_BLOB "V2CAPIDSAPUBLICBLOB"
#define LEGACY_RSAPRIVATE_BLOB "CAPIPRIVATEBLOB"
#define LEGACY_RSAPUBLIC_BLOB "CAPIPUBLICBLOB"
#define LEGACY_SAVE_AREA_LENGTH sizeof ( XMM_SAVE_AREA32 )
#define LF_FACESIZE (32)
#define LF_FULLFACESIZE (64)
#define LGRPID_ARABIC (13)
#define LGRPID_ARMENIAN (17)
#define LGRPID_BALTIC (3)
#define LGRPID_CENTRAL_EUROPE (2)
#define LGRPID_CYRILLIC (5)
#define LGRPID_GEORGIAN (16)
#define LGRPID_GREEK (4)
#define LGRPID_HEBREW (12)
#define LGRPID_INDIC (15)
#define LGRPID_INSTALLED (1)
#define LGRPID_JAPANESE (7)
#define LGRPID_KOREAN (8)
#define LGRPID_SIMPLIFIED_CHINESE (10)
#define LGRPID_SUPPORTED (2)
#define LGRPID_THAI (11)
#define LGRPID_TRADITIONAL_CHINESE (9)
#define LGRPID_TURKIC (6)
#define LGRPID_TURKISH (6)
#define LGRPID_VIETNAMESE (14)
#define LGRPID_WESTERN_EUROPE (1)
#define LHND (66)
#define LINECAPS (30)
#define LINGUISTIC_IGNORECASE (16)
#define LINGUISTIC_IGNOREDIACRITIC (32)
#define LISTEN_OUTSTANDING (1)
#define LLKHF_ALTDOWN (32)
#define LLKHF_EXTENDED (1)
#define LLKHF_INJECTED (16)
#define LLKHF_UP (128)
#define LLMHF_INJECTED (1)
#define LMEM_DISCARDABLE (3840)
#define LMEM_DISCARDED (16384)
#define LMEM_FIXED (0)
#define LMEM_INVALID_HANDLE (32768)
#define LMEM_LOCKCOUNT (255)
#define LMEM_MODIFY (128)
#define LMEM_MOVEABLE (2)
#define LMEM_NOCOMPACT (16)
#define LMEM_NODISCARD (32)
#define LMEM_VALID_FLAGS (3954)
#define LMEM_ZEROINIT (64)
#define LOAD_DLL_DEBUG_EVENT (6)
#define LOAD_IGNORE_CODE_AUTHZ_LEVEL (16)
#define LOAD_LIBRARY_AS_DATAFILE (2)
#define LOAD_LIBRARY_AS_DATAFILE_EXCLUSIVE (64)
#define LOAD_LIBRARY_AS_IMAGE_RESOURCE (32)
#define LOAD_LIBRARY_REQUIRE_SIGNED_TARGET (128)
#define LOAD_LIBRARY_SEARCH_APPLICATION_DIR (512)
#define LOAD_LIBRARY_SEARCH_DEFAULT_DIRS (4096)
#define LOAD_LIBRARY_SEARCH_DLL_LOAD_DIR (256)
#define LOAD_LIBRARY_SEARCH_SYSTEM32 (2048)
#define LOAD_LIBRARY_SEARCH_USER_DIRS (1024)
#define LOAD_WITH_ALTERED_SEARCH_PATH (8)
#define LOBYTE(w) ( ( BYTE ) ( ( ( DWORD_PTR ) ( w ) ) & 0xff ) )
#define LOCALE_CUSTOM_DEFAULT ( MAKELCID ( MAKELANGID ( LANG_NEUTRAL , SUBLANG_CUSTOM_DEFAULT ) , SORT_DEFAULT ) )
#define LOCALE_CUSTOM_UI_DEFAULT ( MAKELCID ( MAKELANGID ( LANG_NEUTRAL , SUBLANG_UI_CUSTOM_DEFAULT ) , SORT_DEFAULT ) )
#define LOCALE_CUSTOM_UNSPECIFIED ( MAKELCID ( MAKELANGID ( LANG_NEUTRAL , SUBLANG_CUSTOM_UNSPECIFIED ) , SORT_DEFAULT ) )
#define LOCALE_ENUMPROC LOCALE_ENUMPROCA
#define LOCALE_FONTSIGNATURE (88)
#define LOCALE_ICALENDARTYPE (4105)
#define LOCALE_ICENTURY (36)
#define LOCALE_ICOUNTRY (5)
#define LOCALE_ICURRDIGITS (25)
#define LOCALE_ICURRENCY (27)
#define LOCALE_IDATE (33)
#define LOCALE_IDAYLZERO (38)
#define LOCALE_IDEFAULTANSICODEPAGE (4100)
#define LOCALE_IDEFAULTCODEPAGE (11)
#define LOCALE_IDEFAULTCOUNTRY (10)
#define LOCALE_IDEFAULTEBCDICCODEPAGE (4114)
#define LOCALE_IDEFAULTLANGUAGE (9)
#define LOCALE_IDEFAULTMACCODEPAGE (4113)
#define LOCALE_IDIGITS (17)
#define LOCALE_IDIGITSUBSTITUTION (4116)
#define LOCALE_IFIRSTDAYOFWEEK (4108)
#define LOCALE_IFIRSTWEEKOFYEAR (4109)
#define LOCALE_IGEOID (91)
#define LOCALE_IINTLCURRDIGITS (26)
#define LOCALE_ILANGUAGE (1)
#define LOCALE_ILDATE (34)
#define LOCALE_ILZERO (18)
#define LOCALE_IMEASURE (13)
#define LOCALE_IMONLZERO (39)
#define LOCALE_INEGCURR (28)
#define LOCALE_INEGNUMBER (4112)
#define LOCALE_INEGSEPBYSPACE (87)
#define LOCALE_INEGSIGNPOSN (83)
#define LOCALE_INEGSYMPRECEDES (86)
#define LOCALE_INVARIANT ( MAKELCID ( MAKELANGID ( LANG_INVARIANT , SUBLANG_NEUTRAL ) , SORT_DEFAULT ) )
#define LOCALE_IOPTIONALCALENDAR (4107)
#define LOCALE_IPAPERSIZE (4106)
#define LOCALE_IPOSSEPBYSPACE (85)
#define LOCALE_IPOSSIGNPOSN (82)
#define LOCALE_IPOSSYMPRECEDES (84)
#define LOCALE_ITIME (35)
#define LOCALE_ITIMEMARKPOSN (4101)
#define LOCALE_ITLZERO (37)
#define LOCALE_NAME_MAX_LENGTH (85)
#define LOCALE_NEUTRAL ( MAKELCID ( MAKELANGID ( LANG_NEUTRAL , SUBLANG_NEUTRAL ) , SORT_DEFAULT ) )
#define LOCALE_NOUSEROVERRIDE (2147483648u)
#define LOCALE_RETURN_NUMBER (536870912)
#define LOCALE_S1159 (40)
#define LOCALE_S2359 (41)
#define LOCALE_SABBREVCTRYNAME (7)
#define LOCALE_SABBREVDAYNAME1 (49)
#define LOCALE_SABBREVDAYNAME2 (50)
#define LOCALE_SABBREVDAYNAME3 (51)
#define LOCALE_SABBREVDAYNAME4 (52)
#define LOCALE_SABBREVDAYNAME5 (53)
#define LOCALE_SABBREVDAYNAME6 (54)
#define LOCALE_SABBREVDAYNAME7 (55)
#define LOCALE_SABBREVLANGNAME (3)
#define LOCALE_SABBREVMONTHNAME1 (68)
#define LOCALE_SABBREVMONTHNAME10 (77)
#define LOCALE_SABBREVMONTHNAME11 (78)
#define LOCALE_SABBREVMONTHNAME12 (79)
#define LOCALE_SABBREVMONTHNAME13 (4111)
#define LOCALE_SABBREVMONTHNAME2 (69)
#define LOCALE_SABBREVMONTHNAME3 (70)
#define LOCALE_SABBREVMONTHNAME4 (71)
#define LOCALE_SABBREVMONTHNAME5 (72)
#define LOCALE_SABBREVMONTHNAME6 (73)
#define LOCALE_SABBREVMONTHNAME7 (74)
#define LOCALE_SABBREVMONTHNAME8 (75)
#define LOCALE_SABBREVMONTHNAME9 (76)
#define LOCALE_SCOUNTRY (6)
#define LOCALE_SCURRENCY (20)
#define LOCALE_SDATE (29)
#define LOCALE_SDAYNAME1 (42)
#define LOCALE_SDAYNAME2 (43)
#define LOCALE_SDAYNAME3 (44)
#define LOCALE_SDAYNAME4 (45)
#define LOCALE_SDAYNAME5 (46)
#define LOCALE_SDAYNAME6 (47)
#define LOCALE_SDAYNAME7 (48)
#define LOCALE_SDECIMAL (14)
#define LOCALE_SENGCOUNTRY (4098)
#define LOCALE_SENGCURRNAME (4103)
#define LOCALE_SENGLANGUAGE (4097)
#define LOCALE_SENGLISHCOUNTRYNAME (4098)
#define LOCALE_SENGLISHLANGUAGENAME (4097)
#define LOCALE_SGROUPING (16)
#define LOCALE_SINTLSYMBOL (21)
#define LOCALE_SISO3166CTRYNAME (90)
#define LOCALE_SISO639LANGNAME (89)
#define LOCALE_SLANGUAGE (2)
#define LOCALE_SLIST (12)
#define LOCALE_SLOCALIZEDCOUNTRYNAME (6)
#define LOCALE_SLOCALIZEDDISPLAYNAME (2)
#define LOCALE_SLONGDATE (32)
#define LOCALE_SMONDECIMALSEP (22)
#define LOCALE_SMONGROUPING (24)
#define LOCALE_SMONTHNAME1 (56)
#define LOCALE_SMONTHNAME10 (65)
#define LOCALE_SMONTHNAME11 (66)
#define LOCALE_SMONTHNAME12 (67)
#define LOCALE_SMONTHNAME13 (4110)
#define LOCALE_SMONTHNAME2 (57)
#define LOCALE_SMONTHNAME3 (58)
#define LOCALE_SMONTHNAME4 (59)
#define LOCALE_SMONTHNAME5 (60)
#define LOCALE_SMONTHNAME6 (61)
#define LOCALE_SMONTHNAME7 (62)
#define LOCALE_SMONTHNAME8 (63)
#define LOCALE_SMONTHNAME9 (64)
#define LOCALE_SMONTHOUSANDSEP (23)
#define LOCALE_SNATIVECOUNTRYNAME (8)
#define LOCALE_SNATIVECTRYNAME (8)
#define LOCALE_SNATIVECURRNAME (4104)
#define LOCALE_SNATIVEDIGITS (19)
#define LOCALE_SNATIVELANGNAME (4)
#define LOCALE_SNATIVELANGUAGENAME (4)
#define LOCALE_SNEGATIVESIGN (81)
#define LOCALE_SPOSITIVESIGN (80)
#define LOCALE_SSHORTDATE (31)
#define LOCALE_SSORTNAME (4115)
#define LOCALE_STHOUSAND (15)
#define LOCALE_STIME (30)
#define LOCALE_STIMEFORMAT (4099)
#define LOCALE_SYEARMONTH (4102)
#define LOCALE_SYSTEM_DEFAULT ( MAKELCID ( LANG_SYSTEM_DEFAULT , SORT_DEFAULT ) )
#define LOCALE_USER_DEFAULT ( MAKELCID ( LANG_USER_DEFAULT , SORT_DEFAULT ) )
#define LOCALE_USE_CP_ACP (1073741824)
#define LOCALSERVICE_LUID { 0x3e5 , 0x0 }
#define LOCKFILE_EXCLUSIVE_LOCK (2)
#define LOCKFILE_FAIL_IMMEDIATELY (1)
#define LOCK_ELEMENT (0)
#define LOCK_UNLOCK_DOOR (2)
#define LOCK_UNLOCK_IEPORT (1)
#define LOCK_UNLOCK_KEYPAD (4)
#define LOGON32_LOGON_BATCH (4)
#define LOGON32_LOGON_INTERACTIVE (2)
#define LOGON32_LOGON_NETWORK (3)
#define LOGON32_LOGON_NETWORK_CLEARTEXT (8)
#define LOGON32_LOGON_NEW_CREDENTIALS (9)
#define LOGON32_LOGON_SERVICE (5)
#define LOGON32_LOGON_UNLOCK (7)
#define LOGON32_PROVIDER_DEFAULT (0)
#define LOGON32_PROVIDER_WINNT35 (1)
#define LOGON32_PROVIDER_WINNT40 (2)
#define LOGON32_PROVIDER_WINNT50 (3)
#define LOGON_NETCREDENTIALS_ONLY (2)
#define LOGON_WITH_PROFILE (1)
#define LOGON_ZERO_PASSWORD_BUFFER (2147483648u)
#define LOGPIXELSX (88)
#define LOGPIXELSY (90)
#define LOWORD(l) ( ( WORD ) ( ( ( DWORD_PTR ) ( l ) ) & 0xffff ) )
#define LOW_SURROGATE_END (57343)
#define LOW_SURROGATE_START (56320)
#define LPCPROPSHEETHEADER __MINGW_NAME_AW ( LPCPROPSHEETHEADER )
#define LPCPROPSHEETPAGE __MINGW_NAME_AW ( LPCPROPSHEETPAGE )
#define LPCPROPSHEETPAGE_LATEST __MINGW_NAME_AW_EXT ( LPCPROPSHEETPAGE , _LATEST )
#define LPCPROPSHEETPAGE_V1 __MINGW_NAME_AW_EXT ( LPCPROPSHEETPAGE , _V1 )
#define LPCPROPSHEETPAGE_V2 __MINGW_NAME_AW_EXT ( LPCPROPSHEETPAGE , _V2 )
#define LPCPROPSHEETPAGE_V3 __MINGW_NAME_AW_EXT ( LPCPROPSHEETPAGE , _V3 )
#define LPD_DOUBLEBUFFER (1)
#define LPD_SHARE_ACCUM (256)
#define LPD_SHARE_DEPTH (64)
#define LPD_SHARE_STENCIL (128)
#define LPD_STEREO (2)
#define LPD_SUPPORT_GDI (16)
#define LPD_SUPPORT_OPENGL (32)
#define LPD_SWAP_COPY (1024)
#define LPD_SWAP_EXCHANGE (512)
#define LPD_TRANSPARENT (4096)
#define LPD_TYPE_COLORINDEX (1)
#define LPD_TYPE_RGBA (0)
#define LPFNPSPCALLBACK __MINGW_NAME_AW ( LPFNPSPCALLBACK )
#define LPOCNCONNPROC __MINGW_NAME_AW ( LPOCNCONNPROC )
#define LPOPENCARDNAMEA_EX LPOPENCARDNAME_EXA
#define LPOPENCARDNAMEW_EX LPOPENCARDNAME_EXW
#define LPOPENCARDNAME_A LPOPENCARDNAMEA
#define LPOPENCARDNAME_W LPOPENCARDNAMEW
#define LPPROPSHEETHEADER __MINGW_NAME_AW ( LPPROPSHEETHEADER )
#define LPPROPSHEETPAGE __MINGW_NAME_AW ( LPPROPSHEETPAGE )
#define LPPROPSHEETPAGE_LATEST __MINGW_NAME_AW_EXT ( LPPROPSHEETPAGE , _LATEST )
#define LPPROPSHEETPAGE_V1 __MINGW_NAME_AW_EXT ( LPPROPSHEETPAGE , _V1 )
#define LPPROPSHEETPAGE_V2 __MINGW_NAME_AW_EXT ( LPPROPSHEETPAGE , _V2 )
#define LPPROPSHEETPAGE_V3 __MINGW_NAME_AW_EXT ( LPPROPSHEETPAGE , _V3 )
#define LPSCARD_READERSTATE_A LPSCARD_READERSTATEA
#define LPSCARD_READERSTATE_W LPSCARD_READERSTATEW
#define LPSERVICE_MAIN_FUNCTION __MINGW_NAME_AW ( LPSERVICE_MAIN_FUNCTION )
#define LPTR (64)
#define LPTx (128)
#define LR_COLOR (2)
#define LR_COPYDELETEORG (8)
#define LR_COPYFROMRESOURCE (16384)
#define LR_COPYRETURNORG (4)
#define LR_CREATEDIBSECTION (8192)
#define LR_DEFAULTCOLOR (0)
#define LR_DEFAULTSIZE (64)
#define LR_LOADFROMFILE (16)
#define LR_LOADMAP3DCOLORS (4096)
#define LR_LOADTRANSPARENT (32)
#define LR_MONOCHROME (1)
#define LR_SHARED (32768)
#define LR_VGACOLOR (128)
#define LSFW_LOCK (1)
#define LSFW_UNLOCK (2)
#define LTGRAY_BRUSH (1)
#define LTP_PC_SMT (1)
#define LUA_TOKEN (4)
#define LWA_ALPHA (2)
#define LWA_COLORKEY (1)
#define LWSTDAPIV_(type) EXTERN_C DECLSPEC_IMPORT type STDAPIVCALLTYPE
#define LZERROR_BADINHANDLE (-1)
#define LZERROR_BADOUTHANDLE (-2)
#define LZERROR_BADVALUE (-7)
#define LZERROR_GLOBALLOC (-5)
#define LZERROR_GLOBLOCK (-6)
#define LZERROR_READ (-3)
#define LZERROR_UNKNOWNALG (-8)
#define LZERROR_WRITE (-4)
#define LZOpenFile __MINGW_NAME_AW ( LZOpenFile )
#define LimitEmsPages(dw) 
#define LoadAccelerators __MINGW_NAME_AW ( LoadAccelerators )
#define LoadBitmap __MINGW_NAME_AW ( LoadBitmap )
#define LoadCursor __MINGW_NAME_AW ( LoadCursor )
#define LoadCursorFromFile __MINGW_NAME_AW ( LoadCursorFromFile )
#define LoadFence _mm_lfence
#define LoadIcon __MINGW_NAME_AW ( LoadIcon )
#define LoadImage __MINGW_NAME_AW ( LoadImage )
#define LoadKeyboardLayout __MINGW_NAME_AW ( LoadKeyboardLayout )
#define LoadLibrary __MINGW_NAME_AW ( LoadLibrary )
#define LoadLibraryEx __MINGW_NAME_AW ( LoadLibraryEx )
#define LoadMenu __MINGW_NAME_AW ( LoadMenu )
#define LoadMenuIndirect __MINGW_NAME_AW ( LoadMenuIndirect )
#define LoadString __MINGW_NAME_AW ( LoadString )
#define LocalDiscard(h) LocalReAlloc ( ( h ) , 0 , LMEM_MOVEABLE )
#define LockSegment(w) GlobalFix ( ( HANDLE ) ( w ) )
#define LogonUser __MINGW_NAME_AW ( LogonUser )
#define LogonUserEx __MINGW_NAME_AW ( LogonUserEx )
#define LookupAccountName __MINGW_NAME_AW ( LookupAccountName )
#define LookupAccountNameLocal(n, s, cs, d, cd, u) __MINGW_NAME_AW ( LookupAccountName ) ( NULL , n , s , cs , d , cd , u )
#define LookupAccountNameLocalA(n, s, cs, d, cd, u) LookupAccountNameA ( NULL , n , s , cs , d , cd , u )
#define LookupAccountNameLocalW(n, s, cs, d, cd, u) LookupAccountNameW ( NULL , n , s , cs , d , cd , u )
#define LookupAccountSid __MINGW_NAME_AW ( LookupAccountSid )
#define LookupAccountSidLocal(s, n, cn, d, cd, u) __MINGW_NAME_AW ( LookupAccountSid ) ( NULL , s , n , cn , d , cd , u )
#define LookupAccountSidLocalA(s, n, cn, d, cd, u) LookupAccountSidA ( NULL , s , n , cn , d , cd , u )
#define LookupAccountSidLocalW(s, n, cn, d, cd, u) LookupAccountSidW ( NULL , s , n , cn , d , cd , u )
#define LookupPrivilegeDisplayName __MINGW_NAME_AW ( LookupPrivilegeDisplayName )
#define LookupPrivilegeName __MINGW_NAME_AW ( LookupPrivilegeName )
#define LookupPrivilegeValue __MINGW_NAME_AW ( LookupPrivilegeValue )
#define MAC_CHARSET (77)
#define MAILSLOT_NO_MESSAGE (-1)
#define MAILSLOT_WAIT_FOREVER (-1)
#define MAKEFOURCC(ch0, ch1, ch2, ch3) ( ( DWORD ) ( BYTE ) ( ch0 ) | ( ( DWORD ) ( BYTE ) ( ch1 ) << 8 ) | ( ( DWORD ) ( BYTE ) ( ch2 ) << 16 ) | ( ( DWORD ) ( BYTE ) ( ch3 ) << 24 ) )
#define MAKEINTATOM(i) ( LPTSTR ) ( ( ULONG_PTR ) ( ( WORD ) ( i ) ) )
#define MAKEINTRESOURCE __MINGW_NAME_AW ( MAKEINTRESOURCE )
#define MAKEINTRESOURCEA(i) ( ( LPSTR ) ( ( ULONG_PTR ) ( ( WORD ) ( i ) ) ) )
#define MAKEINTRESOURCEW(i) ( ( LPWSTR ) ( ( ULONG_PTR ) ( ( WORD ) ( i ) ) ) )
#define MAKELANGID(p, s) ( ( ( ( WORD ) ( s ) ) << 10 ) | ( WORD ) ( p ) )
#define MAKELCID(lgid, srtid) ( ( DWORD ) ( ( ( ( DWORD ) ( ( WORD ) ( srtid ) ) ) << 16 ) | ( ( DWORD ) ( ( WORD ) ( lgid ) ) ) ) )
#define MAKELONG(a, b) ( ( LONG ) ( ( ( WORD ) ( ( ( DWORD_PTR ) ( a ) ) & 0xffff ) ) | ( ( DWORD ) ( ( WORD ) ( ( ( DWORD_PTR ) ( b ) ) & 0xffff ) ) ) << 16 ) )
#define MAKELPARAM(l, h) ( ( LPARAM ) ( DWORD ) MAKELONG ( l , h ) )
#define MAKELRESULT(l, h) ( ( LRESULT ) ( DWORD ) MAKELONG ( l , h ) )
#define MAKEPOINTS(l) ( * ( ( POINTS * ) & ( l ) ) )
#define MAKEROP4(fore, back) ( DWORD ) ( ( ( ( back ) << 8 ) & 0xFF000000 ) | ( fore ) )
#define MAKESORTLCID(lgid, srtid, ver) ( ( DWORD ) ( ( MAKELCID ( lgid , srtid ) ) | ( ( ( DWORD ) ( ( WORD ) ( ver ) ) ) << 20 ) ) )
#define MAKEWORD(a, b) ( ( WORD ) ( ( ( BYTE ) ( ( ( DWORD_PTR ) ( a ) ) & 0xff ) ) | ( ( WORD ) ( ( BYTE ) ( ( ( DWORD_PTR ) ( b ) ) & 0xff ) ) ) << 8 ) )
#define MAKEWPARAM(l, h) ( ( WPARAM ) ( DWORD ) MAKELONG ( l , h ) )
#define MAKE_HRESULT(sev, fac, code) ( ( HRESULT ) ( ( ( unsigned __LONG32 ) ( sev ) << 31 ) | ( ( unsigned __LONG32 ) ( fac ) << 16 ) | ( ( unsigned __LONG32 ) ( code ) ) ) )
#define MAKE_SCODE(sev, fac, code) ( ( SCODE ) ( ( ( unsigned __LONG32 ) ( sev ) << 31 ) | ( ( unsigned __LONG32 ) ( fac ) << 16 ) | ( ( unsigned __LONG32 ) ( code ) ) ) )
#define MANDATORY_LEVEL_TO_MANDATORY_RID(IL) ( IL * 0x1000 )
#define MAPVK_VK_TO_CHAR (2)
#define MAPVK_VK_TO_VSC (0)
#define MAPVK_VSC_TO_VK (1)
#define MAPVK_VSC_TO_VK_EX (3)
#define MAP_COMPOSITE (64)
#define MAP_EXPAND_LIGATURES (8192)
#define MAP_FOLDCZONE (16)
#define MAP_FOLDDIGITS (128)
#define MAP_PRECOMPOSED (32)
#define MARKPARITY (3)
#define MARK_HANDLE_NOT_REALTIME (64)
#define MARK_HANDLE_NOT_TXF_SYSTEM_LOG (8)
#define MARK_HANDLE_PROTECT_CLUSTERS (1)
#define MARK_HANDLE_REALTIME (32)
#define MARK_HANDLE_TXF_SYSTEM_LOG (4)
#define MARSHAL_E_FIRST __MSABI_LONG ( 0x80040120 )
#define MARSHAL_E_LAST __MSABI_LONG ( 0x8004012F )
#define MARSHAL_S_FIRST __MSABI_LONG ( 0x00040120 )
#define MARSHAL_S_LAST __MSABI_LONG ( 0x0004012F )
#define MAXBYTE (255)
#define MAXCHAR (127)
#define MAXDWORD (4294967295u)
#define MAXERRORLENGTH (256)
#define MAXGETHOSTSTRUCT (1024)
#define MAXHALF_PTR ( ( HALF_PTR ) ( MAXUHALF_PTR >> 1 ) )
#define MAXIMUM_ALLOWED (33554432l)
#define MAXIMUM_ATTR_STRING_LENGTH (32)
#define MAXIMUM_ENCRYPTION_VALUE (4)
#define MAXIMUM_PROCESSORS MAXIMUM_PROC_PER_GROUP
#define MAXIMUM_PROC_PER_GROUP (64)
#define MAXIMUM_REPARSE_DATA_BUFFER_SIZE (16384)
#define MAXIMUM_RESERVED_MANIFEST_RESOURCE_ID MAKEINTRESOURCE ( 16 )
#define MAXIMUM_SMARTCARD_READERS (10)
#define MAXIMUM_SUSPEND_COUNT MAXCHAR
#define MAXIMUM_WAIT_OBJECTS (64)
#define MAXIMUM_XSTATE_FEATURES (64)
#define MAXINTATOM (49152)
#define MAXINT_PTR ( ( INT_PTR ) ( MAXUINT_PTR >> 1 ) )
#define MAXLOGICALLOGNAMESIZE (256)
#define MAXLONG (2147483647)
#define MAXLONGLONG (9223372036854775807ll)
#define MAXLONG_PTR ( ( LONG_PTR ) ( MAXULONG_PTR >> 1 ) )
#define MAXPNAMELEN (32)
#define MAXPROPPAGES (100)
#define MAXSHORT (32767)
#define MAXSTRETCHBLTMODE (4)
#define MAXUHALF_PTR ( ( UHALF_PTR ) ~ 0 )
#define MAXUIDLEN (64)
#define MAXUINT_PTR ( ~ ( ( UINT_PTR ) 0 ) )
#define MAXULONG_PTR ( ~ ( ( ULONG_PTR ) 0 ) )
#define MAXWORD (65535)
#define MAX_ACL_REVISION ACL_REVISION4
#define MAX_COMPUTERNAME_LENGTH (15)
#define MAX_DEFAULTCHAR (2)
#define MAX_HW_COUNTERS (16)
#define MAX_JOYSTICKOEMVXDNAME (260)
#define MAX_LANA (254)
#define MAX_LEADBYTES (12)
#define MAX_MONITORS (4)
#define MAX_NATURAL_ALIGNMENT sizeof ( ULONGLONG )
#define MAX_PATH (260)
#define MAX_PERF_OBJECTS_IN_QUERY_FUNCTION (64l)
#define MAX_PRIORITY (99)
#define MAX_PROFILE_LEN (80)
#define MAX_RESOURCEMANAGER_DESCRIPTION_LENGTH (64)
#define MAX_SHUTDOWN_TIMEOUT (315360000)
#define MAX_SID_SIZE (256)
#define MAX_STR_BLOCKREASON (256)
#define MAX_SUPPORTED_OS_NUM (4)
#define MAX_TRANSACTION_DESCRIPTION_LENGTH (64)
#define MAX_VOLUME_ID_SIZE (36)
#define MAX_VOLUME_TEMPLATE_SIZE (40)
#define MA_ACTIVATE (1)
#define MA_ACTIVATEANDEAT (2)
#define MA_NOACTIVATE (3)
#define MA_NOACTIVATEANDEAT (4)
#define MB_ABORTRETRYIGNORE __MSABI_LONG ( 0x00000002 )
#define MB_APPLMODAL __MSABI_LONG ( 0x00000000 )
#define MB_CANCELTRYCONTINUE __MSABI_LONG ( 0x00000006 )
#define MB_COMPOSITE (2)
#define MB_DEFAULT_DESKTOP_ONLY __MSABI_LONG ( 0x00020000 )
#define MB_DEFBUTTON1 __MSABI_LONG ( 0x00000000 )
#define MB_DEFBUTTON2 __MSABI_LONG ( 0x00000100 )
#define MB_DEFBUTTON3 __MSABI_LONG ( 0x00000200 )
#define MB_DEFBUTTON4 __MSABI_LONG ( 0x00000300 )
#define MB_DEFMASK __MSABI_LONG ( 0x00000F00 )
#define MB_ERR_INVALID_CHARS (8)
#define MB_HELP __MSABI_LONG ( 0x00004000 )
#define MB_ICONASTERISK __MSABI_LONG ( 0x00000040 )
#define MB_ICONERROR MB_ICONHAND
#define MB_ICONEXCLAMATION __MSABI_LONG ( 0x00000030 )
#define MB_ICONHAND __MSABI_LONG ( 0x00000010 )
#define MB_ICONINFORMATION MB_ICONASTERISK
#define MB_ICONMASK __MSABI_LONG ( 0x000000F0 )
#define MB_ICONQUESTION __MSABI_LONG ( 0x00000020 )
#define MB_ICONSTOP MB_ICONHAND
#define MB_ICONWARNING MB_ICONEXCLAMATION
#define MB_MISCMASK __MSABI_LONG ( 0x0000C000 )
#define MB_MODEMASK __MSABI_LONG ( 0x00003000 )
#define MB_NOFOCUS __MSABI_LONG ( 0x00008000 )
#define MB_OK __MSABI_LONG ( 0x00000000 )
#define MB_OKCANCEL __MSABI_LONG ( 0x00000001 )
#define MB_PRECOMPOSED (1)
#define MB_RETRYCANCEL __MSABI_LONG ( 0x00000005 )
#define MB_RIGHT __MSABI_LONG ( 0x00080000 )
#define MB_RTLREADING __MSABI_LONG ( 0x00100000 )
#define MB_SERVICE_NOTIFICATION __MSABI_LONG ( 0x00200000 )
#define MB_SERVICE_NOTIFICATION_NT3X __MSABI_LONG ( 0x00040000 )
#define MB_SETFOREGROUND __MSABI_LONG ( 0x00010000 )
#define MB_SYSTEMMODAL __MSABI_LONG ( 0x00001000 )
#define MB_TASKMODAL __MSABI_LONG ( 0x00002000 )
#define MB_TOPMOST __MSABI_LONG ( 0x00040000 )
#define MB_TYPEMASK __MSABI_LONG ( 0x0000000F )
#define MB_USEGLYPHCHARS (4)
#define MB_USERICON __MSABI_LONG ( 0x00000080 )
#define MB_YESNO __MSABI_LONG ( 0x00000004 )
#define MB_YESNOCANCEL __MSABI_LONG ( 0x00000003 )
#define MCIERR_BAD_CONSTANT (290)
#define MCIERR_BAD_INTEGER (270)
#define MCIERR_BAD_TIME_FORMAT (293)
#define MCIERR_BASE (256)
#define MCIERR_CANNOT_LOAD_DRIVER (266)
#define MCIERR_CANNOT_USE_ALL (279)
#define MCIERR_CREATEWINDOW (347)
#define MCIERR_CUSTOM_DRIVER_BASE (512)
#define MCIERR_DEVICE_LENGTH (310)
#define MCIERR_DEVICE_LOCKED (288)
#define MCIERR_DEVICE_NOT_INSTALLED (306)
#define MCIERR_DEVICE_NOT_READY (276)
#define MCIERR_DEVICE_OPEN (265)
#define MCIERR_DEVICE_ORD_LENGTH (311)
#define MCIERR_DEVICE_TYPE_REQUIRED (287)
#define MCIERR_DRIVER (278)
#define MCIERR_DRIVER_INTERNAL (272)
#define MCIERR_DUPLICATE_ALIAS (289)
#define MCIERR_DUPLICATE_FLAGS (295)
#define MCIERR_EXTENSION_NOT_FOUND (281)
#define MCIERR_EXTRA_CHARACTERS (305)
#define MCIERR_FILENAME_REQUIRED (304)
#define MCIERR_FILE_NOT_FOUND (275)
#define MCIERR_FILE_NOT_SAVED (286)
#define MCIERR_FILE_READ (348)
#define MCIERR_FILE_WRITE (349)
#define MCIERR_FLAGS_NOT_COMPATIBLE (284)
#define MCIERR_GET_CD (307)
#define MCIERR_HARDWARE (262)
#define MCIERR_ILLEGAL_FOR_AUTO_OPEN (303)
#define MCIERR_INTERNAL (277)
#define MCIERR_INVALID_DEVICE_ID (257)
#define MCIERR_INVALID_DEVICE_NAME (263)
#define MCIERR_INVALID_FILE (296)
#define MCIERR_MISSING_COMMAND_STRING (267)
#define MCIERR_MISSING_DEVICE_NAME (292)
#define MCIERR_MISSING_PARAMETER (273)
#define MCIERR_MISSING_STRING_ARGUMENT (269)
#define MCIERR_MULTIPLE (280)
#define MCIERR_MUST_USE_SHAREABLE (291)
#define MCIERR_NEW_REQUIRES_ALIAS (299)
#define MCIERR_NONAPPLICABLE_FUNCTION (302)
#define MCIERR_NOTIFY_ON_AUTO_OPEN (300)
#define MCIERR_NO_CLOSING_QUOTE (294)
#define MCIERR_NO_ELEMENT_ALLOWED (301)
#define MCIERR_NO_IDENTITY (350)
#define MCIERR_NO_INTEGER (312)
#define MCIERR_NO_WINDOW (346)
#define MCIERR_NULL_PARAMETER_BLOCK (297)
#define MCIERR_OUTOFRANGE (282)
#define MCIERR_OUT_OF_MEMORY (264)
#define MCIERR_PARAM_OVERFLOW (268)
#define MCIERR_PARSER_INTERNAL (271)
#define MCIERR_SEQ_DIV_INCOMPATIBLE (336)
#define MCIERR_SEQ_NOMIDIPRESENT (343)
#define MCIERR_SEQ_PORTUNSPECIFIED (342)
#define MCIERR_SEQ_PORT_INUSE (337)
#define MCIERR_SEQ_PORT_MAPNODEVICE (339)
#define MCIERR_SEQ_PORT_MISCERROR (340)
#define MCIERR_SEQ_PORT_NONEXISTENT (338)
#define MCIERR_SEQ_TIMER (341)
#define MCIERR_SET_CD (308)
#define MCIERR_SET_DRIVE (309)
#define MCIERR_UNNAMED_RESOURCE (298)
#define MCIERR_UNRECOGNIZED_COMMAND (261)
#define MCIERR_UNRECOGNIZED_KEYWORD (259)
#define MCIERR_UNSUPPORTED_FUNCTION (274)
#define MCIERR_WAVE_INPUTSINUSE (322)
#define MCIERR_WAVE_INPUTSUNSUITABLE (328)
#define MCIERR_WAVE_INPUTUNSPECIFIED (325)
#define MCIERR_WAVE_OUTPUTSINUSE (320)
#define MCIERR_WAVE_OUTPUTSUNSUITABLE (326)
#define MCIERR_WAVE_OUTPUTUNSPECIFIED (324)
#define MCIERR_WAVE_SETINPUTINUSE (323)
#define MCIERR_WAVE_SETINPUTUNSUITABLE (329)
#define MCIERR_WAVE_SETOUTPUTINUSE (321)
#define MCIERR_WAVE_SETOUTPUTUNSUITABLE (327)
#define MCI_ALL_DEVICE_ID (-1)
#define MCI_ANIM_GETDEVCAPS_CAN_REVERSE __MSABI_LONG ( 0x00004001 )
#define MCI_ANIM_GETDEVCAPS_CAN_STRETCH __MSABI_LONG ( 0x00004007 )
#define MCI_ANIM_GETDEVCAPS_FAST_RATE __MSABI_LONG ( 0x00004002 )
#define MCI_ANIM_GETDEVCAPS_MAX_WINDOWS __MSABI_LONG ( 0x00004008 )
#define MCI_ANIM_GETDEVCAPS_NORMAL_RATE __MSABI_LONG ( 0x00004004 )
#define MCI_ANIM_GETDEVCAPS_PALETTES __MSABI_LONG ( 0x00004006 )
#define MCI_ANIM_GETDEVCAPS_SLOW_RATE __MSABI_LONG ( 0x00004003 )
#define MCI_ANIM_INFO_TEXT __MSABI_LONG ( 0x00010000 )
#define MCI_ANIM_OPEN_NOSTATIC __MSABI_LONG ( 0x00040000 )
#define MCI_ANIM_OPEN_PARENT __MSABI_LONG ( 0x00020000 )
#define MCI_ANIM_OPEN_WS __MSABI_LONG ( 0x00010000 )
#define MCI_ANIM_PLAY_FAST __MSABI_LONG ( 0x00040000 )
#define MCI_ANIM_PLAY_REVERSE __MSABI_LONG ( 0x00020000 )
#define MCI_ANIM_PLAY_SCAN __MSABI_LONG ( 0x00100000 )
#define MCI_ANIM_PLAY_SLOW __MSABI_LONG ( 0x00080000 )
#define MCI_ANIM_PLAY_SPEED __MSABI_LONG ( 0x00010000 )
#define MCI_ANIM_PUT_DESTINATION __MSABI_LONG ( 0x00040000 )
#define MCI_ANIM_PUT_SOURCE __MSABI_LONG ( 0x00020000 )
#define MCI_ANIM_REALIZE_BKGD __MSABI_LONG ( 0x00020000 )
#define MCI_ANIM_REALIZE_NORM __MSABI_LONG ( 0x00010000 )
#define MCI_ANIM_RECT __MSABI_LONG ( 0x00010000 )
#define MCI_ANIM_STATUS_FORWARD __MSABI_LONG ( 0x00004002 )
#define MCI_ANIM_STATUS_HPAL __MSABI_LONG ( 0x00004004 )
#define MCI_ANIM_STATUS_HWND __MSABI_LONG ( 0x00004003 )
#define MCI_ANIM_STATUS_SPEED __MSABI_LONG ( 0x00004001 )
#define MCI_ANIM_STATUS_STRETCH __MSABI_LONG ( 0x00004005 )
#define MCI_ANIM_STEP_FRAMES __MSABI_LONG ( 0x00020000 )
#define MCI_ANIM_STEP_REVERSE __MSABI_LONG ( 0x00010000 )
#define MCI_ANIM_UPDATE_HDC __MSABI_LONG ( 0x00020000 )
#define MCI_ANIM_WHERE_DESTINATION __MSABI_LONG ( 0x00040000 )
#define MCI_ANIM_WHERE_SOURCE __MSABI_LONG ( 0x00020000 )
#define MCI_ANIM_WINDOW_DEFAULT __MSABI_LONG ( 0x00000000 )
#define MCI_ANIM_WINDOW_DISABLE_STRETCH __MSABI_LONG ( 0x00200000 )
#define MCI_ANIM_WINDOW_ENABLE_STRETCH __MSABI_LONG ( 0x00100000 )
#define MCI_ANIM_WINDOW_HWND __MSABI_LONG ( 0x00010000 )
#define MCI_ANIM_WINDOW_STATE __MSABI_LONG ( 0x00040000 )
#define MCI_ANIM_WINDOW_TEXT __MSABI_LONG ( 0x00080000 )
#define MCI_BREAK (2065)
#define MCI_BREAK_HWND __MSABI_LONG ( 0x00000200 )
#define MCI_BREAK_KEY __MSABI_LONG ( 0x00000100 )
#define MCI_BREAK_OFF __MSABI_LONG ( 0x00000400 )
#define MCI_CDA_STATUS_TYPE_TRACK __MSABI_LONG ( 0x00004001 )
#define MCI_CDA_TRACK_AUDIO (1088)
#define MCI_CDA_TRACK_OTHER (1089)
#define MCI_CD_OFFSET (1088)
#define MCI_CLOSE (2052)
#define MCI_COPY (2130)
#define MCI_CUE (2096)
#define MCI_CUT (2129)
#define MCI_DELETE (2134)
#define MCI_DEVTYPE_ANIMATION (519)
#define MCI_DEVTYPE_CD_AUDIO (516)
#define MCI_DEVTYPE_DAT (517)
#define MCI_DEVTYPE_DIGITAL_VIDEO (520)
#define MCI_DEVTYPE_FIRST MCI_DEVTYPE_VCR
#define MCI_DEVTYPE_FIRST_USER (4096)
#define MCI_DEVTYPE_LAST MCI_DEVTYPE_SEQUENCER
#define MCI_DEVTYPE_OTHER (521)
#define MCI_DEVTYPE_OVERLAY (515)
#define MCI_DEVTYPE_SCANNER (518)
#define MCI_DEVTYPE_SEQUENCER (523)
#define MCI_DEVTYPE_VCR (513)
#define MCI_DEVTYPE_VIDEODISC (514)
#define MCI_DEVTYPE_WAVEFORM_AUDIO (522)
#define MCI_ESCAPE (2053)
#define MCI_FIRST DRV_MCI_FIRST
#define MCI_FORMAT_BYTES (8)
#define MCI_FORMAT_FRAMES (3)
#define MCI_FORMAT_HMS (1)
#define MCI_FORMAT_MILLISECONDS (0)
#define MCI_FORMAT_MSF (2)
#define MCI_FORMAT_SAMPLES (9)
#define MCI_FORMAT_SMPTE_24 (4)
#define MCI_FORMAT_SMPTE_25 (5)
#define MCI_FORMAT_SMPTE_30 (6)
#define MCI_FORMAT_SMPTE_30DROP (7)
#define MCI_FORMAT_TMSF (10)
#define MCI_FREEZE (2116)
#define MCI_FROM __MSABI_LONG ( 0x00000004 )
#define MCI_GETDEVCAPS (2059)
#define MCI_GETDEVCAPS_CAN_EJECT __MSABI_LONG ( 0x00000007 )
#define MCI_GETDEVCAPS_CAN_PLAY __MSABI_LONG ( 0x00000008 )
#define MCI_GETDEVCAPS_CAN_RECORD __MSABI_LONG ( 0x00000001 )
#define MCI_GETDEVCAPS_CAN_SAVE __MSABI_LONG ( 0x00000009 )
#define MCI_GETDEVCAPS_COMPOUND_DEVICE __MSABI_LONG ( 0x00000006 )
#define MCI_GETDEVCAPS_DEVICE_TYPE __MSABI_LONG ( 0x00000004 )
#define MCI_GETDEVCAPS_HAS_AUDIO __MSABI_LONG ( 0x00000002 )
#define MCI_GETDEVCAPS_HAS_VIDEO __MSABI_LONG ( 0x00000003 )
#define MCI_GETDEVCAPS_ITEM __MSABI_LONG ( 0x00000100 )
#define MCI_GETDEVCAPS_USES_FILES __MSABI_LONG ( 0x00000005 )
#define MCI_HMS_HOUR(hms) ( ( BYTE ) ( hms ) )
#define MCI_HMS_MINUTE(hms) ( ( BYTE ) ( ( ( WORD ) ( hms ) ) >> 8 ) )
#define MCI_HMS_SECOND(hms) ( ( BYTE ) ( ( hms ) >> 16 ) )
#define MCI_INFO (2058)
#define MCI_INFO_COPYRIGHT __MSABI_LONG ( 0x00002000 )
#define MCI_INFO_FILE __MSABI_LONG ( 0x00000200 )
#define MCI_INFO_MEDIA_IDENTITY __MSABI_LONG ( 0x00000800 )
#define MCI_INFO_MEDIA_UPC __MSABI_LONG ( 0x00000400 )
#define MCI_INFO_NAME __MSABI_LONG ( 0x00001000 )
#define MCI_INFO_PRODUCT __MSABI_LONG ( 0x00000100 )
#define MCI_LAST (4095)
#define MCI_LOAD (2128)
#define MCI_LOAD_FILE __MSABI_LONG ( 0x00000100 )
#define MCI_MAKE_HMS(h, m, s) ( ( DWORD ) ( ( ( BYTE ) ( h ) | ( ( WORD ) ( m ) << 8 ) ) | ( ( ( DWORD ) ( BYTE ) ( s ) ) << 16 ) ) )
#define MCI_MAKE_MSF(m, s, f) ( ( DWORD ) ( ( ( BYTE ) ( m ) | ( ( WORD ) ( s ) << 8 ) ) | ( ( ( DWORD ) ( BYTE ) ( f ) ) << 16 ) ) )
#define MCI_MAKE_TMSF(t, m, s, f) ( ( DWORD ) ( ( ( BYTE ) ( t ) | ( ( WORD ) ( m ) << 8 ) ) | ( ( ( DWORD ) ( BYTE ) ( s ) | ( ( WORD ) ( f ) << 8 ) ) << 16 ) ) )
#define MCI_MODE_NOT_READY (524)
#define MCI_MODE_OPEN (530)
#define MCI_MODE_PAUSE (529)
#define MCI_MODE_PLAY (526)
#define MCI_MODE_RECORD (527)
#define MCI_MODE_SEEK (528)
#define MCI_MODE_STOP (525)
#define MCI_MSF_FRAME(msf) ( ( BYTE ) ( ( msf ) >> 16 ) )
#define MCI_MSF_MINUTE(msf) ( ( BYTE ) ( msf ) )
#define MCI_MSF_SECOND(msf) ( ( BYTE ) ( ( ( WORD ) ( msf ) ) >> 8 ) )
#define MCI_NOTIFY __MSABI_LONG ( 0x00000001 )
#define MCI_NOTIFY_ABORTED (4)
#define MCI_NOTIFY_FAILURE (8)
#define MCI_NOTIFY_SUCCESSFUL (1)
#define MCI_NOTIFY_SUPERSEDED (2)
#define MCI_OPEN (2051)
#define MCI_OPEN_ALIAS __MSABI_LONG ( 0x00000400 )
#define MCI_OPEN_ELEMENT __MSABI_LONG ( 0x00000200 )
#define MCI_OPEN_ELEMENT_ID __MSABI_LONG ( 0x00000800 )
#define MCI_OPEN_SHAREABLE __MSABI_LONG ( 0x00000100 )
#define MCI_OPEN_TYPE __MSABI_LONG ( 0x00002000 )
#define MCI_OPEN_TYPE_ID __MSABI_LONG ( 0x00001000 )
#define MCI_OVLY_GETDEVCAPS_CAN_FREEZE __MSABI_LONG ( 0x00004002 )
#define MCI_OVLY_GETDEVCAPS_CAN_STRETCH __MSABI_LONG ( 0x00004001 )
#define MCI_OVLY_GETDEVCAPS_MAX_WINDOWS __MSABI_LONG ( 0x00004003 )
#define MCI_OVLY_INFO_TEXT __MSABI_LONG ( 0x00010000 )
#define MCI_OVLY_OPEN_PARENT __MSABI_LONG ( 0x00020000 )
#define MCI_OVLY_OPEN_WS __MSABI_LONG ( 0x00010000 )
#define MCI_OVLY_PUT_DESTINATION __MSABI_LONG ( 0x00040000 )
#define MCI_OVLY_PUT_FRAME __MSABI_LONG ( 0x00080000 )
#define MCI_OVLY_PUT_SOURCE __MSABI_LONG ( 0x00020000 )
#define MCI_OVLY_PUT_VIDEO __MSABI_LONG ( 0x00100000 )
#define MCI_OVLY_RECT __MSABI_LONG ( 0x00010000 )
#define MCI_OVLY_STATUS_HWND __MSABI_LONG ( 0x00004001 )
#define MCI_OVLY_STATUS_STRETCH __MSABI_LONG ( 0x00004002 )
#define MCI_OVLY_WHERE_DESTINATION __MSABI_LONG ( 0x00040000 )
#define MCI_OVLY_WHERE_FRAME __MSABI_LONG ( 0x00080000 )
#define MCI_OVLY_WHERE_SOURCE __MSABI_LONG ( 0x00020000 )
#define MCI_OVLY_WHERE_VIDEO __MSABI_LONG ( 0x00100000 )
#define MCI_OVLY_WINDOW_DEFAULT __MSABI_LONG ( 0x00000000 )
#define MCI_OVLY_WINDOW_DISABLE_STRETCH __MSABI_LONG ( 0x00200000 )
#define MCI_OVLY_WINDOW_ENABLE_STRETCH __MSABI_LONG ( 0x00100000 )
#define MCI_OVLY_WINDOW_HWND __MSABI_LONG ( 0x00010000 )
#define MCI_OVLY_WINDOW_STATE __MSABI_LONG ( 0x00040000 )
#define MCI_OVLY_WINDOW_TEXT __MSABI_LONG ( 0x00080000 )
#define MCI_PASTE (2131)
#define MCI_PAUSE (2057)
#define MCI_PLAY (2054)
#define MCI_PUT (2114)
#define MCI_REALIZE (2112)
#define MCI_RECORD (2063)
#define MCI_RECORD_INSERT __MSABI_LONG ( 0x00000100 )
#define MCI_RECORD_OVERWRITE __MSABI_LONG ( 0x00000200 )
#define MCI_RESUME (2133)
#define MCI_SAVE (2067)
#define MCI_SAVE_FILE __MSABI_LONG ( 0x00000100 )
#define MCI_SEEK (2055)
#define MCI_SEEK_TO_END __MSABI_LONG ( 0x00000200 )
#define MCI_SEEK_TO_START __MSABI_LONG ( 0x00000100 )
#define MCI_SEQ_DIV_PPQN (1216)
#define MCI_SEQ_DIV_SMPTE_24 (1217)
#define MCI_SEQ_DIV_SMPTE_25 (1218)
#define MCI_SEQ_DIV_SMPTE_30 (1220)
#define MCI_SEQ_DIV_SMPTE_30DROP (1219)
#define MCI_SEQ_FILE (16386)
#define MCI_SEQ_FORMAT_SONGPTR (16385)
#define MCI_SEQ_MAPPER (65535)
#define MCI_SEQ_MIDI (16387)
#define MCI_SEQ_NONE (65533)
#define MCI_SEQ_OFFSET (1216)
#define MCI_SEQ_SET_MASTER __MSABI_LONG ( 0x00080000 )
#define MCI_SEQ_SET_OFFSET __MSABI_LONG ( 0x01000000 )
#define MCI_SEQ_SET_PORT __MSABI_LONG ( 0x00020000 )
#define MCI_SEQ_SET_SLAVE __MSABI_LONG ( 0x00040000 )
#define MCI_SEQ_SET_TEMPO __MSABI_LONG ( 0x00010000 )
#define MCI_SEQ_SMPTE (16388)
#define MCI_SEQ_STATUS_COPYRIGHT __MSABI_LONG ( 0x0000400C )
#define MCI_SEQ_STATUS_DIVTYPE __MSABI_LONG ( 0x0000400A )
#define MCI_SEQ_STATUS_MASTER __MSABI_LONG ( 0x00004008 )
#define MCI_SEQ_STATUS_NAME __MSABI_LONG ( 0x0000400B )
#define MCI_SEQ_STATUS_OFFSET __MSABI_LONG ( 0x00004009 )
#define MCI_SEQ_STATUS_PORT __MSABI_LONG ( 0x00004003 )
#define MCI_SEQ_STATUS_SLAVE __MSABI_LONG ( 0x00004007 )
#define MCI_SEQ_STATUS_TEMPO __MSABI_LONG ( 0x00004002 )
#define MCI_SET (2061)
#define MCI_SET_AUDIO __MSABI_LONG ( 0x00000800 )
#define MCI_SET_AUDIO_ALL __MSABI_LONG ( 0x00000000 )
#define MCI_SET_AUDIO_LEFT __MSABI_LONG ( 0x00000001 )
#define MCI_SET_AUDIO_RIGHT __MSABI_LONG ( 0x00000002 )
#define MCI_SET_DOOR_CLOSED __MSABI_LONG ( 0x00000200 )
#define MCI_SET_DOOR_OPEN __MSABI_LONG ( 0x00000100 )
#define MCI_SET_OFF __MSABI_LONG ( 0x00004000 )
#define MCI_SET_ON __MSABI_LONG ( 0x00002000 )
#define MCI_SET_TIME_FORMAT __MSABI_LONG ( 0x00000400 )
#define MCI_SET_VIDEO __MSABI_LONG ( 0x00001000 )
#define MCI_SPIN (2060)
#define MCI_STATUS (2068)
#define MCI_STATUS_CURRENT_TRACK __MSABI_LONG ( 0x00000008 )
#define MCI_STATUS_ITEM __MSABI_LONG ( 0x00000100 )
#define MCI_STATUS_LENGTH __MSABI_LONG ( 0x00000001 )
#define MCI_STATUS_MEDIA_PRESENT __MSABI_LONG ( 0x00000005 )
#define MCI_STATUS_MODE __MSABI_LONG ( 0x00000004 )
#define MCI_STATUS_NUMBER_OF_TRACKS __MSABI_LONG ( 0x00000003 )
#define MCI_STATUS_POSITION __MSABI_LONG ( 0x00000002 )
#define MCI_STATUS_READY __MSABI_LONG ( 0x00000007 )
#define MCI_STATUS_START __MSABI_LONG ( 0x00000200 )
#define MCI_STATUS_TIME_FORMAT __MSABI_LONG ( 0x00000006 )
#define MCI_STEP (2062)
#define MCI_STOP (2056)
#define MCI_STRING_OFFSET (512)
#define MCI_SYSINFO (2064)
#define MCI_SYSINFO_INSTALLNAME __MSABI_LONG ( 0x00000800 )
#define MCI_SYSINFO_NAME __MSABI_LONG ( 0x00000400 )
#define MCI_SYSINFO_OPEN __MSABI_LONG ( 0x00000200 )
#define MCI_SYSINFO_QUANTITY __MSABI_LONG ( 0x00000100 )
#define MCI_TMSF_FRAME(tmsf) ( ( BYTE ) ( ( tmsf ) >> 24 ) )
#define MCI_TMSF_MINUTE(tmsf) ( ( BYTE ) ( ( ( WORD ) ( tmsf ) ) >> 8 ) )
#define MCI_TMSF_SECOND(tmsf) ( ( BYTE ) ( ( tmsf ) >> 16 ) )
#define MCI_TMSF_TRACK(tmsf) ( ( BYTE ) ( tmsf ) )
#define MCI_TO __MSABI_LONG ( 0x00000008 )
#define MCI_TRACK __MSABI_LONG ( 0x00000010 )
#define MCI_UNFREEZE (2117)
#define MCI_UPDATE (2132)
#define MCI_USER_MESSAGES (3072)
#define MCI_VD_ESCAPE_STRING __MSABI_LONG ( 0x00000100 )
#define MCI_VD_FORMAT_TRACK (16385)
#define MCI_VD_GETDEVCAPS_CAN_REVERSE __MSABI_LONG ( 0x00004002 )
#define MCI_VD_GETDEVCAPS_CAV __MSABI_LONG ( 0x00020000 )
#define MCI_VD_GETDEVCAPS_CLV __MSABI_LONG ( 0x00010000 )
#define MCI_VD_GETDEVCAPS_FAST_RATE __MSABI_LONG ( 0x00004003 )
#define MCI_VD_GETDEVCAPS_NORMAL_RATE __MSABI_LONG ( 0x00004005 )
#define MCI_VD_GETDEVCAPS_SLOW_RATE __MSABI_LONG ( 0x00004004 )
#define MCI_VD_MEDIA_CAV (1027)
#define MCI_VD_MEDIA_CLV (1026)
#define MCI_VD_MEDIA_OTHER (1028)
#define MCI_VD_MODE_PARK (1025)
#define MCI_VD_OFFSET (1024)
#define MCI_VD_PLAY_FAST __MSABI_LONG ( 0x00020000 )
#define MCI_VD_PLAY_REVERSE __MSABI_LONG ( 0x00010000 )
#define MCI_VD_PLAY_SCAN __MSABI_LONG ( 0x00080000 )
#define MCI_VD_PLAY_SLOW __MSABI_LONG ( 0x00100000 )
#define MCI_VD_PLAY_SPEED __MSABI_LONG ( 0x00040000 )
#define MCI_VD_SEEK_REVERSE __MSABI_LONG ( 0x00010000 )
#define MCI_VD_SPIN_DOWN __MSABI_LONG ( 0x00020000 )
#define MCI_VD_SPIN_UP __MSABI_LONG ( 0x00010000 )
#define MCI_VD_STATUS_DISC_SIZE __MSABI_LONG ( 0x00004006 )
#define MCI_VD_STATUS_FORWARD __MSABI_LONG ( 0x00004003 )
#define MCI_VD_STATUS_MEDIA_TYPE __MSABI_LONG ( 0x00004004 )
#define MCI_VD_STATUS_SIDE __MSABI_LONG ( 0x00004005 )
#define MCI_VD_STATUS_SPEED __MSABI_LONG ( 0x00004002 )
#define MCI_VD_STEP_FRAMES __MSABI_LONG ( 0x00010000 )
#define MCI_VD_STEP_REVERSE __MSABI_LONG ( 0x00020000 )
#define MCI_WAIT __MSABI_LONG ( 0x00000002 )
#define MCI_WAVE_GETDEVCAPS_INPUTS __MSABI_LONG ( 0x00004001 )
#define MCI_WAVE_GETDEVCAPS_OUTPUTS __MSABI_LONG ( 0x00004002 )
#define MCI_WAVE_INPUT __MSABI_LONG ( 0x00400000 )
#define MCI_WAVE_MAPPER (1153)
#define MCI_WAVE_OFFSET (1152)
#define MCI_WAVE_OPEN_BUFFER __MSABI_LONG ( 0x00010000 )
#define MCI_WAVE_OUTPUT __MSABI_LONG ( 0x00800000 )
#define MCI_WAVE_PCM (1152)
#define MCI_WAVE_SET_ANYINPUT __MSABI_LONG ( 0x04000000 )
#define MCI_WAVE_SET_ANYOUTPUT __MSABI_LONG ( 0x08000000 )
#define MCI_WAVE_SET_AVGBYTESPERSEC __MSABI_LONG ( 0x00080000 )
#define MCI_WAVE_SET_BITSPERSAMPLE __MSABI_LONG ( 0x00200000 )
#define MCI_WAVE_SET_BLOCKALIGN __MSABI_LONG ( 0x00100000 )
#define MCI_WAVE_SET_CHANNELS __MSABI_LONG ( 0x00020000 )
#define MCI_WAVE_SET_FORMATTAG __MSABI_LONG ( 0x00010000 )
#define MCI_WAVE_SET_SAMPLESPERSEC __MSABI_LONG ( 0x00040000 )
#define MCI_WAVE_STATUS_AVGBYTESPERSEC __MSABI_LONG ( 0x00004004 )
#define MCI_WAVE_STATUS_BITSPERSAMPLE __MSABI_LONG ( 0x00004006 )
#define MCI_WAVE_STATUS_BLOCKALIGN __MSABI_LONG ( 0x00004005 )
#define MCI_WAVE_STATUS_CHANNELS __MSABI_LONG ( 0x00004002 )
#define MCI_WAVE_STATUS_FORMATTAG __MSABI_LONG ( 0x00004001 )
#define MCI_WAVE_STATUS_LEVEL __MSABI_LONG ( 0x00004007 )
#define MCI_WAVE_STATUS_SAMPLESPERSEC __MSABI_LONG ( 0x00004003 )
#define MCI_WHERE (2115)
#define MCI_WINDOW (2113)
#define MDIS_ALLCHILDSTYLES (1)
#define MDITILE_HORIZONTAL (1)
#define MDITILE_SKIPDISABLED (2)
#define MDITILE_VERTICAL (0)
#define MDITILE_ZORDER (4)
#define MDMSPKRFLAG_CALLSETUP (8)
#define MDMSPKRFLAG_DIAL (2)
#define MDMSPKRFLAG_OFF (1)
#define MDMSPKRFLAG_ON (4)
#define MDMSPKR_CALLSETUP (3)
#define MDMSPKR_DIAL (1)
#define MDMSPKR_OFF (0)
#define MDMSPKR_ON (2)
#define MDMVOLFLAG_HIGH (4)
#define MDMVOLFLAG_LOW (1)
#define MDMVOLFLAG_MEDIUM (2)
#define MDMVOL_HIGH (2)
#define MDMVOL_LOW (0)
#define MDMVOL_MEDIUM (1)
#define MDM_ANALOG_RLP_OFF (1)
#define MDM_ANALOG_RLP_ON (0)
#define MDM_ANALOG_V34 (2)
#define MDM_AUTO_ML_2 (2)
#define MDM_AUTO_ML_DEFAULT (0)
#define MDM_AUTO_ML_NONE (1)
#define MDM_AUTO_SPEED_DEFAULT (0)
#define MDM_BEARERMODE_ANALOG (0)
#define MDM_BEARERMODE_GSM (2)
#define MDM_BEARERMODE_ISDN (1)
#define MDM_BLIND_DIAL (512)
#define MDM_CCITT_OVERRIDE (64)
#define MDM_CELLULAR (8)
#define MDM_COMPRESSION (1)
#define MDM_DIAGNOSTICS (2048)
#define MDM_ERROR_CONTROL (2)
#define MDM_FLOWCONTROL_HARD (16)
#define MDM_FLOWCONTROL_SOFT (32)
#define MDM_FORCED_EC (4)
#define MDM_GEN_ANALOG_PROTOCOL_DATA(_rlp) ( _rlp )
#define MDM_GEN_AUTO_PROTOCOL_DATA(_speed, _ml) ( ( ( ( _speed ) << MDM_SHIFT_AUTO_SPEED ) & MDM_MASK_AUTO_SPEED ) | ( ( ( _ml ) << MDM_SHIFT_AUTO_ML ) & MDM_MASK_AUTO_ML ) )
#define MDM_GEN_EXTENDEDINFO(_bearermode, _pinfo) ( ( ( _pinfo ) & MDM_MASK_PROTOCOLINFO ) | ( ( ( _bearermode ) << MDM_SHIFT_BEARERMODE ) & MDM_MASK_BEARERMODE ) )
#define MDM_GEN_HDLCPPP_PROTOCOL_DATA(_speed, _auth, _ml) ( ( ( ( _speed ) << MDM_SHIFT_HDLCPPP_SPEED ) & MDM_MASK_HDLCPPP_SPEED ) | ( ( ( _auth ) << MDM_SHIFT_HDLCPPP_AUTH ) & MDM_MASK_HDLCPPP_AUTH ) | ( ( ( _ml ) << MDM_SHIFT_HDLCPPP_ML ) & MDM_MASK_HDLCPPP_ML ) )
#define MDM_GEN_PROTOCOLINFO(_pid, _pdata) ( ( ( ( _pid ) << MDM_SHIFT_PROTOCOLID ) & MDM_MASK_PROTOCOLID ) | ( ( ( _pdata ) << MDM_SHIFT_PROTOCOLDATA ) & MDM_MASK_PROTOCOLDATA ) )
#define MDM_GEN_V110_PROTOCOL_DATA(_data) ( ( ( _data ) << MDM_SHIFT_V110_SPEED ) & MDM_MASK_V110_SPEED )
#define MDM_GEN_V120_PROTOCOL_DATA(_speed, _ml) ( ( ( ( _speed ) << MDM_SHIFT_V120_SPEED ) & MDM_MASK_V120_SPEED ) | ( ( ( _ml ) << MDM_SHIFT_V120_ML ) & MDM_MASK_V120_ML ) )
#define MDM_GEN_X75_PROTOCOL_DATA(_data) ( ( ( _data ) << MDM_SHIFT_X75_DATA ) & MDM_MASK_X75_DATA )
#define MDM_GET_BEARERMODE(_dwOptions) ( ( ( _dwOptions ) & MDM_MASK_BEARERMODE ) >> MDM_SHIFT_BEARERMODE )
#define MDM_GET_EXTENDEDINFO(_dwOptions) ( ( _dwOptions ) & MDM_MASK_EXTENDEDINFO )
#define MDM_GET_PROTOCOLDATA(_dwOptions) ( ( ( _dwOptions ) & MDM_MASK_PROTOCOLDATA ) >> MDM_SHIFT_PROTOCOLDATA )
#define MDM_GET_PROTOCOLID(_dwOptions) ( ( ( _dwOptions ) & MDM_MASK_PROTOCOLID ) >> MDM_SHIFT_PROTOCOLID )
#define MDM_GET_PROTOCOLINFO(_dwOptions) ( ( _dwOptions ) & MDM_MASK_PROTOCOLINFO )
#define MDM_HDLCPPP_AUTH_CHAP (3)
#define MDM_HDLCPPP_AUTH_DEFAULT (0)
#define MDM_HDLCPPP_AUTH_MSCHAP (4)
#define MDM_HDLCPPP_AUTH_NONE (1)
#define MDM_HDLCPPP_AUTH_PAP (2)
#define MDM_HDLCPPP_ML_2 (2)
#define MDM_HDLCPPP_ML_DEFAULT (0)
#define MDM_HDLCPPP_ML_NONE (1)
#define MDM_HDLCPPP_SPEED_56K (2)
#define MDM_HDLCPPP_SPEED_64K (1)
#define MDM_HDLCPPP_SPEED_DEFAULT (0)
#define MDM_MASK_AUTO_ML (192)
#define MDM_MASK_AUTO_SPEED (7)
#define MDM_MASK_BEARERMODE (61440)
#define MDM_MASK_EXTENDEDINFO (268431360)
#define MDM_MASK_HDLCPPP_AUTH (56)
#define MDM_MASK_HDLCPPP_ML (192)
#define MDM_MASK_HDLCPPP_SPEED (7)
#define MDM_MASK_PROTOCOLDATA (267386880)
#define MDM_MASK_PROTOCOLID (983040)
#define MDM_MASK_PROTOCOLINFO (268369920)
#define MDM_MASK_V110_SPEED (15)
#define MDM_MASK_V120_ML (192)
#define MDM_MASK_V120_SPEED (7)
#define MDM_MASK_X75_DATA (7)
#define MDM_PIAFS_INCOMING (0)
#define MDM_PIAFS_OUTGOING (1)
#define MDM_PROTOCOLID_ANALOG (7)
#define MDM_PROTOCOLID_AUTO (6)
#define MDM_PROTOCOLID_DEFAULT (0)
#define MDM_PROTOCOLID_GPRS (8)
#define MDM_PROTOCOLID_HDLCPPP (1)
#define MDM_PROTOCOLID_PIAFS (9)
#define MDM_PROTOCOLID_V110 (4)
#define MDM_PROTOCOLID_V120 (5)
#define MDM_PROTOCOLID_V128 (2)
#define MDM_PROTOCOLID_X75 (3)
#define MDM_PROTOCOL_ANALOG_NRLP MDM_GEN_PROTOCOLINFO ( MDM_PROTOCOLID_ANALOG , MDM_GEN_ANALOG_PROTOCOL_DATA ( MDM_ANALOG_RLP_OFF ) )
#define MDM_PROTOCOL_ANALOG_RLP MDM_GEN_PROTOCOLINFO ( MDM_PROTOCOLID_ANALOG , MDM_GEN_ANALOG_PROTOCOL_DATA ( MDM_ANALOG_RLP_ON ) )
#define MDM_PROTOCOL_ANALOG_V34 MDM_GEN_PROTOCOLINFO ( MDM_PROTOCOLID_ANALOG , MDM_GEN_ANALOG_PROTOCOL_DATA ( MDM_ANALOG_V34 ) )
#define MDM_PROTOCOL_AUTO_1CH MDM_GEN_PROTOCOLINFO ( MDM_PROTOCOLID_AUTO , MDM_GEN_AUTO_PROTOCOL_DATA ( MDM_AUTO_SPEED_DEFAULT , MDM_AUTO_ML_NONE ) )
#define MDM_PROTOCOL_AUTO_2CH MDM_GEN_PROTOCOLINFO ( MDM_PROTOCOLID_AUTO , MDM_GEN_AUTO_PROTOCOL_DATA ( MDM_AUTO_SPEED_DEFAULT , MDM_AUTO_ML_2 ) )
#define MDM_PROTOCOL_GPRS MDM_GEN_PROTOCOLINFO ( MDM_PROTOCOLID_GPRS , 0 )
#define MDM_PROTOCOL_HDLCPPP_112K MDM_GEN_PROTOCOLINFO ( MDM_PROTOCOLID_HDLCPPP , MDM_GEN_HDLCPPP_PROTOCOL_DATA ( MDM_HDLCPPP_SPEED_56K , MDM_HDLCPPP_AUTH_DEFAULT , MDM_HDLCPPP_ML_2 ) )
#define MDM_PROTOCOL_HDLCPPP_112K_CHAP MDM_GEN_PROTOCOLINFO ( MDM_PROTOCOLID_HDLCPPP , MDM_GEN_HDLCPPP_PROTOCOL_DATA ( MDM_HDLCPPP_SPEED_56K , MDM_HDLCPPP_AUTH_CHAP , MDM_HDLCPPP_ML_2 ) )
#define MDM_PROTOCOL_HDLCPPP_112K_MSCHAP MDM_GEN_PROTOCOLINFO ( MDM_PROTOCOLID_HDLCPPP , MDM_GEN_HDLCPPP_PROTOCOL_DATA ( MDM_HDLCPPP_SPEED_56K , MDM_HDLCPPP_AUTH_MSCHAP , MDM_HDLCPPP_ML_2 ) )
#define MDM_PROTOCOL_HDLCPPP_112K_PAP MDM_GEN_PROTOCOLINFO ( MDM_PROTOCOLID_HDLCPPP , MDM_GEN_HDLCPPP_PROTOCOL_DATA ( MDM_HDLCPPP_SPEED_56K , MDM_HDLCPPP_AUTH_PAP , MDM_HDLCPPP_ML_2 ) )
#define MDM_PROTOCOL_HDLCPPP_128K MDM_GEN_PROTOCOLINFO ( MDM_PROTOCOLID_HDLCPPP , MDM_GEN_HDLCPPP_PROTOCOL_DATA ( MDM_HDLCPPP_SPEED_64K , MDM_HDLCPPP_AUTH_DEFAULT , MDM_HDLCPPP_ML_2 ) )
#define MDM_PROTOCOL_HDLCPPP_128K_CHAP MDM_GEN_PROTOCOLINFO ( MDM_PROTOCOLID_HDLCPPP , MDM_GEN_HDLCPPP_PROTOCOL_DATA ( MDM_HDLCPPP_SPEED_64K , MDM_HDLCPPP_AUTH_CHAP , MDM_HDLCPPP_ML_2 ) )
#define MDM_PROTOCOL_HDLCPPP_128K_MSCHAP MDM_GEN_PROTOCOLINFO ( MDM_PROTOCOLID_HDLCPPP , MDM_GEN_HDLCPPP_PROTOCOL_DATA ( MDM_HDLCPPP_SPEED_64K , MDM_HDLCPPP_AUTH_MSCHAP , MDM_HDLCPPP_ML_2 ) )
#define MDM_PROTOCOL_HDLCPPP_128K_PAP MDM_GEN_PROTOCOLINFO ( MDM_PROTOCOLID_HDLCPPP , MDM_GEN_HDLCPPP_PROTOCOL_DATA ( MDM_HDLCPPP_SPEED_64K , MDM_HDLCPPP_AUTH_PAP , MDM_HDLCPPP_ML_2 ) )
#define MDM_PROTOCOL_HDLCPPP_56K MDM_GEN_PROTOCOLINFO ( MDM_PROTOCOLID_HDLCPPP , MDM_GEN_HDLCPPP_PROTOCOL_DATA ( MDM_HDLCPPP_SPEED_56K , MDM_HDLCPPP_AUTH_DEFAULT , MDM_HDLCPPP_ML_DEFAULT ) )
#define MDM_PROTOCOL_HDLCPPP_64K MDM_GEN_PROTOCOLINFO ( MDM_PROTOCOLID_HDLCPPP , MDM_GEN_HDLCPPP_PROTOCOL_DATA ( MDM_HDLCPPP_SPEED_64K , MDM_HDLCPPP_AUTH_DEFAULT , MDM_HDLCPPP_ML_DEFAULT ) )
#define MDM_PROTOCOL_PIAFS_INCOMING MDM_GEN_PROTOCOLINFO ( MDM_PROTOCOLID_PIAFS , MDM_PIAFS_INCOMING )
#define MDM_PROTOCOL_PIAFS_OUTGOING MDM_GEN_PROTOCOLINFO ( MDM_PROTOCOLID_PIAFS , MDM_PIAFS_OUTGOING )
#define MDM_PROTOCOL_V110_12DOT0K MDM_GEN_PROTOCOLINFO ( MDM_PROTOCOLID_V110 , MDM_GEN_V110_PROTOCOL_DATA ( MDM_V110_SPEED_12DOT0K ) )
#define MDM_PROTOCOL_V110_14DOT4K MDM_GEN_PROTOCOLINFO ( MDM_PROTOCOLID_V110 , MDM_GEN_V110_PROTOCOL_DATA ( MDM_V110_SPEED_14DOT4K ) )
#define MDM_PROTOCOL_V110_19DOT2K MDM_GEN_PROTOCOLINFO ( MDM_PROTOCOLID_V110 , MDM_GEN_V110_PROTOCOL_DATA ( MDM_V110_SPEED_19DOT2K ) )
#define MDM_PROTOCOL_V110_1DOT2K MDM_GEN_PROTOCOLINFO ( MDM_PROTOCOLID_V110 , MDM_GEN_V110_PROTOCOL_DATA ( MDM_V110_SPEED_1DOT2K ) )
#define MDM_PROTOCOL_V110_28DOT8K MDM_GEN_PROTOCOLINFO ( MDM_PROTOCOLID_V110 , MDM_GEN_V110_PROTOCOL_DATA ( MDM_V110_SPEED_28DOT8K ) )
#define MDM_PROTOCOL_V110_2DOT4K MDM_GEN_PROTOCOLINFO ( MDM_PROTOCOLID_V110 , MDM_GEN_V110_PROTOCOL_DATA ( MDM_V110_SPEED_2DOT4K ) )
#define MDM_PROTOCOL_V110_38DOT4K MDM_GEN_PROTOCOLINFO ( MDM_PROTOCOLID_V110 , MDM_GEN_V110_PROTOCOL_DATA ( MDM_V110_SPEED_38DOT4K ) )
#define MDM_PROTOCOL_V110_4DOT8K MDM_GEN_PROTOCOLINFO ( MDM_PROTOCOLID_V110 , MDM_GEN_V110_PROTOCOL_DATA ( MDM_V110_SPEED_4DOT8K ) )
#define MDM_PROTOCOL_V110_57DOT6K MDM_GEN_PROTOCOLINFO ( MDM_PROTOCOLID_V110 , MDM_GEN_V110_PROTOCOL_DATA ( MDM_V110_SPEED_57DOT6K ) )
#define MDM_PROTOCOL_V110_9DOT6K MDM_GEN_PROTOCOLINFO ( MDM_PROTOCOLID_V110 , MDM_GEN_V110_PROTOCOL_DATA ( MDM_V110_SPEED_9DOT6K ) )
#define MDM_PROTOCOL_V120_112K MDM_GEN_PROTOCOLINFO ( MDM_PROTOCOLID_V120 , MDM_GEN_V120_PROTOCOL_DATA ( MDM_V120_SPEED_56K , MDM_V120_ML_2 ) )
#define MDM_PROTOCOL_V120_128K MDM_GEN_PROTOCOLINFO ( MDM_PROTOCOLID_V120 , MDM_GEN_V120_PROTOCOL_DATA ( MDM_V120_SPEED_64K , MDM_V120_ML_2 ) )
#define MDM_PROTOCOL_V120_56K MDM_GEN_PROTOCOLINFO ( MDM_PROTOCOLID_V120 , MDM_GEN_V120_PROTOCOL_DATA ( MDM_V120_SPEED_56K , MDM_V120_ML_NONE ) )
#define MDM_PROTOCOL_V120_64K MDM_GEN_PROTOCOLINFO ( MDM_PROTOCOLID_V120 , MDM_GEN_V120_PROTOCOL_DATA ( MDM_V120_SPEED_64K , MDM_V120_ML_NONE ) )
#define MDM_PROTOCOL_X75_128K MDM_GEN_PROTOCOLINFO ( MDM_PROTOCOLID_X75 , MDM_GEN_X75_PROTOCOL_DATA ( MDM_X75_DATA_128K ) )
#define MDM_PROTOCOL_X75_64K MDM_GEN_PROTOCOLINFO ( MDM_PROTOCOLID_X75 , MDM_GEN_X75_PROTOCOL_DATA ( MDM_X75_DATA_64K ) )
#define MDM_PROTOCOL_X75_BTX MDM_GEN_PROTOCOLINFO ( MDM_PROTOCOLID_X75 , MDM_GEN_X75_PROTOCOL_DATA ( MDM_X75_DATA_BTX ) )
#define MDM_PROTOCOL_X75_T_70 MDM_GEN_PROTOCOLINFO ( MDM_PROTOCOLID_X75 , MDM_GEN_X75_PROTOCOL_DATA ( MDM_X75_DATA_T_70 ) )
#define MDM_SET_BEARERMODE(_dwOptions, _bm) ( ( ( _dwOptions ) &= ~ MDM_MASK_BEARERMODE ) , ( ( _dwOptions ) |= ( ( ( _bm ) << MDM_SHIFT_BEARERMODE ) & MDM_MASK_BEARERMODE ) ) )
#define MDM_SET_EXTENDEDINFO(_dwOptions, _extinfo) ( ( ( _dwOptions ) &= ~ MDM_MASK_EXTENDEDINFO ) , ( ( _dwOptions ) |= ( ( _extinfo ) & MDM_MASK_EXTENDEDINFO ) ) )
#define MDM_SET_PROTOCOLDATA(_dwOptions, _pd) ( ( ( _dwOptions ) &= ~ MDM_MASK_PROTOCOLDATA ) , ( ( _dwOptions ) |= ( ( ( _pd ) << MDM_SHIFT_PROTOCOLDATA ) & MDM_MASK_PROTOCOLDATA ) ) )
#define MDM_SET_PROTOCOLID(_dwOptions, _prot) ( ( ( _dwOptions ) &= ~ MDM_MASK_PROTOCOLID ) , ( ( _dwOptions ) |= ( ( ( _prot ) << MDM_SHIFT_PROTOCOLID ) & MDM_MASK_PROTOCOLID ) ) )
#define MDM_SET_PROTOCOLINFO(_dwOptions, _pinfo) ( ( ( _dwOptions ) &= ~ MDM_MASK_PROTOCOLINFO ) , ( ( _dwOptions ) |= ( ( _pinfo ) & MDM_MASK_PROTOCOLINFO ) ) )
#define MDM_SHIFT_AUTO_ML (6)
#define MDM_SHIFT_AUTO_SPEED (0)
#define MDM_SHIFT_BEARERMODE (12)
#define MDM_SHIFT_EXTENDEDINFO MDM_SHIFT_BEARERMODE
#define MDM_SHIFT_HDLCPPP_AUTH (3)
#define MDM_SHIFT_HDLCPPP_ML (6)
#define MDM_SHIFT_HDLCPPP_SPEED (0)
#define MDM_SHIFT_PROTOCOLDATA (20)
#define MDM_SHIFT_PROTOCOLID (16)
#define MDM_SHIFT_PROTOCOLINFO MDM_SHIFT_PROTOCOLID
#define MDM_SHIFT_V110_SPEED (0)
#define MDM_SHIFT_V120_ML (6)
#define MDM_SHIFT_V120_SPEED (0)
#define MDM_SHIFT_X75_DATA (0)
#define MDM_SPEED_ADJUST (128)
#define MDM_TONE_DIAL (256)
#define MDM_V110_SPEED_12DOT0K (5)
#define MDM_V110_SPEED_14DOT4K (6)
#define MDM_V110_SPEED_19DOT2K (7)
#define MDM_V110_SPEED_1DOT2K (1)
#define MDM_V110_SPEED_28DOT8K (8)
#define MDM_V110_SPEED_2DOT4K (2)
#define MDM_V110_SPEED_38DOT4K (9)
#define MDM_V110_SPEED_4DOT8K (3)
#define MDM_V110_SPEED_57DOT6K (10)
#define MDM_V110_SPEED_9DOT6K (4)
#define MDM_V110_SPEED_DEFAULT (0)
#define MDM_V120_ML_2 (2)
#define MDM_V120_ML_DEFAULT (0)
#define MDM_V120_ML_NONE (1)
#define MDM_V120_SPEED_56K (2)
#define MDM_V120_SPEED_64K (1)
#define MDM_V120_SPEED_DEFAULT (0)
#define MDM_V23_OVERRIDE (1024)
#define MDM_X75_DATA_128K (2)
#define MDM_X75_DATA_64K (1)
#define MDM_X75_DATA_BTX (4)
#define MDM_X75_DATA_DEFAULT (0)
#define MDM_X75_DATA_T_70 (3)
#define MEDIA_CURRENTLY_MOUNTED (2147483648u)
#define MEDIA_ERASEABLE (1)
#define MEDIA_READ_ONLY (4)
#define MEDIA_READ_WRITE (8)
#define MEDIA_WRITE_ONCE (2)
#define MEDIA_WRITE_PROTECTED (256)
#define MEMORY_ALLOCATION_ALIGNMENT (16)
#define MEM_4MB_PAGES (2147483648u)
#define MEM_COMMIT (4096)
#define MEM_DECOMMIT (16384)
#define MEM_E_INVALID_LINK _HRESULT_TYPEDEF_ ( 0x80080010 )
#define MEM_E_INVALID_ROOT _HRESULT_TYPEDEF_ ( 0x80080009 )
#define MEM_E_INVALID_SIZE _HRESULT_TYPEDEF_ ( 0x80080011 )
#define MEM_FREE (65536)
#define MEM_IMAGE SEC_IMAGE
#define MEM_LARGE_PAGES (536870912)
#define MEM_MAPPED (262144)
#define MEM_PHYSICAL (4194304)
#define MEM_PRIVATE (131072)
#define MEM_RELEASE (32768)
#define MEM_RESERVE (8192)
#define MEM_RESET (524288)
#define MEM_ROTATE (8388608)
#define MEM_TOP_DOWN (1048576)
#define MEM_UNMAP_WITH_TRANSIENT_BOOST (1)
#define MEM_WRITE_WATCH (2097152)
#define MENU_EVENT (8)
#define MERGECOPY ( DWORD ) 0x00C000CA
#define MERGEPAINT ( DWORD ) 0x00BB0226
#define MESSAGE_RESOURCE_UNICODE (1)
#define METAFILE_DRIVER (2049)
#define META_ANIMATEPALETTE (1078)
#define META_ARC (2071)
#define META_BITBLT (2338)
#define META_CHORD (2096)
#define META_CREATEBRUSHINDIRECT (764)
#define META_CREATEFONTINDIRECT (763)
#define META_CREATEPALETTE (247)
#define META_CREATEPATTERNBRUSH (505)
#define META_CREATEPENINDIRECT (762)
#define META_CREATEREGION (1791)
#define META_DELETEOBJECT (496)
#define META_DIBBITBLT (2368)
#define META_DIBCREATEPATTERNBRUSH (322)
#define META_DIBSTRETCHBLT (2881)
#define META_ELLIPSE (1048)
#define META_ESCAPE (1574)
#define META_EXCLUDECLIPRECT (1045)
#define META_EXTFLOODFILL (1352)
#define META_EXTTEXTOUT (2610)
#define META_FILLREGION (552)
#define META_FLOODFILL (1049)
#define META_FRAMEREGION (1065)
#define META_INTERSECTCLIPRECT (1046)
#define META_INVERTREGION (298)
#define META_LINETO (531)
#define META_MOVETO (532)
#define META_OFFSETCLIPRGN (544)
#define META_OFFSETVIEWPORTORG (529)
#define META_OFFSETWINDOWORG (527)
#define META_PAINTREGION (299)
#define META_PATBLT (1565)
#define META_PIE (2074)
#define META_POLYGON (804)
#define META_POLYLINE (805)
#define META_POLYPOLYGON (1336)
#define META_REALIZEPALETTE (53)
#define META_RECTANGLE (1051)
#define META_RESIZEPALETTE (313)
#define META_RESTOREDC (295)
#define META_ROUNDRECT (1564)
#define META_SAVEDC (30)
#define META_SCALEVIEWPORTEXT (1042)
#define META_SCALEWINDOWEXT (1040)
#define META_SELECTCLIPREGION (300)
#define META_SELECTOBJECT (301)
#define META_SELECTPALETTE (564)
#define META_SETBKCOLOR (513)
#define META_SETBKMODE (258)
#define META_SETDIBTODEV (3379)
#define META_SETLAYOUT (329)
#define META_SETMAPMODE (259)
#define META_SETMAPPERFLAGS (561)
#define META_SETPALENTRIES (55)
#define META_SETPIXEL (1055)
#define META_SETPOLYFILLMODE (262)
#define META_SETRELABS (261)
#define META_SETROP2 (260)
#define META_SETSTRETCHBLTMODE (263)
#define META_SETTEXTALIGN (302)
#define META_SETTEXTCHAREXTRA (264)
#define META_SETTEXTCOLOR (521)
#define META_SETTEXTJUSTIFICATION (522)
#define META_SETVIEWPORTEXT (526)
#define META_SETVIEWPORTORG (525)
#define META_SETWINDOWEXT (524)
#define META_SETWINDOWORG (523)
#define META_STRETCHBLT (2851)
#define META_STRETCHDIB (3907)
#define META_TEXTOUT (1313)
#define METHOD_BUFFERED (0)
#define METHOD_DIRECT_FROM_HARDWARE METHOD_OUT_DIRECT
#define METHOD_DIRECT_TO_HARDWARE METHOD_IN_DIRECT
#define METHOD_IN_DIRECT (1)
#define METHOD_NEITHER (3)
#define METHOD_OUT_DIRECT (2)
#define METRICS_USEDEFAULT (-1)
#define MEVT_COMMENT ( ( BYTE ) 0x82 )
#define MEVT_EVENTPARM(x) ( ( DWORD ) ( ( x ) & 0x00FFFFFF ) )
#define MEVT_EVENTTYPE(x) ( ( BYTE ) ( ( ( x ) >> 24 ) & 0xFF ) )
#define MEVT_F_CALLBACK __MSABI_LONG ( 0x40000000 )
#define MEVT_F_LONG __MSABI_LONG ( 0x80000000 )
#define MEVT_F_SHORT __MSABI_LONG ( 0x00000000 )
#define MEVT_LONGMSG ( ( BYTE ) 0x80 )
#define MEVT_NOP ( ( BYTE ) 0x02 )
#define MEVT_SHORTMSG ( ( BYTE ) 0x00 )
#define MEVT_TEMPO ( ( BYTE ) 0x01 )
#define MEVT_VERSION ( ( BYTE ) 0x84 )
#define MFCOMMENT (15)
#define MFS_CHECKED MF_CHECKED
#define MFS_DEFAULT MF_DEFAULT
#define MFS_DISABLED MFS_GRAYED
#define MFS_ENABLED MF_ENABLED
#define MFS_GRAYED __MSABI_LONG ( 0x00000003 )
#define MFS_HILITE MF_HILITE
#define MFS_UNCHECKED MF_UNCHECKED
#define MFS_UNHILITE MF_UNHILITE
#define MFT_BITMAP MF_BITMAP
#define MFT_MENUBARBREAK MF_MENUBARBREAK
#define MFT_MENUBREAK MF_MENUBREAK
#define MFT_OWNERDRAW MF_OWNERDRAW
#define MFT_RADIOCHECK __MSABI_LONG ( 0x00000200 )
#define MFT_RIGHTJUSTIFY MF_RIGHTJUSTIFY
#define MFT_RIGHTORDER __MSABI_LONG ( 0x00002000 )
#define MFT_SEPARATOR MF_SEPARATOR
#define MFT_STRING MF_STRING
#define MF_APPEND __MSABI_LONG ( 0x00000100 )
#define MF_BITMAP __MSABI_LONG ( 0x00000004 )
#define MF_BYCOMMAND __MSABI_LONG ( 0x00000000 )
#define MF_BYPOSITION __MSABI_LONG ( 0x00000400 )
#define MF_CALLBACKS (134217728)
#define MF_CHANGE __MSABI_LONG ( 0x00000080 )
#define MF_CHECKED __MSABI_LONG ( 0x00000008 )
#define MF_CONV (1073741824)
#define MF_DEFAULT __MSABI_LONG ( 0x00001000 )
#define MF_DELETE __MSABI_LONG ( 0x00000200 )
#define MF_DISABLED __MSABI_LONG ( 0x00000002 )
#define MF_ENABLED __MSABI_LONG ( 0x00000000 )
#define MF_END __MSABI_LONG ( 0x00000080 )
#define MF_ERRORS (268435456)
#define MF_GRAYED __MSABI_LONG ( 0x00000001 )
#define MF_HELP __MSABI_LONG ( 0x00004000 )
#define MF_HILITE __MSABI_LONG ( 0x00000080 )
#define MF_HSZ_INFO (16777216)
#define MF_INSERT __MSABI_LONG ( 0x00000000 )
#define MF_LINKS (536870912)
#define MF_MASK (4278190080u)
#define MF_MENUBARBREAK __MSABI_LONG ( 0x00000020 )
#define MF_MENUBREAK __MSABI_LONG ( 0x00000040 )
#define MF_MOUSESELECT __MSABI_LONG ( 0x00008000 )
#define MF_OWNERDRAW __MSABI_LONG ( 0x00000100 )
#define MF_POPUP __MSABI_LONG ( 0x00000010 )
#define MF_POSTMSGS (67108864)
#define MF_REMOVE __MSABI_LONG ( 0x00001000 )
#define MF_RIGHTJUSTIFY __MSABI_LONG ( 0x00004000 )
#define MF_SENDMSGS (33554432)
#define MF_SEPARATOR __MSABI_LONG ( 0x00000800 )
#define MF_STRING __MSABI_LONG ( 0x00000000 )
#define MF_SYSMENU __MSABI_LONG ( 0x00002000 )
#define MF_UNCHECKED __MSABI_LONG ( 0x00000000 )
#define MF_UNHILITE __MSABI_LONG ( 0x00000000 )
#define MF_USECHECKBITMAPS __MSABI_LONG ( 0x00000200 )
#define MHDR_DONE (1)
#define MHDR_INQUEUE (4)
#define MHDR_ISSTRM (8)
#define MHDR_PREPARED (2)
#define MH_CLEANUP (4)
#define MH_CREATE (1)
#define MH_DELETE (3)
#define MH_KEEP (2)
#define MICROSOFT_ROOT_CERT_CHAIN_POLICY_CHECK_APPLICATION_ROOT_FLAG (131072)
#define MICROSOFT_ROOT_CERT_CHAIN_POLICY_ENABLE_TEST_ROOT_FLAG (65536)
#define MICROSOFT_WINBASE_H_DEFINE_INTERLOCKED_CPLUSPLUS_OVERLOADS (0)
#define MICROSOFT_WINDOWS_WINBASE_H_DEFINE_INTERLOCKED_CPLUSPLUS_OVERLOADS (1)
#define MICROSOFT_WINDOWS_WINBASE_INTERLOCKED_CPLUSPLUS_H_INCLUDED 
#define MIDICAPS_CACHE (4)
#define MIDICAPS_LRVOLUME (2)
#define MIDICAPS_STREAM (8)
#define MIDICAPS_VOLUME (1)
#define MIDIERR_BADOPENMODE (70)
#define MIDIERR_BASE (64)
#define MIDIERR_DONT_CONTINUE (71)
#define MIDIERR_INVALIDSETUP (69)
#define MIDIERR_LASTERROR (71)
#define MIDIERR_NODEVICE (68)
#define MIDIERR_NOMAP (66)
#define MIDIERR_NOTREADY (67)
#define MIDIERR_STILLPLAYING (65)
#define MIDIERR_UNPREPARED (64)
#define MIDIMAPPER (-1)
#define MIDIPATCHSIZE (128)
#define MIDIPROP_GET __MSABI_LONG ( 0x40000000 )
#define MIDIPROP_SET __MSABI_LONG ( 0x80000000 )
#define MIDIPROP_TEMPO __MSABI_LONG ( 0x00000002 )
#define MIDIPROP_TIMEDIV __MSABI_LONG ( 0x00000001 )
#define MIDISTRM_ERROR (-2)
#define MIDI_CACHE_ALL (1)
#define MIDI_CACHE_BESTFIT (2)
#define MIDI_CACHE_QUERY (3)
#define MIDI_IO_STATUS __MSABI_LONG ( 0x00000020 )
#define MIDI_MAPPER (-1)
#define MIDI_UNCACHE (4)
#define MIDL_INTERFACE(x) struct
#define MIDL_ascii_strcpy(target, source) strcpy ( target , source )
#define MIDL_ascii_strlen(string) strlen ( string )
#define MIDL_memset(s, c, n) memset ( s , c , n )
#define MIDL_uhyper unsigned __int64
#define MIIM_BITMAP (128)
#define MIIM_CHECKMARKS (8)
#define MIIM_DATA (32)
#define MIIM_FTYPE (256)
#define MIIM_ID (2)
#define MIIM_STATE (1)
#define MIIM_STRING (64)
#define MIIM_SUBMENU (4)
#define MIIM_TYPE (16)
#define MIM_APPLYTOSUBMENUS (2147483648u)
#define MIM_BACKGROUND (2)
#define MIM_CLOSE MM_MIM_CLOSE
#define MIM_DATA MM_MIM_DATA
#define MIM_ERROR MM_MIM_ERROR
#define MIM_HELPID (4)
#define MIM_LONGDATA MM_MIM_LONGDATA
#define MIM_LONGERROR MM_MIM_LONGERROR
#define MIM_MAXHEIGHT (1)
#define MIM_MENUDATA (8)
#define MIM_MOREDATA MM_MIM_MOREDATA
#define MIM_OPEN MM_MIM_OPEN
#define MIM_STYLE (16)
#define MINCHAR (128)
#define MINHALF_PTR ( ~ MAXHALF_PTR )
#define MINIMUM_RESERVED_MANIFEST_RESOURCE_ID MAKEINTRESOURCE ( 1 )
#define MININT_PTR ( ~ MAXINT_PTR )
#define MINLONG (2147483648u)
#define MINLONG_PTR ( ~ MAXLONG_PTR )
#define MINSHORT (32768)
#define MIN_ACL_REVISION ACL_REVISION2
#define MIN_PRIORITY (1)
#define MIXERCONTROL_CONTROLF_DISABLED __MSABI_LONG ( 0x80000000 )
#define MIXERCONTROL_CONTROLF_MULTIPLE __MSABI_LONG ( 0x00000002 )
#define MIXERCONTROL_CONTROLF_UNIFORM __MSABI_LONG ( 0x00000001 )
#define MIXERCONTROL_CONTROLTYPE_BASS (1342373890l)
#define MIXERCONTROL_CONTROLTYPE_BASS_BOOST (536945271l)
#define MIXERCONTROL_CONTROLTYPE_BOOLEAN (536936448l)
#define MIXERCONTROL_CONTROLTYPE_BOOLEANMETER (268500992l)
#define MIXERCONTROL_CONTROLTYPE_BUTTON (553713664l)
#define MIXERCONTROL_CONTROLTYPE_CUSTOM (0l)
#define MIXERCONTROL_CONTROLTYPE_DECIBELS (805568512l)
#define MIXERCONTROL_CONTROLTYPE_EQUALIZER (1342373892l)
#define MIXERCONTROL_CONTROLTYPE_FADER (1342373888l)
#define MIXERCONTROL_CONTROLTYPE_LOUDNESS (536936452l)
#define MIXERCONTROL_CONTROLTYPE_MICROTIME (1610809344l)
#define MIXERCONTROL_CONTROLTYPE_MILLITIME (1627586560l)
#define MIXERCONTROL_CONTROLTYPE_MIXER (1895890945l)
#define MIXERCONTROL_CONTROLTYPE_MONO (536936451l)
#define MIXERCONTROL_CONTROLTYPE_MULTIPLESELECT (1895890944l)
#define MIXERCONTROL_CONTROLTYPE_MUTE (536936450l)
#define MIXERCONTROL_CONTROLTYPE_MUX (1879113729l)
#define MIXERCONTROL_CONTROLTYPE_ONOFF (536936449l)
#define MIXERCONTROL_CONTROLTYPE_PAN (1073872897l)
#define MIXERCONTROL_CONTROLTYPE_PEAKMETER (268566529l)
#define MIXERCONTROL_CONTROLTYPE_PERCENT (805634048l)
#define MIXERCONTROL_CONTROLTYPE_QSOUNDPAN (1073872898l)
#define MIXERCONTROL_CONTROLTYPE_SIGNED (805437440l)
#define MIXERCONTROL_CONTROLTYPE_SIGNEDMETER (268566528l)
#define MIXERCONTROL_CONTROLTYPE_SINGLESELECT (1879113728l)
#define MIXERCONTROL_CONTROLTYPE_SLIDER (1073872896l)
#define MIXERCONTROL_CONTROLTYPE_STEREOENH (536936453l)
#define MIXERCONTROL_CONTROLTYPE_TREBLE (1342373891l)
#define MIXERCONTROL_CONTROLTYPE_UNSIGNED (805502976l)
#define MIXERCONTROL_CONTROLTYPE_UNSIGNEDMETER (268632064l)
#define MIXERCONTROL_CONTROLTYPE_VOLUME (1342373889l)
#define MIXERCONTROL_CT_CLASS_CUSTOM __MSABI_LONG ( 0x00000000 )
#define MIXERCONTROL_CT_CLASS_FADER __MSABI_LONG ( 0x50000000 )
#define MIXERCONTROL_CT_CLASS_LIST __MSABI_LONG ( 0x70000000 )
#define MIXERCONTROL_CT_CLASS_MASK __MSABI_LONG ( 0xF0000000 )
#define MIXERCONTROL_CT_CLASS_METER __MSABI_LONG ( 0x10000000 )
#define MIXERCONTROL_CT_CLASS_NUMBER __MSABI_LONG ( 0x30000000 )
#define MIXERCONTROL_CT_CLASS_SLIDER __MSABI_LONG ( 0x40000000 )
#define MIXERCONTROL_CT_CLASS_SWITCH __MSABI_LONG ( 0x20000000 )
#define MIXERCONTROL_CT_CLASS_TIME __MSABI_LONG ( 0x60000000 )
#define MIXERCONTROL_CT_SC_LIST_MULTIPLE __MSABI_LONG ( 0x01000000 )
#define MIXERCONTROL_CT_SC_LIST_SINGLE __MSABI_LONG ( 0x00000000 )
#define MIXERCONTROL_CT_SC_METER_POLLED __MSABI_LONG ( 0x00000000 )
#define MIXERCONTROL_CT_SC_SWITCH_BOOLEAN __MSABI_LONG ( 0x00000000 )
#define MIXERCONTROL_CT_SC_SWITCH_BUTTON __MSABI_LONG ( 0x01000000 )
#define MIXERCONTROL_CT_SC_TIME_MICROSECS __MSABI_LONG ( 0x00000000 )
#define MIXERCONTROL_CT_SC_TIME_MILLISECS __MSABI_LONG ( 0x01000000 )
#define MIXERCONTROL_CT_SUBCLASS_MASK __MSABI_LONG ( 0x0F000000 )
#define MIXERCONTROL_CT_UNITS_BOOLEAN __MSABI_LONG ( 0x00010000 )
#define MIXERCONTROL_CT_UNITS_CUSTOM __MSABI_LONG ( 0x00000000 )
#define MIXERCONTROL_CT_UNITS_DECIBELS __MSABI_LONG ( 0x00040000 )
#define MIXERCONTROL_CT_UNITS_MASK __MSABI_LONG ( 0x00FF0000 )
#define MIXERCONTROL_CT_UNITS_PERCENT __MSABI_LONG ( 0x00050000 )
#define MIXERCONTROL_CT_UNITS_SIGNED __MSABI_LONG ( 0x00020000 )
#define MIXERCONTROL_CT_UNITS_UNSIGNED __MSABI_LONG ( 0x00030000 )
#define MIXERLINE_COMPONENTTYPE_DST_DIGITAL (1l)
#define MIXERLINE_COMPONENTTYPE_DST_FIRST __MSABI_LONG ( 0x0 )
#define MIXERLINE_COMPONENTTYPE_DST_HEADPHONES (5l)
#define MIXERLINE_COMPONENTTYPE_DST_LAST (8l)
#define MIXERLINE_COMPONENTTYPE_DST_LINE (2l)
#define MIXERLINE_COMPONENTTYPE_DST_MONITOR (3l)
#define MIXERLINE_COMPONENTTYPE_DST_SPEAKERS (4l)
#define MIXERLINE_COMPONENTTYPE_DST_TELEPHONE (6l)
#define MIXERLINE_COMPONENTTYPE_DST_UNDEFINED (0l)
#define MIXERLINE_COMPONENTTYPE_DST_VOICEIN (8l)
#define MIXERLINE_COMPONENTTYPE_DST_WAVEIN (7l)
#define MIXERLINE_COMPONENTTYPE_SRC_ANALOG (4106l)
#define MIXERLINE_COMPONENTTYPE_SRC_AUXILIARY (4105l)
#define MIXERLINE_COMPONENTTYPE_SRC_COMPACTDISC (4101l)
#define MIXERLINE_COMPONENTTYPE_SRC_DIGITAL (4097l)
#define MIXERLINE_COMPONENTTYPE_SRC_FIRST __MSABI_LONG ( 0x00001000 )
#define MIXERLINE_COMPONENTTYPE_SRC_LAST (4106l)
#define MIXERLINE_COMPONENTTYPE_SRC_LINE (4098l)
#define MIXERLINE_COMPONENTTYPE_SRC_MICROPHONE (4099l)
#define MIXERLINE_COMPONENTTYPE_SRC_PCSPEAKER (4103l)
#define MIXERLINE_COMPONENTTYPE_SRC_SYNTHESIZER (4100l)
#define MIXERLINE_COMPONENTTYPE_SRC_TELEPHONE (4102l)
#define MIXERLINE_COMPONENTTYPE_SRC_UNDEFINED (4096l)
#define MIXERLINE_COMPONENTTYPE_SRC_WAVEOUT (4104l)
#define MIXERLINE_LINEF_ACTIVE __MSABI_LONG ( 0x00000001 )
#define MIXERLINE_LINEF_DISCONNECTED __MSABI_LONG ( 0x00008000 )
#define MIXERLINE_LINEF_SOURCE __MSABI_LONG ( 0x80000000 )
#define MIXERLINE_TARGETTYPE_AUX (5)
#define MIXERLINE_TARGETTYPE_MIDIIN (4)
#define MIXERLINE_TARGETTYPE_MIDIOUT (3)
#define MIXERLINE_TARGETTYPE_UNDEFINED (0)
#define MIXERLINE_TARGETTYPE_WAVEIN (2)
#define MIXERLINE_TARGETTYPE_WAVEOUT (1)
#define MIXERR_BASE (1024)
#define MIXERR_INVALCONTROL (1025)
#define MIXERR_INVALLINE (1024)
#define MIXERR_INVALVALUE (1026)
#define MIXERR_LASTERROR (1026)
#define MIXER_GETCONTROLDETAILSF_LISTTEXT __MSABI_LONG ( 0x00000001 )
#define MIXER_GETCONTROLDETAILSF_QUERYMASK __MSABI_LONG ( 0x0000000F )
#define MIXER_GETCONTROLDETAILSF_VALUE __MSABI_LONG ( 0x00000000 )
#define MIXER_GETLINECONTROLSF_ALL __MSABI_LONG ( 0x00000000 )
#define MIXER_GETLINECONTROLSF_ONEBYID __MSABI_LONG ( 0x00000001 )
#define MIXER_GETLINECONTROLSF_ONEBYTYPE __MSABI_LONG ( 0x00000002 )
#define MIXER_GETLINECONTROLSF_QUERYMASK __MSABI_LONG ( 0x0000000F )
#define MIXER_GETLINEINFOF_COMPONENTTYPE __MSABI_LONG ( 0x00000003 )
#define MIXER_GETLINEINFOF_DESTINATION __MSABI_LONG ( 0x00000000 )
#define MIXER_GETLINEINFOF_LINEID __MSABI_LONG ( 0x00000002 )
#define MIXER_GETLINEINFOF_QUERYMASK __MSABI_LONG ( 0x0000000F )
#define MIXER_GETLINEINFOF_SOURCE __MSABI_LONG ( 0x00000001 )
#define MIXER_GETLINEINFOF_TARGETTYPE __MSABI_LONG ( 0x00000004 )
#define MIXER_LONG_NAME_CHARS (64)
#define MIXER_OBJECTF_AUX __MSABI_LONG ( 0x50000000 )
#define MIXER_OBJECTF_HANDLE __MSABI_LONG ( 0x80000000 )
#define MIXER_OBJECTF_HMIDIIN (-1073741824l)
#define MIXER_OBJECTF_HMIDIOUT (-1342177280l)
#define MIXER_OBJECTF_HMIXER (-2147483648l)
#define MIXER_OBJECTF_HWAVEIN (-1610612736l)
#define MIXER_OBJECTF_HWAVEOUT (-1879048192l)
#define MIXER_OBJECTF_MIDIIN __MSABI_LONG ( 0x40000000 )
#define MIXER_OBJECTF_MIDIOUT __MSABI_LONG ( 0x30000000 )
#define MIXER_OBJECTF_MIXER __MSABI_LONG ( 0x00000000 )
#define MIXER_OBJECTF_WAVEIN __MSABI_LONG ( 0x20000000 )
#define MIXER_OBJECTF_WAVEOUT __MSABI_LONG ( 0x10000000 )
#define MIXER_SETCONTROLDETAILSF_CUSTOM __MSABI_LONG ( 0x00000001 )
#define MIXER_SETCONTROLDETAILSF_QUERYMASK __MSABI_LONG ( 0x0000000F )
#define MIXER_SETCONTROLDETAILSF_VALUE __MSABI_LONG ( 0x00000000 )
#define MIXER_SHORT_NAME_CHARS (16)
#define MKF_AVAILABLE (2)
#define MKF_CONFIRMHOTKEY (8)
#define MKF_HOTKEYACTIVE (4)
#define MKF_HOTKEYSOUND (16)
#define MKF_INDICATOR (32)
#define MKF_LEFTBUTTONDOWN (16777216)
#define MKF_LEFTBUTTONSEL (268435456)
#define MKF_MODIFIERS (64)
#define MKF_MOUSEKEYSON (1)
#define MKF_MOUSEMODE (2147483648u)
#define MKF_REPLACENUMBERS (128)
#define MKF_RIGHTBUTTONDOWN (33554432)
#define MKF_RIGHTBUTTONSEL (536870912)
#define MK_CONTROL (8)
#define MK_E_CANTOPENFILE _HRESULT_TYPEDEF_ ( 0x800401EA )
#define MK_E_CONNECTMANUALLY _HRESULT_TYPEDEF_ ( 0x800401E0 )
#define MK_E_ENUMERATION_FAILED _HRESULT_TYPEDEF_ ( 0x800401EF )
#define MK_E_EXCEEDEDDEADLINE _HRESULT_TYPEDEF_ ( 0x800401E1 )
#define MK_E_FIRST __MSABI_LONG ( 0x800401E0 )
#define MK_E_INTERMEDIATEINTERFACENOTSUPPORTED _HRESULT_TYPEDEF_ ( 0x800401E7 )
#define MK_E_INVALIDEXTENSION _HRESULT_TYPEDEF_ ( 0x800401E6 )
#define MK_E_LAST __MSABI_LONG ( 0x800401EF )
#define MK_E_MUSTBOTHERUSER _HRESULT_TYPEDEF_ ( 0x800401EB )
#define MK_E_NEEDGENERIC _HRESULT_TYPEDEF_ ( 0x800401E2 )
#define MK_E_NOINVERSE _HRESULT_TYPEDEF_ ( 0x800401EC )
#define MK_E_NOOBJECT _HRESULT_TYPEDEF_ ( 0x800401E5 )
#define MK_E_NOPREFIX _HRESULT_TYPEDEF_ ( 0x800401EE )
#define MK_E_NOSTORAGE _HRESULT_TYPEDEF_ ( 0x800401ED )
#define MK_E_NOTBINDABLE _HRESULT_TYPEDEF_ ( 0x800401E8 )
#define MK_E_NOTBOUND _HRESULT_TYPEDEF_ ( 0x800401E9 )
#define MK_E_NO_NORMALIZED _HRESULT_TYPEDEF_ ( 0x80080007 )
#define MK_E_SYNTAX _HRESULT_TYPEDEF_ ( 0x800401E4 )
#define MK_E_UNAVAILABLE _HRESULT_TYPEDEF_ ( 0x800401E3 )
#define MK_LBUTTON (1)
#define MK_MBUTTON (16)
#define MK_RBUTTON (2)
#define MK_SHIFT (4)
#define MK_S_FIRST __MSABI_LONG ( 0x000401E0 )
#define MK_S_HIM _HRESULT_TYPEDEF_ ( 0x000401E5 )
#define MK_S_LAST __MSABI_LONG ( 0x000401EF )
#define MK_S_ME _HRESULT_TYPEDEF_ ( 0x000401E4 )
#define MK_S_MONIKERALREADYREGISTERED _HRESULT_TYPEDEF_ ( 0x000401E7 )
#define MK_S_REDUCED_TO_SELF _HRESULT_TYPEDEF_ ( 0x000401E2 )
#define MK_S_US _HRESULT_TYPEDEF_ ( 0x000401E6 )
#define MK_XBUTTON1 (32)
#define MK_XBUTTON2 (64)
#define MMIOERR_ACCESSDENIED (268)
#define MMIOERR_BASE (256)
#define MMIOERR_CANNOTCLOSE (260)
#define MMIOERR_CANNOTEXPAND (264)
#define MMIOERR_CANNOTOPEN (259)
#define MMIOERR_CANNOTREAD (261)
#define MMIOERR_CANNOTSEEK (263)
#define MMIOERR_CANNOTWRITE (262)
#define MMIOERR_CHUNKNOTFOUND (265)
#define MMIOERR_FILENOTFOUND (257)
#define MMIOERR_INVALIDFILE (272)
#define MMIOERR_NETWORKERROR (270)
#define MMIOERR_OUTOFMEMORY (258)
#define MMIOERR_PATHNOTFOUND (267)
#define MMIOERR_SHARINGVIOLATION (269)
#define MMIOERR_TOOMANYOPENFILES (271)
#define MMIOERR_UNBUFFERED (266)
#define MMIOM_CLOSE (4)
#define MMIOM_OPEN (3)
#define MMIOM_READ MMIO_READ
#define MMIOM_RENAME (6)
#define MMIOM_SEEK (2)
#define MMIOM_USER (32768)
#define MMIOM_WRITE MMIO_WRITE
#define MMIOM_WRITEFLUSH (5)
#define MMIO_ALLOCBUF (65536)
#define MMIO_COMPAT (0)
#define MMIO_CREATE (4096)
#define MMIO_CREATELIST (64)
#define MMIO_CREATERIFF (32)
#define MMIO_DEFAULTBUFFER (8192)
#define MMIO_DELETE (512)
#define MMIO_DENYNONE (64)
#define MMIO_DENYREAD (48)
#define MMIO_DENYWRITE (32)
#define MMIO_DIRTY (268435456)
#define MMIO_EMPTYBUF (16)
#define MMIO_EXCLUSIVE (16)
#define MMIO_EXIST (16384)
#define MMIO_FHOPEN (16)
#define MMIO_FINDCHUNK (16)
#define MMIO_FINDLIST (64)
#define MMIO_FINDPROC (262144)
#define MMIO_FINDRIFF (32)
#define MMIO_GETTEMP (131072)
#define MMIO_GLOBALPROC (268435456)
#define MMIO_INSTALLPROC (65536)
#define MMIO_PARSE (256)
#define MMIO_READ (0)
#define MMIO_READWRITE (2)
#define MMIO_REMOVEPROC (131072)
#define MMIO_RWMODE (3)
#define MMIO_SHAREMODE (112)
#define MMIO_TOUPPER (16)
#define MMIO_UNICODEPROC (16777216)
#define MMIO_WRITE (1)
#define MMSYSERR_ALLOCATED (4)
#define MMSYSERR_BADDB (14)
#define MMSYSERR_BADDEVICEID (2)
#define MMSYSERR_BADERRNUM (9)
#define MMSYSERR_BASE (0)
#define MMSYSERR_DELETEERROR (18)
#define MMSYSERR_ERROR (1)
#define MMSYSERR_HANDLEBUSY (12)
#define MMSYSERR_INVALFLAG (10)
#define MMSYSERR_INVALHANDLE (5)
#define MMSYSERR_INVALIDALIAS (13)
#define MMSYSERR_INVALPARAM (11)
#define MMSYSERR_KEYNOTFOUND (15)
#define MMSYSERR_LASTERROR (21)
#define MMSYSERR_MOREDATA (21)
#define MMSYSERR_NODRIVER (6)
#define MMSYSERR_NODRIVERCB (20)
#define MMSYSERR_NOERROR (0)
#define MMSYSERR_NOMEM (7)
#define MMSYSERR_NOTENABLED (3)
#define MMSYSERR_NOTSUPPORTED (8)
#define MMSYSERR_READERROR (16)
#define MMSYSERR_VALNOTFOUND (19)
#define MMSYSERR_WRITEERROR (17)
#define MM_ANISOTROPIC (8)
#define MM_DRVM_CLOSE (977)
#define MM_DRVM_DATA (978)
#define MM_DRVM_ERROR (979)
#define MM_DRVM_OPEN (976)
#define MM_HIENGLISH (5)
#define MM_HIMETRIC (3)
#define MM_ISOTROPIC (7)
#define MM_JOY1BUTTONDOWN (949)
#define MM_JOY1BUTTONUP (951)
#define MM_JOY1MOVE (928)
#define MM_JOY1ZMOVE (930)
#define MM_JOY2BUTTONDOWN (950)
#define MM_JOY2BUTTONUP (952)
#define MM_JOY2MOVE (929)
#define MM_JOY2ZMOVE (931)
#define MM_LOENGLISH (4)
#define MM_LOMETRIC (2)
#define MM_MAX MM_ANISOTROPIC
#define MM_MAX_AXES_NAMELEN (16)
#define MM_MAX_FIXEDSCALE MM_TWIPS
#define MM_MAX_NUMAXES (16)
#define MM_MCINOTIFY (953)
#define MM_MCISIGNAL (971)
#define MM_MIM_CLOSE (962)
#define MM_MIM_DATA (963)
#define MM_MIM_ERROR (965)
#define MM_MIM_LONGDATA (964)
#define MM_MIM_LONGERROR (966)
#define MM_MIM_MOREDATA (972)
#define MM_MIM_OPEN (961)
#define MM_MIN MM_TEXT
#define MM_MIXM_CONTROL_CHANGE (977)
#define MM_MIXM_LINE_CHANGE (976)
#define MM_MOM_CLOSE (968)
#define MM_MOM_DONE (969)
#define MM_MOM_OPEN (967)
#define MM_MOM_POSITIONCB (970)
#define MM_STREAM_CLOSE (981)
#define MM_STREAM_DONE (982)
#define MM_STREAM_ERROR (983)
#define MM_STREAM_OPEN (980)
#define MM_TEXT (1)
#define MM_TWIPS (6)
#define MM_WIM_CLOSE (959)
#define MM_WIM_DATA (960)
#define MM_WIM_OPEN (958)
#define MM_WOM_CLOSE (956)
#define MM_WOM_DONE (957)
#define MM_WOM_OPEN (955)
#define MNC_CLOSE (1)
#define MNC_EXECUTE (2)
#define MNC_IGNORE (0)
#define MNC_SELECT (3)
#define MND_CONTINUE (0)
#define MND_ENDMENU (1)
#define MNGOF_BOTTOMGAP (2)
#define MNGOF_TOPGAP (1)
#define MNGO_NOERROR (1)
#define MNGO_NOINTERFACE (0)
#define MNS_AUTODISMISS (268435456)
#define MNS_CHECKORBMP (67108864)
#define MNS_DRAGDROP (536870912)
#define MNS_MODELESS (1073741824)
#define MNS_NOCHECK (2147483648u)
#define MNS_NOTIFYBYPOS (134217728)
#define MN_GETHMENU (481)
#define MOD_ALT (1)
#define MOD_CONTROL (2)
#define MOD_FMSYNTH (4)
#define MOD_IGNORE_ALL_MODIFIER (1024)
#define MOD_LEFT (32768)
#define MOD_MAPPER (5)
#define MOD_MIDIPORT (1)
#define MOD_ON_KEYUP (2048)
#define MOD_RIGHT (16384)
#define MOD_SHIFT (4)
#define MOD_SQSYNTH (3)
#define MOD_SWSYNTH (7)
#define MOD_SYNTH (2)
#define MOD_WAVETABLE (6)
#define MOD_WIN (8)
#define MOM_CLOSE MM_MOM_CLOSE
#define MOM_DONE MM_MOM_DONE
#define MOM_OPEN MM_MOM_OPEN
#define MOM_POSITIONCB MM_MOM_POSITIONCB
#define MONITORINFOF_PRIMARY (1)
#define MONITOR_DEFAULTTONEAREST (2)
#define MONITOR_DEFAULTTONULL (0)
#define MONITOR_DEFAULTTOPRIMARY (1)
#define MONO_FONT (8)
#define MOUSEEVENTF_ABSOLUTE (32768)
#define MOUSEEVENTF_LEFTDOWN (2)
#define MOUSEEVENTF_LEFTUP (4)
#define MOUSEEVENTF_MIDDLEDOWN (32)
#define MOUSEEVENTF_MIDDLEUP (64)
#define MOUSEEVENTF_MOVE (1)
#define MOUSEEVENTF_RIGHTDOWN (8)
#define MOUSEEVENTF_RIGHTUP (16)
#define MOUSEEVENTF_VIRTUALDESK (16384)
#define MOUSEEVENTF_WHEEL (2048)
#define MOUSEEVENTF_XDOWN (128)
#define MOUSEEVENTF_XUP (256)
#define MOUSETRAILS (39)
#define MOUSE_ATTRIBUTES_CHANGED (4)
#define MOUSE_EVENT (2)
#define MOUSE_MOVED (1)
#define MOUSE_MOVE_ABSOLUTE (1)
#define MOUSE_MOVE_RELATIVE (0)
#define MOUSE_VIRTUAL_DESKTOP (2)
#define MOUSE_WHEELED (4)
#define MOVEFILE_COPY_ALLOWED (2)
#define MOVEFILE_CREATE_HARDLINK (16)
#define MOVEFILE_DELAY_UNTIL_REBOOT (4)
#define MOVEFILE_FAIL_IF_NOT_TRACKABLE (32)
#define MOVEFILE_REPLACE_EXISTING (1)
#define MOVEFILE_WRITE_THROUGH (8)
#define MSDTC_E_DUPLICATE_RESOURCE _HRESULT_TYPEDEF_ ( 0x80110701 )
#define MSGF_DDEMGR (32769)
#define MSGF_DIALOGBOX (0)
#define MSGF_MAX (8)
#define MSGF_MENU (2)
#define MSGF_MESSAGEBOX (1)
#define MSGF_NEXTWINDOW (6)
#define MSGF_SCROLLBAR (5)
#define MSGF_USER (4096)
#define MSG_DONTROUTE (4)
#define MSG_MAXIOVLEN (16)
#define MSG_OOB (1)
#define MSG_PARTIAL (32768)
#define MSG_PEEK (2)
#define MSSIPOTF_E_BADVERSION _HRESULT_TYPEDEF_ ( 0x80097015 )
#define MSSIPOTF_E_BAD_FIRST_TABLE_PLACEMENT _HRESULT_TYPEDEF_ ( 0x80097008 )
#define MSSIPOTF_E_BAD_MAGICNUMBER _HRESULT_TYPEDEF_ ( 0x80097004 )
#define MSSIPOTF_E_BAD_OFFSET_TABLE _HRESULT_TYPEDEF_ ( 0x80097005 )
#define MSSIPOTF_E_CANTGETOBJECT _HRESULT_TYPEDEF_ ( 0x80097002 )
#define MSSIPOTF_E_CRYPT _HRESULT_TYPEDEF_ ( 0x80097014 )
#define MSSIPOTF_E_DSIG_STRUCTURE _HRESULT_TYPEDEF_ ( 0x80097016 )
#define MSSIPOTF_E_FAILED_HINTS_CHECK _HRESULT_TYPEDEF_ ( 0x80097011 )
#define MSSIPOTF_E_FAILED_POLICY _HRESULT_TYPEDEF_ ( 0x80097010 )
#define MSSIPOTF_E_FILE _HRESULT_TYPEDEF_ ( 0x80097013 )
#define MSSIPOTF_E_FILETOOSMALL _HRESULT_TYPEDEF_ ( 0x8009700B )
#define MSSIPOTF_E_FILE_CHECKSUM _HRESULT_TYPEDEF_ ( 0x8009700D )
#define MSSIPOTF_E_NOHEADTABLE _HRESULT_TYPEDEF_ ( 0x80097003 )
#define MSSIPOTF_E_NOT_OPENTYPE _HRESULT_TYPEDEF_ ( 0x80097012 )
#define MSSIPOTF_E_OUTOFMEMRANGE _HRESULT_TYPEDEF_ ( 0x80097001 )
#define MSSIPOTF_E_PCONST_CHECK _HRESULT_TYPEDEF_ ( 0x80097017 )
#define MSSIPOTF_E_STRUCTURE _HRESULT_TYPEDEF_ ( 0x80097018 )
#define MSSIPOTF_E_TABLES_OVERLAP _HRESULT_TYPEDEF_ ( 0x80097009 )
#define MSSIPOTF_E_TABLE_CHECKSUM _HRESULT_TYPEDEF_ ( 0x8009700C )
#define MSSIPOTF_E_TABLE_LONGWORD _HRESULT_TYPEDEF_ ( 0x80097007 )
#define MSSIPOTF_E_TABLE_PADBYTES _HRESULT_TYPEDEF_ ( 0x8009700A )
#define MSSIPOTF_E_TABLE_TAGORDER _HRESULT_TYPEDEF_ ( 0x80097006 )
#define MS_CTS_ON ( ( DWORD ) 0x10 )
#define MS_DEF_DH_SCHANNEL_PROV __MINGW_NAME_UAW ( MS_DEF_DH_SCHANNEL_PROV )
#define MS_DEF_DH_SCHANNEL_PROV_A "Microsoft DH SChannel Cryptographic Provider"
#define MS_DEF_DH_SCHANNEL_PROV_W "Microsoft DH SChannel Cryptographic Provider"
#define MS_DEF_DSS_DH_PROV __MINGW_NAME_UAW ( MS_DEF_DSS_DH_PROV )
#define MS_DEF_DSS_DH_PROV_A "Microsoft Base DSS and Diffie-Hellman Cryptographic Provider"
#define MS_DEF_DSS_DH_PROV_W "Microsoft Base DSS and Diffie-Hellman Cryptographic Provider"
#define MS_DEF_DSS_PROV __MINGW_NAME_UAW ( MS_DEF_DSS_PROV )
#define MS_DEF_DSS_PROV_A "Microsoft Base DSS Cryptographic Provider"
#define MS_DEF_DSS_PROV_W "Microsoft Base DSS Cryptographic Provider"
#define MS_DEF_PROV __MINGW_NAME_UAW ( MS_DEF_PROV )
#define MS_DEF_PROV_A "Microsoft Base Cryptographic Provider v1.0"
#define MS_DEF_PROV_W "Microsoft Base Cryptographic Provider v1.0"
#define MS_DEF_RSA_SCHANNEL_PROV __MINGW_NAME_UAW ( MS_DEF_RSA_SCHANNEL_PROV )
#define MS_DEF_RSA_SCHANNEL_PROV_A "Microsoft RSA SChannel Cryptographic Provider"
#define MS_DEF_RSA_SCHANNEL_PROV_W "Microsoft RSA SChannel Cryptographic Provider"
#define MS_DEF_RSA_SIG_PROV __MINGW_NAME_UAW ( MS_DEF_RSA_SIG_PROV )
#define MS_DEF_RSA_SIG_PROV_A "Microsoft RSA Signature Cryptographic Provider"
#define MS_DEF_RSA_SIG_PROV_W "Microsoft RSA Signature Cryptographic Provider"
#define MS_DSR_ON ( ( DWORD ) 0x20 )
#define MS_ENHANCED_PROV __MINGW_NAME_UAW ( MS_ENHANCED_PROV )
#define MS_ENHANCED_PROV_A "Microsoft Enhanced Cryptographic Provider v1.0"
#define MS_ENHANCED_PROV_W "Microsoft Enhanced Cryptographic Provider v1.0"
#define MS_ENH_DSS_DH_PROV __MINGW_NAME_UAW ( MS_ENH_DSS_DH_PROV )
#define MS_ENH_DSS_DH_PROV_A "Microsoft Enhanced DSS and Diffie-Hellman Cryptographic Provider"
#define MS_ENH_DSS_DH_PROV_W "Microsoft Enhanced DSS and Diffie-Hellman Cryptographic Provider"
#define MS_ENH_RSA_AES_PROV __MINGW_NAME_UAW ( MS_ENH_RSA_AES_PROV )
#define MS_ENH_RSA_AES_PROV_A "Microsoft Enhanced RSA and AES Cryptographic Provider"
#define MS_ENH_RSA_AES_PROV_W "Microsoft Enhanced RSA and AES Cryptographic Provider"
#define MS_ENH_RSA_AES_PROV_XP __MINGW_NAME_UAW ( MS_ENH_RSA_AES_PROV_XP )
#define MS_ENH_RSA_AES_PROV_XP_A "Microsoft Enhanced RSA and AES Cryptographic Provider (Prototype)"
#define MS_ENH_RSA_AES_PROV_XP_W "Microsoft Enhanced RSA and AES Cryptographic Provider (Prototype)"
#define MS_KEY_STORAGE_PROVIDER "Microsoft Software Key Storage Provider"
#define MS_NBF "MNBF"
#define MS_PLATFORM_CRYPTO_PROVIDER "Microsoft Platform Crypto Provider"
#define MS_PLATFORM_KEY_STORAGE_PROVIDER "Microsoft Platform Crypto Provider"
#define MS_PPM_SOFTWARE_ALL (1)
#define MS_PRIMITIVE_PROVIDER "Microsoft Primitive Provider"
#define MS_RING_ON ( ( DWORD ) 0x40 )
#define MS_RLSD_ON ( ( DWORD ) 0x80 )
#define MS_SCARD_PROV __MINGW_NAME_UAW ( MS_SCARD_PROV )
#define MS_SCARD_PROV_A "Microsoft Base Smart Card Crypto Provider"
#define MS_SCARD_PROV_W "Microsoft Base Smart Card Crypto Provider"
#define MS_SMART_CARD_KEY_STORAGE_PROVIDER "Microsoft Smart Card Key Storage Provider"
#define MS_STRONG_PROV __MINGW_NAME_UAW ( MS_STRONG_PROV )
#define MS_STRONG_PROV_A "Microsoft Strong Cryptographic Provider"
#define MS_STRONG_PROV_W "Microsoft Strong Cryptographic Provider"
#define MUTANT_ALL_ACCESS (2031617l)
#define MUTANT_QUERY_STATE (1)
#define MUTEX_ALL_ACCESS MUTANT_ALL_ACCESS
#define MUTEX_MODIFY_STATE MUTANT_QUERY_STATE
#define MWMO_ALERTABLE (2)
#define MWMO_INPUTAVAILABLE (4)
#define MWMO_WAITALL (1)
#define MWT_IDENTITY (1)
#define MWT_LEFTMULTIPLY (2)
#define MWT_MAX MWT_RIGHTMULTIPLY
#define MWT_MIN MWT_IDENTITY
#define MWT_RIGHTMULTIPLY (3)
#define MakeProcInstance(lpProc, hInstance) ( lpProc )
#define MapVirtualKey __MINGW_NAME_AW ( MapVirtualKey )
#define MapVirtualKeyEx __MINGW_NAME_AW ( MapVirtualKeyEx )
#define MediumChangerClassGuid GUID_DEVINTERFACE_MEDIUMCHANGER
#define MemoryBarrier _mm_mfence
#define MemoryFence _mm_mfence
#define MessageBox __MINGW_NAME_AW ( MessageBox )
#define MessageBoxEx __MINGW_NAME_AW ( MessageBoxEx )
#define MessageBoxIndirect __MINGW_NAME_AW ( MessageBoxIndirect )
#define ModifyMenu __MINGW_NAME_AW ( ModifyMenu )
#define MoveFile __MINGW_NAME_AW ( MoveFile )
#define MoveFileEx __MINGW_NAME_AW ( MoveFileEx )
#define MoveFileWithProgress __MINGW_NAME_AW ( MoveFileWithProgress )
#define MoveMemory RtlMoveMemory
#define MultinetGetConnectionPerformance __MINGW_NAME_AW ( MultinetGetConnectionPerformance )
#define Multiply128 _mul128
#define MultiplyHigh __mulh
#define NAME_FLAGS_MASK (135)
#define NAP_E_CONFLICTING_ID _HRESULT_TYPEDEF_ ( 0x80270003 )
#define NAP_E_ENTITY_DISABLED _HRESULT_TYPEDEF_ ( 0x8027000E )
#define NAP_E_ID_NOT_FOUND _HRESULT_TYPEDEF_ ( 0x8027000A )
#define NAP_E_INVALID_PACKET _HRESULT_TYPEDEF_ ( 0x80270001 )
#define NAP_E_MAXSIZE_TOO_SMALL _HRESULT_TYPEDEF_ ( 0x8027000B )
#define NAP_E_MISMATCHED_ID _HRESULT_TYPEDEF_ ( 0x80270008 )
#define NAP_E_MISSING_SOH _HRESULT_TYPEDEF_ ( 0x80270002 )
#define NAP_E_NETSH_GROUPPOLICY_ERROR _HRESULT_TYPEDEF_ ( 0x8027000F )
#define NAP_E_NOT_INITIALIZED _HRESULT_TYPEDEF_ ( 0x80270007 )
#define NAP_E_NOT_PENDING _HRESULT_TYPEDEF_ ( 0x80270009 )
#define NAP_E_NOT_REGISTERED _HRESULT_TYPEDEF_ ( 0x80270006 )
#define NAP_E_NO_CACHED_SOH _HRESULT_TYPEDEF_ ( 0x80270004 )
#define NAP_E_SERVICE_NOT_RUNNING _HRESULT_TYPEDEF_ ( 0x8027000C )
#define NAP_E_SHV_CONFIG_EXISTED _HRESULT_TYPEDEF_ ( 0x80270011 )
#define NAP_E_SHV_CONFIG_NOT_FOUND _HRESULT_TYPEDEF_ ( 0x80270012 )
#define NAP_E_SHV_TIMEOUT _HRESULT_TYPEDEF_ ( 0x80270013 )
#define NAP_E_STILL_BOUND _HRESULT_TYPEDEF_ ( 0x80270005 )
#define NAP_E_TOO_MANY_CALLS _HRESULT_TYPEDEF_ ( 0x80270010 )
#define NAP_S_CERT_ALREADY_PRESENT _HRESULT_TYPEDEF_ ( 0x0027000D )
#define NCBACTION (119)
#define NCBADDGRNAME (54)
#define NCBADDNAME (48)
#define NCBASTAT (51)
#define NCBCALL (16)
#define NCBCANCEL (53)
#define NCBCHAINSEND (23)
#define NCBCHAINSENDNA (114)
#define NCBDELNAME (49)
#define NCBDGRECV (33)
#define NCBDGRECVBC (35)
#define NCBDGSEND (32)
#define NCBDGSENDBC (34)
#define NCBENUM (55)
#define NCBFINDNAME (120)
#define NCBHANGUP (18)
#define NCBLANSTALERT (115)
#define NCBLISTEN (17)
#define NCBNAMSZ (16)
#define NCBRECV (21)
#define NCBRECVANY (22)
#define NCBRESET (50)
#define NCBSEND (20)
#define NCBSENDNA (113)
#define NCBSSTAT (52)
#define NCBTRACE (121)
#define NCBUNLINK (112)
#define NCB_INCLUDED 
#define NCB_POST void CALLBACK
#define NCRYPTBUFFER_CERT_BLOB (47)
#define NCRYPTBUFFER_DATA (1)
#define NCRYPTBUFFER_EMPTY (0)
#define NCRYPTBUFFER_PKCS_ALG_ID (43)
#define NCRYPTBUFFER_PKCS_ALG_OID (41)
#define NCRYPTBUFFER_PKCS_ALG_PARAM (42)
#define NCRYPTBUFFER_PKCS_ATTRS (44)
#define NCRYPTBUFFER_PKCS_KEY_NAME (45)
#define NCRYPTBUFFER_PKCS_OID (40)
#define NCRYPTBUFFER_PKCS_SECRET (46)
#define NCRYPTBUFFER_PROTECTION_DESCRIPTOR_STRING (3)
#define NCRYPTBUFFER_PROTECTION_FLAGS (4)
#define NCRYPTBUFFER_SSL_CLEAR_KEY (23)
#define NCRYPTBUFFER_SSL_CLIENT_RANDOM (20)
#define NCRYPTBUFFER_SSL_HIGHEST_VERSION (22)
#define NCRYPTBUFFER_SSL_KEY_ARG_DATA (24)
#define NCRYPTBUFFER_SSL_SERVER_RANDOM (21)
#define NCRYPTBUFFER_VERSION (0)
#define NCRYPT_ALGORITHM_GROUP_PROPERTY "Algorithm Group"
#define NCRYPT_ALGORITHM_PROPERTY "Algorithm Name"
#define NCRYPT_ALLOW_ALL_USAGES (16777215)
#define NCRYPT_ALLOW_ARCHIVING_FLAG (4)
#define NCRYPT_ALLOW_DECRYPT_FLAG (1)
#define NCRYPT_ALLOW_EXPORT_FLAG (1)
#define NCRYPT_ALLOW_KEY_AGREEMENT_FLAG (4)
#define NCRYPT_ALLOW_PLAINTEXT_ARCHIVING_FLAG (8)
#define NCRYPT_ALLOW_PLAINTEXT_EXPORT_FLAG (2)
#define NCRYPT_ALLOW_SIGNING_FLAG (2)
#define NCRYPT_ASSOCIATED_ECDH_KEY "SmartCardAssociatedECDHKey"
#define NCRYPT_ASYMMETRIC_ENCRYPTION_INTERFACE BCRYPT_ASYMMETRIC_ENCRYPTION_INTERFACE
#define NCRYPT_ASYMMETRIC_ENCRYPTION_OPERATION BCRYPT_ASYMMETRIC_ENCRYPTION_OPERATION
#define NCRYPT_BLOCK_LENGTH_PROPERTY "Block Length"
#define NCRYPT_CERTIFICATE_PROPERTY "SmartCardKeyCertificate"
#define NCRYPT_CIPHER_INTERFACE BCRYPT_CIPHER_INTERFACE
#define NCRYPT_CIPHER_OPERATION BCRYPT_CIPHER_OPERATION
#define NCRYPT_DH_ALGORITHM BCRYPT_DH_ALGORITHM
#define NCRYPT_DH_ALGORITHM_GROUP NCRYPT_DH_ALGORITHM
#define NCRYPT_DH_PARAMETERS_PROPERTY BCRYPT_DH_PARAMETERS
#define NCRYPT_DO_NOT_FINALIZE_FLAG (1024)
#define NCRYPT_DSA_ALGORITHM BCRYPT_DSA_ALGORITHM
#define NCRYPT_DSA_ALGORITHM_GROUP NCRYPT_DSA_ALGORITHM
#define NCRYPT_ECDH_ALGORITHM_GROUP "ECDH"
#define NCRYPT_ECDH_P256_ALGORITHM BCRYPT_ECDH_P256_ALGORITHM
#define NCRYPT_ECDH_P384_ALGORITHM BCRYPT_ECDH_P384_ALGORITHM
#define NCRYPT_ECDH_P521_ALGORITHM BCRYPT_ECDH_P521_ALGORITHM
#define NCRYPT_ECDSA_ALGORITHM_GROUP "ECDSA"
#define NCRYPT_ECDSA_P256_ALGORITHM BCRYPT_ECDSA_P256_ALGORITHM
#define NCRYPT_ECDSA_P384_ALGORITHM BCRYPT_ECDSA_P384_ALGORITHM
#define NCRYPT_ECDSA_P521_ALGORITHM BCRYPT_ECDSA_P521_ALGORITHM
#define NCRYPT_EXPORT_LEGACY_FLAG (2048)
#define NCRYPT_EXPORT_POLICY_PROPERTY "Export Policy"
#define NCRYPT_HASH_INTERFACE BCRYPT_HASH_INTERFACE
#define NCRYPT_HASH_OPERATION BCRYPT_HASH_OPERATION
#define NCRYPT_IMPL_HARDWARE_FLAG (1)
#define NCRYPT_IMPL_HARDWARE_RNG_FLAG (16)
#define NCRYPT_IMPL_REMOVABLE_FLAG (8)
#define NCRYPT_IMPL_SOFTWARE_FLAG (2)
#define NCRYPT_IMPL_TYPE_PROPERTY "Impl Type"
#define NCRYPT_KEY_STORAGE_ALGORITHM "KEY_STORAGE"
#define NCRYPT_KEY_STORAGE_INTERFACE (65537)
#define NCRYPT_KEY_STORAGE_INTERFACE_VERSION BCRYPT_MAKE_INTERFACE_VERSION ( 1 , 0 )
#define NCRYPT_KEY_STORAGE_INTERFACE_VERSION_2 BCRYPT_MAKE_INTERFACE_VERSION ( 2 , 0 )
#define NCRYPT_KEY_TYPE_PROPERTY "Key Type"
#define NCRYPT_KEY_USAGE_PROPERTY "Key Usage"
#define NCRYPT_LAST_MODIFIED_PROPERTY "Modified"
#define NCRYPT_LENGTHS_PROPERTY "Lengths"
#define NCRYPT_LENGTH_PROPERTY "Length"
#define NCRYPT_MACHINE_KEY_FLAG (32)
#define NCRYPT_MAX_ALG_ID_LENGTH (512)
#define NCRYPT_MAX_KEY_NAME_LENGTH (512)
#define NCRYPT_MAX_NAME_LENGTH_PROPERTY "Max Name Length"
#define NCRYPT_MAX_PROPERTY_DATA (1048576)
#define NCRYPT_MAX_PROPERTY_NAME (64)
#define NCRYPT_MD2_ALGORITHM BCRYPT_MD2_ALGORITHM
#define NCRYPT_MD4_ALGORITHM BCRYPT_MD4_ALGORITHM
#define NCRYPT_MD5_ALGORITHM BCRYPT_MD5_ALGORITHM
#define NCRYPT_NAME_PROPERTY "Name"
#define NCRYPT_NO_KEY_VALIDATION BCRYPT_NO_KEY_VALIDATION
#define NCRYPT_NO_PADDING_FLAG (1)
#define NCRYPT_OPAQUETRANSPORT_BLOB "OpaqueTransport"
#define NCRYPT_OVERWRITE_KEY_FLAG (128)
#define NCRYPT_PAD_OAEP_FLAG (4)
#define NCRYPT_PAD_PKCS1_FLAG (2)
#define NCRYPT_PAD_PSS_FLAG (8)
#define NCRYPT_PERSIST_FLAG (2147483648u)
#define NCRYPT_PERSIST_ONLY_FLAG (1073741824)
#define NCRYPT_PIN_PROMPT_PROPERTY "SmartCardPinPrompt"
#define NCRYPT_PIN_PROPERTY "SmartCardPin"
#define NCRYPT_PKCS7_ENVELOPE_BLOB "PKCS7_ENVELOPE"
#define NCRYPT_PKCS8_PRIVATE_KEY_BLOB "PKCS8_PRIVATEKEY"
#define NCRYPT_PROVIDER_HANDLE_PROPERTY "Provider Handle"
#define NCRYPT_READER_PROPERTY "SmartCardReader"
#define NCRYPT_REGISTER_NOTIFY_FLAG (1)
#define NCRYPT_RNG_OPERATION BCRYPT_RNG_OPERATION
#define NCRYPT_ROOT_CERTSTORE_PROPERTY "SmartcardRootCertStore"
#define NCRYPT_RSA_ALGORITHM BCRYPT_RSA_ALGORITHM
#define NCRYPT_RSA_ALGORITHM_GROUP NCRYPT_RSA_ALGORITHM
#define NCRYPT_RSA_SIGN_ALGORITHM BCRYPT_RSA_SIGN_ALGORITHM
#define NCRYPT_SCARD_PIN_ID "SmartCardPinId"
#define NCRYPT_SCARD_PIN_INFO "SmartCardPinInfo"
#define NCRYPT_SCHANNEL_INTERFACE (65538)
#define NCRYPT_SCHANNEL_SIGNATURE_INTERFACE (65539)
#define NCRYPT_SECRET_AGREEMENT_INTERFACE BCRYPT_SECRET_AGREEMENT_INTERFACE
#define NCRYPT_SECRET_AGREEMENT_OPERATION BCRYPT_SECRET_AGREEMENT_OPERATION
#define NCRYPT_SECURE_PIN_PROPERTY "SmartCardSecurePin"
#define NCRYPT_SECURITY_DESCR_PROPERTY "Security Descr"
#define NCRYPT_SECURITY_DESCR_SUPPORT_PROPERTY "Security Descr Support"
#define NCRYPT_SHA1_ALGORITHM BCRYPT_SHA1_ALGORITHM
#define NCRYPT_SHA256_ALGORITHM BCRYPT_SHA256_ALGORITHM
#define NCRYPT_SHA384_ALGORITHM BCRYPT_SHA384_ALGORITHM
#define NCRYPT_SHA512_ALGORITHM BCRYPT_SHA512_ALGORITHM
#define NCRYPT_SIGNATURE_INTERFACE BCRYPT_SIGNATURE_INTERFACE
#define NCRYPT_SIGNATURE_OPERATION BCRYPT_SIGNATURE_OPERATION
#define NCRYPT_SILENT_FLAG (64)
#define NCRYPT_SMARTCARD_GUID_PROPERTY "SmartCardGuid"
#define NCRYPT_UI_FORCE_HIGH_PROTECTION_FLAG (2)
#define NCRYPT_UI_POLICY_PROPERTY "UI Policy"
#define NCRYPT_UI_PROTECT_KEY_FLAG (1)
#define NCRYPT_UNIQUE_NAME_PROPERTY "Unique Name"
#define NCRYPT_UNREGISTER_NOTIFY_FLAG (2)
#define NCRYPT_USER_CERTSTORE_PROPERTY "SmartCardUserCertStore"
#define NCRYPT_USE_CONTEXT_PROPERTY "Use Context"
#define NCRYPT_USE_COUNT_ENABLED_PROPERTY "Enabled Use Count"
#define NCRYPT_USE_COUNT_PROPERTY "Use Count"
#define NCRYPT_VERSION_PROPERTY "Version"
#define NCRYPT_WINDOW_HANDLE_PROPERTY "HWND Handle"
#define NCRYPT_WRITE_KEY_TO_LEGACY_STORE_FLAG (512)
#define NDRSContextValue(hContext) ( & ( hContext ) -> userContext )
#define NDR_ASCII_CHAR __MSABI_LONG ( 0X00000000U )
#define NDR_BIG_ENDIAN __MSABI_LONG ( 0X00000000U )
#define NDR_CHAR_REP_MASK __MSABI_LONG ( 0X0000000FU )
#define NDR_EBCDIC_CHAR __MSABI_LONG ( 0X00000001U )
#define NDR_FLOAT_REP_MASK __MSABI_LONG ( 0X0000FF00U )
#define NDR_IBM_FLOAT __MSABI_LONG ( 0X00000300U )
#define NDR_IEEE_FLOAT __MSABI_LONG ( 0X00000000U )
#define NDR_INT_REP_MASK __MSABI_LONG ( 0X000000F0U )
#define NDR_LITTLE_ENDIAN __MSABI_LONG ( 0X00000010U )
#define NDR_LOCAL_DATA_REPRESENTATION __MSABI_LONG ( 0X00000010U )
#define NDR_LOCAL_ENDIAN NDR_LITTLE_ENDIAN
#define NDR_SHAREABLE __inline
#define NDR_VAX_FLOAT __MSABI_LONG ( 0X00000100U )
#define NEAR 
#define NETINFO_DISKRED (4)
#define NETINFO_DLL16 (1)
#define NETINFO_PRINTERRED (8)
#define NETPROPERTY_PERSISTENT (1)
#define NETSCAPE_SIGN_CA_CERT_TYPE (1)
#define NETSCAPE_SIGN_CERT_TYPE (16)
#define NETSCAPE_SMIME_CA_CERT_TYPE (2)
#define NETSCAPE_SMIME_CERT_TYPE (32)
#define NETSCAPE_SSL_CA_CERT_TYPE (4)
#define NETSCAPE_SSL_CLIENT_AUTH_CERT_TYPE (128)
#define NETSCAPE_SSL_SERVER_AUTH_CERT_TYPE (64)
#define NETWORKSERVICE_LUID { 0x3e4 , 0x0 }
#define NEWFRAME (1)
#define NEWTRANSPARENT (3)
#define NEXTBAND (3)
#define NEXTRAWINPUTBLOCK(ptr) ( ( PRAWINPUT ) RAWINPUT_ALIGN ( ( ULONG_PTR ) ( ( PBYTE ) ( ptr ) + ( ptr ) -> header . dwSize ) ) )
#define NFR_ANSI (1)
#define NFR_UNICODE (2)
#define NF_QUERY (3)
#define NF_REQUERY (4)
#define NIF_GUID (32)
#define NIF_ICON (2)
#define NIF_INFO (16)
#define NIF_MESSAGE (1)
#define NIF_STATE (8)
#define NIF_TIP (4)
#define NIIF_ERROR (3)
#define NIIF_ICON_MASK (15)
#define NIIF_INFO (1)
#define NIIF_NONE (0)
#define NIIF_NOSOUND (16)
#define NIIF_USER (4)
#define NIIF_WARNING (2)
#define NIM_ADD (0)
#define NIM_DELETE (2)
#define NIM_MODIFY (1)
#define NIM_SETFOCUS (3)
#define NIM_SETVERSION (4)
#define NINF_KEY (1)
#define NIN_BALLOONHIDE (1027)
#define NIN_BALLOONSHOW (1026)
#define NIN_BALLOONTIMEOUT (1028)
#define NIN_BALLOONUSERCLICK (1029)
#define NIN_KEYSELECT (1025)
#define NIN_SELECT (1024)
#define NIS_HIDDEN (1)
#define NIS_SHAREDICON (2)
#define NI_CHANGECANDIDATELIST (19)
#define NI_CLOSECANDIDATE (17)
#define NI_COMPOSITIONSTR (21)
#define NI_FINALIZECONVERSIONRESULT (20)
#define NI_IMEMENUSELECTED (24)
#define NI_OPENCANDIDATE (16)
#define NI_SELECTCANDIDATESTR (18)
#define NI_SETCANDIDATE_PAGESIZE (23)
#define NI_SETCANDIDATE_PAGESTART (22)
#define NLS_ALPHANUMERIC (0)
#define NLS_DBCSCHAR (65536)
#define NLS_HIRAGANA (262144)
#define NLS_IME_CONVERSION (8388608)
#define NLS_IME_DISABLE (536870912)
#define NLS_KATAKANA (131072)
#define NLS_ROMAN (4194304)
#define NLS_VALID_LOCALE_MASK (1048575)
#define NMPWAIT_NOWAIT (1)
#define NMPWAIT_USE_DEFAULT_WAIT (0)
#define NMPWAIT_WAIT_FOREVER (4294967295u)
#define NOERROR (0)
#define NOMIRRORBITMAP ( DWORD ) 0x80000000
#define NONANTIALIASED_QUALITY (3)
#define NONZEROLHND (2)
#define NONZEROLPTR (0)
#define NON_PAGED_DEBUG_SIGNATURE (18766)
#define NOPARITY (0)
#define NOP_FUNCTION ( void ) 0
#define NORMAL_PRINT (0)
#define NORMAL_PRIORITY_CLASS (32)
#define NORM_IGNORECASE (1)
#define NORM_IGNOREKANATYPE (65536)
#define NORM_IGNORENONSPACE (2)
#define NORM_IGNORESYMBOLS (4)
#define NORM_IGNOREWIDTH (131072)
#define NORM_LINGUISTIC_CASING (134217728)
#define NOTIFYICONDATAA_V1_SIZE FIELD_OFFSET ( NOTIFYICONDATAA , szTip [ 64 ] )
#define NOTIFYICONDATAA_V2_SIZE FIELD_OFFSET ( NOTIFYICONDATAA , guidItem )
#define NOTIFYICONDATAA_V3_SIZE FIELD_OFFSET ( NOTIFYICONDATAA , hBalloonIcon )
#define NOTIFYICONDATAW_V1_SIZE FIELD_OFFSET ( NOTIFYICONDATAW , szTip [ 64 ] )
#define NOTIFYICONDATAW_V2_SIZE FIELD_OFFSET ( NOTIFYICONDATAW , guidItem )
#define NOTIFYICONDATAW_V3_SIZE FIELD_OFFSET ( NOTIFYICONDATAW , hBalloonIcon )
#define NOTIFYICONDATA_V1_SIZE __MINGW_NAME_AW_EXT ( NOTIFYICONDATA , _V1_SIZE )
#define NOTIFYICONDATA_V2_SIZE __MINGW_NAME_AW_EXT ( NOTIFYICONDATA , _V2_SIZE )
#define NOTIFYICONDATA_V3_SIZE __MINGW_NAME_AW_EXT ( NOTIFYICONDATA , _V3_SIZE )
#define NOTIFYICON_VERSION (3)
#define NOTSRCCOPY ( DWORD ) 0x00330008
#define NOTSRCERASE ( DWORD ) 0x001100A6
#define NO_ERROR __MSABI_LONG ( 0 )
#define NO_PRIORITY (0)
#define NO_PROPAGATE_INHERIT_ACE (4)
#define NRC_ACTSES (15)
#define NRC_BADDR (7)
#define NRC_BRIDGE (35)
#define NRC_BUFLEN (1)
#define NRC_CANCEL (38)
#define NRC_CANOCCR (36)
#define NRC_CMDCAN (11)
#define NRC_CMDTMO (5)
#define NRC_DUPENV (48)
#define NRC_DUPNAME (13)
#define NRC_ENVNOTDEF (52)
#define NRC_GOODRET (0)
#define NRC_IFBUSY (33)
#define NRC_ILLCMD (3)
#define NRC_ILLNN (19)
#define NRC_INCOMP (6)
#define NRC_INUSE (22)
#define NRC_INVADDRESS (57)
#define NRC_INVDDID (59)
#define NRC_LOCKFAIL (60)
#define NRC_LOCTFUL (17)
#define NRC_MAXAPPS (54)
#define NRC_NAMCONF (25)
#define NRC_NAMERR (23)
#define NRC_NAMTFUL (14)
#define NRC_NOCALL (20)
#define NRC_NORES (9)
#define NRC_NORESOURCES (56)
#define NRC_NOSAPS (55)
#define NRC_NOWILD (21)
#define NRC_OPENERR (63)
#define NRC_OSRESNOTAV (53)
#define NRC_PENDING (255)
#define NRC_REMTFUL (18)
#define NRC_SABORT (24)
#define NRC_SCLOSED (10)
#define NRC_SNUMOUT (8)
#define NRC_SYSTEM (64)
#define NRC_TOOMANY (34)
#define NT351_INTERFACE_SIZE (64)
#define NTAPI __stdcall
#define NTAPI_INLINE NTAPI
#define NTE_BAD_ALGID _HRESULT_TYPEDEF_ ( 0x80090008 )
#define NTE_BAD_DATA _HRESULT_TYPEDEF_ ( 0x80090005 )
#define NTE_BAD_FLAGS _HRESULT_TYPEDEF_ ( 0x80090009 )
#define NTE_BAD_HASH _HRESULT_TYPEDEF_ ( 0x80090002 )
#define NTE_BAD_HASH_STATE _HRESULT_TYPEDEF_ ( 0x8009000C )
#define NTE_BAD_KEY _HRESULT_TYPEDEF_ ( 0x80090003 )
#define NTE_BAD_KEYSET _HRESULT_TYPEDEF_ ( 0x80090016 )
#define NTE_BAD_KEYSET_PARAM _HRESULT_TYPEDEF_ ( 0x8009001F )
#define NTE_BAD_KEY_STATE _HRESULT_TYPEDEF_ ( 0x8009000B )
#define NTE_BAD_LEN _HRESULT_TYPEDEF_ ( 0x80090004 )
#define NTE_BAD_PROVIDER _HRESULT_TYPEDEF_ ( 0x80090013 )
#define NTE_BAD_PROV_TYPE _HRESULT_TYPEDEF_ ( 0x80090014 )
#define NTE_BAD_PUBLIC_KEY _HRESULT_TYPEDEF_ ( 0x80090015 )
#define NTE_BAD_SIGNATURE _HRESULT_TYPEDEF_ ( 0x80090006 )
#define NTE_BAD_TYPE _HRESULT_TYPEDEF_ ( 0x8009000A )
#define NTE_BAD_UID _HRESULT_TYPEDEF_ ( 0x80090001 )
#define NTE_BAD_VER _HRESULT_TYPEDEF_ ( 0x80090007 )
#define NTE_DOUBLE_ENCRYPT _HRESULT_TYPEDEF_ ( 0x80090012 )
#define NTE_EXISTS _HRESULT_TYPEDEF_ ( 0x8009000F )
#define NTE_FAIL _HRESULT_TYPEDEF_ ( 0x80090020 )
#define NTE_FIXEDPARAMETER _HRESULT_TYPEDEF_ ( 0x80090025 )
#define NTE_KEYSET_ENTRY_BAD _HRESULT_TYPEDEF_ ( 0x8009001A )
#define NTE_KEYSET_NOT_DEF _HRESULT_TYPEDEF_ ( 0x80090019 )
#define NTE_NOT_FOUND _HRESULT_TYPEDEF_ ( 0x80090011 )
#define NTE_NO_KEY _HRESULT_TYPEDEF_ ( 0x8009000D )
#define NTE_NO_MEMORY _HRESULT_TYPEDEF_ ( 0x8009000E )
#define NTE_OP_OK (0)
#define NTE_PERM _HRESULT_TYPEDEF_ ( 0x80090010 )
#define NTE_PROVIDER_DLL_FAIL _HRESULT_TYPEDEF_ ( 0x8009001D )
#define NTE_PROV_DLL_NOT_FOUND _HRESULT_TYPEDEF_ ( 0x8009001E )
#define NTE_PROV_TYPE_ENTRY_BAD _HRESULT_TYPEDEF_ ( 0x80090018 )
#define NTE_PROV_TYPE_NOT_DEF _HRESULT_TYPEDEF_ ( 0x80090017 )
#define NTE_PROV_TYPE_NO_MATCH _HRESULT_TYPEDEF_ ( 0x8009001B )
#define NTE_SIGNATURE_FILE_BAD _HRESULT_TYPEDEF_ ( 0x8009001C )
#define NTE_SILENT_CONTEXT _HRESULT_TYPEDEF_ ( 0x80090022 )
#define NTE_SYS_ERR _HRESULT_TYPEDEF_ ( 0x80090021 )
#define NTE_TEMPORARY_PROFILE _HRESULT_TYPEDEF_ ( 0x80090024 )
#define NTE_TOKEN_KEYSET_STORAGE_FULL _HRESULT_TYPEDEF_ ( 0x80090023 )
#define NTM_BOLD __MSABI_LONG ( 0x00000020 )
#define NTM_DSIG (2097152)
#define NTM_ITALIC __MSABI_LONG ( 0x00000001 )
#define NTM_MULTIPLEMASTER (524288)
#define NTM_NONNEGATIVE_AC (65536)
#define NTM_PS_OPENTYPE (131072)
#define NTM_REGULAR __MSABI_LONG ( 0x00000040 )
#define NTM_TT_OPENTYPE (262144)
#define NTM_TYPE1 (1048576)
#define NTSYSAPI DECLSPEC_IMPORT
#define NTSYSCALLAPI DECLSPEC_IMPORT
#define NULL ( ( void * ) 0 )
#define NULLREGION (1)
#define NULL_BRUSH (5)
#define NULL_PEN (8)
#define NUMA_NO_PREFERRED_NODE (-1)
#define NUMBRUSHES (16)
#define NUMCOLORS (24)
#define NUMFONTS (22)
#define NUMLOCK_ON (32)
#define NUMMARKERS (20)
#define NUMPENS (18)
#define NUMRESERVED (106)
#define NUM_DISCHARGE_POLICIES (4)
#define N_BTMASK (15)
#define N_BTSHFT (4)
#define N_TMASK (48)
#define N_TMASK1 (192)
#define N_TMASK2 (240)
#define N_TSHIFT (2)
#define NdrFcLong(s) ( unsigned char ) ( s & 0xff ) , ( unsigned char ) ( ( s & 0x0000ff00 ) >> 8 ) , ( unsigned char ) ( ( s & 0x00ff0000 ) >> 16 ) , ( unsigned char ) ( s >> 24 )
#define NdrFcShort(s) ( unsigned char ) ( s & 0xff ) , ( unsigned char ) ( s >> 8 )
#define NdrFieldOffset(s, f) ( LONG_PTR ) ( & ( ( ( s * ) 0 ) -> f ) )
#define NdrFieldPad(s, f, p, t) ( ( unsigned __LONG32 ) ( NdrFieldOffset ( s , f ) - NdrFieldOffset ( s , p ) ) - sizeof ( t ) )
#define NdrMarshCCtxtHdl(pc, p) ( NDRCContextMarshall ( ( NDR_CCONTEXT ) pc , p ) , p + 20 )
#define NdrMarshConfStringHdr(p, s, l) ( _midl_ma4 ( p , unsigned __LONG32 ) = s , _midl_ma4 ( p , unsigned __LONG32 ) = 0 , _midl_ma4 ( p , unsigned __LONG32 ) = l )
#define NdrMarshSCtxtHdl(pc, p, rd) ( NdrSContextMarshall ( ( NDR_SCONTEXT ) pc , p , ( NDR_RUNDOWN ) rd ) )
#define NdrUnMarshCCtxtHdl(pc, p, h, drep) ( NDRCContextUnmarshall ( ( NDR_CCONTEXT ) pc , h , p , drep ) , p + 20 )
#define NdrUnMarshConfStringHdr(p, s, l) ( s = _midl_unma4 ( p , unsigned __LONG32 ) , ( _midl_addp ( p , 4 ) ) , ( l = _midl_unma4 ( p , unsigned __LONG32 ) ) )
#define NdrUnMarshSCtxtHdl(pc, p, drep) ( pc = NdrSContextUnMarshall ( p , drep ) )
#define NeedCurrentDirectoryForExePath __MINGW_NAME_AW ( NeedCurrentDirectoryForExePath )
#define OBJECT_INHERIT_ACE (1)
#define OBJID_ALERT ( ( LONG ) 0xFFFFFFF6 )
#define OBJID_CARET ( ( LONG ) 0xFFFFFFF8 )
#define OBJID_CLIENT ( ( LONG ) 0xFFFFFFFC )
#define OBJID_CURSOR ( ( LONG ) 0xFFFFFFF7 )
#define OBJID_HSCROLL ( ( LONG ) 0xFFFFFFFA )
#define OBJID_MENU ( ( LONG ) 0xFFFFFFFD )
#define OBJID_NATIVEOM ( ( LONG ) 0xFFFFFFF0 )
#define OBJID_QUERYCLASSNAMEIDX ( ( LONG ) 0xFFFFFFF4 )
#define OBJID_SIZEGRIP ( ( LONG ) 0xFFFFFFF9 )
#define OBJID_SOUND ( ( LONG ) 0xFFFFFFF5 )
#define OBJID_SYSMENU ( ( LONG ) 0xFFFFFFFF )
#define OBJID_TITLEBAR ( ( LONG ) 0xFFFFFFFE )
#define OBJID_VSCROLL ( ( LONG ) 0xFFFFFFFB )
#define OBJID_WINDOW ( ( LONG ) 0x00000000 )
#define OBJ_BITMAP (7)
#define OBJ_BRUSH (2)
#define OBJ_COLORSPACE (14)
#define OBJ_DC (3)
#define OBJ_ENHMETADC (12)
#define OBJ_ENHMETAFILE (13)
#define OBJ_EXTPEN (11)
#define OBJ_FONT (6)
#define OBJ_MEMDC (10)
#define OBJ_METADC (4)
#define OBJ_METAFILE (9)
#define OBJ_PAL (5)
#define OBJ_PEN (1)
#define OBJ_REGION (8)
#define OBSOLETE_DISK_GET_WRITE_CACHE_STATE CTL_CODE ( IOCTL_DISK_BASE , 0x0037 , METHOD_BUFFERED , FILE_READ_ACCESS )
#define OBSOLETE_IOCTL_STORAGE_RESET_BUS CTL_CODE ( IOCTL_STORAGE_BASE , 0x0400 , METHOD_BUFFERED , FILE_READ_ACCESS | FILE_WRITE_ACCESS )
#define OBSOLETE_IOCTL_STORAGE_RESET_DEVICE CTL_CODE ( IOCTL_STORAGE_BASE , 0x0401 , METHOD_BUFFERED , FILE_READ_ACCESS | FILE_WRITE_ACCESS )
#define OCSP_BASIC_BY_KEY_RESPONDER_ID (2)
#define OCSP_BASIC_BY_NAME_RESPONDER_ID (1)
#define OCSP_BASIC_GOOD_CERT_STATUS (0)
#define OCSP_BASIC_RESPONSE ( ( LPCSTR ) 69 )
#define OCSP_BASIC_RESPONSE_V1 (0)
#define OCSP_BASIC_REVOKED_CERT_STATUS (1)
#define OCSP_BASIC_SIGNED_RESPONSE ( ( LPCSTR ) 68 )
#define OCSP_BASIC_UNKNOWN_CERT_STATUS (2)
#define OCSP_INTERNAL_ERROR_RESPONSE (2)
#define OCSP_MALFORMED_REQUEST_RESPONSE (1)
#define OCSP_REQUEST ( ( LPCSTR ) 66 )
#define OCSP_REQUEST_V1 (0)
#define OCSP_RESPONSE ( ( LPCSTR ) 67 )
#define OCSP_SIGNED_REQUEST ( ( LPCSTR ) 65 )
#define OCSP_SIG_REQUIRED_RESPONSE (5)
#define OCSP_SUCCESSFUL_RESPONSE (0)
#define OCSP_TRY_LATER_RESPONSE (3)
#define OCSP_UNAUTHORIZED_RESPONSE (6)
#define ODA_DRAWENTIRE (1)
#define ODA_FOCUS (4)
#define ODA_SELECT (2)
#define ODDPARITY (1)
#define ODS_CHECKED (8)
#define ODS_COMBOBOXEDIT (4096)
#define ODS_DEFAULT (32)
#define ODS_DISABLED (4)
#define ODS_FOCUS (16)
#define ODS_GRAYED (2)
#define ODS_HOTLIGHT (64)
#define ODS_INACTIVE (128)
#define ODS_NOACCEL (256)
#define ODS_NOFOCUSRECT (512)
#define ODS_SELECTED (1)
#define ODT_BUTTON (4)
#define ODT_COMBOBOX (3)
#define ODT_LISTBOX (2)
#define ODT_MENU (1)
#define ODT_STATIC (5)
#define OEM_CHARSET (255)
#define OEM_FIXED_FONT (10)
#define OFFLINE_STATUS_INCOMPLETE (4)
#define OFFLINE_STATUS_LOCAL (1)
#define OFFLINE_STATUS_REMOTE (2)
#define OFN_ALLOWMULTISELECT (512)
#define OFN_CREATEPROMPT (8192)
#define OFN_DONTADDTORECENT (33554432)
#define OFN_ENABLEHOOK (32)
#define OFN_ENABLEINCLUDENOTIFY (4194304)
#define OFN_ENABLESIZING (8388608)
#define OFN_ENABLETEMPLATE (64)
#define OFN_ENABLETEMPLATEHANDLE (128)
#define OFN_EXPLORER (524288)
#define OFN_EXTENSIONDIFFERENT (1024)
#define OFN_EX_NOPLACESBAR (1)
#define OFN_FILEMUSTEXIST (4096)
#define OFN_FORCESHOWHIDDEN (268435456)
#define OFN_HIDEREADONLY (4)
#define OFN_LONGNAMES (2097152)
#define OFN_NOCHANGEDIR (8)
#define OFN_NODEREFERENCELINKS (1048576)
#define OFN_NOLONGNAMES (262144)
#define OFN_NONETWORKBUTTON (131072)
#define OFN_NOREADONLYRETURN (32768)
#define OFN_NOTESTFILECREATE (65536)
#define OFN_NOVALIDATE (256)
#define OFN_OVERWRITEPROMPT (2)
#define OFN_PATHMUSTEXIST (2048)
#define OFN_READONLY (1)
#define OFN_SHAREAWARE (16384)
#define OFN_SHAREFALLTHROUGH (2)
#define OFN_SHARENOWARN (1)
#define OFN_SHAREWARN (0)
#define OFN_SHOWHELP (16)
#define OFS_MAXPATHNAME (128)
#define OF_CANCEL (2048)
#define OF_CREATE (4096)
#define OF_DELETE (512)
#define OF_EXIST (16384)
#define OF_PARSE (256)
#define OF_PROMPT (8192)
#define OF_READ (0)
#define OF_READWRITE (2)
#define OF_REOPEN (32768)
#define OF_SHARE_COMPAT (0)
#define OF_SHARE_DENY_NONE (64)
#define OF_SHARE_DENY_READ (48)
#define OF_SHARE_DENY_WRITE (32)
#define OF_SHARE_EXCLUSIVE (16)
#define OF_VERIFY (1024)
#define OF_WRITE (1)
#define OLDFONTENUMPROC __MINGW_NAME_AW ( OLDFONTENUMPROC )
#define OLEOBJ_E_FIRST __MSABI_LONG ( 0x80040180 )
#define OLEOBJ_E_INVALIDVERB _HRESULT_TYPEDEF_ ( 0x80040181 )
#define OLEOBJ_E_LAST __MSABI_LONG ( 0x8004018F )
#define OLEOBJ_E_NOVERBS _HRESULT_TYPEDEF_ ( 0x80040180 )
#define OLEOBJ_S_CANNOT_DOVERB_NOW _HRESULT_TYPEDEF_ ( 0x00040181 )
#define OLEOBJ_S_FIRST __MSABI_LONG ( 0x00040180 )
#define OLEOBJ_S_INVALIDHWND _HRESULT_TYPEDEF_ ( 0x00040182 )
#define OLEOBJ_S_INVALIDVERB _HRESULT_TYPEDEF_ ( 0x00040180 )
#define OLEOBJ_S_LAST __MSABI_LONG ( 0x0004018F )
#define OLESTR(str) L ## str
#define OLE_E_ADVF _HRESULT_TYPEDEF_ ( 0x80040001 )
#define OLE_E_ADVISENOTSUPPORTED _HRESULT_TYPEDEF_ ( 0x80040003 )
#define OLE_E_BLANK _HRESULT_TYPEDEF_ ( 0x80040007 )
#define OLE_E_CANTCONVERT _HRESULT_TYPEDEF_ ( 0x80040011 )
#define OLE_E_CANT_BINDTOSOURCE _HRESULT_TYPEDEF_ ( 0x8004000A )
#define OLE_E_CANT_GETMONIKER _HRESULT_TYPEDEF_ ( 0x80040009 )
#define OLE_E_CLASSDIFF _HRESULT_TYPEDEF_ ( 0x80040008 )
#define OLE_E_ENUM_NOMORE _HRESULT_TYPEDEF_ ( 0x80040002 )
#define OLE_E_FIRST ( ( HRESULT ) 0x80040000 )
#define OLE_E_INVALIDHWND _HRESULT_TYPEDEF_ ( 0x8004000F )
#define OLE_E_INVALIDRECT _HRESULT_TYPEDEF_ ( 0x8004000D )
#define OLE_E_LAST ( ( HRESULT ) 0x800400FF )
#define OLE_E_NOCACHE _HRESULT_TYPEDEF_ ( 0x80040006 )
#define OLE_E_NOCONNECTION _HRESULT_TYPEDEF_ ( 0x80040004 )
#define OLE_E_NOSTORAGE _HRESULT_TYPEDEF_ ( 0x80040012 )
#define OLE_E_NOTRUNNING _HRESULT_TYPEDEF_ ( 0x80040005 )
#define OLE_E_NOT_INPLACEACTIVE _HRESULT_TYPEDEF_ ( 0x80040010 )
#define OLE_E_OLEVERB _HRESULT_TYPEDEF_ ( 0x80040000 )
#define OLE_E_PROMPTSAVECANCELLED _HRESULT_TYPEDEF_ ( 0x8004000C )
#define OLE_E_STATIC _HRESULT_TYPEDEF_ ( 0x8004000B )
#define OLE_E_WRONGCOMPOBJ _HRESULT_TYPEDEF_ ( 0x8004000E )
#define OLE_S_FIRST ( ( HRESULT ) 0x00040000 )
#define OLE_S_LAST ( ( HRESULT ) 0x000400FF )
#define OLE_S_MAC_CLIPFORMAT _HRESULT_TYPEDEF_ ( 0x00040002 )
#define OLE_S_STATIC _HRESULT_TYPEDEF_ ( 0x00040001 )
#define OLE_S_USEREG _HRESULT_TYPEDEF_ ( 0x00040000 )
#define ONE5STOPBITS (1)
#define ONESTOPBIT (0)
#define OPAQUE (2)
#define OPAQUEKEYBLOB (9)
#define OPENCARDNAMEA_EX OPENCARDNAME_EXA
#define OPENCARDNAMEW_EX OPENCARDNAME_EXW
#define OPENCARDNAME_A OPENCARDNAMEA
#define OPENCARDNAME_W OPENCARDNAMEW
#define OPENCHANNEL (4110)
#define OPENFILENAME_SIZE_VERSION_400 __MINGW_NAME_AW ( OPENFILENAME_SIZE_VERSION_400 )
#define OPENFILENAME_SIZE_VERSION_400A CDSIZEOF_STRUCT ( OPENFILENAMEA , lpTemplateName )
#define OPENFILENAME_SIZE_VERSION_400W CDSIZEOF_STRUCT ( OPENFILENAMEW , lpTemplateName )
#define OPEN_ALWAYS (4)
#define OPEN_EXISTING (3)
#define OPTIONAL 
#define ORD_LANGDRIVER (1)
#define OR_INVALID_OID __MSABI_LONG ( 1911 )
#define OR_INVALID_OXID __MSABI_LONG ( 1910 )
#define OR_INVALID_SET __MSABI_LONG ( 1912 )
#define OSS_ACCESS_SERIALIZATION_ERROR _HRESULT_TYPEDEF_ ( 0x80093013 )
#define OSS_API_DLL_NOT_LINKED _HRESULT_TYPEDEF_ ( 0x80093029 )
#define OSS_BAD_ARG _HRESULT_TYPEDEF_ ( 0x80093006 )
#define OSS_BAD_ENCRULES _HRESULT_TYPEDEF_ ( 0x80093016 )
#define OSS_BAD_PTR _HRESULT_TYPEDEF_ ( 0x8009300B )
#define OSS_BAD_TABLE _HRESULT_TYPEDEF_ ( 0x8009300F )
#define OSS_BAD_TIME _HRESULT_TYPEDEF_ ( 0x8009300C )
#define OSS_BAD_VERSION _HRESULT_TYPEDEF_ ( 0x80093007 )
#define OSS_BERDER_DLL_NOT_LINKED _HRESULT_TYPEDEF_ ( 0x8009302A )
#define OSS_CANT_CLOSE_TRACE_FILE _HRESULT_TYPEDEF_ ( 0x8009302E )
#define OSS_CANT_OPEN_TRACE_FILE _HRESULT_TYPEDEF_ ( 0x8009301B )
#define OSS_CANT_OPEN_TRACE_WINDOW _HRESULT_TYPEDEF_ ( 0x80093018 )
#define OSS_COMPARATOR_CODE_NOT_LINKED _HRESULT_TYPEDEF_ ( 0x80093025 )
#define OSS_COMPARATOR_DLL_NOT_LINKED _HRESULT_TYPEDEF_ ( 0x80093024 )
#define OSS_CONSTRAINT_DLL_NOT_LINKED _HRESULT_TYPEDEF_ ( 0x80093023 )
#define OSS_CONSTRAINT_VIOLATED _HRESULT_TYPEDEF_ ( 0x80093011 )
#define OSS_COPIER_DLL_NOT_LINKED _HRESULT_TYPEDEF_ ( 0x80093022 )
#define OSS_DATA_ERROR _HRESULT_TYPEDEF_ ( 0x80093005 )
#define OSS_FATAL_ERROR _HRESULT_TYPEDEF_ ( 0x80093012 )
#define OSS_INDEFINITE_NOT_SUPPORTED _HRESULT_TYPEDEF_ ( 0x8009300D )
#define OSS_LIMITED _HRESULT_TYPEDEF_ ( 0x8009300A )
#define OSS_MEM_ERROR _HRESULT_TYPEDEF_ ( 0x8009300E )
#define OSS_MEM_MGR_DLL_NOT_LINKED _HRESULT_TYPEDEF_ ( 0x80093026 )
#define OSS_MORE_BUF _HRESULT_TYPEDEF_ ( 0x80093001 )
#define OSS_MORE_INPUT _HRESULT_TYPEDEF_ ( 0x80093004 )
#define OSS_MUTEX_NOT_CREATED _HRESULT_TYPEDEF_ ( 0x8009302D )
#define OSS_NEGATIVE_UINTEGER _HRESULT_TYPEDEF_ ( 0x80093002 )
#define OSS_NULL_FCN _HRESULT_TYPEDEF_ ( 0x80093015 )
#define OSS_NULL_TBL _HRESULT_TYPEDEF_ ( 0x80093014 )
#define OSS_OID_DLL_NOT_LINKED _HRESULT_TYPEDEF_ ( 0x8009301A )
#define OSS_OPEN_TYPE_ERROR _HRESULT_TYPEDEF_ ( 0x8009302C )
#define OSS_OUT_MEMORY _HRESULT_TYPEDEF_ ( 0x80093008 )
#define OSS_OUT_OF_RANGE _HRESULT_TYPEDEF_ ( 0x80093021 )
#define OSS_PDU_MISMATCH _HRESULT_TYPEDEF_ ( 0x80093009 )
#define OSS_PDU_RANGE _HRESULT_TYPEDEF_ ( 0x80093003 )
#define OSS_PDV_CODE_NOT_LINKED _HRESULT_TYPEDEF_ ( 0x80093028 )
#define OSS_PDV_DLL_NOT_LINKED _HRESULT_TYPEDEF_ ( 0x80093027 )
#define OSS_PER_DLL_NOT_LINKED _HRESULT_TYPEDEF_ ( 0x8009302B )
#define OSS_REAL_CODE_NOT_LINKED _HRESULT_TYPEDEF_ ( 0x80093020 )
#define OSS_REAL_DLL_NOT_LINKED _HRESULT_TYPEDEF_ ( 0x8009301F )
#define OSS_TABLE_MISMATCH _HRESULT_TYPEDEF_ ( 0x8009301D )
#define OSS_TOO_LONG _HRESULT_TYPEDEF_ ( 0x80093010 )
#define OSS_TRACE_FILE_ALREADY_OPEN _HRESULT_TYPEDEF_ ( 0x8009301C )
#define OSS_TYPE_NOT_SUPPORTED _HRESULT_TYPEDEF_ ( 0x8009301E )
#define OSS_UNAVAIL_ENCRULES _HRESULT_TYPEDEF_ ( 0x80093017 )
#define OSS_UNIMPLEMENTED _HRESULT_TYPEDEF_ ( 0x80093019 )
#define OUT 
#define OUTPUT_DEBUG_STRING_EVENT (8)
#define OUT_CHARACTER_PRECIS (2)
#define OUT_DEFAULT_PRECIS (0)
#define OUT_DEVICE_PRECIS (5)
#define OUT_OF_PROCESS_FUNCTION_TABLE_CALLBACK_EXPORT_NAME "OutOfProcessFunctionTableCallback"
#define OUT_OUTLINE_PRECIS (8)
#define OUT_PS_ONLY_PRECIS (10)
#define OUT_RASTER_PRECIS (6)
#define OUT_SCREEN_OUTLINE_PRECIS (9)
#define OUT_STRING_PRECIS (1)
#define OUT_STROKE_PRECIS (3)
#define OUT_TT_ONLY_PRECIS (7)
#define OUT_TT_PRECIS (4)
#define OVERWRITE_HIDDEN (4)
#define OWNER_SECURITY_INFORMATION (1l)
#define ObjectCloseAuditAlarm ObjectCloseAuditAlarmA
#define ObjectDeleteAuditAlarm ObjectDeleteAuditAlarmA
#define ObjectOpenAuditAlarm ObjectOpenAuditAlarmA
#define ObjectPrivilegeAuditAlarm ObjectPrivilegeAuditAlarmA
#define OemToAnsi OemToCharA
#define OemToAnsiBuff OemToCharBuffA
#define OemToChar __MINGW_NAME_AW ( OemToChar )
#define OemToCharBuff __MINGW_NAME_AW ( OemToCharBuff )
#define OpenBackupEventLog __MINGW_NAME_AW ( OpenBackupEventLog )
#define OpenDesktop __MINGW_NAME_AW ( OpenDesktop )
#define OpenEncryptedFileRaw __MINGW_NAME_AW ( OpenEncryptedFileRaw )
#define OpenEvent __MINGW_NAME_AW ( OpenEvent )
#define OpenEventLog __MINGW_NAME_AW ( OpenEventLog )
#define OpenFileMapping OpenFileMappingA
#define OpenJobObject __MINGW_NAME_AW ( OpenJobObject )
#define OpenMutex OpenMutexA
#define OpenPrinter __MINGW_NAME_AW ( OpenPrinter )
#define OpenPrivateNamespace __MINGW_NAME_AW ( OpenPrivateNamespace )
#define OpenSCManager __MINGW_NAME_AW ( OpenSCManager )
#define OpenSemaphore OpenSemaphoreA
#define OpenService __MINGW_NAME_AW ( OpenService )
#define OpenWaitableTimer OpenWaitableTimerA
#define OpenWindowStation __MINGW_NAME_AW ( OpenWindowStation )
#define OutputDebugStr OutputDebugString
#define OutputDebugString __MINGW_NAME_AW ( OutputDebugString )
#define PAGE_EXECUTE (16)
#define PAGE_EXECUTE_READ (32)
#define PAGE_EXECUTE_READWRITE (64)
#define PAGE_EXECUTE_WRITECOPY (128)
#define PAGE_GUARD (256)
#define PAGE_NOACCESS (1)
#define PAGE_NOCACHE (512)
#define PAGE_READONLY (2)
#define PAGE_READWRITE (4)
#define PAGE_WRITECOMBINE (1024)
#define PAGE_WRITECOPY (8)
#define PALETTEINDEX(i) ( ( COLORREF ) ( 0x01000000 | ( DWORD ) ( WORD ) ( i ) ) )
#define PALETTERGB(r, g, b) ( 0x02000000 | RGB ( r , g , b ) )
#define PANOSE_COUNT (10)
#define PAN_ANY (0)
#define PAN_ARMSTYLE_INDEX (6)
#define PAN_BENT_ARMS_DOUBLE_SERIF (11)
#define PAN_BENT_ARMS_HORZ (7)
#define PAN_BENT_ARMS_SINGLE_SERIF (10)
#define PAN_BENT_ARMS_VERT (9)
#define PAN_BENT_ARMS_WEDGE (8)
#define PAN_CONTRAST_HIGH (8)
#define PAN_CONTRAST_INDEX (4)
#define PAN_CONTRAST_LOW (4)
#define PAN_CONTRAST_MEDIUM (6)
#define PAN_CONTRAST_MEDIUM_HIGH (7)
#define PAN_CONTRAST_MEDIUM_LOW (5)
#define PAN_CONTRAST_NONE (2)
#define PAN_CONTRAST_VERY_HIGH (9)
#define PAN_CONTRAST_VERY_LOW (3)
#define PAN_CULTURE_LATIN (0)
#define PAN_FAMILYTYPE_INDEX (0)
#define PAN_FAMILY_DECORATIVE (4)
#define PAN_FAMILY_PICTORIAL (5)
#define PAN_FAMILY_SCRIPT (3)
#define PAN_FAMILY_TEXT_DISPLAY (2)
#define PAN_LETTERFORM_INDEX (7)
#define PAN_LETT_NORMAL_BOXED (4)
#define PAN_LETT_NORMAL_CONTACT (2)
#define PAN_LETT_NORMAL_FLATTENED (5)
#define PAN_LETT_NORMAL_OFF_CENTER (7)
#define PAN_LETT_NORMAL_ROUNDED (6)
#define PAN_LETT_NORMAL_SQUARE (8)
#define PAN_LETT_NORMAL_WEIGHTED (3)
#define PAN_LETT_OBLIQUE_BOXED (11)
#define PAN_LETT_OBLIQUE_CONTACT (9)
#define PAN_LETT_OBLIQUE_FLATTENED (12)
#define PAN_LETT_OBLIQUE_OFF_CENTER (14)
#define PAN_LETT_OBLIQUE_ROUNDED (13)
#define PAN_LETT_OBLIQUE_SQUARE (15)
#define PAN_LETT_OBLIQUE_WEIGHTED (10)
#define PAN_MIDLINE_CONSTANT_POINTED (9)
#define PAN_MIDLINE_CONSTANT_SERIFED (10)
#define PAN_MIDLINE_CONSTANT_TRIMMED (8)
#define PAN_MIDLINE_HIGH_POINTED (6)
#define PAN_MIDLINE_HIGH_SERIFED (7)
#define PAN_MIDLINE_HIGH_TRIMMED (5)
#define PAN_MIDLINE_INDEX (8)
#define PAN_MIDLINE_LOW_POINTED (12)
#define PAN_MIDLINE_LOW_SERIFED (13)
#define PAN_MIDLINE_LOW_TRIMMED (11)
#define PAN_MIDLINE_STANDARD_POINTED (3)
#define PAN_MIDLINE_STANDARD_SERIFED (4)
#define PAN_MIDLINE_STANDARD_TRIMMED (2)
#define PAN_NO_FIT (1)
#define PAN_PROPORTION_INDEX (3)
#define PAN_PROP_CONDENSED (6)
#define PAN_PROP_EVEN_WIDTH (4)
#define PAN_PROP_EXPANDED (5)
#define PAN_PROP_MODERN (3)
#define PAN_PROP_MONOSPACED (9)
#define PAN_PROP_OLD_STYLE (2)
#define PAN_PROP_VERY_CONDENSED (8)
#define PAN_PROP_VERY_EXPANDED (7)
#define PAN_SERIFSTYLE_INDEX (1)
#define PAN_SERIF_BONE (8)
#define PAN_SERIF_COVE (2)
#define PAN_SERIF_EXAGGERATED (9)
#define PAN_SERIF_FLARED (14)
#define PAN_SERIF_NORMAL_SANS (11)
#define PAN_SERIF_OBTUSE_COVE (3)
#define PAN_SERIF_OBTUSE_SANS (12)
#define PAN_SERIF_OBTUSE_SQUARE_COVE (5)
#define PAN_SERIF_PERP_SANS (13)
#define PAN_SERIF_ROUNDED (15)
#define PAN_SERIF_SQUARE (6)
#define PAN_SERIF_SQUARE_COVE (4)
#define PAN_SERIF_THIN (7)
#define PAN_SERIF_TRIANGLE (10)
#define PAN_STRAIGHT_ARMS_DOUBLE_SERIF (6)
#define PAN_STRAIGHT_ARMS_HORZ (2)
#define PAN_STRAIGHT_ARMS_SINGLE_SERIF (5)
#define PAN_STRAIGHT_ARMS_VERT (4)
#define PAN_STRAIGHT_ARMS_WEDGE (3)
#define PAN_STROKEVARIATION_INDEX (5)
#define PAN_STROKE_GRADUAL_DIAG (2)
#define PAN_STROKE_GRADUAL_HORZ (5)
#define PAN_STROKE_GRADUAL_TRAN (3)
#define PAN_STROKE_GRADUAL_VERT (4)
#define PAN_STROKE_INSTANT_VERT (8)
#define PAN_STROKE_RAPID_HORZ (7)
#define PAN_STROKE_RAPID_VERT (6)
#define PAN_WEIGHT_BLACK (10)
#define PAN_WEIGHT_BOLD (8)
#define PAN_WEIGHT_BOOK (5)
#define PAN_WEIGHT_DEMI (7)
#define PAN_WEIGHT_HEAVY (9)
#define PAN_WEIGHT_INDEX (2)
#define PAN_WEIGHT_LIGHT (3)
#define PAN_WEIGHT_MEDIUM (6)
#define PAN_WEIGHT_NORD (11)
#define PAN_WEIGHT_THIN (4)
#define PAN_WEIGHT_VERY_LIGHT (2)
#define PAN_XHEIGHT_CONSTANT_LARGE (4)
#define PAN_XHEIGHT_CONSTANT_SMALL (2)
#define PAN_XHEIGHT_CONSTANT_STD (3)
#define PAN_XHEIGHT_DUCKING_LARGE (7)
#define PAN_XHEIGHT_DUCKING_SMALL (5)
#define PAN_XHEIGHT_DUCKING_STD (6)
#define PAN_XHEIGHT_INDEX (9)
#define PARITY_EVEN ( ( WORD ) 0x400 )
#define PARITY_MARK ( ( WORD ) 0x800 )
#define PARITY_NONE ( ( WORD ) 0x100 )
#define PARITY_ODD ( ( WORD ) 0x200 )
#define PARITY_SPACE ( ( WORD ) 0x1000 )
#define PARTITION_ENTRY_UNUSED (0)
#define PARTITION_EXTENDED (5)
#define PARTITION_FAT32 (11)
#define PARTITION_FAT32_XINT13 (12)
#define PARTITION_FAT_12 (1)
#define PARTITION_FAT_16 (4)
#define PARTITION_HUGE (6)
#define PARTITION_IFS (7)
#define PARTITION_LDM (66)
#define PARTITION_NTFT (128)
#define PARTITION_OS2BOOTMGR (10)
#define PARTITION_PREP (65)
#define PARTITION_UNIX (99)
#define PARTITION_XENIX_1 (2)
#define PARTITION_XENIX_2 (3)
#define PARTITION_XINT13 (14)
#define PARTITION_XINT13_EXTENDED (15)
#define PASCAL __stdcall
#define PASSEMBLY_DLL_REDIRECTION_DETAILED_INFORMATION PASSEMBLY_FILE_DETAILED_INFORMATION
#define PASSTHROUGH (19)
#define PATCOPY ( DWORD ) 0x00F00021
#define PATINVERT ( DWORD ) 0x005A0049
#define PATPAINT ( DWORD ) 0x00FB0A09
#define PBTF_APMRESUMEFROMFAILURE (1)
#define PBT_APMBATTERYLOW (9)
#define PBT_APMOEMEVENT (11)
#define PBT_APMPOWERSTATUSCHANGE (10)
#define PBT_APMQUERYSTANDBY (1)
#define PBT_APMQUERYSTANDBYFAILED (3)
#define PBT_APMQUERYSUSPEND (0)
#define PBT_APMQUERYSUSPENDFAILED (2)
#define PBT_APMRESUMEAUTOMATIC (18)
#define PBT_APMRESUMECRITICAL (6)
#define PBT_APMRESUMESTANDBY (8)
#define PBT_APMRESUMESUSPEND (7)
#define PBT_APMSTANDBY (5)
#define PBT_APMSUSPEND (4)
#define PBT_POWERSETTINGCHANGE (32787)
#define PCASSEMBLY_DLL_REDIRECTION_DETAILED_INFORMATION PCASSEMBLY_FILE_DETAILED_INFORMATION
#define PCF_16BITMODE ( ( DWORD ) 0x200 )
#define PCF_DTRDSR ( ( DWORD ) 0x1 )
#define PCF_INTTIMEOUTS ( ( DWORD ) 0x80 )
#define PCF_PARITY_CHECK ( ( DWORD ) 0x8 )
#define PCF_RLSD ( ( DWORD ) 0x4 )
#define PCF_RTSCTS ( ( DWORD ) 0x2 )
#define PCF_SETXCHAR ( ( DWORD ) 0x20 )
#define PCF_SPECIALCHARS ( ( DWORD ) 0x100 )
#define PCF_TOTALTIMEOUTS ( ( DWORD ) 0x40 )
#define PCF_XONXOFF ( ( DWORD ) 0x10 )
#define PCSCardIntroduceCardType(hContext, szCardName, pbAtr, pbAtrMask, cbAtrLen, pguidPrimaryProvider, rgguidInterfaces, dwInterfaceCount) SCardIntroduceCardType ( hContext , szCardName , pguidPrimaryProvider , rgguidInterfaces , dwInterfaceCount , pbAtr , pbAtrMask , cbAtrLen )
#define PC_EXPLICIT (2)
#define PC_INTERIORS (128)
#define PC_NOCOLLAPSE (4)
#define PC_NONE (0)
#define PC_PATHS (512)
#define PC_POLYGON (1)
#define PC_POLYPOLYGON (256)
#define PC_RECTANGLE (2)
#define PC_RESERVED (1)
#define PC_SCANLINE (8)
#define PC_STYLED (32)
#define PC_TRAPEZOID (4)
#define PC_WIDE (16)
#define PC_WIDESTYLED (64)
#define PC_WINDPOLYGON (4)
#define PDCAP_D0_SUPPORTED (1)
#define PDCAP_D1_SUPPORTED (2)
#define PDCAP_D2_SUPPORTED (4)
#define PDCAP_D3_SUPPORTED (8)
#define PDCAP_WAKE_FROM_D0_SUPPORTED (16)
#define PDCAP_WAKE_FROM_D1_SUPPORTED (32)
#define PDCAP_WAKE_FROM_D2_SUPPORTED (64)
#define PDCAP_WAKE_FROM_D3_SUPPORTED (128)
#define PDCAP_WARM_EJECT_SUPPORTED (256)
#define PDEVICESIZE (26)
#define PD_ALLPAGES (0)
#define PD_COLLATE (16)
#define PD_CURRENTPAGE (4194304)
#define PD_DISABLEPRINTTOFILE (524288)
#define PD_ENABLEPRINTHOOK (4096)
#define PD_ENABLEPRINTTEMPLATE (16384)
#define PD_ENABLEPRINTTEMPLATEHANDLE (65536)
#define PD_ENABLESETUPHOOK (8192)
#define PD_ENABLESETUPTEMPLATE (32768)
#define PD_ENABLESETUPTEMPLATEHANDLE (131072)
#define PD_EXCLUSIONFLAGS (16777216)
#define PD_EXCL_COPIESANDCOLLATE (33024l)
#define PD_HIDEPRINTTOFILE (1048576)
#define PD_NOCURRENTPAGE (8388608)
#define PD_NONETWORKBUTTON (2097152)
#define PD_NOPAGENUMS (8)
#define PD_NOSELECTION (4)
#define PD_NOWARNING (128)
#define PD_PAGENUMS (2)
#define PD_PRINTSETUP (64)
#define PD_PRINTTOFILE (32)
#define PD_RESULT_APPLY (2)
#define PD_RESULT_CANCEL (0)
#define PD_RESULT_PRINT (1)
#define PD_RETURNDC (256)
#define PD_RETURNDEFAULT (1024)
#define PD_RETURNIC (512)
#define PD_SELECTION (1)
#define PD_SHOWHELP (2048)
#define PD_USEDEVMODECOPIES (262144)
#define PD_USEDEVMODECOPIESANDCOLLATE (262144)
#define PD_USELARGETEMPLATE (268435456)
#define PERFORMANCE_DATA_VERSION (1)
#define PERFSTATE_POLICY_CHANGE_IDEAL (0)
#define PERFSTATE_POLICY_CHANGE_MAX PERFSTATE_POLICY_CHANGE_ROCKET
#define PERFSTATE_POLICY_CHANGE_ROCKET (2)
#define PERFSTATE_POLICY_CHANGE_SINGLE (1)
#define PERF_100NSEC_MULTI_TIMER (575735040)
#define PERF_100NSEC_MULTI_TIMER_INV (592512256)
#define PERF_100NSEC_TIMER (542180608)
#define PERF_100NSEC_TIMER_INV (558957824)
#define PERF_AVERAGE_BASE (1073939458)
#define PERF_AVERAGE_BULK (1073874176)
#define PERF_AVERAGE_TIMER (805438464)
#define PERF_COUNTER_100NS_QUEUELEN_TYPE (5571840)
#define PERF_COUNTER_BASE (196608)
#define PERF_COUNTER_BULK_COUNT (272696576)
#define PERF_COUNTER_COUNTER (272696320)
#define PERF_COUNTER_DELTA (4195328)
#define PERF_COUNTER_ELAPSED (262144)
#define PERF_COUNTER_FRACTION (131072)
#define PERF_COUNTER_HISTOGRAM (393216)
#define PERF_COUNTER_HISTOGRAM_TYPE (2147483648u)
#define PERF_COUNTER_LARGE_DELTA (4195584)
#define PERF_COUNTER_LARGE_QUEUELEN_TYPE (4523264)
#define PERF_COUNTER_LARGE_RAWCOUNT (65792)
#define PERF_COUNTER_LARGE_RAWCOUNT_HEX (256)
#define PERF_COUNTER_MULTI_BASE (1107494144)
#define PERF_COUNTER_MULTI_TIMER (574686464)
#define PERF_COUNTER_MULTI_TIMER_INV (591463680)
#define PERF_COUNTER_NODATA (1073742336)
#define PERF_COUNTER_OBJ_TIME_QUEUELEN_TYPE (6620416)
#define PERF_COUNTER_PRECISION (458752)
#define PERF_COUNTER_QUEUELEN (327680)
#define PERF_COUNTER_QUEUELEN_TYPE (4523008)
#define PERF_COUNTER_RATE (65536)
#define PERF_COUNTER_RAWCOUNT (65536)
#define PERF_COUNTER_RAWCOUNT_HEX (0)
#define PERF_COUNTER_TEXT (2816)
#define PERF_COUNTER_TIMER (541132032)
#define PERF_COUNTER_TIMER_INV (557909248)
#define PERF_COUNTER_VALUE (0)
#define PERF_DATA_REVISION (1)
#define PERF_DATA_VERSION (1)
#define PERF_DELTA_BASE (8388608)
#define PERF_DELTA_COUNTER (4194304)
#define PERF_DETAIL_ADVANCED (200)
#define PERF_DETAIL_EXPERT (300)
#define PERF_DETAIL_NOVICE (100)
#define PERF_DETAIL_WIZARD (400)
#define PERF_DISPLAY_NOSHOW (1073741824)
#define PERF_DISPLAY_NO_SUFFIX (0)
#define PERF_DISPLAY_PERCENT (536870912)
#define PERF_DISPLAY_PER_SEC (268435456)
#define PERF_DISPLAY_SECONDS (805306368)
#define PERF_ELAPSED_TIME (807666944)
#define PERF_INVERSE_COUNTER (16777216)
#define PERF_LARGE_RAW_BASE (1073939712)
#define PERF_LARGE_RAW_FRACTION (537003264)
#define PERF_MULTI_COUNTER (33554432)
#define PERF_NO_INSTANCES (-1)
#define PERF_NO_UNIQUE_ID (-1)
#define PERF_NUMBER_DECIMAL (65536)
#define PERF_NUMBER_DEC_1000 (131072)
#define PERF_NUMBER_HEX (0)
#define PERF_OBJECT_TIMER (2097152)
#define PERF_OBJ_TIME_TIMER (543229184)
#define PERF_PRECISION_100NS_TIMER (542573824)
#define PERF_PRECISION_OBJECT_TIMER (543622400)
#define PERF_PRECISION_SYSTEM_TIMER (541525248)
#define PERF_PRECISION_TIMESTAMP PERF_LARGE_RAW_BASE
#define PERF_QUERY_COSTLY ( ( LONG ) 0x80000002 )
#define PERF_QUERY_GLOBAL ( ( LONG ) 0x80000001 )
#define PERF_QUERY_OBJECTS ( ( LONG ) 0x80000000 )
#define PERF_RAW_BASE (1073939459)
#define PERF_RAW_FRACTION (537003008)
#define PERF_SAMPLE_BASE (1073939457)
#define PERF_SAMPLE_COUNTER (4260864)
#define PERF_SAMPLE_FRACTION (549585920)
#define PERF_SIZE_DWORD (0)
#define PERF_SIZE_LARGE (256)
#define PERF_SIZE_VARIABLE_LEN (768)
#define PERF_SIZE_ZERO (512)
#define PERF_TEXT_ASCII (65536)
#define PERF_TEXT_UNICODE (0)
#define PERF_TIMER_100NS (1048576)
#define PERF_TIMER_TICK (0)
#define PERF_TYPE_COUNTER (1024)
#define PERF_TYPE_NUMBER (0)
#define PERF_TYPE_TEXT (2048)
#define PERF_TYPE_ZERO (3072)
#define PERSIST_E_NOTSELFSIZING _HRESULT_TYPEDEF_ ( 0x800B000B )
#define PERSIST_E_SIZEDEFINITE _HRESULT_TYPEDEF_ ( 0x800B0009 )
#define PERSIST_E_SIZEINDEFINITE _HRESULT_TYPEDEF_ ( 0x800B000A )
#define PFD_DEPTH_DONTCARE (536870912)
#define PFD_DIRECT3D_ACCELERATED (16384)
#define PFD_DOUBLEBUFFER (1)
#define PFD_DOUBLEBUFFER_DONTCARE (1073741824)
#define PFD_DRAW_TO_BITMAP (8)
#define PFD_DRAW_TO_WINDOW (4)
#define PFD_GENERIC_ACCELERATED (4096)
#define PFD_GENERIC_FORMAT (64)
#define PFD_MAIN_PLANE (0)
#define PFD_NEED_PALETTE (128)
#define PFD_NEED_SYSTEM_PALETTE (256)
#define PFD_OVERLAY_PLANE (1)
#define PFD_STEREO (2)
#define PFD_STEREO_DONTCARE (2147483648u)
#define PFD_SUPPORT_COMPOSITION (32768)
#define PFD_SUPPORT_DIRECTDRAW (8192)
#define PFD_SUPPORT_GDI (16)
#define PFD_SUPPORT_OPENGL (32)
#define PFD_SWAP_COPY (1024)
#define PFD_SWAP_EXCHANGE (512)
#define PFD_SWAP_LAYER_BUFFERS (2048)
#define PFD_TYPE_COLORINDEX (1)
#define PFD_TYPE_RGBA (0)
#define PFD_UNDERLAY_PLANE (-1)
#define PFNGETPROFILEPATH __MINGW_NAME_AW ( PFNGETPROFILEPATH )
#define PFNPROCESSPOLICIES __MINGW_NAME_AW ( PFNPROCESSPOLICIES )
#define PFNRECONCILEPROFILE __MINGW_NAME_AW ( PFNRECONCILEPROFILE )
#define PF_3DNOW_INSTRUCTIONS_AVAILABLE (7)
#define PF_ALPHA_BYTE_INSTRUCTIONS (5)
#define PF_APPLETALK AF_APPLETALK
#define PF_ARM_64BIT_LOADSTORE_ATOMIC (25)
#define PF_ARM_DIVIDE_INSTRUCTION_AVAILABLE (24)
#define PF_ARM_EXTERNAL_CACHE_AVAILABLE (26)
#define PF_ARM_FMAC_INSTRUCTIONS_AVAILABLE (27)
#define PF_ARM_NEON_INSTRUCTIONS_AVAILABLE (19)
#define PF_ARM_VFP_32_REGISTERS_AVAILABLE (18)
#define PF_BAN AF_BAN
#define PF_CCITT AF_CCITT
#define PF_CHANNELS_ENABLED (16)
#define PF_CHAOS AF_CHAOS
#define PF_COMPARE64_EXCHANGE128 (15)
#define PF_COMPARE_EXCHANGE128 (14)
#define PF_COMPARE_EXCHANGE_DOUBLE (2)
#define PF_DATAKIT AF_DATAKIT
#define PF_DECnet AF_DECnet
#define PF_DLI AF_DLI
#define PF_ECMA AF_ECMA
#define PF_FASTFAIL_AVAILABLE (23)
#define PF_FIREFOX AF_FIREFOX
#define PF_FLOATING_POINT_EMULATED (1)
#define PF_FLOATING_POINT_PRECISION_ERRATA (0)
#define PF_HYLINK AF_HYLINK
#define PF_IMPLINK AF_IMPLINK
#define PF_INET AF_INET
#define PF_IPX AF_IPX
#define PF_ISO AF_ISO
#define PF_LAT AF_LAT
#define PF_MAX AF_MAX
#define PF_MMX_INSTRUCTIONS_AVAILABLE (3)
#define PF_NON_TEMPORAL_LEVEL_ALL _MM_HINT_NTA
#define PF_NS AF_NS
#define PF_NX_ENABLED (12)
#define PF_OSI AF_OSI
#define PF_PAE_ENABLED (9)
#define PF_PPC_MOVEMEM_64BIT_OK (4)
#define PF_PUP AF_PUP
#define PF_RDTSC_INSTRUCTION_AVAILABLE (8)
#define PF_RDWRFSGSBASE_AVAILABLE (22)
#define PF_SECOND_LEVEL_ADDRESS_TRANSLATION (20)
#define PF_SNA AF_SNA
#define PF_SSE3_INSTRUCTIONS_AVAILABLE (13)
#define PF_SSE_DAZ_MODE_AVAILABLE (11)
#define PF_TEMPORAL_LEVEL_1 _MM_HINT_T0
#define PF_TEMPORAL_LEVEL_2 _MM_HINT_T1
#define PF_TEMPORAL_LEVEL_3 _MM_HINT_T2
#define PF_UNIX AF_UNIX
#define PF_UNKNOWN1 AF_UNKNOWN1
#define PF_UNSPEC AF_UNSPEC
#define PF_VIRT_FIRMWARE_ENABLED (21)
#define PF_VOICEVIEW AF_VOICEVIEW
#define PF_XMMI64_INSTRUCTIONS_AVAILABLE (10)
#define PF_XMMI_INSTRUCTIONS_AVAILABLE (6)
#define PF_XSAVE_ENABLED (17)
#define PGET_MODULE_HANDLE_EX __MINGW_NAME_AW ( PGET_MODULE_HANDLE_EX )
#define PHYSICALHEIGHT (111)
#define PHYSICALOFFSETX (112)
#define PHYSICALOFFSETY (113)
#define PHYSICALWIDTH (110)
#define PIPE_ACCEPT_REMOTE_CLIENTS (0)
#define PIPE_ACCESS_DUPLEX (3)
#define PIPE_ACCESS_INBOUND (1)
#define PIPE_ACCESS_OUTBOUND (2)
#define PIPE_CLIENT_END (0)
#define PIPE_NOWAIT (1)
#define PIPE_READMODE_BYTE (0)
#define PIPE_READMODE_MESSAGE (2)
#define PIPE_REJECT_REMOTE_CLIENTS (8)
#define PIPE_SERVER_END (1)
#define PIPE_TYPE_BYTE (0)
#define PIPE_TYPE_MESSAGE (4)
#define PIPE_UNLIMITED_INSTANCES (255)
#define PIPE_WAIT (0)
#define PKCS12_ALLOW_OVERWRITE_KEY (16384)
#define PKCS12_ALWAYS_CNG_KSP (512)
#define PKCS12_EXPORT_RESERVED_MASK (4294901760u)
#define PKCS12_EXPORT_SILENT (64)
#define PKCS12_IMPORT_RESERVED_MASK (4294901760u)
#define PKCS12_IMPORT_SILENT (64)
#define PKCS12_INCLUDE_EXTENDED_PROPERTIES (16)
#define PKCS12_NO_PERSIST_KEY (32768)
#define PKCS12_OBJECT_LOCATOR_ALL_IMPORT_FLAGS (33360)
#define PKCS12_PREFER_CNG_KSP (256)
#define PKCS12_PROTECT_TO_DOMAIN_SIDS (32)
#define PKCS5_PADDING (1)
#define PKCS7_SIGNER_INFO ( ( LPCSTR ) 500 )
#define PKCS_7_ASN_ENCODING (65536)
#define PKCS_7_NDR_ENCODING (131072)
#define PKCS_ATTRIBUTE ( ( LPCSTR ) 22 )
#define PKCS_ATTRIBUTES ( ( LPCSTR ) 48 )
#define PKCS_CONTENT_INFO ( ( LPCSTR ) 33 )
#define PKCS_CONTENT_INFO_SEQUENCE_OF_ANY ( ( LPCSTR ) 23 )
#define PKCS_CTL ( ( LPCSTR ) 37 )
#define PKCS_ENCRYPTED_PRIVATE_KEY_INFO ( ( LPCSTR ) 45 )
#define PKCS_PRIVATE_KEY_INFO ( ( LPCSTR ) 44 )
#define PKCS_RC2_CBC_PARAMETERS ( ( LPCSTR ) 41 )
#define PKCS_RSAES_OAEP_PARAMETERS ( ( LPCSTR ) 76 )
#define PKCS_RSA_PRIVATE_KEY ( ( LPCSTR ) 43 )
#define PKCS_RSA_SSA_PSS_PARAMETERS ( ( LPCSTR ) 75 )
#define PKCS_RSA_SSA_PSS_TRAILER_FIELD_BC (1)
#define PKCS_SMIME_CAPABILITIES ( ( LPCSTR ) 42 )
#define PKCS_SORTED_CTL ( ( LPCSTR ) 49 )
#define PKCS_TIME_REQUEST ( ( LPCSTR ) 18 )
#define PKCS_UTC_TIME ( ( LPCSTR ) 17 )
#define PLAINTEXTKEYBLOB (8)
#define PLANES (14)
#define PMB_ACTIVE (1)
#define PM_NOREMOVE (0)
#define PM_NOYIELD (2)
#define PM_QS_INPUT (67567616)
#define PM_QS_PAINT (2097152)
#define PM_QS_POSTMESSAGE (9961472)
#define PM_QS_SENDMESSAGE (4194304)
#define PM_REMOVE (1)
#define POINTER_32 
#define POINTER_64 
#define POINTER_SIGNED 
#define POINTER_UNSIGNED 
#define POINTSTOPOINT(pt, pts) { ( pt ) . x = ( LONG ) ( SHORT ) LOWORD ( * ( LONG * ) & pts ) ; ( pt ) . y = ( LONG ) ( SHORT ) HIWORD ( * ( LONG * ) & pts ) ; }
#define POINTTOPOINTS(pt) ( MAKELONG ( ( short ) ( ( pt ) . x ) , ( short ) ( ( pt ) . y ) ) )
#define POLICY_AUDIT_SUBCATEGORY_COUNT (56)
#define POLYFILL_LAST (2)
#define POLYGONALCAPS (32)
#define POPENCARDNAMEA_EX POPENCARDNAME_EXA
#define POPENCARDNAMEW_EX POPENCARDNAME_EXW
#define POPENCARDNAME_A POPENCARDNAMEA
#define POPENCARDNAME_W POPENCARDNAMEW
#define PORT_STATUS_DOOR_OPEN (7)
#define PORT_STATUS_NO_TONER (6)
#define PORT_STATUS_OFFLINE (1)
#define PORT_STATUS_OUTPUT_BIN_FULL (4)
#define PORT_STATUS_OUT_OF_MEMORY (9)
#define PORT_STATUS_PAPER_JAM (2)
#define PORT_STATUS_PAPER_OUT (3)
#define PORT_STATUS_PAPER_PROBLEM (5)
#define PORT_STATUS_POWER_SAVE (12)
#define PORT_STATUS_TONER_LOW (10)
#define PORT_STATUS_TYPE_ERROR (1)
#define PORT_STATUS_TYPE_INFO (3)
#define PORT_STATUS_TYPE_WARNING (2)
#define PORT_STATUS_USER_INTERVENTION (8)
#define PORT_STATUS_WARMING_UP (11)
#define PORT_TYPE_NET_ATTACHED (8)
#define PORT_TYPE_READ (2)
#define PORT_TYPE_REDIRECTED (4)
#define PORT_TYPE_WRITE (1)
#define POSTSCRIPT_DATA (37)
#define POSTSCRIPT_IDENTIFY (4117)
#define POSTSCRIPT_IGNORE (38)
#define POSTSCRIPT_INJECTION (4118)
#define POSTSCRIPT_PASSTHROUGH (4115)
#define POWERBUTTON_ACTION_INDEX_HIBERNATE (2)
#define POWERBUTTON_ACTION_INDEX_NOTHING (0)
#define POWERBUTTON_ACTION_INDEX_SHUTDOWN (3)
#define POWERBUTTON_ACTION_INDEX_SLEEP (1)
#define POWERBUTTON_ACTION_VALUE_HIBERNATE (3)
#define POWERBUTTON_ACTION_VALUE_NOTHING (0)
#define POWERBUTTON_ACTION_VALUE_SHUTDOWN (6)
#define POWERBUTTON_ACTION_VALUE_SLEEP (2)
#define POWER_ACTION_CRITICAL (2147483648u)
#define POWER_ACTION_DISABLE_WAKES (1073741824)
#define POWER_ACTION_HIBERBOOT (8)
#define POWER_ACTION_LIGHTEST_FIRST (268435456)
#define POWER_ACTION_LOCK_CONSOLE (536870912)
#define POWER_ACTION_OVERRIDE_APPS (4)
#define POWER_ACTION_PSEUDO_TRANSITION (134217728)
#define POWER_ACTION_QUERY_ALLOWED (1)
#define POWER_ACTION_UI_ALLOWED (2)
#define POWER_DEVICE_IDLE_POLICY_CONSERVATIVE (1)
#define POWER_DEVICE_IDLE_POLICY_PERFORMANCE (0)
#define POWER_FORCE_TRIGGER_RESET (2147483648u)
#define POWER_LEVEL_USER_NOTIFY_EXEC (4)
#define POWER_LEVEL_USER_NOTIFY_SOUND (2)
#define POWER_LEVEL_USER_NOTIFY_TEXT (1)
#define POWER_PLATFORM_ROLE_V1 (1)
#define POWER_PLATFORM_ROLE_V1_MAX (1)
#define POWER_PLATFORM_ROLE_V2 (2)
#define POWER_PLATFORM_ROLE_V2_MAX (1)
#define POWER_PLATFORM_ROLE_VERSION POWER_PLATFORM_ROLE_V1
#define POWER_PLATFORM_ROLE_VERSION_MAX POWER_PLATFORM_ROLE_V1_MAX
#define POWER_REQUEST_CONTEXT_DETAILED_STRING (2)
#define POWER_REQUEST_CONTEXT_SIMPLE_STRING (1)
#define POWER_REQUEST_CONTEXT_VERSION (0)
#define POWER_SETTING_VALUE_VERSION (1)
#define POWER_SYSTEM_MAXIMUM (7)
#define POWER_USER_NOTIFY_BUTTON (8)
#define POWER_USER_NOTIFY_FORCED_SHUTDOWN (32)
#define POWER_USER_NOTIFY_SHUTDOWN (16)
#define PO_DELETE (19)
#define PO_PORTCHANGE (32)
#define PO_RENAME (20)
#define PO_REN_PORT (52)
#define PO_THROTTLE_ADAPTIVE (3)
#define PO_THROTTLE_CONSTANT (1)
#define PO_THROTTLE_DEGRADE (2)
#define PO_THROTTLE_MAXIMUM (4)
#define PO_THROTTLE_NONE (0)
#define PPM_FIRMWARE_ACPI1C2 (1)
#define PPM_FIRMWARE_ACPI1C3 (2)
#define PPM_FIRMWARE_ACPI1TSTATES (4)
#define PPM_FIRMWARE_CPC (262144)
#define PPM_FIRMWARE_CSD (16)
#define PPM_FIRMWARE_CST (8)
#define PPM_FIRMWARE_OSC (65536)
#define PPM_FIRMWARE_PCCH (16384)
#define PPM_FIRMWARE_PCCP (32768)
#define PPM_FIRMWARE_PCT (32)
#define PPM_FIRMWARE_PDC (131072)
#define PPM_FIRMWARE_PPC (256)
#define PPM_FIRMWARE_PSD (512)
#define PPM_FIRMWARE_PSS (64)
#define PPM_FIRMWARE_PTC (1024)
#define PPM_FIRMWARE_TPC (4096)
#define PPM_FIRMWARE_TSD (8192)
#define PPM_FIRMWARE_TSS (2048)
#define PPM_FIRMWARE_XPSS (128)
#define PPM_IDLE_IMPLEMENTATION_CSTATES (1)
#define PPM_IDLE_IMPLEMENTATION_NONE (0)
#define PPM_IDLE_IMPLEMENTATION_PEP (2)
#define PPM_PERFORMANCE_IMPLEMENTATION_CPPC (3)
#define PPM_PERFORMANCE_IMPLEMENTATION_NONE (0)
#define PPM_PERFORMANCE_IMPLEMENTATION_PCCV1 (2)
#define PPM_PERFORMANCE_IMPLEMENTATION_PEP (4)
#define PPM_PERFORMANCE_IMPLEMENTATION_PSTATES (1)
#define PP_ADMIN_PIN (31)
#define PP_APPLI_CERT (18)
#define PP_CERTCHAIN (9)
#define PP_CHANGE_PASSWORD (7)
#define PP_CLIENT_HWND (1)
#define PP_CONTAINER (6)
#define PP_CONTEXT_INFO (11)
#define PP_CRYPT_COUNT_KEY_USE (41)
#define PP_DELETEKEY (24)
#define PP_DISPLAYERRORS (1)
#define PP_ENUMALGS (1)
#define PP_ENUMALGS_EX (22)
#define PP_ENUMCONTAINERS (2)
#define PP_ENUMELECTROOTS (26)
#define PP_ENUMEX_SIGNING_PROT (40)
#define PP_ENUMMANDROOTS (25)
#define PP_IMPTYPE (3)
#define PP_KEYEXCHANGE_ALG (14)
#define PP_KEYEXCHANGE_KEYSIZE (12)
#define PP_KEYEXCHANGE_PIN (32)
#define PP_KEYSET_SEC_DESCR (8)
#define PP_KEYSET_TYPE (27)
#define PP_KEYSPEC (39)
#define PP_KEYSTORAGE (17)
#define PP_KEYX_KEYSIZE_INC (35)
#define PP_KEY_TYPE_SUBTYPE (10)
#define PP_NAME (4)
#define PP_PROVTYPE (16)
#define PP_SESSION_KEYSIZE (20)
#define PP_SGC_INFO (37)
#define PP_SIGNATURE_ALG (15)
#define PP_SIGNATURE_KEYSIZE (13)
#define PP_SIGNATURE_PIN (33)
#define PP_SIG_KEYSIZE_INC (34)
#define PP_SYM_KEYSIZE (19)
#define PP_UI_PROMPT (21)
#define PP_UNIQUE_CONTAINER (36)
#define PP_USE_HARDWARE_RNG (38)
#define PP_VERSION (5)
#define PRAGMA_DEPRECATED_DDK (0)
#define PRF_CHECKVISIBLE __MSABI_LONG ( 0x00000001 )
#define PRF_CHILDREN __MSABI_LONG ( 0x00000010 )
#define PRF_CLIENT __MSABI_LONG ( 0x00000004 )
#define PRF_ERASEBKGND __MSABI_LONG ( 0x00000008 )
#define PRF_NONCLIENT __MSABI_LONG ( 0x00000002 )
#define PRF_OWNED __MSABI_LONG ( 0x00000020 )
#define PRIMARYLANGID(lgid) ( ( WORD ) ( lgid ) & 0x3ff )
#define PRINTACTION_DOCUMENTDEFAULTS (6)
#define PRINTACTION_NETINSTALL (2)
#define PRINTACTION_NETINSTALLLINK (3)
#define PRINTACTION_OPEN (0)
#define PRINTACTION_OPENNETPRN (5)
#define PRINTACTION_PROPERTIES (1)
#define PRINTACTION_SERVERPROPERTIES (7)
#define PRINTACTION_TESTPAGE (4)
#define PRINTER_ACCESS_ADMINISTER (4)
#define PRINTER_ACCESS_USE (8)
#define PRINTER_ALL_ACCESS (983052l)
#define PRINTER_ATTRIBUTE_DEFAULT (4)
#define PRINTER_ATTRIBUTE_DIRECT (2)
#define PRINTER_ATTRIBUTE_DO_COMPLETE_FIRST (512)
#define PRINTER_ATTRIBUTE_ENABLE_BIDI (2048)
#define PRINTER_ATTRIBUTE_ENABLE_DEVQ (128)
#define PRINTER_ATTRIBUTE_FAX (16384)
#define PRINTER_ATTRIBUTE_HIDDEN (32)
#define PRINTER_ATTRIBUTE_KEEPPRINTEDJOBS (256)
#define PRINTER_ATTRIBUTE_LOCAL (64)
#define PRINTER_ATTRIBUTE_NETWORK (16)
#define PRINTER_ATTRIBUTE_PUBLISHED (8192)
#define PRINTER_ATTRIBUTE_QUEUED (1)
#define PRINTER_ATTRIBUTE_RAW_ONLY (4096)
#define PRINTER_ATTRIBUTE_SHARED (8)
#define PRINTER_ATTRIBUTE_TS (32768)
#define PRINTER_ATTRIBUTE_WORK_OFFLINE (1024)
#define PRINTER_CHANGE_ADD_FORM (65536)
#define PRINTER_CHANGE_ADD_JOB (256)
#define PRINTER_CHANGE_ADD_PORT (1048576)
#define PRINTER_CHANGE_ADD_PRINTER (1)
#define PRINTER_CHANGE_ADD_PRINTER_DRIVER (268435456)
#define PRINTER_CHANGE_ADD_PRINT_PROCESSOR (16777216)
#define PRINTER_CHANGE_ALL (2004353023)
#define PRINTER_CHANGE_CONFIGURE_PORT (2097152)
#define PRINTER_CHANGE_DELETE_FORM (262144)
#define PRINTER_CHANGE_DELETE_JOB (1024)
#define PRINTER_CHANGE_DELETE_PORT (4194304)
#define PRINTER_CHANGE_DELETE_PRINTER (4)
#define PRINTER_CHANGE_DELETE_PRINTER_DRIVER (1073741824)
#define PRINTER_CHANGE_DELETE_PRINT_PROCESSOR (67108864)
#define PRINTER_CHANGE_FAILED_CONNECTION_PRINTER (8)
#define PRINTER_CHANGE_FORM (458752)
#define PRINTER_CHANGE_JOB (65280)
#define PRINTER_CHANGE_PORT (7340032)
#define PRINTER_CHANGE_PRINTER (255)
#define PRINTER_CHANGE_PRINTER_DRIVER (1879048192)
#define PRINTER_CHANGE_PRINT_PROCESSOR (117440512)
#define PRINTER_CHANGE_SET_FORM (131072)
#define PRINTER_CHANGE_SET_JOB (512)
#define PRINTER_CHANGE_SET_PRINTER (2)
#define PRINTER_CHANGE_SET_PRINTER_DRIVER (536870912)
#define PRINTER_CHANGE_TIMEOUT (2147483648u)
#define PRINTER_CHANGE_WRITE_JOB (2048)
#define PRINTER_CONTROL_PAUSE (1)
#define PRINTER_CONTROL_PURGE (3)
#define PRINTER_CONTROL_RESUME (2)
#define PRINTER_CONTROL_SET_STATUS (4)
#define PRINTER_ENUM_CONNECTIONS (4)
#define PRINTER_ENUM_CONTAINER (32768)
#define PRINTER_ENUM_DEFAULT (1)
#define PRINTER_ENUM_EXPAND (16384)
#define PRINTER_ENUM_FAVORITE (4)
#define PRINTER_ENUM_HIDE (16777216)
#define PRINTER_ENUM_ICON1 (65536)
#define PRINTER_ENUM_ICON2 (131072)
#define PRINTER_ENUM_ICON3 (262144)
#define PRINTER_ENUM_ICON4 (524288)
#define PRINTER_ENUM_ICON5 (1048576)
#define PRINTER_ENUM_ICON6 (2097152)
#define PRINTER_ENUM_ICON7 (4194304)
#define PRINTER_ENUM_ICON8 (8388608)
#define PRINTER_ENUM_ICONMASK (16711680)
#define PRINTER_ENUM_LOCAL (2)
#define PRINTER_ENUM_NAME (8)
#define PRINTER_ENUM_NETWORK (64)
#define PRINTER_ENUM_REMOTE (16)
#define PRINTER_ENUM_SHARED (32)
#define PRINTER_ERROR_INFORMATION (2147483648u)
#define PRINTER_ERROR_JAM (2)
#define PRINTER_ERROR_OUTOFPAPER (1)
#define PRINTER_ERROR_OUTOFTONER (4)
#define PRINTER_ERROR_SEVERE (536870912)
#define PRINTER_ERROR_WARNING (1073741824)
#define PRINTER_EXECUTE (131080l)
#define PRINTER_FONTTYPE (16384)
#define PRINTER_NOTIFY_FIELD_ATTRIBUTES (13)
#define PRINTER_NOTIFY_FIELD_AVERAGE_PPM (21)
#define PRINTER_NOTIFY_FIELD_BYTES_PRINTED (25)
#define PRINTER_NOTIFY_FIELD_CJOBS (20)
#define PRINTER_NOTIFY_FIELD_COMMENT (5)
#define PRINTER_NOTIFY_FIELD_DATATYPE (11)
#define PRINTER_NOTIFY_FIELD_DEFAULT_PRIORITY (15)
#define PRINTER_NOTIFY_FIELD_DEVMODE (7)
#define PRINTER_NOTIFY_FIELD_DRIVER_NAME (4)
#define PRINTER_NOTIFY_FIELD_LOCATION (6)
#define PRINTER_NOTIFY_FIELD_OBJECT_GUID (26)
#define PRINTER_NOTIFY_FIELD_PAGES_PRINTED (23)
#define PRINTER_NOTIFY_FIELD_PARAMETERS (10)
#define PRINTER_NOTIFY_FIELD_PORT_NAME (3)
#define PRINTER_NOTIFY_FIELD_PRINTER_NAME (1)
#define PRINTER_NOTIFY_FIELD_PRINT_PROCESSOR (9)
#define PRINTER_NOTIFY_FIELD_PRIORITY (14)
#define PRINTER_NOTIFY_FIELD_SECURITY_DESCRIPTOR (12)
#define PRINTER_NOTIFY_FIELD_SEPFILE (8)
#define PRINTER_NOTIFY_FIELD_SERVER_NAME (0)
#define PRINTER_NOTIFY_FIELD_SHARE_NAME (2)
#define PRINTER_NOTIFY_FIELD_START_TIME (16)
#define PRINTER_NOTIFY_FIELD_STATUS (18)
#define PRINTER_NOTIFY_FIELD_STATUS_STRING (19)
#define PRINTER_NOTIFY_FIELD_TOTAL_BYTES (24)
#define PRINTER_NOTIFY_FIELD_TOTAL_PAGES (22)
#define PRINTER_NOTIFY_FIELD_UNTIL_TIME (17)
#define PRINTER_NOTIFY_INFO_DISCARDED (1)
#define PRINTER_NOTIFY_OPTIONS_REFRESH (1)
#define PRINTER_NOTIFY_TYPE (0)
#define PRINTER_READ (131080l)
#define PRINTER_STATUS_BUSY (512)
#define PRINTER_STATUS_DOOR_OPEN (4194304)
#define PRINTER_STATUS_ERROR (2)
#define PRINTER_STATUS_INITIALIZING (32768)
#define PRINTER_STATUS_IO_ACTIVE (256)
#define PRINTER_STATUS_MANUAL_FEED (32)
#define PRINTER_STATUS_NOT_AVAILABLE (4096)
#define PRINTER_STATUS_NO_TONER (262144)
#define PRINTER_STATUS_OFFLINE (128)
#define PRINTER_STATUS_OUTPUT_BIN_FULL (2048)
#define PRINTER_STATUS_OUT_OF_MEMORY (2097152)
#define PRINTER_STATUS_PAGE_PUNT (524288)
#define PRINTER_STATUS_PAPER_JAM (8)
#define PRINTER_STATUS_PAPER_OUT (16)
#define PRINTER_STATUS_PAPER_PROBLEM (64)
#define PRINTER_STATUS_PAUSED (1)
#define PRINTER_STATUS_PENDING_DELETION (4)
#define PRINTER_STATUS_POWER_SAVE (16777216)
#define PRINTER_STATUS_PRINTING (1024)
#define PRINTER_STATUS_PROCESSING (16384)
#define PRINTER_STATUS_SERVER_UNKNOWN (8388608)
#define PRINTER_STATUS_TONER_LOW (131072)
#define PRINTER_STATUS_USER_INTERVENTION (1048576)
#define PRINTER_STATUS_WAITING (8192)
#define PRINTER_STATUS_WARMING_UP (65536)
#define PRINTER_WRITE (131080l)
#define PRINTRATEUNIT_CPS (2)
#define PRINTRATEUNIT_IPM (4)
#define PRINTRATEUNIT_LPM (3)
#define PRINTRATEUNIT_PPM (1)
#define PRIVATEKEYBLOB (7)
#define PRIVATE_NAMESPACE_FLAG_DESTROY (1)
#define PRIVILEGE_SET_ALL_NECESSARY (1)
#define PROBE_ALIGNMENT(_s) TYPE_ALIGNMENT ( DWORD )
#define PROBE_ALIGNMENT32(_s) TYPE_ALIGNMENT ( DWORD )
#define PROCESSOR_ALPHA_21064 (21064)
#define PROCESSOR_AMD_X8664 (8664)
#define PROCESSOR_ARCHITECTURE_ALPHA (2)
#define PROCESSOR_ARCHITECTURE_ALPHA64 (7)
#define PROCESSOR_ARCHITECTURE_AMD64 (9)
#define PROCESSOR_ARCHITECTURE_ARM (5)
#define PROCESSOR_ARCHITECTURE_IA32_ON_WIN64 (10)
#define PROCESSOR_ARCHITECTURE_IA64 (6)
#define PROCESSOR_ARCHITECTURE_INTEL (0)
#define PROCESSOR_ARCHITECTURE_MIPS (1)
#define PROCESSOR_ARCHITECTURE_MSIL (8)
#define PROCESSOR_ARCHITECTURE_NEUTRAL (11)
#define PROCESSOR_ARCHITECTURE_PPC (3)
#define PROCESSOR_ARCHITECTURE_SHX (4)
#define PROCESSOR_ARCHITECTURE_UNKNOWN (65535)
#define PROCESSOR_ARM720 (1824)
#define PROCESSOR_ARM820 (2080)
#define PROCESSOR_ARM920 (2336)
#define PROCESSOR_ARM_7TDMI (70001)
#define PROCESSOR_HITACHI_SH3 (10003)
#define PROCESSOR_HITACHI_SH3E (10004)
#define PROCESSOR_HITACHI_SH4 (10005)
#define PROCESSOR_IDLESTATE_POLICY_COUNT (3)
#define PROCESSOR_INTEL_386 (386)
#define PROCESSOR_INTEL_486 (486)
#define PROCESSOR_INTEL_IA64 (2200)
#define PROCESSOR_INTEL_PENTIUM (586)
#define PROCESSOR_MIPS_R4000 (4000)
#define PROCESSOR_MOTOROLA_821 (821)
#define PROCESSOR_OPTIL (18767)
#define PROCESSOR_PERF_BOOST_MODE_AGGRESSIVE (2)
#define PROCESSOR_PERF_BOOST_MODE_DISABLED (0)
#define PROCESSOR_PERF_BOOST_MODE_EFFICIENT_AGGRESSIVE (4)
#define PROCESSOR_PERF_BOOST_MODE_EFFICIENT_ENABLED (3)
#define PROCESSOR_PERF_BOOST_MODE_ENABLED (1)
#define PROCESSOR_PERF_BOOST_MODE_MAX PROCESSOR_PERF_BOOST_MODE_EFFICIENT_AGGRESSIVE
#define PROCESSOR_PERF_BOOST_POLICY_DISABLED (0)
#define PROCESSOR_PERF_BOOST_POLICY_MAX (100)
#define PROCESSOR_PPC_601 (601)
#define PROCESSOR_PPC_603 (603)
#define PROCESSOR_PPC_604 (604)
#define PROCESSOR_PPC_620 (620)
#define PROCESSOR_SHx_SH3 (103)
#define PROCESSOR_SHx_SH4 (104)
#define PROCESSOR_STRONGARM (2577)
#define PROCESS_ALL_ACCESS (2035711l)
#define PROCESS_CREATE_PROCESS (128)
#define PROCESS_CREATE_THREAD (2)
#define PROCESS_DUP_HANDLE (64)
#define PROCESS_HEAP_ENTRY_BUSY (4)
#define PROCESS_HEAP_ENTRY_DDESHARE (32)
#define PROCESS_HEAP_ENTRY_MOVEABLE (16)
#define PROCESS_HEAP_REGION (1)
#define PROCESS_HEAP_UNCOMMITTED_RANGE (2)
#define PROCESS_MODE_BACKGROUND_BEGIN (1048576)
#define PROCESS_MODE_BACKGROUND_END (2097152)
#define PROCESS_QUERY_INFORMATION (1024)
#define PROCESS_QUERY_LIMITED_INFORMATION (4096)
#define PROCESS_SET_INFORMATION (512)
#define PROCESS_SET_QUOTA (256)
#define PROCESS_SET_SESSIONID (4)
#define PROCESS_SUSPEND_RESUME (2048)
#define PROCESS_TERMINATE (1)
#define PROCESS_VM_OPERATION (8)
#define PROCESS_VM_READ (16)
#define PROCESS_VM_WRITE (32)
#define PROC_IDLE_BUCKET_COUNT (6)
#define PROC_IDLE_BUCKET_COUNT_EX (16)
#define PRODUCT_BUSINESS (6)
#define PRODUCT_BUSINESS_N (16)
#define PRODUCT_CLUSTER_SERVER (18)
#define PRODUCT_CLUSTER_SERVER_V (64)
#define PRODUCT_CORE (101)
#define PRODUCT_CORE_ARM (97)
#define PRODUCT_CORE_COUNTRYSPECIFIC (99)
#define PRODUCT_CORE_N (98)
#define PRODUCT_CORE_SINGLELANGUAGE (100)
#define PRODUCT_DATACENTER_EVALUATION_SERVER (80)
#define PRODUCT_DATACENTER_SERVER (8)
#define PRODUCT_DATACENTER_SERVER_CORE (12)
#define PRODUCT_DATACENTER_SERVER_CORE_V (39)
#define PRODUCT_DATACENTER_SERVER_V (37)
#define PRODUCT_EDUCATION (121)
#define PRODUCT_EDUCATION_N (122)
#define PRODUCT_EMBEDDED (65)
#define PRODUCT_EMBEDDED_A (88)
#define PRODUCT_EMBEDDED_AUTOMOTIVE (85)
#define PRODUCT_EMBEDDED_E (90)
#define PRODUCT_EMBEDDED_INDUSTRY (89)
#define PRODUCT_EMBEDDED_INDUSTRY_A (86)
#define PRODUCT_EMBEDDED_INDUSTRY_A_E (92)
#define PRODUCT_EMBEDDED_INDUSTRY_E (91)
#define PRODUCT_ENTERPRISE (4)
#define PRODUCT_ENTERPRISE_E (70)
#define PRODUCT_ENTERPRISE_EVALUATION (72)
#define PRODUCT_ENTERPRISE_N (27)
#define PRODUCT_ENTERPRISE_N_EVALUATION (84)
#define PRODUCT_ENTERPRISE_SERVER (10)
#define PRODUCT_ENTERPRISE_SERVER_CORE (14)
#define PRODUCT_ENTERPRISE_SERVER_CORE_V (41)
#define PRODUCT_ENTERPRISE_SERVER_IA64 (15)
#define PRODUCT_ENTERPRISE_SERVER_V (38)
#define PRODUCT_ESSENTIALBUSINESS_SERVER_ADDL (60)
#define PRODUCT_ESSENTIALBUSINESS_SERVER_ADDLSVC (62)
#define PRODUCT_ESSENTIALBUSINESS_SERVER_MGMT (59)
#define PRODUCT_ESSENTIALBUSINESS_SERVER_MGMTSVC (61)
#define PRODUCT_HOME_BASIC (2)
#define PRODUCT_HOME_BASIC_E (67)
#define PRODUCT_HOME_BASIC_N (5)
#define PRODUCT_HOME_PREMIUM (3)
#define PRODUCT_HOME_PREMIUM_E (68)
#define PRODUCT_HOME_PREMIUM_N (26)
#define PRODUCT_HOME_PREMIUM_SERVER (34)
#define PRODUCT_HOME_SERVER (19)
#define PRODUCT_HYPERV (42)
#define PRODUCT_ID_LENGTH (16)
#define PRODUCT_MEDIUMBUSINESS_SERVER_MANAGEMENT (30)
#define PRODUCT_MEDIUMBUSINESS_SERVER_MESSAGING (32)
#define PRODUCT_MEDIUMBUSINESS_SERVER_SECURITY (31)
#define PRODUCT_MOBILE_CORE (104)
#define PRODUCT_MOBILE_ENTERPRISE (133)
#define PRODUCT_MULTIPOINT_PREMIUM_SERVER (77)
#define PRODUCT_MULTIPOINT_STANDARD_SERVER (76)
#define PRODUCT_PROFESSIONAL (48)
#define PRODUCT_PROFESSIONAL_E (69)
#define PRODUCT_PROFESSIONAL_N (49)
#define PRODUCT_PROFESSIONAL_WMC (103)
#define PRODUCT_SB_SOLUTION_SERVER (50)
#define PRODUCT_SB_SOLUTION_SERVER_EM (54)
#define PRODUCT_SERVER_FOR_SB_SOLUTIONS (51)
#define PRODUCT_SERVER_FOR_SB_SOLUTIONS_EM (55)
#define PRODUCT_SERVER_FOR_SMALLBUSINESS (24)
#define PRODUCT_SERVER_FOR_SMALLBUSINESS_V (35)
#define PRODUCT_SERVER_FOUNDATION (33)
#define PRODUCT_SMALLBUSINESS_SERVER (9)
#define PRODUCT_SMALLBUSINESS_SERVER_PREMIUM (25)
#define PRODUCT_SMALLBUSINESS_SERVER_PREMIUM_CORE (63)
#define PRODUCT_SOLUTION_EMBEDDEDSERVER (56)
#define PRODUCT_SOLUTION_EMBEDDEDSERVER_CORE (57)
#define PRODUCT_STANDARD_EVALUATION_SERVER (79)
#define PRODUCT_STANDARD_SERVER (7)
#define PRODUCT_STANDARD_SERVER_CORE (13)
#define PRODUCT_STANDARD_SERVER_CORE_V (40)
#define PRODUCT_STANDARD_SERVER_SOLUTIONS (52)
#define PRODUCT_STANDARD_SERVER_SOLUTIONS_CORE (53)
#define PRODUCT_STANDARD_SERVER_V (36)
#define PRODUCT_STARTER (11)
#define PRODUCT_STARTER_E (66)
#define PRODUCT_STARTER_N (47)
#define PRODUCT_STORAGE_ENTERPRISE_SERVER (23)
#define PRODUCT_STORAGE_ENTERPRISE_SERVER_CORE (46)
#define PRODUCT_STORAGE_EXPRESS_SERVER (20)
#define PRODUCT_STORAGE_EXPRESS_SERVER_CORE (43)
#define PRODUCT_STORAGE_STANDARD_EVALUATION_SERVER (96)
#define PRODUCT_STORAGE_STANDARD_SERVER (21)
#define PRODUCT_STORAGE_STANDARD_SERVER_CORE (44)
#define PRODUCT_STORAGE_WORKGROUP_EVALUATION_SERVER (95)
#define PRODUCT_STORAGE_WORKGROUP_SERVER (22)
#define PRODUCT_STORAGE_WORKGROUP_SERVER_CORE (45)
#define PRODUCT_THINPC (87)
#define PRODUCT_ULTIMATE (1)
#define PRODUCT_ULTIMATE_E (71)
#define PRODUCT_ULTIMATE_N (28)
#define PRODUCT_UNDEFINED (0)
#define PRODUCT_UNLICENSED (2882382797u)
#define PRODUCT_WEB_SERVER (17)
#define PRODUCT_WEB_SERVER_CORE (29)
#define PROFILE_EMBEDDED (77)
#define PROFILE_KERNEL (536870912)
#define PROFILE_LINKED (76)
#define PROFILE_SERVER (1073741824)
#define PROFILE_USER (268435456)
#define PROGRESS_CANCEL (1)
#define PROGRESS_CONTINUE (0)
#define PROGRESS_QUIET (3)
#define PROGRESS_STOP (2)
#define PROOF_QUALITY (2)
#define PROPERTYKEY_DEFINED 
#define PROPSHEETHEADER __MINGW_NAME_AW ( PROPSHEETHEADER )
#define PROPSHEETHEADERA_V1_SIZE CCSIZEOF_STRUCT ( PROPSHEETHEADERA , pfnCallback )
#define PROPSHEETHEADERA_V2_SIZE CCSIZEOF_STRUCT ( PROPSHEETHEADERA , DUMMYUNION5_MEMBER ( hbmHeader ) )
#define PROPSHEETHEADERW_V1_SIZE CCSIZEOF_STRUCT ( PROPSHEETHEADERW , pfnCallback )
#define PROPSHEETHEADERW_V2_SIZE CCSIZEOF_STRUCT ( PROPSHEETHEADERW , DUMMYUNION5_MEMBER ( hbmHeader ) )
#define PROPSHEETHEADER_V1_SIZE __MINGW_NAME_AW_EXT ( PROPSHEETHEADER , _V1_SIZE )
#define PROPSHEETHEADER_V2_SIZE __MINGW_NAME_AW_EXT ( PROPSHEETHEADER , _V2_SIZE )
#define PROPSHEETPAGE __MINGW_NAME_AW ( PROPSHEETPAGE )
#define PROPSHEETPAGEA_V1_FIELDS DWORD dwSize , dwFlags ; HINSTANCE hInstance ; __C89_NAMELESS union { LPCSTR pszTemplate ; PROPSHEETPAGE_RESOURCE pResource ; } DUMMYUNIONNAME ; __C89_NAMELESS union { HICON hIcon ; LPCSTR pszIcon ; } DUMMYUNIONNAME2 ; LPCSTR pszTitle ; DLGPROC pfnDlgProc ; LPARAM lParam ; LPFNPSPCALLBACKA pfnCallback ; UINT * pcRefParent ;
#define PROPSHEETPAGEA_V1_SIZE CCSIZEOF_STRUCT ( PROPSHEETPAGEA , pcRefParent )
#define PROPSHEETPAGEA_V2_SIZE CCSIZEOF_STRUCT ( PROPSHEETPAGEA , pszHeaderSubTitle )
#define PROPSHEETPAGEW_V1_FIELDS DWORD dwSize , dwFlags ; HINSTANCE hInstance ; __C89_NAMELESS union { LPCWSTR pszTemplate ; PROPSHEETPAGE_RESOURCE pResource ; } DUMMYUNIONNAME ; __C89_NAMELESS union { HICON hIcon ; LPCWSTR pszIcon ; } DUMMYUNIONNAME2 ; LPCWSTR pszTitle ; DLGPROC pfnDlgProc ; LPARAM lParam ; LPFNPSPCALLBACKW pfnCallback ; UINT * pcRefParent ;
#define PROPSHEETPAGEW_V1_SIZE CCSIZEOF_STRUCT ( PROPSHEETPAGEW , pcRefParent )
#define PROPSHEETPAGEW_V2_SIZE CCSIZEOF_STRUCT ( PROPSHEETPAGEW , pszHeaderSubTitle )
#define PROPSHEETPAGE_LATEST __MINGW_NAME_AW_EXT ( PROPSHEETPAGE , _LATEST )
#define PROPSHEETPAGE_V1 __MINGW_NAME_AW_EXT ( PROPSHEETPAGE , _V1 )
#define PROPSHEETPAGE_V1_SIZE __MINGW_NAME_AW_EXT ( PROPSHEETPAGE , _V1_SIZE )
#define PROPSHEETPAGE_V2 __MINGW_NAME_AW_EXT ( PROPSHEETPAGE , _V2 )
#define PROPSHEETPAGE_V2_SIZE __MINGW_NAME_AW_EXT ( PROPSHEETPAGE , _V2_SIZE )
#define PROPSHEETPAGE_V3 __MINGW_NAME_AW_EXT ( PROPSHEETPAGE , _V3 )
#define PROP_LG_CXDLG (252)
#define PROP_LG_CYDLG (218)
#define PROP_MED_CXDLG (227)
#define PROP_MED_CYDLG (215)
#define PROP_SM_CXDLG (212)
#define PROP_SM_CYDLG (188)
#define PROTECTED_DACL_SECURITY_INFORMATION (-2147483648l)
#define PROTECTED_SACL_SECURITY_INFORMATION (1073741824l)
#define PROVIDER_KEEPS_VALUE_LENGTH (1)
#define PROV_DH_SCHANNEL (18)
#define PROV_DSS (3)
#define PROV_DSS_DH (13)
#define PROV_EC_ECDSA_FULL (16)
#define PROV_EC_ECDSA_SIG (14)
#define PROV_EC_ECNRA_FULL (17)
#define PROV_EC_ECNRA_SIG (15)
#define PROV_FORTEZZA (4)
#define PROV_INTEL_SEC (22)
#define PROV_MS_EXCHANGE (5)
#define PROV_REPLACE_OWF (23)
#define PROV_RNG (21)
#define PROV_RSA_AES (24)
#define PROV_RSA_FULL (1)
#define PROV_RSA_SCHANNEL (12)
#define PROV_RSA_SIG (2)
#define PROV_SPYRUS_LYNKS (20)
#define PROV_SSL (6)
#define PROV_STT_ACQ (8)
#define PROV_STT_BRND (9)
#define PROV_STT_ISS (11)
#define PROV_STT_MER (7)
#define PROV_STT_ROOT (10)
#define PRPC_HTTP_TRANSPORT_CREDENTIALS __MINGW_NAME_UAW ( PRPC_HTTP_TRANSPORT_CREDENTIALS )
#define PRPC_SECURITY_QOS_V2 __MINGW_NAME_UAW ( PRPC_SECURITY_QOS_V2 )
#define PRPC_SECURITY_QOS_V3 __MINGW_NAME_UAW ( PRPC_SECURITY_QOS_V3 )
#define PR_JOBSTATUS (0)
#define PSBTN_APPLYNOW (4)
#define PSBTN_BACK (0)
#define PSBTN_CANCEL (5)
#define PSBTN_FINISH (2)
#define PSBTN_HELP (6)
#define PSBTN_MAX (6)
#define PSBTN_NEXT (1)
#define PSBTN_OK (3)
#define PSCARD_READERSTATE_A PSCARD_READERSTATEA
#define PSCARD_READERSTATE_W PSCARD_READERSTATEW
#define PSCB_BUTTONPRESSED (3)
#define PSCB_INITIALIZED (1)
#define PSCB_PRECREATE (2)
#define PSD_DEFAULTMINMARGINS (0)
#define PSD_DISABLEMARGINS (16)
#define PSD_DISABLEORIENTATION (256)
#define PSD_DISABLEPAGEPAINTING (524288)
#define PSD_DISABLEPAPER (512)
#define PSD_DISABLEPRINTER (32)
#define PSD_ENABLEPAGEPAINTHOOK (262144)
#define PSD_ENABLEPAGESETUPHOOK (8192)
#define PSD_ENABLEPAGESETUPTEMPLATE (32768)
#define PSD_ENABLEPAGESETUPTEMPLATEHANDLE (131072)
#define PSD_INHUNDREDTHSOFMILLIMETERS (8)
#define PSD_INTHOUSANDTHSOFINCHES (4)
#define PSD_INWININIINTLMEASURE (0)
#define PSD_MARGINS (2)
#define PSD_MINMARGINS (1)
#define PSD_NONETWORKBUTTON (2097152)
#define PSD_NOWARNING (128)
#define PSD_RETURNDEFAULT (1024)
#define PSD_SHOWHELP (2048)
#define PSEC_WINNT_AUTH_IDENTITY __MINGW_NAME_UAW ( PSEC_WINNT_AUTH_IDENTITY )
#define PSH_DEFAULT (0)
#define PSH_HASHELP (512)
#define PSH_HEADER (524288)
#define PSH_MODELESS (1024)
#define PSH_NOAPPLYNOW (128)
#define PSH_NOCONTEXTHELP (33554432)
#define PSH_PROPSHEETPAGE (8)
#define PSH_PROPTITLE (1)
#define PSH_RTLREADING (2048)
#define PSH_STRETCHWATERMARK (262144)
#define PSH_USECALLBACK (256)
#define PSH_USEHBMHEADER (1048576)
#define PSH_USEHBMWATERMARK (65536)
#define PSH_USEHICON (2)
#define PSH_USEHPLWATERMARK (131072)
#define PSH_USEICONID (4)
#define PSH_USEPAGELANG (2097152)
#define PSH_USEPSTARTPAGE (64)
#define PSH_WATERMARK (32768)
#define PSH_WIZARD (32)
#define PSH_WIZARD97 (16777216)
#define PSH_WIZARDCONTEXTHELP (4096)
#define PSH_WIZARDHASFINISH (16)
#define PSH_WIZARD_LITE (4194304)
#define PSIDENT_GDICENTRIC (0)
#define PSIDENT_PSCENTRIC (1)
#define PSINJECT_BEGINDEFAULTS (12)
#define PSINJECT_BEGINPAGESETUP (101)
#define PSINJECT_BEGINPROLOG (14)
#define PSINJECT_BEGINSETUP (16)
#define PSINJECT_BEGINSTREAM (1)
#define PSINJECT_BOUNDINGBOX (9)
#define PSINJECT_COMMENTS (11)
#define PSINJECT_DOCNEEDEDRES (5)
#define PSINJECT_DOCSUPPLIEDRES (6)
#define PSINJECT_DOCUMENTPROCESSCOLORS (10)
#define PSINJECT_DOCUMENTPROCESSCOLORSATEND (21)
#define PSINJECT_ENDDEFAULTS (13)
#define PSINJECT_ENDPAGECOMMENTS (107)
#define PSINJECT_ENDPAGESETUP (102)
#define PSINJECT_ENDPROLOG (15)
#define PSINJECT_ENDSETUP (17)
#define PSINJECT_ENDSTREAM (20)
#define PSINJECT_EOF (19)
#define PSINJECT_ORIENTATION (8)
#define PSINJECT_PAGEBBOX (106)
#define PSINJECT_PAGENUMBER (100)
#define PSINJECT_PAGEORDER (7)
#define PSINJECT_PAGES (4)
#define PSINJECT_PAGESATEND (3)
#define PSINJECT_PAGETRAILER (103)
#define PSINJECT_PLATECOLOR (104)
#define PSINJECT_PSADOBE (2)
#define PSINJECT_SHOWPAGE (105)
#define PSINJECT_TRAILER (18)
#define PSINJECT_VMRESTORE (201)
#define PSINJECT_VMSAVE (200)
#define PSM_ADDPAGE (1127)
#define PSM_APPLY (1134)
#define PSM_CANCELTOCLOSE (1131)
#define PSM_CHANGED (1128)
#define PSM_GETCURRENTPAGEHWND (1142)
#define PSM_GETRESULT (1159)
#define PSM_GETTABCONTROL (1140)
#define PSM_HWNDTOINDEX (1153)
#define PSM_IDTOINDEX (1157)
#define PSM_INDEXTOHWND (1154)
#define PSM_INDEXTOID (1158)
#define PSM_INDEXTOPAGE (1156)
#define PSM_INSERTPAGE (1143)
#define PSM_ISDIALOGMESSAGE (1141)
#define PSM_PAGETOINDEX (1155)
#define PSM_PRESSBUTTON (1137)
#define PSM_QUERYSIBLINGS (1132)
#define PSM_REBOOTSYSTEM (1130)
#define PSM_RECALCPAGESIZES (1160)
#define PSM_REMOVEPAGE (1126)
#define PSM_RESTARTWINDOWS (1129)
#define PSM_SETCURSEL (1125)
#define PSM_SETCURSELID (1138)
#define PSM_SETFINISHTEXT __MINGW_NAME_AW ( PSM_SETFINISHTEXT )
#define PSM_SETFINISHTEXTA (1139)
#define PSM_SETFINISHTEXTW (1145)
#define PSM_SETHEADERSUBTITLE __MINGW_NAME_AW ( PSM_SETHEADERSUBTITLE )
#define PSM_SETHEADERSUBTITLEA (1151)
#define PSM_SETHEADERSUBTITLEW (1152)
#define PSM_SETHEADERTITLE __MINGW_NAME_AW ( PSM_SETHEADERTITLE )
#define PSM_SETHEADERTITLEA (1149)
#define PSM_SETHEADERTITLEW (1150)
#define PSM_SETTITLE __MINGW_NAME_AW ( PSM_SETTITLE )
#define PSM_SETTITLEA (1135)
#define PSM_SETTITLEW (1144)
#define PSM_SETWIZBUTTONS (1136)
#define PSM_UNCHANGED (1133)
#define PSNRET_INVALID (1)
#define PSNRET_INVALID_NOCHANGEPAGE (2)
#define PSNRET_MESSAGEHANDLED (3)
#define PSNRET_NOERROR (0)
#define PSN_APPLY (4294967094u)
#define PSN_FIRST (4294967096u)
#define PSN_GETOBJECT (4294967086u)
#define PSN_HELP (4294967091u)
#define PSN_KILLACTIVE (4294967095u)
#define PSN_LAST (4294966997u)
#define PSN_QUERYCANCEL (4294967087u)
#define PSN_QUERYINITIALFOCUS (4294967083u)
#define PSN_RESET (4294967093u)
#define PSN_SETACTIVE (4294967096u)
#define PSN_TRANSLATEACCELERATOR (4294967084u)
#define PSN_WIZBACK (4294967090u)
#define PSN_WIZFINISH (4294967088u)
#define PSN_WIZNEXT (4294967089u)
#define PSPCB_ADDREF (0)
#define PSPCB_CREATE (2)
#define PSPCB_RELEASE (1)
#define PSPROTOCOL_ASCII (0)
#define PSPROTOCOL_BCP (1)
#define PSPROTOCOL_BINARY (3)
#define PSPROTOCOL_TBCP (2)
#define PSP_DEFAULT (0)
#define PSP_DLGINDIRECT (1)
#define PSP_HASHELP (32)
#define PSP_HIDEHEADER (2048)
#define PSP_PREMATURE (1024)
#define PSP_RTLREADING (16)
#define PSP_USECALLBACK (128)
#define PSP_USEFUSIONCONTEXT (16384)
#define PSP_USEHEADERSUBTITLE (8192)
#define PSP_USEHEADERTITLE (4096)
#define PSP_USEHICON (2)
#define PSP_USEICONID (4)
#define PSP_USEREFPARENT (64)
#define PSP_USETITLE (8)
#define PST_FAX ( ( DWORD ) 0x21 )
#define PST_LAT ( ( DWORD ) 0x101 )
#define PST_MODEM ( ( DWORD ) 0x6 )
#define PST_NETWORK_BRIDGE ( ( DWORD ) 0x100 )
#define PST_PARALLELPORT ( ( DWORD ) 0x2 )
#define PST_RS232 ( ( DWORD ) 0x1 )
#define PST_RS422 ( ( DWORD ) 0x3 )
#define PST_RS423 ( ( DWORD ) 0x4 )
#define PST_RS449 ( ( DWORD ) 0x5 )
#define PST_SCANNER ( ( DWORD ) 0x22 )
#define PST_TCPIP_TELNET ( ( DWORD ) 0x102 )
#define PST_UNSPECIFIED ( ( DWORD ) 0x0 )
#define PST_X25 ( ( DWORD ) 0x103 )
#define PSWIZB_BACK (1)
#define PSWIZB_DISABLEDFINISH (8)
#define PSWIZB_FINISH (4)
#define PSWIZB_NEXT (2)
#define PS_ALTERNATE (8)
#define PS_COSMETIC (0)
#define PS_DASH (1)
#define PS_DASHDOT (3)
#define PS_DASHDOTDOT (4)
#define PS_DOT (2)
#define PS_ENDCAP_FLAT (512)
#define PS_ENDCAP_MASK (3840)
#define PS_ENDCAP_ROUND (0)
#define PS_ENDCAP_SQUARE (256)
#define PS_GEOMETRIC (65536)
#define PS_INSIDEFRAME (6)
#define PS_JOIN_BEVEL (4096)
#define PS_JOIN_MASK (61440)
#define PS_JOIN_MITER (8192)
#define PS_JOIN_ROUND (0)
#define PS_NULL (5)
#define PS_SOLID (0)
#define PS_STYLE_MASK (15)
#define PS_TYPE_MASK (983040)
#define PS_USERSTYLE (7)
#define PT_BEZIERTO (4)
#define PT_CLOSEFIGURE (1)
#define PT_LINETO (2)
#define PT_MOVETO (6)
#define PUBLICKEYBLOB (6)
#define PUBLICKEYBLOBEX (10)
#define PURGE_RXABORT (2)
#define PURGE_RXCLEAR (8)
#define PURGE_TXABORT (1)
#define PURGE_TXCLEAR (4)
#define PWR_CRITICALRESUME (3)
#define PWR_FAIL (-1)
#define PWR_OK (1)
#define PWR_SUSPENDREQUEST (1)
#define PWR_SUSPENDRESUME (2)
#define PW_CLIENTONLY (1)
#define PageSetupDlg __MINGW_NAME_AW ( PageSetupDlg )
#define PartitionClassGuid GUID_DEVINTERFACE_PARTITION
#define PeekConsoleInput __MINGW_NAME_AW ( PeekConsoleInput )
#define PeekMessage __MINGW_NAME_AW ( PeekMessage )
#define PlaySound __MINGW_NAME_AW ( PlaySound )
#define PolyTextOut __MINGW_NAME_AW ( PolyTextOut )
#define PostAppMessage __MINGW_NAME_AW ( PostAppMessage )
#define PostAppMessageA(idThread, wMsg, wParam, lParam) PostThreadMessageA ( ( DWORD ) idThread , wMsg , wParam , lParam )
#define PostAppMessageW(idThread, wMsg, wParam, lParam) PostThreadMessageW ( ( DWORD ) idThread , wMsg , wParam , lParam )
#define PostMessage __MINGW_NAME_AW ( PostMessage )
#define PostThreadMessage __MINGW_NAME_AW ( PostThreadMessage )
#define PreFetchCacheLine(l, a) _mm_prefetch ( ( CHAR CONST * ) a , l )
#define PrefetchForWrite(p) _m_prefetchw ( p )
#define PrintDlg __MINGW_NAME_AW ( PrintDlg )
#define PrinterMessageBox __MINGW_NAME_AW ( PrinterMessageBox )
#define PrivateExtractIcons __MINGW_NAME_AW ( PrivateExtractIcons )
#define PrivilegedServiceAuditAlarm PrivilegedServiceAuditAlarmA
#define PropSheet_AddPage(hDlg, hpage) SNDMSG ( hDlg , PSM_ADDPAGE , 0 , ( LPARAM ) hpage )
#define PropSheet_Apply(hDlg) SNDMSG ( hDlg , PSM_APPLY , ( WPARAM ) 0 , ( LPARAM ) 0 )
#define PropSheet_CancelToClose(hDlg) PostMessage ( hDlg , PSM_CANCELTOCLOSE , ( WPARAM ) 0 , ( LPARAM ) 0 )
#define PropSheet_Changed(hDlg, hwnd) SNDMSG ( hDlg , PSM_CHANGED , ( WPARAM ) hwnd , ( LPARAM ) 0 )
#define PropSheet_GetCurrentPageHwnd(hDlg) ( HWND ) SNDMSG ( hDlg , PSM_GETCURRENTPAGEHWND , ( WPARAM ) 0 , ( LPARAM ) 0 )
#define PropSheet_GetResult(hDlg) SNDMSG ( hDlg , PSM_GETRESULT , 0 , 0 )
#define PropSheet_GetTabControl(hDlg) ( HWND ) SNDMSG ( hDlg , PSM_GETTABCONTROL , 0 , 0 )
#define PropSheet_HwndToIndex(hDlg, hwnd) ( int ) SNDMSG ( hDlg , PSM_HWNDTOINDEX , ( WPARAM ) ( hwnd ) , 0 )
#define PropSheet_IdToIndex(hDlg, id) ( int ) SNDMSG ( hDlg , PSM_IDTOINDEX , 0 , ( LPARAM ) ( id ) )
#define PropSheet_IndexToHwnd(hDlg, i) ( HWND ) SNDMSG ( hDlg , PSM_INDEXTOHWND , ( WPARAM ) ( i ) , 0 )
#define PropSheet_IndexToId(hDlg, i) SNDMSG ( hDlg , PSM_INDEXTOID , ( WPARAM ) ( i ) , 0 )
#define PropSheet_IndexToPage(hDlg, i) ( HPROPSHEETPAGE ) SNDMSG ( hDlg , PSM_INDEXTOPAGE , ( WPARAM ) ( i ) , 0 )
#define PropSheet_InsertPage(hDlg, index, hpage) SNDMSG ( hDlg , PSM_INSERTPAGE , ( WPARAM ) ( index ) , ( LPARAM ) ( hpage ) )
#define PropSheet_IsDialogMessage(hDlg, pMsg) ( WINBOOL ) SNDMSG ( hDlg , PSM_ISDIALOGMESSAGE , 0 , ( LPARAM ) pMsg )
#define PropSheet_PageToIndex(hDlg, hpage) ( int ) SNDMSG ( hDlg , PSM_PAGETOINDEX , 0 , ( LPARAM ) ( hpage ) )
#define PropSheet_PressButton(hDlg, iButton) PostMessage ( hDlg , PSM_PRESSBUTTON , ( WPARAM ) iButton , ( LPARAM ) 0 )
#define PropSheet_QuerySiblings(hDlg, wParam, lParam) SNDMSG ( hDlg , PSM_QUERYSIBLINGS , wParam , lParam )
#define PropSheet_RebootSystem(hDlg) SNDMSG ( hDlg , PSM_REBOOTSYSTEM , ( WPARAM ) 0 , ( LPARAM ) 0 )
#define PropSheet_RecalcPageSizes(hDlg) SNDMSG ( hDlg , PSM_RECALCPAGESIZES , 0 , 0 )
#define PropSheet_RemovePage(hDlg, index, hpage) SNDMSG ( hDlg , PSM_REMOVEPAGE , index , ( LPARAM ) hpage )
#define PropSheet_RestartWindows(hDlg) SNDMSG ( hDlg , PSM_RESTARTWINDOWS , ( WPARAM ) 0 , ( LPARAM ) 0 )
#define PropSheet_SetCurSel(hDlg, hpage, index) SNDMSG ( hDlg , PSM_SETCURSEL , ( WPARAM ) index , ( LPARAM ) hpage )
#define PropSheet_SetCurSelByID(hDlg, id) SNDMSG ( hDlg , PSM_SETCURSELID , 0 , ( LPARAM ) id )
#define PropSheet_SetFinishText(hDlg, lpszText) SNDMSG ( hDlg , PSM_SETFINISHTEXT , 0 , ( LPARAM ) lpszText )
#define PropSheet_SetHeaderSubTitle(hDlg, index, lpszText) SNDMSG ( hDlg , PSM_SETHEADERSUBTITLE , ( WPARAM ) ( index ) , ( LPARAM ) ( lpszText ) )
#define PropSheet_SetHeaderTitle(hDlg, index, lpszText) SNDMSG ( hDlg , PSM_SETHEADERTITLE , ( WPARAM ) ( index ) , ( LPARAM ) ( lpszText ) )
#define PropSheet_SetTitle(hDlg, wStyle, lpszText) SNDMSG ( hDlg , PSM_SETTITLE , wStyle , ( LPARAM ) ( LPCTSTR ) ( lpszText ) )
#define PropSheet_SetWizButtons(hDlg, dwFlags) PostMessage ( hDlg , PSM_SETWIZBUTTONS , ( WPARAM ) 0 , ( LPARAM ) dwFlags )
#define PropSheet_UnChanged(hDlg, hwnd) SNDMSG ( hDlg , PSM_UNCHANGED , ( WPARAM ) hwnd , ( LPARAM ) 0 )
#define PropagateResult(hrPrevious, scBase) ( ( HRESULT ) scBase )
#define PropertySheet __MINGW_NAME_AW ( PropertySheet )
#define Ptr64ToPtr(p) ( ( void * ) p )
#define PtrToPtr64(p) ( ( void * POINTER_64 ) p )
#define QDI_DIBTOSCREEN (4)
#define QDI_GETDIBITS (2)
#define QDI_SETDIBITS (1)
#define QDI_STRETCHDIB (8)
#define QID_SYNC (4294967295u)
#define QS_ALLEVENTS (1215)
#define QS_ALLINPUT (1279)
#define QS_ALLPOSTMESSAGE (256)
#define QS_HOTKEY (128)
#define QS_INPUT (1031)
#define QS_KEY (1)
#define QS_MOUSE (6)
#define QS_MOUSEBUTTON (4)
#define QS_MOUSEMOVE (2)
#define QS_PAINT (32)
#define QS_POSTMESSAGE (8)
#define QS_RAWINPUT (1024)
#define QS_SENDMESSAGE (64)
#define QS_TIMER (16)
#define QUERYDIBSUPPORT (3073)
#define QUERYESCSUPPORT (8)
#define QUERYROPSUPPORT (40)
#define QUERY_ACTCTX_FLAG_ACTCTX_IS_ADDRESS (16)
#define QUERY_ACTCTX_FLAG_ACTCTX_IS_HMODULE (8)
#define QUERY_ACTCTX_FLAG_NO_ADDREF (2147483648u)
#define QUERY_ACTCTX_FLAG_USE_ACTIVE_ACTCTX (4)
#define QUOTA_LIMITS_HARDWS_MAX_DISABLE (8)
#define QUOTA_LIMITS_HARDWS_MAX_ENABLE (4)
#define QUOTA_LIMITS_HARDWS_MIN_DISABLE (2)
#define QUOTA_LIMITS_HARDWS_MIN_ENABLE (1)
#define QUOTA_LIMITS_USE_DEFAULT_LIMITS (16)
#define QueryDosDevice QueryDosDeviceA
#define QueryServiceConfig __MINGW_NAME_AW ( QueryServiceConfig )
#define QueryServiceConfig2 __MINGW_NAME_AW ( QueryServiceConfig2 )
#define QueryServiceLockStatus __MINGW_NAME_AW ( QueryServiceLockStatus )
#define R2_BLACK (1)
#define R2_COPYPEN (13)
#define R2_LAST (16)
#define R2_MASKNOTPEN (3)
#define R2_MASKPEN (9)
#define R2_MASKPENNOT (5)
#define R2_MERGENOTPEN (12)
#define R2_MERGEPEN (15)
#define R2_MERGEPENNOT (14)
#define R2_NOP (11)
#define R2_NOT (6)
#define R2_NOTCOPYPEN (4)
#define R2_NOTMASKPEN (8)
#define R2_NOTMERGEPEN (2)
#define R2_NOTXORPEN (10)
#define R2_WHITE (16)
#define R2_XORPEN (7)
#define RANDOM_PADDING (2)
#define RASTERCAPS (38)
#define RASTER_FONTTYPE (1)
#define RAWINPUT_ALIGN(x) ( ( ( x ) + sizeof ( QWORD ) - 1 ) & ~ ( sizeof ( QWORD ) - 1 ) )
#define RCRYPT_FAILED(RT) ( ( RT ) == CRYPT_FAILED )
#define RCRYPT_SUCCEEDED(RT) ( ( RT ) == CRYPT_SUCCEED )
#define RC_BANDING (2)
#define RC_BIGFONT (1024)
#define RC_BITBLT (1)
#define RC_BITMAP64 (8)
#define RC_DEVBITS (32768)
#define RC_DIBTODEV (512)
#define RC_DI_BITMAP (128)
#define RC_FLOODFILL (4096)
#define RC_GDI20_OUTPUT (16)
#define RC_GDI20_STATE (32)
#define RC_NONE 
#define RC_OP_DX_OUTPUT (16384)
#define RC_PALETTE (256)
#define RC_SAVEBITMAP (64)
#define RC_SCALING (4)
#define RC_STRETCHBLT (2048)
#define RC_STRETCHDIB (8192)
#define RDH_RECTANGLES (1)
#define RDW_ALLCHILDREN (128)
#define RDW_ERASE (4)
#define RDW_ERASENOW (512)
#define RDW_FRAME (1024)
#define RDW_INTERNALPAINT (2)
#define RDW_INVALIDATE (1)
#define RDW_NOCHILDREN (64)
#define RDW_NOERASE (32)
#define RDW_NOFRAME (2048)
#define RDW_NOINTERNALPAINT (16)
#define RDW_UPDATENOW (256)
#define RDW_VALIDATE (8)
#define READ_ATTRIBUTES (208)
#define READ_ATTRIBUTE_BUFFER_SIZE (512)
#define READ_COMPRESSION_INFO_VALID (32)
#define READ_CONTROL (131072l)
#define READ_THREAD_PROFILING_FLAG_DISPATCHING (1)
#define READ_THREAD_PROFILING_FLAG_HARDWARE_COUNTERS (2)
#define READ_THRESHOLDS (209)
#define READ_THRESHOLD_BUFFER_SIZE (512)
#define REALTIME_PRIORITY_CLASS (256)
#define REASON_HWINSTALL SHTDN_REASON_MAJOR_HARDWARE | SHTDN_REASON_MINOR_INSTALLATION
#define REASON_LEGACY_API SHTDN_REASON_LEGACY_API
#define REASON_OTHER SHTDN_REASON_MAJOR_OTHER | SHTDN_REASON_MINOR_OTHER
#define REASON_PLANNED_FLAG SHTDN_REASON_FLAG_PLANNED
#define REASON_SERVICEHANG SHTDN_REASON_MAJOR_SOFTWARE | SHTDN_REASON_MINOR_HUNG
#define REASON_SWHWRECONF SHTDN_REASON_MAJOR_SOFTWARE | SHTDN_REASON_MINOR_RECONFIG
#define REASON_SWINSTALL SHTDN_REASON_MAJOR_SOFTWARE | SHTDN_REASON_MINOR_INSTALLATION
#define REASON_UNKNOWN SHTDN_REASON_UNKNOWN
#define REASON_UNSTABLE SHTDN_REASON_MAJOR_SYSTEM | SHTDN_REASON_MINOR_UNSTABLE
#define RECOVERED_READS_VALID (4)
#define RECOVERED_WRITES_VALID (1)
#define RECOVERY_DEFAULT_PING_INTERVAL (5000)
#define RECOVERY_MAX_PING_INTERVAL (300000)
#define REFCLSID const IID * __MIDL_CONST
#define REFERENCE_BLACK_MAX ( WORD ) 4000
#define REFERENCE_BLACK_MIN ( WORD ) 0
#define REFERENCE_WHITE_MAX ( WORD ) 10000
#define REFERENCE_WHITE_MIN ( WORD ) 6000
#define REFFMTID const IID * __MIDL_CONST
#define REFGUID const GUID * __MIDL_CONST
#define REFIID const IID * __MIDL_CONST
#define REGDB_E_BADTHREADINGMODEL _HRESULT_TYPEDEF_ ( 0x80040156 )
#define REGDB_E_CLASSNOTREG _HRESULT_TYPEDEF_ ( 0x80040154 )
#define REGDB_E_FIRST __MSABI_LONG ( 0x80040150 )
#define REGDB_E_IIDNOTREG _HRESULT_TYPEDEF_ ( 0x80040155 )
#define REGDB_E_INVALIDVALUE _HRESULT_TYPEDEF_ ( 0x80040153 )
#define REGDB_E_KEYMISSING _HRESULT_TYPEDEF_ ( 0x80040152 )
#define REGDB_E_LAST __MSABI_LONG ( 0x8004015F )
#define REGDB_E_READREGDB _HRESULT_TYPEDEF_ ( 0x80040150 )
#define REGDB_E_WRITEREGDB _HRESULT_TYPEDEF_ ( 0x80040151 )
#define REGDB_S_FIRST __MSABI_LONG ( 0x00040150 )
#define REGDB_S_LAST __MSABI_LONG ( 0x0004015F )
#define REGISTERED (4)
#define REGISTERING (0)
#define REGISTERWORDENUMPROC __MINGW_NAME_AW ( REGISTERWORDENUMPROC )
#define REGULAR_FONTTYPE (1024)
#define REG_APP_HIVE (16l)
#define REG_BINARY (3)
#define REG_BOOT_HIVE (1024l)
#define REG_CREATED_NEW_KEY (1l)
#define REG_DWORD (4)
#define REG_DWORD_BIG_ENDIAN (5)
#define REG_DWORD_LITTLE_ENDIAN (4)
#define REG_EXPAND_SZ (2)
#define REG_FORCE_RESTORE (8l)
#define REG_FORCE_UNLOAD (1)
#define REG_FULL_RESOURCE_DESCRIPTOR (9)
#define REG_HIVE_EXACT_FILE_GROWTH (128l)
#define REG_HIVE_NO_RM (256l)
#define REG_HIVE_SINGLE_LOG (512l)
#define REG_LATEST_FORMAT (2)
#define REG_LEGAL_CHANGE_FILTER (268435471l)
#define REG_LEGAL_OPTION (15l)
#define REG_LINK (6)
#define REG_MULTI_SZ (7)
#define REG_NONE (0)
#define REG_NOTIFY_CHANGE_ATTRIBUTES (2l)
#define REG_NOTIFY_CHANGE_LAST_SET (4l)
#define REG_NOTIFY_CHANGE_NAME (1l)
#define REG_NOTIFY_CHANGE_SECURITY (8l)
#define REG_NOTIFY_THREAD_AGNOSTIC (268435456l)
#define REG_NO_COMPRESSION (4)
#define REG_NO_LAZY_FLUSH (4l)
#define REG_OPENED_EXISTING_KEY (2l)
#define REG_OPTION_BACKUP_RESTORE (4l)
#define REG_OPTION_CREATE_LINK (2l)
#define REG_OPTION_NON_VOLATILE (0l)
#define REG_OPTION_OPEN_LINK (8l)
#define REG_OPTION_RESERVED (0l)
#define REG_OPTION_VOLATILE (1l)
#define REG_PROCESS_PRIVATE (32l)
#define REG_QWORD (11)
#define REG_QWORD_LITTLE_ENDIAN (11)
#define REG_REFRESH_HIVE (2l)
#define REG_RESOURCE_LIST (8)
#define REG_RESOURCE_REQUIREMENTS_LIST (10)
#define REG_SECURE_CONNECTION (1)
#define REG_STANDARD_FORMAT (1)
#define REG_START_JOURNAL (64l)
#define REG_SZ (1)
#define REG_WHOLE_HIVE_VOLATILE (1l)
#define RELATIVE (2)
#define REMOTE_NAME_INFO_LEVEL (2)
#define REPARSE_GUID_DATA_BUFFER_HEADER_SIZE FIELD_OFFSET ( REPARSE_GUID_DATA_BUFFER , GenericReparseBuffer )
#define REPLACEFILE_IGNORE_MERGE_ERRORS (2)
#define REPLACEFILE_WRITE_THROUGH (1)
#define REPLACE_ALTERNATE (11)
#define REPLACE_PRIMARY (10)
#define REPORT_NOT_ABLE_TO_EXPORT_PRIVATE_KEY (2)
#define REPORT_NO_PRIVATE_KEY (1)
#define RESETDEV (7)
#define RESOURCEDISPLAYTYPE_DIRECTORY (9)
#define RESOURCEDISPLAYTYPE_DOMAIN (1)
#define RESOURCEDISPLAYTYPE_FILE (4)
#define RESOURCEDISPLAYTYPE_GENERIC (0)
#define RESOURCEDISPLAYTYPE_GROUP (5)
#define RESOURCEDISPLAYTYPE_NDSCONTAINER (11)
#define RESOURCEDISPLAYTYPE_NETWORK (6)
#define RESOURCEDISPLAYTYPE_ROOT (7)
#define RESOURCEDISPLAYTYPE_SERVER (2)
#define RESOURCEDISPLAYTYPE_SHARE (3)
#define RESOURCEDISPLAYTYPE_SHAREADMIN (8)
#define RESOURCEDISPLAYTYPE_TREE (10)
#define RESOURCEMANAGER_ALL_ACCESS (2031743l)
#define RESOURCEMANAGER_COMPLETE_PROPAGATION (64)
#define RESOURCEMANAGER_ENLIST (8)
#define RESOURCEMANAGER_GENERIC_EXECUTE (1179740l)
#define RESOURCEMANAGER_GENERIC_READ (1179649l)
#define RESOURCEMANAGER_GENERIC_WRITE (1179774l)
#define RESOURCEMANAGER_GET_NOTIFICATION (16)
#define RESOURCEMANAGER_QUERY_INFORMATION (1)
#define RESOURCEMANAGER_RECOVER (4)
#define RESOURCEMANAGER_REGISTER_PROTOCOL (32)
#define RESOURCEMANAGER_SET_INFORMATION (2)
#define RESOURCETYPE_ANY (0)
#define RESOURCETYPE_DISK (1)
#define RESOURCETYPE_PRINT (2)
#define RESOURCETYPE_RESERVED (8)
#define RESOURCETYPE_UNKNOWN (4294967295u)
#define RESOURCEUSAGE_ALL (19)
#define RESOURCEUSAGE_ATTACHED (16)
#define RESOURCEUSAGE_CONNECTABLE (1)
#define RESOURCEUSAGE_CONTAINER (2)
#define RESOURCEUSAGE_NOLOCALDEVICE (4)
#define RESOURCEUSAGE_RESERVED (2147483648u)
#define RESOURCEUSAGE_SIBLING (8)
#define RESOURCE_CONNECTED (1)
#define RESOURCE_CONTEXT (5)
#define RESOURCE_ENUM_LN (1)
#define RESOURCE_ENUM_MODULE_EXACT (16)
#define RESOURCE_ENUM_MUI (2)
#define RESOURCE_ENUM_MUI_SYSTEM (4)
#define RESOURCE_ENUM_VALIDATE (8)
#define RESOURCE_GLOBALNET (2)
#define RESOURCE_MANAGER_COMMUNICATION (2)
#define RESOURCE_MANAGER_MAXIMUM_OPTION (3)
#define RESOURCE_MANAGER_OBJECT_NAME_LENGTH_IN_BYTES ( sizeof ( RESOURCE_MANAGER_OBJECT_PATH ) + ( 38 * sizeof ( WCHAR ) ) )
#define RESOURCE_MANAGER_OBJECT_PATH "\\ResourceManager\\"
#define RESOURCE_MANAGER_VOLATILE (1)
#define RESOURCE_RECENT (4)
#define RESOURCE_REMEMBERED (3)
#define RESTART_MAX_CMD_LINE (1024)
#define RESTART_NO_CRASH (1)
#define RESTART_NO_HANG (2)
#define RESTART_NO_PATCH (4)
#define RESTART_NO_REBOOT (8)
#define RESTORE_CTM (4100)
#define RESTRICTED_POINTER 
#define RES_CURSOR (2)
#define RES_ICON (1)
#define RETRACT_IEPORT (3)
#define RETURN_SMART_STATUS (218)
#define REVERSE_PRINT (1)
#define REVISION_LENGTH (4)
#define REVOCATION_OID_CRL_REVOCATION ( ( LPCSTR ) 1 )
#define RGB(r, g, b) ( ( COLORREF ) ( ( ( BYTE ) ( r ) | ( ( WORD ) ( ( BYTE ) ( g ) ) << 8 ) ) | ( ( ( DWORD ) ( BYTE ) ( b ) ) << 16 ) ) )
#define RGB_GAMMA_MAX ( WORD ) 65000
#define RGB_GAMMA_MIN ( WORD ) 02500
#define RGN_AND (1)
#define RGN_COPY (5)
#define RGN_DIFF (4)
#define RGN_ERROR ERROR
#define RGN_MAX RGN_COPY
#define RGN_MIN RGN_AND
#define RGN_OR (2)
#define RGN_XOR (3)
#define RIDEV_APPKEYS (1024)
#define RIDEV_CAPTUREMOUSE (512)
#define RIDEV_DEVNOTIFY (8192)
#define RIDEV_EXCLUDE (16)
#define RIDEV_EXINPUTSINK (4096)
#define RIDEV_EXMODE(mode) ( ( mode ) & RIDEV_EXMODEMASK )
#define RIDEV_EXMODEMASK (240)
#define RIDEV_INPUTSINK (256)
#define RIDEV_NOHOTKEYS (512)
#define RIDEV_NOLEGACY (48)
#define RIDEV_PAGEONLY (32)
#define RIDEV_REMOVE (1)
#define RIDI_DEVICEINFO (536870923)
#define RIDI_DEVICENAME (536870919)
#define RIDI_PREPARSEDDATA (536870917)
#define RID_HEADER (268435461)
#define RID_INPUT (268435459)
#define RIGHTMOST_BUTTON_PRESSED (2)
#define RIGHT_ALT_PRESSED (1)
#define RIGHT_CTRL_PRESSED (4)
#define RIM_INPUT (0)
#define RIM_INPUTSINK (1)
#define RIM_TYPEHID (2)
#define RIM_TYPEKEYBOARD (1)
#define RIM_TYPEMOUSE (0)
#define RIP_EVENT (9)
#define RI_KEY_BREAK (1)
#define RI_KEY_E0 (2)
#define RI_KEY_E1 (4)
#define RI_KEY_MAKE (0)
#define RI_KEY_TERMSRV_SET_LED (8)
#define RI_KEY_TERMSRV_SHADOW (16)
#define RI_MOUSE_BUTTON_1_DOWN RI_MOUSE_LEFT_BUTTON_DOWN
#define RI_MOUSE_BUTTON_1_UP RI_MOUSE_LEFT_BUTTON_UP
#define RI_MOUSE_BUTTON_2_DOWN RI_MOUSE_RIGHT_BUTTON_DOWN
#define RI_MOUSE_BUTTON_2_UP RI_MOUSE_RIGHT_BUTTON_UP
#define RI_MOUSE_BUTTON_3_DOWN RI_MOUSE_MIDDLE_BUTTON_DOWN
#define RI_MOUSE_BUTTON_3_UP RI_MOUSE_MIDDLE_BUTTON_UP
#define RI_MOUSE_BUTTON_4_DOWN (64)
#define RI_MOUSE_BUTTON_4_UP (128)
#define RI_MOUSE_BUTTON_5_DOWN (256)
#define RI_MOUSE_BUTTON_5_UP (512)
#define RI_MOUSE_LEFT_BUTTON_DOWN (1)
#define RI_MOUSE_LEFT_BUTTON_UP (2)
#define RI_MOUSE_MIDDLE_BUTTON_DOWN (16)
#define RI_MOUSE_MIDDLE_BUTTON_UP (32)
#define RI_MOUSE_RIGHT_BUTTON_DOWN (4)
#define RI_MOUSE_RIGHT_BUTTON_UP (8)
#define RI_MOUSE_WHEEL (1024)
#define ROTFLAGS_ALLOWANYCLIENT (2)
#define ROTFLAGS_REGISTRATIONKEEPSALIVE (1)
#define ROTREGFLAGS_ALLOWANYCLIENT (1)
#define ROT_COMPARE_MAX (2048)
#define RPCFLG_ASYNCHRONOUS __MSABI_LONG ( 0x40000000U )
#define RPCFLG_AUTO_COMPLETE __MSABI_LONG ( 0x08000000U )
#define RPCFLG_HAS_CALLBACK __MSABI_LONG ( 0x04000000U )
#define RPCFLG_HAS_MULTI_SYNTAXES __MSABI_LONG ( 0x02000000U )
#define RPCFLG_INPUT_SYNCHRONOUS __MSABI_LONG ( 0x20000000U )
#define RPCFLG_LOCAL_CALL __MSABI_LONG ( 0x10000000U )
#define RPCFLG_MESSAGE __MSABI_LONG ( 0x01000000U )
#define RPCFLG_NON_NDR __MSABI_LONG ( 0x80000000U )
#define RPCNSAPI DECLSPEC_IMPORT
#define RPCRTAPI DECLSPEC_IMPORT
#define RPC_BAD_STUB_DATA_EXCEPTION_FILTER ( ( RpcExceptionCode ( ) == STATUS_ACCESS_VIOLATION ) || ( RpcExceptionCode ( ) == STATUS_DATATYPE_MISALIGNMENT ) || ( RpcExceptionCode ( ) == RPC_X_BAD_STUB_DATA ) || ( RpcExceptionCode ( ) == RPC_S_INVALID_BOUND ) )
#define RPC_BUFFER_ASYNC (32768)
#define RPC_BUFFER_COMPLETE (4096)
#define RPC_BUFFER_EXTRA (16384)
#define RPC_BUFFER_NONOTIFY (65536)
#define RPC_BUFFER_PARTIAL (8192)
#define RPC_CONTEXT_HANDLE_DEFAULT_FLAGS __MSABI_LONG ( 0x00000000U )
#define RPC_CONTEXT_HANDLE_DEFAULT_GUARD ( ( void * ) - 4083 )
#define RPC_CONTEXT_HANDLE_DONT_SERIALIZE __MSABI_LONG ( 0x20000000U )
#define RPC_CONTEXT_HANDLE_FLAGS __MSABI_LONG ( 0x30000000U )
#define RPC_CONTEXT_HANDLE_SERIALIZE __MSABI_LONG ( 0x10000000U )
#define RPC_C_AUTHN_DCE_PRIVATE (1)
#define RPC_C_AUTHN_DCE_PUBLIC (2)
#define RPC_C_AUTHN_DEC_PUBLIC (4)
#define RPC_C_AUTHN_DEFAULT __MSABI_LONG ( 0xFFFFFFFF )
#define RPC_C_AUTHN_DIGEST (21)
#define RPC_C_AUTHN_DPA (17)
#define RPC_C_AUTHN_GSS_KERBEROS (16)
#define RPC_C_AUTHN_GSS_NEGOTIATE (9)
#define RPC_C_AUTHN_GSS_SCHANNEL (14)
#define RPC_C_AUTHN_INFO_TYPE_HTTP (1)
#define RPC_C_AUTHN_LEVEL_CALL (3)
#define RPC_C_AUTHN_LEVEL_CONNECT (2)
#define RPC_C_AUTHN_LEVEL_DEFAULT (0)
#define RPC_C_AUTHN_LEVEL_NONE (1)
#define RPC_C_AUTHN_LEVEL_PKT (4)
#define RPC_C_AUTHN_LEVEL_PKT_INTEGRITY (5)
#define RPC_C_AUTHN_LEVEL_PKT_PRIVACY (6)
#define RPC_C_AUTHN_MQ (100)
#define RPC_C_AUTHN_MSN (18)
#define RPC_C_AUTHN_NONE (0)
#define RPC_C_AUTHN_WINNT (10)
#define RPC_C_AUTHZ_DCE (2)
#define RPC_C_AUTHZ_DEFAULT (4294967295u)
#define RPC_C_AUTHZ_NAME (1)
#define RPC_C_AUTHZ_NONE (0)
#define RPC_C_BINDING_DEFAULT_TIMEOUT (5)
#define RPC_C_BINDING_INFINITE_TIMEOUT (10)
#define RPC_C_BINDING_MAX_TIMEOUT (9)
#define RPC_C_BINDING_MIN_TIMEOUT (0)
#define RPC_C_BIND_TO_ALL_NICS (1)
#define RPC_C_CANCEL_INFINITE_TIMEOUT (-1)
#define RPC_C_DONT_FAIL (4)
#define RPC_C_EP_ALL_ELTS (0)
#define RPC_C_EP_MATCH_BY_BOTH (3)
#define RPC_C_EP_MATCH_BY_IF (1)
#define RPC_C_EP_MATCH_BY_OBJ (2)
#define RPC_C_FULL_CERT_CHAIN (1)
#define RPC_C_HTTP_AUTHN_SCHEME_BASIC (1)
#define RPC_C_HTTP_AUTHN_SCHEME_CERT (65536)
#define RPC_C_HTTP_AUTHN_SCHEME_DIGEST (8)
#define RPC_C_HTTP_AUTHN_SCHEME_NEGOTIATE (16)
#define RPC_C_HTTP_AUTHN_SCHEME_NTLM (2)
#define RPC_C_HTTP_AUTHN_SCHEME_PASSPORT (4)
#define RPC_C_HTTP_AUTHN_TARGET_PROXY (2)
#define RPC_C_HTTP_AUTHN_TARGET_SERVER (1)
#define RPC_C_HTTP_FLAG_IGNORE_CERT_CN_INVALID (8)
#define RPC_C_HTTP_FLAG_USE_FIRST_AUTH_SCHEME (2)
#define RPC_C_HTTP_FLAG_USE_SSL (1)
#define RPC_C_IMP_LEVEL_ANONYMOUS (1)
#define RPC_C_IMP_LEVEL_DEFAULT (0)
#define RPC_C_IMP_LEVEL_DELEGATE (4)
#define RPC_C_IMP_LEVEL_IDENTIFY (2)
#define RPC_C_IMP_LEVEL_IMPERSONATE (3)
#define RPC_C_LISTEN_MAX_CALLS_DEFAULT (1234)
#define RPC_C_MGMT_INQ_IF_IDS (0)
#define RPC_C_MGMT_INQ_PRINC_NAME (1)
#define RPC_C_MGMT_INQ_STATS (2)
#define RPC_C_MGMT_IS_SERVER_LISTEN (3)
#define RPC_C_MGMT_STOP_SERVER_LISTEN (4)
#define RPC_C_MQ_AUTHN_LEVEL_NONE (0)
#define RPC_C_MQ_AUTHN_LEVEL_PKT_INTEGRITY (8)
#define RPC_C_MQ_AUTHN_LEVEL_PKT_PRIVACY (16)
#define RPC_C_MQ_CLEAR_ON_OPEN (2)
#define RPC_C_MQ_EXPRESS (0)
#define RPC_C_MQ_JOURNAL_ALWAYS (2)
#define RPC_C_MQ_JOURNAL_DEADLETTER (1)
#define RPC_C_MQ_JOURNAL_NONE (0)
#define RPC_C_MQ_PERMANENT (1)
#define RPC_C_MQ_RECOVERABLE (1)
#define RPC_C_MQ_TEMPORARY (0)
#define RPC_C_MQ_USE_EXISTING_SECURITY (4)
#define RPC_C_NO_CREDENTIALS ( ( RPC_AUTH_IDENTITY_HANDLE ) MAXUINT_PTR )
#define RPC_C_NS_DEFAULT_EXP_AGE (-1)
#define RPC_C_NS_SYNTAX_DCE (3)
#define RPC_C_NS_SYNTAX_DEFAULT (0)
#define RPC_C_OPT_BINDING_NONCAUSAL (9)
#define RPC_C_OPT_CALL_TIMEOUT (12)
#define RPC_C_OPT_DONT_LINGER (13)
#define RPC_C_OPT_MAX_OPTIONS (14)
#define RPC_C_OPT_MQ_ACKNOWLEDGE (4)
#define RPC_C_OPT_MQ_AUTHN_LEVEL (6)
#define RPC_C_OPT_MQ_AUTHN_SERVICE (5)
#define RPC_C_OPT_MQ_DELIVERY (1)
#define RPC_C_OPT_MQ_JOURNAL (3)
#define RPC_C_OPT_MQ_PRIORITY (2)
#define RPC_C_OPT_MQ_TIME_TO_BE_RECEIVED (8)
#define RPC_C_OPT_MQ_TIME_TO_REACH_QUEUE (7)
#define RPC_C_OPT_SECURITY_CALLBACK (10)
#define RPC_C_OPT_UNIQUE_BINDING (11)
#define RPC_C_PARM_BUFFER_LENGTH (2)
#define RPC_C_PARM_MAX_PACKET_LENGTH (1)
#define RPC_C_PROFILE_ALL_ELT (1)
#define RPC_C_PROFILE_ALL_ELTS RPC_C_PROFILE_ALL_ELT
#define RPC_C_PROFILE_DEFAULT_ELT (0)
#define RPC_C_PROFILE_MATCH_BY_BOTH (4)
#define RPC_C_PROFILE_MATCH_BY_IF (2)
#define RPC_C_PROFILE_MATCH_BY_MBR (3)
#define RPC_C_PROTECT_LEVEL_CALL (3)
#define RPC_C_PROTECT_LEVEL_CONNECT (2)
#define RPC_C_PROTECT_LEVEL_DEFAULT (0)
#define RPC_C_PROTECT_LEVEL_NONE (1)
#define RPC_C_PROTECT_LEVEL_PKT (4)
#define RPC_C_PROTECT_LEVEL_PKT_INTEGRITY (5)
#define RPC_C_PROTECT_LEVEL_PKT_PRIVACY (6)
#define RPC_C_PROTSEQ_MAX_REQS_DEFAULT (10)
#define RPC_C_QOS_CAPABILITIES_ANY_AUTHORITY (4)
#define RPC_C_QOS_CAPABILITIES_DEFAULT (0)
#define RPC_C_QOS_CAPABILITIES_IGNORE_DELEGATE_FAILURE (8)
#define RPC_C_QOS_CAPABILITIES_LOCAL_MA_HINT (16)
#define RPC_C_QOS_CAPABILITIES_MAKE_FULLSIC (2)
#define RPC_C_QOS_CAPABILITIES_MUTUAL_AUTH (1)
#define RPC_C_QOS_IDENTITY_DYNAMIC (1)
#define RPC_C_QOS_IDENTITY_STATIC (0)
#define RPC_C_SECURITY_QOS_VERSION __MSABI_LONG ( 1 )
#define RPC_C_SECURITY_QOS_VERSION_1 __MSABI_LONG ( 1 )
#define RPC_C_SECURITY_QOS_VERSION_2 __MSABI_LONG ( 2 )
#define RPC_C_SECURITY_QOS_VERSION_3 __MSABI_LONG ( 3 )
#define RPC_C_STATS_CALLS_IN (0)
#define RPC_C_STATS_CALLS_OUT (1)
#define RPC_C_STATS_PKTS_IN (2)
#define RPC_C_STATS_PKTS_OUT (3)
#define RPC_C_USE_INTERNET_PORT (1)
#define RPC_C_USE_INTRANET_PORT (2)
#define RPC_C_VERS_ALL (1)
#define RPC_C_VERS_COMPATIBLE (2)
#define RPC_C_VERS_EXACT (3)
#define RPC_C_VERS_MAJOR_ONLY (4)
#define RPC_C_VERS_UPTO (5)
#define RPC_ENTRY __RPC_API
#define RPC_E_ACCESS_DENIED _HRESULT_TYPEDEF_ ( 0x8001011B )
#define RPC_E_ATTEMPTED_MULTITHREAD _HRESULT_TYPEDEF_ ( 0x80010102 )
#define RPC_E_CALL_CANCELED _HRESULT_TYPEDEF_ ( 0x80010002 )
#define RPC_E_CALL_COMPLETE _HRESULT_TYPEDEF_ ( 0x80010117 )
#define RPC_E_CALL_REJECTED _HRESULT_TYPEDEF_ ( 0x80010001 )
#define RPC_E_CANTCALLOUT_AGAIN _HRESULT_TYPEDEF_ ( 0x80010011 )
#define RPC_E_CANTCALLOUT_INASYNCCALL _HRESULT_TYPEDEF_ ( 0x80010004 )
#define RPC_E_CANTCALLOUT_INEXTERNALCALL _HRESULT_TYPEDEF_ ( 0x80010005 )
#define RPC_E_CANTCALLOUT_ININPUTSYNCCALL _HRESULT_TYPEDEF_ ( 0x8001010D )
#define RPC_E_CANTPOST_INSENDCALL _HRESULT_TYPEDEF_ ( 0x80010003 )
#define RPC_E_CANTTRANSMIT_CALL _HRESULT_TYPEDEF_ ( 0x8001000A )
#define RPC_E_CHANGED_MODE _HRESULT_TYPEDEF_ ( 0x80010106 )
#define RPC_E_CLIENT_CANTMARSHAL_DATA _HRESULT_TYPEDEF_ ( 0x8001000B )
#define RPC_E_CLIENT_CANTUNMARSHAL_DATA _HRESULT_TYPEDEF_ ( 0x8001000C )
#define RPC_E_CLIENT_DIED _HRESULT_TYPEDEF_ ( 0x80010008 )
#define RPC_E_CONNECTION_TERMINATED _HRESULT_TYPEDEF_ ( 0x80010006 )
#define RPC_E_DISCONNECTED _HRESULT_TYPEDEF_ ( 0x80010108 )
#define RPC_E_FAULT _HRESULT_TYPEDEF_ ( 0x80010104 )
#define RPC_E_FULLSIC_REQUIRED _HRESULT_TYPEDEF_ ( 0x80010121 )
#define RPC_E_INVALIDMETHOD _HRESULT_TYPEDEF_ ( 0x80010107 )
#define RPC_E_INVALID_CALLDATA _HRESULT_TYPEDEF_ ( 0x8001010C )
#define RPC_E_INVALID_DATA _HRESULT_TYPEDEF_ ( 0x8001000F )
#define RPC_E_INVALID_DATAPACKET _HRESULT_TYPEDEF_ ( 0x80010009 )
#define RPC_E_INVALID_EXTENSION _HRESULT_TYPEDEF_ ( 0x80010112 )
#define RPC_E_INVALID_HEADER _HRESULT_TYPEDEF_ ( 0x80010111 )
#define RPC_E_INVALID_IPID _HRESULT_TYPEDEF_ ( 0x80010113 )
#define RPC_E_INVALID_OBJECT _HRESULT_TYPEDEF_ ( 0x80010114 )
#define RPC_E_INVALID_OBJREF _HRESULT_TYPEDEF_ ( 0x8001011D )
#define RPC_E_INVALID_PARAMETER _HRESULT_TYPEDEF_ ( 0x80010010 )
#define RPC_E_INVALID_STD_NAME _HRESULT_TYPEDEF_ ( 0x80010122 )
#define RPC_E_NOT_REGISTERED _HRESULT_TYPEDEF_ ( 0x80010103 )
#define RPC_E_NO_CONTEXT _HRESULT_TYPEDEF_ ( 0x8001011E )
#define RPC_E_NO_GOOD_SECURITY_PACKAGES _HRESULT_TYPEDEF_ ( 0x8001011A )
#define RPC_E_NO_SYNC _HRESULT_TYPEDEF_ ( 0x80010120 )
#define RPC_E_OUT_OF_RESOURCES _HRESULT_TYPEDEF_ ( 0x80010101 )
#define RPC_E_REMOTE_DISABLED _HRESULT_TYPEDEF_ ( 0x8001011C )
#define RPC_E_RETRY _HRESULT_TYPEDEF_ ( 0x80010109 )
#define RPC_E_SERVERCALL_REJECTED _HRESULT_TYPEDEF_ ( 0x8001010B )
#define RPC_E_SERVERCALL_RETRYLATER _HRESULT_TYPEDEF_ ( 0x8001010A )
#define RPC_E_SERVERFAULT _HRESULT_TYPEDEF_ ( 0x80010105 )
#define RPC_E_SERVER_CANTMARSHAL_DATA _HRESULT_TYPEDEF_ ( 0x8001000D )
#define RPC_E_SERVER_CANTUNMARSHAL_DATA _HRESULT_TYPEDEF_ ( 0x8001000E )
#define RPC_E_SERVER_DIED _HRESULT_TYPEDEF_ ( 0x80010007 )
#define RPC_E_SERVER_DIED_DNE _HRESULT_TYPEDEF_ ( 0x80010012 )
#define RPC_E_SYS_CALL_FAILED _HRESULT_TYPEDEF_ ( 0x80010100 )
#define RPC_E_THREAD_NOT_INIT _HRESULT_TYPEDEF_ ( 0x8001010F )
#define RPC_E_TIMEOUT _HRESULT_TYPEDEF_ ( 0x8001011F )
#define RPC_E_TOO_LATE _HRESULT_TYPEDEF_ ( 0x80010119 )
#define RPC_E_UNEXPECTED _HRESULT_TYPEDEF_ ( 0x8001FFFF )
#define RPC_E_UNSECURE_CALL _HRESULT_TYPEDEF_ ( 0x80010118 )
#define RPC_E_VERSION_MISMATCH _HRESULT_TYPEDEF_ ( 0x80010110 )
#define RPC_E_WRONG_THREAD _HRESULT_TYPEDEF_ ( 0x8001010E )
#define RPC_FLAGS_VALID_BIT (32768)
#define RPC_HTTP_TRANSPORT_CREDENTIALS __MINGW_NAME_UAW ( RPC_HTTP_TRANSPORT_CREDENTIALS )
#define RPC_IF_ALLOW_CALLBACKS_WITH_NO_AUTH (16)
#define RPC_IF_ALLOW_LOCAL_ONLY (32)
#define RPC_IF_ALLOW_SECURE_ONLY (8)
#define RPC_IF_ALLOW_UNKNOWN_AUTHORITY (4)
#define RPC_IF_AUTOLISTEN (1)
#define RPC_IF_OLE (2)
#define RPC_IF_SEC_NO_CACHE (64)
#define RPC_INTERFACE_HAS_PIPES (1)
#define RPC_MGR_EPV void
#define RPC_NCA_FLAGS_BROADCAST (2)
#define RPC_NCA_FLAGS_DEFAULT (0)
#define RPC_NCA_FLAGS_IDEMPOTENT (1)
#define RPC_NCA_FLAGS_MAYBE (4)
#define RPC_PROTSEQ_VECTOR __MINGW_NAME_AW ( RPC_PROTSEQ_VECTOR )
#define RPC_PROXY_CONNECTION_TYPE_IN_PROXY (0)
#define RPC_PROXY_CONNECTION_TYPE_OUT_PROXY (1)
#define RPC_P_ADDR_FORMAT_TCP_IPV4 (1)
#define RPC_P_ADDR_FORMAT_TCP_IPV6 (2)
#define RPC_SECURITY_QOS_V2 __MINGW_NAME_UAW ( RPC_SECURITY_QOS_V2 )
#define RPC_SECURITY_QOS_V3 __MINGW_NAME_UAW ( RPC_SECURITY_QOS_V3 )
#define RPC_S_ADDRESS_ERROR __MSABI_LONG ( 1768 )
#define RPC_S_ALREADY_LISTENING __MSABI_LONG ( 1713 )
#define RPC_S_ALREADY_REGISTERED __MSABI_LONG ( 1711 )
#define RPC_S_BINDING_HAS_NO_AUTH __MSABI_LONG ( 1746 )
#define RPC_S_BINDING_INCOMPLETE __MSABI_LONG ( 1819 )
#define RPC_S_CALLPENDING _HRESULT_TYPEDEF_ ( 0x80010115 )
#define RPC_S_CALL_CANCELLED __MSABI_LONG ( 1818 )
#define RPC_S_CALL_FAILED __MSABI_LONG ( 1726 )
#define RPC_S_CALL_FAILED_DNE __MSABI_LONG ( 1727 )
#define RPC_S_CALL_IN_PROGRESS __MSABI_LONG ( 1791 )
#define RPC_S_CANNOT_SUPPORT __MSABI_LONG ( 1764 )
#define RPC_S_CANT_CREATE_ENDPOINT __MSABI_LONG ( 1720 )
#define RPC_S_COMM_FAILURE __MSABI_LONG ( 1820 )
#define RPC_S_DUPLICATE_ENDPOINT __MSABI_LONG ( 1740 )
#define RPC_S_ENTRY_ALREADY_EXISTS __MSABI_LONG ( 1760 )
#define RPC_S_ENTRY_NOT_FOUND __MSABI_LONG ( 1761 )
#define RPC_S_ENTRY_TYPE_MISMATCH __MSABI_LONG ( 1922 )
#define RPC_S_FP_DIV_ZERO __MSABI_LONG ( 1769 )
#define RPC_S_FP_OVERFLOW __MSABI_LONG ( 1771 )
#define RPC_S_FP_UNDERFLOW __MSABI_LONG ( 1770 )
#define RPC_S_GROUP_MEMBER_NOT_FOUND __MSABI_LONG ( 1898 )
#define RPC_S_GRP_ELT_NOT_ADDED __MSABI_LONG ( 1928 )
#define RPC_S_GRP_ELT_NOT_REMOVED __MSABI_LONG ( 1929 )
#define RPC_S_INCOMPLETE_NAME __MSABI_LONG ( 1755 )
#define RPC_S_INTERFACE_NOT_EXPORTED __MSABI_LONG ( 1924 )
#define RPC_S_INTERFACE_NOT_FOUND __MSABI_LONG ( 1759 )
#define RPC_S_INTERNAL_ERROR __MSABI_LONG ( 1766 )
#define RPC_S_INVALID_ASYNC_CALL __MSABI_LONG ( 1915 )
#define RPC_S_INVALID_ASYNC_HANDLE __MSABI_LONG ( 1914 )
#define RPC_S_INVALID_AUTH_IDENTITY __MSABI_LONG ( 1749 )
#define RPC_S_INVALID_BINDING __MSABI_LONG ( 1702 )
#define RPC_S_INVALID_BOUND __MSABI_LONG ( 1734 )
#define RPC_S_INVALID_ENDPOINT_FORMAT __MSABI_LONG ( 1706 )
#define RPC_S_INVALID_NAF_ID __MSABI_LONG ( 1763 )
#define RPC_S_INVALID_NAME_SYNTAX __MSABI_LONG ( 1736 )
#define RPC_S_INVALID_NETWORK_OPTIONS __MSABI_LONG ( 1724 )
#define RPC_S_INVALID_NET_ADDR __MSABI_LONG ( 1707 )
#define RPC_S_INVALID_OBJECT __MSABI_LONG ( 1900 )
#define RPC_S_INVALID_RPC_PROTSEQ __MSABI_LONG ( 1704 )
#define RPC_S_INVALID_STRING_BINDING __MSABI_LONG ( 1700 )
#define RPC_S_INVALID_STRING_UUID __MSABI_LONG ( 1705 )
#define RPC_S_INVALID_TAG __MSABI_LONG ( 1733 )
#define RPC_S_INVALID_TIMEOUT __MSABI_LONG ( 1709 )
#define RPC_S_INVALID_VERS_OPTION __MSABI_LONG ( 1756 )
#define RPC_S_MAX_CALLS_TOO_SMALL __MSABI_LONG ( 1742 )
#define RPC_S_NAME_SERVICE_UNAVAILABLE __MSABI_LONG ( 1762 )
#define RPC_S_NOTHING_TO_EXPORT __MSABI_LONG ( 1754 )
#define RPC_S_NOT_ALL_OBJS_EXPORTED __MSABI_LONG ( 1923 )
#define RPC_S_NOT_ALL_OBJS_UNEXPORTED __MSABI_LONG ( 1758 )
#define RPC_S_NOT_CANCELLED __MSABI_LONG ( 1826 )
#define RPC_S_NOT_LISTENING __MSABI_LONG ( 1715 )
#define RPC_S_NOT_RPC_ERROR __MSABI_LONG ( 1823 )
#define RPC_S_NO_BINDINGS __MSABI_LONG ( 1718 )
#define RPC_S_NO_CALL_ACTIVE __MSABI_LONG ( 1725 )
#define RPC_S_NO_CONTEXT_AVAILABLE __MSABI_LONG ( 1765 )
#define RPC_S_NO_ENDPOINT_FOUND __MSABI_LONG ( 1708 )
#define RPC_S_NO_ENTRY_NAME __MSABI_LONG ( 1735 )
#define RPC_S_NO_INTERFACES __MSABI_LONG ( 1817 )
#define RPC_S_NO_MORE_BINDINGS __MSABI_LONG ( 1806 )
#define RPC_S_NO_MORE_MEMBERS __MSABI_LONG ( 1757 )
#define RPC_S_NO_PRINC_NAME __MSABI_LONG ( 1822 )
#define RPC_S_NO_PROTSEQS __MSABI_LONG ( 1719 )
#define RPC_S_NO_PROTSEQS_REGISTERED __MSABI_LONG ( 1714 )
#define RPC_S_OBJECT_NOT_FOUND __MSABI_LONG ( 1710 )
#define RPC_S_OUT_OF_RESOURCES __MSABI_LONG ( 1721 )
#define RPC_S_PRF_ELT_NOT_ADDED __MSABI_LONG ( 1926 )
#define RPC_S_PRF_ELT_NOT_REMOVED __MSABI_LONG ( 1927 )
#define RPC_S_PROCNUM_OUT_OF_RANGE __MSABI_LONG ( 1745 )
#define RPC_S_PROFILE_NOT_ADDED __MSABI_LONG ( 1925 )
#define RPC_S_PROTOCOL_ERROR __MSABI_LONG ( 1728 )
#define RPC_S_PROTSEQ_NOT_FOUND __MSABI_LONG ( 1744 )
#define RPC_S_PROTSEQ_NOT_SUPPORTED __MSABI_LONG ( 1703 )
#define RPC_S_SEC_PKG_ERROR __MSABI_LONG ( 1825 )
#define RPC_S_SEND_INCOMPLETE __MSABI_LONG ( 1913 )
#define RPC_S_SERVER_TOO_BUSY __MSABI_LONG ( 1723 )
#define RPC_S_SERVER_UNAVAILABLE __MSABI_LONG ( 1722 )
#define RPC_S_STRING_TOO_LONG __MSABI_LONG ( 1743 )
#define RPC_S_TYPE_ALREADY_REGISTERED __MSABI_LONG ( 1712 )
#define RPC_S_UNKNOWN_AUTHN_LEVEL __MSABI_LONG ( 1748 )
#define RPC_S_UNKNOWN_AUTHN_SERVICE __MSABI_LONG ( 1747 )
#define RPC_S_UNKNOWN_AUTHN_TYPE __MSABI_LONG ( 1741 )
#define RPC_S_UNKNOWN_AUTHZ_SERVICE __MSABI_LONG ( 1750 )
#define RPC_S_UNKNOWN_IF __MSABI_LONG ( 1717 )
#define RPC_S_UNKNOWN_MGR_TYPE __MSABI_LONG ( 1716 )
#define RPC_S_UNSUPPORTED_AUTHN_LEVEL __MSABI_LONG ( 1821 )
#define RPC_S_UNSUPPORTED_NAME_SYNTAX __MSABI_LONG ( 1737 )
#define RPC_S_UNSUPPORTED_TRANS_SYN __MSABI_LONG ( 1730 )
#define RPC_S_UNSUPPORTED_TYPE __MSABI_LONG ( 1732 )
#define RPC_S_UUID_LOCAL_ONLY __MSABI_LONG ( 1824 )
#define RPC_S_UUID_NO_ADDRESS __MSABI_LONG ( 1739 )
#define RPC_S_WAITONTIMER _HRESULT_TYPEDEF_ ( 0x80010116 )
#define RPC_S_WRONG_KIND_OF_BINDING __MSABI_LONG ( 1701 )
#define RPC_S_ZERO_DIVIDE __MSABI_LONG ( 1767 )
#define RPC_UNICODE_SUPPORTED 
#define RPC_VAR_ENTRY __cdecl
#define RPC_X_BAD_STUB_DATA __MSABI_LONG ( 1783 )
#define RPC_X_BYTE_COUNT_TOO_SMALL __MSABI_LONG ( 1782 )
#define RPC_X_ENUM_VALUE_OUT_OF_RANGE __MSABI_LONG ( 1781 )
#define RPC_X_INVALID_ES_ACTION __MSABI_LONG ( 1827 )
#define RPC_X_INVALID_PIPE_OBJECT __MSABI_LONG ( 1830 )
#define RPC_X_NO_MORE_ENTRIES __MSABI_LONG ( 1772 )
#define RPC_X_NULL_REF_POINTER __MSABI_LONG ( 1780 )
#define RPC_X_PIPE_CLOSED __MSABI_LONG ( 1916 )
#define RPC_X_PIPE_DISCIPLINE_ERROR __MSABI_LONG ( 1917 )
#define RPC_X_PIPE_EMPTY __MSABI_LONG ( 1918 )
#define RPC_X_SS_CANNOT_GET_CALL_HANDLE __MSABI_LONG ( 1779 )
#define RPC_X_SS_CHAR_TRANS_OPEN_FAIL __MSABI_LONG ( 1773 )
#define RPC_X_SS_CHAR_TRANS_SHORT_FILE __MSABI_LONG ( 1774 )
#define RPC_X_SS_CONTEXT_DAMAGED __MSABI_LONG ( 1777 )
#define RPC_X_SS_HANDLES_MISMATCH __MSABI_LONG ( 1778 )
#define RPC_X_SS_IN_NULL_CONTEXT __MSABI_LONG ( 1775 )
#define RPC_X_WRONG_ES_VERSION __MSABI_LONG ( 1828 )
#define RPC_X_WRONG_PIPE_ORDER __MSABI_LONG ( 1831 )
#define RPC_X_WRONG_PIPE_VERSION __MSABI_LONG ( 1832 )
#define RPC_X_WRONG_STUB_VERSION __MSABI_LONG ( 1829 )
#define RP_INIFILE (2)
#define RP_LOGON (1)
#define RRF_NOEXPAND (268435456)
#define RRF_RT_ANY (65535)
#define RRF_RT_DWORD (24)
#define RRF_RT_QWORD (72)
#define RRF_RT_REG_BINARY (8)
#define RRF_RT_REG_DWORD (16)
#define RRF_RT_REG_EXPAND_SZ (4)
#define RRF_RT_REG_MULTI_SZ (32)
#define RRF_RT_REG_NONE (1)
#define RRF_RT_REG_QWORD (64)
#define RRF_RT_REG_SZ (2)
#define RRF_ZEROONFAILURE (536870912)
#define RSA1024BIT_KEY (67108864)
#define RSA_CSP_PUBLICKEYBLOB ( ( LPCSTR ) 19 )
#define RTL_BITS_OF(sizeOfArg) ( sizeof ( sizeOfArg ) * 8 )
#define RTL_BITS_OF_FIELD(type, field) ( RTL_BITS_OF ( RTL_FIELD_TYPE ( type , field ) ) )
#define RTL_CONDITION_VARIABLE_INIT { 0 }
#define RTL_CONDITION_VARIABLE_LOCKMODE_SHARED (1)
#define RTL_CONST_CAST(type) ( type )
#define RTL_CONTAINS_FIELD(Struct, Size, Field) ( ( ( ( PCHAR ) ( & ( Struct ) -> Field ) ) + sizeof ( ( Struct ) -> Field ) ) <= ( ( ( PCHAR ) ( Struct ) ) + ( Size ) ) )
#define RTL_CRITICAL_SECTION_ALL_FLAG_BITS (4278190080u)
#define RTL_CRITICAL_SECTION_DEBUG_FLAG_STATIC_INIT (1)
#define RTL_CRITICAL_SECTION_FLAG_DYNAMIC_SPIN (33554432)
#define RTL_CRITICAL_SECTION_FLAG_FORCE_DEBUG_INFO (268435456)
#define RTL_CRITICAL_SECTION_FLAG_NO_DEBUG_INFO (16777216)
#define RTL_CRITICAL_SECTION_FLAG_RESERVED (3758096384u)
#define RTL_CRITICAL_SECTION_FLAG_RESOURCE_TYPE (134217728)
#define RTL_CRITICAL_SECTION_FLAG_STATIC_INIT (67108864)
#define RTL_CRITSECT_TYPE (0)
#define RTL_FIELD_SIZE(type, field) ( sizeof ( ( ( type * ) 0 ) -> field ) )
#define RTL_FIELD_TYPE(type, field) ( ( ( type * ) 0 ) -> field )
#define RTL_NUMBER_OF(A) RTL_NUMBER_OF_V1 ( A )
#define RTL_NUMBER_OF_FIELD(type, field) ( RTL_NUMBER_OF ( RTL_FIELD_TYPE ( type , field ) ) )
#define RTL_NUMBER_OF_V1(A) ( sizeof ( A ) / sizeof ( ( A ) [ 0 ] ) )
#define RTL_NUMBER_OF_V2(A) RTL_NUMBER_OF_V1 ( A )
#define RTL_PADDING_BETWEEN_FIELDS(T, F1, F2) ( ( FIELD_OFFSET ( T , F2 ) > FIELD_OFFSET ( T , F1 ) ) ? ( FIELD_OFFSET ( T , F2 ) - FIELD_OFFSET ( T , F1 ) - RTL_FIELD_SIZE ( T , F1 ) ) : ( FIELD_OFFSET ( T , F1 ) - FIELD_OFFSET ( T , F2 ) - RTL_FIELD_SIZE ( T , F2 ) ) )
#define RTL_RESOURCE_TYPE (1)
#define RTL_RUN_ONCE_ASYNC __MSABI_LONG ( 2U )
#define RTL_RUN_ONCE_CHECK_ONLY __MSABI_LONG ( 1U )
#define RTL_RUN_ONCE_CTX_RESERVED_BITS (2)
#define RTL_RUN_ONCE_INIT { 0 }
#define RTL_RUN_ONCE_INIT_FAILED __MSABI_LONG ( 4U )
#define RTL_SIZEOF_THROUGH_FIELD(type, field) ( FIELD_OFFSET ( type , field ) + RTL_FIELD_SIZE ( type , field ) )
#define RTL_SRWLOCK_INIT { 0 }
#define RTL_UMS_VERSION (256)
#define RTL_VRF_FLG_APPCOMPAT_CHECKS (16)
#define RTL_VRF_FLG_COM_CHECKS (256)
#define RTL_VRF_FLG_DANGEROUS_APIS (512)
#define RTL_VRF_FLG_DEADLOCK_CHECKS (2048)
#define RTL_VRF_FLG_DIRTY_STACKS (64)
#define RTL_VRF_FLG_ENABLED_SYSTEM_WIDE (131072)
#define RTL_VRF_FLG_ENABLE_LOGGING (16384)
#define RTL_VRF_FLG_FAST_FILL_HEAP (32768)
#define RTL_VRF_FLG_FIRST_CHANCE_EXCEPTION_CHECKS (4096)
#define RTL_VRF_FLG_FULL_PAGE_HEAP (1)
#define RTL_VRF_FLG_HANDLE_CHECKS (4)
#define RTL_VRF_FLG_LOCK_CHECKS (262144)
#define RTL_VRF_FLG_MISCELLANEOUS_CHECKS (131072)
#define RTL_VRF_FLG_RACE_CHECKS (1024)
#define RTL_VRF_FLG_RESERVED_DONOTUSE (2)
#define RTL_VRF_FLG_RPC_CHECKS (128)
#define RTL_VRF_FLG_STACK_CHECKS (8)
#define RTL_VRF_FLG_TLS_CHECKS (32)
#define RTL_VRF_FLG_VIRTUAL_MEM_CHECKS (8192)
#define RTL_VRF_FLG_VIRTUAL_SPACE_TRACKING (65536)
#define RTS_CONTROL_DISABLE (0)
#define RTS_CONTROL_ENABLE (1)
#define RTS_CONTROL_HANDSHAKE (2)
#define RTS_CONTROL_TOGGLE (3)
#define RT_ACCELERATOR MAKEINTRESOURCE ( 9 )
#define RT_ANICURSOR MAKEINTRESOURCE ( 21 )
#define RT_ANIICON MAKEINTRESOURCE ( 22 )
#define RT_BITMAP MAKEINTRESOURCE ( 2 )
#define RT_CURSOR MAKEINTRESOURCE ( 1 )
#define RT_DIALOG MAKEINTRESOURCE ( 5 )
#define RT_DLGINCLUDE MAKEINTRESOURCE ( 17 )
#define RT_FONT MAKEINTRESOURCE ( 8 )
#define RT_FONTDIR MAKEINTRESOURCE ( 7 )
#define RT_GROUP_CURSOR MAKEINTRESOURCE ( ( ULONG_PTR ) ( RT_CURSOR ) + DIFFERENCE )
#define RT_GROUP_ICON MAKEINTRESOURCE ( ( ULONG_PTR ) ( RT_ICON ) + DIFFERENCE )
#define RT_HTML MAKEINTRESOURCE ( 23 )
#define RT_ICON MAKEINTRESOURCE ( 3 )
#define RT_MANIFEST MAKEINTRESOURCE ( 24 )
#define RT_MENU MAKEINTRESOURCE ( 4 )
#define RT_MESSAGETABLE MAKEINTRESOURCE ( 11 )
#define RT_PLUGPLAY MAKEINTRESOURCE ( 19 )
#define RT_RCDATA MAKEINTRESOURCE ( 10 )
#define RT_STRING MAKEINTRESOURCE ( 6 )
#define RT_VERSION MAKEINTRESOURCE ( 16 )
#define RT_VXD MAKEINTRESOURCE ( 20 )
#define RUNTIME_FUNCTION_INDIRECT (1)
#define RUSSIAN_CHARSET (204)
#define ReadConsole __MINGW_NAME_AW ( ReadConsole )
#define ReadConsoleInput __MINGW_NAME_AW ( ReadConsoleInput )
#define ReadConsoleOutput __MINGW_NAME_AW ( ReadConsoleOutput )
#define ReadConsoleOutputCharacter __MINGW_NAME_AW ( ReadConsoleOutputCharacter )
#define ReadEventLog __MINGW_NAME_AW ( ReadEventLog )
#define ReadForWriteAccess(p) ( _m_prefetchw ( p ) , * ( p ) )
#define ReadMxCsr _mm_getcsr
#define ReadTimeStampCounter() __rdtsc ( )
#define RealGetWindowClass __MINGW_NAME_AW ( RealGetWindowClass )
#define RegConnectRegistry __MINGW_NAME_AW ( RegConnectRegistry )
#define RegConnectRegistryEx __MINGW_NAME_AW ( RegConnectRegistryEx )
#define RegCreateKey __MINGW_NAME_AW ( RegCreateKey )
#define RegCreateKeyEx __MINGW_NAME_AW ( RegCreateKeyEx )
#define RegDeleteKey __MINGW_NAME_AW ( RegDeleteKey )
#define RegDeleteKeyEx __MINGW_NAME_AW ( RegDeleteKeyEx )
#define RegDeleteValue __MINGW_NAME_AW ( RegDeleteValue )
#define RegEnumKey __MINGW_NAME_AW ( RegEnumKey )
#define RegEnumKeyEx __MINGW_NAME_AW ( RegEnumKeyEx )
#define RegEnumValue __MINGW_NAME_AW ( RegEnumValue )
#define RegGetValue __MINGW_NAME_AW ( RegGetValue )
#define RegLoadKey __MINGW_NAME_AW ( RegLoadKey )
#define RegOpenKey __MINGW_NAME_AW ( RegOpenKey )
#define RegOpenKeyEx __MINGW_NAME_AW ( RegOpenKeyEx )
#define RegQueryInfoKey __MINGW_NAME_AW ( RegQueryInfoKey )
#define RegQueryMultipleValues __MINGW_NAME_AW ( RegQueryMultipleValues )
#define RegQueryValue __MINGW_NAME_AW ( RegQueryValue )
#define RegQueryValueEx __MINGW_NAME_AW ( RegQueryValueEx )
#define RegReplaceKey __MINGW_NAME_AW ( RegReplaceKey )
#define RegRestoreKey __MINGW_NAME_AW ( RegRestoreKey )
#define RegSaveKey __MINGW_NAME_AW ( RegSaveKey )
#define RegSaveKeyEx __MINGW_NAME_AW ( RegSaveKeyEx )
#define RegSetValue __MINGW_NAME_AW ( RegSetValue )
#define RegSetValueEx __MINGW_NAME_AW ( RegSetValueEx )
#define RegUnLoadKey __MINGW_NAME_AW ( RegUnLoadKey )
#define RegisterClass __MINGW_NAME_AW ( RegisterClass )
#define RegisterClassEx __MINGW_NAME_AW ( RegisterClassEx )
#define RegisterClipboardFormat __MINGW_NAME_AW ( RegisterClipboardFormat )
#define RegisterDeviceNotification __MINGW_NAME_AW ( RegisterDeviceNotification )
#define RegisterEventSource __MINGW_NAME_AW ( RegisterEventSource )
#define RegisterServiceCtrlHandler __MINGW_NAME_AW ( RegisterServiceCtrlHandler )
#define RegisterServiceCtrlHandlerEx __MINGW_NAME_AW ( RegisterServiceCtrlHandlerEx )
#define RegisterWindowMessage __MINGW_NAME_AW ( RegisterWindowMessage )
#define RemoveDirectory __MINGW_NAME_AW ( RemoveDirectory )
#define RemoveFontResource __MINGW_NAME_AW ( RemoveFontResource )
#define RemoveFontResourceEx __MINGW_NAME_AW ( RemoveFontResourceEx )
#define RemoveProp __MINGW_NAME_AW ( RemoveProp )
#define ReplaceFile __MINGW_NAME_AW ( ReplaceFile )
#define ReplaceText __MINGW_NAME_AW ( ReplaceText )
#define ReportEvent __MINGW_NAME_AW ( ReportEvent )
#define ResetDC __MINGW_NAME_AW ( ResetDC )
#define ResetPrinter __MINGW_NAME_AW ( ResetPrinter )
#define ResultFromScode(sc) ( ( HRESULT ) ( sc ) )
#define RotateLeft16 _rotl16
#define RotateLeft32 _rotl
#define RotateLeft64 _rotl64
#define RotateLeft8 _rotl8
#define RotateRight16 _rotr16
#define RotateRight32 _rotr
#define RotateRight64 _rotr64
#define RotateRight8 _rotr8
#define RpcAbnormalTermination() AbnormalTermination ( )
#define RpcBindingFromStringBinding __MINGW_NAME_AW ( RpcBindingFromStringBinding )
#define RpcBindingInqAuthClient __MINGW_NAME_AW ( RpcBindingInqAuthClient )
#define RpcBindingInqAuthClientEx __MINGW_NAME_AW ( RpcBindingInqAuthClientEx )
#define RpcBindingInqAuthInfo __MINGW_NAME_AW ( RpcBindingInqAuthInfo )
#define RpcBindingInqAuthInfoEx __MINGW_NAME_AW ( RpcBindingInqAuthInfoEx )
#define RpcBindingSetAuthInfo __MINGW_NAME_AW ( RpcBindingSetAuthInfo )
#define RpcBindingSetAuthInfoEx __MINGW_NAME_AW ( RpcBindingSetAuthInfoEx )
#define RpcBindingToStringBinding __MINGW_NAME_AW ( RpcBindingToStringBinding )
#define RpcEndExcept }
#define RpcEndFinally }
#define RpcEpRegister __MINGW_NAME_AW ( RpcEpRegister )
#define RpcEpRegisterNoReplace __MINGW_NAME_AW ( RpcEpRegisterNoReplace )
#define RpcExcept(expr) } __except ( expr ) {
#define RpcExceptionCode() GetExceptionCode ( )
#define RpcFinally } __finally {
#define RpcMgmtEpEltInqNext __MINGW_NAME_AW ( RpcMgmtEpEltInqNext )
#define RpcMgmtInqServerPrincName __MINGW_NAME_AW ( RpcMgmtInqServerPrincName )
#define RpcNetworkInqProtseqs __MINGW_NAME_AW ( RpcNetworkInqProtseqs )
#define RpcNetworkIsProtseqValid __MINGW_NAME_AW ( RpcNetworkIsProtseqValid )
#define RpcNsBindingExport __MINGW_NAME_AW ( RpcNsBindingExport )
#define RpcNsBindingExportPnP __MINGW_NAME_AW ( RpcNsBindingExportPnP )
#define RpcNsBindingImportBegin __MINGW_NAME_AW ( RpcNsBindingImportBegin )
#define RpcNsBindingInqEntryName __MINGW_NAME_AW ( RpcNsBindingInqEntryName )
#define RpcNsBindingLookupBegin __MINGW_NAME_AW ( RpcNsBindingLookupBegin )
#define RpcNsBindingUnexport __MINGW_NAME_AW ( RpcNsBindingUnexport )
#define RpcNsBindingUnexportPnP __MINGW_NAME_AW ( RpcNsBindingUnexportPnP )
#define RpcNsEntryExpandName __MINGW_NAME_AW ( RpcNsEntryExpandName )
#define RpcNsEntryObjectInqBegin __MINGW_NAME_AW ( RpcNsEntryObjectInqBegin )
#define RpcNsGroupDelete __MINGW_NAME_AW ( RpcNsGroupDelete )
#define RpcNsGroupMbrAdd __MINGW_NAME_AW ( RpcNsGroupMbrAdd )
#define RpcNsGroupMbrInqBegin __MINGW_NAME_AW ( RpcNsGroupMbrInqBegin )
#define RpcNsGroupMbrInqNext __MINGW_NAME_AW ( RpcNsGroupMbrInqNext )
#define RpcNsGroupMbrRemove __MINGW_NAME_AW ( RpcNsGroupMbrRemove )
#define RpcNsMgmtBindingUnexport __MINGW_NAME_AW ( RpcNsMgmtBindingUnexport )
#define RpcNsMgmtEntryCreate __MINGW_NAME_AW ( RpcNsMgmtEntryCreate )
#define RpcNsMgmtEntryDelete __MINGW_NAME_AW ( RpcNsMgmtEntryDelete )
#define RpcNsMgmtEntryInqIfIds __MINGW_NAME_AW ( RpcNsMgmtEntryInqIfIds )
#define RpcNsProfileDelete __MINGW_NAME_AW ( RpcNsProfileDelete )
#define RpcNsProfileEltAdd __MINGW_NAME_AW ( RpcNsProfileEltAdd )
#define RpcNsProfileEltInqBegin __MINGW_NAME_AW ( RpcNsProfileEltInqBegin )
#define RpcNsProfileEltInqNext __MINGW_NAME_AW ( RpcNsProfileEltInqNext )
#define RpcNsProfileEltRemove __MINGW_NAME_AW ( RpcNsProfileEltRemove )
#define RpcProtseqVectorFree __MINGW_NAME_AW ( RpcProtseqVectorFree )
#define RpcServerInqDefaultPrincName __MINGW_NAME_AW ( RpcServerInqDefaultPrincName )
#define RpcServerRegisterAuthInfo __MINGW_NAME_AW ( RpcServerRegisterAuthInfo )
#define RpcServerUseProtseq __MINGW_NAME_AW ( RpcServerUseProtseq )
#define RpcServerUseProtseqEp __MINGW_NAME_AW ( RpcServerUseProtseqEp )
#define RpcServerUseProtseqEpEx __MINGW_NAME_AW ( RpcServerUseProtseqEpEx )
#define RpcServerUseProtseqEx __MINGW_NAME_AW ( RpcServerUseProtseqEx )
#define RpcServerUseProtseqIf __MINGW_NAME_AW ( RpcServerUseProtseqIf )
#define RpcServerUseProtseqIfEx __MINGW_NAME_AW ( RpcServerUseProtseqIfEx )
#define RpcStringBindingCompose __MINGW_NAME_AW ( RpcStringBindingCompose )
#define RpcStringBindingParse __MINGW_NAME_AW ( RpcStringBindingParse )
#define RpcStringFree __MINGW_NAME_AW ( RpcStringFree )
#define RpcTryExcept __try {
#define RpcTryFinally __try {
#define RtlCopyMemory(Destination, Source, Length) memcpy ( ( Destination ) , ( Source ) , ( Length ) )
#define RtlEqualMemory(Destination, Source, Length) ( ! memcmp ( ( Destination ) , ( Source ) , ( Length ) ) )
#define RtlFillMemory(Destination, Length, Fill) memset ( ( Destination ) , ( Fill ) , ( Length ) )
#define RtlMoveMemory(Destination, Source, Length) memmove ( ( Destination ) , ( Source ) , ( Length ) )
#define RtlZeroMemory(Destination, Length) memset ( ( Destination ) , 0 , ( Length ) )
#define SACL_SECURITY_INFORMATION (8l)
#define SANDBOX_INERT (2)
#define SAVE_ATTRIBUTE_VALUES (211)
#define SAVE_CTM (4101)
#define SBM_ENABLE_ARROWS (228)
#define SBM_GETPOS (225)
#define SBM_GETRANGE (227)
#define SBM_GETSCROLLBARINFO (235)
#define SBM_GETSCROLLINFO (234)
#define SBM_SETPOS (224)
#define SBM_SETRANGE (226)
#define SBM_SETRANGEREDRAW (230)
#define SBM_SETSCROLLINFO (233)
#define SBS_BOTTOMALIGN __MSABI_LONG ( 0x0004 )
#define SBS_HORZ __MSABI_LONG ( 0x0000 )
#define SBS_LEFTALIGN __MSABI_LONG ( 0x0002 )
#define SBS_RIGHTALIGN __MSABI_LONG ( 0x0004 )
#define SBS_SIZEBOX __MSABI_LONG ( 0x0008 )
#define SBS_SIZEBOXBOTTOMRIGHTALIGN __MSABI_LONG ( 0x0004 )
#define SBS_SIZEBOXTOPLEFTALIGN __MSABI_LONG ( 0x0002 )
#define SBS_SIZEGRIP __MSABI_LONG ( 0x0010 )
#define SBS_TOPALIGN __MSABI_LONG ( 0x0002 )
#define SBS_VERT __MSABI_LONG ( 0x0001 )
#define SB_BOTH (3)
#define SB_BOTTOM (7)
#define SB_CONST_ALPHA (1)
#define SB_CTL (2)
#define SB_ENDSCROLL (8)
#define SB_GRAD_RECT (16)
#define SB_GRAD_TRI (32)
#define SB_HORZ (0)
#define SB_LEFT (6)
#define SB_LINEDOWN (1)
#define SB_LINELEFT (0)
#define SB_LINERIGHT (1)
#define SB_LINEUP (0)
#define SB_NONE (0)
#define SB_PAGEDOWN (3)
#define SB_PAGELEFT (2)
#define SB_PAGERIGHT (3)
#define SB_PAGEUP (2)
#define SB_PIXEL_ALPHA (2)
#define SB_PREMULT_ALPHA (4)
#define SB_RIGHT (7)
#define SB_THUMBPOSITION (4)
#define SB_THUMBTRACK (5)
#define SB_TOP (6)
#define SB_VERT (1)
#define SCALINGFACTORX (114)
#define SCALINGFACTORY (115)
#define SCARD_ABSENT (1)
#define SCARD_ALL_READERS TEXT ( "SCard$AllReaders\000" )
#define SCARD_ATR_LENGTH (33)
#define SCARD_ATTR_ATR_STRING SCARD_ATTR_VALUE ( SCARD_CLASS_ICC_STATE , 0x0303 )
#define SCARD_ATTR_CHANNEL_ID SCARD_ATTR_VALUE ( SCARD_CLASS_COMMUNICATIONS , 0x0110 )
#define SCARD_ATTR_CHARACTERISTICS SCARD_ATTR_VALUE ( SCARD_CLASS_MECHANICAL , 0x0150 )
#define SCARD_ATTR_CURRENT_BWT SCARD_ATTR_VALUE ( SCARD_CLASS_IFD_PROTOCOL , 0x0209 )
#define SCARD_ATTR_CURRENT_CLK SCARD_ATTR_VALUE ( SCARD_CLASS_IFD_PROTOCOL , 0x0202 )
#define SCARD_ATTR_CURRENT_CWT SCARD_ATTR_VALUE ( SCARD_CLASS_IFD_PROTOCOL , 0x020a )
#define SCARD_ATTR_CURRENT_D SCARD_ATTR_VALUE ( SCARD_CLASS_IFD_PROTOCOL , 0x0204 )
#define SCARD_ATTR_CURRENT_EBC_ENCODING SCARD_ATTR_VALUE ( SCARD_CLASS_IFD_PROTOCOL , 0x020b )
#define SCARD_ATTR_CURRENT_F SCARD_ATTR_VALUE ( SCARD_CLASS_IFD_PROTOCOL , 0x0203 )
#define SCARD_ATTR_CURRENT_IFSC SCARD_ATTR_VALUE ( SCARD_CLASS_IFD_PROTOCOL , 0x0207 )
#define SCARD_ATTR_CURRENT_IFSD SCARD_ATTR_VALUE ( SCARD_CLASS_IFD_PROTOCOL , 0x0208 )
#define SCARD_ATTR_CURRENT_IO_STATE SCARD_ATTR_VALUE ( SCARD_CLASS_ICC_STATE , 0x0302 )
#define SCARD_ATTR_CURRENT_N SCARD_ATTR_VALUE ( SCARD_CLASS_IFD_PROTOCOL , 0x0205 )
#define SCARD_ATTR_CURRENT_PROTOCOL_TYPE SCARD_ATTR_VALUE ( SCARD_CLASS_IFD_PROTOCOL , 0x0201 )
#define SCARD_ATTR_CURRENT_W SCARD_ATTR_VALUE ( SCARD_CLASS_IFD_PROTOCOL , 0x0206 )
#define SCARD_ATTR_DEFAULT_CLK SCARD_ATTR_VALUE ( SCARD_CLASS_PROTOCOL , 0x0121 )
#define SCARD_ATTR_DEFAULT_DATA_RATE SCARD_ATTR_VALUE ( SCARD_CLASS_PROTOCOL , 0x0123 )
#define SCARD_ATTR_DEVICE_FRIENDLY_NAME __MINGW_NAME_UAW ( SCARD_ATTR_DEVICE_FRIENDLY_NAME )
#define SCARD_ATTR_DEVICE_FRIENDLY_NAME_A SCARD_ATTR_VALUE ( SCARD_CLASS_SYSTEM , 0x0003 )
#define SCARD_ATTR_DEVICE_FRIENDLY_NAME_W SCARD_ATTR_VALUE ( SCARD_CLASS_SYSTEM , 0x0005 )
#define SCARD_ATTR_DEVICE_IN_USE SCARD_ATTR_VALUE ( SCARD_CLASS_SYSTEM , 0x0002 )
#define SCARD_ATTR_DEVICE_SYSTEM_NAME __MINGW_NAME_UAW ( SCARD_ATTR_DEVICE_SYSTEM_NAME )
#define SCARD_ATTR_DEVICE_SYSTEM_NAME_A SCARD_ATTR_VALUE ( SCARD_CLASS_SYSTEM , 0x0004 )
#define SCARD_ATTR_DEVICE_SYSTEM_NAME_W SCARD_ATTR_VALUE ( SCARD_CLASS_SYSTEM , 0x0006 )
#define SCARD_ATTR_DEVICE_UNIT SCARD_ATTR_VALUE ( SCARD_CLASS_SYSTEM , 0x0001 )
#define SCARD_ATTR_ESC_AUTHREQUEST SCARD_ATTR_VALUE ( SCARD_CLASS_VENDOR_DEFINED , 0xA005 )
#define SCARD_ATTR_ESC_CANCEL SCARD_ATTR_VALUE ( SCARD_CLASS_VENDOR_DEFINED , 0xA003 )
#define SCARD_ATTR_ESC_RESET SCARD_ATTR_VALUE ( SCARD_CLASS_VENDOR_DEFINED , 0xA000 )
#define SCARD_ATTR_EXTENDED_BWT SCARD_ATTR_VALUE ( SCARD_CLASS_IFD_PROTOCOL , 0x020c )
#define SCARD_ATTR_ICC_INTERFACE_STATUS SCARD_ATTR_VALUE ( SCARD_CLASS_ICC_STATE , 0x0301 )
#define SCARD_ATTR_ICC_PRESENCE SCARD_ATTR_VALUE ( SCARD_CLASS_ICC_STATE , 0x0300 )
#define SCARD_ATTR_ICC_TYPE_PER_ATR SCARD_ATTR_VALUE ( SCARD_CLASS_ICC_STATE , 0x0304 )
#define SCARD_ATTR_MAXINPUT SCARD_ATTR_VALUE ( SCARD_CLASS_VENDOR_DEFINED , 0xA007 )
#define SCARD_ATTR_MAX_CLK SCARD_ATTR_VALUE ( SCARD_CLASS_PROTOCOL , 0x0122 )
#define SCARD_ATTR_MAX_DATA_RATE SCARD_ATTR_VALUE ( SCARD_CLASS_PROTOCOL , 0x0124 )
#define SCARD_ATTR_MAX_IFSD SCARD_ATTR_VALUE ( SCARD_CLASS_PROTOCOL , 0x0125 )
#define SCARD_ATTR_POWER_MGMT_SUPPORT SCARD_ATTR_VALUE ( SCARD_CLASS_POWER_MGMT , 0x0131 )
#define SCARD_ATTR_PROTOCOL_TYPES SCARD_ATTR_VALUE ( SCARD_CLASS_PROTOCOL , 0x0120 )
#define SCARD_ATTR_SUPRESS_T1_IFS_REQUEST SCARD_ATTR_VALUE ( SCARD_CLASS_SYSTEM , 0x0007 )
#define SCARD_ATTR_USER_AUTH_INPUT_DEVICE SCARD_ATTR_VALUE ( SCARD_CLASS_SECURITY , 0x0142 )
#define SCARD_ATTR_USER_TO_CARD_AUTH_DEVICE SCARD_ATTR_VALUE ( SCARD_CLASS_SECURITY , 0x0140 )
#define SCARD_ATTR_VALUE(Class, Tag) ( ( ( ( ULONG ) ( Class ) ) << 16 ) | ( ( ULONG ) ( Tag ) ) )
#define SCARD_ATTR_VENDOR_IFD_SERIAL_NO SCARD_ATTR_VALUE ( SCARD_CLASS_VENDOR_INFO , 0x0103 )
#define SCARD_ATTR_VENDOR_IFD_TYPE SCARD_ATTR_VALUE ( SCARD_CLASS_VENDOR_INFO , 0x0101 )
#define SCARD_ATTR_VENDOR_IFD_VERSION SCARD_ATTR_VALUE ( SCARD_CLASS_VENDOR_INFO , 0x0102 )
#define SCARD_ATTR_VENDOR_NAME SCARD_ATTR_VALUE ( SCARD_CLASS_VENDOR_INFO , 0x0100 )
#define SCARD_AUTOALLOCATE ( DWORD ) ( - 1 )
#define SCARD_CLASS_COMMUNICATIONS (2)
#define SCARD_CLASS_ICC_STATE (9)
#define SCARD_CLASS_IFD_PROTOCOL (8)
#define SCARD_CLASS_MECHANICAL (6)
#define SCARD_CLASS_PERF (32766)
#define SCARD_CLASS_POWER_MGMT (4)
#define SCARD_CLASS_PROTOCOL (3)
#define SCARD_CLASS_SECURITY (5)
#define SCARD_CLASS_SYSTEM (32767)
#define SCARD_CLASS_VENDOR_DEFINED (7)
#define SCARD_CLASS_VENDOR_INFO (1)
#define SCARD_COLD_RESET (1)
#define SCARD_CTL_CODE(code) CTL_CODE ( FILE_DEVICE_SMARTCARD , ( code ) , METHOD_BUFFERED , FILE_ANY_ACCESS )
#define SCARD_DEFAULT_READERS TEXT ( "SCard$DefaultReaders\000" )
#define SCARD_EJECT_CARD (3)
#define SCARD_E_BAD_SEEK _HRESULT_TYPEDEF_ ( 0x80100029 )
#define SCARD_E_CANCELLED _HRESULT_TYPEDEF_ ( 0x80100002 )
#define SCARD_E_CANT_DISPOSE _HRESULT_TYPEDEF_ ( 0x8010000E )
#define SCARD_E_CARD_UNSUPPORTED _HRESULT_TYPEDEF_ ( 0x8010001C )
#define SCARD_E_CERTIFICATE_UNAVAILABLE _HRESULT_TYPEDEF_ ( 0x8010002D )
#define SCARD_E_COMM_DATA_LOST _HRESULT_TYPEDEF_ ( 0x8010002F )
#define SCARD_E_DIR_NOT_FOUND _HRESULT_TYPEDEF_ ( 0x80100023 )
#define SCARD_E_DUPLICATE_READER _HRESULT_TYPEDEF_ ( 0x8010001B )
#define SCARD_E_FILE_NOT_FOUND _HRESULT_TYPEDEF_ ( 0x80100024 )
#define SCARD_E_ICC_CREATEORDER _HRESULT_TYPEDEF_ ( 0x80100021 )
#define SCARD_E_ICC_INSTALLATION _HRESULT_TYPEDEF_ ( 0x80100020 )
#define SCARD_E_INSUFFICIENT_BUFFER _HRESULT_TYPEDEF_ ( 0x80100008 )
#define SCARD_E_INVALID_ATR _HRESULT_TYPEDEF_ ( 0x80100015 )
#define SCARD_E_INVALID_CHV _HRESULT_TYPEDEF_ ( 0x8010002A )
#define SCARD_E_INVALID_HANDLE _HRESULT_TYPEDEF_ ( 0x80100003 )
#define SCARD_E_INVALID_PARAMETER _HRESULT_TYPEDEF_ ( 0x80100004 )
#define SCARD_E_INVALID_TARGET _HRESULT_TYPEDEF_ ( 0x80100005 )
#define SCARD_E_INVALID_VALUE _HRESULT_TYPEDEF_ ( 0x80100011 )
#define SCARD_E_NOT_READY _HRESULT_TYPEDEF_ ( 0x80100010 )
#define SCARD_E_NOT_TRANSACTED _HRESULT_TYPEDEF_ ( 0x80100016 )
#define SCARD_E_NO_ACCESS _HRESULT_TYPEDEF_ ( 0x80100027 )
#define SCARD_E_NO_DIR _HRESULT_TYPEDEF_ ( 0x80100025 )
#define SCARD_E_NO_FILE _HRESULT_TYPEDEF_ ( 0x80100026 )
#define SCARD_E_NO_KEY_CONTAINER _HRESULT_TYPEDEF_ ( 0x80100030 )
#define SCARD_E_NO_MEMORY _HRESULT_TYPEDEF_ ( 0x80100006 )
#define SCARD_E_NO_READERS_AVAILABLE _HRESULT_TYPEDEF_ ( 0x8010002E )
#define SCARD_E_NO_SERVICE _HRESULT_TYPEDEF_ ( 0x8010001D )
#define SCARD_E_NO_SMARTCARD _HRESULT_TYPEDEF_ ( 0x8010000C )
#define SCARD_E_NO_SUCH_CERTIFICATE _HRESULT_TYPEDEF_ ( 0x8010002C )
#define SCARD_E_PCI_TOO_SMALL _HRESULT_TYPEDEF_ ( 0x80100019 )
#define SCARD_E_PROTO_MISMATCH _HRESULT_TYPEDEF_ ( 0x8010000F )
#define SCARD_E_READER_UNAVAILABLE _HRESULT_TYPEDEF_ ( 0x80100017 )
#define SCARD_E_READER_UNSUPPORTED _HRESULT_TYPEDEF_ ( 0x8010001A )
#define SCARD_E_SERVER_TOO_BUSY _HRESULT_TYPEDEF_ ( 0x80100031 )
#define SCARD_E_SERVICE_STOPPED _HRESULT_TYPEDEF_ ( 0x8010001E )
#define SCARD_E_SHARING_VIOLATION _HRESULT_TYPEDEF_ ( 0x8010000B )
#define SCARD_E_SYSTEM_CANCELLED _HRESULT_TYPEDEF_ ( 0x80100012 )
#define SCARD_E_TIMEOUT _HRESULT_TYPEDEF_ ( 0x8010000A )
#define SCARD_E_UNEXPECTED _HRESULT_TYPEDEF_ ( 0x8010001F )
#define SCARD_E_UNKNOWN_CARD _HRESULT_TYPEDEF_ ( 0x8010000D )
#define SCARD_E_UNKNOWN_READER _HRESULT_TYPEDEF_ ( 0x80100009 )
#define SCARD_E_UNKNOWN_RES_MNG _HRESULT_TYPEDEF_ ( 0x8010002B )
#define SCARD_E_UNSUPPORTED_FEATURE _HRESULT_TYPEDEF_ ( 0x80100022 )
#define SCARD_E_WRITE_TOO_MANY _HRESULT_TYPEDEF_ ( 0x80100028 )
#define SCARD_F_COMM_ERROR _HRESULT_TYPEDEF_ ( 0x80100013 )
#define SCARD_F_INTERNAL_ERROR _HRESULT_TYPEDEF_ ( 0x80100001 )
#define SCARD_F_UNKNOWN_ERROR _HRESULT_TYPEDEF_ ( 0x80100014 )
#define SCARD_F_WAITED_TOO_LONG _HRESULT_TYPEDEF_ ( 0x80100007 )
#define SCARD_LEAVE_CARD (0)
#define SCARD_LOCAL_READERS TEXT ( "SCard$LocalReaders\000" )
#define SCARD_NEGOTIABLE (5)
#define SCARD_PCI_RAW ""
#define SCARD_PCI_T0 ""
#define SCARD_PCI_T1 ""
#define SCARD_PERF_BYTES_TRANSMITTED SCARD_ATTR_VALUE ( SCARD_CLASS_PERF , 0x0002 )
#define SCARD_PERF_NUM_TRANSMISSIONS SCARD_ATTR_VALUE ( SCARD_CLASS_PERF , 0x0001 )
#define SCARD_PERF_TRANSMISSION_TIME SCARD_ATTR_VALUE ( SCARD_CLASS_PERF , 0x0003 )
#define SCARD_POWERED (4)
#define SCARD_POWER_DOWN (0)
#define SCARD_PRESENT (2)
#define SCARD_PROTOCOL_DEFAULT (2147483648u)
#define SCARD_PROTOCOL_OPTIMAL (0)
#define SCARD_PROTOCOL_RAW (65536)
#define SCARD_PROTOCOL_T0 (1)
#define SCARD_PROTOCOL_T1 (2)
#define SCARD_PROTOCOL_Tx (3)
#define SCARD_PROTOCOL_UNDEFINED (0)
#define SCARD_PROVIDER_CSP (2)
#define SCARD_PROVIDER_PRIMARY (1)
#define SCARD_P_SHUTDOWN _HRESULT_TYPEDEF_ ( 0x80100018 )
#define SCARD_READERSTATE_A SCARD_READERSTATEA
#define SCARD_READERSTATE_W SCARD_READERSTATEW
#define SCARD_READER_CONFISCATES (4)
#define SCARD_READER_EJECTS (2)
#define SCARD_READER_SWALLOWS (1)
#define SCARD_READER_TYPE_IDE (16)
#define SCARD_READER_TYPE_KEYBOARD (4)
#define SCARD_READER_TYPE_PARALELL (2)
#define SCARD_READER_TYPE_PCMCIA (64)
#define SCARD_READER_TYPE_SCSI (8)
#define SCARD_READER_TYPE_SERIAL (1)
#define SCARD_READER_TYPE_USB (32)
#define SCARD_READER_TYPE_VENDOR (240)
#define SCARD_RESET_CARD (1)
#define SCARD_SCOPE_SYSTEM (2)
#define SCARD_SCOPE_TERMINAL (1)
#define SCARD_SCOPE_USER (0)
#define SCARD_SHARE_DIRECT (3)
#define SCARD_SHARE_EXCLUSIVE (1)
#define SCARD_SHARE_SHARED (2)
#define SCARD_SPECIFIC (6)
#define SCARD_STATE_ATRMATCH (64)
#define SCARD_STATE_CHANGED (2)
#define SCARD_STATE_EMPTY (16)
#define SCARD_STATE_EXCLUSIVE (128)
#define SCARD_STATE_IGNORE (1)
#define SCARD_STATE_INUSE (256)
#define SCARD_STATE_MUTE (512)
#define SCARD_STATE_PRESENT (32)
#define SCARD_STATE_UNAVAILABLE (8)
#define SCARD_STATE_UNAWARE (0)
#define SCARD_STATE_UNKNOWN (4)
#define SCARD_STATE_UNPOWERED (1024)
#define SCARD_SWALLOWED (3)
#define SCARD_SYSTEM_READERS TEXT ( "SCard$SystemReaders\000" )
#define SCARD_S_SUCCESS NO_ERROR
#define SCARD_T0_CMD_LENGTH (5)
#define SCARD_T0_HEADER_LENGTH (7)
#define SCARD_T1_EPILOGUE_LENGTH (2)
#define SCARD_T1_MAX_IFS (254)
#define SCARD_T1_PROLOGUE_LENGTH (3)
#define SCARD_UNKNOWN (0)
#define SCARD_UNPOWER_CARD (2)
#define SCARD_WARM_RESET (2)
#define SCARD_W_CACHE_ITEM_NOT_FOUND _HRESULT_TYPEDEF_ ( 0x80100070 )
#define SCARD_W_CACHE_ITEM_STALE _HRESULT_TYPEDEF_ ( 0x80100071 )
#define SCARD_W_CANCELLED_BY_USER _HRESULT_TYPEDEF_ ( 0x8010006E )
#define SCARD_W_CARD_NOT_AUTHENTICATED _HRESULT_TYPEDEF_ ( 0x8010006F )
#define SCARD_W_CHV_BLOCKED _HRESULT_TYPEDEF_ ( 0x8010006C )
#define SCARD_W_EOF _HRESULT_TYPEDEF_ ( 0x8010006D )
#define SCARD_W_REMOVED_CARD _HRESULT_TYPEDEF_ ( 0x80100069 )
#define SCARD_W_RESET_CARD _HRESULT_TYPEDEF_ ( 0x80100068 )
#define SCARD_W_SECURITY_VIOLATION _HRESULT_TYPEDEF_ ( 0x8010006A )
#define SCARD_W_UNPOWERED_CARD _HRESULT_TYPEDEF_ ( 0x80100067 )
#define SCARD_W_UNRESPONSIVE_CARD _HRESULT_TYPEDEF_ ( 0x80100066 )
#define SCARD_W_UNSUPPORTED_CARD _HRESULT_TYPEDEF_ ( 0x80100065 )
#define SCARD_W_WRONG_CHV _HRESULT_TYPEDEF_ ( 0x8010006B )
#define SCERR_NOCARDNAME (16384)
#define SCERR_NOGUIDS (32768)
#define SCHANNEL_ENC_KEY (1)
#define SCHANNEL_MAC_KEY (0)
#define SCHED_E_ACCOUNT_DBASE_CORRUPT _HRESULT_TYPEDEF_ ( 0x80041311 )
#define SCHED_E_ACCOUNT_INFORMATION_NOT_SET _HRESULT_TYPEDEF_ ( 0x8004130F )
#define SCHED_E_ACCOUNT_NAME_NOT_FOUND _HRESULT_TYPEDEF_ ( 0x80041310 )
#define SCHED_E_CANNOT_OPEN_TASK _HRESULT_TYPEDEF_ ( 0x8004130D )
#define SCHED_E_INVALID_TASK _HRESULT_TYPEDEF_ ( 0x8004130E )
#define SCHED_E_NO_SECURITY_SERVICES _HRESULT_TYPEDEF_ ( 0x80041312 )
#define SCHED_E_SERVICE_NOT_INSTALLED _HRESULT_TYPEDEF_ ( 0x8004130C )
#define SCHED_E_SERVICE_NOT_LOCALSYSTEM __MSABI_LONG ( 6200 )
#define SCHED_E_SERVICE_NOT_RUNNING _HRESULT_TYPEDEF_ ( 0x80041315 )
#define SCHED_E_TASK_NOT_READY _HRESULT_TYPEDEF_ ( 0x8004130A )
#define SCHED_E_TASK_NOT_RUNNING _HRESULT_TYPEDEF_ ( 0x8004130B )
#define SCHED_E_TRIGGER_NOT_FOUND _HRESULT_TYPEDEF_ ( 0x80041309 )
#define SCHED_E_UNKNOWN_OBJECT_VERSION _HRESULT_TYPEDEF_ ( 0x80041313 )
#define SCHED_E_UNSUPPORTED_ACCOUNT_OPTION _HRESULT_TYPEDEF_ ( 0x80041314 )
#define SCHED_S_EVENT_TRIGGER _HRESULT_TYPEDEF_ ( 0x00041308 )
#define SCHED_S_TASK_DISABLED _HRESULT_TYPEDEF_ ( 0x00041302 )
#define SCHED_S_TASK_HAS_NOT_RUN _HRESULT_TYPEDEF_ ( 0x00041303 )
#define SCHED_S_TASK_NOT_SCHEDULED _HRESULT_TYPEDEF_ ( 0x00041305 )
#define SCHED_S_TASK_NO_MORE_RUNS _HRESULT_TYPEDEF_ ( 0x00041304 )
#define SCHED_S_TASK_NO_VALID_TRIGGERS _HRESULT_TYPEDEF_ ( 0x00041307 )
#define SCHED_S_TASK_READY _HRESULT_TYPEDEF_ ( 0x00041300 )
#define SCHED_S_TASK_RUNNING _HRESULT_TYPEDEF_ ( 0x00041301 )
#define SCHED_S_TASK_TERMINATED _HRESULT_TYPEDEF_ ( 0x00041306 )
#define SCHEME_OID_RETRIEVE_ENCODED_OBJECTW_FUNC "SchemeDllRetrieveEncodedObjectW"
#define SCHEME_OID_RETRIEVE_ENCODED_OBJECT_FUNC "SchemeDllRetrieveEncodedObject"
#define SCODE_CODE(sc) ( ( sc ) & 0xFFFF )
#define SCODE_FACILITY(sc) ( ( ( sc ) >> 16 ) & 0x1fff )
#define SCODE_SEVERITY(sc) ( ( ( sc ) >> 31 ) & 0x1 )
#define SCOPE_SECURITY_INFORMATION (64l)
#define SCREEN_FONTTYPE (8192)
#define SCROLLLOCK_ON (64)
#define SCS_32BIT_BINARY (0)
#define SCS_64BIT_BINARY (6)
#define SCS_CAP_COMPSTR (1)
#define SCS_CAP_MAKEREAD (2)
#define SCS_CAP_SETRECONVERTSTRING (4)
#define SCS_CHANGEATTR (18)
#define SCS_CHANGECLAUSE (36)
#define SCS_DOS_BINARY (1)
#define SCS_OS216_BINARY (5)
#define SCS_PIF_BINARY (3)
#define SCS_POSIX_BINARY (4)
#define SCS_QUERYRECONVERTSTRING (131072)
#define SCS_SETRECONVERTSTRING (65536)
#define SCS_SETSTR (9)
#define SCS_THIS_PLATFORM_BINARY SCS_64BIT_BINARY
#define SCS_WOW_BINARY (2)
#define SC_ARRANGE (61712)
#define SC_CLOSE (61536)
#define SC_CONTEXTHELP (61824)
#define SC_DEFAULT (61792)
#define SC_DLG_FORCE_UI (4)
#define SC_DLG_MINIMAL_UI (1)
#define SC_DLG_NO_UI (2)
#define SC_GROUP_IDENTIFIER __MINGW_NAME_AW ( SC_GROUP_IDENTIFIER )
#define SC_GROUP_IDENTIFIERA (43)
#define SC_GROUP_IDENTIFIERW (43l)
#define SC_HOTKEY (61776)
#define SC_HSCROLL (61568)
#define SC_ICON SC_MINIMIZE
#define SC_KEYMENU (61696)
#define SC_MANAGER_ALL_ACCESS (983103l)
#define SC_MANAGER_CONNECT (1)
#define SC_MANAGER_CREATE_SERVICE (2)
#define SC_MANAGER_ENUMERATE_SERVICE (4)
#define SC_MANAGER_LOCK (8)
#define SC_MANAGER_MODIFY_BOOT_CONFIG (32)
#define SC_MANAGER_QUERY_LOCK_STATUS (16)
#define SC_MAXIMIZE (61488)
#define SC_MINIMIZE (61472)
#define SC_MONITORPOWER (61808)
#define SC_MOUSEMENU (61584)
#define SC_MOVE (61456)
#define SC_NEXTWINDOW (61504)
#define SC_PREVWINDOW (61520)
#define SC_RESTORE (61728)
#define SC_SCREENSAVE (61760)
#define SC_SEPARATOR (61455)
#define SC_SIZE (61440)
#define SC_TASKLIST (61744)
#define SC_VSCROLL (61552)
#define SC_ZOOM SC_MAXIMIZE
#define SCardAddReaderToGroup __MINGW_NAME_AW ( SCardAddReaderToGroup )
#define SCardConnect __MINGW_NAME_AW ( SCardConnect )
#define SCardForgetCardType __MINGW_NAME_AW ( SCardForgetCardType )
#define SCardForgetReader __MINGW_NAME_AW ( SCardForgetReader )
#define SCardForgetReaderGroup __MINGW_NAME_AW ( SCardForgetReaderGroup )
#define SCardGetCardTypeProviderName __MINGW_NAME_AW ( SCardGetCardTypeProviderName )
#define SCardGetProviderId __MINGW_NAME_AW ( SCardGetProviderId )
#define SCardGetReaderCapabilities SCardGetAttrib
#define SCardGetStatusChange __MINGW_NAME_AW ( SCardGetStatusChange )
#define SCardIntroduceCardType __MINGW_NAME_AW ( SCardIntroduceCardType )
#define SCardIntroduceReader __MINGW_NAME_AW ( SCardIntroduceReader )
#define SCardIntroduceReaderGroup __MINGW_NAME_AW ( SCardIntroduceReaderGroup )
#define SCardListCardTypes SCardListCards
#define SCardListCards __MINGW_NAME_AW ( SCardListCards )
#define SCardListInterfaces __MINGW_NAME_AW ( SCardListInterfaces )
#define SCardListReaderGroups __MINGW_NAME_AW ( SCardListReaderGroups )
#define SCardListReaders __MINGW_NAME_AW ( SCardListReaders )
#define SCardLocateCards __MINGW_NAME_AW ( SCardLocateCards )
#define SCardLocateCardsByATR __MINGW_NAME_AW ( SCardLocateCardsByATR )
#define SCardRemoveReaderFromGroup __MINGW_NAME_AW ( SCardRemoveReaderFromGroup )
#define SCardSetCardTypeProviderName __MINGW_NAME_AW ( SCardSetCardTypeProviderName )
#define SCardSetReaderCapabilities SCardSetAttrib
#define SCardStatus __MINGW_NAME_AW ( SCardStatus )
#define SCardUIDlgSelectCard __MINGW_NAME_AW ( SCardUIDlgSelectCard )
#define SEARCH_ALL (0)
#define SEARCH_ALL_NO_SEQ (4)
#define SEARCH_ALTERNATE (2)
#define SEARCH_ALT_NO_SEQ (6)
#define SEARCH_PRIMARY (1)
#define SEARCH_PRI_NO_SEQ (5)
#define SECTION_ALL_ACCESS (983071l)
#define SECTION_EXTEND_SIZE (16)
#define SECTION_MAP_EXECUTE (8)
#define SECTION_MAP_EXECUTE_EXPLICIT (32)
#define SECTION_MAP_READ (4)
#define SECTION_MAP_WRITE (2)
#define SECTION_QUERY (1)
#define SECURITY_ANONYMOUS (0)
#define SECURITY_ANONYMOUS_LOGON_RID (7l)
#define SECURITY_APPPOOL_ID_BASE_RID (82l)
#define SECURITY_APPPOOL_ID_RID_COUNT (6l)
#define SECURITY_APP_PACKAGE_AUTHORITY { 0 , 0 , 0 , 0 , 0 , 15 }
#define SECURITY_APP_PACKAGE_BASE_RID (2l)
#define SECURITY_APP_PACKAGE_RID_COUNT (8l)
#define SECURITY_AUTHENTICATED_USER_RID (11l)
#define SECURITY_AUTHENTICATION_AUTHORITY { 0 , 0 , 0 , 0 , 0 , 18 }
#define SECURITY_AUTHENTICATION_AUTHORITY_ASSERTED_RID (1l)
#define SECURITY_AUTHENTICATION_AUTHORITY_RID_COUNT (1l)
#define SECURITY_AUTHENTICATION_SERVICE_ASSERTED_RID (2l)
#define SECURITY_BATCH_RID (3l)
#define SECURITY_BUILTIN_APP_PACKAGE_RID_COUNT (2l)
#define SECURITY_BUILTIN_CAPABILITY_RID_COUNT (2l)
#define SECURITY_BUILTIN_DOMAIN_RID (32l)
#define SECURITY_BUILTIN_PACKAGE_ANY_PACKAGE (1l)
#define SECURITY_CAPABILITY_BASE_RID (3l)
#define SECURITY_CAPABILITY_DOCUMENTS_LIBRARY (7l)
#define SECURITY_CAPABILITY_ENTERPRISE_AUTHENTICATION (8l)
#define SECURITY_CAPABILITY_INTERNET_CLIENT (1l)
#define SECURITY_CAPABILITY_INTERNET_CLIENT_SERVER (2l)
#define SECURITY_CAPABILITY_INTERNET_EXPLORER (4096l)
#define SECURITY_CAPABILITY_MUSIC_LIBRARY (6l)
#define SECURITY_CAPABILITY_PICTURES_LIBRARY (4l)
#define SECURITY_CAPABILITY_PRIVATE_NETWORK_CLIENT_SERVER (3l)
#define SECURITY_CAPABILITY_REMOVABLE_STORAGE (10l)
#define SECURITY_CAPABILITY_RID_COUNT (5l)
#define SECURITY_CAPABILITY_SHARED_USER_CERTIFICATES (9l)
#define SECURITY_CAPABILITY_VIDEOS_LIBRARY (5l)
#define SECURITY_CLOUD_INFRASTRUCTURE_SERVICES_ID_BASE_RID (85l)
#define SECURITY_CLOUD_INFRASTRUCTURE_SERVICES_ID_RID_COUNT (6l)
#define SECURITY_COM_ID_BASE_RID (89l)
#define SECURITY_CONTEXT_TRACKING (262144)
#define SECURITY_CREATOR_GROUP_RID (1l)
#define SECURITY_CREATOR_GROUP_SERVER_RID (3l)
#define SECURITY_CREATOR_OWNER_RID (0l)
#define SECURITY_CREATOR_OWNER_RIGHTS_RID (4l)
#define SECURITY_CREATOR_OWNER_SERVER_RID (2l)
#define SECURITY_CREATOR_SID_AUTHORITY { 0 , 0 , 0 , 0 , 0 , 3 }
#define SECURITY_CRED_TYPE_BASE_RID (65l)
#define SECURITY_CRED_TYPE_RID_COUNT (2l)
#define SECURITY_CRED_TYPE_THIS_ORG_CERT_RID (1l)
#define SECURITY_DASHOST_ID_BASE_RID (92l)
#define SECURITY_DASHOST_ID_RID_COUNT (6l)
#define SECURITY_DELEGATION (0)
#define SECURITY_DESCRIPTOR_MIN_LENGTH ( sizeof ( SECURITY_DESCRIPTOR ) )
#define SECURITY_DESCRIPTOR_REVISION (1)
#define SECURITY_DESCRIPTOR_REVISION1 (1)
#define SECURITY_DIALUP_RID (1l)
#define SECURITY_DYNAMIC_TRACKING (1)
#define SECURITY_EFFECTIVE_ONLY (524288)
#define SECURITY_ENTERPRISE_CONTROLLERS_RID (9l)
#define SECURITY_ENTERPRISE_READONLY_CONTROLLERS_RID (22l)
#define SECURITY_IDENTIFICATION (0)
#define SECURITY_IMPERSONATION (0)
#define SECURITY_INTERACTIVE_RID (4l)
#define SECURITY_IUSER_RID (17l)
#define SECURITY_LOCAL_LOGON_RID (1l)
#define SECURITY_LOCAL_RID (0l)
#define SECURITY_LOCAL_SERVICE_RID (19l)
#define SECURITY_LOCAL_SID_AUTHORITY { 0 , 0 , 0 , 0 , 0 , 2 }
#define SECURITY_LOCAL_SYSTEM_RID (18l)
#define SECURITY_LOGON_IDS_RID (5l)
#define SECURITY_LOGON_IDS_RID_COUNT (3l)
#define SECURITY_MANDATORY_HIGH_RID (12288l)
#define SECURITY_MANDATORY_LABEL_AUTHORITY { 0 , 0 , 0 , 0 , 0 , 16 }
#define SECURITY_MANDATORY_LOW_RID (4096l)
#define SECURITY_MANDATORY_MAXIMUM_USER_RID SECURITY_MANDATORY_SYSTEM_RID
#define SECURITY_MANDATORY_MEDIUM_RID (8192l)
#define SECURITY_MANDATORY_PROTECTED_PROCESS_RID (20480l)
#define SECURITY_MANDATORY_SYSTEM_RID (16384l)
#define SECURITY_MANDATORY_UNTRUSTED_RID (0l)
#define SECURITY_MAX_ALWAYS_FILTERED (999l)
#define SECURITY_MAX_BASE_RID (111l)
#define SECURITY_MAX_IMPERSONATION_LEVEL SecurityDelegation
#define SECURITY_MAX_SID_SIZE ( sizeof ( SID ) - sizeof ( DWORD ) + ( SID_MAX_SUB_AUTHORITIES * sizeof ( DWORD ) ) )
#define SECURITY_MIN_BASE_RID (80l)
#define SECURITY_MIN_IMPERSONATION_LEVEL SecurityAnonymous
#define SECURITY_MIN_NEVER_FILTERED (1000l)
#define SECURITY_NETWORK_RID (2l)
#define SECURITY_NETWORK_SERVICE_RID (20l)
#define SECURITY_NFS_ID_BASE_RID (88l)
#define SECURITY_NON_UNIQUE_AUTHORITY { 0 , 0 , 0 , 0 , 0 , 4 }
#define SECURITY_NT_AUTHORITY { 0 , 0 , 0 , 0 , 0 , 5 }
#define SECURITY_NT_NON_UNIQUE (21l)
#define SECURITY_NT_NON_UNIQUE_SUB_AUTH_COUNT (3l)
#define SECURITY_NULL_RID (0l)
#define SECURITY_NULL_SID_AUTHORITY { 0 , 0 , 0 , 0 , 0 , 0 }
#define SECURITY_OTHER_ORGANIZATION_RID (1000l)
#define SECURITY_PACKAGE_BASE_RID (64l)
#define SECURITY_PACKAGE_DIGEST_RID (21l)
#define SECURITY_PACKAGE_NTLM_RID (10l)
#define SECURITY_PACKAGE_RID_COUNT (2l)
#define SECURITY_PACKAGE_SCHANNEL_RID (14l)
#define SECURITY_PRINCIPAL_SELF_RID (10l)
#define SECURITY_PROXY_RID (8l)
#define SECURITY_RDV_GFX_BASE_RID (91l)
#define SECURITY_REMOTE_LOGON_RID (14l)
#define SECURITY_RESERVED_ID_BASE_RID (81l)
#define SECURITY_RESOURCE_MANAGER_AUTHORITY { 0 , 0 , 0 , 0 , 0 , 9 }
#define SECURITY_RESTRICTED_CODE_RID (12l)
#define SECURITY_SCOPED_POLICY_ID_AUTHORITY { 0 , 0 , 0 , 0 , 0 , 17 }
#define SECURITY_SERVER_LOGON_RID SECURITY_ENTERPRISE_CONTROLLERS_RID
#define SECURITY_SERVICE_ID_BASE_RID (80l)
#define SECURITY_SERVICE_ID_RID_COUNT (6l)
#define SECURITY_SERVICE_RID (6l)
#define SECURITY_SQOS_PRESENT (1048576)
#define SECURITY_STATIC_TRACKING (0)
#define SECURITY_TASK_ID_BASE_RID (87l)
#define SECURITY_TERMINAL_SERVER_RID (13l)
#define SECURITY_THIS_ORGANIZATION_RID (15l)
#define SECURITY_TRUSTED_INSTALLER_RID1 (956008885)
#define SECURITY_TRUSTED_INSTALLER_RID2 (3418522649u)
#define SECURITY_TRUSTED_INSTALLER_RID3 (1831038044)
#define SECURITY_TRUSTED_INSTALLER_RID4 (1853292631)
#define SECURITY_TRUSTED_INSTALLER_RID5 (2271478464u)
#define SECURITY_USERMODEDRIVERHOST_ID_BASE_RID (84l)
#define SECURITY_USERMODEDRIVERHOST_ID_RID_COUNT (6l)
#define SECURITY_VALID_SQOS_FLAGS (2031616)
#define SECURITY_VIRTUALACCOUNT_ID_RID_COUNT (6l)
#define SECURITY_VIRTUALSERVER_ID_BASE_RID (83l)
#define SECURITY_VIRTUALSERVER_ID_RID_COUNT (6l)
#define SECURITY_WINDOWSMOBILE_ID_BASE_RID (112l)
#define SECURITY_WINDOW_MANAGER_BASE_RID (90l)
#define SECURITY_WMIHOST_ID_BASE_RID (86l)
#define SECURITY_WMIHOST_ID_RID_COUNT (6l)
#define SECURITY_WORLD_RID (0l)
#define SECURITY_WORLD_SID_AUTHORITY { 0 , 0 , 0 , 0 , 0 , 1 }
#define SECURITY_WRITE_RESTRICTED_CODE_RID (33l)
#define SEC_COMMIT (134217728)
#define SEC_E_ALGORITHM_MISMATCH _HRESULT_TYPEDEF_ ( 0x80090331 )
#define SEC_E_BAD_BINDINGS _HRESULT_TYPEDEF_ ( 0x80090346 )
#define SEC_E_BAD_PKGID _HRESULT_TYPEDEF_ ( 0x80090316 )
#define SEC_E_BUFFER_TOO_SMALL _HRESULT_TYPEDEF_ ( 0x80090321 )
#define SEC_E_CANNOT_INSTALL _HRESULT_TYPEDEF_ ( 0x80090307 )
#define SEC_E_CANNOT_PACK _HRESULT_TYPEDEF_ ( 0x80090309 )
#define SEC_E_CERT_EXPIRED _HRESULT_TYPEDEF_ ( 0x80090328 )
#define SEC_E_CERT_UNKNOWN _HRESULT_TYPEDEF_ ( 0x80090327 )
#define SEC_E_CERT_WRONG_USAGE _HRESULT_TYPEDEF_ ( 0x80090349 )
#define SEC_E_CONTEXT_EXPIRED _HRESULT_TYPEDEF_ ( 0x80090317 )
#define SEC_E_CROSSREALM_DELEGATION_FAILURE _HRESULT_TYPEDEF_ ( 0x80090357 )
#define SEC_E_CRYPTO_SYSTEM_INVALID _HRESULT_TYPEDEF_ ( 0x80090337 )
#define SEC_E_DECRYPT_FAILURE _HRESULT_TYPEDEF_ ( 0x80090330 )
#define SEC_E_DELEGATION_REQUIRED _HRESULT_TYPEDEF_ ( 0x80090345 )
#define SEC_E_DOWNGRADE_DETECTED _HRESULT_TYPEDEF_ ( 0x80090350 )
#define SEC_E_ENCRYPT_FAILURE _HRESULT_TYPEDEF_ ( 0x80090329 )
#define SEC_E_ILLEGAL_MESSAGE _HRESULT_TYPEDEF_ ( 0x80090326 )
#define SEC_E_INCOMPLETE_CREDENTIALS _HRESULT_TYPEDEF_ ( 0x80090320 )
#define SEC_E_INCOMPLETE_MESSAGE _HRESULT_TYPEDEF_ ( 0x80090318 )
#define SEC_E_INSUFFICIENT_MEMORY _HRESULT_TYPEDEF_ ( 0x80090300 )
#define SEC_E_INTERNAL_ERROR _HRESULT_TYPEDEF_ ( 0x80090304 )
#define SEC_E_INVALID_HANDLE _HRESULT_TYPEDEF_ ( 0x80090301 )
#define SEC_E_INVALID_TOKEN _HRESULT_TYPEDEF_ ( 0x80090308 )
#define SEC_E_ISSUING_CA_UNTRUSTED _HRESULT_TYPEDEF_ ( 0x80090352 )
#define SEC_E_ISSUING_CA_UNTRUSTED_KDC _HRESULT_TYPEDEF_ ( 0x80090359 )
#define SEC_E_KDC_CERT_EXPIRED _HRESULT_TYPEDEF_ ( 0x8009035A )
#define SEC_E_KDC_CERT_REVOKED _HRESULT_TYPEDEF_ ( 0x8009035B )
#define SEC_E_KDC_INVALID_REQUEST _HRESULT_TYPEDEF_ ( 0x80090340 )
#define SEC_E_KDC_UNABLE_TO_REFER _HRESULT_TYPEDEF_ ( 0x80090341 )
#define SEC_E_KDC_UNKNOWN_ETYPE _HRESULT_TYPEDEF_ ( 0x80090342 )
#define SEC_E_LOGON_DENIED _HRESULT_TYPEDEF_ ( 0x8009030C )
#define SEC_E_MAX_REFERRALS_EXCEEDED _HRESULT_TYPEDEF_ ( 0x80090338 )
#define SEC_E_MESSAGE_ALTERED _HRESULT_TYPEDEF_ ( 0x8009030F )
#define SEC_E_MULTIPLE_ACCOUNTS _HRESULT_TYPEDEF_ ( 0x80090347 )
#define SEC_E_MUST_BE_KDC _HRESULT_TYPEDEF_ ( 0x80090339 )
#define SEC_E_NOT_OWNER _HRESULT_TYPEDEF_ ( 0x80090306 )
#define SEC_E_NOT_SUPPORTED SEC_E_UNSUPPORTED_FUNCTION
#define SEC_E_NO_AUTHENTICATING_AUTHORITY _HRESULT_TYPEDEF_ ( 0x80090311 )
#define SEC_E_NO_CREDENTIALS _HRESULT_TYPEDEF_ ( 0x8009030E )
#define SEC_E_NO_IMPERSONATION _HRESULT_TYPEDEF_ ( 0x8009030B )
#define SEC_E_NO_IP_ADDRESSES _HRESULT_TYPEDEF_ ( 0x80090335 )
#define SEC_E_NO_KERB_KEY _HRESULT_TYPEDEF_ ( 0x80090348 )
#define SEC_E_NO_PA_DATA _HRESULT_TYPEDEF_ ( 0x8009033C )
#define SEC_E_NO_S4U_PROT_SUPPORT _HRESULT_TYPEDEF_ ( 0x80090356 )
#define SEC_E_NO_SPM SEC_E_INTERNAL_ERROR
#define SEC_E_NO_TGT_REPLY _HRESULT_TYPEDEF_ ( 0x80090334 )
#define SEC_E_OK ( ( HRESULT ) 0x00000000 )
#define SEC_E_OUT_OF_SEQUENCE _HRESULT_TYPEDEF_ ( 0x80090310 )
#define SEC_E_PKINIT_CLIENT_FAILURE _HRESULT_TYPEDEF_ ( 0x80090354 )
#define SEC_E_PKINIT_NAME_MISMATCH _HRESULT_TYPEDEF_ ( 0x8009033D )
#define SEC_E_QOP_NOT_SUPPORTED _HRESULT_TYPEDEF_ ( 0x8009030A )
#define SEC_E_REVOCATION_OFFLINE_C _HRESULT_TYPEDEF_ ( 0x80090353 )
#define SEC_E_REVOCATION_OFFLINE_KDC _HRESULT_TYPEDEF_ ( 0x80090358 )
#define SEC_E_SECPKG_NOT_FOUND _HRESULT_TYPEDEF_ ( 0x80090305 )
#define SEC_E_SECURITY_QOS_FAILED _HRESULT_TYPEDEF_ ( 0x80090332 )
#define SEC_E_SHUTDOWN_IN_PROGRESS _HRESULT_TYPEDEF_ ( 0x8009033F )
#define SEC_E_SMARTCARD_CERT_EXPIRED _HRESULT_TYPEDEF_ ( 0x80090355 )
#define SEC_E_SMARTCARD_CERT_REVOKED _HRESULT_TYPEDEF_ ( 0x80090351 )
#define SEC_E_SMARTCARD_LOGON_REQUIRED _HRESULT_TYPEDEF_ ( 0x8009033E )
#define SEC_E_STRONG_CRYPTO_NOT_SUPPORTED _HRESULT_TYPEDEF_ ( 0x8009033A )
#define SEC_E_TARGET_UNKNOWN _HRESULT_TYPEDEF_ ( 0x80090303 )
#define SEC_E_TIME_SKEW _HRESULT_TYPEDEF_ ( 0x80090324 )
#define SEC_E_TOO_MANY_PRINCIPALS _HRESULT_TYPEDEF_ ( 0x8009033B )
#define SEC_E_UNFINISHED_CONTEXT_DELETED _HRESULT_TYPEDEF_ ( 0x80090333 )
#define SEC_E_UNKNOWN_CREDENTIALS _HRESULT_TYPEDEF_ ( 0x8009030D )
#define SEC_E_UNSUPPORTED_FUNCTION _HRESULT_TYPEDEF_ ( 0x80090302 )
#define SEC_E_UNSUPPORTED_PREAUTH _HRESULT_TYPEDEF_ ( 0x80090343 )
#define SEC_E_UNTRUSTED_ROOT _HRESULT_TYPEDEF_ ( 0x80090325 )
#define SEC_E_WRONG_CREDENTIAL_HANDLE _HRESULT_TYPEDEF_ ( 0x80090336 )
#define SEC_E_WRONG_PRINCIPAL _HRESULT_TYPEDEF_ ( 0x80090322 )
#define SEC_FILE (8388608)
#define SEC_IMAGE (16777216)
#define SEC_IMAGE_NO_EXECUTE (285212672)
#define SEC_I_COMPLETE_AND_CONTINUE _HRESULT_TYPEDEF_ ( 0x00090314 )
#define SEC_I_COMPLETE_NEEDED _HRESULT_TYPEDEF_ ( 0x00090313 )
#define SEC_I_CONTEXT_EXPIRED _HRESULT_TYPEDEF_ ( 0x00090317 )
#define SEC_I_CONTINUE_NEEDED _HRESULT_TYPEDEF_ ( 0x00090312 )
#define SEC_I_INCOMPLETE_CREDENTIALS _HRESULT_TYPEDEF_ ( 0x00090320 )
#define SEC_I_LOCAL_LOGON _HRESULT_TYPEDEF_ ( 0x00090315 )
#define SEC_I_NO_LSA_CONTEXT _HRESULT_TYPEDEF_ ( 0x00090323 )
#define SEC_I_RENEGOTIATE _HRESULT_TYPEDEF_ ( 0x00090321 )
#define SEC_LARGE_PAGES (2147483648u)
#define SEC_NOCACHE (268435456)
#define SEC_PROTECTED_IMAGE (33554432)
#define SEC_RESERVE (67108864)
#define SEC_WINNT_AUTH_IDENTITY __MINGW_NAME_UAW ( SEC_WINNT_AUTH_IDENTITY )
#define SEC_WINNT_AUTH_IDENTITY_ANSI (1)
#define SEC_WINNT_AUTH_IDENTITY_UNICODE (2)
#define SEC_WRITECOMBINE (1073741824)
#define SEEK_CUR (1)
#define SEEK_END (2)
#define SEEK_SET (0)
#define SEE_MASK_ASYNCOK (1048576)
#define SEE_MASK_CLASSKEY (3)
#define SEE_MASK_CLASSNAME (1)
#define SEE_MASK_CONNECTNETDRV (128)
#define SEE_MASK_DEFAULT (0)
#define SEE_MASK_DOENVSUBST (512)
#define SEE_MASK_FLAG_DDEWAIT SEE_MASK_NOASYNC
#define SEE_MASK_FLAG_LOG_USAGE (67108864)
#define SEE_MASK_FLAG_NO_UI (1024)
#define SEE_MASK_HMONITOR (2097152)
#define SEE_MASK_HOTKEY (32)
#define SEE_MASK_ICON (16)
#define SEE_MASK_IDLIST (4)
#define SEE_MASK_INVOKEIDLIST (12)
#define SEE_MASK_NOASYNC (256)
#define SEE_MASK_NOCLOSEPROCESS (64)
#define SEE_MASK_NOQUERYCLASSSTORE (16777216)
#define SEE_MASK_NOZONECHECKS (8388608)
#define SEE_MASK_NO_CONSOLE (32768)
#define SEE_MASK_UNICODE (16384)
#define SEE_MASK_WAITFORINPUTIDLE (33554432)
#define SEF_AVOID_OWNER_CHECK (16)
#define SEF_AVOID_OWNER_RESTRICTION (4096)
#define SEF_AVOID_PRIVILEGE_CHECK (8)
#define SEF_DACL_AUTO_INHERIT (1)
#define SEF_DEFAULT_DESCRIPTOR_FOR_OBJECT (4)
#define SEF_DEFAULT_GROUP_FROM_PARENT (64)
#define SEF_DEFAULT_OWNER_FROM_PARENT (32)
#define SEF_MACL_NO_EXECUTE_UP (1024)
#define SEF_MACL_NO_READ_UP (512)
#define SEF_MACL_NO_WRITE_UP (256)
#define SEF_MACL_VALID_FLAGS (1792)
#define SEF_SACL_AUTO_INHERIT (2)
#define SELECTDIB (41)
#define SELECTPAPERSOURCE (18)
#define SELECT_CAP_CONVERSION (1)
#define SELECT_CAP_SENTENCE (2)
#define SEMAPHORE_ALL_ACCESS (2031619l)
#define SEMAPHORE_MODIFY_STATE (2)
#define SEM_FAILCRITICALERRORS (1)
#define SEM_NOALIGNMENTFAULTEXCEPT (4)
#define SEM_NOGPFAULTERRORBOX (2)
#define SEM_NOOPENFILEERRORBOX (32768)
#define SERIAL_IOC_FCR_DMA_MODE ( ( DWORD ) 0x00000008 )
#define SERIAL_IOC_FCR_FIFO_ENABLE ( ( DWORD ) 0x00000001 )
#define SERIAL_IOC_FCR_RCVR_RESET ( ( DWORD ) 0x00000002 )
#define SERIAL_IOC_FCR_RCVR_TRIGGER_LSB ( ( DWORD ) 0x00000040 )
#define SERIAL_IOC_FCR_RCVR_TRIGGER_MSB ( ( DWORD ) 0x00000080 )
#define SERIAL_IOC_FCR_RES1 ( ( DWORD ) 0x00000010 )
#define SERIAL_IOC_FCR_RES2 ( ( DWORD ) 0x00000020 )
#define SERIAL_IOC_FCR_XMIT_RESET ( ( DWORD ) 0x00000004 )
#define SERIAL_IOC_MCR_DTR ( ( DWORD ) 0x00000001 )
#define SERIAL_IOC_MCR_LOOP ( ( DWORD ) 0x00000010 )
#define SERIAL_IOC_MCR_OUT1 ( ( DWORD ) 0x00000004 )
#define SERIAL_IOC_MCR_OUT2 ( ( DWORD ) 0x00000008 )
#define SERIAL_IOC_MCR_RTS ( ( DWORD ) 0x00000002 )
#define SERIAL_LSRMST_ESCAPE ( ( BYTE ) 0x00 )
#define SERIAL_LSRMST_LSR_DATA ( ( BYTE ) 0x01 )
#define SERIAL_LSRMST_LSR_NODATA ( ( BYTE ) 0x02 )
#define SERIAL_LSRMST_MST ( ( BYTE ) 0x03 )
#define SERIAL_NUMBER_LENGTH (32)
#define SERKF_AVAILABLE (2)
#define SERKF_INDICATOR (4)
#define SERKF_SERIALKEYSON (1)
#define SERVER_ACCESS_ADMINISTER (1)
#define SERVER_ACCESS_ENUMERATE (2)
#define SERVER_ALL_ACCESS (983043l)
#define SERVER_EXECUTE (131074l)
#define SERVER_READ (131074l)
#define SERVER_WRITE (131075l)
#define SERVICES_ACTIVE_DATABASE __MINGW_NAME_AW ( SERVICES_ACTIVE_DATABASE )
#define SERVICES_ACTIVE_DATABASEA "ServicesActive"
#define SERVICES_ACTIVE_DATABASEW "ServicesActive"
#define SERVICES_FAILED_DATABASE __MINGW_NAME_AW ( SERVICES_FAILED_DATABASE )
#define SERVICES_FAILED_DATABASEA "ServicesFailed"
#define SERVICES_FAILED_DATABASEW "ServicesFailed"
#define SERVICE_ACCEPT_HARDWAREPROFILECHANGE (32)
#define SERVICE_ACCEPT_NETBINDCHANGE (16)
#define SERVICE_ACCEPT_PARAMCHANGE (8)
#define SERVICE_ACCEPT_PAUSE_CONTINUE (2)
#define SERVICE_ACCEPT_POWEREVENT (64)
#define SERVICE_ACCEPT_SESSIONCHANGE (128)
#define SERVICE_ACCEPT_SHUTDOWN (4)
#define SERVICE_ACCEPT_STOP (1)
#define SERVICE_ACTIVE (1)
#define SERVICE_ADAPTER (4)
#define SERVICE_ALL_ACCESS (983551l)
#define SERVICE_AUTO_START (2)
#define SERVICE_BOOT_START (0)
#define SERVICE_CHANGE_CONFIG (2)
#define SERVICE_CONFIG_DESCRIPTION (1)
#define SERVICE_CONFIG_FAILURE_ACTIONS (2)
#define SERVICE_CONTINUE_PENDING (5)
#define SERVICE_CONTROL_CONTINUE (3)
#define SERVICE_CONTROL_DEVICEEVENT (11)
#define SERVICE_CONTROL_HARDWAREPROFILECHANGE (12)
#define SERVICE_CONTROL_INTERROGATE (4)
#define SERVICE_CONTROL_NETBINDADD (7)
#define SERVICE_CONTROL_NETBINDDISABLE (10)
#define SERVICE_CONTROL_NETBINDENABLE (9)
#define SERVICE_CONTROL_NETBINDREMOVE (8)
#define SERVICE_CONTROL_PARAMCHANGE (6)
#define SERVICE_CONTROL_PAUSE (2)
#define SERVICE_CONTROL_POWEREVENT (13)
#define SERVICE_CONTROL_SESSIONCHANGE (14)
#define SERVICE_CONTROL_SHUTDOWN (5)
#define SERVICE_CONTROL_STOP (1)
#define SERVICE_DEMAND_START (3)
#define SERVICE_DISABLED (4)
#define SERVICE_DRIVER (11)
#define SERVICE_ENUMERATE_DEPENDENTS (8)
#define SERVICE_ERROR_CRITICAL (3)
#define SERVICE_ERROR_IGNORE (0)
#define SERVICE_ERROR_NORMAL (1)
#define SERVICE_ERROR_SEVERE (2)
#define SERVICE_FILE_SYSTEM_DRIVER (2)
#define SERVICE_INACTIVE (2)
#define SERVICE_INTERACTIVE_PROCESS (256)
#define SERVICE_INTERROGATE (128)
#define SERVICE_KERNEL_DRIVER (1)
#define SERVICE_NO_CHANGE (4294967295u)
#define SERVICE_PAUSED (7)
#define SERVICE_PAUSE_CONTINUE (64)
#define SERVICE_PAUSE_PENDING (6)
#define SERVICE_QUERY_CONFIG (1)
#define SERVICE_QUERY_STATUS (4)
#define SERVICE_RECOGNIZER_DRIVER (8)
#define SERVICE_RUNNING (4)
#define SERVICE_RUNS_IN_SYSTEM_PROCESS (1)
#define SERVICE_START (16)
#define SERVICE_START_PENDING (2)
#define SERVICE_STATE_ALL (3)
#define SERVICE_STOP (32)
#define SERVICE_STOPPED (1)
#define SERVICE_STOP_PENDING (3)
#define SERVICE_SYSTEM_START (1)
#define SERVICE_TYPE_ALL (319)
#define SERVICE_USER_DEFINED_CONTROL (256)
#define SERVICE_WIN32 (48)
#define SERVICE_WIN32_OWN_PROCESS (16)
#define SERVICE_WIN32_SHARE_PROCESS (32)
#define SESSION_ABORTED (6)
#define SESSION_ALL_ACCESS (983043l)
#define SESSION_ESTABLISHED (3)
#define SESSION_MODIFY_ACCESS (2)
#define SESSION_QUERY_ACCESS (1)
#define SETABORTPROC (9)
#define SETALLJUSTVALUES (771)
#define SETBREAK (8)
#define SETCHARSET (772)
#define SETCOLORTABLE (4)
#define SETCOPYCOUNT (17)
#define SETDIBSCALING (32)
#define SETDTR (5)
#define SETICMPROFILE_EMBEDED (1)
#define SETKERNTRACK (770)
#define SETLINECAP (21)
#define SETLINEJOIN (22)
#define SETMITERLIMIT (23)
#define SETRGBSTRING __MINGW_NAME_AW ( SETRGBSTRING )
#define SETRGBSTRINGA "commdlg_SetRGBColor"
#define SETRGBSTRINGW "commdlg_SetRGBColor"
#define SETRTS (3)
#define SETWALLPAPER_DEFAULT (-1)
#define SETXOFF (1)
#define SETXON (2)
#define SET_ARC_DIRECTION (4102)
#define SET_BACKGROUND_COLOR (4103)
#define SET_BOUNDS (4109)
#define SET_CLIP_BOX (4108)
#define SET_MIRROR_MODE (4110)
#define SET_POLY_MODE (4104)
#define SET_SCREEN_ANGLE (4105)
#define SET_SPREAD (4106)
#define SET_TAPE_DRIVE_INFORMATION (1)
#define SET_TAPE_MEDIA_INFORMATION (0)
#define SEVERITY_ERROR (1)
#define SEVERITY_SUCCESS (0)
#define SE_ASSIGNPRIMARYTOKEN_NAME TEXT ( "SeAssignPrimaryTokenPrivilege" )
#define SE_AUDIT_NAME TEXT ( "SeAuditPrivilege" )
#define SE_BACKUP_NAME TEXT ( "SeBackupPrivilege" )
#define SE_CHANGE_NOTIFY_NAME TEXT ( "SeChangeNotifyPrivilege" )
#define SE_CREATE_GLOBAL_NAME TEXT ( "SeCreateGlobalPrivilege" )
#define SE_CREATE_PAGEFILE_NAME TEXT ( "SeCreatePagefilePrivilege" )
#define SE_CREATE_PERMANENT_NAME TEXT ( "SeCreatePermanentPrivilege" )
#define SE_CREATE_SYMBOLIC_LINK_NAME TEXT ( "SeCreateSymbolicLinkPrivilege" )
#define SE_CREATE_TOKEN_NAME TEXT ( "SeCreateTokenPrivilege" )
#define SE_DACL_AUTO_INHERITED (1024)
#define SE_DACL_AUTO_INHERIT_REQ (256)
#define SE_DACL_DEFAULTED (8)
#define SE_DACL_PRESENT (4)
#define SE_DACL_PROTECTED (4096)
#define SE_DEBUG_NAME TEXT ( "SeDebugPrivilege" )
#define SE_ENABLE_DELEGATION_NAME TEXT ( "SeEnableDelegationPrivilege" )
#define SE_ERR_ACCESSDENIED (5)
#define SE_ERR_ASSOCINCOMPLETE (27)
#define SE_ERR_DDEBUSY (30)
#define SE_ERR_DDEFAIL (29)
#define SE_ERR_DDETIMEOUT (28)
#define SE_ERR_DLLNOTFOUND (32)
#define SE_ERR_FNF (2)
#define SE_ERR_NOASSOC (31)
#define SE_ERR_OOM (8)
#define SE_ERR_PNF (3)
#define SE_ERR_SHARE (26)
#define SE_GROUP_DEFAULTED (2)
#define SE_GROUP_ENABLED (4l)
#define SE_GROUP_ENABLED_BY_DEFAULT (2l)
#define SE_GROUP_INTEGRITY (32l)
#define SE_GROUP_INTEGRITY_ENABLED (64l)
#define SE_GROUP_LOGON_ID (-1073741824l)
#define SE_GROUP_MANDATORY (1l)
#define SE_GROUP_OWNER (8l)
#define SE_GROUP_RESOURCE (536870912l)
#define SE_GROUP_USE_FOR_DENY_ONLY (16l)
#define SE_GROUP_VALID_ATTRIBUTES (-536870785l)
#define SE_IMPERSONATE_NAME TEXT ( "SeImpersonatePrivilege" )
#define SE_INCREASE_QUOTA_NAME TEXT ( "SeIncreaseQuotaPrivilege" )
#define SE_INC_BASE_PRIORITY_NAME TEXT ( "SeIncreaseBasePriorityPrivilege" )
#define SE_INC_WORKING_SET_NAME TEXT ( "SeIncreaseWorkingSetPrivilege" )
#define SE_LEARNING_MODE_FLAG_PERMISSIVE (1)
#define SE_LOAD_DRIVER_NAME TEXT ( "SeLoadDriverPrivilege" )
#define SE_LOCK_MEMORY_NAME TEXT ( "SeLockMemoryPrivilege" )
#define SE_MACHINE_ACCOUNT_NAME TEXT ( "SeMachineAccountPrivilege" )
#define SE_MANAGE_VOLUME_NAME TEXT ( "SeManageVolumePrivilege" )
#define SE_OWNER_DEFAULTED (1)
#define SE_PRIVILEGE_ENABLED (2l)
#define SE_PRIVILEGE_ENABLED_BY_DEFAULT (1l)
#define SE_PRIVILEGE_REMOVED (4l)
#define SE_PRIVILEGE_USED_FOR_ACCESS (-2147483648l)
#define SE_PRIVILEGE_VALID_ATTRIBUTES (-2147483641l)
#define SE_PROF_SINGLE_PROCESS_NAME TEXT ( "SeProfileSingleProcessPrivilege" )
#define SE_RELABEL_NAME TEXT ( "SeRelabelPrivilege" )
#define SE_REMOTE_SHUTDOWN_NAME TEXT ( "SeRemoteShutdownPrivilege" )
#define SE_RESTORE_NAME TEXT ( "SeRestorePrivilege" )
#define SE_RM_CONTROL_VALID (16384)
#define SE_SACL_AUTO_INHERITED (2048)
#define SE_SACL_AUTO_INHERIT_REQ (512)
#define SE_SACL_DEFAULTED (32)
#define SE_SACL_PRESENT (16)
#define SE_SACL_PROTECTED (8192)
#define SE_SECURITY_DESCRIPTOR_FLAG_NO_LABEL_ACE (2)
#define SE_SECURITY_DESCRIPTOR_FLAG_NO_OWNER_ACE (1)
#define SE_SECURITY_DESCRIPTOR_VALID_FLAGS (3)
#define SE_SECURITY_NAME TEXT ( "SeSecurityPrivilege" )
#define SE_SELF_RELATIVE (32768)
#define SE_SHUTDOWN_NAME TEXT ( "SeShutdownPrivilege" )
#define SE_SYNC_AGENT_NAME TEXT ( "SeSyncAgentPrivilege" )
#define SE_SYSTEMTIME_NAME TEXT ( "SeSystemtimePrivilege" )
#define SE_SYSTEM_ENVIRONMENT_NAME TEXT ( "SeSystemEnvironmentPrivilege" )
#define SE_SYSTEM_PROFILE_NAME TEXT ( "SeSystemProfilePrivilege" )
#define SE_TAKE_OWNERSHIP_NAME TEXT ( "SeTakeOwnershipPrivilege" )
#define SE_TCB_NAME TEXT ( "SeTcbPrivilege" )
#define SE_TIME_ZONE_NAME TEXT ( "SeTimeZonePrivilege" )
#define SE_TRUSTED_CREDMAN_ACCESS_NAME TEXT ( "SeTrustedCredManAccessPrivilege" )
#define SE_UNDOCK_NAME TEXT ( "SeUndockPrivilege" )
#define SE_UNSOLICITED_INPUT_NAME TEXT ( "SeUnsolicitedInputPrivilege" )
#define SHADEBLENDCAPS (120)
#define SHAREVISTRING __MINGW_NAME_AW ( SHAREVISTRING )
#define SHAREVISTRINGA "commdlg_ShareViolation"
#define SHAREVISTRINGW "commdlg_ShareViolation"
#define SHDOCAPI DECLSPEC_IMPORT HRESULT STDAPICALLTYPE
#define SHDOCAPI_(type) DECLSPEC_IMPORT type STDAPICALLTYPE
#define SHERB_NOCONFIRMATION (1)
#define SHERB_NOPROGRESSUI (2)
#define SHERB_NOSOUND (4)
#define SHEmptyRecycleBin __MINGW_NAME_AW ( SHEmptyRecycleBin )
#define SHEnumerateUnreadMailAccounts __MINGW_NAME_AW ( SHEnumerateUnreadMailAccounts )
#define SHFILEINFO_DEFINED 
#define SHFileOperation __MINGW_NAME_AW ( SHFileOperation )
#define SHGFI_ADDOVERLAYS (32)
#define SHGFI_ATTRIBUTES (2048)
#define SHGFI_ATTR_SPECIFIED (131072)
#define SHGFI_DISPLAYNAME (512)
#define SHGFI_EXETYPE (8192)
#define SHGFI_ICON (256)
#define SHGFI_ICONLOCATION (4096)
#define SHGFI_LARGEICON (0)
#define SHGFI_LINKOVERLAY (32768)
#define SHGFI_OPENICON (2)
#define SHGFI_OVERLAYINDEX (64)
#define SHGFI_PIDL (8)
#define SHGFI_SELECTED (65536)
#define SHGFI_SHELLICONSIZE (4)
#define SHGFI_SMALLICON (1)
#define SHGFI_SYSICONINDEX (16384)
#define SHGFI_TYPENAME (1024)
#define SHGFI_USEFILEATTRIBUTES (16)
#define SHGNLI_NOLNK (8)
#define SHGNLI_NOLOCNAME (16)
#define SHGNLI_NOUNIQUE (4)
#define SHGNLI_PIDL (1)
#define SHGNLI_PREFIXNAME (2)
#define SHGetDiskFreeSpace SHGetDiskFreeSpaceEx
#define SHGetDiskFreeSpaceEx __MINGW_NAME_AW ( SHGetDiskFreeSpaceEx )
#define SHGetFileInfo __MINGW_NAME_AW ( SHGetFileInfo )
#define SHGetNewLinkInfo __MINGW_NAME_AW ( SHGetNewLinkInfo )
#define SHGetUnreadMailCount __MINGW_NAME_AW ( SHGetUnreadMailCount )
#define SHIFTJIS_CHARSET (128)
#define SHIFT_PRESSED (16)
#define SHIL_EXTRALARGE (2)
#define SHIL_LARGE (0)
#define SHIL_LAST SHIL_SYSSMALL
#define SHIL_SMALL (1)
#define SHIL_SYSSMALL (3)
#define SHInvokePrinterCommand __MINGW_NAME_AW ( SHInvokePrinterCommand )
#define SHOW_FULLSCREEN (3)
#define SHOW_ICONWINDOW (2)
#define SHOW_OPENNOACTIVATE (4)
#define SHOW_OPENWINDOW (1)
#define SHQueryRecycleBin __MINGW_NAME_AW ( SHQueryRecycleBin )
#define SHSTDAPI DECLSPEC_IMPORT HRESULT STDAPICALLTYPE
#define SHSTDAPI_(type) DECLSPEC_IMPORT type STDAPICALLTYPE
#define SHSetUnreadMailCount __MINGW_NAME_AW ( SHSetUnreadMailCount )
#define SHUTDOWN_NORETRY (1)
#define SID_DEFINED 
#define SID_HASH_SIZE (32)
#define SID_IDENTIFIER_AUTHORITY_DEFINED 
#define SID_MAX_SUB_AUTHORITIES (15)
#define SID_RECOMMENDED_SUB_AUTHORITIES (1)
#define SID_REVISION (1)
#define SIF_ALL (23)
#define SIF_DISABLENOSCROLL (8)
#define SIF_PAGE (2)
#define SIF_POS (4)
#define SIF_RANGE (1)
#define SIF_TRACKPOS (16)
#define SIMPLEBLOB (1)
#define SIMPLEREGION (2)
#define SIMULATED_FONTTYPE (32768)
#define SIOCATMARK _IOR ( 's' , 7 , u_long )
#define SIOCGHIWAT _IOR ( 's' , 1 , u_long )
#define SIOCGLOWAT _IOR ( 's' , 3 , u_long )
#define SIOCSHIWAT _IOW ( 's' , 0 , u_long )
#define SIOCSLOWAT _IOW ( 's' , 2 , u_long )
#define SIZEFULLSCREEN SIZE_MAXIMIZED
#define SIZEICONIC SIZE_MINIMIZED
#define SIZENORMAL SIZE_RESTORED
#define SIZEOF_RFPO_DATA (16)
#define SIZEPALETTE (104)
#define SIZEZOOMHIDE SIZE_MAXHIDE
#define SIZEZOOMSHOW SIZE_MAXSHOW
#define SIZE_MAXHIDE (4)
#define SIZE_MAXIMIZED (2)
#define SIZE_MAXSHOW (3)
#define SIZE_MINIMIZED (1)
#define SIZE_RESTORED (0)
#define SKF_AUDIBLEFEEDBACK (64)
#define SKF_AVAILABLE (2)
#define SKF_CONFIRMHOTKEY (8)
#define SKF_HOTKEYACTIVE (4)
#define SKF_HOTKEYSOUND (16)
#define SKF_INDICATOR (32)
#define SKF_LALTLATCHED (268435456)
#define SKF_LALTLOCKED (1048576)
#define SKF_LCTLLATCHED (67108864)
#define SKF_LCTLLOCKED (262144)
#define SKF_LSHIFTLATCHED (16777216)
#define SKF_LSHIFTLOCKED (65536)
#define SKF_LWINLATCHED (1073741824)
#define SKF_LWINLOCKED (4194304)
#define SKF_RALTLATCHED (536870912)
#define SKF_RALTLOCKED (2097152)
#define SKF_RCTLLATCHED (134217728)
#define SKF_RCTLLOCKED (524288)
#define SKF_RSHIFTLATCHED (33554432)
#define SKF_RSHIFTLOCKED (131072)
#define SKF_RWINLATCHED (2147483648u)
#define SKF_RWINLOCKED (8388608)
#define SKF_STICKYKEYSON (1)
#define SKF_TRISTATE (128)
#define SKF_TWOKEYSOFF (256)
#define SLE_ERROR (1)
#define SLE_MINORERROR (2)
#define SLE_WARNING (3)
#define SMART_ABORT_OFFLINE_SELFTEST (127)
#define SMART_CMD (176)
#define SMART_CYL_HI (194)
#define SMART_CYL_LOW (79)
#define SMART_ERROR_NO_MEM (7)
#define SMART_EXTENDED_SELFTEST_CAPTIVE (130)
#define SMART_EXTENDED_SELFTEST_OFFLINE (2)
#define SMART_GET_VERSION CTL_CODE ( IOCTL_DISK_BASE , 0x0020 , METHOD_BUFFERED , FILE_READ_ACCESS )
#define SMART_IDE_ERROR (1)
#define SMART_INVALID_BUFFER (4)
#define SMART_INVALID_COMMAND (3)
#define SMART_INVALID_DRIVE (5)
#define SMART_INVALID_FLAG (2)
#define SMART_INVALID_IOCTL (6)
#define SMART_INVALID_REGISTER (8)
#define SMART_LOG_SECTOR_SIZE (512)
#define SMART_NOT_SUPPORTED (9)
#define SMART_NO_ERROR (0)
#define SMART_NO_IDE_DEVICE (10)
#define SMART_OFFLINE_ROUTINE_OFFLINE (0)
#define SMART_RCV_DRIVE_DATA CTL_CODE ( IOCTL_DISK_BASE , 0x0022 , METHOD_BUFFERED , FILE_READ_ACCESS | FILE_WRITE_ACCESS )
#define SMART_READ_LOG (213)
#define SMART_SEND_DRIVE_COMMAND CTL_CODE ( IOCTL_DISK_BASE , 0x0021 , METHOD_BUFFERED , FILE_READ_ACCESS | FILE_WRITE_ACCESS )
#define SMART_SHORT_SELFTEST_CAPTIVE (129)
#define SMART_SHORT_SELFTEST_OFFLINE (1)
#define SMART_WRITE_LOG (214)
#define SMTO_ABORTIFHUNG (2)
#define SMTO_BLOCK (1)
#define SMTO_NORMAL (0)
#define SMTO_NOTIMEOUTIFNOTHUNG (8)
#define SM_ARRANGE (56)
#define SM_CARETBLINKINGENABLED (8194)
#define SM_CLEANBOOT (67)
#define SM_CMETRICS (97)
#define SM_CMONITORS (80)
#define SM_CMOUSEBUTTONS (43)
#define SM_CXBORDER (5)
#define SM_CXCURSOR (13)
#define SM_CXDLGFRAME (7)
#define SM_CXDOUBLECLK (36)
#define SM_CXDRAG (68)
#define SM_CXEDGE (45)
#define SM_CXFIXEDFRAME SM_CXDLGFRAME
#define SM_CXFOCUSBORDER (83)
#define SM_CXFRAME (32)
#define SM_CXFULLSCREEN (16)
#define SM_CXHSCROLL (21)
#define SM_CXHTHUMB (10)
#define SM_CXICON (11)
#define SM_CXICONSPACING (38)
#define SM_CXMAXIMIZED (61)
#define SM_CXMAXTRACK (59)
#define SM_CXMENUCHECK (71)
#define SM_CXMENUSIZE (54)
#define SM_CXMIN (28)
#define SM_CXMINIMIZED (57)
#define SM_CXMINSPACING (47)
#define SM_CXMINTRACK (34)
#define SM_CXSCREEN (0)
#define SM_CXSIZE (30)
#define SM_CXSIZEFRAME SM_CXFRAME
#define SM_CXSMICON (49)
#define SM_CXSMSIZE (52)
#define SM_CXVIRTUALSCREEN (78)
#define SM_CXVSCROLL (2)
#define SM_CYBORDER (6)
#define SM_CYCAPTION (4)
#define SM_CYCURSOR (14)
#define SM_CYDLGFRAME (8)
#define SM_CYDOUBLECLK (37)
#define SM_CYDRAG (69)
#define SM_CYEDGE (46)
#define SM_CYFIXEDFRAME SM_CYDLGFRAME
#define SM_CYFOCUSBORDER (84)
#define SM_CYFRAME (33)
#define SM_CYFULLSCREEN (17)
#define SM_CYHSCROLL (3)
#define SM_CYICON (12)
#define SM_CYICONSPACING (39)
#define SM_CYKANJIWINDOW (18)
#define SM_CYMAXIMIZED (62)
#define SM_CYMAXTRACK (60)
#define SM_CYMENU (15)
#define SM_CYMENUCHECK (72)
#define SM_CYMENUSIZE (55)
#define SM_CYMIN (29)
#define SM_CYMINIMIZED (58)
#define SM_CYMINSPACING (48)
#define SM_CYMINTRACK (35)
#define SM_CYSCREEN (1)
#define SM_CYSIZE (31)
#define SM_CYSIZEFRAME SM_CYFRAME
#define SM_CYSMCAPTION (51)
#define SM_CYSMICON (50)
#define SM_CYSMSIZE (53)
#define SM_CYVIRTUALSCREEN (79)
#define SM_CYVSCROLL (20)
#define SM_CYVTHUMB (9)
#define SM_DBCSENABLED (42)
#define SM_DEBUG (22)
#define SM_IMMENABLED (82)
#define SM_MEDIACENTER (87)
#define SM_MENUDROPALIGNMENT (40)
#define SM_MIDEASTENABLED (74)
#define SM_MOUSEPRESENT (19)
#define SM_MOUSEWHEELPRESENT (75)
#define SM_NETWORK (63)
#define SM_PENWINDOWS (41)
#define SM_REMOTECONTROL (8193)
#define SM_REMOTESESSION (4096)
#define SM_RESERVED1 (24)
#define SM_RESERVED2 (25)
#define SM_RESERVED3 (26)
#define SM_RESERVED4 (27)
#define SM_SAMEDISPLAYFORMAT (81)
#define SM_SECURE (44)
#define SM_SERVERR2 (89)
#define SM_SHOWSOUNDS (70)
#define SM_SHUTTINGDOWN (8192)
#define SM_SLOWMACHINE (73)
#define SM_STARTER (88)
#define SM_SWAPBUTTON (23)
#define SM_TABLETPC (86)
#define SM_XVIRTUALSCREEN (76)
#define SM_YVIRTUALSCREEN (77)
#define SNDMSG SendMessage
#define SND_ALIAS __MSABI_LONG ( 0x00010000 )
#define SND_ALIAS_ID __MSABI_LONG ( 0x00110000 )
#define SND_ALIAS_START (0)
#define SND_ALIAS_SYSTEMASTERISK sndAlias ( 'S' , '*' )
#define SND_ALIAS_SYSTEMDEFAULT sndAlias ( 'S' , 'D' )
#define SND_ALIAS_SYSTEMEXCLAMATION sndAlias ( 'S' , '!' )
#define SND_ALIAS_SYSTEMEXIT sndAlias ( 'S' , 'E' )
#define SND_ALIAS_SYSTEMHAND sndAlias ( 'S' , 'H' )
#define SND_ALIAS_SYSTEMQUESTION sndAlias ( 'S' , '?' )
#define SND_ALIAS_SYSTEMSTART sndAlias ( 'S' , 'S' )
#define SND_ALIAS_SYSTEMWELCOME sndAlias ( 'S' , 'W' )
#define SND_APPLICATION (128)
#define SND_ASYNC (1)
#define SND_FILENAME __MSABI_LONG ( 0x00020000 )
#define SND_LOOP (8)
#define SND_MEMORY (4)
#define SND_NODEFAULT (2)
#define SND_NOSTOP (16)
#define SND_NOWAIT __MSABI_LONG ( 0x00002000 )
#define SND_PURGE (64)
#define SND_RESOURCE __MSABI_LONG ( 0x00040004 )
#define SND_SYNC (0)
#define SOCKET_ERROR (-1)
#define SOCK_DGRAM (2)
#define SOCK_RAW (3)
#define SOCK_RDM (4)
#define SOCK_SEQPACKET (5)
#define SOCK_STREAM (1)
#define SOFTKEYBOARD_TYPE_C1 (2)
#define SOFTKEYBOARD_TYPE_T1 (1)
#define SOL_SOCKET (65535)
#define SOMAXCONN (5)
#define SORTED_CTL_EXT_COUNT_OFFSET (4)
#define SORTED_CTL_EXT_FLAGS_OFFSET (0)
#define SORTED_CTL_EXT_HASHED_SUBJECT_IDENTIFIER_FLAG (1)
#define SORTED_CTL_EXT_HASH_BUCKET_OFFSET (12)
#define SORTED_CTL_EXT_MAX_COLLISION_OFFSET (8)
#define SORTIDFROMLCID(lcid) ( ( WORD ) ( ( ( ( DWORD ) ( lcid ) ) >> 16 ) & 0xf ) )
#define SORTVERSIONFROMLCID(lcid) ( ( WORD ) ( ( ( ( DWORD ) ( lcid ) ) >> 20 ) & 0xf ) )
#define SORT_CHINESE_BIG5 (0)
#define SORT_CHINESE_BOPOMOFO (3)
#define SORT_CHINESE_PRC (2)
#define SORT_CHINESE_PRCP (0)
#define SORT_CHINESE_RADICALSTROKE (4)
#define SORT_CHINESE_UNICODE (1)
#define SORT_DEFAULT (0)
#define SORT_GEORGIAN_MODERN (1)
#define SORT_GEORGIAN_TRADITIONAL (0)
#define SORT_GERMAN_PHONE_BOOK (1)
#define SORT_HUNGARIAN_DEFAULT (0)
#define SORT_HUNGARIAN_TECHNICAL (1)
#define SORT_INVARIANT_MATH (1)
#define SORT_JAPANESE_RADICALSTROKE (4)
#define SORT_JAPANESE_UNICODE (1)
#define SORT_JAPANESE_XJIS (0)
#define SORT_KOREAN_KSC (0)
#define SORT_KOREAN_UNICODE (1)
#define SORT_STRINGSORT (4096)
#define SOUND_SYSTEM_APPEND (14)
#define SOUND_SYSTEM_APPSTART (12)
#define SOUND_SYSTEM_BEEP (3)
#define SOUND_SYSTEM_ERROR (4)
#define SOUND_SYSTEM_FAULT (13)
#define SOUND_SYSTEM_INFORMATION (7)
#define SOUND_SYSTEM_MAXIMIZE (8)
#define SOUND_SYSTEM_MENUCOMMAND (15)
#define SOUND_SYSTEM_MENUPOPUP (16)
#define SOUND_SYSTEM_MINIMIZE (9)
#define SOUND_SYSTEM_QUESTION (5)
#define SOUND_SYSTEM_RESTOREDOWN (11)
#define SOUND_SYSTEM_RESTOREUP (10)
#define SOUND_SYSTEM_SHUTDOWN (2)
#define SOUND_SYSTEM_STARTUP (1)
#define SOUND_SYSTEM_WARNING (6)
#define SO_ACCEPTCONN (2)
#define SO_BROADCAST (32)
#define SO_CONNDATA (28672)
#define SO_CONNDATALEN (28676)
#define SO_CONNECT_TIME (28684)
#define SO_CONNOPT (28673)
#define SO_CONNOPTLEN (28677)
#define SO_DEBUG (1)
#define SO_DISCDATA (28674)
#define SO_DISCDATALEN (28678)
#define SO_DISCOPT (28675)
#define SO_DISCOPTLEN (28679)
#define SO_DONTLINGER ( u_int ) ( ~ SO_LINGER )
#define SO_DONTROUTE (16)
#define SO_ERROR (4103)
#define SO_KEEPALIVE (8)
#define SO_LINGER (128)
#define SO_MAXDG (28681)
#define SO_MAXPATHDG (28682)
#define SO_OOBINLINE (256)
#define SO_OPENTYPE (28680)
#define SO_RCVBUF (4098)
#define SO_RCVLOWAT (4100)
#define SO_RCVTIMEO (4102)
#define SO_REUSEADDR (4)
#define SO_SNDBUF (4097)
#define SO_SNDLOWAT (4099)
#define SO_SNDTIMEO (4101)
#define SO_SYNCHRONOUS_ALERT (16)
#define SO_SYNCHRONOUS_NONALERT (32)
#define SO_TYPE (4104)
#define SO_UPDATE_ACCEPT_CONTEXT (28683)
#define SO_USELOOPBACK (64)
#define SPACEPARITY (4)
#define SPAPI_E_AUTHENTICODE_DISALLOWED _HRESULT_TYPEDEF_ ( 0x800F0240 )
#define SPAPI_E_AUTHENTICODE_PUBLISHER_NOT_TRUSTED _HRESULT_TYPEDEF_ ( 0x800F0243 )
#define SPAPI_E_AUTHENTICODE_TRUSTED_PUBLISHER _HRESULT_TYPEDEF_ ( 0x800F0241 )
#define SPAPI_E_AUTHENTICODE_TRUST_NOT_ESTABLISHED _HRESULT_TYPEDEF_ ( 0x800F0242 )
#define SPAPI_E_BAD_INTERFACE_INSTALLSECT _HRESULT_TYPEDEF_ ( 0x800F021D )
#define SPAPI_E_BAD_SECTION_NAME_LINE _HRESULT_TYPEDEF_ ( 0x800F0001 )
#define SPAPI_E_BAD_SERVICE_INSTALLSECT _HRESULT_TYPEDEF_ ( 0x800F0217 )
#define SPAPI_E_CANT_LOAD_CLASS_ICON _HRESULT_TYPEDEF_ ( 0x800F020C )
#define SPAPI_E_CANT_REMOVE_DEVINST _HRESULT_TYPEDEF_ ( 0x800F0232 )
#define SPAPI_E_CLASS_MISMATCH _HRESULT_TYPEDEF_ ( 0x800F0201 )
#define SPAPI_E_DEVICE_INTERFACE_ACTIVE _HRESULT_TYPEDEF_ ( 0x800F021B )
#define SPAPI_E_DEVICE_INTERFACE_REMOVED _HRESULT_TYPEDEF_ ( 0x800F021C )
#define SPAPI_E_DEVINFO_DATA_LOCKED _HRESULT_TYPEDEF_ ( 0x800F0213 )
#define SPAPI_E_DEVINFO_LIST_LOCKED _HRESULT_TYPEDEF_ ( 0x800F0212 )
#define SPAPI_E_DEVINFO_NOT_REGISTERED _HRESULT_TYPEDEF_ ( 0x800F0208 )
#define SPAPI_E_DEVINSTALL_QUEUE_NONNATIVE _HRESULT_TYPEDEF_ ( 0x800F0230 )
#define SPAPI_E_DEVINST_ALREADY_EXISTS _HRESULT_TYPEDEF_ ( 0x800F0207 )
#define SPAPI_E_DI_BAD_PATH _HRESULT_TYPEDEF_ ( 0x800F0214 )
#define SPAPI_E_DI_DONT_INSTALL _HRESULT_TYPEDEF_ ( 0x800F022B )
#define SPAPI_E_DI_DO_DEFAULT _HRESULT_TYPEDEF_ ( 0x800F020E )
#define SPAPI_E_DI_FUNCTION_OBSOLETE _HRESULT_TYPEDEF_ ( 0x800F023E )
#define SPAPI_E_DI_NOFILECOPY _HRESULT_TYPEDEF_ ( 0x800F020F )
#define SPAPI_E_DI_POSTPROCESSING_REQUIRED _HRESULT_TYPEDEF_ ( 0x800F0226 )
#define SPAPI_E_DRIVER_NONNATIVE _HRESULT_TYPEDEF_ ( 0x800F0234 )
#define SPAPI_E_DUPLICATE_FOUND _HRESULT_TYPEDEF_ ( 0x800F0202 )
#define SPAPI_E_ERROR_NOT_INSTALLED _HRESULT_TYPEDEF_ ( 0x800F1000 )
#define SPAPI_E_EXPECTED_SECTION_NAME _HRESULT_TYPEDEF_ ( 0x800F0000 )
#define SPAPI_E_FILEQUEUE_LOCKED _HRESULT_TYPEDEF_ ( 0x800F0216 )
#define SPAPI_E_GENERAL_SYNTAX _HRESULT_TYPEDEF_ ( 0x800F0003 )
#define SPAPI_E_INCORRECTLY_COPIED_INF _HRESULT_TYPEDEF_ ( 0x800F0237 )
#define SPAPI_E_INF_IN_USE_BY_DEVICES _HRESULT_TYPEDEF_ ( 0x800F023D )
#define SPAPI_E_INVALID_CLASS _HRESULT_TYPEDEF_ ( 0x800F0206 )
#define SPAPI_E_INVALID_CLASS_INSTALLER _HRESULT_TYPEDEF_ ( 0x800F020D )
#define SPAPI_E_INVALID_COINSTALLER _HRESULT_TYPEDEF_ ( 0x800F0227 )
#define SPAPI_E_INVALID_DEVINST_NAME _HRESULT_TYPEDEF_ ( 0x800F0205 )
#define SPAPI_E_INVALID_FILTER_DRIVER _HRESULT_TYPEDEF_ ( 0x800F022C )
#define SPAPI_E_INVALID_HWPROFILE _HRESULT_TYPEDEF_ ( 0x800F0210 )
#define SPAPI_E_INVALID_INF_LOGCONFIG _HRESULT_TYPEDEF_ ( 0x800F022A )
#define SPAPI_E_INVALID_MACHINENAME _HRESULT_TYPEDEF_ ( 0x800F0220 )
#define SPAPI_E_INVALID_PROPPAGE_PROVIDER _HRESULT_TYPEDEF_ ( 0x800F0224 )
#define SPAPI_E_INVALID_REFERENCE_STRING _HRESULT_TYPEDEF_ ( 0x800F021F )
#define SPAPI_E_INVALID_REG_PROPERTY _HRESULT_TYPEDEF_ ( 0x800F0209 )
#define SPAPI_E_INVALID_TARGET _HRESULT_TYPEDEF_ ( 0x800F0233 )
#define SPAPI_E_IN_WOW64 _HRESULT_TYPEDEF_ ( 0x800F0235 )
#define SPAPI_E_KEY_DOES_NOT_EXIST _HRESULT_TYPEDEF_ ( 0x800F0204 )
#define SPAPI_E_LINE_NOT_FOUND _HRESULT_TYPEDEF_ ( 0x800F0102 )
#define SPAPI_E_MACHINE_UNAVAILABLE _HRESULT_TYPEDEF_ ( 0x800F0222 )
#define SPAPI_E_NON_WINDOWS_DRIVER _HRESULT_TYPEDEF_ ( 0x800F022E )
#define SPAPI_E_NON_WINDOWS_NT_DRIVER _HRESULT_TYPEDEF_ ( 0x800F022D )
#define SPAPI_E_NOT_AN_INSTALLED_OEM_INF _HRESULT_TYPEDEF_ ( 0x800F023C )
#define SPAPI_E_NOT_DISABLEABLE _HRESULT_TYPEDEF_ ( 0x800F0231 )
#define SPAPI_E_NO_ASSOCIATED_CLASS _HRESULT_TYPEDEF_ ( 0x800F0200 )
#define SPAPI_E_NO_ASSOCIATED_SERVICE _HRESULT_TYPEDEF_ ( 0x800F0219 )
#define SPAPI_E_NO_AUTHENTICODE_CATALOG _HRESULT_TYPEDEF_ ( 0x800F023F )
#define SPAPI_E_NO_BACKUP _HRESULT_TYPEDEF_ ( 0x800F0103 )
#define SPAPI_E_NO_CATALOG_FOR_OEM_INF _HRESULT_TYPEDEF_ ( 0x800F022F )
#define SPAPI_E_NO_CLASSINSTALL_PARAMS _HRESULT_TYPEDEF_ ( 0x800F0215 )
#define SPAPI_E_NO_CLASS_DRIVER_LIST _HRESULT_TYPEDEF_ ( 0x800F0218 )
#define SPAPI_E_NO_COMPAT_DRIVERS _HRESULT_TYPEDEF_ ( 0x800F0228 )
#define SPAPI_E_NO_CONFIGMGR_SERVICES _HRESULT_TYPEDEF_ ( 0x800F0223 )
#define SPAPI_E_NO_DEFAULT_DEVICE_INTERFACE _HRESULT_TYPEDEF_ ( 0x800F021A )
#define SPAPI_E_NO_DEVICE_ICON _HRESULT_TYPEDEF_ ( 0x800F0229 )
#define SPAPI_E_NO_DEVICE_SELECTED _HRESULT_TYPEDEF_ ( 0x800F0211 )
#define SPAPI_E_NO_DRIVER_SELECTED _HRESULT_TYPEDEF_ ( 0x800F0203 )
#define SPAPI_E_NO_INF _HRESULT_TYPEDEF_ ( 0x800F020A )
#define SPAPI_E_NO_SUCH_DEVICE_INTERFACE _HRESULT_TYPEDEF_ ( 0x800F0225 )
#define SPAPI_E_NO_SUCH_DEVINST _HRESULT_TYPEDEF_ ( 0x800F020B )
#define SPAPI_E_NO_SUCH_INTERFACE_CLASS _HRESULT_TYPEDEF_ ( 0x800F021E )
#define SPAPI_E_ONLY_VALIDATE_VIA_AUTHENTICODE _HRESULT_TYPEDEF_ ( 0x800F0245 )
#define SPAPI_E_PNP_REGISTRY_ERROR _HRESULT_TYPEDEF_ ( 0x800F023A )
#define SPAPI_E_REMOTE_COMM_FAILURE _HRESULT_TYPEDEF_ ( 0x800F0221 )
#define SPAPI_E_REMOTE_REQUEST_UNSUPPORTED _HRESULT_TYPEDEF_ ( 0x800F023B )
#define SPAPI_E_SCE_DISABLED _HRESULT_TYPEDEF_ ( 0x800F0238 )
#define SPAPI_E_SECTION_NAME_TOO_LONG _HRESULT_TYPEDEF_ ( 0x800F0002 )
#define SPAPI_E_SECTION_NOT_FOUND _HRESULT_TYPEDEF_ ( 0x800F0101 )
#define SPAPI_E_SET_SYSTEM_RESTORE_POINT _HRESULT_TYPEDEF_ ( 0x800F0236 )
#define SPAPI_E_SIGNATURE_OSATTRIBUTE_MISMATCH _HRESULT_TYPEDEF_ ( 0x800F0244 )
#define SPAPI_E_UNKNOWN_EXCEPTION _HRESULT_TYPEDEF_ ( 0x800F0239 )
#define SPAPI_E_UNRECOVERABLE_STACK_OVERFLOW _HRESULT_TYPEDEF_ ( 0x800F0300 )
#define SPAPI_E_WRONG_INF_STYLE _HRESULT_TYPEDEF_ ( 0x800F0100 )
#define SPCLPASSTHROUGH2 (4568)
#define SPECIFIC_RIGHTS_ALL (65535l)
#define SPIF_SENDCHANGE SPIF_SENDWININICHANGE
#define SPIF_SENDWININICHANGE (2)
#define SPIF_UPDATEINIFILE (1)
#define SPI_GETACCESSTIMEOUT (60)
#define SPI_GETACTIVEWINDOWTRACKING (4096)
#define SPI_GETACTIVEWNDTRKTIMEOUT (8194)
#define SPI_GETACTIVEWNDTRKZORDER (4108)
#define SPI_GETANIMATION (72)
#define SPI_GETBEEP (1)
#define SPI_GETBLOCKSENDINPUTRESETS (4134)
#define SPI_GETBORDER (5)
#define SPI_GETCARETWIDTH (8198)
#define SPI_GETCOMBOBOXANIMATION (4100)
#define SPI_GETCURSORSHADOW (4122)
#define SPI_GETDEFAULTINPUTLANG (89)
#define SPI_GETDESKWALLPAPER (115)
#define SPI_GETDRAGFULLWINDOWS (38)
#define SPI_GETDROPSHADOW (4132)
#define SPI_GETFASTTASKSWITCH (35)
#define SPI_GETFILTERKEYS (50)
#define SPI_GETFLATMENU (4130)
#define SPI_GETFOCUSBORDERHEIGHT (8208)
#define SPI_GETFOCUSBORDERWIDTH (8206)
#define SPI_GETFONTSMOOTHING (74)
#define SPI_GETFONTSMOOTHINGCONTRAST (8204)
#define SPI_GETFONTSMOOTHINGORIENTATION (8210)
#define SPI_GETFONTSMOOTHINGTYPE (8202)
#define SPI_GETFOREGROUNDFLASHCOUNT (8196)
#define SPI_GETFOREGROUNDLOCKTIMEOUT (8192)
#define SPI_GETGRADIENTCAPTIONS (4104)
#define SPI_GETGRIDGRANULARITY (18)
#define SPI_GETHIGHCONTRAST (66)
#define SPI_GETHOTTRACKING (4110)
#define SPI_GETICONMETRICS (45)
#define SPI_GETICONTITLELOGFONT (31)
#define SPI_GETICONTITLEWRAP (25)
#define SPI_GETKEYBOARDCUES (4106)
#define SPI_GETKEYBOARDDELAY (22)
#define SPI_GETKEYBOARDPREF (68)
#define SPI_GETKEYBOARDSPEED (10)
#define SPI_GETLISTBOXSMOOTHSCROLLING (4102)
#define SPI_GETLOWPOWERACTIVE (83)
#define SPI_GETLOWPOWERTIMEOUT (79)
#define SPI_GETMENUANIMATION (4098)
#define SPI_GETMENUDROPALIGNMENT (27)
#define SPI_GETMENUFADE (4114)
#define SPI_GETMENUSHOWDELAY (106)
#define SPI_GETMENUUNDERLINES SPI_GETKEYBOARDCUES
#define SPI_GETMINIMIZEDMETRICS (43)
#define SPI_GETMOUSE (3)
#define SPI_GETMOUSECLICKLOCK (4126)
#define SPI_GETMOUSECLICKLOCKTIME (8200)
#define SPI_GETMOUSEHOVERHEIGHT (100)
#define SPI_GETMOUSEHOVERTIME (102)
#define SPI_GETMOUSEHOVERWIDTH (98)
#define SPI_GETMOUSEKEYS (54)
#define SPI_GETMOUSESONAR (4124)
#define SPI_GETMOUSESPEED (112)
#define SPI_GETMOUSETRAILS (94)
#define SPI_GETMOUSEVANISH (4128)
#define SPI_GETNONCLIENTMETRICS (41)
#define SPI_GETPOWEROFFACTIVE (84)
#define SPI_GETPOWEROFFTIMEOUT (80)
#define SPI_GETSCREENREADER (70)
#define SPI_GETSCREENSAVEACTIVE (16)
#define SPI_GETSCREENSAVERRUNNING (114)
#define SPI_GETSCREENSAVETIMEOUT (14)
#define SPI_GETSELECTIONFADE (4116)
#define SPI_GETSERIALKEYS (62)
#define SPI_GETSHOWIMEUI (110)
#define SPI_GETSHOWSOUNDS (56)
#define SPI_GETSNAPTODEFBUTTON (95)
#define SPI_GETSOUNDSENTRY (64)
#define SPI_GETSTICKYKEYS (58)
#define SPI_GETTOGGLEKEYS (52)
#define SPI_GETTOOLTIPANIMATION (4118)
#define SPI_GETTOOLTIPFADE (4120)
#define SPI_GETUIEFFECTS (4158)
#define SPI_GETWHEELSCROLLLINES (104)
#define SPI_GETWINDOWSEXTENSION (92)
#define SPI_GETWORKAREA (48)
#define SPI_ICONHORIZONTALSPACING (13)
#define SPI_ICONVERTICALSPACING (24)
#define SPI_LANGDRIVER (12)
#define SPI_SCREENSAVERRUNNING SPI_SETSCREENSAVERRUNNING
#define SPI_SETACCESSTIMEOUT (61)
#define SPI_SETACTIVEWINDOWTRACKING (4097)
#define SPI_SETACTIVEWNDTRKTIMEOUT (8195)
#define SPI_SETACTIVEWNDTRKZORDER (4109)
#define SPI_SETANIMATION (73)
#define SPI_SETBEEP (2)
#define SPI_SETBLOCKSENDINPUTRESETS (4135)
#define SPI_SETBORDER (6)
#define SPI_SETCARETWIDTH (8199)
#define SPI_SETCOMBOBOXANIMATION (4101)
#define SPI_SETCURSORS (87)
#define SPI_SETCURSORSHADOW (4123)
#define SPI_SETDEFAULTINPUTLANG (90)
#define SPI_SETDESKPATTERN (21)
#define SPI_SETDESKWALLPAPER (20)
#define SPI_SETDOUBLECLICKTIME (32)
#define SPI_SETDOUBLECLKHEIGHT (30)
#define SPI_SETDOUBLECLKWIDTH (29)
#define SPI_SETDRAGFULLWINDOWS (37)
#define SPI_SETDRAGHEIGHT (77)
#define SPI_SETDRAGWIDTH (76)
#define SPI_SETDROPSHADOW (4133)
#define SPI_SETFASTTASKSWITCH (36)
#define SPI_SETFILTERKEYS (51)
#define SPI_SETFLATMENU (4131)
#define SPI_SETFOCUSBORDERHEIGHT (8209)
#define SPI_SETFOCUSBORDERWIDTH (8207)
#define SPI_SETFONTSMOOTHING (75)
#define SPI_SETFONTSMOOTHINGCONTRAST (8205)
#define SPI_SETFONTSMOOTHINGORIENTATION (8211)
#define SPI_SETFONTSMOOTHINGTYPE (8203)
#define SPI_SETFOREGROUNDFLASHCOUNT (8197)
#define SPI_SETFOREGROUNDLOCKTIMEOUT (8193)
#define SPI_SETGRADIENTCAPTIONS (4105)
#define SPI_SETGRIDGRANULARITY (19)
#define SPI_SETHANDHELD (78)
#define SPI_SETHIGHCONTRAST (67)
#define SPI_SETHOTTRACKING (4111)
#define SPI_SETICONMETRICS (46)
#define SPI_SETICONS (88)
#define SPI_SETICONTITLELOGFONT (34)
#define SPI_SETICONTITLEWRAP (26)
#define SPI_SETKEYBOARDCUES (4107)
#define SPI_SETKEYBOARDDELAY (23)
#define SPI_SETKEYBOARDPREF (69)
#define SPI_SETKEYBOARDSPEED (11)
#define SPI_SETLANGTOGGLE (91)
#define SPI_SETLISTBOXSMOOTHSCROLLING (4103)
#define SPI_SETLOWPOWERACTIVE (85)
#define SPI_SETLOWPOWERTIMEOUT (81)
#define SPI_SETMENUANIMATION (4099)
#define SPI_SETMENUDROPALIGNMENT (28)
#define SPI_SETMENUFADE (4115)
#define SPI_SETMENUSHOWDELAY (107)
#define SPI_SETMENUUNDERLINES SPI_SETKEYBOARDCUES
#define SPI_SETMINIMIZEDMETRICS (44)
#define SPI_SETMOUSE (4)
#define SPI_SETMOUSEBUTTONSWAP (33)
#define SPI_SETMOUSECLICKLOCK (4127)
#define SPI_SETMOUSECLICKLOCKTIME (8201)
#define SPI_SETMOUSEHOVERHEIGHT (101)
#define SPI_SETMOUSEHOVERTIME (103)
#define SPI_SETMOUSEHOVERWIDTH (99)
#define SPI_SETMOUSEKEYS (55)
#define SPI_SETMOUSESONAR (4125)
#define SPI_SETMOUSESPEED (113)
#define SPI_SETMOUSETRAILS (93)
#define SPI_SETMOUSEVANISH (4129)
#define SPI_SETNONCLIENTMETRICS (42)
#define SPI_SETPENWINDOWS (49)
#define SPI_SETPOWEROFFACTIVE (86)
#define SPI_SETPOWEROFFTIMEOUT (82)
#define SPI_SETSCREENREADER (71)
#define SPI_SETSCREENSAVEACTIVE (17)
#define SPI_SETSCREENSAVERRUNNING (97)
#define SPI_SETSCREENSAVETIMEOUT (15)
#define SPI_SETSELECTIONFADE (4117)
#define SPI_SETSERIALKEYS (63)
#define SPI_SETSHOWIMEUI (111)
#define SPI_SETSHOWSOUNDS (57)
#define SPI_SETSNAPTODEFBUTTON (96)
#define SPI_SETSOUNDSENTRY (65)
#define SPI_SETSTICKYKEYS (59)
#define SPI_SETTOGGLEKEYS (53)
#define SPI_SETTOOLTIPANIMATION (4119)
#define SPI_SETTOOLTIPFADE (4121)
#define SPI_SETUIEFFECTS (4159)
#define SPI_SETWHEELSCROLLLINES (105)
#define SPI_SETWORKAREA (47)
#define SPLDS_ASSET_NUMBER TEXT ( "assetNumber" )
#define SPLDS_BYTES_PER_MINUTE TEXT ( "bytesPerMinute" )
#define SPLDS_DESCRIPTION TEXT ( "description" )
#define SPLDS_DRIVER_KEY TEXT ( "DsDriver" )
#define SPLDS_DRIVER_NAME TEXT ( "driverName" )
#define SPLDS_DRIVER_VERSION TEXT ( "driverVersion" )
#define SPLDS_FLAGS TEXT ( "flags" )
#define SPLDS_LOCATION TEXT ( "location" )
#define SPLDS_PORT_NAME TEXT ( "portName" )
#define SPLDS_PRINTER_CLASS TEXT ( "printQueue" )
#define SPLDS_PRINTER_LOCATIONS TEXT ( "printerLocations" )
#define SPLDS_PRINTER_MODEL TEXT ( "printerModel" )
#define SPLDS_PRINTER_NAME TEXT ( "printerName" )
#define SPLDS_PRINTER_NAME_ALIASES TEXT ( "printerNameAliases" )
#define SPLDS_PRINT_ATTRIBUTES TEXT ( "printAttributes" )
#define SPLDS_PRINT_BIN_NAMES TEXT ( "printBinNames" )
#define SPLDS_PRINT_COLLATE TEXT ( "printCollate" )
#define SPLDS_PRINT_COLOR TEXT ( "printColor" )
#define SPLDS_PRINT_DUPLEX_SUPPORTED TEXT ( "printDuplexSupported" )
#define SPLDS_PRINT_END_TIME TEXT ( "printEndTime" )
#define SPLDS_PRINT_KEEP_PRINTED_JOBS TEXT ( "printKeepPrintedJobs" )
#define SPLDS_PRINT_LANGUAGE TEXT ( "printLanguage" )
#define SPLDS_PRINT_MAC_ADDRESS TEXT ( "printMACAddress" )
#define SPLDS_PRINT_MAX_RESOLUTION_SUPPORTED TEXT ( "printMaxResolutionSupported" )
#define SPLDS_PRINT_MAX_X_EXTENT TEXT ( "printMaxXExtent" )
#define SPLDS_PRINT_MAX_Y_EXTENT TEXT ( "printMaxYExtent" )
#define SPLDS_PRINT_MEDIA_READY TEXT ( "printMediaReady" )
#define SPLDS_PRINT_MEDIA_SUPPORTED TEXT ( "printMediaSupported" )
#define SPLDS_PRINT_MEMORY TEXT ( "printMemory" )
#define SPLDS_PRINT_MIN_X_EXTENT TEXT ( "printMinXExtent" )
#define SPLDS_PRINT_MIN_Y_EXTENT TEXT ( "printMinYExtent" )
#define SPLDS_PRINT_NETWORK_ADDRESS TEXT ( "printNetworkAddress" )
#define SPLDS_PRINT_NOTIFY TEXT ( "printNotify" )
#define SPLDS_PRINT_NUMBER_UP TEXT ( "printNumberUp" )
#define SPLDS_PRINT_ORIENTATIONS_SUPPORTED TEXT ( "printOrientationsSupported" )
#define SPLDS_PRINT_OWNER TEXT ( "printOwner" )
#define SPLDS_PRINT_PAGES_PER_MINUTE TEXT ( "printPagesPerMinute" )
#define SPLDS_PRINT_RATE TEXT ( "printRate" )
#define SPLDS_PRINT_RATE_UNIT TEXT ( "printRateUnit" )
#define SPLDS_PRINT_SEPARATOR_FILE TEXT ( "printSeparatorFile" )
#define SPLDS_PRINT_SHARE_NAME TEXT ( "printShareName" )
#define SPLDS_PRINT_SPOOLING TEXT ( "printSpooling" )
#define SPLDS_PRINT_STAPLING_SUPPORTED TEXT ( "printStaplingSupported" )
#define SPLDS_PRINT_START_TIME TEXT ( "printStartTime" )
#define SPLDS_PRINT_STATUS TEXT ( "printStatus" )
#define SPLDS_PRIORITY TEXT ( "priority" )
#define SPLDS_SERVER_NAME TEXT ( "serverName" )
#define SPLDS_SHORT_SERVER_NAME TEXT ( "shortServerName" )
#define SPLDS_SPOOLER_KEY TEXT ( "DsSpooler" )
#define SPLDS_UNC_NAME TEXT ( "uNCName" )
#define SPLDS_URL TEXT ( "url" )
#define SPLDS_USER_KEY TEXT ( "DsUser" )
#define SPLDS_VERSION_NUMBER TEXT ( "versionNumber" )
#define SPLREG_ALLOW_USER_MANAGEFORMS TEXT ( "AllowUserManageForms" )
#define SPLREG_ARCHITECTURE TEXT ( "Architecture" )
#define SPLREG_BEEP_ENABLED TEXT ( "BeepEnabled" )
#define SPLREG_DEFAULT_SPOOL_DIRECTORY TEXT ( "DefaultSpoolDirectory" )
#define SPLREG_DNS_MACHINE_NAME TEXT ( "DNSMachineName" )
#define SPLREG_DS_PRESENT TEXT ( "DsPresent" )
#define SPLREG_DS_PRESENT_FOR_USER TEXT ( "DsPresentForUser" )
#define SPLREG_EVENT_LOG TEXT ( "EventLog" )
#define SPLREG_MAJOR_VERSION TEXT ( "MajorVersion" )
#define SPLREG_MINOR_VERSION TEXT ( "MinorVersion" )
#define SPLREG_NET_POPUP TEXT ( "NetPopup" )
#define SPLREG_NET_POPUP_TO_COMPUTER TEXT ( "NetPopupToComputer" )
#define SPLREG_OS_VERSION TEXT ( "OSVersion" )
#define SPLREG_OS_VERSIONEX TEXT ( "OSVersionEx" )
#define SPLREG_PORT_THREAD_PRIORITY TEXT ( "PortThreadPriority" )
#define SPLREG_PORT_THREAD_PRIORITY_DEFAULT TEXT ( "PortThreadPriorityDefault" )
#define SPLREG_REMOTE_FAX TEXT ( "RemoteFax" )
#define SPLREG_RESTART_JOB_ON_POOL_ENABLED TEXT ( "RestartJobOnPoolEnabled" )
#define SPLREG_RESTART_JOB_ON_POOL_ERROR TEXT ( "RestartJobOnPoolError" )
#define SPLREG_RETRY_POPUP TEXT ( "RetryPopup" )
#define SPLREG_SCHEDULER_THREAD_PRIORITY TEXT ( "SchedulerThreadPriority" )
#define SPLREG_SCHEDULER_THREAD_PRIORITY_DEFAULT TEXT ( "SchedulerThreadPriorityDefault" )
#define SPLREG_WEBSHAREMGMT TEXT ( "WebShareMgmt" )
#define SPOINTER_32 POINTER_SIGNED POINTER_32
#define SPOOL_FILE_PERSISTENT (1)
#define SPOOL_FILE_TEMPORARY (2)
#define SP_APPABORT (-2)
#define SP_BAUD ( ( DWORD ) 0x2 )
#define SP_DATABITS ( ( DWORD ) 0x4 )
#define SP_ERROR (-1)
#define SP_HANDSHAKING ( ( DWORD ) 0x10 )
#define SP_NOTREPORTED (16384)
#define SP_OUTOFDISK (-4)
#define SP_OUTOFMEMORY (-5)
#define SP_PARITY ( ( DWORD ) 0x1 )
#define SP_PARITY_CHECK ( ( DWORD ) 0x20 )
#define SP_RLSD ( ( DWORD ) 0x40 )
#define SP_SERIALCOMM ( ( DWORD ) 0x1 )
#define SP_STOPBITS ( ( DWORD ) 0x8 )
#define SP_USERABORT (-3)
#define SRCAND ( DWORD ) 0x008800C6
#define SRCCOPY ( DWORD ) 0x00CC0020
#define SRCERASE ( DWORD ) 0x00440328
#define SRCINVERT ( DWORD ) 0x00660046
#define SRCPAINT ( DWORD ) 0x00EE0086
#define SRWLOCK_INIT RTL_SRWLOCK_INIT
#define SSF_AVAILABLE (2)
#define SSF_INDICATOR (4)
#define SSF_SOUNDSENTRYON (1)
#define SSGF_DISPLAY (3)
#define SSGF_NONE (0)
#define SSTF_BORDER (2)
#define SSTF_CHARS (1)
#define SSTF_DISPLAY (3)
#define SSTF_NONE (0)
#define SSWF_CUSTOM (4)
#define SSWF_DISPLAY (3)
#define SSWF_NONE (0)
#define SSWF_TITLE (1)
#define SSWF_WINDOW (2)
#define SS_BITMAP __MSABI_LONG ( 0x0000000E )
#define SS_BLACKFRAME __MSABI_LONG ( 0x00000007 )
#define SS_BLACKRECT __MSABI_LONG ( 0x00000004 )
#define SS_CENTER __MSABI_LONG ( 0x00000001 )
#define SS_CENTERIMAGE __MSABI_LONG ( 0x00000200 )
#define SS_EDITCONTROL __MSABI_LONG ( 0x00002000 )
#define SS_ELLIPSISMASK __MSABI_LONG ( 0x0000C000 )
#define SS_ENDELLIPSIS __MSABI_LONG ( 0x00004000 )
#define SS_ENHMETAFILE __MSABI_LONG ( 0x0000000F )
#define SS_ETCHEDFRAME __MSABI_LONG ( 0x00000012 )
#define SS_ETCHEDHORZ __MSABI_LONG ( 0x00000010 )
#define SS_ETCHEDVERT __MSABI_LONG ( 0x00000011 )
#define SS_GRAYFRAME __MSABI_LONG ( 0x00000008 )
#define SS_GRAYRECT __MSABI_LONG ( 0x00000005 )
#define SS_ICON __MSABI_LONG ( 0x00000003 )
#define SS_LEFT __MSABI_LONG ( 0x00000000 )
#define SS_LEFTNOWORDWRAP __MSABI_LONG ( 0x0000000C )
#define SS_NOPREFIX __MSABI_LONG ( 0x00000080 )
#define SS_NOTIFY __MSABI_LONG ( 0x00000100 )
#define SS_OWNERDRAW __MSABI_LONG ( 0x0000000D )
#define SS_PATHELLIPSIS __MSABI_LONG ( 0x00008000 )
#define SS_REALSIZECONTROL __MSABI_LONG ( 0x00000040 )
#define SS_REALSIZEIMAGE __MSABI_LONG ( 0x00000800 )
#define SS_RIGHT __MSABI_LONG ( 0x00000002 )
#define SS_RIGHTJUST __MSABI_LONG ( 0x00000400 )
#define SS_SIMPLE __MSABI_LONG ( 0x0000000B )
#define SS_SUNKEN __MSABI_LONG ( 0x00001000 )
#define SS_TYPEMASK __MSABI_LONG ( 0x0000001F )
#define SS_USERITEM __MSABI_LONG ( 0x0000000A )
#define SS_WHITEFRAME __MSABI_LONG ( 0x00000009 )
#define SS_WHITERECT __MSABI_LONG ( 0x00000006 )
#define SS_WORDELLIPSIS __MSABI_LONG ( 0x0000C000 )
#define STACK_SIZE_PARAM_IS_A_RESERVATION (65536)
#define STAMP_AXESLIST (134245473)
#define STAMP_DESIGNVECTOR (134248036)
#define STANDARD_RIGHTS_ALL (2031616l)
#define STANDARD_RIGHTS_EXECUTE (131072l)
#define STANDARD_RIGHTS_READ (131072l)
#define STANDARD_RIGHTS_REQUIRED (983040l)
#define STANDARD_RIGHTS_WRITE (131072l)
#define STARTDOC (10)
#define STARTF_FORCEOFFFEEDBACK (128)
#define STARTF_FORCEONFEEDBACK (64)
#define STARTF_PREVENTPINNING (8192)
#define STARTF_RUNFULLSCREEN (32)
#define STARTF_TITLEISAPPID (4096)
#define STARTF_TITLEISLINKNAME (2048)
#define STARTF_USECOUNTCHARS (8)
#define STARTF_USEFILLATTRIBUTE (16)
#define STARTF_USEHOTKEY (512)
#define STARTF_USEPOSITION (4)
#define STARTF_USESHOWWINDOW (1)
#define STARTF_USESIZE (2)
#define STARTF_USESTDHANDLES (256)
#define START_PAGE_GENERAL (4294967295u)
#define STATE_SYSTEM_ALERT_HIGH (268435456)
#define STATE_SYSTEM_ALERT_LOW (67108864)
#define STATE_SYSTEM_ALERT_MEDIUM (134217728)
#define STATE_SYSTEM_ANIMATED (16384)
#define STATE_SYSTEM_BUSY (2048)
#define STATE_SYSTEM_CHECKED (16)
#define STATE_SYSTEM_COLLAPSED (1024)
#define STATE_SYSTEM_DEFAULT (256)
#define STATE_SYSTEM_EXPANDED (512)
#define STATE_SYSTEM_EXTSELECTABLE (33554432)
#define STATE_SYSTEM_FLOATING (4096)
#define STATE_SYSTEM_FOCUSABLE (1048576)
#define STATE_SYSTEM_FOCUSED (4)
#define STATE_SYSTEM_HOTTRACKED (128)
#define STATE_SYSTEM_INDETERMINATE STATE_SYSTEM_MIXED
#define STATE_SYSTEM_INVISIBLE (32768)
#define STATE_SYSTEM_LINKED (4194304)
#define STATE_SYSTEM_MARQUEED (8192)
#define STATE_SYSTEM_MIXED (32)
#define STATE_SYSTEM_MOVEABLE (262144)
#define STATE_SYSTEM_MULTISELECTABLE (16777216)
#define STATE_SYSTEM_OFFSCREEN (65536)
#define STATE_SYSTEM_PRESSED (8)
#define STATE_SYSTEM_PROTECTED (536870912)
#define STATE_SYSTEM_READONLY (64)
#define STATE_SYSTEM_SELECTABLE (2097152)
#define STATE_SYSTEM_SELECTED (2)
#define STATE_SYSTEM_SELFVOICING (524288)
#define STATE_SYSTEM_SIZEABLE (131072)
#define STATE_SYSTEM_TRAVERSED (8388608)
#define STATE_SYSTEM_UNAVAILABLE (1)
#define STATE_SYSTEM_VALID (1073741823)
#define STATUS_ABANDONED_WAIT_0 ( ( DWORD ) 0x00000080 )
#define STATUS_ACCESS_VIOLATION ( ( DWORD ) 0xC0000005 )
#define STATUS_ARRAY_BOUNDS_EXCEEDED ( ( DWORD ) 0xC000008C )
#define STATUS_ASSERTION_FAILURE ( ( DWORD ) 0xC0000420 )
#define STATUS_BREAKPOINT ( ( DWORD ) 0x80000003 )
#define STATUS_CONTROL_C_EXIT ( ( DWORD ) 0xC000013A )
#define STATUS_DATATYPE_MISALIGNMENT ( ( DWORD ) 0x80000002 )
#define STATUS_DLL_INIT_FAILED ( ( DWORD ) 0xC0000142 )
#define STATUS_DLL_NOT_FOUND ( ( DWORD ) 0xC0000135 )
#define STATUS_ENTRYPOINT_NOT_FOUND ( ( DWORD ) 0xC0000139 )
#define STATUS_FATAL_APP_EXIT ( ( DWORD ) 0x40000015 )
#define STATUS_FLOAT_DENORMAL_OPERAND ( ( DWORD ) 0xC000008D )
#define STATUS_FLOAT_DIVIDE_BY_ZERO ( ( DWORD ) 0xC000008E )
#define STATUS_FLOAT_INEXACT_RESULT ( ( DWORD ) 0xC000008F )
#define STATUS_FLOAT_INVALID_OPERATION ( ( DWORD ) 0xC0000090 )
#define STATUS_FLOAT_MULTIPLE_FAULTS ( ( DWORD ) 0xC00002B4 )
#define STATUS_FLOAT_MULTIPLE_TRAPS ( ( DWORD ) 0xC00002B5 )
#define STATUS_FLOAT_OVERFLOW ( ( DWORD ) 0xC0000091 )
#define STATUS_FLOAT_STACK_CHECK ( ( DWORD ) 0xC0000092 )
#define STATUS_FLOAT_UNDERFLOW ( ( DWORD ) 0xC0000093 )
#define STATUS_GUARD_PAGE_VIOLATION ( ( DWORD ) 0x80000001 )
#define STATUS_ILLEGAL_INSTRUCTION ( ( DWORD ) 0xC000001D )
#define STATUS_INTEGER_DIVIDE_BY_ZERO ( ( DWORD ) 0xC0000094 )
#define STATUS_INTEGER_OVERFLOW ( ( DWORD ) 0xC0000095 )
#define STATUS_INVALID_CRUNTIME_PARAMETER ( ( DWORD ) 0xC0000417 )
#define STATUS_INVALID_DISPOSITION ( ( DWORD ) 0xC0000026 )
#define STATUS_INVALID_HANDLE ( ( DWORD ) 0xC0000008 )
#define STATUS_INVALID_PARAMETER ( ( DWORD ) 0xC000000D )
#define STATUS_IN_PAGE_ERROR ( ( DWORD ) 0xC0000006 )
#define STATUS_LONGJUMP ( ( DWORD ) 0x80000026 )
#define STATUS_NONCONTINUABLE_EXCEPTION ( ( DWORD ) 0xC0000025 )
#define STATUS_NO_MEMORY ( ( DWORD ) 0xC0000017 )
#define STATUS_ORDINAL_NOT_FOUND ( ( DWORD ) 0xC0000138 )
#define STATUS_PENDING ( ( DWORD ) 0x00000103 )
#define STATUS_PRIVILEGED_INSTRUCTION ( ( DWORD ) 0xC0000096 )
#define STATUS_REG_NAT_CONSUMPTION ( ( DWORD ) 0xC00002C9 )
#define STATUS_SEGMENT_NOTIFICATION ( ( DWORD ) 0x40000005 )
#define STATUS_SINGLE_STEP ( ( DWORD ) 0x80000004 )
#define STATUS_STACK_BUFFER_OVERRUN ( ( DWORD ) 0xC0000409 )
#define STATUS_STACK_OVERFLOW ( ( DWORD ) 0xC00000FD )
#define STATUS_SXS_EARLY_DEACTIVATION ( ( DWORD ) 0xC015000F )
#define STATUS_SXS_INVALID_DEACTIVATION ( ( DWORD ) 0xC0150010 )
#define STATUS_TIMEOUT ( ( DWORD ) 0x00000102 )
#define STATUS_UNWIND_CONSOLIDATE ( ( DWORD ) 0x80000029 )
#define STATUS_USER_APC ( ( DWORD ) 0x000000C0 )
#define STATUS_WAIT_0 ( ( DWORD ) 0x00000000 )
#define STDAPI EXTERN_C HRESULT WINAPI
#define STDAPICALLTYPE WINAPI
#define STDAPIV EXTERN_C HRESULT STDAPIVCALLTYPE
#define STDAPIVCALLTYPE __cdecl
#define STDAPIV_(type) EXTERN_C type STDAPIVCALLTYPE
#define STDAPI_(type) EXTERN_C type WINAPI
#define STDMETHODCALLTYPE WINAPI
#define STDMETHODIMP HRESULT WINAPI
#define STDMETHODIMPV HRESULT STDMETHODVCALLTYPE
#define STDMETHODIMPV_(type) type STDMETHODVCALLTYPE
#define STDMETHODIMP_(type) type WINAPI
#define STDMETHODVCALLTYPE __cdecl
#define STD_ERROR_HANDLE (-12)
#define STD_INPUT_HANDLE (-10)
#define STD_OUTPUT_HANDLE (-11)
#define STG_E_ABNORMALAPIEXIT _HRESULT_TYPEDEF_ ( 0x800300FA )
#define STG_E_ACCESSDENIED _HRESULT_TYPEDEF_ ( 0x80030005 )
#define STG_E_BADBASEADDRESS _HRESULT_TYPEDEF_ ( 0x80030110 )
#define STG_E_CANTSAVE _HRESULT_TYPEDEF_ ( 0x80030103 )
#define STG_E_CSS_AUTHENTICATION_FAILURE _HRESULT_TYPEDEF_ ( 0x80030306 )
#define STG_E_CSS_KEY_NOT_ESTABLISHED _HRESULT_TYPEDEF_ ( 0x80030308 )
#define STG_E_CSS_KEY_NOT_PRESENT _HRESULT_TYPEDEF_ ( 0x80030307 )
#define STG_E_CSS_REGION_MISMATCH _HRESULT_TYPEDEF_ ( 0x8003030A )
#define STG_E_CSS_SCRAMBLED_SECTOR _HRESULT_TYPEDEF_ ( 0x80030309 )
#define STG_E_DISKISWRITEPROTECTED _HRESULT_TYPEDEF_ ( 0x80030013 )
#define STG_E_DOCFILECORRUPT _HRESULT_TYPEDEF_ ( 0x80030109 )
#define STG_E_DOCFILETOOLARGE _HRESULT_TYPEDEF_ ( 0x80030111 )
#define STG_E_EXTANTMARSHALLINGS _HRESULT_TYPEDEF_ ( 0x80030108 )
#define STG_E_FILEALREADYEXISTS _HRESULT_TYPEDEF_ ( 0x80030050 )
#define STG_E_FILENOTFOUND _HRESULT_TYPEDEF_ ( 0x80030002 )
#define STG_E_INCOMPLETE _HRESULT_TYPEDEF_ ( 0x80030201 )
#define STG_E_INSUFFICIENTMEMORY _HRESULT_TYPEDEF_ ( 0x80030008 )
#define STG_E_INUSE _HRESULT_TYPEDEF_ ( 0x80030100 )
#define STG_E_INVALIDFLAG _HRESULT_TYPEDEF_ ( 0x800300FF )
#define STG_E_INVALIDFUNCTION _HRESULT_TYPEDEF_ ( 0x80030001 )
#define STG_E_INVALIDHANDLE _HRESULT_TYPEDEF_ ( 0x80030006 )
#define STG_E_INVALIDHEADER _HRESULT_TYPEDEF_ ( 0x800300FB )
#define STG_E_INVALIDNAME _HRESULT_TYPEDEF_ ( 0x800300FC )
#define STG_E_INVALIDPARAMETER _HRESULT_TYPEDEF_ ( 0x80030057 )
#define STG_E_INVALIDPOINTER _HRESULT_TYPEDEF_ ( 0x80030009 )
#define STG_E_LOCKVIOLATION _HRESULT_TYPEDEF_ ( 0x80030021 )
#define STG_E_MEDIUMFULL _HRESULT_TYPEDEF_ ( 0x80030070 )
#define STG_E_NOMOREFILES _HRESULT_TYPEDEF_ ( 0x80030012 )
#define STG_E_NOTCURRENT _HRESULT_TYPEDEF_ ( 0x80030101 )
#define STG_E_NOTFILEBASEDSTORAGE _HRESULT_TYPEDEF_ ( 0x80030107 )
#define STG_E_NOTSIMPLEFORMAT _HRESULT_TYPEDEF_ ( 0x80030112 )
#define STG_E_OLDDLL _HRESULT_TYPEDEF_ ( 0x80030105 )
#define STG_E_OLDFORMAT _HRESULT_TYPEDEF_ ( 0x80030104 )
#define STG_E_PATHNOTFOUND _HRESULT_TYPEDEF_ ( 0x80030003 )
#define STG_E_PROPSETMISMATCHED _HRESULT_TYPEDEF_ ( 0x800300F0 )
#define STG_E_READFAULT _HRESULT_TYPEDEF_ ( 0x8003001E )
#define STG_E_RESETS_EXHAUSTED _HRESULT_TYPEDEF_ ( 0x8003030B )
#define STG_E_REVERTED _HRESULT_TYPEDEF_ ( 0x80030102 )
#define STG_E_SEEKERROR _HRESULT_TYPEDEF_ ( 0x80030019 )
#define STG_E_SHAREREQUIRED _HRESULT_TYPEDEF_ ( 0x80030106 )
#define STG_E_SHAREVIOLATION _HRESULT_TYPEDEF_ ( 0x80030020 )
#define STG_E_STATUS_COPY_PROTECTION_FAILURE _HRESULT_TYPEDEF_ ( 0x80030305 )
#define STG_E_TERMINATED _HRESULT_TYPEDEF_ ( 0x80030202 )
#define STG_E_TOOMANYOPENFILES _HRESULT_TYPEDEF_ ( 0x80030004 )
#define STG_E_UNIMPLEMENTEDFUNCTION _HRESULT_TYPEDEF_ ( 0x800300FE )
#define STG_E_UNKNOWN _HRESULT_TYPEDEF_ ( 0x800300FD )
#define STG_E_WRITEFAULT _HRESULT_TYPEDEF_ ( 0x8003001D )
#define STG_S_BLOCK _HRESULT_TYPEDEF_ ( 0x00030201 )
#define STG_S_CANNOTCONSOLIDATE _HRESULT_TYPEDEF_ ( 0x00030206 )
#define STG_S_CONSOLIDATIONFAILED _HRESULT_TYPEDEF_ ( 0x00030205 )
#define STG_S_CONVERTED _HRESULT_TYPEDEF_ ( 0x00030200 )
#define STG_S_MONITORING _HRESULT_TYPEDEF_ ( 0x00030203 )
#define STG_S_MULTIPLEOPENS _HRESULT_TYPEDEF_ ( 0x00030204 )
#define STG_S_RETRYNOW _HRESULT_TYPEDEF_ ( 0x00030202 )
#define STILL_ACTIVE STATUS_PENDING
#define STM_GETICON (369)
#define STM_GETIMAGE (371)
#define STM_MSGMAX (372)
#define STM_SETICON (368)
#define STM_SETIMAGE (370)
#define STN_CLICKED (0)
#define STN_DBLCLK (1)
#define STN_DISABLE (3)
#define STN_ENABLE (2)
#define STOCK_LAST (19)
#define STOPBITS_10 ( ( WORD ) 0x1 )
#define STOPBITS_15 ( ( WORD ) 0x2 )
#define STOPBITS_20 ( ( WORD ) 0x4 )
#define STREAM_CLEAR_ENCRYPTION (4)
#define STREAM_CONTAINS_PROPERTIES (4)
#define STREAM_CONTAINS_SECURITY (2)
#define STREAM_MODIFIED_WHEN_READ (1)
#define STREAM_NORMAL_ATTRIBUTE (0)
#define STREAM_SET_ENCRYPTION (3)
#define STREAM_SPARSE_ATTRIBUTE (8)
#define STRETCHBLT (2048)
#define STRETCH_ANDSCANS BLACKONWHITE
#define STRETCH_DELETESCANS COLORONCOLOR
#define STRETCH_HALFTONE HALFTONE
#define STRETCH_ORSCANS WHITEONBLACK
#define STRICT (1)
#define STYLE_DESCRIPTION_SIZE (32)
#define ST_ADVISE (2)
#define ST_BLOCKED (8)
#define ST_BLOCKNEXT (128)
#define ST_CLIENT (16)
#define ST_CONNECTED (1)
#define ST_INLIST (64)
#define ST_ISLOCAL (4)
#define ST_ISSELF (256)
#define ST_TERMINATED (32)
#define SUBLANGID(lgid) ( ( WORD ) ( lgid ) >> 10 )
#define SUBLANG_AFRIKAANS_SOUTH_AFRICA (1)
#define SUBLANG_ALBANIAN_ALBANIA (1)
#define SUBLANG_ALSATIAN_FRANCE (1)
#define SUBLANG_AMHARIC_ETHIOPIA (1)
#define SUBLANG_ARABIC_ALGERIA (5)
#define SUBLANG_ARABIC_BAHRAIN (15)
#define SUBLANG_ARABIC_EGYPT (3)
#define SUBLANG_ARABIC_IRAQ (2)
#define SUBLANG_ARABIC_JORDAN (11)
#define SUBLANG_ARABIC_KUWAIT (13)
#define SUBLANG_ARABIC_LEBANON (12)
#define SUBLANG_ARABIC_LIBYA (4)
#define SUBLANG_ARABIC_MOROCCO (6)
#define SUBLANG_ARABIC_OMAN (8)
#define SUBLANG_ARABIC_QATAR (16)
#define SUBLANG_ARABIC_SAUDI_ARABIA (1)
#define SUBLANG_ARABIC_SYRIA (10)
#define SUBLANG_ARABIC_TUNISIA (7)
#define SUBLANG_ARABIC_UAE (14)
#define SUBLANG_ARABIC_YEMEN (9)
#define SUBLANG_ARMENIAN_ARMENIA (1)
#define SUBLANG_ASSAMESE_INDIA (1)
#define SUBLANG_AZERBAIJANI_AZERBAIJAN_CYRILLIC (2)
#define SUBLANG_AZERBAIJANI_AZERBAIJAN_LATIN (1)
#define SUBLANG_AZERI_CYRILLIC (2)
#define SUBLANG_AZERI_LATIN (1)
#define SUBLANG_BANGLA_BANGLADESH (2)
#define SUBLANG_BANGLA_INDIA (1)
#define SUBLANG_BASHKIR_RUSSIA (1)
#define SUBLANG_BASQUE_BASQUE (1)
#define SUBLANG_BELARUSIAN_BELARUS (1)
#define SUBLANG_BENGALI_BANGLADESH (2)
#define SUBLANG_BENGALI_INDIA (1)
#define SUBLANG_BOSNIAN_BOSNIA_HERZEGOVINA_CYRILLIC (8)
#define SUBLANG_BOSNIAN_BOSNIA_HERZEGOVINA_LATIN (5)
#define SUBLANG_BRETON_FRANCE (1)
#define SUBLANG_BULGARIAN_BULGARIA (1)
#define SUBLANG_CATALAN_CATALAN (1)
#define SUBLANG_CENTRAL_KURDISH_IRAQ (1)
#define SUBLANG_CHEROKEE_CHEROKEE (1)
#define SUBLANG_CHINESE_HONGKONG (3)
#define SUBLANG_CHINESE_MACAU (5)
#define SUBLANG_CHINESE_SIMPLIFIED (2)
#define SUBLANG_CHINESE_SINGAPORE (4)
#define SUBLANG_CHINESE_TRADITIONAL (1)
#define SUBLANG_CORSICAN_FRANCE (1)
#define SUBLANG_CROATIAN_BOSNIA_HERZEGOVINA_LATIN (4)
#define SUBLANG_CROATIAN_CROATIA (1)
#define SUBLANG_CUSTOM_DEFAULT (3)
#define SUBLANG_CUSTOM_UNSPECIFIED (4)
#define SUBLANG_CZECH_CZECH_REPUBLIC (1)
#define SUBLANG_DANISH_DENMARK (1)
#define SUBLANG_DARI_AFGHANISTAN (1)
#define SUBLANG_DEFAULT (1)
#define SUBLANG_DIVEHI_MALDIVES (1)
#define SUBLANG_DUTCH (1)
#define SUBLANG_DUTCH_BELGIAN (2)
#define SUBLANG_ENGLISH_AUS (3)
#define SUBLANG_ENGLISH_BELIZE (10)
#define SUBLANG_ENGLISH_CAN (4)
#define SUBLANG_ENGLISH_CARIBBEAN (9)
#define SUBLANG_ENGLISH_EIRE (6)
#define SUBLANG_ENGLISH_INDIA (16)
#define SUBLANG_ENGLISH_IRELAND (6)
#define SUBLANG_ENGLISH_JAMAICA (8)
#define SUBLANG_ENGLISH_MALAYSIA (17)
#define SUBLANG_ENGLISH_NZ (5)
#define SUBLANG_ENGLISH_PHILIPPINES (13)
#define SUBLANG_ENGLISH_SINGAPORE (18)
#define SUBLANG_ENGLISH_SOUTH_AFRICA (7)
#define SUBLANG_ENGLISH_TRINIDAD (11)
#define SUBLANG_ENGLISH_UK (2)
#define SUBLANG_ENGLISH_US (1)
#define SUBLANG_ENGLISH_ZIMBABWE (12)
#define SUBLANG_ESTONIAN_ESTONIA (1)
#define SUBLANG_FAEROESE_FAROE_ISLANDS (1)
#define SUBLANG_FILIPINO_PHILIPPINES (1)
#define SUBLANG_FINNISH_FINLAND (1)
#define SUBLANG_FRENCH (1)
#define SUBLANG_FRENCH_BELGIAN (2)
#define SUBLANG_FRENCH_CANADIAN (3)
#define SUBLANG_FRENCH_LUXEMBOURG (5)
#define SUBLANG_FRENCH_MONACO (6)
#define SUBLANG_FRENCH_SWISS (4)
#define SUBLANG_FRISIAN_NETHERLANDS (1)
#define SUBLANG_FULAH_SENEGAL (2)
#define SUBLANG_GALICIAN_GALICIAN (1)
#define SUBLANG_GEORGIAN_GEORGIA (1)
#define SUBLANG_GERMAN (1)
#define SUBLANG_GERMAN_AUSTRIAN (3)
#define SUBLANG_GERMAN_LIECHTENSTEIN (5)
#define SUBLANG_GERMAN_LUXEMBOURG (4)
#define SUBLANG_GERMAN_SWISS (2)
#define SUBLANG_GREEK_GREECE (1)
#define SUBLANG_GREENLANDIC_GREENLAND (1)
#define SUBLANG_GUJARATI_INDIA (1)
#define SUBLANG_HAUSA_NIGERIA SUBLANG_HAUSA_NIGERIA_LATIN
#define SUBLANG_HAUSA_NIGERIA_LATIN (1)
#define SUBLANG_HAWAIIAN_US (1)
#define SUBLANG_HEBREW_ISRAEL (1)
#define SUBLANG_HINDI_INDIA (1)
#define SUBLANG_HUNGARIAN_HUNGARY (1)
#define SUBLANG_ICELANDIC_ICELAND (1)
#define SUBLANG_IGBO_NIGERIA (1)
#define SUBLANG_INDONESIAN_INDONESIA (1)
#define SUBLANG_INUKTITUT_CANADA (1)
#define SUBLANG_INUKTITUT_CANADA_LATIN (2)
#define SUBLANG_IRISH_IRELAND (2)
#define SUBLANG_ITALIAN (1)
#define SUBLANG_ITALIAN_SWISS (2)
#define SUBLANG_JAPANESE_JAPAN (1)
#define SUBLANG_KANNADA_INDIA (1)
#define SUBLANG_KASHMIRI_INDIA (2)
#define SUBLANG_KASHMIRI_SASIA (2)
#define SUBLANG_KAZAK_KAZAKHSTAN (1)
#define SUBLANG_KHMER_CAMBODIA (1)
#define SUBLANG_KICHE_GUATEMALA (1)
#define SUBLANG_KINYARWANDA_RWANDA (1)
#define SUBLANG_KONKANI_INDIA (1)
#define SUBLANG_KOREAN (1)
#define SUBLANG_KYRGYZ_KYRGYZSTAN (1)
#define SUBLANG_LAO_LAO (1)
#define SUBLANG_LAO_LAO_PDR SUBLANG_LAO_LAO
#define SUBLANG_LATVIAN_LATVIA (1)
#define SUBLANG_LITHUANIAN (1)
#define SUBLANG_LOWER_SORBIAN_GERMANY (2)
#define SUBLANG_LUXEMBOURGISH_LUXEMBOURG (1)
#define SUBLANG_MACEDONIAN_MACEDONIA (1)
#define SUBLANG_MALAYALAM_INDIA (1)
#define SUBLANG_MALAY_BRUNEI_DARUSSALAM (2)
#define SUBLANG_MALAY_MALAYSIA (1)
#define SUBLANG_MALTESE_MALTA (1)
#define SUBLANG_MAORI_NEW_ZEALAND (1)
#define SUBLANG_MAPUDUNGUN_CHILE (1)
#define SUBLANG_MARATHI_INDIA (1)
#define SUBLANG_MOHAWK_MOHAWK (1)
#define SUBLANG_MONGOLIAN_CYRILLIC_MONGOLIA (1)
#define SUBLANG_MONGOLIAN_PRC (2)
#define SUBLANG_NEPALI_INDIA (2)
#define SUBLANG_NEPALI_NEPAL (1)
#define SUBLANG_NEUTRAL (0)
#define SUBLANG_NORWEGIAN_BOKMAL (1)
#define SUBLANG_NORWEGIAN_NYNORSK (2)
#define SUBLANG_OCCITAN_FRANCE (1)
#define SUBLANG_ORIYA_INDIA (1)
#define SUBLANG_PASHTO_AFGHANISTAN (1)
#define SUBLANG_PERSIAN_IRAN (1)
#define SUBLANG_POLISH_POLAND (1)
#define SUBLANG_PORTUGUESE (2)
#define SUBLANG_PORTUGUESE_BRAZILIAN (1)
#define SUBLANG_PULAR_SENEGAL (2)
#define SUBLANG_PUNJABI_INDIA (1)
#define SUBLANG_PUNJABI_PAKISTAN (2)
#define SUBLANG_QUECHUA_BOLIVIA (1)
#define SUBLANG_QUECHUA_ECUADOR (2)
#define SUBLANG_QUECHUA_PERU (3)
#define SUBLANG_ROMANIAN_ROMANIA (1)
#define SUBLANG_ROMANSH_SWITZERLAND (1)
#define SUBLANG_RUSSIAN_RUSSIA (1)
#define SUBLANG_SAKHA_RUSSIA (1)
#define SUBLANG_SAMI_INARI_FINLAND (9)
#define SUBLANG_SAMI_LULE_NORWAY (4)
#define SUBLANG_SAMI_LULE_SWEDEN (5)
#define SUBLANG_SAMI_NORTHERN_FINLAND (3)
#define SUBLANG_SAMI_NORTHERN_NORWAY (1)
#define SUBLANG_SAMI_NORTHERN_SWEDEN (2)
#define SUBLANG_SAMI_SKOLT_FINLAND (8)
#define SUBLANG_SAMI_SOUTHERN_NORWAY (6)
#define SUBLANG_SAMI_SOUTHERN_SWEDEN (7)
#define SUBLANG_SANSKRIT_INDIA (1)
#define SUBLANG_SCOTTISH_GAELIC (1)
#define SUBLANG_SERBIAN_BOSNIA_HERZEGOVINA_CYRILLIC (7)
#define SUBLANG_SERBIAN_BOSNIA_HERZEGOVINA_LATIN (6)
#define SUBLANG_SERBIAN_CYRILLIC (3)
#define SUBLANG_SERBIAN_LATIN (2)
#define SUBLANG_SERBIAN_MONTENEGRO_CYRILLIC (12)
#define SUBLANG_SERBIAN_MONTENEGRO_LATIN (11)
#define SUBLANG_SERBIAN_SERBIA_CYRILLIC (10)
#define SUBLANG_SERBIAN_SERBIA_LATIN (9)
#define SUBLANG_SINDHI_AFGHANISTAN (2)
#define SUBLANG_SINDHI_INDIA (1)
#define SUBLANG_SINDHI_PAKISTAN (2)
#define SUBLANG_SINHALESE_SRI_LANKA (1)
#define SUBLANG_SLOVAK_SLOVAKIA (1)
#define SUBLANG_SLOVENIAN_SLOVENIA (1)
#define SUBLANG_SOTHO_NORTHERN_SOUTH_AFRICA (1)
#define SUBLANG_SPANISH (1)
#define SUBLANG_SPANISH_ARGENTINA (11)
#define SUBLANG_SPANISH_BOLIVIA (16)
#define SUBLANG_SPANISH_CHILE (13)
#define SUBLANG_SPANISH_COLOMBIA (9)
#define SUBLANG_SPANISH_COSTA_RICA (5)
#define SUBLANG_SPANISH_DOMINICAN_REPUBLIC (7)
#define SUBLANG_SPANISH_ECUADOR (12)
#define SUBLANG_SPANISH_EL_SALVADOR (17)
#define SUBLANG_SPANISH_GUATEMALA (4)
#define SUBLANG_SPANISH_HONDURAS (18)
#define SUBLANG_SPANISH_MEXICAN (2)
#define SUBLANG_SPANISH_MODERN (3)
#define SUBLANG_SPANISH_NICARAGUA (19)
#define SUBLANG_SPANISH_PANAMA (6)
#define SUBLANG_SPANISH_PARAGUAY (15)
#define SUBLANG_SPANISH_PERU (10)
#define SUBLANG_SPANISH_PUERTO_RICO (20)
#define SUBLANG_SPANISH_URUGUAY (14)
#define SUBLANG_SPANISH_US (21)
#define SUBLANG_SPANISH_VENEZUELA (8)
#define SUBLANG_SWAHILI_KENYA (1)
#define SUBLANG_SWEDISH (1)
#define SUBLANG_SWEDISH_FINLAND (2)
#define SUBLANG_SYRIAC (1)
#define SUBLANG_SYRIAC_SYRIA SUBLANG_SYRIAC
#define SUBLANG_SYS_DEFAULT (2)
#define SUBLANG_TAJIK_TAJIKISTAN (1)
#define SUBLANG_TAMAZIGHT_ALGERIA_LATIN (2)
#define SUBLANG_TAMAZIGHT_MOROCCO_TIFINAGH (4)
#define SUBLANG_TAMIL_INDIA (1)
#define SUBLANG_TAMIL_SRI_LANKA (2)
#define SUBLANG_TATAR_RUSSIA (1)
#define SUBLANG_TELUGU_INDIA (1)
#define SUBLANG_THAI_THAILAND (1)
#define SUBLANG_TIBETAN_BHUTAN (2)
#define SUBLANG_TIBETAN_PRC (1)
#define SUBLANG_TIGRIGNA_ERITREA (2)
#define SUBLANG_TIGRINYA_ERITREA (2)
#define SUBLANG_TIGRINYA_ETHIOPIA (1)
#define SUBLANG_TSWANA_BOTSWANA (2)
#define SUBLANG_TSWANA_SOUTH_AFRICA (1)
#define SUBLANG_TURKISH_TURKEY (1)
#define SUBLANG_TURKMEN_TURKMENISTAN (1)
#define SUBLANG_UIGHUR_PRC (1)
#define SUBLANG_UI_CUSTOM_DEFAULT (5)
#define SUBLANG_UKRAINIAN_UKRAINE (1)
#define SUBLANG_UPPER_SORBIAN_GERMANY (1)
#define SUBLANG_URDU_INDIA (2)
#define SUBLANG_URDU_PAKISTAN (1)
#define SUBLANG_UZBEK_CYRILLIC (2)
#define SUBLANG_UZBEK_LATIN (1)
#define SUBLANG_VALENCIAN_VALENCIA (2)
#define SUBLANG_VIETNAMESE_VIETNAM (1)
#define SUBLANG_WELSH_UNITED_KINGDOM (1)
#define SUBLANG_WOLOF_SENEGAL (1)
#define SUBLANG_XHOSA_SOUTH_AFRICA (1)
#define SUBLANG_YAKUT_RUSSIA (1)
#define SUBLANG_YI_PRC (1)
#define SUBLANG_YORUBA_NIGERIA (1)
#define SUBLANG_ZULU_SOUTH_AFRICA (1)
#define SUCCEEDED(hr) ( ( HRESULT ) ( hr ) >= 0 )
#define SUCCESSFUL_ACCESS_ACE_FLAG (64)
#define SUPPORT_LANG_NUMBER (32)
#define SWP_ASYNCWINDOWPOS (16384)
#define SWP_DEFERERASE (8192)
#define SWP_DRAWFRAME SWP_FRAMECHANGED
#define SWP_FRAMECHANGED (32)
#define SWP_HIDEWINDOW (128)
#define SWP_NOACTIVATE (16)
#define SWP_NOCOPYBITS (256)
#define SWP_NOMOVE (2)
#define SWP_NOOWNERZORDER (512)
#define SWP_NOREDRAW (8)
#define SWP_NOREPOSITION SWP_NOOWNERZORDER
#define SWP_NOSENDCHANGING (1024)
#define SWP_NOSIZE (1)
#define SWP_NOZORDER (4)
#define SWP_SHOWWINDOW (64)
#define SW_ERASE (4)
#define SW_FORCEMINIMIZE (11)
#define SW_HIDE (0)
#define SW_INVALIDATE (2)
#define SW_MAX (11)
#define SW_MAXIMIZE (3)
#define SW_MINIMIZE (6)
#define SW_NORMAL (1)
#define SW_OTHERUNZOOM (4)
#define SW_OTHERZOOM (2)
#define SW_PARENTCLOSING (1)
#define SW_PARENTOPENING (3)
#define SW_RESTORE (9)
#define SW_SCROLLCHILDREN (1)
#define SW_SHOW (5)
#define SW_SHOWDEFAULT (10)
#define SW_SHOWMAXIMIZED (3)
#define SW_SHOWMINIMIZED (2)
#define SW_SHOWMINNOACTIVE (7)
#define SW_SHOWNA (8)
#define SW_SHOWNOACTIVATE (4)
#define SW_SHOWNORMAL (1)
#define SW_SMOOTHSCROLL (16)
#define SYMBOL_CHARSET (2)
#define SYMLINK_FLAG_RELATIVE (1)
#define SYMMETRICWRAPKEYBLOB (11)
#define SYNCHRONIZATION_BARRIER_FLAGS_BLOCK_ONLY (2)
#define SYNCHRONIZATION_BARRIER_FLAGS_NO_DELETE (4)
#define SYNCHRONIZATION_BARRIER_FLAGS_SPIN_ONLY (1)
#define SYNCHRONIZE (1048576l)
#define SYSPAL_ERROR (0)
#define SYSPAL_NOSTATIC (2)
#define SYSPAL_NOSTATIC256 (3)
#define SYSPAL_STATIC (1)
#define SYSRGN (4)
#define SYSTEM_ALARM_ACE_TYPE (3)
#define SYSTEM_ALARM_CALLBACK_ACE_TYPE (14)
#define SYSTEM_ALARM_CALLBACK_OBJECT_ACE_TYPE (16)
#define SYSTEM_ALARM_OBJECT_ACE_TYPE (8)
#define SYSTEM_AUDIT_ACE_TYPE (2)
#define SYSTEM_AUDIT_CALLBACK_ACE_TYPE (13)
#define SYSTEM_AUDIT_CALLBACK_OBJECT_ACE_TYPE (15)
#define SYSTEM_AUDIT_OBJECT_ACE_TYPE (7)
#define SYSTEM_CACHE_ALIGNMENT_SIZE (64)
#define SYSTEM_FIXED_FONT (16)
#define SYSTEM_FONT (13)
#define SYSTEM_LUID { 0x3e7 , 0x0 }
#define SYSTEM_MANDATORY_LABEL_ACE_TYPE (17)
#define SYSTEM_MANDATORY_LABEL_NO_EXECUTE_UP (4)
#define SYSTEM_MANDATORY_LABEL_NO_READ_UP (2)
#define SYSTEM_MANDATORY_LABEL_NO_WRITE_UP (1)
#define SYSTEM_MANDATORY_LABEL_VALID_MASK (7)
#define SYSTEM_RESOURCE_ATTRIBUTE_ACE_TYPE (18)
#define SYSTEM_SCOPED_POLICY_ID_ACE_TYPE (19)
#define SZDDESYS_ITEM_FORMATS __MINGW_STRING_AW ( "Formats" )
#define SZDDESYS_ITEM_HELP __MINGW_STRING_AW ( "Help" )
#define SZDDESYS_ITEM_RTNMSG __MINGW_STRING_AW ( "ReturnMessage" )
#define SZDDESYS_ITEM_STATUS __MINGW_STRING_AW ( "Status" )
#define SZDDESYS_ITEM_SYSITEMS __MINGW_STRING_AW ( "SysItems" )
#define SZDDESYS_ITEM_TOPICS __MINGW_STRING_AW ( "Topics" )
#define SZDDESYS_TOPIC __MINGW_STRING_AW ( "System" )
#define SZDDE_ITEM_ITEMLIST __MINGW_STRING_AW ( "TopicItemList" )
#define S_ALLTHRESHOLD (2)
#define S_FALSE ( ( HRESULT ) 0x00000001 )
#define S_LEGATO (1)
#define S_NORMAL (0)
#define S_OK ( ( HRESULT ) 0x00000000 )
#define S_PERIOD1024 (1)
#define S_PERIOD2048 (2)
#define S_PERIOD512 (0)
#define S_PERIODVOICE (3)
#define S_QUEUEEMPTY (0)
#define S_SERBDNT (-5)
#define S_SERDCC (-7)
#define S_SERDDR (-14)
#define S_SERDFQ (-13)
#define S_SERDLN (-6)
#define S_SERDMD (-10)
#define S_SERDPT (-12)
#define S_SERDSH (-11)
#define S_SERDSR (-15)
#define S_SERDST (-16)
#define S_SERDTP (-8)
#define S_SERDVL (-9)
#define S_SERDVNA (-1)
#define S_SERMACT (-3)
#define S_SEROFM (-2)
#define S_SERQFUL (-4)
#define S_STACCATO (2)
#define S_THRESHOLD (1)
#define S_WHITE1024 (5)
#define S_WHITE2048 (6)
#define S_WHITE512 (4)
#define S_WHITEVOICE (7)
#define ScrollConsoleScreenBuffer __MINGW_NAME_AW ( ScrollConsoleScreenBuffer )
#define SearchPath __MINGW_NAME_AW ( SearchPath )
#define SecureZeroMemory RtlSecureZeroMemory
#define SendDlgItemMessage __MINGW_NAME_AW ( SendDlgItemMessage )
#define SendMessage __MINGW_NAME_AW ( SendMessage )
#define SendMessageCallback __MINGW_NAME_AW ( SendMessageCallback )
#define SendMessageTimeout __MINGW_NAME_AW ( SendMessageTimeout )
#define SendNotifyMessage __MINGW_NAME_AW ( SendNotifyMessage )
#define SetCalendarInfo __MINGW_NAME_AW ( SetCalendarInfo )
#define SetClassLong __MINGW_NAME_AW ( SetClassLong )
#define SetClassLongPtr __MINGW_NAME_AW ( SetClassLongPtr )
#define SetComputerName __MINGW_NAME_AW ( SetComputerName )
#define SetComputerNameEx SetComputerNameExA
#define SetConsoleTitle __MINGW_NAME_AW ( SetConsoleTitle )
#define SetCurrentDirectory __MINGW_NAME_AW ( SetCurrentDirectory )
#define SetDefaultCommConfig __MINGW_NAME_AW ( SetDefaultCommConfig )
#define SetDefaultPrinter __MINGW_NAME_AW ( SetDefaultPrinter )
#define SetDlgItemText __MINGW_NAME_AW ( SetDlgItemText )
#define SetDllDirectory __MINGW_NAME_AW ( SetDllDirectory )
#define SetEnvironmentStrings SetEnvironmentStringsA
#define SetEnvironmentVariable __MINGW_NAME_AW ( SetEnvironmentVariable )
#define SetFileAttributes __MINGW_NAME_AW ( SetFileAttributes )
#define SetFileSecurity SetFileSecurityA
#define SetFileShortName __MINGW_NAME_AW ( SetFileShortName )
#define SetFirmwareEnvironmentVariable __MINGW_NAME_AW ( SetFirmwareEnvironmentVariable )
#define SetForm __MINGW_NAME_AW ( SetForm )
#define SetICMProfile __MINGW_NAME_AW ( SetICMProfile )
#define SetJob __MINGW_NAME_AW ( SetJob )
#define SetLocaleInfo __MINGW_NAME_AW ( SetLocaleInfo )
#define SetMenuItemInfo __MINGW_NAME_AW ( SetMenuItemInfo )
#define SetPort __MINGW_NAME_AW ( SetPort )
#define SetPrinter __MINGW_NAME_AW ( SetPrinter )
#define SetPrinterData __MINGW_NAME_AW ( SetPrinterData )
#define SetPrinterDataEx __MINGW_NAME_AW ( SetPrinterDataEx )
#define SetProp __MINGW_NAME_AW ( SetProp )
#define SetSwapAreaSize(w) ( w )
#define SetSysModalWindow(hWnd) ( NULL )
#define SetUserObjectInformation __MINGW_NAME_AW ( SetUserObjectInformation )
#define SetVolumeLabel __MINGW_NAME_AW ( SetVolumeLabel )
#define SetVolumeMountPoint __MINGW_NAME_AW ( SetVolumeMountPoint )
#define SetWindowLong __MINGW_NAME_AW ( SetWindowLong )
#define SetWindowLongPtr __MINGW_NAME_AW ( SetWindowLongPtr )
#define SetWindowText __MINGW_NAME_AW ( SetWindowText )
#define SetWindowsHook __MINGW_NAME_AW ( SetWindowsHook )
#define SetWindowsHookEx __MINGW_NAME_AW ( SetWindowsHookEx )
#define ShellAbout __MINGW_NAME_AW ( ShellAbout )
#define ShellExecute __MINGW_NAME_AW ( ShellExecute )
#define ShellExecuteEx __MINGW_NAME_AW ( ShellExecuteEx )
#define ShellMessageBox __MINGW_NAME_AW ( ShellMessageBox )
#define Shell_NotifyIcon __MINGW_NAME_AW ( Shell_NotifyIcon )
#define ShiftLeft128 __shiftleft128
#define ShiftRight128 __shiftright128
#define StartDoc __MINGW_NAME_AW ( StartDoc )
#define StartDocPrinter __MINGW_NAME_AW ( StartDocPrinter )
#define StartService __MINGW_NAME_AW ( StartService )
#define StartServiceCtrlDispatcher __MINGW_NAME_AW ( StartServiceCtrlDispatcher )
#define StoragePortClassGuid GUID_DEVINTERFACE_STORAGEPORT
#define StoreFence _mm_sfence
#define SystemParametersInfo __MINGW_NAME_AW ( SystemParametersInfo )
#define TAPE_ABSOLUTE_BLOCK __MSABI_LONG ( 1 )
#define TAPE_ABSOLUTE_POSITION __MSABI_LONG ( 0 )
#define TAPE_CHECK_FOR_DRIVE_PROBLEM __MSABI_LONG ( 2 )
#define TAPE_DRIVE_ABSOLUTE_BLK (2147487744u)
#define TAPE_DRIVE_ABS_BLK_IMMED (2147491840u)
#define TAPE_DRIVE_CLEAN_REQUESTS (33554432)
#define TAPE_DRIVE_COMPRESSION (131072)
#define TAPE_DRIVE_ECC (65536)
#define TAPE_DRIVE_EJECT_MEDIA (16777216)
#define TAPE_DRIVE_END_OF_DATA (2147549184u)
#define TAPE_DRIVE_EOT_WZ_SIZE (8192)
#define TAPE_DRIVE_ERASE_BOP_ONLY (64)
#define TAPE_DRIVE_ERASE_IMMEDIATE (128)
#define TAPE_DRIVE_ERASE_LONG (32)
#define TAPE_DRIVE_ERASE_SHORT (16)
#define TAPE_DRIVE_FILEMARKS (2147745792u)
#define TAPE_DRIVE_FIXED (1)
#define TAPE_DRIVE_FIXED_BLOCK (1024)
#define TAPE_DRIVE_FORMAT (2684354560u)
#define TAPE_DRIVE_FORMAT_IMMEDIATE (3221225472u)
#define TAPE_DRIVE_GET_ABSOLUTE_BLK (1048576)
#define TAPE_DRIVE_GET_LOGICAL_BLK (2097152)
#define TAPE_DRIVE_HIGH_FEATURES (2147483648u)
#define TAPE_DRIVE_INITIATOR (4)
#define TAPE_DRIVE_LOAD_UNLD_IMMED (2147483680u)
#define TAPE_DRIVE_LOAD_UNLOAD (2147483649u)
#define TAPE_DRIVE_LOCK_UNLK_IMMED (2147483776u)
#define TAPE_DRIVE_LOCK_UNLOCK (2147483652u)
#define TAPE_DRIVE_LOGICAL_BLK (2147500032u)
#define TAPE_DRIVE_LOG_BLK_IMMED (2147516416u)
#define TAPE_DRIVE_PADDING (262144)
#define TAPE_DRIVE_RELATIVE_BLKS (2147614720u)
#define TAPE_DRIVE_REPORT_SMKS (524288)
#define TAPE_DRIVE_RESERVED_BIT (2147483648u)
#define TAPE_DRIVE_REVERSE_POSITION (2151677952u)
#define TAPE_DRIVE_REWIND_IMMEDIATE (2147483656u)
#define TAPE_DRIVE_SELECT (2)
#define TAPE_DRIVE_SEQUENTIAL_FMKS (2148007936u)
#define TAPE_DRIVE_SEQUENTIAL_SMKS (2149580800u)
#define TAPE_DRIVE_SETMARKS (2148532224u)
#define TAPE_DRIVE_SET_BLOCK_SIZE (2147483664u)
#define TAPE_DRIVE_SET_CMP_BOP_ONLY (67108864)
#define TAPE_DRIVE_SET_COMPRESSION (2147484160u)
#define TAPE_DRIVE_SET_ECC (2147483904u)
#define TAPE_DRIVE_SET_EOT_WZ_SIZE (4194304)
#define TAPE_DRIVE_SET_PADDING (2147484672u)
#define TAPE_DRIVE_SET_REPORT_SMKS (2147485696u)
#define TAPE_DRIVE_SPACE_IMMEDIATE (2155872256u)
#define TAPE_DRIVE_TAPE_CAPACITY (256)
#define TAPE_DRIVE_TAPE_REMAINING (512)
#define TAPE_DRIVE_TENSION (2147483650u)
#define TAPE_DRIVE_TENSION_IMMED (2147483712u)
#define TAPE_DRIVE_VARIABLE_BLOCK (2048)
#define TAPE_DRIVE_WRITE_FILEMARKS (2181038080u)
#define TAPE_DRIVE_WRITE_LONG_FMKS (2281701376u)
#define TAPE_DRIVE_WRITE_MARK_IMMED (2415919104u)
#define TAPE_DRIVE_WRITE_PROTECT (4096)
#define TAPE_DRIVE_WRITE_SETMARKS (2164260864u)
#define TAPE_DRIVE_WRITE_SHORT_FMKS (2214592512u)
#define TAPE_ERASE_LONG __MSABI_LONG ( 1 )
#define TAPE_ERASE_SHORT __MSABI_LONG ( 0 )
#define TAPE_FILEMARKS __MSABI_LONG ( 1 )
#define TAPE_FIXED_PARTITIONS __MSABI_LONG ( 0 )
#define TAPE_FORMAT __MSABI_LONG ( 5 )
#define TAPE_INITIATOR_PARTITIONS __MSABI_LONG ( 2 )
#define TAPE_LOAD __MSABI_LONG ( 0 )
#define TAPE_LOCK __MSABI_LONG ( 3 )
#define TAPE_LOGICAL_BLOCK __MSABI_LONG ( 2 )
#define TAPE_LOGICAL_POSITION __MSABI_LONG ( 1 )
#define TAPE_LONG_FILEMARKS __MSABI_LONG ( 3 )
#define TAPE_PSEUDO_LOGICAL_BLOCK __MSABI_LONG ( 3 )
#define TAPE_PSEUDO_LOGICAL_POSITION __MSABI_LONG ( 2 )
#define TAPE_QUERY_DEVICE_ERROR_DATA __MSABI_LONG ( 4 )
#define TAPE_QUERY_DRIVE_PARAMETERS __MSABI_LONG ( 0 )
#define TAPE_QUERY_IO_ERROR_DATA __MSABI_LONG ( 3 )
#define TAPE_QUERY_MEDIA_CAPACITY __MSABI_LONG ( 1 )
#define TAPE_RESET_STATISTICS __MSABI_LONG ( 2 )
#define TAPE_RETURN_ENV_INFO __MSABI_LONG ( 1 )
#define TAPE_RETURN_STATISTICS __MSABI_LONG ( 0 )
#define TAPE_REWIND __MSABI_LONG ( 0 )
#define TAPE_SELECT_PARTITIONS __MSABI_LONG ( 1 )
#define TAPE_SETMARKS __MSABI_LONG ( 0 )
#define TAPE_SHORT_FILEMARKS __MSABI_LONG ( 2 )
#define TAPE_SPACE_END_OF_DATA __MSABI_LONG ( 4 )
#define TAPE_SPACE_FILEMARKS __MSABI_LONG ( 6 )
#define TAPE_SPACE_RELATIVE_BLOCKS __MSABI_LONG ( 5 )
#define TAPE_SPACE_SEQUENTIAL_FMKS __MSABI_LONG ( 7 )
#define TAPE_SPACE_SEQUENTIAL_SMKS __MSABI_LONG ( 9 )
#define TAPE_SPACE_SETMARKS __MSABI_LONG ( 8 )
#define TAPE_TENSION __MSABI_LONG ( 2 )
#define TAPE_UNLOAD __MSABI_LONG ( 1 )
#define TAPE_UNLOCK __MSABI_LONG ( 4 )
#define TARGET_IS_NT351_OR_WIN95_OR_LATER (1)
#define TARGET_IS_NT40_OR_LATER (1)
#define TARGET_IS_NT50_OR_LATER (1)
#define TARGET_IS_NT51_OR_LATER (1)
#define TARGET_IS_NT60_OR_LATER (0)
#define TARGET_IS_NT61_OR_LATER (0)
#define TA_BASELINE (24)
#define TA_BOTTOM (8)
#define TA_CENTER (6)
#define TA_LEFT (0)
#define TA_MASK (287)
#define TA_NOUPDATECP (0)
#define TA_RIGHT (2)
#define TA_RTLREADING (256)
#define TA_TOP (0)
#define TA_UPDATECP (1)
#define TCI_SRCCHARSET (1)
#define TCI_SRCCODEPAGE (2)
#define TCI_SRCFONTSIG (3)
#define TCI_SRCLOCALE (4096)
#define TCP_BSDURGENT (28672)
#define TCP_NODELAY (1)
#define TC_CP_STROKE (4)
#define TC_CR_90 (8)
#define TC_CR_ANY (16)
#define TC_EA_DOUBLE (512)
#define TC_GP_TRAP (2)
#define TC_HARDERR (1)
#define TC_IA_ABLE (1024)
#define TC_NORMAL (0)
#define TC_OP_CHARACTER (1)
#define TC_OP_STROKE (2)
#define TC_RA_ABLE (8192)
#define TC_RESERVED (32768)
#define TC_SA_CONTIN (256)
#define TC_SA_DOUBLE (64)
#define TC_SA_INTEGER (128)
#define TC_SCROLLBLT (65536)
#define TC_SF_X_YINDEP (32)
#define TC_SIGNAL (3)
#define TC_SO_ABLE (4096)
#define TC_UA_ABLE (2048)
#define TC_VA_ABLE (16384)
#define TECHNOLOGY (2)
#define TEXT(quote) __TEXT ( quote )
#define TEXTCAPS (34)
#define TF_DISCONNECT (1)
#define TF_REUSE_SOCKET (2)
#define TF_WRITE_BEHIND (4)
#define THAI_CHARSET (222)
#define THREAD_ALL_ACCESS (2032639l)
#define THREAD_BASE_PRIORITY_IDLE (-15)
#define THREAD_BASE_PRIORITY_LOWRT (15)
#define THREAD_BASE_PRIORITY_MAX (2)
#define THREAD_BASE_PRIORITY_MIN (-2)
#define THREAD_DIRECT_IMPERSONATION (512)
#define THREAD_GET_CONTEXT (8)
#define THREAD_IMPERSONATE (256)
#define THREAD_MODE_BACKGROUND_BEGIN (65536)
#define THREAD_MODE_BACKGROUND_END (131072)
#define THREAD_PRIORITY_ABOVE_NORMAL (1)
#define THREAD_PRIORITY_BELOW_NORMAL (-1)
#define THREAD_PRIORITY_ERROR_RETURN (2147483647)
#define THREAD_PRIORITY_HIGHEST THREAD_BASE_PRIORITY_MAX
#define THREAD_PRIORITY_IDLE THREAD_BASE_PRIORITY_IDLE
#define THREAD_PRIORITY_LOWEST THREAD_BASE_PRIORITY_MIN
#define THREAD_PRIORITY_NORMAL (0)
#define THREAD_PRIORITY_TIME_CRITICAL THREAD_BASE_PRIORITY_LOWRT
#define THREAD_PROFILING_FLAG_DISPATCH (1)
#define THREAD_QUERY_INFORMATION (64)
#define THREAD_QUERY_LIMITED_INFORMATION (2048)
#define THREAD_SET_CONTEXT (16)
#define THREAD_SET_INFORMATION (32)
#define THREAD_SET_LIMITED_INFORMATION (1024)
#define THREAD_SET_THREAD_TOKEN (128)
#define THREAD_SUSPEND_RESUME (2)
#define THREAD_TERMINATE (1)
#define TIMEFMT_ENUMPROC TIMEFMT_ENUMPROCA
#define TIMEOUT_ASYNC (4294967295u)
#define TIMERR_BASE (96)
#define TIMERR_NOCANDO (97)
#define TIMERR_NOERROR (0)
#define TIMERR_STRUCT (129)
#define TIMER_ALL_ACCESS (2031619l)
#define TIMER_MODIFY_STATE (2)
#define TIMER_QUERY_STATE (1)
#define TIMESTAMP_INFO ( ( LPCSTR ) 80 )
#define TIMESTAMP_REQUEST ( ( LPCSTR ) 78 )
#define TIMESTAMP_RESPONSE ( ( LPCSTR ) 79 )
#define TIME_BYTES (4)
#define TIME_CALLBACK_EVENT_PULSE (32)
#define TIME_CALLBACK_EVENT_SET (16)
#define TIME_CALLBACK_FUNCTION (0)
#define TIME_FORCE24HOURFORMAT (8)
#define TIME_KILL_SYNCHRONOUS (256)
#define TIME_MIDI (16)
#define TIME_MS (1)
#define TIME_NOMINUTESORSECONDS (1)
#define TIME_NOSECONDS (2)
#define TIME_NOTIMEMARKER (4)
#define TIME_ONESHOT (0)
#define TIME_PERIODIC (1)
#define TIME_SAMPLES (2)
#define TIME_SMPTE (8)
#define TIME_TICKS (32)
#define TIME_VALID_OID_FLUSH_CRL ( ( LPCSTR ) 2 )
#define TIME_VALID_OID_FLUSH_CRL_FROM_CERT ( ( LPCSTR ) 3 )
#define TIME_VALID_OID_FLUSH_CTL ( ( LPCSTR ) 1 )
#define TIME_VALID_OID_FLUSH_FRESHEST_CRL_FROM_CERT ( ( LPCSTR ) 4 )
#define TIME_VALID_OID_FLUSH_FRESHEST_CRL_FROM_CRL ( ( LPCSTR ) 5 )
#define TIME_VALID_OID_FLUSH_OBJECT_FUNC "TimeValidDllFlushObject"
#define TIME_VALID_OID_GET_CRL ( ( LPCSTR ) 2 )
#define TIME_VALID_OID_GET_CRL_FROM_CERT ( ( LPCSTR ) 3 )
#define TIME_VALID_OID_GET_CTL ( ( LPCSTR ) 1 )
#define TIME_VALID_OID_GET_FRESHEST_CRL_FROM_CERT ( ( LPCSTR ) 4 )
#define TIME_VALID_OID_GET_FRESHEST_CRL_FROM_CRL ( ( LPCSTR ) 5 )
#define TIME_VALID_OID_GET_OBJECT_FUNC "TimeValidDllGetObject"
#define TIME_ZONE_ID_DAYLIGHT (2)
#define TIME_ZONE_ID_INVALID ( ( DWORD ) 0xffffffff )
#define TIME_ZONE_ID_STANDARD (1)
#define TIME_ZONE_ID_UNKNOWN (0)
#define TKF_AVAILABLE (2)
#define TKF_CONFIRMHOTKEY (8)
#define TKF_HOTKEYACTIVE (4)
#define TKF_HOTKEYSOUND (16)
#define TKF_INDICATOR (32)
#define TKF_TOGGLEKEYSON (1)
#define TLS_MINIMUM_AVAILABLE (64)
#define TLS_OUT_OF_INDEXES ( ( DWORD ) 0xffffffff )
#define TME_CANCEL (2147483648u)
#define TME_HOVER (1)
#define TME_LEAVE (2)
#define TME_NONCLIENT (16)
#define TME_QUERY (1073741824)
#define TMPF_DEVICE (8)
#define TMPF_FIXED_PITCH (1)
#define TMPF_TRUETYPE (4)
#define TMPF_VECTOR (2)
#define TOKEN_ADJUST_DEFAULT (128)
#define TOKEN_ADJUST_GROUPS (64)
#define TOKEN_ADJUST_PRIVILEGES (32)
#define TOKEN_ADJUST_SESSIONID (256)
#define TOKEN_ALL_ACCESS (983551l)
#define TOKEN_ALL_ACCESS_P (983295l)
#define TOKEN_ASSIGN_PRIMARY (1)
#define TOKEN_DUPLICATE (2)
#define TOKEN_EXECUTE (131072l)
#define TOKEN_IMPERSONATE (4)
#define TOKEN_MANDATORY_POLICY_NEW_PROCESS_MIN (2)
#define TOKEN_MANDATORY_POLICY_NO_WRITE_UP (1)
#define TOKEN_MANDATORY_POLICY_OFF (0)
#define TOKEN_MANDATORY_POLICY_VALID_MASK (3)
#define TOKEN_QUERY (8)
#define TOKEN_QUERY_SOURCE (16)
#define TOKEN_READ (131080l)
#define TOKEN_SOURCE_LENGTH (8)
#define TOKEN_WRITE (131296l)
#define TPM_BOTTOMALIGN __MSABI_LONG ( 0x0020 )
#define TPM_CENTERALIGN __MSABI_LONG ( 0x0004 )
#define TPM_HORIZONTAL __MSABI_LONG ( 0x0000 )
#define TPM_HORNEGANIMATION __MSABI_LONG ( 0x0800 )
#define TPM_HORPOSANIMATION __MSABI_LONG ( 0x0400 )
#define TPM_LAYOUTRTL __MSABI_LONG ( 0x8000 )
#define TPM_LEFTALIGN __MSABI_LONG ( 0x0000 )
#define TPM_LEFTBUTTON __MSABI_LONG ( 0x0000 )
#define TPM_NOANIMATION __MSABI_LONG ( 0x4000 )
#define TPM_NONOTIFY __MSABI_LONG ( 0x0080 )
#define TPM_RECURSE __MSABI_LONG ( 0x0001 )
#define TPM_RETURNCMD __MSABI_LONG ( 0x0100 )
#define TPM_RIGHTALIGN __MSABI_LONG ( 0x0008 )
#define TPM_RIGHTBUTTON __MSABI_LONG ( 0x0002 )
#define TPM_TOPALIGN __MSABI_LONG ( 0x0000 )
#define TPM_VCENTERALIGN __MSABI_LONG ( 0x0010 )
#define TPM_VERNEGANIMATION __MSABI_LONG ( 0x2000 )
#define TPM_VERPOSANIMATION __MSABI_LONG ( 0x1000 )
#define TPM_VERTICAL __MSABI_LONG ( 0x0040 )
#define TRANSACTIONMANAGER_ALL_ACCESS (983103l)
#define TRANSACTIONMANAGER_BIND_TRANSACTION (32)
#define TRANSACTIONMANAGER_CREATE_RM (16)
#define TRANSACTIONMANAGER_GENERIC_EXECUTE (131072l)
#define TRANSACTIONMANAGER_GENERIC_READ (131073l)
#define TRANSACTIONMANAGER_GENERIC_WRITE (131102l)
#define TRANSACTIONMANAGER_OBJECT_NAME_LENGTH_IN_BYTES ( sizeof ( TRANSACTIONMANAGER_OBJECT_PATH ) + ( 38 * sizeof ( WCHAR ) ) )
#define TRANSACTIONMANAGER_OBJECT_PATH "\\TransactionManager\\"
#define TRANSACTIONMANAGER_QUERY_INFORMATION (1)
#define TRANSACTIONMANAGER_RECOVER (4)
#define TRANSACTIONMANAGER_RENAME (8)
#define TRANSACTIONMANAGER_SET_INFORMATION (2)
#define TRANSACTION_ALL_ACCESS (2031679l)
#define TRANSACTION_COMMIT (8)
#define TRANSACTION_DO_NOT_PROMOTE (1)
#define TRANSACTION_ENLIST (4)
#define TRANSACTION_GENERIC_EXECUTE (1179672l)
#define TRANSACTION_GENERIC_READ (1179649l)
#define TRANSACTION_GENERIC_WRITE (1179710l)
#define TRANSACTION_MANAGER_COMMIT_DEFAULT (0)
#define TRANSACTION_MANAGER_COMMIT_LOWEST (8)
#define TRANSACTION_MANAGER_COMMIT_SYSTEM_HIVES (4)
#define TRANSACTION_MANAGER_COMMIT_SYSTEM_VOLUME (2)
#define TRANSACTION_MANAGER_CORRUPT_FOR_PROGRESS (32)
#define TRANSACTION_MANAGER_CORRUPT_FOR_RECOVERY (16)
#define TRANSACTION_MANAGER_MAXIMUM_OPTION (63)
#define TRANSACTION_MANAGER_VOLATILE (1)
#define TRANSACTION_MAXIMUM_OPTION (1)
#define TRANSACTION_NOTIFICATION_TM_ONLINE_FLAG_IS_CLUSTERED (1)
#define TRANSACTION_NOTIFY_COMMIT (4)
#define TRANSACTION_NOTIFY_COMMIT_COMPLETE (64)
#define TRANSACTION_NOTIFY_COMMIT_FINALIZE (1073741824)
#define TRANSACTION_NOTIFY_COMMIT_REQUEST (67108864)
#define TRANSACTION_NOTIFY_DELEGATE_COMMIT (1024)
#define TRANSACTION_NOTIFY_ENLIST_MASK (262144)
#define TRANSACTION_NOTIFY_ENLIST_PREPREPARE (4096)
#define TRANSACTION_NOTIFY_INDOUBT (16384)
#define TRANSACTION_NOTIFY_LAST_RECOVER (8192)
#define TRANSACTION_NOTIFY_MARSHAL (131072)
#define TRANSACTION_NOTIFY_MASK (1073741823)
#define TRANSACTION_NOTIFY_PREPARE (2)
#define TRANSACTION_NOTIFY_PREPARE_COMPLETE (32)
#define TRANSACTION_NOTIFY_PREPREPARE (1)
#define TRANSACTION_NOTIFY_PREPREPARE_COMPLETE (16)
#define TRANSACTION_NOTIFY_PROMOTE (134217728)
#define TRANSACTION_NOTIFY_PROMOTE_NEW (268435456)
#define TRANSACTION_NOTIFY_PROPAGATE_PULL (32768)
#define TRANSACTION_NOTIFY_PROPAGATE_PUSH (65536)
#define TRANSACTION_NOTIFY_RECOVER (256)
#define TRANSACTION_NOTIFY_RECOVER_QUERY (2048)
#define TRANSACTION_NOTIFY_REQUEST_OUTCOME (536870912)
#define TRANSACTION_NOTIFY_RM_DISCONNECTED (16777216)
#define TRANSACTION_NOTIFY_ROLLBACK (8)
#define TRANSACTION_NOTIFY_ROLLBACK_COMPLETE (128)
#define TRANSACTION_NOTIFY_SINGLE_PHASE_COMMIT (512)
#define TRANSACTION_NOTIFY_TM_ONLINE (33554432)
#define TRANSACTION_OBJECT_NAME_LENGTH_IN_BYTES ( sizeof ( TRANSACTION_OBJECT_PATH ) + ( 38 * sizeof ( WCHAR ) ) )
#define TRANSACTION_OBJECT_PATH "\\Transaction\\"
#define TRANSACTION_PROPAGATE (32)
#define TRANSACTION_QUERY_INFORMATION (1)
#define TRANSACTION_RESOURCE_MANAGER_RIGHTS (1179703l)
#define TRANSACTION_RIGHT_RESERVED1 (64)
#define TRANSACTION_ROLLBACK (16)
#define TRANSACTION_SET_INFORMATION (2)
#define TRANSFORM_CTM (4107)
#define TRANSPARENT (1)
#define TRANSPORT_TYPE_CN (1)
#define TRANSPORT_TYPE_DG (2)
#define TRANSPORT_TYPE_LPC (4)
#define TRANSPORT_TYPE_WMSG (8)
#define TRUE (1)
#define TRUETYPE_FONTTYPE (4)
#define TRUNCATE_EXISTING (5)
#define TRUST_E_ACTION_UNKNOWN _HRESULT_TYPEDEF_ ( 0x800B0002 )
#define TRUST_E_BAD_DIGEST _HRESULT_TYPEDEF_ ( 0x80096010 )
#define TRUST_E_BASIC_CONSTRAINTS _HRESULT_TYPEDEF_ ( 0x80096019 )
#define TRUST_E_CERT_SIGNATURE _HRESULT_TYPEDEF_ ( 0x80096004 )
#define TRUST_E_COUNTER_SIGNER _HRESULT_TYPEDEF_ ( 0x80096003 )
#define TRUST_E_EXPLICIT_DISTRUST _HRESULT_TYPEDEF_ ( 0x800B0111 )
#define TRUST_E_FAIL _HRESULT_TYPEDEF_ ( 0x800B010B )
#define TRUST_E_FINANCIAL_CRITERIA _HRESULT_TYPEDEF_ ( 0x8009601E )
#define TRUST_E_NOSIGNATURE _HRESULT_TYPEDEF_ ( 0x800B0100 )
#define TRUST_E_NO_SIGNER_CERT _HRESULT_TYPEDEF_ ( 0x80096002 )
#define TRUST_E_PROVIDER_UNKNOWN _HRESULT_TYPEDEF_ ( 0x800B0001 )
#define TRUST_E_SUBJECT_FORM_UNKNOWN _HRESULT_TYPEDEF_ ( 0x800B0003 )
#define TRUST_E_SUBJECT_NOT_TRUSTED _HRESULT_TYPEDEF_ ( 0x800B0004 )
#define TRUST_E_SYSTEM_ERROR _HRESULT_TYPEDEF_ ( 0x80096001 )
#define TRUST_E_TIME_STAMP _HRESULT_TYPEDEF_ ( 0x80096005 )
#define TT_AVAILABLE (1)
#define TT_ENABLED (2)
#define TT_POLYGON_TYPE (24)
#define TT_PRIM_CSPLINE (3)
#define TT_PRIM_LINE (1)
#define TT_PRIM_QSPLINE (2)
#define TURKISH_CHARSET (162)
#define TWOSTOPBITS (2)
#define TYPE_ALIGNMENT(t) FIELD_OFFSET ( struct { char x ; t test ; } , test )
#define TYPE_E_AMBIGUOUSNAME _HRESULT_TYPEDEF_ ( 0x8002802C )
#define TYPE_E_BADMODULEKIND _HRESULT_TYPEDEF_ ( 0x800288BD )
#define TYPE_E_BUFFERTOOSMALL _HRESULT_TYPEDEF_ ( 0x80028016 )
#define TYPE_E_CANTCREATETMPFILE _HRESULT_TYPEDEF_ ( 0x80028CA3 )
#define TYPE_E_CANTLOADLIBRARY _HRESULT_TYPEDEF_ ( 0x80029C4A )
#define TYPE_E_CIRCULARTYPE _HRESULT_TYPEDEF_ ( 0x80029C84 )
#define TYPE_E_DLLFUNCTIONNOTFOUND _HRESULT_TYPEDEF_ ( 0x8002802F )
#define TYPE_E_DUPLICATEID _HRESULT_TYPEDEF_ ( 0x800288C6 )
#define TYPE_E_ELEMENTNOTFOUND _HRESULT_TYPEDEF_ ( 0x8002802B )
#define TYPE_E_FIELDNOTFOUND _HRESULT_TYPEDEF_ ( 0x80028017 )
#define TYPE_E_INCONSISTENTPROPFUNCS _HRESULT_TYPEDEF_ ( 0x80029C83 )
#define TYPE_E_INVALIDID _HRESULT_TYPEDEF_ ( 0x800288CF )
#define TYPE_E_INVALIDSTATE _HRESULT_TYPEDEF_ ( 0x80028029 )
#define TYPE_E_INVDATAREAD _HRESULT_TYPEDEF_ ( 0x80028018 )
#define TYPE_E_IOERROR _HRESULT_TYPEDEF_ ( 0x80028CA2 )
#define TYPE_E_LIBNOTREGISTERED _HRESULT_TYPEDEF_ ( 0x8002801D )
#define TYPE_E_NAMECONFLICT _HRESULT_TYPEDEF_ ( 0x8002802D )
#define TYPE_E_OUTOFBOUNDS _HRESULT_TYPEDEF_ ( 0x80028CA1 )
#define TYPE_E_QUALIFIEDNAMEDISALLOWED _HRESULT_TYPEDEF_ ( 0x80028028 )
#define TYPE_E_REGISTRYACCESS _HRESULT_TYPEDEF_ ( 0x8002801C )
#define TYPE_E_SIZETOOBIG _HRESULT_TYPEDEF_ ( 0x800288C5 )
#define TYPE_E_TYPEMISMATCH _HRESULT_TYPEDEF_ ( 0x80028CA0 )
#define TYPE_E_UNDEFINEDTYPE _HRESULT_TYPEDEF_ ( 0x80028027 )
#define TYPE_E_UNKNOWNLCID _HRESULT_TYPEDEF_ ( 0x8002802E )
#define TYPE_E_UNSUPFORMAT _HRESULT_TYPEDEF_ ( 0x80028019 )
#define TYPE_E_WRONGTYPEKIND _HRESULT_TYPEDEF_ ( 0x8002802A )
#define TabbedTextOut __MINGW_NAME_AW ( TabbedTextOut )
#define TapeClassGuid GUID_DEVINTERFACE_TAPE
#define TextOut __MINGW_NAME_AW ( TextOut )
#define TranslateAccelerator __MINGW_NAME_AW ( TranslateAccelerator )
#define UILANGUAGE_ENUMPROC UILANGUAGE_ENUMPROCA
#define UISF_ACTIVE (4)
#define UISF_HIDEACCEL (2)
#define UISF_HIDEFOCUS (1)
#define UIS_CLEAR (2)
#define UIS_INITIALIZE (3)
#define UIS_SET (1)
#define UI_CAP_2700 (1)
#define UI_CAP_ROT90 (2)
#define UI_CAP_ROTANY (4)
#define UInt32x32To64(a, b) ( ( ( ULONGLONG ) ( ( unsigned int ) ( a ) ) ) * ( ( ULONGLONG ) ( ( unsigned int ) ( b ) ) ) )
#define ULW_ALPHA (2)
#define ULW_COLORKEY (1)
#define ULW_EX_NORESIZE (8)
#define ULW_OPAQUE (4)
#define UNALIGNED __unaligned
#define UNALIGNED64 __unaligned
#define UNDEFINE_ALTERNATE (13)
#define UNDEFINE_PRIMARY (12)
#define UNICODE_NOCHAR (65535)
#define UNICODE_NULL ( ( WCHAR ) 0 )
#define UNICODE_STRING_MAX_BYTES ( ( WORD ) 65534 )
#define UNICODE_STRING_MAX_CHARS (32767)
#define UNIQUE_NAME (0)
#define UNIVERSAL_NAME_INFO_LEVEL (1)
#define UNLOAD_DLL_DEBUG_EVENT (7)
#define UNLOCK_ELEMENT (1)
#define UNPROTECTED_DACL_SECURITY_INFORMATION (536870912l)
#define UNPROTECTED_SACL_SECURITY_INFORMATION (268435456l)
#define UNRECOVERED_READS_VALID (8)
#define UNRECOVERED_WRITES_VALID (2)
#define UNREFERENCED_LOCAL_VARIABLE(V) { ( V ) = ( V ) ; }
#define UNREFERENCED_PARAMETER(P) { ( P ) = ( P ) ; }
#define UNWIND_HISTORY_TABLE_GLOBAL (1)
#define UNWIND_HISTORY_TABLE_LOCAL (2)
#define UNWIND_HISTORY_TABLE_NONE (0)
#define UNWIND_HISTORY_TABLE_SIZE (12)
#define UNW_FLAG_CHAININFO (4)
#define UNW_FLAG_EHANDLER (1)
#define UNW_FLAG_NHANDLER (0)
#define UNW_FLAG_UHANDLER (2)
#define UOI_FLAGS (1)
#define UOI_NAME (2)
#define UOI_TYPE (3)
#define UOI_USER_SID (4)
#define UPOINTER_32 POINTER_UNSIGNED POINTER_32
#define URL_OID_CERTIFICATE_CRL_DIST_POINT ( ( LPCSTR ) 2 )
#define URL_OID_CERTIFICATE_CRL_DIST_POINT_AND_OCSP ( ( LPCSTR ) 11 )
#define URL_OID_CERTIFICATE_FRESHEST_CRL ( ( LPCSTR ) 6 )
#define URL_OID_CERTIFICATE_ISSUER ( ( LPCSTR ) 1 )
#define URL_OID_CERTIFICATE_OCSP ( ( LPCSTR ) 9 )
#define URL_OID_CERTIFICATE_OCSP_AND_CRL_DIST_POINT ( ( LPCSTR ) 10 )
#define URL_OID_CERTIFICATE_ONLY_OCSP ( ( LPCSTR ) 13 )
#define URL_OID_CRL_FRESHEST_CRL ( ( LPCSTR ) 7 )
#define URL_OID_CRL_ISSUER ( ( LPCSTR ) 5 )
#define URL_OID_CROSS_CERT_DIST_POINT ( ( LPCSTR ) 8 )
#define URL_OID_CROSS_CERT_SUBJECT_INFO_ACCESS ( ( LPCSTR ) 12 )
#define URL_OID_CTL_ISSUER ( ( LPCSTR ) 3 )
#define URL_OID_CTL_NEXT_UPDATE ( ( LPCSTR ) 4 )
#define URL_OID_GET_OBJECT_URL_FUNC "UrlDllGetObjectUrl"
#define USAGE_MATCH_TYPE_AND (0)
#define USAGE_MATCH_TYPE_OR (1)
#define USER_CALL_AUX_MASK(f) ( ( f ) & 0xff00 )
#define USER_CALL_CTXT_MASK(f) ( ( f ) & 0x00ff )
#define USER_CALL_IS_ASYNC (256)
#define USER_CALL_NEW_CORRELATION_DESC (512)
#define USER_MARSHAL_CB_SIGNATURE (85)
#define USER_MARSHAL_FC_BYTE (1)
#define USER_MARSHAL_FC_CHAR (2)
#define USER_MARSHAL_FC_DOUBLE (12)
#define USER_MARSHAL_FC_FLOAT (10)
#define USER_MARSHAL_FC_HYPER (11)
#define USER_MARSHAL_FC_LONG (8)
#define USER_MARSHAL_FC_SHORT (6)
#define USER_MARSHAL_FC_SMALL (3)
#define USER_MARSHAL_FC_ULONG (9)
#define USER_MARSHAL_FC_USHORT (7)
#define USER_MARSHAL_FC_USMALL (4)
#define USER_MARSHAL_FC_WCHAR (5)
#define USER_TIMER_MAXIMUM (2147483647)
#define USER_TIMER_MINIMUM (10)
#define USN_DELETE_FLAG_DELETE (1)
#define USN_DELETE_FLAG_NOTIFY (2)
#define USN_DELETE_VALID_FLAGS (3)
#define USN_PAGE_SIZE (4096)
#define USN_REASON_BASIC_INFO_CHANGE (32768)
#define USN_REASON_CLOSE (2147483648u)
#define USN_REASON_COMPRESSION_CHANGE (131072)
#define USN_REASON_DATA_EXTEND (2)
#define USN_REASON_DATA_OVERWRITE (1)
#define USN_REASON_DATA_TRUNCATION (4)
#define USN_REASON_EA_CHANGE (1024)
#define USN_REASON_ENCRYPTION_CHANGE (262144)
#define USN_REASON_FILE_CREATE (256)
#define USN_REASON_FILE_DELETE (512)
#define USN_REASON_HARD_LINK_CHANGE (65536)
#define USN_REASON_INDEXABLE_CHANGE (16384)
#define USN_REASON_NAMED_DATA_EXTEND (32)
#define USN_REASON_NAMED_DATA_OVERWRITE (16)
#define USN_REASON_NAMED_DATA_TRUNCATION (64)
#define USN_REASON_OBJECT_ID_CHANGE (524288)
#define USN_REASON_RENAME_NEW_NAME (8192)
#define USN_REASON_RENAME_OLD_NAME (4096)
#define USN_REASON_REPARSE_POINT_CHANGE (1048576)
#define USN_REASON_SECURITY_CHANGE (2048)
#define USN_REASON_STREAM_CHANGE (2097152)
#define USN_SOURCE_AUXILIARY_DATA (2)
#define USN_SOURCE_DATA_MANAGEMENT (1)
#define USN_SOURCE_REPLICATION_MANAGEMENT (4)
#define UUID_DEFINED 
#define UintToPtr(ui) UIntToPtr ( ui )
#define UlongToHandle(ul) ULongToHandle ( ul )
#define UlongToPtr(ul) ULongToPtr ( ul )
#define UnlockResource(hResData) ( { ( VOID ) ( hResData ) ; 0 ; } )
#define UnlockSegment(w) GlobalUnfix ( ( HANDLE ) ( w ) )
#define UnregisterClass __MINGW_NAME_AW ( UnregisterClass )
#define UnsignedMultiply128 _umul128
#define UnsignedMultiplyHigh __umulh
#define UpdateICMRegKey __MINGW_NAME_AW ( UpdateICMRegKey )
#define UpdateResource __MINGW_NAME_AW ( UpdateResource )
#define UuidFromString __MINGW_NAME_AW ( UuidFromString )
#define UuidToString __MINGW_NAME_AW ( UuidToString )
#define VALID_IMPERSONATION_LEVEL(L) ( ( ( L ) >= SECURITY_MIN_IMPERSONATION_LEVEL ) && ( ( L ) <= SECURITY_MAX_IMPERSONATION_LEVEL ) )
#define VALID_INHERIT_FLAGS (31)
#define VALID_NTFT (192)
#define VARIABLE_PITCH (2)
#define VARIANT_FALSE ( ( VARIANT_BOOL ) 0 )
#define VARIANT_TRUE (-1)
#define VENDOR_ID_LENGTH (8)
#define VERIFIER_STOP(Code, Msg, P1, S1, P2, S2, P3, S3, P4, S4) { RtlApplicationVerifierStop ( ( Code ) , ( Msg ) , ( ULONG_PTR ) ( P1 ) , ( S1 ) , ( ULONG_PTR ) ( P2 ) , ( S2 ) , ( ULONG_PTR ) ( P3 ) , ( S3 ) , ( ULONG_PTR ) ( P4 ) , ( S4 ) ) ; }
#define VERTRES (10)
#define VERTSIZE (6)
#define VER_AND (6)
#define VER_BUILDNUMBER (4)
#define VER_CONDITION_MASK (7)
#define VER_EQUAL (1)
#define VER_GREATER (2)
#define VER_GREATER_EQUAL (3)
#define VER_H 
#define VER_LESS (4)
#define VER_LESS_EQUAL (5)
#define VER_MAJORVERSION (2)
#define VER_MINORVERSION (1)
#define VER_NT_DOMAIN_CONTROLLER (2)
#define VER_NT_SERVER (3)
#define VER_NT_WORKSTATION (1)
#define VER_NUM_BITS_PER_CONDITION_MASK (3)
#define VER_OR (7)
#define VER_PLATFORMID (8)
#define VER_PLATFORM_WIN32_NT (2)
#define VER_PLATFORM_WIN32_WINDOWS (1)
#define VER_PLATFORM_WIN32s (0)
#define VER_PRODUCT_TYPE (128)
#define VER_SERVER_NT (2147483648u)
#define VER_SERVICEPACKMAJOR (32)
#define VER_SERVICEPACKMINOR (16)
#define VER_SET_CONDITION(_m_, _t_, _c_) ( ( _m_ ) = VerSetConditionMask ( ( _m_ ) , ( _t_ ) , ( _c_ ) ) )
#define VER_SUITENAME (64)
#define VER_SUITE_BACKOFFICE (4)
#define VER_SUITE_BLADE (1024)
#define VER_SUITE_COMMUNICATIONS (8)
#define VER_SUITE_COMPUTE_SERVER (16384)
#define VER_SUITE_DATACENTER (128)
#define VER_SUITE_EMBEDDEDNT (64)
#define VER_SUITE_EMBEDDED_RESTRICTED (2048)
#define VER_SUITE_ENTERPRISE (2)
#define VER_SUITE_PERSONAL (512)
#define VER_SUITE_SECURITY_APPLIANCE (4096)
#define VER_SUITE_SINGLEUSERTS (256)
#define VER_SUITE_SMALLBUSINESS (1)
#define VER_SUITE_SMALLBUSINESS_RESTRICTED (32)
#define VER_SUITE_STORAGE_SERVER (8192)
#define VER_SUITE_TERMINAL (16)
#define VER_SUITE_WH_SERVER (32768)
#define VER_WORKSTATION_NT (1073741824)
#define VFFF_ISSHAREDFILE (1)
#define VFF_BUFFTOOSMALL (4)
#define VFF_CURNEDEST (1)
#define VFF_FILEINUSE (2)
#define VFT2_DRV_COMM __MSABI_LONG ( 0x0000000A )
#define VFT2_DRV_DISPLAY __MSABI_LONG ( 0x00000004 )
#define VFT2_DRV_INPUTMETHOD __MSABI_LONG ( 0x0000000B )
#define VFT2_DRV_INSTALLABLE __MSABI_LONG ( 0x00000008 )
#define VFT2_DRV_KEYBOARD __MSABI_LONG ( 0x00000002 )
#define VFT2_DRV_LANGUAGE __MSABI_LONG ( 0x00000003 )
#define VFT2_DRV_MOUSE __MSABI_LONG ( 0x00000005 )
#define VFT2_DRV_NETWORK __MSABI_LONG ( 0x00000006 )
#define VFT2_DRV_PRINTER __MSABI_LONG ( 0x00000001 )
#define VFT2_DRV_SOUND __MSABI_LONG ( 0x00000009 )
#define VFT2_DRV_SYSTEM __MSABI_LONG ( 0x00000007 )
#define VFT2_DRV_VERSIONED_PRINTER __MSABI_LONG ( 0x0000000C )
#define VFT2_FONT_RASTER __MSABI_LONG ( 0x00000001 )
#define VFT2_FONT_TRUETYPE __MSABI_LONG ( 0x00000003 )
#define VFT2_FONT_VECTOR __MSABI_LONG ( 0x00000002 )
#define VFT2_UNKNOWN __MSABI_LONG ( 0x00000000 )
#define VFT_APP __MSABI_LONG ( 0x00000001 )
#define VFT_DLL __MSABI_LONG ( 0x00000002 )
#define VFT_DRV __MSABI_LONG ( 0x00000003 )
#define VFT_FONT __MSABI_LONG ( 0x00000004 )
#define VFT_STATIC_LIB __MSABI_LONG ( 0x00000007 )
#define VFT_UNKNOWN __MSABI_LONG ( 0x00000000 )
#define VFT_VXD __MSABI_LONG ( 0x00000005 )
#define VIETNAMESE_CHARSET (163)
#define VIEW_E_DRAW _HRESULT_TYPEDEF_ ( 0x80040140 )
#define VIEW_E_FIRST __MSABI_LONG ( 0x80040140 )
#define VIEW_E_LAST __MSABI_LONG ( 0x8004014F )
#define VIEW_S_ALREADY_FROZEN _HRESULT_TYPEDEF_ ( 0x00040140 )
#define VIEW_S_FIRST __MSABI_LONG ( 0x00040140 )
#define VIEW_S_LAST __MSABI_LONG ( 0x0004014F )
#define VIFF_DONTDELETEOLD (2)
#define VIFF_FORCEINSTALL (1)
#define VIF_ACCESSVIOLATION __MSABI_LONG ( 0x00000200 )
#define VIF_BUFFTOOSMALL __MSABI_LONG ( 0x00040000 )
#define VIF_CANNOTCREATE __MSABI_LONG ( 0x00000800 )
#define VIF_CANNOTDELETE __MSABI_LONG ( 0x00001000 )
#define VIF_CANNOTDELETECUR __MSABI_LONG ( 0x00004000 )
#define VIF_CANNOTLOADCABINET __MSABI_LONG ( 0x00100000 )
#define VIF_CANNOTLOADLZ32 __MSABI_LONG ( 0x00080000 )
#define VIF_CANNOTREADDST __MSABI_LONG ( 0x00020000 )
#define VIF_CANNOTREADSRC __MSABI_LONG ( 0x00010000 )
#define VIF_CANNOTRENAME __MSABI_LONG ( 0x00002000 )
#define VIF_DIFFCODEPG __MSABI_LONG ( 0x00000010 )
#define VIF_DIFFLANG __MSABI_LONG ( 0x00000008 )
#define VIF_DIFFTYPE __MSABI_LONG ( 0x00000020 )
#define VIF_FILEINUSE __MSABI_LONG ( 0x00000080 )
#define VIF_MISMATCH __MSABI_LONG ( 0x00000002 )
#define VIF_OUTOFMEMORY __MSABI_LONG ( 0x00008000 )
#define VIF_OUTOFSPACE __MSABI_LONG ( 0x00000100 )
#define VIF_SHARINGVIOLATION __MSABI_LONG ( 0x00000400 )
#define VIF_SRCOLD __MSABI_LONG ( 0x00000004 )
#define VIF_TEMPFILE __MSABI_LONG ( 0x00000001 )
#define VIF_WRITEPROT __MSABI_LONG ( 0x00000040 )
#define VK_ACCEPT (30)
#define VK_ADD (107)
#define VK_APPS (93)
#define VK_ATTN (246)
#define VK_BACK (8)
#define VK_BROWSER_BACK (166)
#define VK_BROWSER_FAVORITES (171)
#define VK_BROWSER_FORWARD (167)
#define VK_BROWSER_HOME (172)
#define VK_BROWSER_REFRESH (168)
#define VK_BROWSER_SEARCH (170)
#define VK_BROWSER_STOP (169)
#define VK_CANCEL (3)
#define VK_CAPITAL (20)
#define VK_CLEAR (12)
#define VK_CONTROL (17)
#define VK_CONVERT (28)
#define VK_CRSEL (247)
#define VK_DECIMAL (110)
#define VK_DELETE (46)
#define VK_DIVIDE (111)
#define VK_DOWN (40)
#define VK_END (35)
#define VK_EREOF (249)
#define VK_ESCAPE (27)
#define VK_EXECUTE (43)
#define VK_EXSEL (248)
#define VK_F1 (112)
#define VK_F10 (121)
#define VK_F11 (122)
#define VK_F12 (123)
#define VK_F13 (124)
#define VK_F14 (125)
#define VK_F15 (126)
#define VK_F16 (127)
#define VK_F17 (128)
#define VK_F18 (129)
#define VK_F19 (130)
#define VK_F2 (113)
#define VK_F20 (131)
#define VK_F21 (132)
#define VK_F22 (133)
#define VK_F23 (134)
#define VK_F24 (135)
#define VK_F3 (114)
#define VK_F4 (115)
#define VK_F5 (116)
#define VK_F6 (117)
#define VK_F7 (118)
#define VK_F8 (119)
#define VK_F9 (120)
#define VK_FINAL (24)
#define VK_HANGEUL (21)
#define VK_HANGUL (21)
#define VK_HANJA (25)
#define VK_HELP (47)
#define VK_HOME (36)
#define VK_ICO_00 (228)
#define VK_ICO_CLEAR (230)
#define VK_ICO_HELP (227)
#define VK_INSERT (45)
#define VK_JUNJA (23)
#define VK_KANA (21)
#define VK_KANJI (25)
#define VK_LAUNCH_APP1 (182)
#define VK_LAUNCH_APP2 (183)
#define VK_LAUNCH_MAIL (180)
#define VK_LAUNCH_MEDIA_SELECT (181)
#define VK_LBUTTON (1)
#define VK_LCONTROL (162)
#define VK_LEFT (37)
#define VK_LMENU (164)
#define VK_LSHIFT (160)
#define VK_LWIN (91)
#define VK_MBUTTON (4)
#define VK_MEDIA_NEXT_TRACK (176)
#define VK_MEDIA_PLAY_PAUSE (179)
#define VK_MEDIA_PREV_TRACK (177)
#define VK_MEDIA_STOP (178)
#define VK_MENU (18)
#define VK_MODECHANGE (31)
#define VK_MULTIPLY (106)
#define VK_NEXT (34)
#define VK_NONAME (252)
#define VK_NONCONVERT (29)
#define VK_NUMLOCK (144)
#define VK_NUMPAD0 (96)
#define VK_NUMPAD1 (97)
#define VK_NUMPAD2 (98)
#define VK_NUMPAD3 (99)
#define VK_NUMPAD4 (100)
#define VK_NUMPAD5 (101)
#define VK_NUMPAD6 (102)
#define VK_NUMPAD7 (103)
#define VK_NUMPAD8 (104)
#define VK_NUMPAD9 (105)
#define VK_OEM_1 (186)
#define VK_OEM_102 (226)
#define VK_OEM_2 (191)
#define VK_OEM_3 (192)
#define VK_OEM_4 (219)
#define VK_OEM_5 (220)
#define VK_OEM_6 (221)
#define VK_OEM_7 (222)
#define VK_OEM_8 (223)
#define VK_OEM_ATTN (240)
#define VK_OEM_AUTO (243)
#define VK_OEM_AX (225)
#define VK_OEM_BACKTAB (245)
#define VK_OEM_CLEAR (254)
#define VK_OEM_COMMA (188)
#define VK_OEM_COPY (242)
#define VK_OEM_CUSEL (239)
#define VK_OEM_ENLW (244)
#define VK_OEM_FINISH (241)
#define VK_OEM_FJ_JISHO (146)
#define VK_OEM_FJ_LOYA (149)
#define VK_OEM_FJ_MASSHOU (147)
#define VK_OEM_FJ_ROYA (150)
#define VK_OEM_FJ_TOUROKU (148)
#define VK_OEM_JUMP (234)
#define VK_OEM_MINUS (189)
#define VK_OEM_NEC_EQUAL (146)
#define VK_OEM_PA1 (235)
#define VK_OEM_PA2 (236)
#define VK_OEM_PA3 (237)
#define VK_OEM_PERIOD (190)
#define VK_OEM_PLUS (187)
#define VK_OEM_RESET (233)
#define VK_OEM_WSCTRL (238)
#define VK_PA1 (253)
#define VK_PACKET (231)
#define VK_PAUSE (19)
#define VK_PLAY (250)
#define VK_PRINT (42)
#define VK_PRIOR (33)
#define VK_PROCESSKEY (229)
#define VK_RBUTTON (2)
#define VK_RCONTROL (163)
#define VK_RETURN (13)
#define VK_RIGHT (39)
#define VK_RMENU (165)
#define VK_RSHIFT (161)
#define VK_RWIN (92)
#define VK_SCROLL (145)
#define VK_SELECT (41)
#define VK_SEPARATOR (108)
#define VK_SHIFT (16)
#define VK_SLEEP (95)
#define VK_SNAPSHOT (44)
#define VK_SPACE (32)
#define VK_SUBTRACT (109)
#define VK_TAB (9)
#define VK_UP (38)
#define VK_VOLUME_DOWN (174)
#define VK_VOLUME_MUTE (173)
#define VK_VOLUME_UP (175)
#define VK_XBUTTON1 (5)
#define VK_XBUTTON2 (6)
#define VK_ZOOM (251)
#define VOID void
#define VOLUME_IS_DIRTY (1)
#define VOLUME_NAME_DOS (0)
#define VOLUME_NAME_GUID (1)
#define VOLUME_NAME_NONE (4)
#define VOLUME_NAME_NT (2)
#define VOLUME_UPGRADE_SCHEDULED (2)
#define VOS_DOS __MSABI_LONG ( 0x00010000 )
#define VOS_DOS_WINDOWS16 __MSABI_LONG ( 0x00010001 )
#define VOS_DOS_WINDOWS32 __MSABI_LONG ( 0x00010004 )
#define VOS_NT __MSABI_LONG ( 0x00040000 )
#define VOS_NT_WINDOWS32 __MSABI_LONG ( 0x00040004 )
#define VOS_OS216 __MSABI_LONG ( 0x00020000 )
#define VOS_OS216_PM16 __MSABI_LONG ( 0x00020002 )
#define VOS_OS232 __MSABI_LONG ( 0x00030000 )
#define VOS_OS232_PM32 __MSABI_LONG ( 0x00030003 )
#define VOS_UNKNOWN __MSABI_LONG ( 0x00000000 )
#define VOS_WINCE __MSABI_LONG ( 0x00050000 )
#define VOS__BASE __MSABI_LONG ( 0x00000000 )
#define VOS__PM16 __MSABI_LONG ( 0x00000002 )
#define VOS__PM32 __MSABI_LONG ( 0x00000003 )
#define VOS__WINDOWS16 __MSABI_LONG ( 0x00000001 )
#define VOS__WINDOWS32 __MSABI_LONG ( 0x00000004 )
#define VP_COMMAND_GET (1)
#define VP_COMMAND_SET (2)
#define VP_CP_CMD_ACTIVATE (1)
#define VP_CP_CMD_CHANGE (4)
#define VP_CP_CMD_DEACTIVATE (2)
#define VP_CP_TYPE_APS_TRIGGER (1)
#define VP_CP_TYPE_MACROVISION (2)
#define VP_FLAGS_BRIGHTNESS (64)
#define VP_FLAGS_CONTRAST (128)
#define VP_FLAGS_COPYPROTECT (256)
#define VP_FLAGS_FLICKER (4)
#define VP_FLAGS_MAX_UNSCALED (16)
#define VP_FLAGS_OVERSCAN (8)
#define VP_FLAGS_POSITION (32)
#define VP_FLAGS_TV_MODE (1)
#define VP_FLAGS_TV_STANDARD (2)
#define VP_MODE_TV_PLAYBACK (2)
#define VP_MODE_WIN_GRAPHICS (1)
#define VP_TV_STANDARD_NTSC_433 (65536)
#define VP_TV_STANDARD_NTSC_M (1)
#define VP_TV_STANDARD_NTSC_M_J (2)
#define VP_TV_STANDARD_PAL_60 (262144)
#define VP_TV_STANDARD_PAL_B (4)
#define VP_TV_STANDARD_PAL_D (8)
#define VP_TV_STANDARD_PAL_G (131072)
#define VP_TV_STANDARD_PAL_H (16)
#define VP_TV_STANDARD_PAL_I (32)
#define VP_TV_STANDARD_PAL_M (64)
#define VP_TV_STANDARD_PAL_N (128)
#define VP_TV_STANDARD_SECAM_B (256)
#define VP_TV_STANDARD_SECAM_D (512)
#define VP_TV_STANDARD_SECAM_G (1024)
#define VP_TV_STANDARD_SECAM_H (2048)
#define VP_TV_STANDARD_SECAM_K (4096)
#define VP_TV_STANDARD_SECAM_K1 (8192)
#define VP_TV_STANDARD_SECAM_L (16384)
#define VP_TV_STANDARD_SECAM_L1 (524288)
#define VP_TV_STANDARD_WIN_VGA (32768)
#define VREFRESH (116)
#define VSS_E_BAD_STATE _HRESULT_TYPEDEF_ ( 0x80042301 )
#define VSS_E_CANNOT_REVERT_DISKID _HRESULT_TYPEDEF_ ( 0x800423FE )
#define VSS_E_INVALID_XML_DOCUMENT _HRESULT_TYPEDEF_ ( 0x80042311 )
#define VSS_E_LEGACY_PROVIDER _HRESULT_TYPEDEF_ ( 0x800423F7 )
#define VSS_E_MAXIMUM_NUMBER_OF_SNAPSHOTS_REACHED _HRESULT_TYPEDEF_ ( 0x80042317 )
#define VSS_E_MAXIMUM_NUMBER_OF_VOLUMES_REACHED _HRESULT_TYPEDEF_ ( 0x80042312 )
#define VSS_E_NESTED_VOLUME_LIMIT _HRESULT_TYPEDEF_ ( 0x8004232C )
#define VSS_E_OBJECT_ALREADY_EXISTS _HRESULT_TYPEDEF_ ( 0x8004230D )
#define VSS_E_OBJECT_NOT_FOUND _HRESULT_TYPEDEF_ ( 0x80042308 )
#define VSS_E_PROVIDER_NOT_REGISTERED _HRESULT_TYPEDEF_ ( 0x80042304 )
#define VSS_E_PROVIDER_VETO _HRESULT_TYPEDEF_ ( 0x80042306 )
#define VSS_E_RESYNC_IN_PROGRESS _HRESULT_TYPEDEF_ ( 0x800423FF )
#define VSS_E_SNAPSHOT_NOT_IN_SET _HRESULT_TYPEDEF_ ( 0x8004232B )
#define VSS_E_UNEXPECTED _HRESULT_TYPEDEF_ ( 0x80042302 )
#define VSS_E_UNEXPECTED_PROVIDER_ERROR _HRESULT_TYPEDEF_ ( 0x8004230F )
#define VSS_E_UNSELECTED_VOLUME _HRESULT_TYPEDEF_ ( 0x8004232A )
#define VSS_E_VOLUME_NOT_SUPPORTED _HRESULT_TYPEDEF_ ( 0x8004230C )
#define VSS_E_VOLUME_NOT_SUPPORTED_BY_PROVIDER _HRESULT_TYPEDEF_ ( 0x8004230E )
#define VS_FFI_FILEFLAGSMASK __MSABI_LONG ( 0x0000003F )
#define VS_FFI_SIGNATURE __MSABI_LONG ( 0xFEEF04BD )
#define VS_FFI_STRUCVERSION __MSABI_LONG ( 0x00010000 )
#define VS_FF_DEBUG __MSABI_LONG ( 0x00000001 )
#define VS_FF_INFOINFERRED __MSABI_LONG ( 0x00000010 )
#define VS_FF_PATCHED __MSABI_LONG ( 0x00000004 )
#define VS_FF_PRERELEASE __MSABI_LONG ( 0x00000002 )
#define VS_FF_PRIVATEBUILD __MSABI_LONG ( 0x00000008 )
#define VS_FF_SPECIALBUILD __MSABI_LONG ( 0x00000020 )
#define VS_FILE_INFO RT_VERSION
#define VS_USER_DEFINED (100)
#define VS_VERSION_INFO (1)
#define VTA_BASELINE TA_BASELINE
#define VTA_BOTTOM TA_RIGHT
#define VTA_CENTER TA_CENTER
#define VTA_LEFT TA_BOTTOM
#define VTA_RIGHT TA_TOP
#define VTA_TOP TA_LEFT
#define VerFindFile __MINGW_NAME_AW ( VerFindFile )
#define VerInstallFile __MINGW_NAME_AW ( VerInstallFile )
#define VerLanguageName __MINGW_NAME_AW ( VerLanguageName )
#define VerQueryValue __MINGW_NAME_AW ( VerQueryValue )
#define VerifyVersionInfo __MINGW_NAME_AW ( VerifyVersionInfo )
#define VkKeyScan __MINGW_NAME_AW ( VkKeyScan )
#define VkKeyScanEx __MINGW_NAME_AW ( VkKeyScanEx )
#define VolumeClassGuid GUID_DEVINTERFACE_VOLUME
#define WAIT_ABANDONED ( ( STATUS_ABANDONED_WAIT_0 ) + 0 )
#define WAIT_ABANDONED_0 ( ( STATUS_ABANDONED_WAIT_0 ) + 0 )
#define WAIT_FAILED ( ( DWORD ) 0xffffffff )
#define WAIT_IO_COMPLETION STATUS_USER_APC
#define WAIT_OBJECT_0 ( ( STATUS_WAIT_0 ) + 0 )
#define WAIT_TIMEOUT __MSABI_LONG ( 258 )
#define WARNING_IPSEC_MM_POLICY_PRUNED __MSABI_LONG ( 13024 )
#define WARNING_IPSEC_QM_POLICY_PRUNED __MSABI_LONG ( 13025 )
#define WAVECAPS_LRVOLUME (8)
#define WAVECAPS_PITCH (1)
#define WAVECAPS_PLAYBACKRATE (2)
#define WAVECAPS_SAMPLEACCURATE (32)
#define WAVECAPS_SYNC (16)
#define WAVECAPS_VOLUME (4)
#define WAVERR_BADFORMAT (32)
#define WAVERR_BASE (32)
#define WAVERR_LASTERROR (35)
#define WAVERR_STILLPLAYING (33)
#define WAVERR_SYNC (35)
#define WAVERR_UNPREPARED (34)
#define WAVE_ALLOWSYNC (2)
#define WAVE_FORMAT_1M08 (1)
#define WAVE_FORMAT_1M16 (4)
#define WAVE_FORMAT_1S08 (2)
#define WAVE_FORMAT_1S16 (8)
#define WAVE_FORMAT_2M08 (16)
#define WAVE_FORMAT_2M16 (64)
#define WAVE_FORMAT_2S08 (32)
#define WAVE_FORMAT_2S16 (128)
#define WAVE_FORMAT_44M08 (256)
#define WAVE_FORMAT_44M16 (1024)
#define WAVE_FORMAT_44S08 (512)
#define WAVE_FORMAT_44S16 (2048)
#define WAVE_FORMAT_48M08 (4096)
#define WAVE_FORMAT_48M16 (16384)
#define WAVE_FORMAT_48S08 (8192)
#define WAVE_FORMAT_48S16 (32768)
#define WAVE_FORMAT_4M08 (256)
#define WAVE_FORMAT_4M16 (1024)
#define WAVE_FORMAT_4S08 (512)
#define WAVE_FORMAT_4S16 (2048)
#define WAVE_FORMAT_96M08 (65536)
#define WAVE_FORMAT_96M16 (262144)
#define WAVE_FORMAT_96S08 (131072)
#define WAVE_FORMAT_96S16 (524288)
#define WAVE_FORMAT_DIRECT (8)
#define WAVE_FORMAT_DIRECT_QUERY (9)
#define WAVE_FORMAT_PCM (1)
#define WAVE_FORMAT_QUERY (1)
#define WAVE_INVALIDFORMAT (0)
#define WAVE_MAPPED (4)
#define WAVE_MAPPER (-1)
#define WA_ACTIVE (1)
#define WA_CLICKACTIVE (2)
#define WA_INACTIVE (0)
#define WB_ISDELIMITER (2)
#define WB_LEFT (0)
#define WB_RIGHT (1)
#define WC_COMPOSITECHECK (512)
#define WC_DEFAULTCHAR (64)
#define WC_DIALOG ( MAKEINTATOM ( 0x8002 ) )
#define WC_DISCARDNS (16)
#define WC_NO_BEST_FIT_CHARS (1024)
#define WC_SEPCHARS (32)
#define WDT_INPROC64_CALL (1349805143)
#define WDT_INPROC_CALL (1215587415)
#define WDT_REMOTE_CALL (1383359575)
#define WGL_FONT_LINES (0)
#define WGL_FONT_POLYGONS (1)
#define WGL_SWAPMULTIPLE_MAX (16)
#define WGL_SWAP_MAIN_PLANE (1)
#define WGL_SWAP_OVERLAY1 (2)
#define WGL_SWAP_OVERLAY10 (1024)
#define WGL_SWAP_OVERLAY11 (2048)
#define WGL_SWAP_OVERLAY12 (4096)
#define WGL_SWAP_OVERLAY13 (8192)
#define WGL_SWAP_OVERLAY14 (16384)
#define WGL_SWAP_OVERLAY15 (32768)
#define WGL_SWAP_OVERLAY2 (4)
#define WGL_SWAP_OVERLAY3 (8)
#define WGL_SWAP_OVERLAY4 (16)
#define WGL_SWAP_OVERLAY5 (32)
#define WGL_SWAP_OVERLAY6 (64)
#define WGL_SWAP_OVERLAY7 (128)
#define WGL_SWAP_OVERLAY8 (256)
#define WGL_SWAP_OVERLAY9 (512)
#define WGL_SWAP_UNDERLAY1 (65536)
#define WGL_SWAP_UNDERLAY10 (33554432)
#define WGL_SWAP_UNDERLAY11 (67108864)
#define WGL_SWAP_UNDERLAY12 (134217728)
#define WGL_SWAP_UNDERLAY13 (268435456)
#define WGL_SWAP_UNDERLAY14 (536870912)
#define WGL_SWAP_UNDERLAY15 (1073741824)
#define WGL_SWAP_UNDERLAY2 (131072)
#define WGL_SWAP_UNDERLAY3 (262144)
#define WGL_SWAP_UNDERLAY4 (524288)
#define WGL_SWAP_UNDERLAY5 (1048576)
#define WGL_SWAP_UNDERLAY6 (2097152)
#define WGL_SWAP_UNDERLAY7 (4194304)
#define WGL_SWAP_UNDERLAY8 (8388608)
#define WGL_SWAP_UNDERLAY9 (16777216)
#define WHDR_BEGINLOOP (4)
#define WHDR_DONE (1)
#define WHDR_ENDLOOP (8)
#define WHDR_INQUEUE (16)
#define WHDR_PREPARED (2)
#define WHEEL_DELTA (120)
#define WHEEL_PAGESCROLL (0)
#define WHITENESS ( DWORD ) 0x00FF0062
#define WHITEONBLACK (2)
#define WHITE_BRUSH (0)
#define WHITE_PEN (6)
#define WH_CALLWNDPROC (4)
#define WH_CALLWNDPROCRET (12)
#define WH_CBT (5)
#define WH_DEBUG (9)
#define WH_FOREGROUNDIDLE (11)
#define WH_GETMESSAGE (3)
#define WH_HARDWARE (8)
#define WH_JOURNALPLAYBACK (1)
#define WH_JOURNALRECORD (0)
#define WH_KEYBOARD (2)
#define WH_KEYBOARD_LL (13)
#define WH_MAX (14)
#define WH_MAXHOOK WH_MAX
#define WH_MIN (-1)
#define WH_MINHOOK WH_MIN
#define WH_MOUSE (7)
#define WH_MOUSE_LL (14)
#define WH_MSGFILTER (-1)
#define WH_SHELL (10)
#define WH_SYSMSGFILTER (6)
#define WIM_CLOSE MM_WIM_CLOSE
#define WIM_DATA MM_WIM_DATA
#define WIM_OPEN MM_WIM_OPEN
#define WIN31_CLASS NULL
#define WIN32 
#define WINAPI __stdcall
#define WINAPIV __cdecl
#define WINAPI_INLINE WINAPI
#define WINCOMMCTRLAPI DECLSPEC_IMPORT
#define WINCOMMDLGAPI DECLSPEC_IMPORT
#define WINCRYPT32API WINIMPM
#define WINCRYPT32STRINGAPI WINIMPM
#define WINDING (2)
#define WINDOW_BUFFER_SIZE_EVENT (4)
#define WINEVENT_INCONTEXT (4)
#define WINEVENT_OUTOFCONTEXT (0)
#define WINEVENT_SKIPOWNPROCESS (2)
#define WINEVENT_SKIPOWNTHREAD (1)
#define WINGDIAPI DECLSPEC_IMPORT
#define WINIMPM DECLSPEC_IMPORT
#define WINMMAPI DECLSPEC_IMPORT
#define WINNORMALIZEAPI DECLSPEC_IMPORT
#define WINPERF_LOG_DEBUG (2)
#define WINPERF_LOG_NONE (0)
#define WINPERF_LOG_USER (1)
#define WINPERF_LOG_VERBOSE (3)
#define WINSCARDAPI 
#define WINSCARDDATA __declspec ( dllimport )
#define WINSHELLAPI DECLSPEC_IMPORT
#define WINSPOOLAPI DECLSPEC_IMPORT
#define WINSTA_ACCESSCLIPBOARD __MSABI_LONG ( 0x0004 )
#define WINSTA_ACCESSGLOBALATOMS __MSABI_LONG ( 0x0020 )
#define WINSTA_ALL_ACCESS (895l)
#define WINSTA_CREATEDESKTOP __MSABI_LONG ( 0x0008 )
#define WINSTA_ENUMDESKTOPS __MSABI_LONG ( 0x0001 )
#define WINSTA_ENUMERATE __MSABI_LONG ( 0x0100 )
#define WINSTA_EXITWINDOWS __MSABI_LONG ( 0x0040 )
#define WINSTA_READATTRIBUTES __MSABI_LONG ( 0x0002 )
#define WINSTA_READSCREEN __MSABI_LONG ( 0x0200 )
#define WINSTA_WRITEATTRIBUTES __MSABI_LONG ( 0x0010 )
#define WIZ_BODYCX (184)
#define WIZ_BODYX (92)
#define WIZ_CXBMP (80)
#define WIZ_CXDLG (276)
#define WIZ_CYDLG (140)
#define WMI_DISK_GEOMETRY_GUID { 0x25007f51 , 0x57c2 , 0x11d1 , { 0xa5 , 0x28 , 0x0 , 0xa0 , 0xc9 , 0x6 , 0x29 , 0x10 } }
#define WMSZ_BOTTOM (6)
#define WMSZ_BOTTOMLEFT (7)
#define WMSZ_BOTTOMRIGHT (8)
#define WMSZ_LEFT (1)
#define WMSZ_RIGHT (2)
#define WMSZ_TOP (3)
#define WMSZ_TOPLEFT (4)
#define WMSZ_TOPRIGHT (5)
#define WM_ACTIVATE (6)
#define WM_ACTIVATEAPP (28)
#define WM_AFXFIRST (864)
#define WM_AFXLAST (895)
#define WM_APP (32768)
#define WM_APPCOMMAND (793)
#define WM_ASKCBFORMATNAME (780)
#define WM_CANCELJOURNAL (75)
#define WM_CANCELMODE (31)
#define WM_CAPTURECHANGED (533)
#define WM_CHANGECBCHAIN (781)
#define WM_CHANGEUISTATE (295)
#define WM_CHAR (258)
#define WM_CHARTOITEM (47)
#define WM_CHILDACTIVATE (34)
#define WM_CHOOSEFONT_GETLOGFONT (1025)
#define WM_CHOOSEFONT_SETFLAGS (1126)
#define WM_CHOOSEFONT_SETLOGFONT (1125)
#define WM_CLEAR (771)
#define WM_CLIPBOARDUPDATE (797)
#define WM_CLOSE (16)
#define WM_COMMAND (273)
#define WM_COMMNOTIFY (68)
#define WM_COMPACTING (65)
#define WM_COMPAREITEM (57)
#define WM_CONTEXTMENU (123)
#define WM_COPY (769)
#define WM_COPYDATA (74)
#define WM_CREATE (1)
#define WM_CTLCOLORBTN (309)
#define WM_CTLCOLORDLG (310)
#define WM_CTLCOLOREDIT (307)
#define WM_CTLCOLORLISTBOX (308)
#define WM_CTLCOLORMSGBOX (306)
#define WM_CTLCOLORSCROLLBAR (311)
#define WM_CTLCOLORSTATIC (312)
#define WM_CUT (768)
#define WM_DEADCHAR (259)
#define WM_DELETEITEM (45)
#define WM_DESTROY (2)
#define WM_DESTROYCLIPBOARD (775)
#define WM_DEVICECHANGE (537)
#define WM_DEVMODECHANGE (27)
#define WM_DISPLAYCHANGE (126)
#define WM_DRAWCLIPBOARD (776)
#define WM_DRAWITEM (43)
#define WM_DROPFILES (563)
#define WM_ENABLE (10)
#define WM_ENDSESSION (22)
#define WM_ENTERIDLE (289)
#define WM_ENTERMENULOOP (529)
#define WM_ENTERSIZEMOVE (561)
#define WM_ERASEBKGND (20)
#define WM_EXITMENULOOP (530)
#define WM_EXITSIZEMOVE (562)
#define WM_FONTCHANGE (29)
#define WM_GETDLGCODE (135)
#define WM_GETFONT (49)
#define WM_GETHOTKEY (51)
#define WM_GETICON (127)
#define WM_GETMINMAXINFO (36)
#define WM_GETOBJECT (61)
#define WM_GETTEXT (13)
#define WM_GETTEXTLENGTH (14)
#define WM_HANDHELDFIRST (856)
#define WM_HANDHELDLAST (863)
#define WM_HELP (83)
#define WM_HOTKEY (786)
#define WM_HSCROLL (276)
#define WM_HSCROLLCLIPBOARD (782)
#define WM_ICONERASEBKGND (39)
#define WM_IME_CHAR (646)
#define WM_IME_COMPOSITION (271)
#define WM_IME_COMPOSITIONFULL (644)
#define WM_IME_CONTROL (643)
#define WM_IME_ENDCOMPOSITION (270)
#define WM_IME_KEYDOWN (656)
#define WM_IME_KEYLAST (271)
#define WM_IME_KEYUP (657)
#define WM_IME_NOTIFY (642)
#define WM_IME_REQUEST (648)
#define WM_IME_SELECT (645)
#define WM_IME_SETCONTEXT (641)
#define WM_IME_STARTCOMPOSITION (269)
#define WM_INITDIALOG (272)
#define WM_INITMENU (278)
#define WM_INITMENUPOPUP (279)
#define WM_INPUT (255)
#define WM_INPUTLANGCHANGE (81)
#define WM_INPUTLANGCHANGEREQUEST (80)
#define WM_INPUT_DEVICE_CHANGE (254)
#define WM_KEYDOWN (256)
#define WM_KEYFIRST (256)
#define WM_KEYLAST (265)
#define WM_KEYUP (257)
#define WM_KILLFOCUS (8)
#define WM_LBUTTONDBLCLK (515)
#define WM_LBUTTONDOWN (513)
#define WM_LBUTTONUP (514)
#define WM_MBUTTONDBLCLK (521)
#define WM_MBUTTONDOWN (519)
#define WM_MBUTTONUP (520)
#define WM_MDIACTIVATE (546)
#define WM_MDICASCADE (551)
#define WM_MDICREATE (544)
#define WM_MDIDESTROY (545)
#define WM_MDIGETACTIVE (553)
#define WM_MDIICONARRANGE (552)
#define WM_MDIMAXIMIZE (549)
#define WM_MDINEXT (548)
#define WM_MDIREFRESHMENU (564)
#define WM_MDIRESTORE (547)
#define WM_MDISETMENU (560)
#define WM_MDITILE (550)
#define WM_MEASUREITEM (44)
#define WM_MENUCHAR (288)
#define WM_MENUCOMMAND (294)
#define WM_MENUDRAG (291)
#define WM_MENUGETOBJECT (292)
#define WM_MENURBUTTONUP (290)
#define WM_MENUSELECT (287)
#define WM_MOUSEACTIVATE (33)
#define WM_MOUSEFIRST (512)
#define WM_MOUSEHOVER (673)
#define WM_MOUSELAST (525)
#define WM_MOUSELEAVE (675)
#define WM_MOUSEMOVE (512)
#define WM_MOUSEWHEEL (522)
#define WM_MOVE (3)
#define WM_MOVING (534)
#define WM_NCACTIVATE (134)
#define WM_NCCALCSIZE (131)
#define WM_NCCREATE (129)
#define WM_NCDESTROY (130)
#define WM_NCHITTEST (132)
#define WM_NCLBUTTONDBLCLK (163)
#define WM_NCLBUTTONDOWN (161)
#define WM_NCLBUTTONUP (162)
#define WM_NCMBUTTONDBLCLK (169)
#define WM_NCMBUTTONDOWN (167)
#define WM_NCMBUTTONUP (168)
#define WM_NCMOUSEHOVER (672)
#define WM_NCMOUSELEAVE (674)
#define WM_NCMOUSEMOVE (160)
#define WM_NCPAINT (133)
#define WM_NCRBUTTONDBLCLK (166)
#define WM_NCRBUTTONDOWN (164)
#define WM_NCRBUTTONUP (165)
#define WM_NCXBUTTONDBLCLK (173)
#define WM_NCXBUTTONDOWN (171)
#define WM_NCXBUTTONUP (172)
#define WM_NEXTDLGCTL (40)
#define WM_NEXTMENU (531)
#define WM_NOTIFY (78)
#define WM_NOTIFYFORMAT (85)
#define WM_NULL (0)
#define WM_PAINT (15)
#define WM_PAINTCLIPBOARD (777)
#define WM_PAINTICON (38)
#define WM_PALETTECHANGED (785)
#define WM_PALETTEISCHANGING (784)
#define WM_PARENTNOTIFY (528)
#define WM_PASTE (770)
#define WM_PENWINFIRST (896)
#define WM_PENWINLAST (911)
#define WM_POWER (72)
#define WM_POWERBROADCAST (536)
#define WM_PRINT (791)
#define WM_PRINTCLIENT (792)
#define WM_PSD_ENVSTAMPRECT (1029)
#define WM_PSD_FULLPAGERECT (1025)
#define WM_PSD_GREEKTEXTRECT (1028)
#define WM_PSD_MARGINRECT (1027)
#define WM_PSD_MINMARGINRECT (1026)
#define WM_PSD_PAGESETUPDLG (1024)
#define WM_PSD_YAFULLPAGERECT (1030)
#define WM_QUERYDRAGICON (55)
#define WM_QUERYENDSESSION (17)
#define WM_QUERYNEWPALETTE (783)
#define WM_QUERYOPEN (19)
#define WM_QUERYUISTATE (297)
#define WM_QUEUESYNC (35)
#define WM_QUIT (18)
#define WM_RBUTTONDBLCLK (518)
#define WM_RBUTTONDOWN (516)
#define WM_RBUTTONUP (517)
#define WM_RENDERALLFORMATS (774)
#define WM_RENDERFORMAT (773)
#define WM_SETCURSOR (32)
#define WM_SETFOCUS (7)
#define WM_SETFONT (48)
#define WM_SETHOTKEY (50)
#define WM_SETICON (128)
#define WM_SETREDRAW (11)
#define WM_SETTEXT (12)
#define WM_SETTINGCHANGE WM_WININICHANGE
#define WM_SHOWWINDOW (24)
#define WM_SIZE (5)
#define WM_SIZECLIPBOARD (779)
#define WM_SIZING (532)
#define WM_SPOOLERSTATUS (42)
#define WM_STYLECHANGED (125)
#define WM_STYLECHANGING (124)
#define WM_SYNCPAINT (136)
#define WM_SYSCHAR (262)
#define WM_SYSCOLORCHANGE (21)
#define WM_SYSCOMMAND (274)
#define WM_SYSDEADCHAR (263)
#define WM_SYSKEYDOWN (260)
#define WM_SYSKEYUP (261)
#define WM_TABLET_FIRST (704)
#define WM_TABLET_LAST (735)
#define WM_TCARD (82)
#define WM_THEMECHANGED (794)
#define WM_TIMECHANGE (30)
#define WM_TIMER (275)
#define WM_UNDO (772)
#define WM_UNICHAR (265)
#define WM_UNINITMENUPOPUP (293)
#define WM_UPDATEUISTATE (296)
#define WM_USER (1024)
#define WM_USERCHANGED (84)
#define WM_VKEYTOITEM (46)
#define WM_VSCROLL (277)
#define WM_VSCROLLCLIPBOARD (778)
#define WM_WINDOWPOSCHANGED (71)
#define WM_WINDOWPOSCHANGING (70)
#define WM_WININICHANGE (26)
#define WM_WTSSESSION_CHANGE (689)
#define WM_XBUTTONDBLCLK (525)
#define WM_XBUTTONDOWN (523)
#define WM_XBUTTONUP (524)
#define WNCON_DYNAMIC (8)
#define WNCON_FORNETCARD (1)
#define WNCON_NOTROUTED (2)
#define WNCON_SLOWLINK (4)
#define WNFMT_ABBREVIATED (2)
#define WNFMT_CONNECTION (32)
#define WNFMT_INENUM (16)
#define WNFMT_MULTILINE (1)
#define WN_ACCESS_DENIED ERROR_ACCESS_DENIED
#define WN_ALREADY_CONNECTED ERROR_ALREADY_ASSIGNED
#define WN_BAD_DEV_TYPE ERROR_BAD_DEV_TYPE
#define WN_BAD_HANDLE ERROR_INVALID_HANDLE
#define WN_BAD_LEVEL ERROR_INVALID_LEVEL
#define WN_BAD_LOCALNAME ERROR_BAD_DEVICE
#define WN_BAD_NETNAME ERROR_BAD_NET_NAME
#define WN_BAD_PASSWORD ERROR_INVALID_PASSWORD
#define WN_BAD_POINTER ERROR_INVALID_ADDRESS
#define WN_BAD_PROFILE ERROR_BAD_PROFILE
#define WN_BAD_PROVIDER ERROR_BAD_PROVIDER
#define WN_BAD_USER ERROR_BAD_USERNAME
#define WN_BAD_VALUE ERROR_INVALID_PARAMETER
#define WN_CANCEL ERROR_CANCELLED
#define WN_CANNOT_OPEN_PROFILE ERROR_CANNOT_OPEN_PROFILE
#define WN_CONNECTED_OTHER_PASSWORD ERROR_CONNECTED_OTHER_PASSWORD
#define WN_CONNECTED_OTHER_PASSWORD_DEFAULT ERROR_CONNECTED_OTHER_PASSWORD_DEFAULT
#define WN_CONNECTION_CLOSED ERROR_CONNECTION_UNAVAIL
#define WN_DEVICE_ALREADY_REMEMBERED ERROR_DEVICE_ALREADY_REMEMBERED
#define WN_DEVICE_ERROR ERROR_GEN_FAILURE
#define WN_DEVICE_IN_USE ERROR_DEVICE_IN_USE
#define WN_EXTENDED_ERROR ERROR_EXTENDED_ERROR
#define WN_FUNCTION_BUSY ERROR_BUSY
#define WN_MORE_DATA ERROR_MORE_DATA
#define WN_NET_ERROR ERROR_UNEXP_NET_ERR
#define WN_NOT_AUTHENTICATED ERROR_NOT_AUTHENTICATED
#define WN_NOT_CONNECTED ERROR_NOT_CONNECTED
#define WN_NOT_CONTAINER ERROR_NOT_CONTAINER
#define WN_NOT_INITIALIZING ERROR_ALREADY_INITIALIZED
#define WN_NOT_LOGGED_ON ERROR_NOT_LOGGED_ON
#define WN_NOT_SUPPORTED ERROR_NOT_SUPPORTED
#define WN_NOT_VALIDATED ERROR_NO_LOGON_SERVERS
#define WN_NO_ERROR NO_ERROR
#define WN_NO_MORE_DEVICES ERROR_NO_MORE_DEVICES
#define WN_NO_MORE_ENTRIES ERROR_NO_MORE_ITEMS
#define WN_NO_NETWORK ERROR_NO_NETWORK
#define WN_NO_NET_OR_BAD_PATH ERROR_NO_NET_OR_BAD_PATH
#define WN_OPEN_FILES ERROR_OPEN_FILES
#define WN_OUT_OF_MEMORY ERROR_NOT_ENOUGH_MEMORY
#define WN_RETRY ERROR_RETRY
#define WN_SUCCESS NO_ERROR
#define WN_WINDOWS_ERROR ERROR_UNEXP_NET_ERR
#define WNetAddConnection __MINGW_NAME_AW ( WNetAddConnection )
#define WNetAddConnection2 __MINGW_NAME_AW ( WNetAddConnection2 )
#define WNetAddConnection3 __MINGW_NAME_AW ( WNetAddConnection3 )
#define WNetCancelConnection __MINGW_NAME_AW ( WNetCancelConnection )
#define WNetCancelConnection2 __MINGW_NAME_AW ( WNetCancelConnection2 )
#define WNetConnectionDialog1 __MINGW_NAME_AW ( WNetConnectionDialog1 )
#define WNetDisconnectDialog1 __MINGW_NAME_AW ( WNetDisconnectDialog1 )
#define WNetEnumResource __MINGW_NAME_AW ( WNetEnumResource )
#define WNetGetConnection __MINGW_NAME_AW ( WNetGetConnection )
#define WNetGetLastError __MINGW_NAME_AW ( WNetGetLastError )
#define WNetGetNetworkInformation __MINGW_NAME_AW ( WNetGetNetworkInformation )
#define WNetGetProviderName __MINGW_NAME_AW ( WNetGetProviderName )
#define WNetGetResourceInformation __MINGW_NAME_AW ( WNetGetResourceInformation )
#define WNetGetResourceParent __MINGW_NAME_AW ( WNetGetResourceParent )
#define WNetGetUniversalName __MINGW_NAME_AW ( WNetGetUniversalName )
#define WNetGetUser __MINGW_NAME_AW ( WNetGetUser )
#define WNetOpenEnum __MINGW_NAME_AW ( WNetOpenEnum )
#define WNetRestoreConnection __MINGW_NAME_AW ( WNetRestoreConnection )
#define WNetUseConnection __MINGW_NAME_AW ( WNetUseConnection )
#define WOM_CLOSE MM_WOM_CLOSE
#define WOM_DONE MM_WOM_DONE
#define WOM_OPEN MM_WOM_OPEN
#define WOW64_CONTEXT_ALL (65599l)
#define WOW64_CONTEXT_CONTROL (65537l)
#define WOW64_CONTEXT_DEBUG_REGISTERS (65552l)
#define WOW64_CONTEXT_EXCEPTION_ACTIVE (134217728)
#define WOW64_CONTEXT_EXCEPTION_REPORTING (2147483648u)
#define WOW64_CONTEXT_EXCEPTION_REQUEST (1073741824)
#define WOW64_CONTEXT_EXTENDED_REGISTERS (65568l)
#define WOW64_CONTEXT_FLOATING_POINT (65544l)
#define WOW64_CONTEXT_FULL (65543l)
#define WOW64_CONTEXT_INTEGER (65538l)
#define WOW64_CONTEXT_SEGMENTS (65540l)
#define WOW64_CONTEXT_SERVICE_ACTIVE (268435456)
#define WOW64_CONTEXT_XSTATE (65600l)
#define WOW64_CONTEXT_i386 (65536)
#define WOW64_CONTEXT_i486 (65536)
#define WOW64_MAXIMUM_SUPPORTED_EXTENSION (512)
#define WOW64_SIZE_OF_80387_REGISTERS (80)
#define WPF_ASYNCWINDOWPLACEMENT (4)
#define WPF_RESTORETOMAXIMIZED (2)
#define WPF_SETMINPOSITION (1)
#define WRITE_COMPRESSION_INFO_VALID (16)
#define WRITE_DAC (262144l)
#define WRITE_OWNER (524288l)
#define WRITE_RESTRICTED (8)
#define WRITE_WATCH_FLAG_RESET (1)
#define WSABASEERR (10000)
#define WSADESCRIPTION_LEN (256)
#define WSAEACCES (10013)
#define WSAEADDRINUSE (10048)
#define WSAEADDRNOTAVAIL (10049)
#define WSAEAFNOSUPPORT (10047)
#define WSAEALREADY (10037)
#define WSAEBADF (10009)
#define WSAECANCELLED (10103)
#define WSAECONNABORTED (10053)
#define WSAECONNREFUSED (10061)
#define WSAECONNRESET (10054)
#define WSAEDESTADDRREQ (10039)
#define WSAEDISCON (10101)
#define WSAEDQUOT (10069)
#define WSAEFAULT (10014)
#define WSAEHOSTDOWN (10064)
#define WSAEHOSTUNREACH (10065)
#define WSAEINPROGRESS (10036)
#define WSAEINTR (10004)
#define WSAEINVAL (10022)
#define WSAEINVALIDPROCTABLE (10104)
#define WSAEINVALIDPROVIDER (10105)
#define WSAEISCONN (10056)
#define WSAELOOP (10062)
#define WSAEMFILE (10024)
#define WSAEMSGSIZE (10040)
#define WSAENAMETOOLONG (10063)
#define WSAENETDOWN (10050)
#define WSAENETRESET (10052)
#define WSAENETUNREACH (10051)
#define WSAENOBUFS (10055)
#define WSAENOMORE (10102)
#define WSAENOPROTOOPT (10042)
#define WSAENOTCONN (10057)
#define WSAENOTEMPTY (10066)
#define WSAENOTSOCK (10038)
#define WSAEOPNOTSUPP (10045)
#define WSAEPFNOSUPPORT (10046)
#define WSAEPROCLIM (10067)
#define WSAEPROTONOSUPPORT (10043)
#define WSAEPROTOTYPE (10041)
#define WSAEPROVIDERFAILEDINIT (10106)
#define WSAEREFUSED (10112)
#define WSAEREMOTE (10071)
#define WSAESHUTDOWN (10058)
#define WSAESOCKTNOSUPPORT (10044)
#define WSAESTALE (10070)
#define WSAETIMEDOUT (10060)
#define WSAETOOMANYREFS (10059)
#define WSAEUSERS (10068)
#define WSAEWOULDBLOCK (10035)
#define WSAGETASYNCBUFLEN(lParam) LOWORD ( lParam )
#define WSAGETASYNCERROR(lParam) HIWORD ( lParam )
#define WSAGETSELECTERROR(lParam) HIWORD ( lParam )
#define WSAGETSELECTEVENT(lParam) LOWORD ( lParam )
#define WSAHOST_NOT_FOUND (11001)
#define WSAMAKEASYNCREPLY(buflen, error) MAKELONG ( buflen , error )
#define WSAMAKESELECTREPLY(event, error) MAKELONG ( event , error )
#define WSANOTINITIALISED (10093)
#define WSANO_DATA (11004)
#define WSANO_RECOVERY (11003)
#define WSASERVICE_NOT_FOUND (10108)
#define WSASYSCALLFAILURE (10107)
#define WSASYSNOTREADY (10091)
#define WSASYS_STATUS_LEN (128)
#define WSATRY_AGAIN (11002)
#define WSATYPE_NOT_FOUND (10109)
#define WSAVERNOTSUPPORTED (10092)
#define WSA_E_CANCELLED (10111)
#define WSA_E_NO_MORE (10110)
#define WSA_QOS_ADMISSION_FAILURE (11010)
#define WSA_QOS_BAD_OBJECT (11013)
#define WSA_QOS_BAD_STYLE (11012)
#define WSA_QOS_EFILTERCOUNT (11021)
#define WSA_QOS_EFILTERSTYLE (11019)
#define WSA_QOS_EFILTERTYPE (11020)
#define WSA_QOS_EFLOWCOUNT (11023)
#define WSA_QOS_EFLOWDESC (11026)
#define WSA_QOS_EFLOWSPEC (11017)
#define WSA_QOS_EOBJLENGTH (11022)
#define WSA_QOS_EPOLICYOBJ (11025)
#define WSA_QOS_EPROVSPECBUF (11018)
#define WSA_QOS_EPSFILTERSPEC (11028)
#define WSA_QOS_EPSFLOWSPEC (11027)
#define WSA_QOS_ESDMODEOBJ (11029)
#define WSA_QOS_ESERVICETYPE (11016)
#define WSA_QOS_ESHAPERATEOBJ (11030)
#define WSA_QOS_EUNKNOWNPSOBJ (11024)
#define WSA_QOS_EUNKOWNPSOBJ WSA_QOS_EUNKNOWNPSOBJ
#define WSA_QOS_GENERIC_ERROR (11015)
#define WSA_QOS_NO_RECEIVERS (11008)
#define WSA_QOS_NO_SENDERS (11007)
#define WSA_QOS_POLICY_FAILURE (11011)
#define WSA_QOS_RECEIVERS (11005)
#define WSA_QOS_REQUEST_CONFIRMED (11009)
#define WSA_QOS_RESERVED_PETYPE (11031)
#define WSA_QOS_SENDERS (11006)
#define WSA_QOS_TRAFFIC_CTRL_ERROR (11014)
#define WSF_VISIBLE __MSABI_LONG ( 0x0001 )
#define WS_ACTIVECAPTION (1)
#define WS_BORDER __MSABI_LONG ( 0x00800000 )
#define WS_CAPTION __MSABI_LONG ( 0x00C00000 )
#define WS_CHILD __MSABI_LONG ( 0x40000000 )
#define WS_CHILDWINDOW (1073741824l)
#define WS_CLIPCHILDREN __MSABI_LONG ( 0x02000000 )
#define WS_CLIPSIBLINGS __MSABI_LONG ( 0x04000000 )
#define WS_DISABLED __MSABI_LONG ( 0x08000000 )
#define WS_DLGFRAME __MSABI_LONG ( 0x00400000 )
#define WS_EX_ACCEPTFILES __MSABI_LONG ( 0x00000010 )
#define WS_EX_APPWINDOW __MSABI_LONG ( 0x00040000 )
#define WS_EX_CLIENTEDGE __MSABI_LONG ( 0x00000200 )
#define WS_EX_COMPOSITED __MSABI_LONG ( 0x02000000 )
#define WS_EX_CONTEXTHELP __MSABI_LONG ( 0x00000400 )
#define WS_EX_CONTROLPARENT __MSABI_LONG ( 0x00010000 )
#define WS_EX_DLGMODALFRAME __MSABI_LONG ( 0x00000001 )
#define WS_EX_LAYERED (524288)
#define WS_EX_LAYOUTRTL __MSABI_LONG ( 0x00400000 )
#define WS_EX_LEFT __MSABI_LONG ( 0x00000000 )
#define WS_EX_LEFTSCROLLBAR __MSABI_LONG ( 0x00004000 )
#define WS_EX_LTRREADING __MSABI_LONG ( 0x00000000 )
#define WS_EX_MDICHILD __MSABI_LONG ( 0x00000040 )
#define WS_EX_NOACTIVATE __MSABI_LONG ( 0x08000000 )
#define WS_EX_NOINHERITLAYOUT __MSABI_LONG ( 0x00100000 )
#define WS_EX_NOPARENTNOTIFY __MSABI_LONG ( 0x00000004 )
#define WS_EX_OVERLAPPEDWINDOW (768l)
#define WS_EX_PALETTEWINDOW (392l)
#define WS_EX_RIGHT __MSABI_LONG ( 0x00001000 )
#define WS_EX_RIGHTSCROLLBAR __MSABI_LONG ( 0x00000000 )
#define WS_EX_RTLREADING __MSABI_LONG ( 0x00002000 )
#define WS_EX_STATICEDGE __MSABI_LONG ( 0x00020000 )
#define WS_EX_TOOLWINDOW __MSABI_LONG ( 0x00000080 )
#define WS_EX_TOPMOST __MSABI_LONG ( 0x00000008 )
#define WS_EX_TRANSPARENT __MSABI_LONG ( 0x00000020 )
#define WS_EX_WINDOWEDGE __MSABI_LONG ( 0x00000100 )
#define WS_GROUP __MSABI_LONG ( 0x00020000 )
#define WS_HSCROLL __MSABI_LONG ( 0x00100000 )
#define WS_ICONIC WS_MINIMIZE
#define WS_MAXIMIZE __MSABI_LONG ( 0x01000000 )
#define WS_MAXIMIZEBOX __MSABI_LONG ( 0x00010000 )
#define WS_MINIMIZE __MSABI_LONG ( 0x20000000 )
#define WS_MINIMIZEBOX __MSABI_LONG ( 0x00020000 )
#define WS_OVERLAPPED __MSABI_LONG ( 0x00000000 )
#define WS_OVERLAPPEDWINDOW (13565952l)
#define WS_POPUP __MSABI_LONG ( 0x80000000 )
#define WS_POPUPWINDOW (-2138570752l)
#define WS_SIZEBOX WS_THICKFRAME
#define WS_SYSMENU __MSABI_LONG ( 0x00080000 )
#define WS_TABSTOP __MSABI_LONG ( 0x00010000 )
#define WS_THICKFRAME __MSABI_LONG ( 0x00040000 )
#define WS_TILED WS_OVERLAPPED
#define WS_TILEDWINDOW WS_OVERLAPPEDWINDOW
#define WS_VISIBLE __MSABI_LONG ( 0x10000000 )
#define WS_VSCROLL __MSABI_LONG ( 0x00200000 )
#define WTS_CONSOLE_CONNECT (1)
#define WTS_CONSOLE_DISCONNECT (2)
#define WTS_REMOTE_CONNECT (3)
#define WTS_REMOTE_DISCONNECT (4)
#define WTS_SESSION_CREATE (10)
#define WTS_SESSION_LOCK (7)
#define WTS_SESSION_LOGOFF (6)
#define WTS_SESSION_LOGON (5)
#define WTS_SESSION_REMOTE_CONTROL (9)
#define WTS_SESSION_TERMINATE (11)
#define WTS_SESSION_UNLOCK (8)
#define WT_EXECUTEDEFAULT (0)
#define WT_EXECUTEDELETEWAIT (8)
#define WT_EXECUTEINIOTHREAD (1)
#define WT_EXECUTEINLONGTHREAD (16)
#define WT_EXECUTEINPERSISTENTIOTHREAD (64)
#define WT_EXECUTEINPERSISTENTTHREAD (128)
#define WT_EXECUTEINTIMERTHREAD (32)
#define WT_EXECUTEINUITHREAD (2)
#define WT_EXECUTEINWAITTHREAD (4)
#define WT_EXECUTELONGFUNCTION (16)
#define WT_EXECUTEONLYONCE (8)
#define WT_SET_MAX_THREADPOOL_THREADS(Flags, Limit) ( ( Flags ) |= ( Limit ) << 16 )
#define WT_TRANSFER_IMPERSONATION (256)
#define WVR_ALIGNBOTTOM (64)
#define WVR_ALIGNLEFT (32)
#define WVR_ALIGNRIGHT (128)
#define WVR_ALIGNTOP (16)
#define WVR_HREDRAW (256)
#define WVR_REDRAW (768)
#define WVR_VALIDRECTS (1024)
#define WVR_VREDRAW (512)
#define WaitNamedPipe WaitNamedPipeA
#define WinHelp __MINGW_NAME_AW ( WinHelp )
#define WriteConsole __MINGW_NAME_AW ( WriteConsole )
#define WriteConsoleInput __MINGW_NAME_AW ( WriteConsoleInput )
#define WriteConsoleOutput __MINGW_NAME_AW ( WriteConsoleOutput )
#define WriteConsoleOutputCharacter __MINGW_NAME_AW ( WriteConsoleOutputCharacter )
#define WriteMxCsr _mm_setcsr
#define WriteOnceDiskClassGuid GUID_DEVINTERFACE_WRITEONCEDISK
#define WritePrivateProfileSection __MINGW_NAME_AW ( WritePrivateProfileSection )
#define WritePrivateProfileString __MINGW_NAME_AW ( WritePrivateProfileString )
#define WritePrivateProfileStruct __MINGW_NAME_AW ( WritePrivateProfileStruct )
#define WriteProfileSection __MINGW_NAME_AW ( WriteProfileSection )
#define WriteProfileString __MINGW_NAME_AW ( WriteProfileString )
#define X3_BTYPE_QP_INST_VAL_POS_X (0)
#define X3_BTYPE_QP_INST_WORD_POS_X (23)
#define X3_BTYPE_QP_INST_WORD_X (2)
#define X3_BTYPE_QP_SIZE_X (9)
#define X3_D_WH_INST_WORD_POS_X (24)
#define X3_D_WH_INST_WORD_X (3)
#define X3_D_WH_SIGN_VAL_POS_X (0)
#define X3_D_WH_SIZE_X (3)
#define X3_EMPTY_INST_VAL_POS_X (0)
#define X3_EMPTY_INST_WORD_POS_X (14)
#define X3_EMPTY_INST_WORD_X (1)
#define X3_EMPTY_SIZE_X (2)
#define X3_IMM20_INST_WORD_POS_X (4)
#define X3_IMM20_INST_WORD_X (3)
#define X3_IMM20_SIGN_VAL_POS_X (0)
#define X3_IMM20_SIZE_X (20)
#define X3_IMM39_1_INST_WORD_POS_X (0)
#define X3_IMM39_1_INST_WORD_X (2)
#define X3_IMM39_1_SIGN_VAL_POS_X (36)
#define X3_IMM39_1_SIZE_X (23)
#define X3_IMM39_2_INST_WORD_POS_X (16)
#define X3_IMM39_2_INST_WORD_X (1)
#define X3_IMM39_2_SIGN_VAL_POS_X (20)
#define X3_IMM39_2_SIZE_X (16)
#define X3_I_INST_WORD_POS_X (27)
#define X3_I_INST_WORD_X (3)
#define X3_I_SIGN_VAL_POS_X (59)
#define X3_I_SIZE_X (1)
#define X3_OPCODE_INST_WORD_POS_X (28)
#define X3_OPCODE_INST_WORD_X (3)
#define X3_OPCODE_SIGN_VAL_POS_X (0)
#define X3_OPCODE_SIZE_X (4)
#define X3_P_INST_WORD_POS_X (0)
#define X3_P_INST_WORD_X (3)
#define X3_P_SIGN_VAL_POS_X (0)
#define X3_P_SIZE_X (4)
#define X3_TMPLT_INST_WORD_POS_X (0)
#define X3_TMPLT_INST_WORD_X (0)
#define X3_TMPLT_SIGN_VAL_POS_X (0)
#define X3_TMPLT_SIZE_X (4)
#define X509_ALGORITHM_IDENTIFIER ( ( LPCSTR ) 74 )
#define X509_ALTERNATE_NAME ( ( LPCSTR ) 12 )
#define X509_ANY_STRING X509_NAME_VALUE
#define X509_ASN_ENCODING (1)
#define X509_AUTHORITY_INFO_ACCESS ( ( LPCSTR ) 32 )
#define X509_AUTHORITY_KEY_ID ( ( LPCSTR ) 9 )
#define X509_AUTHORITY_KEY_ID2 ( ( LPCSTR ) 31 )
#define X509_BASIC_CONSTRAINTS ( ( LPCSTR ) 13 )
#define X509_BASIC_CONSTRAINTS2 ( ( LPCSTR ) 15 )
#define X509_BIOMETRIC_EXT ( ( LPCSTR ) 71 )
#define X509_BITS ( ( LPCSTR ) 26 )
#define X509_BITS_WITHOUT_TRAILING_ZEROES ( ( LPCSTR ) 51 )
#define X509_CERT ( ( LPCSTR ) 1 )
#define X509_CERTIFICATE_TEMPLATE ( ( LPCSTR ) 64 )
#define X509_CERT_BUNDLE ( ( LPCSTR ) 81 )
#define X509_CERT_CRL_TO_BE_SIGNED ( ( LPCSTR ) 3 )
#define X509_CERT_PAIR ( ( LPCSTR ) 53 )
#define X509_CERT_POLICIES ( ( LPCSTR ) 16 )
#define X509_CERT_REQUEST_TO_BE_SIGNED ( ( LPCSTR ) 4 )
#define X509_CERT_TO_BE_SIGNED ( ( LPCSTR ) 2 )
#define X509_CHOICE_OF_TIME ( ( LPCSTR ) 30 )
#define X509_CRL_DIST_POINTS ( ( LPCSTR ) 35 )
#define X509_CRL_REASON_CODE X509_ENUMERATED
#define X509_CROSS_CERT_DIST_POINTS ( ( LPCSTR ) 58 )
#define X509_DH_PARAMETERS ( ( LPCSTR ) 47 )
#define X509_DH_PUBLICKEY X509_MULTI_BYTE_UINT
#define X509_DSS_PARAMETERS ( ( LPCSTR ) 39 )
#define X509_DSS_PUBLICKEY X509_MULTI_BYTE_UINT
#define X509_DSS_SIGNATURE ( ( LPCSTR ) 40 )
#define X509_ECC_PRIVATE_KEY ( ( LPCSTR ) 82 )
#define X509_ECC_SIGNATURE ( ( LPCSTR ) 47 )
#define X509_ENHANCED_KEY_USAGE ( ( LPCSTR ) 36 )
#define X509_ENUMERATED ( ( LPCSTR ) 29 )
#define X509_EXTENSIONS ( ( LPCSTR ) 5 )
#define X509_INTEGER ( ( LPCSTR ) 27 )
#define X509_ISSUING_DIST_POINT ( ( LPCSTR ) 54 )
#define X509_KEYGEN_REQUEST_TO_BE_SIGNED ( ( LPCSTR ) 21 )
#define X509_KEY_ATTRIBUTES ( ( LPCSTR ) 10 )
#define X509_KEY_USAGE ( ( LPCSTR ) 14 )
#define X509_KEY_USAGE_RESTRICTION ( ( LPCSTR ) 11 )
#define X509_LOGOTYPE_EXT ( ( LPCSTR ) 70 )
#define X509_MULTI_BYTE_INTEGER ( ( LPCSTR ) 28 )
#define X509_MULTI_BYTE_UINT ( ( LPCSTR ) 38 )
#define X509_NAME ( ( LPCSTR ) 7 )
#define X509_NAME_CONSTRAINTS ( ( LPCSTR ) 55 )
#define X509_NAME_VALUE ( ( LPCSTR ) 6 )
#define X509_NDR_ENCODING (2)
#define X509_OBJECT_IDENTIFIER ( ( LPCSTR ) 73 )
#define X509_OCTET_STRING ( ( LPCSTR ) 25 )
#define X509_PKIX_POLICY_QUALIFIER_USERNOTICE ( ( LPCSTR ) 46 )
#define X509_POLICY_CONSTRAINTS ( ( LPCSTR ) 57 )
#define X509_POLICY_MAPPINGS ( ( LPCSTR ) 56 )
#define X509_PUBLIC_KEY_INFO ( ( LPCSTR ) 8 )
#define X509_QC_STATEMENTS_EXT ( ( LPCSTR ) 42 )
#define X509_SEQUENCE_OF_ANY ( ( LPCSTR ) 34 )
#define X509_SUBJECT_INFO_ACCESS X509_AUTHORITY_INFO_ACCESS
#define X509_UNICODE_ANY_STRING X509_UNICODE_NAME_VALUE
#define X509_UNICODE_NAME ( ( LPCSTR ) 20 )
#define X509_UNICODE_NAME_VALUE ( ( LPCSTR ) 24 )
#define X942_DH_PARAMETERS ( ( LPCSTR ) 50 )
#define X942_OTHER_INFO ( ( LPCSTR ) 52 )
#define XACT_E_ABORTED _HRESULT_TYPEDEF_ ( 0x8004D019 )
#define XACT_E_ABORTING _HRESULT_TYPEDEF_ ( 0x8004D029 )
#define XACT_E_ALREADYINPROGRESS _HRESULT_TYPEDEF_ ( 0x8004D018 )
#define XACT_E_ALREADYOTHERSINGLEPHASE _HRESULT_TYPEDEF_ ( 0x8004D000 )
#define XACT_E_CANTRETAIN _HRESULT_TYPEDEF_ ( 0x8004D001 )
#define XACT_E_CLERKEXISTS _HRESULT_TYPEDEF_ ( 0x8004D081 )
#define XACT_E_CLERKNOTFOUND _HRESULT_TYPEDEF_ ( 0x8004D080 )
#define XACT_E_COMMITFAILED _HRESULT_TYPEDEF_ ( 0x8004D002 )
#define XACT_E_COMMITPREVENTED _HRESULT_TYPEDEF_ ( 0x8004D003 )
#define XACT_E_CONNECTION_DENIED _HRESULT_TYPEDEF_ ( 0x8004D01D )
#define XACT_E_CONNECTION_DOWN _HRESULT_TYPEDEF_ ( 0x8004D01C )
#define XACT_E_DEST_TMNOTAVAILABLE _HRESULT_TYPEDEF_ ( 0x8004D022 )
#define XACT_E_FIRST (2147799040u)
#define XACT_E_HEURISTICABORT _HRESULT_TYPEDEF_ ( 0x8004D004 )
#define XACT_E_HEURISTICCOMMIT _HRESULT_TYPEDEF_ ( 0x8004D005 )
#define XACT_E_HEURISTICDAMAGE _HRESULT_TYPEDEF_ ( 0x8004D006 )
#define XACT_E_HEURISTICDANGER _HRESULT_TYPEDEF_ ( 0x8004D007 )
#define XACT_E_INDOUBT _HRESULT_TYPEDEF_ ( 0x8004D016 )
#define XACT_E_INVALIDCOOKIE _HRESULT_TYPEDEF_ ( 0x8004D015 )
#define XACT_E_INVALIDLSN _HRESULT_TYPEDEF_ ( 0x8004D084 )
#define XACT_E_ISOLATIONLEVEL _HRESULT_TYPEDEF_ ( 0x8004D008 )
#define XACT_E_LAST (2147799081u)
#define XACT_E_LOGFULL _HRESULT_TYPEDEF_ ( 0x8004D01A )
#define XACT_E_NETWORK_TX_DISABLED _HRESULT_TYPEDEF_ ( 0x8004D024 )
#define XACT_E_NOASYNC _HRESULT_TYPEDEF_ ( 0x8004D009 )
#define XACT_E_NOENLIST _HRESULT_TYPEDEF_ ( 0x8004D00A )
#define XACT_E_NOIMPORTOBJECT _HRESULT_TYPEDEF_ ( 0x8004D014 )
#define XACT_E_NOISORETAIN _HRESULT_TYPEDEF_ ( 0x8004D00B )
#define XACT_E_NORESOURCE _HRESULT_TYPEDEF_ ( 0x8004D00C )
#define XACT_E_NOTCURRENT _HRESULT_TYPEDEF_ ( 0x8004D00D )
#define XACT_E_NOTIMEOUT _HRESULT_TYPEDEF_ ( 0x8004D017 )
#define XACT_E_NOTRANSACTION _HRESULT_TYPEDEF_ ( 0x8004D00E )
#define XACT_E_NOTSUPPORTED _HRESULT_TYPEDEF_ ( 0x8004D00F )
#define XACT_E_PARTNER_NETWORK_TX_DISABLED _HRESULT_TYPEDEF_ ( 0x8004D025 )
#define XACT_E_RECOVERYINPROGRESS _HRESULT_TYPEDEF_ ( 0x8004D082 )
#define XACT_E_REENLISTTIMEOUT _HRESULT_TYPEDEF_ ( 0x8004D01E )
#define XACT_E_REPLAYREQUEST _HRESULT_TYPEDEF_ ( 0x8004D085 )
#define XACT_E_TIP_CONNECT_FAILED _HRESULT_TYPEDEF_ ( 0x8004D01F )
#define XACT_E_TIP_DISABLED _HRESULT_TYPEDEF_ ( 0x8004D023 )
#define XACT_E_TIP_PROTOCOL_ERROR _HRESULT_TYPEDEF_ ( 0x8004D020 )
#define XACT_E_TIP_PULL_FAILED _HRESULT_TYPEDEF_ ( 0x8004D021 )
#define XACT_E_TMNOTAVAILABLE _HRESULT_TYPEDEF_ ( 0x8004D01B )
#define XACT_E_TRANSACTIONCLOSED _HRESULT_TYPEDEF_ ( 0x8004D083 )
#define XACT_E_UNABLE_TO_LOAD_DTC_PROXY _HRESULT_TYPEDEF_ ( 0x8004D028 )
#define XACT_E_UNABLE_TO_READ_DTC_CONFIG _HRESULT_TYPEDEF_ ( 0x8004D027 )
#define XACT_E_UNKNOWNRMGRID _HRESULT_TYPEDEF_ ( 0x8004D010 )
#define XACT_E_WRONGSTATE _HRESULT_TYPEDEF_ ( 0x8004D011 )
#define XACT_E_WRONGUOW _HRESULT_TYPEDEF_ ( 0x8004D012 )
#define XACT_E_XA_TX_DISABLED _HRESULT_TYPEDEF_ ( 0x8004D026 )
#define XACT_E_XTIONEXISTS _HRESULT_TYPEDEF_ ( 0x8004D013 )
#define XACT_S_ABORTING _HRESULT_TYPEDEF_ ( 0x0004D008 )
#define XACT_S_ALLNORETAIN _HRESULT_TYPEDEF_ ( 0x0004D007 )
#define XACT_S_ASYNC _HRESULT_TYPEDEF_ ( 0x0004D000 )
#define XACT_S_DEFECT _HRESULT_TYPEDEF_ ( 0x0004D001 )
#define XACT_S_FIRST (315392)
#define XACT_S_LAST (315408)
#define XACT_S_LASTRESOURCEMANAGER _HRESULT_TYPEDEF_ ( 0x0004D010 )
#define XACT_S_LOCALLY_OK _HRESULT_TYPEDEF_ ( 0x0004D00A )
#define XACT_S_MADECHANGESCONTENT _HRESULT_TYPEDEF_ ( 0x0004D005 )
#define XACT_S_MADECHANGESINFORM _HRESULT_TYPEDEF_ ( 0x0004D006 )
#define XACT_S_OKINFORM _HRESULT_TYPEDEF_ ( 0x0004D004 )
#define XACT_S_READONLY _HRESULT_TYPEDEF_ ( 0x0004D002 )
#define XACT_S_SINGLEPHASE _HRESULT_TYPEDEF_ ( 0x0004D009 )
#define XACT_S_SOMENORETAIN _HRESULT_TYPEDEF_ ( 0x0004D003 )
#define XBUTTON1 (1)
#define XBUTTON2 (2)
#define XCLASS_BOOL (4096)
#define XCLASS_DATA (8192)
#define XCLASS_FLAGS (16384)
#define XCLASS_MASK (64512)
#define XCLASS_NOTIFICATION (32768)
#define XENROLL_E_CANNOT_ADD_ROOT_CERT _HRESULT_TYPEDEF_ ( 0x80095001 )
#define XENROLL_E_KEYSPEC_SMIME_MISMATCH _HRESULT_TYPEDEF_ ( 0x80095005 )
#define XENROLL_E_KEY_NOT_EXPORTABLE _HRESULT_TYPEDEF_ ( 0x80095000 )
#define XENROLL_E_RESPONSE_KA_HASH_MISMATCH _HRESULT_TYPEDEF_ ( 0x80095004 )
#define XENROLL_E_RESPONSE_KA_HASH_NOT_FOUND _HRESULT_TYPEDEF_ ( 0x80095002 )
#define XENROLL_E_RESPONSE_UNEXPECTED_KA_HASH _HRESULT_TYPEDEF_ ( 0x80095003 )
#define XSTATE_AVX (2)
#define XSTATE_GSSE (2)
#define XSTATE_LEGACY_FLOATING_POINT (0)
#define XSTATE_LEGACY_SSE (1)
#define XSTATE_MASK_AVX (4ull)
#define XSTATE_MASK_GSSE (4ull)
#define XSTATE_MASK_LEGACY (3ull)
#define XSTATE_MASK_LEGACY_FLOATING_POINT (1ull)
#define XSTATE_MASK_LEGACY_SSE (2ull)
#define XST_ADVACKRCVD (13)
#define XST_ADVDATAACKRCVD (16)
#define XST_ADVDATASENT (15)
#define XST_ADVSENT (11)
#define XST_CONNECTED (2)
#define XST_DATARCVD (6)
#define XST_EXECACKRCVD (10)
#define XST_EXECSENT (9)
#define XST_INCOMPLETE (1)
#define XST_INIT1 (3)
#define XST_INIT2 (4)
#define XST_NULL (0)
#define XST_POKEACKRCVD (8)
#define XST_POKESENT (7)
#define XST_REQSENT (5)
#define XST_UNADVACKRCVD (14)
#define XST_UNADVSENT (12)
#define XTYPF_ACKREQ (8)
#define XTYPF_NOBLOCK (2)
#define XTYPF_NODATA (4)
#define XTYP_ADVDATA (16400)
#define XTYP_ADVREQ (8226)
#define XTYP_ADVSTART (4144)
#define XTYP_ADVSTOP (32832)
#define XTYP_CONNECT (4194)
#define XTYP_CONNECT_CONFIRM (32882)
#define XTYP_DISCONNECT (32962)
#define XTYP_ERROR (32770)
#define XTYP_EXECUTE (16464)
#define XTYP_MASK (240)
#define XTYP_MONITOR (33010)
#define XTYP_POKE (16528)
#define XTYP_REGISTER (32930)
#define XTYP_REQUEST (8368)
#define XTYP_SHIFT (4)
#define XTYP_UNREGISTER (32978)
#define XTYP_WILDCONNECT (8418)
#define XTYP_XACT_COMPLETE (32896)
#define XcvData XcvDataW
#define Yield() 
#define YieldProcessor _mm_pause
#define ZERO_PADDING (3)
#define ZeroMemory RtlZeroMemory
#define _APISECUREBASE_ 
#define _APISETDEBUG_ 
#define _APISETFILE_ 
#define _APISETHANDLE_ 
#define _APISETLIBLOADER_ 
#define _APISETNAMESPACE_ 
#define _APISETSTRING_ 
#define _APISETUTIL_ 
#define _APPIDREGFLAGS_DEFINED 
#define _ARRAYSIZE(A) RTL_NUMBER_OF_V1 ( A )
#define _ASSEMBLY_DLL_REDIRECTION_DETAILED_INFORMATION _ASSEMBLY_FILE_DETAILED_INFORMATION
#define _AUTH_IDENTITY_DEFINED 
#define _BASETSD_H_ 
#define _BEM_H_ 
#define _BLOB_DEFINED 
#define _BOOLEAN_ 
#define _BSDTYPES_DEFINED 
#define _CRTNOALIAS 
#define _CRTRESTRICT 
#define _CRT_MEMORY_DEFINED 
#define _CRT_PACKING (8)
#define _CRT_SECURE_CPP_NOTHROW throw ( )
#define _CRYPT32WTEXT(quote) __CRYPT32WTEXT ( quote )
#define _CY_DEFINED 
#define _DATETIMEAPI_H_ 
#define _DCOMSCM_REMOTECALL_FLAGS_DEFINED 
#define _DEF_WINBOOL_ 
#define _DEVIOCTL_ 
#define _DWORDLONG_ 
#define _ERRCODE_DEFINED 
#define _ERRHANDLING_H_ 
#define _ERROR_STATUS_T_DEFINED 
#define _FD_SET_WINSOCK_DEFINED 
#define _FILESYSTEMFSCTL_ 
#define _FILETIME_ 
#define _GUIDDEF_H_ 
#define _HEAPAPI_H_ 
#define _HPOWERNOTIFY_DEF_ 
#define _HRESULT_DEFINED 
#define _HRESULT_TYPEDEF_(_sc) ( ( HRESULT ) _sc )
#define _HYPER_DEFINED 
#define _IMM_ 
#define _IMM_SDK_DEFINED_ 
#define _INC_COMMDLG 
#define _INC_CRTDEFS 
#define _INC_CRTDEFS_MACRO 
#define _INC_CRT_UNICODE_MACROS (2)
#define _INC_DDEMLH 
#define _INC_EXCPT 
#define _INC_MMSYSTEM 
#define _INC_SHELLAPI 
#define _INC_STRING 
#define _INTPTR_T_DEFINED 
#define _IO(x, y) ( IOC_VOID | ( ( x ) << 8 ) | ( y ) )
#define _IOR(x, y, t) ( IOC_OUT | ( ( ( __LONG32 ) sizeof ( t ) & IOCPARM_MASK ) << 16 ) | ( ( x ) << 8 ) | ( y ) )
#define _IOW(x, y, t) ( IOC_IN | ( ( ( __LONG32 ) sizeof ( t ) & IOCPARM_MASK ) << 16 ) | ( ( x ) << 8 ) | ( y ) )
#define _IO_APISET_H_ 
#define _JOBAPISET_H_ 
#define _KTMTYPES_ 
#define _LANGID_DEFINED 
#define _LARGE_INTEGER_DEFINED 
#define _LCID_DEFINED 
#define _LDT_ENTRY_DEFINED 
#define _LIST_ENTRY_DEFINED 
#define _LOGPALETTE_DEFINED 
#define _LPBLOB_DEFINED 
#define _LPCBYTE_DEFINED 
#define _LPCVOID_DEFINED 
#define _LZEXPAND_ 
#define _MCIDEVICEID_ 
#define _MCIERROR_ 
#define _MCX_H_ 
#define _MEMORYAPI_H_ 
#define _MINGW_IP_MREQ1_H 
#define _MINGW_IP_TYPES_H 
#define _MINWINBASE_ 
#define _MINWINDEF_ 
#define _MMRESULT_ 
#define _M_AMD64 (100)
#define _M_X64 (100)
#define _NAMEDPIPE_H_ 
#define _NLSCMPERROR (2147483647)
#define _NLSCMP_DEFINED 
#define _NTDDDISK_H_ 
#define _NTDDSCRD_H2_ 
#define _NTDDSTOR_H_ 
#define _NTDDTAPE_WINNT_ 
#define _NTSTATUS_PSDK 
#define _NTTMAPI_ 
#define _NT_TIB_DEFINED 
#define _PALETTEENTRY_DEFINED 
#define _PROCESSENV_ 
#define _PROCESSTHREADSAPI_H_ 
#define _PROFILEAPI_H_ 
#define _PROPSHEETPAGEA_V3 _PROPSHEETPAGEA
#define _PROPSHEETPAGEW_V3 _PROPSHEETPAGEW
#define _PROVIDER_STRUCTS_DEFINED 
#define _PRSHT_H_ 
#define _PTRDIFF_T_ 
#define _PTRDIFF_T_DEFINED 
#define _REFCLSID_DEFINED 
#define _REFFMTID_DEFINED 
#define _REFGUID_DEFINED 
#define _REFIID_DEFINED 
#define _ROTFLAGS_DEFINED 
#define _ROTREGFLAGS_DEFINED 
#define _ROT_COMPARE_MAX_DEFINED 
#define _RPC_HTTP_TRANSPORT_CREDENTIALS __MINGW_NAME_UAW ( _RPC_HTTP_TRANSPORT_CREDENTIALS )
#define _RPC_SECURITY_QOS_V2 __MINGW_NAME_UAW ( _RPC_SECURITY_QOS_V2 )
#define _RPC_SECURITY_QOS_V3 __MINGW_NAME_UAW ( _RPC_SECURITY_QOS_V3 )
#define _RSIZE_T_DEFINED 
#define _RTL_RUN_ONCE_DEF (1)
#define _SEC_WINNT_AUTH_IDENTITY __MINGW_NAME_UAW ( _SEC_WINNT_AUTH_IDENTITY )
#define _SIZE_T_DEFINED 
#define _SLIST_HEADER_ 
#define _SSIZE_T_DEFINED 
#define _SYNCHAPI_H_ 
#define _SYSINFOAPI_H_ 
#define _SYSTEMTIME_ 
#define _SYS_GUID_OPERATORS_ 
#define _SYS_GUID_OPERATOR_EQ_ 
#define _TAGLC_ID_DEFINED 
#define _TCHAR_DEFINED 
#define _TEXTMETRIC_DEFINED 
#define _THREADLOCALEINFO 
#define _THREADPOOLLEGACYAPISET_H_ 
#define _TIME32_T_DEFINED 
#define _TIME64_T_DEFINED 
#define _TIMEZONEAPI_H_ 
#define _TIME_T_DEFINED 
#define _UINTPTR_T_DEFINED 
#define _ULONGLONG_ 
#define _VARIANT_BOOL / ## /
#define _WAVEFORMATEX_ 
#define _WCHAR_T_DEFINED 
#define _WCTYPE_T_DEFINED 
#define _WConst_return _CONST_RETURN
#define _WINBASE_ 
#define _WINCON_ 
#define _WINDEF_ 
#define _WINERROR_ 
#define _WINGDI_ 
#define _WINIOCTL_ 
#define _WINNETWK_ 
#define _WINNLS_ 
#define _WINNT_ 
#define _WINPERF_ 
#define _WINREG_ 
#define _WINSCARD_H_ 
#define _WINSOCKAPI_ 
#define _WINSPOOL_ 
#define _WINSVC_ 
#define _WINT_T 
#define _WINUSER_ 
#define _WOW64APISET_H_ 
#define _WSTRING_DEFINED 
#define _XFORM_ 
#define __BCRYPT_H__ 
#define __C89_NAMELESS __MINGW_EXTENSION
#define __C89_NAMELESSSTRUCTNAME 
#define __C89_NAMELESSSTRUCTNAME1 
#define __C89_NAMELESSSTRUCTNAME2 
#define __C89_NAMELESSSTRUCTNAME3 
#define __C89_NAMELESSSTRUCTNAME4 
#define __C89_NAMELESSSTRUCTNAME5 
#define __C89_NAMELESSUNIONNAME 
#define __C89_NAMELESSUNIONNAME1 
#define __C89_NAMELESSUNIONNAME2 
#define __C89_NAMELESSUNIONNAME3 
#define __C89_NAMELESSUNIONNAME4 
#define __C89_NAMELESSUNIONNAME5 
#define __C89_NAMELESSUNIONNAME6 
#define __C89_NAMELESSUNIONNAME7 
#define __C89_NAMELESSUNIONNAME8 
#define __COMPARTMENT_ID_DEFINED__ 
#define __CRYPT32WTEXT(quote) L ## quote
#define __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_0(__ret, __func, __dsttype, __dst) 
#define __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_1(__ret, __func, __dsttype, __dst, __type1, __arg1) 
#define __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_1_ARGLIST(__ret, __func, __vfunc, __dsttype, __dst, __type1, __arg1) 
#define __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_2(__ret, __func, __dsttype, __dst, __type1, __arg1, __type2, __arg2) 
#define __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_2_ARGLIST(__ret, __func, __vfunc, __dsttype, __dst, __type1, __arg1, __type2, __arg2) 
#define __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_3(__ret, __func, __dsttype, __dst, __type1, __arg1, __type2, __arg2, __type3, __arg3) 
#define __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_4(__ret, __func, __dsttype, __dst, __type1, __arg1, __type2, __arg2, __type3, __arg3, __type4, __arg4) 
#define __DEFINE_CPP_OVERLOAD_SECURE_FUNC_1_1(__ret, __func, __type0, __arg0, __dsttype, __dst, __type1, __arg1) 
#define __DEFINE_CPP_OVERLOAD_SECURE_FUNC_1_2(__ret, __func, __type0, __arg0, __dsttype, __dst, __type1, __arg1, __type2, __arg2) 
#define __DEFINE_CPP_OVERLOAD_SECURE_FUNC_1_3(__ret, __func, __type0, __arg0, __dsttype, __dst, __type1, __arg1, __type2, __arg2, __type3, __arg3) 
#define __DEFINE_CPP_OVERLOAD_SECURE_FUNC_2_0(__ret, __func, __type1, __arg1, __type2, __arg2, __dsttype, __dst) 
#define __DEFINE_CPP_OVERLOAD_SECURE_FUNC_SPLITPATH(__ret, __func, __dsttype, __src) 
#define __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_0(__ret_type, __ret_policy, __decl_spec, __name, __dst_attr, __dst_type, __dst) __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_0_EX ( __ret_type , __ret_policy , __decl_spec , __func_name , __func_name ## _s , __dst_attr , __dst_type , __dst )
#define __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_0_EX(__ret_type, __ret_policy, __decl_spec, __name, __sec_name, __dst_attr, __dst_type, __dst) 
#define __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1(__ret_type, __ret_policy, __decl_spec, __name, __dst_attr, __dst_type, __dst, __arg1_type, __arg1) __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_2_EX ( __ret_type , __ret_policy , __decl_spec , __func_name , __func_name ## _s , __dst_attr , __dst_type , __dst , __arg1_type , __arg1 , __arg2_type , __arg2 )
#define __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX(__ret_type, __ret_policy, __decl_spec, __name, __sec_name, __dst_attr, __dst_type, __dst, __arg1_type, __arg1) 
#define __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_2(__ret_type, __ret_policy, __decl_spec, __name, __dst_attr, __dst_type, __dst, __arg1_type, __arg1, __arg2_type, __arg2) __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_2_EX ( __ret_type , __ret_policy , __decl_spec , __func_name , __func_name ## _s , __dst_attr , __dst_type , __dst , __arg1_type , __arg1 , __arg2_type , __arg2 )
#define __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_2_EX(__ret_type, __ret_policy, __decl_spec, __name, __sec_name, __dst_attr, __dst_type, __dst, __arg1_type, __arg1, __arg2_type, __arg2) 
#define __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_3(__ret_type, __ret_policy, __decl_spec, __name, __dst_attr, __dst_type, __dst, __arg1_type, __arg1, __arg2_type, __arg2, __arg3_type, __arg3) __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_3_EX ( __ret_type , __ret_policy , __decl_spec , __func_name , __func_name ## _s , __dst_attr , __dst_type , __dst , __arg1_type , __arg1 , __arg2_type , __arg2 , __arg3_type , __arg3 )
#define __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_3_EX(__ret_type, __ret_policy, __decl_spec, __name, __sec_name, __dst_attr, __dst_type, __dst, __arg1_type, __arg1, __arg2_type, __arg2, __arg3_type, __arg3) 
#define __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_4(__ret_type, __ret_policy, __decl_spec, __name, __dst_attr, __dst_type, __dst, __arg1_type, __arg1, __arg2_type, __arg2, __arg3_type, __arg3, __arg4_type, __arg4) __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_4_EX ( __ret_type , __ret_policy , __decl_spec , __func_name , __func_name ## _s , __dst_attr , __dst_type , __dst , __arg1_type , __arg1 , __arg2_type , __arg2 , __arg3_type , __arg3 , __arg4_type , __arg4 )
#define __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_4_EX(__ret_type, __ret_policy, __decl_spec, __name, __sec_name, __dst_attr, __dst_type, __dst, __arg1_type, __arg1, __arg2_type, __arg2, __arg3_type, __arg3, __arg4_type, __arg4) 
#define __DPAPI_H__ 
#define __GNU_EXTENSION __MINGW_EXTENSION
#define __HRESULT_FROM_WIN32(x) ( ( HRESULT ) ( x ) <= 0 ? ( ( HRESULT ) ( x ) ) : ( ( HRESULT ) ( ( ( x ) & 0x0000FFFF ) | ( FACILITY_WIN32 << 16 ) | 0x80000000 ) ) )
#define __IID_DEFINED__ 
#define __IMAGE_COR20_HEADER_DEFINED__ 
#define __INTRINSIC_GROUP_WINBASE 
#define __INTRINSIC_GROUP_WINNT 
#define __IWinTypesBase_INTERFACE_DEFINED__ 
#define __IWinTypes_INTERFACE_DEFINED__ 
#define __LPCGUID_DEFINED__ 
#define __LPGUID_DEFINED__ 
#define __MIDL_CONST const
#define __MIDL_DECLSPEC_DLLEXPORT __declspec ( dllexport )
#define __MIDL_DECLSPEC_DLLIMPORT __declspec ( dllimport )
#define __MIDL_USER_DEFINED 
#define __MIDL_user_allocate_free_DEFINED__ 
#define __MINGW32_MAJOR_VERSION (3)
#define __MINGW32_MINOR_VERSION (11)
#define __MINGW64_STRINGIFY(x) __STRINGIFY ( x )
#define __MINGW64_VERSION_MAJOR (5)
#define __MINGW64_VERSION_MINOR (0)
#define __MINGW64_VERSION_RC (0)
#define __MINGW64_VERSION_STATE "alpha"
#define __MINGW64_VERSION_STR __MINGW64_STRINGIFY ( __MINGW64_VERSION_MAJOR ) "." __MINGW64_STRINGIFY ( __MINGW64_VERSION_MINOR )
#define __MINGW_ATTRIB_DEPRECATED_MSVC2005 __MINGW_ATTRIB_DEPRECATED_STR ( __MINGW_MSVC2005_DEPREC_STR )
#define __MINGW_ATTRIB_DEPRECATED_SEC_WARN __MINGW_ATTRIB_DEPRECATED_STR ( __MINGW_SEC_WARN_STR )
#define __MINGW_ATTRIB_DEPRECATED_STR(X) 
#define __MINGW_EXTENSION 
#define __MINGW_GCC_VERSION (0)
#define __MINGW_GNUC_PREREQ(major, minor) 0
#define __MINGW_GNU_PRINTF(__format, __args) __attribute__ ( ( __format__ ( gnu_printf , __format , __args ) ) )
#define __MINGW_GNU_SCANF(__format, __args) __attribute__ ( ( __format__ ( gnu_scanf , __format , __args ) ) )
#define __MINGW_HAVE_ANSI_C99_PRINTF (1)
#define __MINGW_HAVE_ANSI_C99_SCANF (1)
#define __MINGW_HAVE_WIDE_C99_PRINTF (1)
#define __MINGW_HAVE_WIDE_C99_SCANF (1)
#define __MINGW_IMP_LSYMBOL(sym) __imp_ ## sym
#define __MINGW_IMP_SYMBOL(sym) __imp_ ## sym
#define __MINGW_LSYMBOL(sym) _ ## sym
#define __MINGW_MSC_PREREQ(major, minor) ( _MSC_VER >= ( major * 100 + minor * 10 ) )
#define __MINGW_MSVC2005_DEPREC_STR "This POSIX function is deprecated beginning in Visual C++ 2005, use _CRT_NONSTDC_NO_DEPRECATE to disable deprecation"
#define __MINGW_MS_PRINTF(__format, __args) __attribute__ ( ( __format__ ( ms_printf , __format , __args ) ) )
#define __MINGW_MS_SCANF(__format, __args) __attribute__ ( ( __format__ ( ms_scanf , __format , __args ) ) )
#define __MINGW_NAME_AW(func) func ## A
#define __MINGW_NAME_AW_EXT(func, ext) func ## A ## ext
#define __MINGW_NAME_UAW(func) func ## _A
#define __MINGW_NAME_UAW_EXT(func, ext) func ## _A_ ## ext
#define __MINGW_POISON_NAME(__IFACE) __IFACE ## _layout_has_not_been_verified_and_its_declaration_is_most_likely_incorrect
#define __MINGW_PROCNAMEEXT_AW "A"
#define __MINGW_SEC_WARN_STR "This function or variable may be unsafe, use _CRT_SECURE_NO_WARNINGS to disable deprecation"
#define __MINGW_STRING_AW(str) str
#define __MINGW_TRANSMIT_FILE_H 
#define __MINGW_TYPEDEF_AW(type) typedef __MINGW_NAME_AW ( type ) type ;
#define __MINGW_TYPEDEF_UAW(type) typedef __MINGW_NAME_UAW ( type ) type ;
#define __MINGW_USE_UNDERSCORE_PREFIX (0)
#define __MINGW_USYMBOL(sym) sym
#define __MINGW_WSADATA_H 
#define __MSABI_LONG(x) x ## l
#define __MSWSOCK_WS1_SHARED 
#define __NCRYPT_H__ 
#define __OBJECTID_DEFINED 
#define __PEXCEPTION_ROUTINE_DEFINED 
#define __REQUIRED_RPCNDR_H_VERSION__ (475)
#define __RPCDCEP_H__ 
#define __RPCDCE_H__ 
#define __RPCNDR_H_VERSION__ (475)
#define __RPCNDR_H__ 
#define __RPCNSIP_H__ 
#define __RPCNSI_H__ 
#define __RPC_API __stdcall
#define __RPC_FAR 
#define __RPC_H__ 
#define __RPC_STUB __RPC_API
#define __RPC_USER __RPC_API
#define __RPC_WIN64__ 
#define __SECSTATUS_DEFINED__ 
#define __STRINGIFY(x) # x
#define __TEXT(quote) quote
#define __TVOUT__ 
#define __WCHAR_DEFINED 
#define __WINCRYPT_H__ 
#define __WINEFS_H__ 
#define __WINSOCK_WS1_SHARED 
#define ___GROUP_AFFINITY_DEFINED 
#define ___WSA_FD_TYPES_H 
#define ___WSA_SOCKET_TYPES_H 
#define __crt_typefix(ctype) 
#define __except1 asm ( "\tnop\n" "\t.l_endw: nop\n" ) ;
#define __int3264 __int64
#define __intptr_t_defined 
#define __mingw_ovr static __cdecl
#define __try1(pHandler) __asm__ __volatile__ ( "\t.l_startw:\n" "\t.seh_handler __C_specific_handler, @except\n" "\t.seh_handlerdata\n" "\t.long 1\n" "\t.rva .l_startw, .l_endw, " __MINGW64_STRINGIFY ( __MINGW_USYMBOL ( pHandler ) ) " ,.l_endw\n" "\t.text" ) ;
#define __uintptr_t_defined 
#define __wtypes_h__ 
#define __wtypesbase_h__ 
#define _huge 
#define _loadds 
#define _midl_addp(p, n) ( p += n )
#define _midl_advmp(mp) * ( * ( unsigned __LONG32 * * ) & mp ) ++
#define _midl_fa2(p) ( p = ( RPC_BUFPTR ) ( ( ULONG_PTR ) ( p + 1 ) & ~ 0x1 ) )
#define _midl_fa4(p) ( p = ( RPC_BUFPTR ) ( ( ULONG_PTR ) ( p + 3 ) & ~ 0x3 ) )
#define _midl_fa8(p) ( p = ( RPC_BUFPTR ) ( ( ULONG_PTR ) ( p + 7 ) & ~ 0x7 ) )
#define _midl_ma1(p, cast) * ( * ( cast * * ) & p ) ++
#define _midl_ma2(p, cast) * ( * ( cast * * ) & p ) ++
#define _midl_ma4(p, cast) * ( * ( cast * * ) & p ) ++
#define _midl_ma8(p, cast) * ( * ( cast * * ) & p ) ++
#define _midl_marsh_lhs(p, cast) * ( * ( cast * * ) & p ) ++
#define _midl_marsh_up(mp, p) * ( * ( unsigned __LONG32 * * ) & mp ) ++ = ( unsigned __LONG32 ) p
#define _midl_unma1(p, cast) * ( ( cast * ) p ) ++
#define _midl_unma2(p, cast) * ( ( cast * ) p ) ++
#define _midl_unma3(p, cast) * ( ( cast * ) p ) ++
#define _midl_unma4(p, cast) * ( ( cast * ) p ) ++
#define _midl_unmarsh_up(p) ( * ( * ( unsigned __LONG32 * * ) & p ) ++ )
#define _szPROP_ID(PropId) # PropId
#define _tagBLOB_DEFINED 
#define _tagBSTRBLOB_DEFINED 
#define _tagCY_DEFINED 
#define abnormal_termination _abnormal_termination
#define auxGetDevCaps __MINGW_NAME_AW ( auxGetDevCaps )
#define boolean_array_from_ndr(Source, LowerIndex, UpperIndex, Target) { NDRcopy ( ( ( ( char * ) ( Target ) ) + ( LowerIndex ) ) , ( Source ) -> Buffer , ( unsigned int ) ( ( UpperIndex ) - ( LowerIndex ) ) ) ; * ( unsigned __LONG32 * ) & ( Source ) -> Buffer += ( ( UpperIndex ) - ( LowerIndex ) ) ; }
#define boolean_from_ndr(source, target) { * ( target ) = * ( * ( char * * ) & ( source ) -> Buffer ) ++ ; }
#define byte_array_from_ndr(Source, LowerIndex, UpperIndex, Target) { NDRcopy ( ( ( ( char * ) ( Target ) ) + ( LowerIndex ) ) , ( Source ) -> Buffer , ( unsigned int ) ( ( UpperIndex ) - ( LowerIndex ) ) ) ; * ( unsigned __LONG32 * ) & ( Source ) -> Buffer += ( ( UpperIndex ) - ( LowerIndex ) ) ; }
#define byte_from_ndr(source, target) { * ( target ) = * ( * ( char * * ) & ( source ) -> Buffer ) ++ ; }
#define cPRIV_KEY_CACHE_MAX_ITEMS_DEFAULT (20)
#define cPRIV_KEY_CACHE_PURGE_INTERVAL_SECONDS_DEFAULT (86400)
#define cbNDRContext (20)
#define cdecl 
#define dwFORCE_KEY_PROTECTION_DISABLED (0)
#define dwFORCE_KEY_PROTECTION_HIGH (2)
#define dwFORCE_KEY_PROTECTION_USER_SELECT (1)
#define exception_code _exception_code
#define exception_info ( struct _EXCEPTION_POINTERS * ) _exception_info
#define far 
#define h_addr h_addr_list [ 0 ]
#define hyper __int64
#define interface struct
#define joyGetDevCaps __MINGW_NAME_AW ( joyGetDevCaps )
#define lstrcat __MINGW_NAME_AW ( lstrcat )
#define lstrcmp __MINGW_NAME_AW ( lstrcmp )
#define lstrcmpi __MINGW_NAME_AW ( lstrcmpi )
#define lstrcpy __MINGW_NAME_AW ( lstrcpy )
#define lstrcpyn __MINGW_NAME_AW ( lstrcpyn )
#define lstrlen __MINGW_NAME_AW ( lstrlen )
#define max(a, b) ( ( ( a ) > ( b ) ) ? ( a ) : ( b ) )
#define mciGetDeviceID __MINGW_NAME_AW ( mciGetDeviceID )
#define mciGetDeviceIDFromElementID __MINGW_NAME_AW ( mciGetDeviceIDFromElementID )
#define mciGetErrorString __MINGW_NAME_AW ( mciGetErrorString )
#define mciSendCommand __MINGW_NAME_AW ( mciSendCommand )
#define mciSendString __MINGW_NAME_AW ( mciSendString )
#define midiInGetDevCaps __MINGW_NAME_AW ( midiInGetDevCaps )
#define midiInGetErrorText __MINGW_NAME_AW ( midiInGetErrorText )
#define midiOutGetDevCaps __MINGW_NAME_AW ( midiOutGetDevCaps )
#define midiOutGetErrorText __MINGW_NAME_AW ( midiOutGetErrorText )
#define midl_user_allocate MIDL_user_allocate
#define midl_user_free MIDL_user_free
#define min(a, b) ( ( ( a ) < ( b ) ) ? ( a ) : ( b ) )
#define mixerGetControlDetails __MINGW_NAME_AW ( mixerGetControlDetails )
#define mixerGetDevCaps __MINGW_NAME_AW ( mixerGetDevCaps )
#define mixerGetLineControls __MINGW_NAME_AW ( mixerGetLineControls )
#define mixerGetLineInfo __MINGW_NAME_AW ( mixerGetLineInfo )
#define mmioFOURCC(ch0, ch1, ch2, ch3) MAKEFOURCC ( ch0 , ch1 , ch2 , ch3 )
#define mmioInstallIOProc __MINGW_NAME_AW ( mmioInstallIOProc )
#define mmioOpen __MINGW_NAME_AW ( mmioOpen )
#define mmioRename __MINGW_NAME_AW ( mmioRename )
#define mmioStringToFOURCC __MINGW_NAME_AW ( mmioStringToFOURCC )
#define near 
#define pascal __stdcall
#define rpc_binding_handle_t RPC_BINDING_HANDLE
#define rpc_binding_vector_t RPC_BINDING_VECTOR
#define s_addr S_un . S_addr
#define s_host S_un . S_un_b . s_b2
#define s_imp S_un . S_un_w . s_w2
#define s_impno S_un . S_un_b . s_b4
#define s_lh S_un . S_un_b . s_b3
#define s_net S_un . S_un_b . s_b1
#define small_array_from_ndr(Source, LowerIndex, UpperIndex, Target) { NDRcopy ( ( ( ( char * ) ( Target ) ) + ( LowerIndex ) ) , ( Source ) -> Buffer , ( unsigned int ) ( ( UpperIndex ) - ( LowerIndex ) ) ) ; * ( unsigned __LONG32 * ) & ( Source ) -> Buffer += ( ( UpperIndex ) - ( LowerIndex ) ) ; }
#define small_from_ndr(source, target) { * ( target ) = * ( * ( char * * ) & ( source ) -> Buffer ) ++ ; }
#define small_from_ndr_temp(source, target, format) { * ( target ) = * ( * ( char * * ) ( source ) ) ++ ; }
#define sndAlias(c0, c1) ( SND_ALIAS_START + ( ( DWORD ) ( BYTE ) ( c0 ) | ( ( DWORD ) ( BYTE ) ( c1 ) << 8 ) ) )
#define sndPlaySound __MINGW_NAME_AW ( sndPlaySound )
#define strcasecmp _stricmp
#define strncasecmp _strnicmp
#define szFORCE_KEY_PROTECTION "ForceKeyProtection"
#define szKEY_CACHE_ENABLED "CachePrivateKeys"
#define szKEY_CACHE_SECONDS "PrivateKeyLifetimeSeconds"
#define szKEY_CRYPTOAPI_PRIVATE_KEY_OPTIONS "Software\\Policies\\Microsoft\\Cryptography"
#define szOID_ANSI_X942 "1.2.840.10046"
#define szOID_ANSI_X942_DH "1.2.840.10046.2.1"
#define szOID_ANY_APPLICATION_POLICY "1.3.6.1.4.1.311.10.12.1"
#define szOID_ANY_CERT_POLICY "2.5.29.32.0"
#define szOID_ANY_ENHANCED_KEY_USAGE "2.5.29.37.0"
#define szOID_APPLICATION_CERT_POLICIES "1.3.6.1.4.1.311.21.10"
#define szOID_APPLICATION_POLICY_CONSTRAINTS "1.3.6.1.4.1.311.21.12"
#define szOID_APPLICATION_POLICY_MAPPINGS "1.3.6.1.4.1.311.21.11"
#define szOID_ARCHIVED_KEY_ATTR "1.3.6.1.4.1.311.21.13"
#define szOID_ARCHIVED_KEY_CERT_HASH "1.3.6.1.4.1.311.21.16"
#define szOID_AUTHORITY_INFO_ACCESS "1.3.6.1.5.5.7.1.1"
#define szOID_AUTHORITY_KEY_IDENTIFIER "2.5.29.1"
#define szOID_AUTHORITY_KEY_IDENTIFIER2 "2.5.29.35"
#define szOID_AUTHORITY_REVOCATION_LIST "2.5.4.38"
#define szOID_AUTO_ENROLL_CTL_USAGE "1.3.6.1.4.1.311.20.1"
#define szOID_BACKGROUND_OTHER_LOGOTYPE "1.3.6.1.5.5.7.20.2"
#define szOID_BASIC_CONSTRAINTS "2.5.29.10"
#define szOID_BASIC_CONSTRAINTS2 "2.5.29.19"
#define szOID_BIOMETRIC_EXT "1.3.6.1.5.5.7.1.2"
#define szOID_BUSINESS_CATEGORY "2.5.4.15"
#define szOID_CA_CERTIFICATE "2.5.4.37"
#define szOID_CERTIFICATE_REVOCATION_LIST "2.5.4.39"
#define szOID_CERTIFICATE_TEMPLATE "1.3.6.1.4.1.311.21.7"
#define szOID_CERTSRV_CA_VERSION "1.3.6.1.4.1.311.21.1"
#define szOID_CERTSRV_CROSSCA_VERSION "1.3.6.1.4.1.311.21.22"
#define szOID_CERTSRV_PREVIOUS_CERT_HASH "1.3.6.1.4.1.311.21.2"
#define szOID_CERT_DISALLOWED_FILETIME_PROP_ID "1.3.6.1.4.1.311.10.11.104"
#define szOID_CERT_EXTENSIONS "1.3.6.1.4.1.311.2.1.14"
#define szOID_CERT_ISSUER_SERIAL_NUMBER_MD5_HASH_PROP_ID "1.3.6.1.4.1.311.10.11.28"
#define szOID_CERT_KEY_IDENTIFIER_PROP_ID "1.3.6.1.4.1.311.10.11.20"
#define szOID_CERT_MANIFOLD "1.3.6.1.4.1.311.20.3"
#define szOID_CERT_MD5_HASH_PROP_ID "1.3.6.1.4.1.311.10.11.4"
#define szOID_CERT_POLICIES "2.5.29.32"
#define szOID_CERT_POLICIES_95 "2.5.29.3"
#define szOID_CERT_POLICIES_95_QUALIFIER1 "2.16.840.1.113733.1.7.1.1"
#define szOID_CERT_PROP_ID(PropId) szOID_CERT_PROP_ID_PREFIX _szPROP_ID ( PropId )
#define szOID_CERT_PROP_ID_PREFIX "1.3.6.1.4.1.311.10.11."
#define szOID_CERT_SIGNATURE_HASH_PROP_ID "1.3.6.1.4.1.311.10.11.15"
#define szOID_CERT_STRONG_KEY_OS_1 "1.3.6.1.4.1.311.72.2.1"
#define szOID_CERT_STRONG_KEY_OS_CURRENT szOID_CERT_STRONG_KEY_OS_1
#define szOID_CERT_STRONG_KEY_OS_PREFIX "1.3.6.1.4.1.311.72.2."
#define szOID_CERT_STRONG_SIGN_OS_1 "1.3.6.1.4.1.311.72.1.1"
#define szOID_CERT_STRONG_SIGN_OS_CURRENT szOID_CERT_STRONG_SIGN_OS_1
#define szOID_CERT_STRONG_SIGN_OS_PREFIX "1.3.6.1.4.1.311.72.1."
#define szOID_CERT_SUBJECT_NAME_MD5_HASH_PROP_ID "1.3.6.1.4.1.311.10.11.29"
#define szOID_CMC "1.3.6.1.5.5.7.7"
#define szOID_CMC_ADD_ATTRIBUTES "1.3.6.1.4.1.311.10.10.1"
#define szOID_CMC_ADD_EXTENSIONS "1.3.6.1.5.5.7.7.8"
#define szOID_CMC_DATA_RETURN "1.3.6.1.5.5.7.7.4"
#define szOID_CMC_DECRYPTED_POP "1.3.6.1.5.5.7.7.10"
#define szOID_CMC_ENCRYPTED_POP "1.3.6.1.5.5.7.7.9"
#define szOID_CMC_GET_CERT "1.3.6.1.5.5.7.7.15"
#define szOID_CMC_GET_CRL "1.3.6.1.5.5.7.7.16"
#define szOID_CMC_IDENTIFICATION "1.3.6.1.5.5.7.7.2"
#define szOID_CMC_IDENTITY_PROOF "1.3.6.1.5.5.7.7.3"
#define szOID_CMC_ID_CONFIRM_CERT_ACCEPTANCE "1.3.6.1.5.5.7.7.24"
#define szOID_CMC_ID_POP_LINK_RANDOM "1.3.6.1.5.5.7.7.22"
#define szOID_CMC_ID_POP_LINK_WITNESS "1.3.6.1.5.5.7.7.23"
#define szOID_CMC_LRA_POP_WITNESS "1.3.6.1.5.5.7.7.11"
#define szOID_CMC_QUERY_PENDING "1.3.6.1.5.5.7.7.21"
#define szOID_CMC_RECIPIENT_NONCE "1.3.6.1.5.5.7.7.7"
#define szOID_CMC_REG_INFO "1.3.6.1.5.5.7.7.18"
#define szOID_CMC_RESPONSE_INFO "1.3.6.1.5.5.7.7.19"
#define szOID_CMC_REVOKE_REQUEST "1.3.6.1.5.5.7.7.17"
#define szOID_CMC_SENDER_NONCE "1.3.6.1.5.5.7.7.6"
#define szOID_CMC_STATUS_INFO "1.3.6.1.5.5.7.7.1"
#define szOID_CMC_TRANSACTION_ID "1.3.6.1.5.5.7.7.5"
#define szOID_COMMON_NAME "2.5.4.3"
#define szOID_COUNTRY_NAME "2.5.4.6"
#define szOID_CRL_DIST_POINTS "2.5.29.31"
#define szOID_CRL_NEXT_PUBLISH "1.3.6.1.4.1.311.21.4"
#define szOID_CRL_NUMBER "2.5.29.20"
#define szOID_CRL_REASON_CODE "2.5.29.21"
#define szOID_CRL_SELF_CDP "1.3.6.1.4.1.311.21.14"
#define szOID_CRL_VIRTUAL_BASE "1.3.6.1.4.1.311.21.3"
#define szOID_CROSS_CERTIFICATE_PAIR "2.5.4.40"
#define szOID_CROSS_CERT_DIST_POINTS "1.3.6.1.4.1.311.10.9.1"
#define szOID_CTL "1.3.6.1.4.1.311.10.1"
#define szOID_CT_PKI_DATA "1.3.6.1.5.5.7.12.2"
#define szOID_CT_PKI_RESPONSE "1.3.6.1.5.5.7.12.3"
#define szOID_DELTA_CRL_INDICATOR "2.5.29.27"
#define szOID_DESCRIPTION "2.5.4.13"
#define szOID_DESTINATION_INDICATOR "2.5.4.27"
#define szOID_DEVICE_SERIAL_NUMBER "2.5.4.5"
#define szOID_DH_SINGLE_PASS_STDDH_SHA1_KDF "1.3.133.16.840.63.0.2"
#define szOID_DH_SINGLE_PASS_STDDH_SHA256_KDF "1.3.132.1.11.1"
#define szOID_DH_SINGLE_PASS_STDDH_SHA384_KDF "1.3.132.1.11.2"
#define szOID_DISALLOWED_HASH szOID_CERT_SIGNATURE_HASH_PROP_ID
#define szOID_DISALLOWED_LIST "1.3.6.1.4.1.311.10.3.30"
#define szOID_DN_QUALIFIER "2.5.4.46"
#define szOID_DOMAIN_COMPONENT "0.9.2342.19200300.100.1.25"
#define szOID_DRM "1.3.6.1.4.1.311.10.5.1"
#define szOID_DRM_INDIVIDUALIZATION "1.3.6.1.4.1.311.10.5.2"
#define szOID_DS "2.5"
#define szOID_DSALG "2.5.8"
#define szOID_DSALG_CRPT "2.5.8.1"
#define szOID_DSALG_HASH "2.5.8.2"
#define szOID_DSALG_RSA "2.5.8.1.1"
#define szOID_DSALG_SIGN "2.5.8.3"
#define szOID_DS_EMAIL_REPLICATION "1.3.6.1.4.1.311.21.19"
#define szOID_ECC_CURVE_P256 "1.2.840.10045.3.1.7"
#define szOID_ECC_CURVE_P384 "1.3.132.0.34"
#define szOID_ECC_CURVE_P521 "1.3.132.0.35"
#define szOID_ECC_PUBLIC_KEY "1.2.840.10045.2.1"
#define szOID_ECDSA_SHA1 "1.2.840.10045.4.1"
#define szOID_ECDSA_SHA256 "1.2.840.10045.4.3.2"
#define szOID_ECDSA_SHA384 "1.2.840.10045.4.3.3"
#define szOID_ECDSA_SHA512 "1.2.840.10045.4.3.4"
#define szOID_ECDSA_SPECIFIED "1.2.840.10045.4.3"
#define szOID_EFS_RECOVERY "1.3.6.1.4.1.311.10.3.4.1"
#define szOID_EMBEDDED_NT_CRYPTO "1.3.6.1.4.1.311.10.3.8"
#define szOID_ENCRYPTED_KEY_HASH "1.3.6.1.4.1.311.21.21"
#define szOID_ENHANCED_KEY_USAGE "2.5.29.37"
#define szOID_ENROLLMENT_AGENT "1.3.6.1.4.1.311.20.2.1"
#define szOID_ENROLLMENT_CSP_PROVIDER "1.3.6.1.4.1.311.13.2.2"
#define szOID_ENROLLMENT_NAME_VALUE_PAIR "1.3.6.1.4.1.311.13.2.1"
#define szOID_ENROLL_CERTTYPE_EXTENSION "1.3.6.1.4.1.311.20.2"
#define szOID_ENTERPRISE_OID_ROOT "1.3.6.1.4.1.311.21.8"
#define szOID_EV_RDN_COUNTRY "1.3.6.1.4.1.311.60.2.1.3"
#define szOID_EV_RDN_LOCALE "1.3.6.1.4.1.311.60.2.1.1"
#define szOID_EV_RDN_STATE_OR_PROVINCE "1.3.6.1.4.1.311.60.2.1.2"
#define szOID_FACSIMILE_TELEPHONE_NUMBER "2.5.4.23"
#define szOID_FRESHEST_CRL "2.5.29.46"
#define szOID_GIVEN_NAME "2.5.4.42"
#define szOID_INFOSEC "2.16.840.1.101.2.1"
#define szOID_INFOSEC_SuiteAConfidentiality "2.16.840.1.101.2.1.1.14"
#define szOID_INFOSEC_SuiteAIntegrity "2.16.840.1.101.2.1.1.15"
#define szOID_INFOSEC_SuiteAKMandSig "2.16.840.1.101.2.1.1.18"
#define szOID_INFOSEC_SuiteAKeyManagement "2.16.840.1.101.2.1.1.17"
#define szOID_INFOSEC_SuiteASignature "2.16.840.1.101.2.1.1.13"
#define szOID_INFOSEC_SuiteATokenProtection "2.16.840.1.101.2.1.1.16"
#define szOID_INFOSEC_mosaicConfidentiality "2.16.840.1.101.2.1.1.4"
#define szOID_INFOSEC_mosaicIntegrity "2.16.840.1.101.2.1.1.6"
#define szOID_INFOSEC_mosaicKMandSig "2.16.840.1.101.2.1.1.12"
#define szOID_INFOSEC_mosaicKMandUpdSig "2.16.840.1.101.2.1.1.20"
#define szOID_INFOSEC_mosaicKeyManagement "2.16.840.1.101.2.1.1.10"
#define szOID_INFOSEC_mosaicSignature "2.16.840.1.101.2.1.1.2"
#define szOID_INFOSEC_mosaicTokenProtection "2.16.840.1.101.2.1.1.8"
#define szOID_INFOSEC_mosaicUpdatedInteg "2.16.840.1.101.2.1.1.21"
#define szOID_INFOSEC_mosaicUpdatedSig "2.16.840.1.101.2.1.1.19"
#define szOID_INFOSEC_sdnsConfidentiality "2.16.840.1.101.2.1.1.3"
#define szOID_INFOSEC_sdnsIntegrity "2.16.840.1.101.2.1.1.5"
#define szOID_INFOSEC_sdnsKMandSig "2.16.840.1.101.2.1.1.11"
#define szOID_INFOSEC_sdnsKeyManagement "2.16.840.1.101.2.1.1.9"
#define szOID_INFOSEC_sdnsSignature "2.16.840.1.101.2.1.1.1"
#define szOID_INFOSEC_sdnsTokenProtection "2.16.840.1.101.2.1.1.7"
#define szOID_INHIBIT_ANY_POLICY "2.5.29.54"
#define szOID_INITIALS "2.5.4.43"
#define szOID_INTERNATIONALIZED_EMAIL_ADDRESS "1.3.6.1.4.1.311.20.2.4"
#define szOID_INTERNATIONAL_ISDN_NUMBER "2.5.4.25"
#define szOID_IPSEC_KP_IKE_INTERMEDIATE "1.3.6.1.5.5.8.2.2"
#define szOID_ISSUED_CERT_HASH "1.3.6.1.4.1.311.21.17"
#define szOID_ISSUER_ALT_NAME "2.5.29.8"
#define szOID_ISSUER_ALT_NAME2 "2.5.29.18"
#define szOID_ISSUING_DIST_POINT "2.5.29.28"
#define szOID_KEYID_RDN "1.3.6.1.4.1.311.10.7.1"
#define szOID_KEY_ATTRIBUTES "2.5.29.2"
#define szOID_KEY_USAGE "2.5.29.15"
#define szOID_KEY_USAGE_RESTRICTION "2.5.29.4"
#define szOID_KP_CA_EXCHANGE "1.3.6.1.4.1.311.21.5"
#define szOID_KP_CSP_SIGNATURE "1.3.6.1.4.1.311.10.3.16"
#define szOID_KP_CTL_USAGE_SIGNING "1.3.6.1.4.1.311.10.3.1"
#define szOID_KP_DOCUMENT_SIGNING "1.3.6.1.4.1.311.10.3.12"
#define szOID_KP_EFS "1.3.6.1.4.1.311.10.3.4"
#define szOID_KP_KERNEL_MODE_CODE_SIGNING "1.3.6.1.4.1.311.61.1.1"
#define szOID_KP_KERNEL_MODE_HAL_EXTENSION_SIGNING "1.3.6.1.4.1.311.61.5.1"
#define szOID_KP_KERNEL_MODE_TRUSTED_BOOT_SIGNING "1.3.6.1.4.1.311.61.4.1"
#define szOID_KP_KEY_RECOVERY "1.3.6.1.4.1.311.10.3.11"
#define szOID_KP_KEY_RECOVERY_AGENT "1.3.6.1.4.1.311.21.6"
#define szOID_KP_LIFETIME_SIGNING "1.3.6.1.4.1.311.10.3.13"
#define szOID_KP_MOBILE_DEVICE_SOFTWARE "1.3.6.1.4.1.311.10.3.14"
#define szOID_KP_QUALIFIED_SUBORDINATION "1.3.6.1.4.1.311.10.3.10"
#define szOID_KP_SMARTCARD_LOGON "1.3.6.1.4.1.311.20.2.2"
#define szOID_KP_SMART_DISPLAY "1.3.6.1.4.1.311.10.3.15"
#define szOID_KP_TIME_STAMP_SIGNING "1.3.6.1.4.1.311.10.3.2"
#define szOID_LEGACY_POLICY_MAPPINGS "2.5.29.5"
#define szOID_LICENSES "1.3.6.1.4.1.311.10.6.1"
#define szOID_LICENSE_SERVER "1.3.6.1.4.1.311.10.6.2"
#define szOID_LOCALITY_NAME "2.5.4.7"
#define szOID_LOCAL_MACHINE_KEYSET "1.3.6.1.4.1.311.17.2"
#define szOID_LOGOTYPE_EXT "1.3.6.1.5.5.7.1.12"
#define szOID_LOYALTY_OTHER_LOGOTYPE "1.3.6.1.5.5.7.20.1"
#define szOID_MEMBER "2.5.4.31"
#define szOID_NAME_CONSTRAINTS "2.5.29.30"
#define szOID_NETSCAPE "2.16.840.1.113730"
#define szOID_NETSCAPE_BASE_URL "2.16.840.1.113730.1.2"
#define szOID_NETSCAPE_CA_POLICY_URL "2.16.840.1.113730.1.8"
#define szOID_NETSCAPE_CA_REVOCATION_URL "2.16.840.1.113730.1.4"
#define szOID_NETSCAPE_CERT_EXTENSION "2.16.840.1.113730.1"
#define szOID_NETSCAPE_CERT_RENEWAL_URL "2.16.840.1.113730.1.7"
#define szOID_NETSCAPE_CERT_SEQUENCE "2.16.840.1.113730.2.5"
#define szOID_NETSCAPE_CERT_TYPE "2.16.840.1.113730.1.1"
#define szOID_NETSCAPE_COMMENT "2.16.840.1.113730.1.13"
#define szOID_NETSCAPE_DATA_TYPE "2.16.840.1.113730.2"
#define szOID_NETSCAPE_REVOCATION_URL "2.16.840.1.113730.1.3"
#define szOID_NETSCAPE_SSL_SERVER_NAME "2.16.840.1.113730.1.12"
#define szOID_NEXT_UPDATE_LOCATION "1.3.6.1.4.1.311.10.2"
#define szOID_NIST_AES128_CBC "2.16.840.1.101.3.4.1.2"
#define szOID_NIST_AES128_WRAP "2.16.840.1.101.3.4.1.5"
#define szOID_NIST_AES192_CBC "2.16.840.1.101.3.4.1.22"
#define szOID_NIST_AES192_WRAP "2.16.840.1.101.3.4.1.25"
#define szOID_NIST_AES256_CBC "2.16.840.1.101.3.4.1.42"
#define szOID_NIST_AES256_WRAP "2.16.840.1.101.3.4.1.45"
#define szOID_NIST_sha256 "2.16.840.1.101.3.4.2.1"
#define szOID_NIST_sha384 "2.16.840.1.101.3.4.2.2"
#define szOID_NIST_sha512 "2.16.840.1.101.3.4.2.3"
#define szOID_NT5_CRYPTO "1.3.6.1.4.1.311.10.3.6"
#define szOID_NTDS_REPLICATION "1.3.6.1.4.1.311.25.1"
#define szOID_NT_PRINCIPAL_NAME "1.3.6.1.4.1.311.20.2.3"
#define szOID_OEM_WHQL_CRYPTO "1.3.6.1.4.1.311.10.3.7"
#define szOID_OIW "1.3.14"
#define szOID_OIWDIR "1.3.14.7.2"
#define szOID_OIWDIR_CRPT "1.3.14.7.2.1"
#define szOID_OIWDIR_HASH "1.3.14.7.2.2"
#define szOID_OIWDIR_SIGN "1.3.14.7.2.3"
#define szOID_OIWDIR_md2 "1.3.14.7.2.2.1"
#define szOID_OIWDIR_md2RSA "1.3.14.7.2.3.1"
#define szOID_OIWSEC "1.3.14.3.2"
#define szOID_OIWSEC_desCBC "1.3.14.3.2.7"
#define szOID_OIWSEC_desCFB "1.3.14.3.2.9"
#define szOID_OIWSEC_desECB "1.3.14.3.2.6"
#define szOID_OIWSEC_desEDE "1.3.14.3.2.17"
#define szOID_OIWSEC_desMAC "1.3.14.3.2.10"
#define szOID_OIWSEC_desOFB "1.3.14.3.2.8"
#define szOID_OIWSEC_dhCommMod "1.3.14.3.2.16"
#define szOID_OIWSEC_dsa "1.3.14.3.2.12"
#define szOID_OIWSEC_dsaComm "1.3.14.3.2.20"
#define szOID_OIWSEC_dsaCommSHA "1.3.14.3.2.21"
#define szOID_OIWSEC_dsaCommSHA1 "1.3.14.3.2.28"
#define szOID_OIWSEC_dsaSHA1 "1.3.14.3.2.27"
#define szOID_OIWSEC_keyHashSeal "1.3.14.3.2.23"
#define szOID_OIWSEC_md2RSASign "1.3.14.3.2.24"
#define szOID_OIWSEC_md4RSA "1.3.14.3.2.2"
#define szOID_OIWSEC_md4RSA2 "1.3.14.3.2.4"
#define szOID_OIWSEC_md5RSA "1.3.14.3.2.3"
#define szOID_OIWSEC_md5RSASign "1.3.14.3.2.25"
#define szOID_OIWSEC_mdc2 "1.3.14.3.2.19"
#define szOID_OIWSEC_mdc2RSA "1.3.14.3.2.14"
#define szOID_OIWSEC_rsaSign "1.3.14.3.2.11"
#define szOID_OIWSEC_rsaXchg "1.3.14.3.2.22"
#define szOID_OIWSEC_sha "1.3.14.3.2.18"
#define szOID_OIWSEC_sha1 "1.3.14.3.2.26"
#define szOID_OIWSEC_sha1RSASign "1.3.14.3.2.29"
#define szOID_OIWSEC_shaDSA "1.3.14.3.2.13"
#define szOID_OIWSEC_shaRSA "1.3.14.3.2.15"
#define szOID_ORGANIZATIONAL_UNIT_NAME "2.5.4.11"
#define szOID_ORGANIZATION_NAME "2.5.4.10"
#define szOID_OS_VERSION "1.3.6.1.4.1.311.13.2.3"
#define szOID_OWNER "2.5.4.32"
#define szOID_PHYSICAL_DELIVERY_OFFICE_NAME "2.5.4.19"
#define szOID_PKCS "1.2.840.113549.1"
#define szOID_PKCS_1 "1.2.840.113549.1.1"
#define szOID_PKCS_10 "1.2.840.113549.1.10"
#define szOID_PKCS_12 "1.2.840.113549.1.12"
#define szOID_PKCS_12_EXTENDED_ATTRIBUTES "1.3.6.1.4.1.311.17.3"
#define szOID_PKCS_12_FRIENDLY_NAME_ATTR "1.2.840.113549.1.9.20"
#define szOID_PKCS_12_KEY_PROVIDER_NAME_ATTR "1.3.6.1.4.1.311.17.1"
#define szOID_PKCS_12_LOCAL_KEY_ID "1.2.840.113549.1.9.21"
#define szOID_PKCS_12_PROTECTED_PASSWORD_SECRET_BAG_TYPE_ID "1.3.6.1.4.1.311.17.4"
#define szOID_PKCS_12_PbeIds "1.2.840.113549.1.12.1"
#define szOID_PKCS_12_pbeWithSHA1And128BitRC2 "1.2.840.113549.1.12.1.5"
#define szOID_PKCS_12_pbeWithSHA1And128BitRC4 "1.2.840.113549.1.12.1.1"
#define szOID_PKCS_12_pbeWithSHA1And2KeyTripleDES "1.2.840.113549.1.12.1.4"
#define szOID_PKCS_12_pbeWithSHA1And3KeyTripleDES "1.2.840.113549.1.12.1.3"
#define szOID_PKCS_12_pbeWithSHA1And40BitRC2 "1.2.840.113549.1.12.1.6"
#define szOID_PKCS_12_pbeWithSHA1And40BitRC4 "1.2.840.113549.1.12.1.2"
#define szOID_PKCS_2 "1.2.840.113549.1.2"
#define szOID_PKCS_3 "1.2.840.113549.1.3"
#define szOID_PKCS_4 "1.2.840.113549.1.4"
#define szOID_PKCS_5 "1.2.840.113549.1.5"
#define szOID_PKCS_6 "1.2.840.113549.1.6"
#define szOID_PKCS_7 "1.2.840.113549.1.7"
#define szOID_PKCS_7_DATA "1.2.840.113549.1.7.1"
#define szOID_PKCS_7_DIGESTED "1.2.840.113549.1.7.5"
#define szOID_PKCS_7_ENCRYPTED "1.2.840.113549.1.7.6"
#define szOID_PKCS_7_ENVELOPED "1.2.840.113549.1.7.3"
#define szOID_PKCS_7_SIGNED "1.2.840.113549.1.7.2"
#define szOID_PKCS_7_SIGNEDANDENVELOPED "1.2.840.113549.1.7.4"
#define szOID_PKCS_8 "1.2.840.113549.1.8"
#define szOID_PKCS_9 "1.2.840.113549.1.9"
#define szOID_PKCS_9_CONTENT_TYPE "1.2.840.113549.1.9.3"
#define szOID_PKCS_9_MESSAGE_DIGEST "1.2.840.113549.1.9.4"
#define szOID_PKINIT_KP_KDC "1.3.6.1.5.2.3.5"
#define szOID_PKIX "1.3.6.1.5.5.7"
#define szOID_PKIX_ACC_DESCR "1.3.6.1.5.5.7.48"
#define szOID_PKIX_CA_ISSUERS "1.3.6.1.5.5.7.48.2"
#define szOID_PKIX_CA_REPOSITORY "1.3.6.1.5.5.7.48.5"
#define szOID_PKIX_KP "1.3.6.1.5.5.7.3"
#define szOID_PKIX_KP_CLIENT_AUTH "1.3.6.1.5.5.7.3.2"
#define szOID_PKIX_KP_CODE_SIGNING "1.3.6.1.5.5.7.3.3"
#define szOID_PKIX_KP_EMAIL_PROTECTION "1.3.6.1.5.5.7.3.4"
#define szOID_PKIX_KP_IPSEC_END_SYSTEM "1.3.6.1.5.5.7.3.5"
#define szOID_PKIX_KP_IPSEC_TUNNEL "1.3.6.1.5.5.7.3.6"
#define szOID_PKIX_KP_IPSEC_USER "1.3.6.1.5.5.7.3.7"
#define szOID_PKIX_KP_OCSP_SIGNING "1.3.6.1.5.5.7.3.9"
#define szOID_PKIX_KP_SERVER_AUTH "1.3.6.1.5.5.7.3.1"
#define szOID_PKIX_KP_TIMESTAMP_SIGNING "1.3.6.1.5.5.7.3.8"
#define szOID_PKIX_NO_SIGNATURE "1.3.6.1.5.5.7.6.2"
#define szOID_PKIX_OCSP "1.3.6.1.5.5.7.48.1"
#define szOID_PKIX_OCSP_BASIC_SIGNED_RESPONSE "1.3.6.1.5.5.7.48.1.1"
#define szOID_PKIX_OCSP_NOCHECK "1.3.6.1.5.5.7.48.1.5"
#define szOID_PKIX_OCSP_NONCE "1.3.6.1.5.5.7.48.1.2"
#define szOID_PKIX_PE "1.3.6.1.5.5.7.1"
#define szOID_PKIX_POLICY_QUALIFIER_CPS "1.3.6.1.5.5.7.2.1"
#define szOID_PKIX_POLICY_QUALIFIER_USERNOTICE "1.3.6.1.5.5.7.2.2"
#define szOID_PKIX_TIME_STAMPING "1.3.6.1.5.5.7.48.3"
#define szOID_POLICY_CONSTRAINTS "2.5.29.36"
#define szOID_POLICY_MAPPINGS "2.5.29.33"
#define szOID_POSTAL_ADDRESS "2.5.4.16"
#define szOID_POSTAL_CODE "2.5.4.17"
#define szOID_POST_OFFICE_BOX "2.5.4.18"
#define szOID_PREFERRED_DELIVERY_METHOD "2.5.4.28"
#define szOID_PRESENTATION_ADDRESS "2.5.4.29"
#define szOID_PRIVATEKEY_USAGE_PERIOD "2.5.29.16"
#define szOID_PRODUCT_UPDATE "1.3.6.1.4.1.311.31.1"
#define szOID_QC_EU_COMPLIANCE "0.4.0.1862.1.1"
#define szOID_QC_SSCD "0.4.0.1862.1.4"
#define szOID_QC_STATEMENTS_EXT "1.3.6.1.5.5.7.1.3"
#define szOID_RDN_DUMMY_SIGNER "1.3.6.1.4.1.311.21.9"
#define szOID_REASON_CODE_HOLD "2.5.29.23"
#define szOID_REGISTERED_ADDRESS "2.5.4.26"
#define szOID_REMOVE_CERTIFICATE "1.3.6.1.4.1.311.10.8.1"
#define szOID_RENEWAL_CERTIFICATE "1.3.6.1.4.1.311.13.1"
#define szOID_REQUEST_CLIENT_INFO "1.3.6.1.4.1.311.21.20"
#define szOID_REQUIRE_CERT_CHAIN_POLICY "1.3.6.1.4.1.311.21.15"
#define szOID_REVOKED_LIST_SIGNER "1.3.6.1.4.1.311.10.3.19"
#define szOID_RFC3161_counterSign "1.3.6.1.4.1.311.3.3.1"
#define szOID_ROLE_OCCUPANT "2.5.4.33"
#define szOID_ROOT_LIST_SIGNER "1.3.6.1.4.1.311.10.3.9"
#define szOID_ROOT_PROGRAM_AUTO_UPDATE_CA_REVOCATION "1.3.6.1.4.1.311.60.3.1"
#define szOID_ROOT_PROGRAM_AUTO_UPDATE_END_REVOCATION "1.3.6.1.4.1.311.60.3.2"
#define szOID_ROOT_PROGRAM_FLAGS "1.3.6.1.4.1.311.60.1.1"
#define szOID_ROOT_PROGRAM_NO_OCSP_FAILOVER_TO_CRL "1.3.6.1.4.1.311.60.3.3"
#define szOID_RSA "1.2.840.113549"
#define szOID_RSAES_OAEP "1.2.840.113549.1.1.7"
#define szOID_RSA_DES_EDE3_CBC "1.2.840.113549.3.7"
#define szOID_RSA_DH "1.2.840.113549.1.3.1"
#define szOID_RSA_ENCRYPT "1.2.840.113549.3"
#define szOID_RSA_HASH "1.2.840.113549.2"
#define szOID_RSA_MD2 "1.2.840.113549.2.2"
#define szOID_RSA_MD2RSA "1.2.840.113549.1.1.2"
#define szOID_RSA_MD4 "1.2.840.113549.2.4"
#define szOID_RSA_MD4RSA "1.2.840.113549.1.1.3"
#define szOID_RSA_MD5 "1.2.840.113549.2.5"
#define szOID_RSA_MD5RSA "1.2.840.113549.1.1.4"
#define szOID_RSA_MGF1 "1.2.840.113549.1.1.8"
#define szOID_RSA_PSPECIFIED "1.2.840.113549.1.1.9"
#define szOID_RSA_RC2CBC "1.2.840.113549.3.2"
#define szOID_RSA_RC4 "1.2.840.113549.3.4"
#define szOID_RSA_RC5_CBCPad "1.2.840.113549.3.9"
#define szOID_RSA_RSA "1.2.840.113549.1.1.1"
#define szOID_RSA_SETOAEP_RSA "1.2.840.113549.1.1.6"
#define szOID_RSA_SHA1RSA "1.2.840.113549.1.1.5"
#define szOID_RSA_SHA256RSA "1.2.840.113549.1.1.11"
#define szOID_RSA_SHA384RSA "1.2.840.113549.1.1.12"
#define szOID_RSA_SHA512RSA "1.2.840.113549.1.1.13"
#define szOID_RSA_SMIMECapabilities "1.2.840.113549.1.9.15"
#define szOID_RSA_SMIMEalg "1.2.840.113549.1.9.16.3"
#define szOID_RSA_SMIMEalgCMS3DESwrap "1.2.840.113549.1.9.16.3.6"
#define szOID_RSA_SMIMEalgCMSRC2wrap "1.2.840.113549.1.9.16.3.7"
#define szOID_RSA_SMIMEalgESDH "1.2.840.113549.1.9.16.3.5"
#define szOID_RSA_SSA_PSS "1.2.840.113549.1.1.10"
#define szOID_RSA_certExtensions "1.2.840.113549.1.9.14"
#define szOID_RSA_challengePwd "1.2.840.113549.1.9.7"
#define szOID_RSA_contentType "1.2.840.113549.1.9.3"
#define szOID_RSA_counterSign "1.2.840.113549.1.9.6"
#define szOID_RSA_data "1.2.840.113549.1.7.1"
#define szOID_RSA_digestedData "1.2.840.113549.1.7.5"
#define szOID_RSA_emailAddr "1.2.840.113549.1.9.1"
#define szOID_RSA_encryptedData "1.2.840.113549.1.7.6"
#define szOID_RSA_envelopedData "1.2.840.113549.1.7.3"
#define szOID_RSA_extCertAttrs "1.2.840.113549.1.9.9"
#define szOID_RSA_hashedData "1.2.840.113549.1.7.5"
#define szOID_RSA_messageDigest "1.2.840.113549.1.9.4"
#define szOID_RSA_preferSignedData "1.2.840.113549.1.9.15.1"
#define szOID_RSA_signEnvData "1.2.840.113549.1.7.4"
#define szOID_RSA_signedData "1.2.840.113549.1.7.2"
#define szOID_RSA_signingTime "1.2.840.113549.1.9.5"
#define szOID_RSA_unstructAddr "1.2.840.113549.1.9.8"
#define szOID_RSA_unstructName "1.2.840.113549.1.9.2"
#define szOID_SEARCH_GUIDE "2.5.4.14"
#define szOID_SEE_ALSO "2.5.4.34"
#define szOID_SERIALIZED "1.3.6.1.4.1.311.10.3.3.1"
#define szOID_SERVER_GATED_CRYPTO "1.3.6.1.4.1.311.10.3.3"
#define szOID_SGC_NETSCAPE "2.16.840.1.113730.4.1"
#define szOID_SORTED_CTL "1.3.6.1.4.1.311.10.1.1"
#define szOID_STATE_OR_PROVINCE_NAME "2.5.4.8"
#define szOID_STREET_ADDRESS "2.5.4.9"
#define szOID_SUBJECT_ALT_NAME "2.5.29.7"
#define szOID_SUBJECT_ALT_NAME2 "2.5.29.17"
#define szOID_SUBJECT_DIR_ATTRS "2.5.29.9"
#define szOID_SUBJECT_INFO_ACCESS "1.3.6.1.5.5.7.1.11"
#define szOID_SUBJECT_KEY_IDENTIFIER "2.5.29.14"
#define szOID_SUPPORTED_APPLICATION_CONTEXT "2.5.4.30"
#define szOID_SUR_NAME "2.5.4.4"
#define szOID_TELEPHONE_NUMBER "2.5.4.20"
#define szOID_TELETEXT_TERMINAL_IDENTIFIER "2.5.4.22"
#define szOID_TELEX_NUMBER "2.5.4.21"
#define szOID_TIMESTAMP_TOKEN "1.2.840.113549.1.9.16.1.4"
#define szOID_TITLE "2.5.4.12"
#define szOID_USER_CERTIFICATE "2.5.4.36"
#define szOID_USER_PASSWORD "2.5.4.35"
#define szOID_VERISIGN_BITSTRING_6_13 "2.16.840.1.113733.1.6.13"
#define szOID_VERISIGN_ISS_STRONG_CRYPTO "2.16.840.1.113733.1.8.1"
#define szOID_VERISIGN_ONSITE_JURISDICTION_HASH "2.16.840.1.113733.1.6.11"
#define szOID_VERISIGN_PRIVATE_6_9 "2.16.840.1.113733.1.6.9"
#define szOID_WHQL_CRYPTO "1.3.6.1.4.1.311.10.3.5"
#define szOID_X21_ADDRESS "2.5.4.24"
#define szOID_X957 "1.2.840.10040"
#define szOID_X957_DSA "1.2.840.10040.4.1"
#define szOID_X957_SHA1DSA "1.2.840.10040.4.3"
#define szOID_YESNO_TRUST_ATTR "1.3.6.1.4.1.311.10.4.1"
#define szPRIV_KEY_CACHE_MAX_ITEMS "PrivKeyCacheMaxItems"
#define szPRIV_KEY_CACHE_PURGE_INTERVAL_SECONDS "PrivKeyCachePurgeIntervalSeconds"
#define sz_CERT_STORE_PROV_COLLECTION "Collection"
#define sz_CERT_STORE_PROV_FILENAME sz_CERT_STORE_PROV_FILENAME_W
#define sz_CERT_STORE_PROV_FILENAME_W "File"
#define sz_CERT_STORE_PROV_LDAP sz_CERT_STORE_PROV_LDAP_W
#define sz_CERT_STORE_PROV_LDAP_W "Ldap"
#define sz_CERT_STORE_PROV_MEMORY "Memory"
#define sz_CERT_STORE_PROV_PHYSICAL sz_CERT_STORE_PROV_PHYSICAL_W
#define sz_CERT_STORE_PROV_PHYSICAL_W "Physical"
#define sz_CERT_STORE_PROV_PKCS12 "PKCS12"
#define sz_CERT_STORE_PROV_PKCS7 "PKCS7"
#define sz_CERT_STORE_PROV_SERIALIZED "Serialized"
#define sz_CERT_STORE_PROV_SMART_CARD sz_CERT_STORE_PROV_SMART_CARD_W
#define sz_CERT_STORE_PROV_SMART_CARD_W "SmartCard"
#define sz_CERT_STORE_PROV_SYSTEM sz_CERT_STORE_PROV_SYSTEM_W
#define sz_CERT_STORE_PROV_SYSTEM_REGISTRY sz_CERT_STORE_PROV_SYSTEM_REGISTRY_W
#define sz_CERT_STORE_PROV_SYSTEM_REGISTRY_W "SystemRegistry"
#define sz_CERT_STORE_PROV_SYSTEM_W "System"
#define uuid_t UUID
#define uuid_vector_t UUID_VECTOR
#define waveInGetDevCaps __MINGW_NAME_AW ( waveInGetDevCaps )
#define waveInGetErrorText __MINGW_NAME_AW ( waveInGetErrorText )
#define waveOutGetDevCaps __MINGW_NAME_AW ( waveOutGetDevCaps )
#define waveOutGetErrorText __MINGW_NAME_AW ( waveOutGetErrorText )
#define wcswcs wcsstr
#define wglUseFontBitmaps __MINGW_NAME_AW ( wglUseFontBitmaps )
#define wglUseFontOutlines __MINGW_NAME_AW ( wglUseFontOutlines )
#define wsprintf __MINGW_NAME_AW ( wsprintf )
#define wszOID_CERT_PROP_ID(PropId) _CRYPT32WTEXT ( szOID_CERT_PROP_ID_PREFIX ) _CRYPT32WTEXT ( _szPROP_ID ( PropId ) )
#define wvsprintf __MINGW_NAME_AW ( wvsprintf )
