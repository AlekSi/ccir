// Code generated by running "go generate". DO NOT EDIT.

// +build ignore

// ----------------------------------------------------------------------------
//      /usr/lib64/gcc/x86_64-suse-linux/4.8/include/stddef.h
// ----------------------------------------------------------------------------
/* Copyright (C) 1989-2013 Free Software Foundation, Inc.

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3, or (at your option)
any later version.

GCC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

Under Section 7 of GPL version 3, you are granted additional
permissions described in the GCC Runtime Library Exception, version
3.1, as published by the Free Software Foundation.

You should have received a copy of the GNU General Public License and
a copy of the GCC Runtime Library Exception along with this program;
see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
<http://www.gnu.org/licenses/>.  */


// ----------------------------------------------------------------------------
//      /usr/include/X11/Xlib.h
// ----------------------------------------------------------------------------
/*

Copyright 1985, 1986, 1987, 1991, 1998  The Open Group

Permission to use, copy, modify, distribute, and sell this software and its
documentation for any purpose is hereby granted without fee, provided that
the above copyright notice appear in all copies and that both that
copyright notice and this permission notice appear in supporting
documentation.

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
OPEN GROUP BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Except as contained in this notice, the name of The Open Group shall not be
used in advertising or otherwise to promote the sale, use or other dealings
in this Software without prior written authorization from The Open Group.

*/

	typedef long unsigned int size_t ;
// /usr/include/X11/X.h

typedef unsigned long XID ;
typedef unsigned long Mask ;
typedef unsigned long Atom ;
typedef unsigned long VisualID ;
typedef unsigned long Time ;
typedef XID Window ;
typedef XID Drawable ;
typedef XID Font ;
typedef XID Pixmap ;
typedef XID Cursor ;
typedef XID Colormap ;
typedef XID GContext ;
typedef XID KeySym ;
typedef unsigned char KeyCode ;
// /usr/lib64/gcc/x86_64-suse-linux/4.8/include/stddef.h

typedef long int ptrdiff_t ;
typedef int wchar_t ;
// /usr/include/X11/Xlib.h

extern int _Xmblen (char *str ,int len );
typedef char *XPointer ;
typedef struct _XExtData {int number ;struct _XExtData *next ;int (*free_private )(struct _XExtData *extension );XPointer private_data ;}XExtData ;
typedef struct {int extension ;int major_opcode ;int first_event ;int first_error ;}XExtCodes ;
typedef struct {int depth ;int bits_per_pixel ;int scanline_pad ;}XPixmapFormatValues ;
typedef struct {int function ;unsigned long plane_mask ;unsigned long foreground ;unsigned long background ;int line_width ;int line_style ;int cap_style ;int join_style ;int fill_style ;int fill_rule ;int arc_mode ;Pixmap tile ;Pixmap stipple ;int ts_x_origin ;int ts_y_origin ;Font font ;int subwindow_mode ;int graphics_exposures ;int clip_x_origin ;int clip_y_origin ;Pixmap clip_mask ;int dash_offset ;char dashes ;}XGCValues ;
typedef struct _XGC *GC ;
typedef struct {XExtData *ext_data ;VisualID visualid ;int class ;unsigned long red_mask ,green_mask ,blue_mask ;int bits_per_rgb ;int map_entries ;}Visual ;
typedef struct {int depth ;int nvisuals ;Visual *visuals ;}Depth ;
struct _XDisplay ;
typedef struct {XExtData *ext_data ;struct _XDisplay *display ;Window root ;int width ,height ;int mwidth ,mheight ;int ndepths ;Depth *depths ;int root_depth ;Visual *root_visual ;GC default_gc ;Colormap cmap ;unsigned long white_pixel ;unsigned long black_pixel ;int max_maps ,min_maps ;int backing_store ;int save_unders ;long root_input_mask ;}Screen ;
typedef struct {XExtData *ext_data ;int depth ;int bits_per_pixel ;int scanline_pad ;}ScreenFormat ;
typedef struct {Pixmap background_pixmap ;unsigned long background_pixel ;Pixmap border_pixmap ;unsigned long border_pixel ;int bit_gravity ;int win_gravity ;int backing_store ;unsigned long backing_planes ;unsigned long backing_pixel ;int save_under ;long event_mask ;long do_not_propagate_mask ;int override_redirect ;Colormap colormap ;Cursor cursor ;}XSetWindowAttributes ;
typedef struct {int x ,y ;int width ,height ;int border_width ;int depth ;Visual *visual ;Window root ;int class ;int bit_gravity ;int win_gravity ;int backing_store ;unsigned long backing_planes ;unsigned long backing_pixel ;int save_under ;Colormap colormap ;int map_installed ;int map_state ;long all_event_masks ;long your_event_mask ;long do_not_propagate_mask ;int override_redirect ;Screen *screen ;}XWindowAttributes ;
typedef struct {int family ;int length ;char *address ;}XHostAddress ;
typedef struct {int typelength ;int valuelength ;char *type ;char *value ;}XServerInterpretedAddress ;
typedef struct _XImage {int width ,height ;int xoffset ;int format ;char *data ;int byte_order ;int bitmap_unit ;int bitmap_bit_order ;int bitmap_pad ;int depth ;int bytes_per_line ;int bits_per_pixel ;unsigned long red_mask ;unsigned long green_mask ;unsigned long blue_mask ;XPointer obdata ;struct funcs {struct _XImage *(*create_image )(struct _XDisplay *,Visual *,unsigned int ,int ,int ,char *,unsigned int ,unsigned int ,int ,int );int (*destroy_image )(struct _XImage *);unsigned long (*get_pixel )(struct _XImage *,int ,int );int (*put_pixel )(struct _XImage *,int ,int ,unsigned long );struct _XImage *(*sub_image )(struct _XImage *,int ,int ,unsigned int ,unsigned int );int (*add_pixel )(struct _XImage *,long );}f ;}XImage ;
typedef struct {int x ,y ;int width ,height ;int border_width ;Window sibling ;int stack_mode ;}XWindowChanges ;
typedef struct {unsigned long pixel ;unsigned short red ,green ,blue ;char flags ;char pad ;}XColor ;
typedef struct {short x1 ,y1 ,x2 ,y2 ;}XSegment ;
typedef struct {short x ,y ;}XPoint ;
typedef struct {short x ,y ;unsigned short width ,height ;}XRectangle ;
typedef struct {short x ,y ;unsigned short width ,height ;short angle1 ,angle2 ;}XArc ;
typedef struct {int key_click_percent ;int bell_percent ;int bell_pitch ;int bell_duration ;int led ;int led_mode ;int key ;int auto_repeat_mode ;}XKeyboardControl ;
typedef struct {int key_click_percent ;int bell_percent ;unsigned int bell_pitch ,bell_duration ;unsigned long led_mask ;int global_auto_repeat ;char auto_repeats [32 ];}XKeyboardState ;
typedef struct {Time time ;short x ,y ;}XTimeCoord ;
typedef struct {int max_keypermod ;KeyCode *modifiermap ;}XModifierKeymap ;
typedef struct _XDisplay Display ;
struct _XPrivate ;
struct _XrmHashBucketRec ;
typedef struct {XExtData *ext_data ;struct _XPrivate *private1 ;int fd ;int private2 ;int proto_major_version ;int proto_minor_version ;char *vendor ;XID private3 ;XID private4 ;XID private5 ;int private6 ;XID (*resource_alloc )(struct _XDisplay *);int byte_order ;int bitmap_unit ;int bitmap_pad ;int bitmap_bit_order ;int nformats ;ScreenFormat *pixmap_format ;int private8 ;int release ;struct _XPrivate *private9 ,*private10 ;int qlen ;unsigned long last_request_read ;unsigned long request ;XPointer private11 ;XPointer private12 ;XPointer private13 ;XPointer private14 ;unsigned max_request_size ;struct _XrmHashBucketRec *db ;int (*private15 )(struct _XDisplay *);char *display_name ;int default_screen ;int nscreens ;Screen *screens ;unsigned long motion_buffer ;unsigned long private16 ;int min_keycode ;int max_keycode ;XPointer private17 ;XPointer private18 ;int private19 ;char *xdefaults ;}*_XPrivDisplay ;
typedef struct {int type ;unsigned long serial ;int send_event ;Display *display ;Window window ;Window root ;Window subwindow ;Time time ;int x ,y ;int x_root ,y_root ;unsigned int state ;unsigned int keycode ;int same_screen ;}XKeyEvent ;
typedef XKeyEvent XKeyPressedEvent ;
typedef XKeyEvent XKeyReleasedEvent ;
typedef struct {int type ;unsigned long serial ;int send_event ;Display *display ;Window window ;Window root ;Window subwindow ;Time time ;int x ,y ;int x_root ,y_root ;unsigned int state ;unsigned int button ;int same_screen ;}XButtonEvent ;
typedef XButtonEvent XButtonPressedEvent ;
typedef XButtonEvent XButtonReleasedEvent ;
typedef struct {int type ;unsigned long serial ;int send_event ;Display *display ;Window window ;Window root ;Window subwindow ;Time time ;int x ,y ;int x_root ,y_root ;unsigned int state ;char is_hint ;int same_screen ;}XMotionEvent ;
typedef XMotionEvent XPointerMovedEvent ;
typedef struct {int type ;unsigned long serial ;int send_event ;Display *display ;Window window ;Window root ;Window subwindow ;Time time ;int x ,y ;int x_root ,y_root ;int mode ;int detail ;int same_screen ;int focus ;unsigned int state ;}XCrossingEvent ;
typedef XCrossingEvent XEnterWindowEvent ;
typedef XCrossingEvent XLeaveWindowEvent ;
typedef struct {int type ;unsigned long serial ;int send_event ;Display *display ;Window window ;int mode ;int detail ;}XFocusChangeEvent ;
typedef XFocusChangeEvent XFocusInEvent ;
typedef XFocusChangeEvent XFocusOutEvent ;
typedef struct {int type ;unsigned long serial ;int send_event ;Display *display ;Window window ;char key_vector [32 ];}XKeymapEvent ;
typedef struct {int type ;unsigned long serial ;int send_event ;Display *display ;Window window ;int x ,y ;int width ,height ;int count ;}XExposeEvent ;
typedef struct {int type ;unsigned long serial ;int send_event ;Display *display ;Drawable drawable ;int x ,y ;int width ,height ;int count ;int major_code ;int minor_code ;}XGraphicsExposeEvent ;
typedef struct {int type ;unsigned long serial ;int send_event ;Display *display ;Drawable drawable ;int major_code ;int minor_code ;}XNoExposeEvent ;
typedef struct {int type ;unsigned long serial ;int send_event ;Display *display ;Window window ;int state ;}XVisibilityEvent ;
typedef struct {int type ;unsigned long serial ;int send_event ;Display *display ;Window parent ;Window window ;int x ,y ;int width ,height ;int border_width ;int override_redirect ;}XCreateWindowEvent ;
typedef struct {int type ;unsigned long serial ;int send_event ;Display *display ;Window event ;Window window ;}XDestroyWindowEvent ;
typedef struct {int type ;unsigned long serial ;int send_event ;Display *display ;Window event ;Window window ;int from_configure ;}XUnmapEvent ;
typedef struct {int type ;unsigned long serial ;int send_event ;Display *display ;Window event ;Window window ;int override_redirect ;}XMapEvent ;
typedef struct {int type ;unsigned long serial ;int send_event ;Display *display ;Window parent ;Window window ;}XMapRequestEvent ;
typedef struct {int type ;unsigned long serial ;int send_event ;Display *display ;Window event ;Window window ;Window parent ;int x ,y ;int override_redirect ;}XReparentEvent ;
typedef struct {int type ;unsigned long serial ;int send_event ;Display *display ;Window event ;Window window ;int x ,y ;int width ,height ;int border_width ;Window above ;int override_redirect ;}XConfigureEvent ;
typedef struct {int type ;unsigned long serial ;int send_event ;Display *display ;Window event ;Window window ;int x ,y ;}XGravityEvent ;
typedef struct {int type ;unsigned long serial ;int send_event ;Display *display ;Window window ;int width ,height ;}XResizeRequestEvent ;
typedef struct {int type ;unsigned long serial ;int send_event ;Display *display ;Window parent ;Window window ;int x ,y ;int width ,height ;int border_width ;Window above ;int detail ;unsigned long value_mask ;}XConfigureRequestEvent ;
typedef struct {int type ;unsigned long serial ;int send_event ;Display *display ;Window event ;Window window ;int place ;}XCirculateEvent ;
typedef struct {int type ;unsigned long serial ;int send_event ;Display *display ;Window parent ;Window window ;int place ;}XCirculateRequestEvent ;
typedef struct {int type ;unsigned long serial ;int send_event ;Display *display ;Window window ;Atom atom ;Time time ;int state ;}XPropertyEvent ;
typedef struct {int type ;unsigned long serial ;int send_event ;Display *display ;Window window ;Atom selection ;Time time ;}XSelectionClearEvent ;
typedef struct {int type ;unsigned long serial ;int send_event ;Display *display ;Window owner ;Window requestor ;Atom selection ;Atom target ;Atom property ;Time time ;}XSelectionRequestEvent ;
typedef struct {int type ;unsigned long serial ;int send_event ;Display *display ;Window requestor ;Atom selection ;Atom target ;Atom property ;Time time ;}XSelectionEvent ;
typedef struct {int type ;unsigned long serial ;int send_event ;Display *display ;Window window ;Colormap colormap ;int new ;int state ;}XColormapEvent ;
typedef struct {int type ;unsigned long serial ;int send_event ;Display *display ;Window window ;Atom message_type ;int format ;union {char b [20 ];short s [10 ];long l [5 ];}data ;}XClientMessageEvent ;
typedef struct {int type ;unsigned long serial ;int send_event ;Display *display ;Window window ;int request ;int first_keycode ;int count ;}XMappingEvent ;
typedef struct {int type ;Display *display ;XID resourceid ;unsigned long serial ;unsigned char error_code ;unsigned char request_code ;unsigned char minor_code ;}XErrorEvent ;
typedef struct {int type ;unsigned long serial ;int send_event ;Display *display ;Window window ;}XAnyEvent ;
typedef struct {int type ;unsigned long serial ;int send_event ;Display *display ;int extension ;int evtype ;}XGenericEvent ;
typedef struct {int type ;unsigned long serial ;int send_event ;Display *display ;int extension ;int evtype ;unsigned int cookie ;void *data ;}XGenericEventCookie ;
typedef union _XEvent {int type ;XAnyEvent xany ;XKeyEvent xkey ;XButtonEvent xbutton ;XMotionEvent xmotion ;XCrossingEvent xcrossing ;XFocusChangeEvent xfocus ;XExposeEvent xexpose ;XGraphicsExposeEvent xgraphicsexpose ;XNoExposeEvent xnoexpose ;XVisibilityEvent xvisibility ;XCreateWindowEvent xcreatewindow ;XDestroyWindowEvent xdestroywindow ;XUnmapEvent xunmap ;XMapEvent xmap ;XMapRequestEvent xmaprequest ;XReparentEvent xreparent ;XConfigureEvent xconfigure ;XGravityEvent xgravity ;XResizeRequestEvent xresizerequest ;XConfigureRequestEvent xconfigurerequest ;XCirculateEvent xcirculate ;XCirculateRequestEvent xcirculaterequest ;XPropertyEvent xproperty ;XSelectionClearEvent xselectionclear ;XSelectionRequestEvent xselectionrequest ;XSelectionEvent xselection ;XColormapEvent xcolormap ;XClientMessageEvent xclient ;XMappingEvent xmapping ;XErrorEvent xerror ;XKeymapEvent xkeymap ;XGenericEvent xgeneric ;XGenericEventCookie xcookie ;long pad [24 ];}XEvent ;
typedef struct {short lbearing ;short rbearing ;short width ;short ascent ;short descent ;unsigned short attributes ;}XCharStruct ;
typedef struct {Atom name ;unsigned long card32 ;}XFontProp ;
typedef struct {XExtData *ext_data ;Font fid ;unsigned direction ;unsigned min_char_or_byte2 ;unsigned max_char_or_byte2 ;unsigned min_byte1 ;unsigned max_byte1 ;int all_chars_exist ;unsigned default_char ;int n_properties ;XFontProp *properties ;XCharStruct min_bounds ;XCharStruct max_bounds ;XCharStruct *per_char ;int ascent ;int descent ;}XFontStruct ;
typedef struct {char *chars ;int nchars ;int delta ;Font font ;}XTextItem ;
typedef struct {unsigned char byte1 ;unsigned char byte2 ;}XChar2b ;
typedef struct {XChar2b *chars ;int nchars ;int delta ;Font font ;}XTextItem16 ;
typedef union {Display *display ;GC gc ;Visual *visual ;Screen *screen ;ScreenFormat *pixmap_format ;XFontStruct *font ;}XEDataObject ;
typedef struct {XRectangle max_ink_extent ;XRectangle max_logical_extent ;}XFontSetExtents ;
typedef struct _XOM *XOM ;
typedef struct _XOC *XOC ;
typedef struct _XOC *XFontSet ;

typedef struct {char *chars ;int nchars ;int delta ;XFontSet font_set ;}XmbTextItem ;
typedef struct {wchar_t *chars ;int nchars ;int delta ;XFontSet font_set ;}XwcTextItem ;
typedef struct {int charset_count ;char **charset_list ;}XOMCharSetList ;
typedef enum {XOMOrientation_LTR_TTB ,XOMOrientation_RTL_TTB ,XOMOrientation_TTB_LTR ,XOMOrientation_TTB_RTL ,XOMOrientation_Context }XOrientation ;
typedef struct {int num_orientation ;XOrientation *orientation ;}XOMOrientation ;
typedef struct {int num_font ;XFontStruct **font_struct_list ;char **font_name_list ;}XOMFontInfo ;
typedef struct _XIM *XIM ;
typedef struct _XIC *XIC ;
typedef void (*XIMProc )(XIM ,XPointer ,XPointer );
typedef int (*XICProc )(XIC ,XPointer ,XPointer );
typedef void (*XIDProc )(Display *,XPointer ,XPointer );
typedef unsigned long XIMStyle ;
typedef struct {unsigned short count_styles ;XIMStyle *supported_styles ;}XIMStyles ;
typedef void *XVaNestedList ;
typedef struct {XPointer client_data ;XIMProc callback ;}XIMCallback ;
typedef struct {XPointer client_data ;XICProc callback ;}XICCallback ;
typedef unsigned long XIMFeedback ;
typedef struct _XIMText {unsigned short length ;XIMFeedback *feedback ;int encoding_is_wchar ;union {char *multi_byte ;wchar_t *wide_char ;}string ;}XIMText ;
typedef unsigned long XIMPreeditState ;
typedef struct _XIMPreeditStateNotifyCallbackStruct {XIMPreeditState state ;}XIMPreeditStateNotifyCallbackStruct ;
typedef unsigned long XIMResetState ;
typedef unsigned long XIMStringConversionFeedback ;
typedef struct _XIMStringConversionText {unsigned short length ;XIMStringConversionFeedback *feedback ;int encoding_is_wchar ;union {char *mbs ;wchar_t *wcs ;}string ;}XIMStringConversionText ;
typedef unsigned short XIMStringConversionPosition ;
typedef unsigned short XIMStringConversionType ;
typedef unsigned short XIMStringConversionOperation ;
typedef enum {XIMForwardChar ,XIMBackwardChar ,XIMForwardWord ,XIMBackwardWord ,XIMCaretUp ,XIMCaretDown ,XIMNextLine ,XIMPreviousLine ,XIMLineStart ,XIMLineEnd ,XIMAbsolutePosition ,XIMDontChange }XIMCaretDirection ;
typedef struct _XIMStringConversionCallbackStruct {XIMStringConversionPosition position ;XIMCaretDirection direction ;XIMStringConversionOperation operation ;unsigned short factor ;XIMStringConversionText *text ;}XIMStringConversionCallbackStruct ;
typedef struct _XIMPreeditDrawCallbackStruct {int caret ;int chg_first ;int chg_length ;XIMText *text ;}XIMPreeditDrawCallbackStruct ;
typedef enum {XIMIsInvisible ,XIMIsPrimary ,XIMIsSecondary }XIMCaretStyle ;
typedef struct _XIMPreeditCaretCallbackStruct {int position ;XIMCaretDirection direction ;XIMCaretStyle style ;}XIMPreeditCaretCallbackStruct ;
typedef enum {XIMTextType ,XIMBitmapType }XIMStatusDataType ;
typedef struct _XIMStatusDrawCallbackStruct {XIMStatusDataType type ;union {XIMText *text ;Pixmap bitmap ;}data ;}XIMStatusDrawCallbackStruct ;
typedef struct _XIMHotKeyTrigger {KeySym keysym ;int modifier ;int modifier_mask ;}XIMHotKeyTrigger ;
typedef struct _XIMHotKeyTriggers {int num_hot_key ;XIMHotKeyTrigger *key ;}XIMHotKeyTriggers ;
typedef unsigned long XIMHotKeyState ;
typedef struct {unsigned short count_values ;char **supported_values ;}XIMValuesList ;
extern int _Xdebug ;
extern XFontStruct *XLoadQueryFont (Display *,const char *);
extern XFontStruct *XQueryFont (Display *,XID );
extern XTimeCoord *XGetMotionEvents (Display *,Window ,Time ,Time ,int *);
extern XModifierKeymap *XDeleteModifiermapEntry (XModifierKeymap *,KeyCode ,int );
extern XModifierKeymap *XGetModifierMapping (Display *);
extern XModifierKeymap *XInsertModifiermapEntry (XModifierKeymap *,KeyCode ,int );
extern XModifierKeymap *XNewModifiermap (int );
extern XImage *XCreateImage (Display *,Visual *,unsigned int ,int ,int ,char *,unsigned int ,unsigned int ,int ,int );
extern int XInitImage (XImage *);
extern XImage *XGetImage (Display *,Drawable ,int ,int ,unsigned int ,unsigned int ,unsigned long ,int );
extern XImage *XGetSubImage (Display *,Drawable ,int ,int ,unsigned int ,unsigned int ,unsigned long ,int ,XImage *,int ,int );
extern Display *XOpenDisplay (const char *);
extern void XrmInitialize (void );
extern char *XFetchBytes (Display *,int *);
extern char *XFetchBuffer (Display *,int *,int );
extern char *XGetAtomName (Display *,Atom );
extern int XGetAtomNames (Display *,Atom *,int ,char **);
extern char *XGetDefault (Display *,const char *,const char *);
extern char *XDisplayName (const char *);
extern char *XKeysymToString (KeySym );
extern int (*XSynchronize (Display *,int ))(Display *);
extern int (*XSetAfterFunction (Display *,int (*)(Display *)))(Display *);
extern Atom XInternAtom (Display *,const char *,int );
extern int XInternAtoms (Display *,char **,int ,int ,Atom *);
extern Colormap XCopyColormapAndFree (Display *,Colormap );
extern Colormap XCreateColormap (Display *,Window ,Visual *,int );
extern Cursor XCreatePixmapCursor (Display *,Pixmap ,Pixmap ,XColor *,XColor *,unsigned int ,unsigned int );
extern Cursor XCreateGlyphCursor (Display *,Font ,Font ,unsigned int ,unsigned int ,XColor const *,XColor const *);
extern Cursor XCreateFontCursor (Display *,unsigned int );
extern Font XLoadFont (Display *,const char *);
extern GC XCreateGC (Display *,Drawable ,unsigned long ,XGCValues *);
extern GContext XGContextFromGC (GC );
extern void XFlushGC (Display *,GC );
extern Pixmap XCreatePixmap (Display *,Drawable ,unsigned int ,unsigned int ,unsigned int );
extern Pixmap XCreateBitmapFromData (Display *,Drawable ,const char *,unsigned int ,unsigned int );
extern Pixmap XCreatePixmapFromBitmapData (Display *,Drawable ,char *,unsigned int ,unsigned int ,unsigned long ,unsigned long ,unsigned int );
extern Window XCreateSimpleWindow (Display *,Window ,int ,int ,unsigned int ,unsigned int ,unsigned int ,unsigned long ,unsigned long );
extern Window XGetSelectionOwner (Display *,Atom );
extern Window XCreateWindow (Display *,Window ,int ,int ,unsigned int ,unsigned int ,unsigned int ,int ,unsigned int ,Visual *,unsigned long ,XSetWindowAttributes *);
extern Colormap *XListInstalledColormaps (Display *,Window ,int *);
extern char **XListFonts (Display *,const char *,int ,int *);
extern char **XListFontsWithInfo (Display *,const char *,int ,int *,XFontStruct **);
extern char **XGetFontPath (Display *,int *);
extern char **XListExtensions (Display *,int *);
extern Atom *XListProperties (Display *,Window ,int *);
extern XHostAddress *XListHosts (Display *,int *,int *);
extern KeySym XKeycodeToKeysym (Display *,KeyCode ,int );
extern KeySym XLookupKeysym (XKeyEvent *,int );
extern KeySym *XGetKeyboardMapping (Display *,KeyCode ,int ,int *);
extern KeySym XStringToKeysym (const char *);
extern long XMaxRequestSize (Display *);
extern long XExtendedMaxRequestSize (Display *);
extern char *XResourceManagerString (Display *);
extern char *XScreenResourceString (Screen *);
extern unsigned long XDisplayMotionBufferSize (Display *);
extern VisualID XVisualIDFromVisual (Visual *);
extern int XInitThreads (void );
extern void XLockDisplay (Display *);
extern void XUnlockDisplay (Display *);
extern XExtCodes *XInitExtension (Display *,const char *);
extern XExtCodes *XAddExtension (Display *);
extern XExtData *XFindOnExtensionList (XExtData **,int );
extern XExtData **XEHeadOfExtensionList (XEDataObject );
extern Window XRootWindow (Display *,int );
extern Window XDefaultRootWindow (Display *);
extern Window XRootWindowOfScreen (Screen *);
extern Visual *XDefaultVisual (Display *,int );
extern Visual *XDefaultVisualOfScreen (Screen *);
extern GC XDefaultGC (Display *,int );
extern GC XDefaultGCOfScreen (Screen *);
extern unsigned long XBlackPixel (Display *,int );
extern unsigned long XWhitePixel (Display *,int );
extern unsigned long XAllPlanes (void );
extern unsigned long XBlackPixelOfScreen (Screen *);
extern unsigned long XWhitePixelOfScreen (Screen *);
extern unsigned long XNextRequest (Display *);
extern unsigned long XLastKnownRequestProcessed (Display *);
extern char *XServerVendor (Display *);
extern char *XDisplayString (Display *);
extern Colormap XDefaultColormap (Display *,int );
extern Colormap XDefaultColormapOfScreen (Screen *);
extern Display *XDisplayOfScreen (Screen *);
extern Screen *XScreenOfDisplay (Display *,int );
extern Screen *XDefaultScreenOfDisplay (Display *);
extern long XEventMaskOfScreen (Screen *);
extern int XScreenNumberOfScreen (Screen *);
typedef int (*XErrorHandler )(Display *,XErrorEvent *);
extern XErrorHandler XSetErrorHandler (XErrorHandler );
typedef int (*XIOErrorHandler )(Display *);
extern XIOErrorHandler XSetIOErrorHandler (XIOErrorHandler );
extern XPixmapFormatValues *XListPixmapFormats (Display *,int *);
extern int *XListDepths (Display *,int ,int *);
extern int XReconfigureWMWindow (Display *,Window ,int ,unsigned int ,XWindowChanges *);
extern int XGetWMProtocols (Display *,Window ,Atom **,int *);
extern int XSetWMProtocols (Display *,Window ,Atom *,int );
extern int XIconifyWindow (Display *,Window ,int );
extern int XWithdrawWindow (Display *,Window ,int );
extern int XGetCommand (Display *,Window ,char ***,int *);
extern int XGetWMColormapWindows (Display *,Window ,Window **,int *);
extern int XSetWMColormapWindows (Display *,Window ,Window *,int );
extern void XFreeStringList (char **);
extern int XSetTransientForHint (Display *,Window ,Window );
extern int XActivateScreenSaver (Display *);
extern int XAddHost (Display *,XHostAddress *);
extern int XAddHosts (Display *,XHostAddress *,int );
extern int XAddToExtensionList (struct _XExtData **,XExtData *);
extern int XAddToSaveSet (Display *,Window );
extern int XAllocColor (Display *,Colormap ,XColor *);
extern int XAllocColorCells (Display *,Colormap ,int ,unsigned long *,unsigned int ,unsigned long *,unsigned int );
extern int XAllocColorPlanes (Display *,Colormap ,int ,unsigned long *,int ,int ,int ,int ,unsigned long *,unsigned long *,unsigned long *);
extern int XAllocNamedColor (Display *,Colormap ,const char *,XColor *,XColor *);
extern int XAllowEvents (Display *,int ,Time );
extern int XAutoRepeatOff (Display *);
extern int XAutoRepeatOn (Display *);
extern int XBell (Display *,int );
extern int XBitmapBitOrder (Display *);
extern int XBitmapPad (Display *);
extern int XBitmapUnit (Display *);
extern int XCellsOfScreen (Screen *);
extern int XChangeActivePointerGrab (Display *,unsigned int ,Cursor ,Time );
extern int XChangeGC (Display *,GC ,unsigned long ,XGCValues *);
extern int XChangeKeyboardControl (Display *,unsigned long ,XKeyboardControl *);
extern int XChangeKeyboardMapping (Display *,int ,int ,KeySym *,int );
extern int XChangePointerControl (Display *,int ,int ,int ,int ,int );
extern int XChangeProperty (Display *,Window ,Atom ,Atom ,int ,int ,const unsigned char *,int );
extern int XChangeSaveSet (Display *,Window ,int );
extern int XChangeWindowAttributes (Display *,Window ,unsigned long ,XSetWindowAttributes *);
extern int XCheckIfEvent (Display *,XEvent *,int (*)(Display *,XEvent *,XPointer ),XPointer );
extern int XCheckMaskEvent (Display *,long ,XEvent *);
extern int XCheckTypedEvent (Display *,int ,XEvent *);
extern int XCheckTypedWindowEvent (Display *,Window ,int ,XEvent *);
extern int XCheckWindowEvent (Display *,Window ,long ,XEvent *);
extern int XCirculateSubwindows (Display *,Window ,int );
extern int XCirculateSubwindowsDown (Display *,Window );
extern int XCirculateSubwindowsUp (Display *,Window );
extern int XClearArea (Display *,Window ,int ,int ,unsigned int ,unsigned int ,int );
extern int XClearWindow (Display *,Window );
extern int XCloseDisplay (Display *);
extern int XConfigureWindow (Display *,Window ,unsigned int ,XWindowChanges *);
extern int XConnectionNumber (Display *);
extern int XConvertSelection (Display *,Atom ,Atom ,Atom ,Window ,Time );
extern int XCopyArea (Display *,Drawable ,Drawable ,GC ,int ,int ,unsigned int ,unsigned int ,int ,int );
extern int XCopyGC (Display *,GC ,unsigned long ,GC );
extern int XCopyPlane (Display *,Drawable ,Drawable ,GC ,int ,int ,unsigned int ,unsigned int ,int ,int ,unsigned long );
extern int XDefaultDepth (Display *,int );
extern int XDefaultDepthOfScreen (Screen *);
extern int XDefaultScreen (Display *);
extern int XDefineCursor (Display *,Window ,Cursor );
extern int XDeleteProperty (Display *,Window ,Atom );
extern int XDestroyWindow (Display *,Window );
extern int XDestroySubwindows (Display *,Window );
extern int XDoesBackingStore (Screen *);
extern int XDoesSaveUnders (Screen *);
extern int XDisableAccessControl (Display *);
extern int XDisplayCells (Display *,int );
extern int XDisplayHeight (Display *,int );
extern int XDisplayHeightMM (Display *,int );
extern int XDisplayKeycodes (Display *,int *,int *);
extern int XDisplayPlanes (Display *,int );
extern int XDisplayWidth (Display *,int );
extern int XDisplayWidthMM (Display *,int );
extern int XDrawArc (Display *,Drawable ,GC ,int ,int ,unsigned int ,unsigned int ,int ,int );
extern int XDrawArcs (Display *,Drawable ,GC ,XArc *,int );
extern int XDrawImageString (Display *,Drawable ,GC ,int ,int ,const char *,int );
extern int XDrawImageString16 (Display *,Drawable ,GC ,int ,int ,const XChar2b *,int );
extern int XDrawLine (Display *,Drawable ,GC ,int ,int ,int ,int );
extern int XDrawLines (Display *,Drawable ,GC ,XPoint *,int ,int );
extern int XDrawPoint (Display *,Drawable ,GC ,int ,int );
extern int XDrawPoints (Display *,Drawable ,GC ,XPoint *,int ,int );
extern int XDrawRectangle (Display *,Drawable ,GC ,int ,int ,unsigned int ,unsigned int );
extern int XDrawRectangles (Display *,Drawable ,GC ,XRectangle *,int );
extern int XDrawSegments (Display *,Drawable ,GC ,XSegment *,int );
extern int XDrawString (Display *,Drawable ,GC ,int ,int ,const char *,int );
extern int XDrawString16 (Display *,Drawable ,GC ,int ,int ,const XChar2b *,int );
extern int XDrawText (Display *,Drawable ,GC ,int ,int ,XTextItem *,int );
extern int XDrawText16 (Display *,Drawable ,GC ,int ,int ,XTextItem16 *,int );
extern int XEnableAccessControl (Display *);
extern int XEventsQueued (Display *,int );
extern int XFetchName (Display *,Window ,char **);
extern int XFillArc (Display *,Drawable ,GC ,int ,int ,unsigned int ,unsigned int ,int ,int );
extern int XFillArcs (Display *,Drawable ,GC ,XArc *,int );
extern int XFillPolygon (Display *,Drawable ,GC ,XPoint *,int ,int ,int );
extern int XFillRectangle (Display *,Drawable ,GC ,int ,int ,unsigned int ,unsigned int );
extern int XFillRectangles (Display *,Drawable ,GC ,XRectangle *,int );
extern int XFlush (Display *);
extern int XForceScreenSaver (Display *,int );
extern int XFree (void *);
extern int XFreeColormap (Display *,Colormap );
extern int XFreeColors (Display *,Colormap ,unsigned long *,int ,unsigned long );
extern int XFreeCursor (Display *,Cursor );
extern int XFreeExtensionList (char **);
extern int XFreeFont (Display *,XFontStruct *);
extern int XFreeFontInfo (char **,XFontStruct *,int );
extern int XFreeFontNames (char **);
extern int XFreeFontPath (char **);
extern int XFreeGC (Display *,GC );
extern int XFreeModifiermap (XModifierKeymap *);
extern int XFreePixmap (Display *,Pixmap );
extern int XGeometry (Display *,int ,const char *,const char *,unsigned int ,unsigned int ,unsigned int ,int ,int ,int *,int *,int *,int *);
extern int XGetErrorDatabaseText (Display *,const char *,const char *,const char *,char *,int );
extern int XGetErrorText (Display *,int ,char *,int );
extern int XGetFontProperty (XFontStruct *,Atom ,unsigned long *);
extern int XGetGCValues (Display *,GC ,unsigned long ,XGCValues *);
extern int XGetGeometry (Display *,Drawable ,Window *,int *,int *,unsigned int *,unsigned int *,unsigned int *,unsigned int *);
extern int XGetIconName (Display *,Window ,char **);
extern int XGetInputFocus (Display *,Window *,int *);
extern int XGetKeyboardControl (Display *,XKeyboardState *);
extern int XGetPointerControl (Display *,int *,int *,int *);
extern int XGetPointerMapping (Display *,unsigned char *,int );
extern int XGetScreenSaver (Display *,int *,int *,int *,int *);
extern int XGetTransientForHint (Display *,Window ,Window *);
extern int XGetWindowProperty (Display *,Window ,Atom ,long ,long ,int ,Atom ,Atom *,int *,unsigned long *,unsigned long *,unsigned char **);
extern int XGetWindowAttributes (Display *,Window ,XWindowAttributes *);
extern int XGrabButton (Display *,unsigned int ,unsigned int ,Window ,int ,unsigned int ,int ,int ,Window ,Cursor );
extern int XGrabKey (Display *,int ,unsigned int ,Window ,int ,int ,int );
extern int XGrabKeyboard (Display *,Window ,int ,int ,int ,Time );
extern int XGrabPointer (Display *,Window ,int ,unsigned int ,int ,int ,Window ,Cursor ,Time );
extern int XGrabServer (Display *);
extern int XHeightMMOfScreen (Screen *);
extern int XHeightOfScreen (Screen *);
extern int XIfEvent (Display *,XEvent *,int (*)(Display *,XEvent *,XPointer ),XPointer );
extern int XImageByteOrder (Display *);
extern int XInstallColormap (Display *,Colormap );
extern KeyCode XKeysymToKeycode (Display *,KeySym );
extern int XKillClient (Display *,XID );
extern int XLookupColor (Display *,Colormap ,const char *,XColor *,XColor *);
extern int XLowerWindow (Display *,Window );
extern int XMapRaised (Display *,Window );
extern int XMapSubwindows (Display *,Window );
extern int XMapWindow (Display *,Window );
extern int XMaskEvent (Display *,long ,XEvent *);
extern int XMaxCmapsOfScreen (Screen *);
extern int XMinCmapsOfScreen (Screen *);
extern int XMoveResizeWindow (Display *,Window ,int ,int ,unsigned int ,unsigned int );
extern int XMoveWindow (Display *,Window ,int ,int );
extern int XNextEvent (Display *,XEvent *);
extern int XNoOp (Display *);
extern int XParseColor (Display *,Colormap ,const char *,XColor *);
extern int XParseGeometry (const char *,int *,int *,unsigned int *,unsigned int *);
extern int XPeekEvent (Display *,XEvent *);
extern int XPeekIfEvent (Display *,XEvent *,int (*)(Display *,XEvent *,XPointer ),XPointer );
extern int XPending (Display *);
extern int XPlanesOfScreen (Screen *);
extern int XProtocolRevision (Display *);
extern int XProtocolVersion (Display *);
extern int XPutBackEvent (Display *,XEvent *);
extern int XPutImage (Display *,Drawable ,GC ,XImage *,int ,int ,int ,int ,unsigned int ,unsigned int );
extern int XQLength (Display *);
extern int XQueryBestCursor (Display *,Drawable ,unsigned int ,unsigned int ,unsigned int *,unsigned int *);
extern int XQueryBestSize (Display *,int ,Drawable ,unsigned int ,unsigned int ,unsigned int *,unsigned int *);
extern int XQueryBestStipple (Display *,Drawable ,unsigned int ,unsigned int ,unsigned int *,unsigned int *);
extern int XQueryBestTile (Display *,Drawable ,unsigned int ,unsigned int ,unsigned int *,unsigned int *);
extern int XQueryColor (Display *,Colormap ,XColor *);
extern int XQueryColors (Display *,Colormap ,XColor *,int );
extern int XQueryExtension (Display *,const char *,int *,int *,int *);
extern int XQueryKeymap (Display *,char [32 ]);
extern int XQueryPointer (Display *,Window ,Window *,Window *,int *,int *,int *,int *,unsigned int *);
extern int XQueryTextExtents (Display *,XID ,const char *,int ,int *,int *,int *,XCharStruct *);
extern int XQueryTextExtents16 (Display *,XID ,const XChar2b *,int ,int *,int *,int *,XCharStruct *);
extern int XQueryTree (Display *,Window ,Window *,Window *,Window **,unsigned int *);
extern int XRaiseWindow (Display *,Window );
extern int XReadBitmapFile (Display *,Drawable ,const char *,unsigned int *,unsigned int *,Pixmap *,int *,int *);
extern int XReadBitmapFileData (const char *,unsigned int *,unsigned int *,unsigned char **,int *,int *);
extern int XRebindKeysym (Display *,KeySym ,KeySym *,int ,const unsigned char *,int );
extern int XRecolorCursor (Display *,Cursor ,XColor *,XColor *);
extern int XRefreshKeyboardMapping (XMappingEvent *);
extern int XRemoveFromSaveSet (Display *,Window );
extern int XRemoveHost (Display *,XHostAddress *);
extern int XRemoveHosts (Display *,XHostAddress *,int );
extern int XReparentWindow (Display *,Window ,Window ,int ,int );
extern int XResetScreenSaver (Display *);
extern int XResizeWindow (Display *,Window ,unsigned int ,unsigned int );
extern int XRestackWindows (Display *,Window *,int );
extern int XRotateBuffers (Display *,int );
extern int XRotateWindowProperties (Display *,Window ,Atom *,int ,int );
extern int XScreenCount (Display *);
extern int XSelectInput (Display *,Window ,long );
extern int XSendEvent (Display *,Window ,int ,long ,XEvent *);
extern int XSetAccessControl (Display *,int );
extern int XSetArcMode (Display *,GC ,int );
extern int XSetBackground (Display *,GC ,unsigned long );
extern int XSetClipMask (Display *,GC ,Pixmap );
extern int XSetClipOrigin (Display *,GC ,int ,int );
extern int XSetClipRectangles (Display *,GC ,int ,int ,XRectangle *,int ,int );
extern int XSetCloseDownMode (Display *,int );
extern int XSetCommand (Display *,Window ,char **,int );
extern int XSetDashes (Display *,GC ,int ,const char *,int );
extern int XSetFillRule (Display *,GC ,int );
extern int XSetFillStyle (Display *,GC ,int );
extern int XSetFont (Display *,GC ,Font );
extern int XSetFontPath (Display *,char **,int );
extern int XSetForeground (Display *,GC ,unsigned long );
extern int XSetFunction (Display *,GC ,int );
extern int XSetGraphicsExposures (Display *,GC ,int );
extern int XSetIconName (Display *,Window ,const char *);
extern int XSetInputFocus (Display *,Window ,int ,Time );
extern int XSetLineAttributes (Display *,GC ,unsigned int ,int ,int ,int );
extern int XSetModifierMapping (Display *,XModifierKeymap *);
extern int XSetPlaneMask (Display *,GC ,unsigned long );
extern int XSetPointerMapping (Display *,const unsigned char *,int );
extern int XSetScreenSaver (Display *,int ,int ,int ,int );
extern int XSetSelectionOwner (Display *,Atom ,Window ,Time );
extern int XSetState (Display *,GC ,unsigned long ,unsigned long ,int ,unsigned long );
extern int XSetStipple (Display *,GC ,Pixmap );
extern int XSetSubwindowMode (Display *,GC ,int );
extern int XSetTSOrigin (Display *,GC ,int ,int );
extern int XSetTile (Display *,GC ,Pixmap );
extern int XSetWindowBackground (Display *,Window ,unsigned long );
extern int XSetWindowBackgroundPixmap (Display *,Window ,Pixmap );
extern int XSetWindowBorder (Display *,Window ,unsigned long );
extern int XSetWindowBorderPixmap (Display *,Window ,Pixmap );
extern int XSetWindowBorderWidth (Display *,Window ,unsigned int );
extern int XSetWindowColormap (Display *,Window ,Colormap );
extern int XStoreBuffer (Display *,const char *,int ,int );
extern int XStoreBytes (Display *,const char *,int );
extern int XStoreColor (Display *,Colormap ,XColor *);
extern int XStoreColors (Display *,Colormap ,XColor *,int );
extern int XStoreName (Display *,Window ,const char *);
extern int XStoreNamedColor (Display *,Colormap ,const char *,unsigned long ,int );
extern int XSync (Display *,int );
extern int XTextExtents (XFontStruct *,const char *,int ,int *,int *,int *,XCharStruct *);
extern int XTextExtents16 (XFontStruct *,const XChar2b *,int ,int *,int *,int *,XCharStruct *);
extern int XTextWidth (XFontStruct *,const char *,int );
extern int XTextWidth16 (XFontStruct *,const XChar2b *,int );
extern int XTranslateCoordinates (Display *,Window ,Window ,int ,int ,int *,int *,Window *);
extern int XUndefineCursor (Display *,Window );
extern int XUngrabButton (Display *,unsigned int ,unsigned int ,Window );
extern int XUngrabKey (Display *,int ,unsigned int ,Window );
extern int XUngrabKeyboard (Display *,Time );
extern int XUngrabPointer (Display *,Time );
extern int XUngrabServer (Display *);
extern int XUninstallColormap (Display *,Colormap );
extern int XUnloadFont (Display *,Font );
extern int XUnmapSubwindows (Display *,Window );
extern int XUnmapWindow (Display *,Window );
extern int XVendorRelease (Display *);
extern int XWarpPointer (Display *,Window ,Window ,int ,int ,unsigned int ,unsigned int ,int ,int );
extern int XWidthMMOfScreen (Screen *);
extern int XWidthOfScreen (Screen *);
extern int XWindowEvent (Display *,Window ,long ,XEvent *);
extern int XWriteBitmapFile (Display *,const char *,Pixmap ,unsigned int ,unsigned int ,int ,int );
extern int XSupportsLocale (void );
extern char *XSetLocaleModifiers (const char *);
extern XOM XOpenOM (Display *,struct _XrmHashBucketRec *,const char *,const char *);
extern int XCloseOM (XOM );
extern char *XSetOMValues (XOM ,...);
extern char *XGetOMValues (XOM ,...);
extern Display *XDisplayOfOM (XOM );
extern char *XLocaleOfOM (XOM );
extern XOC XCreateOC (XOM ,...);
extern void XDestroyOC (XOC );
extern XOM XOMOfOC (XOC );
extern char *XSetOCValues (XOC ,...);
extern char *XGetOCValues (XOC ,...);
extern XFontSet XCreateFontSet (Display *,const char *,char ***,int *,char **);
extern void XFreeFontSet (Display *,XFontSet );
extern int XFontsOfFontSet (XFontSet ,XFontStruct ***,char ***);
extern char *XBaseFontNameListOfFontSet (XFontSet );
extern char *XLocaleOfFontSet (XFontSet );
extern int XContextDependentDrawing (XFontSet );
extern int XDirectionalDependentDrawing (XFontSet );
extern int XContextualDrawing (XFontSet );
extern XFontSetExtents *XExtentsOfFontSet (XFontSet );
extern int XmbTextEscapement (XFontSet ,const char *,int );
extern int XwcTextEscapement (XFontSet ,const wchar_t *,int );
extern int Xutf8TextEscapement (XFontSet ,const char *,int );
extern int XmbTextExtents (XFontSet ,const char *,int ,XRectangle *,XRectangle *);
extern int XwcTextExtents (XFontSet ,const wchar_t *,int ,XRectangle *,XRectangle *);
extern int Xutf8TextExtents (XFontSet ,const char *,int ,XRectangle *,XRectangle *);
extern int XmbTextPerCharExtents (XFontSet ,const char *,int ,XRectangle *,XRectangle *,int ,int *,XRectangle *,XRectangle *);
extern int XwcTextPerCharExtents (XFontSet ,const wchar_t *,int ,XRectangle *,XRectangle *,int ,int *,XRectangle *,XRectangle *);
extern int Xutf8TextPerCharExtents (XFontSet ,const char *,int ,XRectangle *,XRectangle *,int ,int *,XRectangle *,XRectangle *);
extern void XmbDrawText (Display *,Drawable ,GC ,int ,int ,XmbTextItem *,int );
extern void XwcDrawText (Display *,Drawable ,GC ,int ,int ,XwcTextItem *,int );
extern void Xutf8DrawText (Display *,Drawable ,GC ,int ,int ,XmbTextItem *,int );
extern void XmbDrawString (Display *,Drawable ,XFontSet ,GC ,int ,int ,const char *,int );
extern void XwcDrawString (Display *,Drawable ,XFontSet ,GC ,int ,int ,const wchar_t *,int );
extern void Xutf8DrawString (Display *,Drawable ,XFontSet ,GC ,int ,int ,const char *,int );
extern void XmbDrawImageString (Display *,Drawable ,XFontSet ,GC ,int ,int ,const char *,int );
extern void XwcDrawImageString (Display *,Drawable ,XFontSet ,GC ,int ,int ,const wchar_t *,int );
extern void Xutf8DrawImageString (Display *,Drawable ,XFontSet ,GC ,int ,int ,const char *,int );
extern XIM XOpenIM (Display *,struct _XrmHashBucketRec *,char *,char *);
extern int XCloseIM (XIM );
extern char *XGetIMValues (XIM ,...);
extern char *XSetIMValues (XIM ,...);
extern Display *XDisplayOfIM (XIM );
extern char *XLocaleOfIM (XIM );
extern XIC XCreateIC (XIM ,...);
extern void XDestroyIC (XIC );
extern void XSetICFocus (XIC );
extern void XUnsetICFocus (XIC );
extern wchar_t *XwcResetIC (XIC );
extern char *XmbResetIC (XIC );
extern char *Xutf8ResetIC (XIC );
extern char *XSetICValues (XIC ,...);
extern char *XGetICValues (XIC ,...);
extern XIM XIMOfIC (XIC );
extern int XFilterEvent (XEvent *,Window );
extern int XmbLookupString (XIC ,XKeyPressedEvent *,char *,int ,KeySym *,int *);
extern int XwcLookupString (XIC ,XKeyPressedEvent *,wchar_t *,int ,KeySym *,int *);
extern int Xutf8LookupString (XIC ,XKeyPressedEvent *,char *,int ,KeySym *,int *);
extern XVaNestedList XVaCreateNestedList (int ,...);
extern int XRegisterIMInstantiateCallback (Display *,struct _XrmHashBucketRec *,char *,char *,XIDProc ,XPointer );
extern int XUnregisterIMInstantiateCallback (Display *,struct _XrmHashBucketRec *,char *,char *,XIDProc ,XPointer );
typedef void (*XConnectionWatchProc )(Display *,XPointer ,int ,int ,XPointer *);
extern int XInternalConnectionNumbers (Display *,int **,int *);
extern void XProcessInternalConnection (Display *,int );
extern int XAddConnectionWatch (Display *,XConnectionWatchProc ,XPointer );
extern void XRemoveConnectionWatch (Display *,XConnectionWatchProc ,XPointer );
extern void XSetAuthorization (char *,int ,char *,int );
extern int _Xmbtowc (wchar_t *,char *,int );
extern int _Xwctomb (char *,wchar_t );
extern int XGetEventData (Display *,XGenericEventCookie *);
extern void XFreeEventData (Display *,XGenericEventCookie *);


// /usr/lib64/gcc/x86_64-suse-linux/4.8/include/stddef.h 

#define _WCHAR_T 


// /usr/include/X11/X.h 

#define Mod5MapIndex (7)
#define MapRequest (20)
#define NoEventMask (0l)
#define ScreenSaverActive (1)
#define ShiftMask (1)
#define DontAllowExposures (0)


// /usr/include/X11/Xlib.h 

#define XIMStringConversionLeftEdge (1)


// /usr/include/X11/X.h 

#define PropModeAppend (2)
#define AutoRepeatModeOn (1)
#define SubstructureRedirectMask (1048576l)


// /usr/include/X11/Xlib.h 

#define XNPreeditStateNotifyCallback "preeditStateNotifyCallback"


// /usr/include/X11/X.h 

#define CWEventMask (2048l)
#define CWBitGravity (16l)
#define GrabModeSync (0)
#define NotifyNonlinear (3)


// /usr/include/X11/Xlib.h 

#define XIMVisibleToCenter (1024l)
#define XNStatusDrawCallback "statusDrawCallback"


// /usr/include/X11/X.h 

#define FillStippled (2)
#define GravityNotify (24)
#define CWSaveUnder (1024l)


// /usr/include/X11/Xlib.h 

#define XAllocID(dpy) ( ( * ( ( _XPrivDisplay ) dpy ) -> resource_alloc ) ( ( dpy ) ) )


// /usr/include/X11/X.h 

#define CWBackPixel (2l)


// /usr/lib64/gcc/x86_64-suse-linux/4.8/include/stddef.h 

#define _SYS_SIZE_T_H 


// /usr/include/X11/X.h 

#define GCClipMask (524288l)
#define ClipByChildren (0)
#define RevertToNone ( int ) None


// /usr/include/X11/Xlib.h 

#define DisplayWidthMM(dpy, scr) ( ScreenOfDisplay ( dpy , scr ) -> mwidth )


// /usr/lib64/gcc/x86_64-suse-linux/4.8/include/stddef.h 

#define __WCHAR_T__ 


// /usr/include/X11/X.h 

#define GCClipYOrigin (262144l)
#define KeyReleaseMask (2l)
#define AutoRepeatModeOff (0)
#define JoinRound (1)
#define XYBitmap (0)
#define GXnoop (5)


// /usr/include/X11/Xlib.h 

#define XIMStatusNone (2048l)


// /usr/include/X11/X.h 

#define GXcopyInverted (12)


// /usr/include/X11/Xlib.h 

#define NextRequest(dpy) ( ( ( _XPrivDisplay ) dpy ) -> request + 1 )


// /usr/include/X11/X.h 

#define SelectionClear (29)
#define LockMapIndex (1)
#define KeymapStateMask (16384l)
#define AllocNone (0)
#define MappingPointer (2)
#define NotifyWhileGrabbed (3)
#define GXorReverse (11)


// /usr/lib64/gcc/x86_64-suse-linux/4.8/include/stddef.h 

#define _BSD_SIZE_T_DEFINED_ 


// /usr/include/X11/Xlib.h 

#define XIMStringConversionRightEdge (2)


// /usr/include/X11/X.h 

#define Button2MotionMask (512l)
#define InputOutput (1)
#define LowerHighest (1)
#define ReplayKeyboard (5)


// /usr/include/X11/Xlib.h 

#define XIMHotKeyStateON (1l)


// /usr/include/X11/X.h 

#define Button2Mask (512)
#define CenterGravity (5)
#define AnyKey (0l)
#define ParentRelative (1l)
#define EvenOddRule (0)


// /usr/include/X11/Xlib.h 

#define BlackPixel(dpy, scr) ( ScreenOfDisplay ( dpy , scr ) -> black_pixel )


// /usr/include/X11/X.h 

#define FamilyChaos (2)


// /usr/include/X11/Xlib.h 

#define XNHotKeyState "hotKeyState"


// /usr/lib64/gcc/x86_64-suse-linux/4.8/include/stddef.h 

#define _PTRDIFF_T_ 


// /usr/include/X11/X.h 

#define TileShape (1)


// /usr/include/X11/Xlib.h 

#define PlanesOfScreen(s) ( ( s ) -> root_depth )


// /usr/include/X11/X.h 

#define CWBorderWidth (16)


// /usr/include/X11/Xlib.h 

#define RootWindow(dpy, scr) ( ScreenOfDisplay ( dpy , scr ) -> root )
#define XIMPreeditUnKnown (0l)


// /usr/lib64/gcc/x86_64-suse-linux/4.8/include/stddef.h 

#define _T_PTRDIFF 


// /usr/include/X11/X.h 

#define CWBorderPixmap (4l)


// /usr/include/X11/Xlib.h 

#define XNFontSet "fontSet"


// /usr/include/X11/X.h 

#define BadMatch (8)
#define CWWidth (4)
#define GCFont (16384l)


// /usr/lib64/gcc/x86_64-suse-linux/4.8/include/stddef.h 

#define _WCHAR_T_DEFINED_ 


// /usr/include/X11/Xlib.h 

#define XIMVisibleToBackword (512l)


// /usr/include/X11/X.h 

#define PointerMotionMask (64l)
#define CirculateNotify (26)
#define VisibilityChangeMask (65536l)


// /usr/include/X11/Xlib.h 

#define DefaultRootWindow(dpy) ( ScreenOfDisplay ( dpy , DefaultScreen ( dpy ) ) -> root )


// /usr/include/X11/X.h 

#define AsyncKeyboard (3)
#define ColormapUninstalled (0)
#define Button3Mask (1024)
#define OwnerGrabButtonMask (16777216l)
#define VisibilityPartiallyObscured (1)
#define GCFillRule (512l)
#define NotifyNormal (0)
#define CWStackMode (64)


// /usr/include/X11/Xlib.h 

#define ScreenOfDisplay(dpy, scr) ( & ( ( _XPrivDisplay ) dpy ) -> screens [ scr ] )


// /usr/include/X11/X.h 

#define _XTYPEDEF_ATOM 


// /usr/include/X11/Xlib.h 

#define XNFontInfo "fontInfo"


// /usr/include/X11/X.h 

#define PropModePrepend (1)
#define EnterWindowMask (16l)
#define EastGravity (6)
#define StaticGray (0)


// /usr/include/X11/Xlib.h 

#define WhitePixelOfScreen(s) ( ( s ) -> white_pixel )
#define QueuedAfterReading (1)


// /usr/lib64/gcc/x86_64-suse-linux/4.8/include/stddef.h 

#define _GCC_WCHAR_T 


// /usr/include/X11/X.h 

#define CWBackingStore (64l)
#define KBAutoRepeatMode (128l)


// /usr/include/X11/Xlib.h 

#define DisplayWidth(dpy, scr) ( ScreenOfDisplay ( dpy , scr ) -> width )


// /usr/include/X11/X.h 

#define CWBorderPixel (8l)
#define NorthGravity (2)
#define X_H 


// /usr/include/X11/Xlib.h 

#define HeightOfScreen(s) ( ( s ) -> height )


// /usr/include/X11/X.h 

#define GXnand (14)


// /usr/include/X11/Xlib.h 

#define XIMInitialState (1l)
#define XBufferOverflow (-1)


// /usr/include/X11/X.h 

#define Button3 (3)
#define Convex (2)


// /usr/include/X11/Xlib.h 

#define XIMPreserveState (2l)


// /usr/include/X11/X.h 

#define NotifyAncestor (0)
#define GCTile (1024l)


// /usr/include/X11/Xlib.h 

#define XNContextualDrawing "contextualDrawing"
#define XNQueryIMValuesList "queryIMValuesList"


// /usr/include/X11/X.h 

#define ConfigureNotify (22)


// /usr/include/X11/Xlib.h 

#define XNStatusDoneCallback "statusDoneCallback"


// /usr/include/X11/X.h 

#define AllocAll (1)


// /usr/lib64/gcc/x86_64-suse-linux/4.8/include/stddef.h 

#define _WCHAR_T_H 


// /usr/include/X11/Xlib.h 

#define DoesBackingStore(s) ( ( s ) -> backing_store )


// /usr/lib64/gcc/x86_64-suse-linux/4.8/include/stddef.h 

#define _SIZET_ 


// /usr/include/X11/X.h 

#define ArcChord (0)
#define KeyPressMask (1l)
#define MapNotify (19)


// /usr/include/X11/Xlib.h 

#define XIMStringConversionRetrieval (2)


// /usr/include/X11/X.h 

#define ButtonReleaseMask (8l)
#define PropertyChangeMask (4194304l)
#define FocusIn (9)


// /usr/include/X11/Xlib.h 

#define CellsOfScreen(s) ( DefaultVisualOfScreen ( ( s ) ) -> map_entries )


// /usr/include/X11/X.h 

#define LeaveWindowMask (32l)


// /usr/include/X11/Xlib.h 

#define False (0)
#define XIMStringConversionTopEdge (4)


// /usr/include/X11/X.h 

#define DestroyNotify (17)
#define CWBackingPlanes (128l)


// /usr/include/X11/Xlib.h 

#define XIMReverse (1l)


// /usr/include/X11/X.h 

#define WhenMapped (1)
#define BadName (15)
#define PointerWindow (0l)
#define GCStipple (2048l)


// /usr/include/X11/Xlib.h 

#define DefaultScreen(dpy) ( ( ( _XPrivDisplay ) dpy ) -> default_screen )


// /usr/include/X11/X.h 

#define NotifyHint (1)
#define BadFont (7)
#define MappingFailed (2)
#define GXequiv (9)
#define ExposureMask (32768l)
#define DisableScreenSaver (0)


// /usr/include/X11/Xlib.h 

#define XNFilterEvents "filterEvents"


// /usr/include/X11/X.h 

#define FillTiled (1)
#define GXorInverted (13)
#define BadLength (16)


// /usr/include/X11/Xlib.h 

#define XNLineSpace "lineSpace"
#define XIMStringConversionBottomEdge (8)


// /usr/include/X11/X.h 

#define FillSolid (0)


// /usr/include/X11/Xlib.h 

#define DefaultDepth(dpy, scr) ( ScreenOfDisplay ( dpy , scr ) -> root_depth )


// /usr/include/X11/X.h 

#define NotifyPointer (5)


// /usr/include/X11/Xlib.h 

#define BitmapPad(dpy) ( ( ( _XPrivDisplay ) dpy ) -> bitmap_pad )


// /usr/include/X11/X.h 

#define LockMask (2)


// /usr/include/X11/Xlib.h 

#define XIMStringConversionWord (3)


// /usr/include/X11/X.h 

#define InputOnly (2)


// /usr/lib64/gcc/x86_64-suse-linux/4.8/include/stddef.h 

#define __WCHAR_T 


// /usr/include/X11/X.h 

#define ResizeRedirectMask (262144l)
#define AllTemporary (0l)
#define AsyncPointer (0)


// /usr/include/X11/Xlib.h 

#define ServerVendor(dpy) ( ( ( _XPrivDisplay ) dpy ) -> vendor )


// /usr/include/X11/X.h 

#define NotifyPointerRoot (6)


// /usr/lib64/gcc/x86_64-suse-linux/4.8/include/stddef.h 

#define _SIZE_T_ 


// /usr/include/X11/Xlib.h 

#define XIMHighlight (4l)


// /usr/lib64/gcc/x86_64-suse-linux/4.8/include/stddef.h 

#define _T_WCHAR_ 


// /usr/include/X11/Xlib.h 

#define XNResetState "resetState"
#define XIMPreeditArea (1l)


// /usr/include/X11/X.h 

#define RevertToParent (2)
#define Mod1Mask (8)
#define NotifyGrab (1)


// /usr/include/X11/Xlib.h 

#define RootWindowOfScreen(s) ( ( s ) -> root )


// /usr/include/X11/X.h 

#define GCArcMode (4194304l)
#define StippleShape (2)


// /usr/lib64/gcc/x86_64-suse-linux/4.8/include/stddef.h 

#define __size_t__ 
#define _ANSI_STDDEF_H 


// /usr/include/X11/X.h 

#define Button3MotionMask (1024l)
#define Button1Mask (256)
#define VisibilityNotify (15)
#define AllowExposures (1)


// /usr/include/X11/Xlib.h 

#define X_HAVE_UTF8_STRING (1)
#define AllPlanes ( ( unsigned long ) ~ 0L )


// /usr/include/X11/X.h 

#define KBKeyClickPercent (1l)


// /usr/lib64/gcc/x86_64-suse-linux/4.8/include/stddef.h 

#define __wchar_t__ 


// /usr/include/X11/X.h 

#define ClientMessage (33)
#define Button4 (4)
#define FamilyServerInterpreted (5)


// /usr/include/X11/Xlib.h 

#define XNOMAutomatic "omAutomatic"
#define DisplayCells(dpy, scr) ( DefaultVisual ( dpy , scr ) -> map_entries )


// /usr/include/X11/X.h 

#define LeaveNotify (8)


// /usr/include/X11/Xlib.h 

#define BitmapUnit(dpy) ( ( ( _XPrivDisplay ) dpy ) -> bitmap_unit )


// /usr/include/X11/X.h 

#define AutoRepeatModeDefault (2)
#define CapRound (2)


// /usr/lib64/gcc/x86_64-suse-linux/4.8/include/stddef.h 

#define _GCC_SIZE_T 


// /usr/include/X11/X.h 

#define BadValue (2)
#define BadPixmap (4)


// /usr/include/X11/Xlib.h 

#define XIMStatusCallbacks (512l)


// /usr/include/X11/X.h 

#define GXor (7)
#define ConfigureRequest (23)
#define GCPlaneMask (2l)
#define LineDoubleDash (2)
#define GCTileStipXOrigin (4096l)
#define GCLastBit (22)
#define UnmapGravity (0)


// /usr/include/X11/Xlib.h 

#define DefaultVisualOfScreen(s) ( ( s ) -> root_visual )


// /usr/include/X11/X.h 

#define PointerRoot (1l)
#define _XTYPEDEF_MASK 


// /usr/include/X11/Xlib.h 

#define XNPreeditCaretCallback "preeditCaretCallback"


// /usr/lib64/gcc/x86_64-suse-linux/4.8/include/stddef.h 

#define _SIZE_T_DEFINED 


// /usr/include/X11/X.h 

#define YSorted (1)


// /usr/include/X11/Xlib.h 

#define XNResourceClass "resourceClass"
#define XNClientWindow "clientWindow"


// /usr/include/X11/X.h 

#define BadDrawable (9)
#define ReparentNotify (21)


// /usr/include/X11/Xlib.h 

#define XNGeometryCallback "geometryCallback"


// /usr/include/X11/X.h 

#define Button5Mask (4096)


// /usr/include/X11/Xlib.h 

#define DefaultDepthOfScreen(s) ( ( s ) -> root_depth )
#define XNVisiblePosition "visiblePosition"


// /usr/include/X11/X.h 

#define CWCursor (16384l)


// /usr/include/X11/Xlib.h 

#define XNHotKey "hotKey"


// /usr/include/X11/X.h 

#define NotifyVirtual (1)


// /usr/include/X11/Xlib.h 

#define Status int
#define XIMStringConversionLine (2)
#define XNArea "area"


// /usr/include/X11/X.h 

#define CWOverrideRedirect (512l)
#define GCCapStyle (64l)
#define NorthEastGravity (3)


// /usr/include/X11/Xlib.h 

#define XLookupBoth (4)


// /usr/include/X11/X.h 

#define MappingModifier (0)
#define GXset (15)
#define FamilyInternet (0)
#define ButtonPress (4)
#define LineSolid (0)


// /usr/include/X11/Xlib.h 

#define XNDefaultString "defaultString"


// /usr/include/X11/X.h 

#define KBBellDuration (8l)
#define Mod3Mask (32)


// /usr/include/X11/Xlib.h 

#define XNPreeditStartCallback "preeditStartCallback"


// /usr/include/X11/X.h 

#define FamilyInternet6 (6)
#define CWColormap (8192l)
#define CreateNotify (16)


// /usr/include/X11/Xlib.h 

#define ConnectionNumber(dpy) ( ( ( _XPrivDisplay ) dpy ) -> fd )


// /usr/include/X11/X.h 

#define SetModeDelete (1)
#define ResizeRequest (25)
#define RetainTemporary (2)
#define GCClipXOrigin (131072l)


// /usr/include/X11/Xlib.h 

#define DisplayPlanes(dpy, scr) ( ScreenOfDisplay ( dpy , scr ) -> root_depth )


// /usr/include/X11/X.h 

#define LineOnOffDash (1)
#define _XTYPEDEF_XID 


// /usr/include/X11/Xlib.h 

#define WhitePixel(dpy, scr) ( ScreenOfDisplay ( dpy , scr ) -> white_pixel )


// /usr/include/X11/X.h 

#define AnyModifier (32768)


// /usr/include/X11/Xlib.h 

#define XNDestroyCallback "destroyCallback"
#define XNOrientation "orientation"


// /usr/include/X11/X.h 

#define VisibilityUnobscured (0)


// /usr/include/X11/Xlib.h 

#define HeightMMOfScreen(s) ( ( s ) -> mheight )


// /usr/include/X11/X.h 

#define CapButt (1)
#define MappingSuccess (0)
#define ColormapInstalled (1)


// /usr/include/X11/Xlib.h 

#define XNStatusAttributes "statusAttributes"


// /usr/include/X11/X.h 

#define DoBlue (4)
#define Expose (12)
#define CWBackPixmap (1l)
#define MSBFirst (1)


// /usr/include/X11/Xlib.h 

#define ProtocolVersion(dpy) ( ( ( _XPrivDisplay ) dpy ) -> proto_major_version )


// /usr/lib64/gcc/x86_64-suse-linux/4.8/include/stddef.h 

#define __SIZE_T 


// /usr/include/X11/Xlib.h 

#define XIMPreeditCallbacks (2l)


// /usr/include/X11/X.h 

#define StructureNotifyMask (131072l)
#define TopIf (2)


// /usr/include/X11/Xlib.h 

#define XNPreeditAttributes "preeditAttributes"


// /usr/include/X11/X.h 

#define _XTYPEDEF_FONT 
#define ShiftMapIndex (0)
#define Nonconvex (1)
#define GrabNotViewable (3)
#define LedModeOff (0)


// /usr/include/X11/Xlib.h 

#define XNAreaNeeded "areaNeeded"


// /usr/include/X11/X.h 

#define GCLineWidth (16l)
#define Button4Mask (2048)
#define NotifyInferior (2)


// /usr/lib64/gcc/x86_64-suse-linux/4.8/include/stddef.h 

#define _T_WCHAR 


// /usr/include/X11/X.h 

#define PropertyDelete (1)
#define DisableScreenInterval (0)
#define EnableAccess (1)
#define BadRequest (1)


// /usr/include/X11/Xlib.h 

#define ScreenCount(dpy) ( ( ( _XPrivDisplay ) dpy ) -> nscreens )
#define MinCmapsOfScreen(s) ( ( s ) -> min_maps )


// /usr/lib64/gcc/x86_64-suse-linux/4.8/include/stddef.h 

#define __INT_WCHAR_T_H 
#define _WCHAR_T_DEFINED 


// /usr/include/X11/X.h 

#define WindingRule (1)
#define Button2 (2)
#define CirculateRequest (27)
#define IsViewable (2)
#define GrayScale (1)
#define ScreenSaverReset (0)
#define BadGC (13)


// /usr/include/X11/Xlib.h 

#define XNQueryInputStyle "queryInputStyle"


// /usr/include/X11/X.h 

#define Button5MotionMask (4096l)
#define GCFunction (1l)
#define DontPreferBlanking (0)


// /usr/include/X11/Xlib.h 

#define QueuedAfterFlush (2)


// /usr/include/X11/X.h 

#define GrabInvalidTime (2)


// /usr/include/X11/Xlib.h 

#define XIMStringConversionChar (4)
#define XIMPreeditNone (16l)


// /usr/include/X11/X.h 

#define Button1MotionMask (256l)
#define GCBackground (8l)


// /usr/lib64/gcc/x86_64-suse-linux/4.8/include/stddef.h 

#define _WCHAR_T_ 


// /usr/include/X11/X.h 

#define AsyncBoth (6)
#define TrueColor (4)
#define UnmapNotify (18)


// /usr/lib64/gcc/x86_64-suse-linux/4.8/include/stddef.h 

#define ___int_size_t_h 


// /usr/include/X11/X.h 

#define MotionNotify (6)


// /usr/include/X11/Xlib.h 

#define XNPreeditState "preeditState"


// /usr/include/X11/X.h 

#define CoordModeOrigin (0)
#define GrabFrozen (4)


// /usr/include/X11/Xlib.h 

#define VendorRelease(dpy) ( ( ( _XPrivDisplay ) dpy ) -> release )
#define DefaultGC(dpy, scr) ( ScreenOfDisplay ( dpy , scr ) -> default_gc )


// /usr/include/X11/X.h 

#define Mod2Mask (16)
#define GCJoinStyle (128l)
#define PropModeReplace (0)


// /usr/include/X11/Xlib.h 

#define XNPreeditDoneCallback "preeditDoneCallback"
#define WidthOfScreen(s) ( ( s ) -> width )


// /usr/include/X11/X.h 

#define ReplayPointer (2)
#define CurrentTime (0l)
#define FocusChangeMask (2097152l)
#define GXandReverse (2)
#define KBKey (64l)
#define GXand (1)
#define GCForeground (4l)
#define DisableAccess (0)
#define PropertyNotify (28)


// /usr/include/X11/Xlib.h 

#define XNBackgroundPixmap "backgroundPixmap"
#define XIMStringConversionWrapped (32)


// /usr/lib64/gcc/x86_64-suse-linux/4.8/include/stddef.h 

#define NULL ( ( void * ) 0 )


// /usr/include/X11/Xlib.h 

#define BitmapBitOrder(dpy) ( ( ( _XPrivDisplay ) dpy ) -> bitmap_bit_order )


// /usr/include/X11/X.h 

#define DirectColor (5)
#define CWSibling (32)
#define NotUseful (0)


// /usr/lib64/gcc/x86_64-suse-linux/4.8/include/stddef.h 

#define _WCHAR_T_DECLARED 


// /usr/include/X11/Xlib.h 

#define XNColormap "colorMap"
#define XIMPrimary (32l)


// /usr/lib64/gcc/x86_64-suse-linux/4.8/include/stddef.h 

#define __size_t 


// /usr/include/X11/Xlib.h 

#define XNQueryICValuesList "queryICValuesList"
#define XIMStatusArea (256l)


// /usr/include/X11/X.h 

#define Button1 (1)
#define Mod4MapIndex (6)
#define CWBackingPixel (256l)
#define KeymapNotify (11)
#define Success (0)


// /usr/include/X11/Xlib.h 

#define XNVaNestedList "XNVaNestedList"


// /usr/include/X11/X.h 

#define FontRightToLeft (1)
#define BadAtom (5)
#define PreferBlanking (1)
#define X_PROTOCOL_REVISION (0)
#define RevertToPointerRoot ( int ) PointerRoot
#define KeyRelease (3)


// /usr/include/X11/Xlib.h 

#define XNSeparatorofNestedList "separatorofNestedList"


// /usr/include/X11/X.h 

#define FocusOut (10)
#define DefaultExposures (2)


// /usr/lib64/gcc/x86_64-suse-linux/4.8/include/stddef.h 

#define _GCC_PTRDIFF_T 


// /usr/include/X11/X.h 

#define HostDelete (1)


// /usr/include/X11/Xlib.h 

#define XIMSecondary (64l)


// /usr/include/X11/X.h 

#define FontChange (255)
#define GXnor (8)


// /usr/include/X11/Xlib.h 

#define XNRequiredCharSet "requiredCharSet"
#define XLookupChars (2)


// /usr/include/X11/X.h 

#define PseudoColor (3)
#define FirstExtensionError (128)


// /usr/include/X11/Xlib.h 

#define XNStringConversionCallback "stringConversionCallback"


// /usr/include/X11/X.h 

#define CapNotLast (0)
#define Unsorted (0)
#define KBLedMode (32l)
#define FontLeftToRight (0)
#define CoordModePrevious (1)
#define None (0l)
#define NoExpose (14)
#define SyncKeyboard (4)
#define CWX (1)


// /usr/lib64/gcc/x86_64-suse-linux/4.8/include/stddef.h 

#define _T_SIZE_ 


// /usr/include/X11/X.h 

#define GXxor (6)
#define PropertyNewValue (0)
#define PlaceOnTop (0)
#define DoRed (1)


// /usr/include/X11/Xlib.h 

#define EventMaskOfScreen(s) ( ( s ) -> root_input_mask )


// /usr/include/X11/X.h 

#define EnterNotify (7)


// /usr/include/X11/Xlib.h 

#define XNStdColormap "stdColorMap"
#define XIMPreeditDisable (2l)
#define XNStringConversion "stringConversion"
#define DisplayString(dpy) ( ( ( _XPrivDisplay ) dpy ) -> display_name )


// /usr/lib64/gcc/x86_64-suse-linux/4.8/include/stddef.h 

#define _STDDEF_H_ 


// /usr/include/X11/X.h 

#define IncludeInferiors (1)
#define Above (0)
#define ColormapChangeMask (8388608l)


// /usr/include/X11/Xlib.h 

#define DefaultVisual(dpy, scr) ( ScreenOfDisplay ( dpy , scr ) -> root_visual )


// /usr/include/X11/X.h 

#define Mod1MapIndex (3)
#define GCDashOffset (1048576l)
#define PointerMotionHintMask (128l)
#define KBBellPercent (2l)
#define CWWinGravity (32l)
#define Mod3MapIndex (5)


// /usr/include/X11/Xlib.h 

#define XNQueryOrientation "queryOrientation"


// /usr/include/X11/X.h 

#define LASTEvent (36)
#define GraphicsExpose (13)
#define NotifyDetailNone (7)
#define SouthGravity (8)
#define FillOpaqueStippled (3)
#define JoinMiter (0)
#define ArcPieSlice (1)
#define BottomIf (3)


// /usr/include/X11/Xlib.h 

#define QueuedAlready (0)


// /usr/include/X11/X.h 

#define GenericEvent (35)
#define GXinvert (10)


// /usr/include/X11/Xlib.h 

#define XLookupNone (1)


// /usr/include/X11/X.h 

#define PlaceOnBottom (1)
#define YXBanded (3)
#define DefaultBlanking (2)


// /usr/include/X11/Xlib.h 

#define XIMUnderline (2l)


// /usr/include/X11/X.h 

#define BadWindow (3)
#define GXclear (0)
#define SelectionNotify (31)
#define BadAlloc (11)
#define ForgetGravity (0)
#define AlreadyGrabbed (1)
#define DestroyAll (0)
#define ZPixmap (2)
#define MappingKeyboard (1)
#define SouthWestGravity (7)
#define RetainPermanent (1)


// /usr/include/X11/Xlib.h 

#define XIMPreeditEnable (1l)


// /usr/include/X11/X.h 

#define WestGravity (4)
#define SyncPointer (1)


// /usr/lib64/gcc/x86_64-suse-linux/4.8/include/stddef.h 

#define ___int_wchar_t_h 
#define _T_PTRDIFF_ 


// /usr/include/X11/X.h 

#define BadCursor (6)


// /usr/include/X11/Xlib.h 

#define BlackPixelOfScreen(s) ( ( s ) -> black_pixel )
#define XNMissingCharSet "missingCharSet"


// /usr/include/X11/X.h 

#define NorthWestGravity (1)


// /usr/lib64/gcc/x86_64-suse-linux/4.8/include/stddef.h 

#define __PTRDIFF_T 


// /usr/include/X11/X.h 

#define GCTileStipYOrigin (8192l)


// /usr/include/X11/Xlib.h 

#define DoesSaveUnders(s) ( ( s ) -> save_unders )


// /usr/include/X11/X.h 

#define ColormapNotify (32)


// /usr/include/X11/Xlib.h 

#define XIMPreeditPosition (4l)
#define DefaultGCOfScreen(s) ( ( s ) -> default_gc )
#define XIMVisibleToForward (256l)


// /usr/include/X11/X.h 

#define Mod2MapIndex (4)
#define LedModeOn (1)
#define RaiseLowest (0)


// /usr/include/X11/Xlib.h 

#define XIMStatusNothing (1024l)
#define ProtocolRevision(dpy) ( ( ( _XPrivDisplay ) dpy ) -> proto_minor_version )


// /usr/include/X11/X.h 

#define Always (2)
#define SubstructureNotifyMask (524288l)


// /usr/include/X11/Xlib.h 

#define LastKnownRequestProcessed(dpy) ( ( ( _XPrivDisplay ) dpy ) -> last_request_read )
#define ImageByteOrder(dpy) ( ( ( _XPrivDisplay ) dpy ) -> byte_order )


// /usr/include/X11/X.h 

#define LSBFirst (0)


// /usr/include/X11/Xlib.h 

#define XIMStringConversionBuffer (1)


// /usr/include/X11/X.h 

#define BadIDChoice (14)
#define ButtonRelease (5)


// /usr/include/X11/Xlib.h 

#define _X11_XLIB_H_ 


// /usr/include/X11/X.h 

#define SyncBoth (7)
#define Below (1)


// /usr/lib64/gcc/x86_64-suse-linux/4.8/include/stddef.h 

#define _T_SIZE 
#define offsetof(TYPE, MEMBER) __builtin_offsetof ( TYPE , MEMBER )


// /usr/include/X11/Xlib.h 

#define XLookupKeySym (3)
#define True (1)


// /usr/include/X11/X.h 

#define Mod5Mask (128)
#define GCSubwindowMode (32768l)


// /usr/include/X11/Xlib.h 

#define XlibSpecificationRelease (6)


// /usr/include/X11/X.h 

#define BadImplementation (17)
#define BadColor (12)


// /usr/include/X11/Xlib.h 

#define XNForeground "foreground"
#define XIMTertiary (128l)
#define XNBaseFontName "baseFontName"
#define XNStatusStartCallback "statusStartCallback"


// /usr/include/X11/X.h 

#define InputFocus (1l)


// /usr/include/X11/Xlib.h 

#define XIMStringConversionSubstitution (1)
#define XNCursor "cursor"


// /usr/include/X11/X.h 

#define Button5 (5)
#define GrabModeAsync (1)
#define CapProjecting (3)
#define CWY (2)
#define GXandInverted (4)


// /usr/lib64/gcc/x86_64-suse-linux/4.8/include/stddef.h 

#define _BSD_PTRDIFF_T_ 


// /usr/include/X11/X.h 

#define AnyPropertyType (0l)


// /usr/lib64/gcc/x86_64-suse-linux/4.8/include/stddef.h 

#define _STDDEF_H 


// /usr/include/X11/X.h 

#define YXSorted (2)
#define GXcopy (3)
#define DoGreen (2)
#define GCFillStyle (256l)
#define ControlMask (4)
#define Complex (0)
#define Button4MotionMask (2048l)


// /usr/include/X11/Xlib.h 

#define Bool int


// /usr/include/X11/X.h 

#define FamilyDECnet (1)
#define NotifyNonlinearVirtual (4)


// /usr/include/X11/Xlib.h 

#define MaxCmapsOfScreen(s) ( ( s ) -> max_maps )
#define XNBackground "background"


// /usr/include/X11/X.h 

#define IsUnviewable (1)


// /usr/include/X11/Xlib.h 

#define XNDirectionalDependentDrawing "directionalDependentDrawing"
#define DisplayHeightMM(dpy, scr) ( ScreenOfDisplay ( dpy , scr ) -> mheight )


// /usr/include/X11/X.h 

#define BadAccess (10)


// /usr/include/X11/Xlib.h 

#define WidthMMOfScreen(s) ( ( s ) -> mwidth )


// /usr/include/X11/X.h 

#define ButtonPressMask (4l)
#define SetModeInsert (0)


// /usr/include/X11/Xlib.h 

#define XNSpotLocation "spotLocation"


// /usr/include/X11/X.h 

#define KeyPress (2)
#define Mod4Mask (64)
#define GCLineStyle (32l)
#define CWHeight (8)


// /usr/include/X11/Xlib.h 

#define XNR6PreeditCallback "r6PreeditCallback"


// /usr/include/X11/X.h 

#define KBLed (16l)


// /usr/include/X11/Xlib.h 

#define DefaultColormapOfScreen(s) ( ( s ) -> cmap )


// /usr/include/X11/X.h 

#define MappingNotify (34)


// /usr/include/X11/Xlib.h 

#define XIMStringConversionConcealed (16)
#define QLength(dpy) ( ( ( _XPrivDisplay ) dpy ) -> qlen )


// /usr/include/X11/X.h 

#define VisibilityFullyObscured (2)


// /usr/lib64/gcc/x86_64-suse-linux/4.8/include/stddef.h 

#define _SIZE_T 


// /usr/include/X11/X.h 

#define JoinBevel (2)


// /usr/lib64/gcc/x86_64-suse-linux/4.8/include/stddef.h 

#define __SIZE_T__ 


// /usr/include/X11/X.h 

#define IsUnmapped (0)
#define GCGraphicsExposures (65536l)


// /usr/include/X11/Xlib.h 

#define DisplayOfScreen(s) ( ( s ) -> display )
#define XIMHotKeyStateOFF (2l)


// /usr/include/X11/X.h 

#define SelectionRequest (30)


// /usr/include/X11/Xlib.h 

#define XNPreeditDrawCallback "preeditDrawCallback"


// /usr/include/X11/X.h 

#define Opposite (4)
#define NoSymbol (0l)


// /usr/include/X11/Xlib.h 

#define DefaultScreenOfDisplay(dpy) ScreenOfDisplay ( dpy , DefaultScreen ( dpy ) )
#define XNResourceName "resourceName"
#define DefaultColormap(dpy, scr) ( ScreenOfDisplay ( dpy , scr ) -> cmap )
#define DisplayHeight(dpy, scr) ( ScreenOfDisplay ( dpy , scr ) -> height )


// /usr/include/X11/X.h 

#define ControlMapIndex (2)
#define HostInsert (0)
#define GrabSuccess (0)
#define GCDashList (2097152l)
#define AnyButton (0l)
#define ButtonMotionMask (8192l)


// /usr/lib64/gcc/x86_64-suse-linux/4.8/include/stddef.h 

#define _SIZE_T_DEFINED_ 


// /usr/include/X11/X.h 

#define NotifyUngrab (2)
#define XYPixmap (1)


// /usr/lib64/gcc/x86_64-suse-linux/4.8/include/stddef.h 

#define _PTRDIFF_T 
#define _SIZE_T_DECLARED 


// /usr/include/X11/X.h 

#define StaticGravity (10)
#define CWDontPropagate (4096l)
#define CopyFromParent (0l)
#define MappingBusy (1)
#define SouthEastGravity (9)
#define StaticColor (2)


// /usr/include/X11/Xlib.h 

#define XIMPreeditNothing (8l)
#define XNInputStyle "inputStyle"


// /usr/lib64/gcc/x86_64-suse-linux/4.8/include/stddef.h 

#define ___int_ptrdiff_t_h 


// /usr/include/X11/X.h 

#define KBBellPitch (4l)


// /usr/include/X11/Xlib.h 

#define XNFocusWindow "focusWindow"


// /usr/include/X11/X.h 

#define X_PROTOCOL (11)


// /usr/lib64/gcc/x86_64-suse-linux/4.8/include/stddef.h 

#define _BSD_SIZE_T_ 


// /usr/include/X11/X.h 

#define LastExtensionError (255)
#define CursorShape (0)
